{"buggy_code": ["<?php\n\n/**\n * This is the model class for table \"{{surveys_groups}}\".\n *\n * The followings are the available columns in table '{{surveys_groups}}':\n * @property integer $gsid\n * @property string $name\n * @property string $title\n * @property string $description\n * @property integer $sortorder\n * @property integer $owner_id\n * @property integer $parent_id\n * @property string $created\n * @property string $modified\n * @property integer $created_by\n * @property object $parentgroup\n * @property boolean $hasSurveys\n */\nclass SurveysGroups extends LSActiveRecord\n{\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{surveys_groups}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('name, sortorder, created_by, title', 'required'),\n            array('sortorder, owner_id, parent_id, created_by', 'numerical', 'integerOnly'=>true),\n            array('name', 'length', 'max'=>45),\n            array('name', 'match', 'pattern'=> '/^[A-Za-z0-9_\\.]+$/u','message'=> gT('Group name can contain only alphanumeric character, underscore or dot.')),\n            array('title', 'length', 'max'=>100),\n            array('description, created, modified', 'safe'),\n            array('title, name, description', 'LSYii_Validators'),\n            // The following rule is used by search().\n            // @todo Please remove those attributes that should not be searched.\n            array('gsid, name, title, description, owner_id, parent_id, created, modified, created_by', 'safe', 'on'=>'search'),\n        );\n    }\n\n    /**\n     * @return array relational rules.\n     */\n    public function relations()\n    {\n        // NOTE: you may need to adjust the relation name and the related\n        // class name for the relations automatically generated below.\n        return array(\n            'parentgroup' => array(self::BELONGS_TO, 'SurveysGroups', array('parent_id' => 'gsid'), 'together' => true),\n            'owner'       => array(self::BELONGS_TO, 'User', 'owner_id', 'together' => true),\n        );\n    }\n\n    /**\n     * @return array customized attribute labels (name=>label)\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'gsid'        => gT('ID'),\n            'name'        => gT('Name'),\n            'title'       => gT('Title'),\n            'description' => gT('Description'),\n            'sortorder'   => gT('Sort order'),\n            'owner_id'   => gT('Owner UID'),\n            'parent_id'   => gT('Parent group'),\n            'created'     => gT('Created on'),\n            'modified'    => gT('Modified on'),\n            'created_by'  => gT('Created by'),\n        );\n    }\n\n    public function getColumns()\n    {\n        return array(\n\n                array(\n                    'id'=>'gsid',\n                    'class'=>'CCheckBoxColumn',\n                    'selectableRows' => '100',\n                ),\n\n                array(\n                    'header' => gT('Survey group ID'),\n                    'name' => 'gsid',\n                    'value'=>'CHtml::link($data->gsid, Yii::app()->createUrl(\"admin/surveysgroups/sa/update/\",array(\"id\"=>$data->gsid)))',\n                    'type'=>'raw',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Name'),\n                    'name' => 'name',\n                    'value'=>'CHtml::link($data->name, Yii::app()->createUrl(\"admin/surveysgroups/sa/update/\",array(\"id\"=>$data->gsid)))',\n                    'type'=>'raw',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Title'),\n                    'name' => 'title',\n                    'value'=>'$data->title',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Description'),\n                    'name' => 'description',\n                    'value'=>'$data->description',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Parent group'),\n                    'name' => 'parent',\n                    'value'=>'$data->parentTitle',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Owner'),\n                    'name' => 'owner',\n                    'value'=>'!empty($data->owner) ? $data->owner->users_name : \"\"',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Order'),\n                    'name' => 'sortorder',\n                    'value'=>'$data->sortorder',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n\n                array(\n                    'header' => gT('Actions'),\n                    'name' => 'sortorder',\n                    'type' => 'raw',\n                    'value'=> '$data->buttons',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n            );\n    }\n\n    /**\n     * Retrieves a list of models based on the current search/filter conditions.\n     *\n     * Typical usecase:\n     * - Initialize the model fields with values from filter form.\n     * - Execute this method to get CActiveDataProvider instance which will filter\n     * models according to data in model fields.\n     * - Pass data provider to CGridView, CListView or any similar widget.\n     *\n     * @return CActiveDataProvider the data provider that can return the models\n     * based on the search/filter conditions.\n     */\n    public function search()\n    {\n        // @todo Please modify the following code to remove attributes that should not be searched.\n\n        $criteria = new CDbCriteria;\n\n        $criteria->select = array('DISTINCT t.*');\n\n        $criteria->compare('gsid', $this->gsid);\n        $criteria->compare('name', $this->name, true);\n        $criteria->compare('title', $this->title, true);\n        $criteria->compare('description', $this->description, true);\n        $criteria->compare('sortorder', $this->sortorder);\n        $criteria->compare('owner_id', $this->owner_id);\n        $criteria->compare('parent_id', $this->parent_id);\n        $criteria->compare('created', $this->created, true);\n        $criteria->compare('modified', $this->modified, true);\n        $criteria->compare('created_by', $this->created_by);\n\n        // Permission\n        // Note: reflect Permission::hasPermission\n        if (!Permission::model()->hasGlobalPermission(\"surveys\", 'read')) {\n            $criteriaPerm = new CDbCriteria;\n\n            // Multiple ON conditions with string values such as 'survey'\n            $criteriaPerm->mergeWith(array(\n                'join'=>\"LEFT JOIN {{surveys}} AS surveys ON (surveys.gsid = t.gsid)\n                        LEFT JOIN {{permissions}} AS permissions ON (permissions.entity_id = surveys.sid AND permissions.permission='survey' AND permissions.entity='survey' AND permissions.uid='\".Yii::app()->user->id.\"') \",\n            ));\n\n            $criteriaPerm->compare('t.owner_id', Yii::app()->user->id, false);\n            $criteriaPerm->compare('surveys.owner_id', Yii::app()->user->id, false, 'OR');\n            $criteriaPerm->compare('permissions.read_p', '1', false, 'OR');\n            $criteriaPerm->compare('t.gsid', '1', false, 'OR');  // \"default\" survey group\n            $criteria->mergeWith($criteriaPerm, 'AND');\n        }\n\n        $dataProvider = new CActiveDataProvider($this, array(\n            'criteria'=>$criteria,\n        ));\n\n        $dataProvider->setTotalItemCount(count($dataProvider->getData()));\n\n        return $dataProvider;\n    }\n\n    public function getParentTitle()\n    {\n        // \"(gsid: \".$data->parent_id.\")\".\" \".$data->parentgroup->title,\n        if (empty($this->parent_id)) {\n            return \"\";\n        } else {\n            return $this->parentgroup->title;\n        }\n    }\n\n    /**\n     * Returns true if survey group has surveys\n     * @return boolean\n     */\n    public function getHasSurveys()\n    {\n        $nbSurvey = Survey::model()->countByAttributes(array(\"gsid\"=>$this->gsid));\n        return $nbSurvey > 0;\n    }\n\n    /**\n     * Returns true if survey group has child survey groups\n     * @return boolean\n     */\n    public function getHasChildGroups()\n    {\n        $nbSurvey = SurveysGroups::model()->countByAttributes(array(\"parent_id\"=>$this->gsid));\n        return $nbSurvey > 0;\n    }\n\n\n    public function getAllParents($bOnlyGsid=false)\n    {\n        $aParents = array();\n        $oRSurveyGroup = $this;\n        while (!empty($oRSurveyGroup->parent_id)){\n            $oRSurveyGroup =  SurveysGroups::model()->findByPk($oRSurveyGroup->parent_id);\n            $aParents[] = ($bOnlyGsid)?$oRSurveyGroup->gsid:$oRSurveyGroup;\n        }\n\n        return $aParents;\n    }\n\n\n\n    /**\n     * @return string\n     */\n    public function getButtons()\n    {\n        $sDeleteUrl     = App()->createUrl(\"admin/surveysgroups/sa/delete\", array(\"id\"=>$this->gsid));\n        $sEditUrl = App()->createUrl(\"admin/surveysgroups/sa/update\", array(\"id\"=>$this->gsid));\n        $sSurveySettingsUrl = App()->createUrl(\"admin/surveysgroups/sa/surveysettings\", array(\"id\"=>$this->gsid));\n        $button         = '';\n\n        if (!$this->gsid != 1) {\n            $button .= '<a class=\"btn btn-default\" href=\"'.$sEditUrl.'\" role=\"button\" data-toggle=\"tooltip\" title=\"'.gT('Edit survey group').'\"><i class=\"fa fa-edit\" ></i><span class=\"sr-only\">'.gT('Edit survey group').'</span></a>';\n        }\n        $button .= '<a class=\"btn btn-default\" href=\"'.$sSurveySettingsUrl.'\" role=\"button\" data-toggle=\"tooltip\" title=\"'.gT('Survey settings').'\"><i class=\"fa fa-cog\" ></i><span class=\"sr-only\">'.gT('Survey settings').'</span></a>';\n        if (!$this->hasSurveys) {\n            $button .= '<a class=\"btn btn-default\" href=\"#\" data-href=\"'.$sDeleteUrl.'\" data-target=\"#confirmation-modal\" role=\"button\" data-toggle=\"modal\" data-message=\"'.gT('Do you want to continue?').'\" data-tooltip=\"true\" title=\"'.gT('Delete survey group').'\"><i class=\"fa fa-trash text-danger \"></i><span class=\"sr-only\">'.gT('Delete survey group').'</span></a>';\n        }\n\n        return $button;\n    }\n\n    public static function getSurveyGroupsList()\n    {\n        $aSurveyList = [];\n        $criteria = new CDbCriteria;\n\n        if (!Permission::model()->hasGlobalPermission(\"surveys\", 'read')) {\n            $criteria->compare('t.owner_id', Yii::app()->user->id, false);\n            $criteria->compare('t.gsid', '1', false, 'OR');  // \"default\" survey group\n        }\n\n        $oSurveyGroups = self::model()->findAll($criteria);\n\n        foreach ($oSurveyGroups as $oSurveyGroup) {\n            $aSurveyList[$oSurveyGroup->gsid] = $oSurveyGroup->title;\n        }\n\n        return $aSurveyList;\n    }\n\n    public function getNextOrderPosition()\n    {\n        $oSurveysGroups = SurveysGroups::model()->findAll();\n        return count($oSurveysGroups) + 1;\n    }\n\n    public function getParentGroupOptions($gsid = null)\n    {\n        if (!empty($gsid)){\n            $oSurveysGroups = SurveysGroups::model()->findAll('gsid != :gsid', array(':gsid' => $gsid));\n        } else {\n            $oSurveysGroups = SurveysGroups::model()->findAll();\n        }\n        $options = [\n            '' => gT('No parent menu')\n        ];\n\n\n        foreach ($oSurveysGroups as $oSurveysGroup) {\n            //$options[] = \"<option value='\".$oSurveymenu->id.\"'>\".$oSurveymenu->title.\"</option>\";\n\n            $aParentsGsid = $oSurveysGroup->getAllParents(true);\n\n            if ( ! in_array( $this->gsid, $aParentsGsid  ) ) {\n                $options[''.($oSurveysGroup->gsid).''] = '('.$oSurveysGroup->name.') '.$oSurveysGroup->title;\n            }\n        }\n        //return join('\\n',$options);\n        return $options;\n    }\n\n    /**\n     * Returns the static model of the specified AR class.\n     * Please note that you should have this exact method in all your CActiveRecord descendants!\n     * @param string $className active record class name.\n     * @return SurveysGroups the static model class\n     */\n    public static function model($className = __CLASS__)\n    {\n        /** @var self $model */\n        $model = parent::model($className);\n        return $model;\n    }\n}\n", "<?php\n/* @var $this SurveysGroupsController */\n/* @var $model SurveysGroups */\n\n$optionsOnOff = array(\n    'Y' => gT('On','unescaped'),\n    'N' => gT('Off','unescaped'),\n);\n\nYii::app()->getClientScript()->registerScript(\n    'GlobalSurveySettings', \n    \"window.GlobalSideMenuData = \".json_encode($jsData).\";\", \n    LSYii_ClientScript::POS_BEGIN\n);\n\n?>\n\n<div class=\"col-lg-12 list-surveys\">\n\n    <?php $this->renderPartial('super/fullpagebar_view', array(\n        'fullpagebar' => array(\n            'returnbutton'=>array(\n                'url'=>'admin/survey/sa/listsurveys#surveygroups',\n                'text'=>gT('Close'),\n            ),\n            'savebutton' => array(\n                'form' => 'survey-settings-options-form'\n            ),\n            'saveandclosebutton' => array(\n                'form' => 'survey-settings-options-form'\n                )\n                )\n            )); ?>\n    <h3><?php eT('Survey settings for group: '); echo '<strong><em>'.$model->title.'</strong></em>'; ?></h3>\n    <div class=\"row\">\n        <div id=\"surveySettingsForThisGroup\" style=\"display: flex; flex-wrap:nowrap;\">\n            <div id=\"global-sidebar-container\">\n                <global-sidemenu />\n            </div>\n            <div id=\"pjax-content\" class=\"tab-content col-md-10\">                \n            <div class=\"row\">\n                <div class=\"alert alert-info controls col-sm-12\" role=\"alert\">\n                    <?php eT('All changes of survey group settings will have immediate effect on all related surveys that use inherited values.'); ?>\n                </div>\n            </div>\n            <?php echo CHtml::form(array(\"admin/surveysgroups/sa/surveysettings/id/\".$oSurvey->gsid.\"/#surveySettingsGeneral\"), 'post', array('id'=>'survey-settings-options-form')); ?>    \n                <div class=\"tab-content col-md-10\">\n                <?php if($partial == '_generaloptions_panel') { ?> \n                        <div id=\"surveySettingsGeneral\" class=\"row\">\n                            <?php $this->renderPartial('survey/subview/accordion/_generaloptions_panel', array(\n                                    'oSurvey'=>$oSurvey,\n                                    'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                    'bShowInherited' => $oSurvey->showInherited,\n                                    'optionsOnOff' => $optionsOnOff,\n                                    'bShowAllOptions' => false,\n                                    'users' => $users,\n                            )); ?>\n                        </div>\n                    <?php } else if($partial == '_presentation_panel') { ?> \n                        <div id=\"surveySettingsPresentation\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_presentation_panel', array(\n                                'oSurvey'=>$oSurvey,\n                                'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                'bShowInherited' => $oSurvey->showInherited,\n                                'optionsOnOff' => $optionsOnOff\n                        )); ?>\n                        </div>\n                    <?php } else if($partial == '_tokens_panel') { ?> \n                        <div id=\"surveySettingsParticipants\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_tokens_panel', array(\n                                'oSurvey'=>$oSurvey,\n                                'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                'bShowInherited' => $oSurvey->showInherited,\n                                'optionsOnOff' => $optionsOnOff\n                        )); ?>\n                        </div>\n                    <?php } else if($partial == '_notification_panel') { ?> \n                        <div id=\"surveySettingsNotification\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_notification_panel', array(\n                                'oSurvey'=>$oSurvey,\n                                'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                'bShowInherited' => $oSurvey->showInherited,\n                                'optionsOnOff' => $optionsOnOff,\n                                'bShowAllOptions' => false,\n                            )); ?>\n                        </div>\n                    <?php } else if($partial == '_publication_panel') { ?> \n                        <div id=\"surveySettingsPublication\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_publication_panel', array(\n                                    'oSurvey'=>$oSurvey,\n                                    'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                    'bShowInherited' => $oSurvey->showInherited,\n                                    'optionsOnOff' => $optionsOnOff,\n                                    'dateformatdetails' => $aDateFormatDetails,\n                                    'bShowAllOptions' => false,\n                            )); ?>\n                        </div>\n                    <?php } ?>\n\n                    <div class=\"hidden\">\n                            <?php echo TbHtml::submitButton('Save', array('class'=>'btn btn-success col-md-2 col-sm-4', \"id\"=>\"survey-settings-options-form\")); ?>\n                    </div>\n                \n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<?php\nYii::app()->getClientScript()->registerScript( \"editLocalSettings_submit\", \"\n\n    window.LS.unrenderBootstrapSwitch();\n    window.LS.renderBootstrapSwitch();\n\n    $('#surveySettings a').click(function (e) {\n        window.location.hash = $(this).attr('href');\n        e.preventDefault();\n        $('#survey-settings-options-form').attr('action',' \".Yii::app()->getController()->createUrl('/admin/surveysgroups/sa/surveysettings/id/'.$oSurvey->gsid).\"'+window.location.hash);\n        $(this).tab('show');       \n    });\n\n    $('.text-option-inherit').on('change', function(e){\n        var newValue = $(this).find('.btn.active input').val();\n        var parent = $(this).parent().parent();\n        var inheritValue = parent.find('.inherit-edit').data('inherit-value');\n        var savedValue = parent.find('.inherit-edit').data('saved-value');\n\n        if (newValue == 'Y'){\n            parent.find('.inherit-edit').addClass('hide').removeClass('show').val(inheritValue);\n            parent.find('.inherit-readonly').addClass('show').removeClass('hide');\n        } else {\n            var inputValue = (savedValue === inheritValue) ? \\\"\\\" : savedValue;\n            parent.find('.inherit-edit').addClass('show').removeClass('hide').val(inputValue);\n            parent.find('.inherit-readonly').addClass('hide').removeClass('show');\n        }\n    });\n\n    if(window.location.hash){\n        $('#surveySettings').find('a[href='+window.location.hash+']').trigger('click');\n    }\n    $('#save-form-button, #save-and-close-form-button').attr('data-form-id', 'survey-settings-options-form');\n\n\", LSYii_ClientScript::POS_POSTSCRIPT);\n?>\n"], "fixing_code": ["<?php\n\n/**\n * This is the model class for table \"{{surveys_groups}}\".\n *\n * The followings are the available columns in table '{{surveys_groups}}':\n * @property integer $gsid\n * @property string $name\n * @property string $title\n * @property string $description\n * @property integer $sortorder\n * @property integer $owner_id\n * @property integer $parent_id\n * @property string $created\n * @property string $modified\n * @property integer $created_by\n * @property object $parentgroup\n * @property boolean $hasSurveys\n */\nclass SurveysGroups extends LSActiveRecord\n{\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{surveys_groups}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('name, sortorder, created_by, title', 'required'),\n            array('sortorder, owner_id, parent_id, created_by', 'numerical', 'integerOnly'=>true),\n            array('name', 'length', 'max'=>45),\n            array('name', 'match', 'pattern'=> '/^[A-Za-z0-9_\\.]+$/u','message'=> gT('Group name can contain only alphanumeric character, underscore or dot.')),\n            array('title', 'length', 'max'=>100),\n            array('description, created, modified', 'safe'),\n            // The following rule is used by search().\n            // @todo Please remove those attributes that should not be searched.\n            array('gsid, name, title, description, owner_id, parent_id, created, modified, created_by', 'safe', 'on'=>'search'),\n        );\n    }\n\n    /**\n     * @return array relational rules.\n     */\n    public function relations()\n    {\n        // NOTE: you may need to adjust the relation name and the related\n        // class name for the relations automatically generated below.\n        return array(\n            'parentgroup' => array(self::BELONGS_TO, 'SurveysGroups', array('parent_id' => 'gsid'), 'together' => true),\n            'owner'       => array(self::BELONGS_TO, 'User', 'owner_id', 'together' => true),\n        );\n    }\n\n    /**\n     * @return array customized attribute labels (name=>label)\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'gsid'        => gT('ID'),\n            'name'        => gT('Name'),\n            'title'       => gT('Title'),\n            'description' => gT('Description'),\n            'sortorder'   => gT('Sort order'),\n            'owner_id'   => gT('Owner UID'),\n            'parent_id'   => gT('Parent group'),\n            'created'     => gT('Created on'),\n            'modified'    => gT('Modified on'),\n            'created_by'  => gT('Created by'),\n        );\n    }\n\n    public function getColumns()\n    {\n        return array(\n\n                array(\n                    'id'=>'gsid',\n                    'class'=>'CCheckBoxColumn',\n                    'selectableRows' => '100',\n                ),\n\n                array(\n                    'header' => gT('Survey group ID'),\n                    'name' => 'gsid',\n                    'value'=>'CHtml::link($data->gsid, Yii::app()->createUrl(\"admin/surveysgroups/sa/update/\",array(\"id\"=>$data->gsid)))',\n                    'type'=>'raw',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Name'),\n                    'name' => 'name',\n                    'value'=>'CHtml::link($data->name, Yii::app()->createUrl(\"admin/surveysgroups/sa/update/\",array(\"id\"=>$data->gsid)))',\n                    'type'=>'raw',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Title'),\n                    'name' => 'title',\n                    'value'=>'$data->title',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Description'),\n                    'name' => 'description',\n                    'value'=>'$data->description',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Parent group'),\n                    'name' => 'parent',\n                    'value'=>'$data->parentTitle',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Owner'),\n                    'name' => 'owner',\n                    'value'=>'!empty($data->owner) ? $data->owner->users_name : \"\"',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n                array(\n                    'header' => gT('Order'),\n                    'name' => 'sortorder',\n                    'value'=>'$data->sortorder',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n\n                array(\n                    'header' => gT('Actions'),\n                    'name' => 'sortorder',\n                    'type' => 'raw',\n                    'value'=> '$data->buttons',\n                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),\n                    'htmlOptions' => array('class' => 'hidden-xs'),\n                ),\n\n            );\n    }\n\n    /**\n     * Retrieves a list of models based on the current search/filter conditions.\n     *\n     * Typical usecase:\n     * - Initialize the model fields with values from filter form.\n     * - Execute this method to get CActiveDataProvider instance which will filter\n     * models according to data in model fields.\n     * - Pass data provider to CGridView, CListView or any similar widget.\n     *\n     * @return CActiveDataProvider the data provider that can return the models\n     * based on the search/filter conditions.\n     */\n    public function search()\n    {\n        // @todo Please modify the following code to remove attributes that should not be searched.\n\n        $criteria = new CDbCriteria;\n\n        $criteria->select = array('DISTINCT t.*');\n\n        $criteria->compare('gsid', $this->gsid);\n        $criteria->compare('name', $this->name, true);\n        $criteria->compare('title', $this->title, true);\n        $criteria->compare('description', $this->description, true);\n        $criteria->compare('sortorder', $this->sortorder);\n        $criteria->compare('owner_id', $this->owner_id);\n        $criteria->compare('parent_id', $this->parent_id);\n        $criteria->compare('created', $this->created, true);\n        $criteria->compare('modified', $this->modified, true);\n        $criteria->compare('created_by', $this->created_by);\n\n        // Permission\n        // Note: reflect Permission::hasPermission\n        if (!Permission::model()->hasGlobalPermission(\"surveys\", 'read')) {\n            $criteriaPerm = new CDbCriteria;\n\n            // Multiple ON conditions with string values such as 'survey'\n            $criteriaPerm->mergeWith(array(\n                'join'=>\"LEFT JOIN {{surveys}} AS surveys ON (surveys.gsid = t.gsid)\n                        LEFT JOIN {{permissions}} AS permissions ON (permissions.entity_id = surveys.sid AND permissions.permission='survey' AND permissions.entity='survey' AND permissions.uid='\".Yii::app()->user->id.\"') \",\n            ));\n\n            $criteriaPerm->compare('t.owner_id', Yii::app()->user->id, false);\n            $criteriaPerm->compare('surveys.owner_id', Yii::app()->user->id, false, 'OR');\n            $criteriaPerm->compare('permissions.read_p', '1', false, 'OR');\n            $criteriaPerm->compare('t.gsid', '1', false, 'OR');  // \"default\" survey group\n            $criteria->mergeWith($criteriaPerm, 'AND');\n        }\n\n        $dataProvider = new CActiveDataProvider($this, array(\n            'criteria'=>$criteria,\n        ));\n\n        $dataProvider->setTotalItemCount(count($dataProvider->getData()));\n\n        return $dataProvider;\n    }\n\n    public function getParentTitle()\n    {\n        // \"(gsid: \".$data->parent_id.\")\".\" \".$data->parentgroup->title,\n        if (empty($this->parent_id)) {\n            return \"\";\n        } else {\n            return $this->parentgroup->title;\n        }\n    }\n\n    /**\n     * Returns true if survey group has surveys\n     * @return boolean\n     */\n    public function getHasSurveys()\n    {\n        $nbSurvey = Survey::model()->countByAttributes(array(\"gsid\"=>$this->gsid));\n        return $nbSurvey > 0;\n    }\n\n    /**\n     * Returns true if survey group has child survey groups\n     * @return boolean\n     */\n    public function getHasChildGroups()\n    {\n        $nbSurvey = SurveysGroups::model()->countByAttributes(array(\"parent_id\"=>$this->gsid));\n        return $nbSurvey > 0;\n    }\n\n\n    public function getAllParents($bOnlyGsid=false)\n    {\n        $aParents = array();\n        $oRSurveyGroup = $this;\n        while (!empty($oRSurveyGroup->parent_id)){\n            $oRSurveyGroup =  SurveysGroups::model()->findByPk($oRSurveyGroup->parent_id);\n            $aParents[] = ($bOnlyGsid)?$oRSurveyGroup->gsid:$oRSurveyGroup;\n        }\n\n        return $aParents;\n    }\n\n\n\n    /**\n     * @return string\n     */\n    public function getButtons()\n    {\n        $sDeleteUrl     = App()->createUrl(\"admin/surveysgroups/sa/delete\", array(\"id\"=>$this->gsid));\n        $sEditUrl = App()->createUrl(\"admin/surveysgroups/sa/update\", array(\"id\"=>$this->gsid));\n        $sSurveySettingsUrl = App()->createUrl(\"admin/surveysgroups/sa/surveysettings\", array(\"id\"=>$this->gsid));\n        $button         = '';\n\n        if (!$this->gsid != 1) {\n            $button .= '<a class=\"btn btn-default\" href=\"'.$sEditUrl.'\" role=\"button\" data-toggle=\"tooltip\" title=\"'.gT('Edit survey group').'\"><i class=\"fa fa-edit\" ></i><span class=\"sr-only\">'.gT('Edit survey group').'</span></a>';\n        }\n        $button .= '<a class=\"btn btn-default\" href=\"'.$sSurveySettingsUrl.'\" role=\"button\" data-toggle=\"tooltip\" title=\"'.gT('Survey settings').'\"><i class=\"fa fa-cog\" ></i><span class=\"sr-only\">'.gT('Survey settings').'</span></a>';\n        if (!$this->hasSurveys) {\n            $button .= '<a class=\"btn btn-default\" href=\"#\" data-href=\"'.$sDeleteUrl.'\" data-target=\"#confirmation-modal\" role=\"button\" data-toggle=\"modal\" data-message=\"'.gT('Do you want to continue?').'\" data-tooltip=\"true\" title=\"'.gT('Delete survey group').'\"><i class=\"fa fa-trash text-danger \"></i><span class=\"sr-only\">'.gT('Delete survey group').'</span></a>';\n        }\n\n        return $button;\n    }\n\n    public static function getSurveyGroupsList()\n    {\n        $aSurveyList = [];\n        $criteria = new CDbCriteria;\n\n        if (!Permission::model()->hasGlobalPermission(\"surveys\", 'read')) {\n            $criteria->compare('t.owner_id', Yii::app()->user->id, false);\n            $criteria->compare('t.gsid', '1', false, 'OR');  // \"default\" survey group\n        }\n\n        $oSurveyGroups = self::model()->findAll($criteria);\n\n        foreach ($oSurveyGroups as $oSurveyGroup) {\n            $aSurveyList[$oSurveyGroup->gsid] = $oSurveyGroup->title;\n        }\n\n        return $aSurveyList;\n    }\n\n    public function getNextOrderPosition()\n    {\n        $oSurveysGroups = SurveysGroups::model()->findAll();\n        return count($oSurveysGroups) + 1;\n    }\n\n    public function getParentGroupOptions($gsid = null)\n    {\n        if (!empty($gsid)){\n            $oSurveysGroups = SurveysGroups::model()->findAll('gsid != :gsid', array(':gsid' => $gsid));\n        } else {\n            $oSurveysGroups = SurveysGroups::model()->findAll();\n        }\n        $options = [\n            '' => gT('No parent menu')\n        ];\n\n\n        foreach ($oSurveysGroups as $oSurveysGroup) {\n            //$options[] = \"<option value='\".$oSurveymenu->id.\"'>\".$oSurveymenu->title.\"</option>\";\n\n            $aParentsGsid = $oSurveysGroup->getAllParents(true);\n\n            if ( ! in_array( $this->gsid, $aParentsGsid  ) ) {\n                $options[''.($oSurveysGroup->gsid).''] = '('.$oSurveysGroup->name.') '.$oSurveysGroup->title;\n            }\n        }\n        //return join('\\n',$options);\n        return $options;\n    }\n\n    /**\n     * Returns the static model of the specified AR class.\n     * Please note that you should have this exact method in all your CActiveRecord descendants!\n     * @param string $className active record class name.\n     * @return SurveysGroups the static model class\n     */\n    public static function model($className = __CLASS__)\n    {\n        /** @var self $model */\n        $model = parent::model($className);\n        return $model;\n    }\n}\n", "<?php\n/* @var $this SurveysGroupsController */\n/* @var $model SurveysGroups */\n\n$optionsOnOff = array(\n    'Y' => gT('On','unescaped'),\n    'N' => gT('Off','unescaped'),\n);\n\nYii::app()->getClientScript()->registerScript(\n    'GlobalSurveySettings', \n    \"window.GlobalSideMenuData = \".json_encode($jsData).\";\", \n    LSYii_ClientScript::POS_BEGIN\n);\n\n?>\n\n<div class=\"col-lg-12 list-surveys\">\n\n    <?php $this->renderPartial('super/fullpagebar_view', array(\n        'fullpagebar' => array(\n            'returnbutton'=>array(\n                'url'=>'admin/survey/sa/listsurveys#surveygroups',\n                'text'=>gT('Close'),\n            ),\n            'savebutton' => array(\n                'form' => 'survey-settings-options-form'\n            ),\n            'saveandclosebutton' => array(\n                'form' => 'survey-settings-options-form'\n                )\n                )\n            )); ?>\n    <h3><?php eT('Survey settings for group: '); echo '<strong><em>'.CHtml::encode($model->title).'</strong></em>'; ?></h3>\n    <div class=\"row\">\n        <div id=\"surveySettingsForThisGroup\" style=\"display: flex; flex-wrap:nowrap;\">\n            <div id=\"global-sidebar-container\">\n                <global-sidemenu />\n            </div>\n            <div id=\"pjax-content\" class=\"tab-content col-md-10\">                \n            <div class=\"row\">\n                <div class=\"alert alert-info controls col-sm-12\" role=\"alert\">\n                    <?php eT('All changes of survey group settings will have immediate effect on all related surveys that use inherited values.'); ?>\n                </div>\n            </div>\n            <?php echo CHtml::form(array(\"admin/surveysgroups/sa/surveysettings/id/\".$oSurvey->gsid.\"/#surveySettingsGeneral\"), 'post', array('id'=>'survey-settings-options-form')); ?>    \n                <div class=\"tab-content col-md-10\">\n                <?php if($partial == '_generaloptions_panel') { ?> \n                        <div id=\"surveySettingsGeneral\" class=\"row\">\n                            <?php $this->renderPartial('survey/subview/accordion/_generaloptions_panel', array(\n                                    'oSurvey'=>$oSurvey,\n                                    'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                    'bShowInherited' => $oSurvey->showInherited,\n                                    'optionsOnOff' => $optionsOnOff,\n                                    'bShowAllOptions' => false,\n                                    'users' => $users,\n                            )); ?>\n                        </div>\n                    <?php } else if($partial == '_presentation_panel') { ?> \n                        <div id=\"surveySettingsPresentation\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_presentation_panel', array(\n                                'oSurvey'=>$oSurvey,\n                                'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                'bShowInherited' => $oSurvey->showInherited,\n                                'optionsOnOff' => $optionsOnOff\n                        )); ?>\n                        </div>\n                    <?php } else if($partial == '_tokens_panel') { ?> \n                        <div id=\"surveySettingsParticipants\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_tokens_panel', array(\n                                'oSurvey'=>$oSurvey,\n                                'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                'bShowInherited' => $oSurvey->showInherited,\n                                'optionsOnOff' => $optionsOnOff\n                        )); ?>\n                        </div>\n                    <?php } else if($partial == '_notification_panel') { ?> \n                        <div id=\"surveySettingsNotification\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_notification_panel', array(\n                                'oSurvey'=>$oSurvey,\n                                'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                'bShowInherited' => $oSurvey->showInherited,\n                                'optionsOnOff' => $optionsOnOff,\n                                'bShowAllOptions' => false,\n                            )); ?>\n                        </div>\n                    <?php } else if($partial == '_publication_panel') { ?> \n                        <div id=\"surveySettingsPublication\" >\n                            <?php $this->renderPartial('survey/subview/accordion/_publication_panel', array(\n                                    'oSurvey'=>$oSurvey,\n                                    'oSurveyOptions' => $oSurvey->oOptionLabels,\n                                    'bShowInherited' => $oSurvey->showInherited,\n                                    'optionsOnOff' => $optionsOnOff,\n                                    'dateformatdetails' => $aDateFormatDetails,\n                                    'bShowAllOptions' => false,\n                            )); ?>\n                        </div>\n                    <?php } ?>\n\n                    <div class=\"hidden\">\n                            <?php echo TbHtml::submitButton('Save', array('class'=>'btn btn-success col-md-2 col-sm-4', \"id\"=>\"survey-settings-options-form\")); ?>\n                    </div>\n                \n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<?php\nYii::app()->getClientScript()->registerScript( \"editLocalSettings_submit\", \"\n\n    window.LS.unrenderBootstrapSwitch();\n    window.LS.renderBootstrapSwitch();\n\n    $('#surveySettings a').click(function (e) {\n        window.location.hash = $(this).attr('href');\n        e.preventDefault();\n        $('#survey-settings-options-form').attr('action',' \".Yii::app()->getController()->createUrl('/admin/surveysgroups/sa/surveysettings/id/'.$oSurvey->gsid).\"'+window.location.hash);\n        $(this).tab('show');       \n    });\n\n    $('.text-option-inherit').on('change', function(e){\n        var newValue = $(this).find('.btn.active input').val();\n        var parent = $(this).parent().parent();\n        var inheritValue = parent.find('.inherit-edit').data('inherit-value');\n        var savedValue = parent.find('.inherit-edit').data('saved-value');\n\n        if (newValue == 'Y'){\n            parent.find('.inherit-edit').addClass('hide').removeClass('show').val(inheritValue);\n            parent.find('.inherit-readonly').addClass('show').removeClass('hide');\n        } else {\n            var inputValue = (savedValue === inheritValue) ? \\\"\\\" : savedValue;\n            parent.find('.inherit-edit').addClass('show').removeClass('hide').val(inputValue);\n            parent.find('.inherit-readonly').addClass('hide').removeClass('show');\n        }\n    });\n\n    if(window.location.hash){\n        $('#surveySettings').find('a[href='+window.location.hash+']').trigger('click');\n    }\n    $('#save-form-button, #save-and-close-form-button').attr('data-form-id', 'survey-settings-options-form');\n\n\", LSYii_ClientScript::POS_POSTSCRIPT);\n?>\n"], "filenames": ["application/models/SurveysGroups.php", "application/views/admin/surveysgroups/surveySettings.php"], "buggy_code_start_loc": [44, 34], "buggy_code_end_loc": [45, 35], "fixing_code_start_loc": [43, 34], "fixing_code_end_loc": [43, 35], "type": "CWE-79", "message": "LimeSurvey before 4.1.12+200324 has stored XSS in application/views/admin/surveysgroups/surveySettings.php and application/models/SurveysGroups.php (aka survey groups).", "other": {"cve": {"id": "CVE-2020-11456", "sourceIdentifier": "cve@mitre.org", "published": "2020-04-01T16:15:27.467", "lastModified": "2022-07-30T03:39:52.230", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "LimeSurvey before 4.1.12+200324 has stored XSS in application/views/admin/surveysgroups/surveySettings.php and application/models/SurveysGroups.php (aka survey groups)."}, {"lang": "es", "value": "LimeSurvey versiones anteriores a 4.1.12+200324, presenta una vulnerabilidad de tipo XSS almacenado en los archivos application/views/admin/surveysgroups/surveySettings.php y application/models/SurveysGroups.php (tambi\u00e9n se conoce como survey groups)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:limesurvey:limesurvey:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.1.11", "matchCriteriaId": "256777E0-C72F-4449-9F10-17360ABE4E7A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:limesurvey:limesurvey:4.1.12:-:*:*:*:*:*:*", "matchCriteriaId": "FC08E13E-4B2A-4F76-9820-433F8EA20BB5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:limesurvey:limesurvey:4.1.12:200324:*:*:*:*:*:*", "matchCriteriaId": "D60E1E37-3C08-4AFC-B079-0D63D3ECE06C"}]}]}], "references": [{"url": "http://packetstormsecurity.com/files/157114/LimeSurvey-4.1.11-Cross-Site-Scripting.html", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/LimeSurvey/LimeSurvey/commit/04b118acce2a74306f365ef329cbe00efc399b26", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.exploit-db.com/exploits/48289", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/LimeSurvey/LimeSurvey/commit/04b118acce2a74306f365ef329cbe00efc399b26"}}