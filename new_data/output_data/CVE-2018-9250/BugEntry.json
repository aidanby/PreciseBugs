{"buggy_code": ["<?php\n/**\n * Administration Lists Module.\n *\n * Copyright (C) 2007-2017 Rod Roark <rod@sunsetsystems.com>\n * Copyright (C) 2017      Brady Miller <brady.g.miller@gmail.com>\n *\n * LICENSE: This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://opensource.org/licenses/gpl-license.php>;.\n *\n * @package OpenEMR\n * @author  Rod Roark <rod@sunsetsystems.com>\n * @author  Brady Miller <brady.g.miller@gmail.com>\n * @author  Teny <teny@zhservices.com>\n * @link    http://www.open-emr.org\n */\n\nrequire_once(\"../globals.php\");\nrequire_once(\"$srcdir/acl.inc\");\nrequire_once(\"$phpgacl_location/gacl_api.class.php\");\nrequire_once(\"$srcdir/lists.inc\");\nrequire_once(\"../../custom/code_types.inc.php\");\nrequire_once(\"$srcdir/options.inc.php\");\nuse OpenEMR\\Core\\Header;\n\n// Below allows the list to default to the first item on the list\n//   when list_id is blank.\n$blank_list_id = '';\nif (empty($_REQUEST['list_id'])) {\n    $list_id = 'language';\n    $blank_list_id = true;\n} else {\n    $list_id = $_REQUEST['list_id'];\n}\n\n// Check authorization.\n$thisauth = acl_check('admin', 'super');\nif (!$thisauth) {\n    die(xl('Not authorized'));\n}\n\n// If we are saving, then save.\n//\nif ($_POST['formaction'] == 'save' && $list_id) {\n    $opt = $_POST['opt'];\n    if ($list_id == 'feesheet') {\n        // special case for the feesheet list\n        sqlStatement(\"DELETE FROM fee_sheet_options\");\n        for ($lino = 1; isset($opt[\"$lino\"]['category']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $category = formTrim($iter['category']);\n            $option = formTrim($iter['option']);\n            $codes = formTrim($iter['codes']);\n            if (strlen($category) > 0 && strlen($option) > 0) {\n                sqlInsert(\"INSERT INTO fee_sheet_options ( \" .\n                    \"fs_category, fs_option, fs_codes \" .\n                    \") VALUES ( \" .\n                    \"'$category', \" .\n                    \"'$option', \" .\n                    \"'$codes' \" .\n                    \")\");\n            }\n        }\n    } elseif ($list_id == 'code_types') {\n        // special case for code types\n        sqlStatement(\"DELETE FROM code_types\");\n        for ($lino = 1; isset($opt[\"$lino\"]['ct_key']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $ct_key = formTrim($iter['ct_key']);\n            $ct_id = formTrim($iter['ct_id']) + 0;\n            $ct_seq = formTrim($iter['ct_seq']) + 0;\n            $ct_mod = formTrim($iter['ct_mod']) + 0;\n            $ct_just = formTrim($iter['ct_just']);\n            $ct_mask = formTrim($iter['ct_mask']);\n            $ct_fee = empty($iter['ct_fee']) ? 0 : 1;\n            $ct_rel = empty($iter['ct_rel']) ? 0 : 1;\n            $ct_nofs = empty($iter['ct_nofs']) ? 0 : 1;\n            $ct_diag = empty($iter['ct_diag']) ? 0 : 1;\n            $ct_active = empty($iter['ct_active']) ? 0 : 1;\n            $ct_label = formTrim($iter['ct_label']);\n            $ct_external = formTrim($iter['ct_external']) + 0;\n            $ct_claim = empty($iter['ct_claim']) ? 0 : 1;\n            $ct_proc = empty($iter['ct_proc']) ? 0 : 1;\n            $ct_term = empty($iter['ct_term']) ? 0 : 1;\n            $ct_problem = empty($iter['ct_problem']) ? 0 : 1;\n            $ct_drug = empty($iter['ct_drug']) ? 0 : 1;\n            if (strlen($ct_key) > 0 && $ct_id > 0) {\n                sqlInsert(\"INSERT INTO code_types ( \" .\n                    \"ct_key, ct_id, ct_seq, ct_mod, ct_just, ct_mask, ct_fee, ct_rel, ct_nofs, ct_diag, ct_active, ct_label, ct_external, ct_claim, ct_proc, ct_term, ct_problem, ct_drug \" .\n                    \") VALUES ( \" .\n                    \"'$ct_key' , \" .\n                    \"'$ct_id'  , \" .\n                    \"'$ct_seq' , \" .\n                    \"'$ct_mod' , \" .\n                    \"'$ct_just', \" .\n                    \"'$ct_mask', \" .\n                    \"'$ct_fee' , \" .\n                    \"'$ct_rel' , \" .\n                    \"'$ct_nofs', \" .\n                    \"'$ct_diag', \" .\n                    \"'$ct_active', \" .\n                    \"'$ct_label', \" .\n                    \"'$ct_external', \" .\n                    \"'$ct_claim', \" .\n                    \"'$ct_proc', \" .\n                    \"'$ct_term', \" .\n                    \"'$ct_problem', \" .\n                    \"'$ct_drug' \" .\n                    \")\");\n            }\n        }\n    } elseif ($list_id == 'issue_types') {\n        // special case for issue_types\n        sqlStatement(\"DELETE FROM issue_types\");\n        for ($lino = 1; isset($opt[\"$lino\"]['category']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $it_category = formTrim($iter['category']);\n            $it_type = formTrim($iter['type']);\n            if ((strlen($it_category) > 0) && (strlen($it_type) > 0)) {\n                sqlInsert(\"INSERT INTO issue_types (\" .\n                    \"`active`,`category`,`ordering`, `type`, `plural`, `singular`, `abbreviation`, `style`, \" .\n                    \"`force_show`, `aco_spec`) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\", array(\n                    formTrim($iter['active']),\n                    $it_category,\n                    formTrim($iter['ordering']),\n                    $it_type,\n                    formTrim($iter['plural']),\n                    formTrim($iter['singular']),\n                    formTrim($iter['abbreviation']),\n                    formTrim($iter['style']),\n                    formTrim($iter['force_show']),\n                    formTrim($iter['aco_spec']),\n                ));\n            }\n        }\n    } else {\n        // all other lists\n        //\n        // collect the option toggle if using the 'immunizations' list\n        if ($list_id == 'immunizations') {\n            $ok_map_cvx_codes = isset($_POST['ok_map_cvx_codes']) ? $_POST['ok_map_cvx_codes'] : 0;\n        }\n        // erase lists options and recreate them from the submitted form data\n        sqlStatement(\"DELETE FROM list_options WHERE list_id = '$list_id'\");\n        for ($lino = 1; isset($opt[\"$lino\"]['id']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $value = empty($iter['value']) ? 0 : (formTrim($iter['value']) + 0);\n            $id = formTrim($iter['id']);\n            if (strlen($id) > 0) {\n                // Special processing for the immunizations list\n                // Map the entered cvx codes into the immunizations table cvx_code\n                // Ensure the following conditions are met to do this:\n                //   $list_id == 'immunizations'\n                //   $value is an integer and greater than 0\n                //   $id is set, not empty and not equal to 0\n                //    (note that all these filters are important. Not allowing $id\n                //     of zero here is extremely important; never remove this conditional\n                //     or you risk corrupting your current immunizations database entries)\n                //   $ok_map_cvx_codes is equal to 1\n                if ($list_id == 'immunizations' &&\n                    is_int($value) &&\n                    $value > 0 &&\n                    isset($id) &&\n                    !empty($id) &&\n                    $id != 0 &&\n                    $ok_map_cvx_codes == 1\n                ) {\n                    sqlStatement(\"UPDATE `immunizations` \" .\n                        \"SET `cvx_code`='\" . $value . \"' \" .\n                        \"WHERE `immunization_id`='\" . $id . \"'\");\n                }\n\n                // Force List Based Form names to start with LBF.\n                if ($list_id == 'lbfnames' && substr($id, 0, 3) != 'LBF') {\n                    $id = \"LBF$id\";\n                }\n\n                // Force Transaction Form names to start with LBT.\n                if ($list_id == 'transactions' && substr($id, 0, 3) != 'LBT') {\n                    $id = \"LBT$id\";\n                }\n\n                if ($list_id == 'apptstat' || $list_id == 'groupstat') {\n                    $notes = formTrim($iter['apptstat_color']) . '|' . formTrim($iter['apptstat_timealert']);\n                } else {\n                    $notes = formTrim($iter['notes']);\n                }\n                // Insert the list item\n                sqlInsert(\"INSERT INTO list_options ( \" .\n                    \"list_id, option_id, title, seq, is_default, option_value, mapping, notes, codes, toggle_setting_1, toggle_setting_2, activity, subtype \" .\n                    \") VALUES ( \" .\n                    \"'$list_id', \" .\n                    \"'\" . $id . \"', \" .\n                    \"'\" . formTrim($iter['title']) . \"', \" .\n                    \"'\" . formTrim($iter['seq']) . \"', \" .\n                    \"'\" . formTrim($iter['default']) . \"', \" .\n                    \"'\" . $value . \"', \" .\n                    \"'\" . formTrim($iter['mapping']) . \"', \" .\n                    \"'\" . $notes . \"', \" .\n                    \"'\" . formTrim($iter['codes']) . \"', \" .\n                    \"'\" . formTrim($iter['toggle_setting_1']) . \"', \" .\n                    \"'\" . formTrim($iter['toggle_setting_2']) . \"', \" .\n                    \"'\" . formTrim($iter['activity']) . \"', \" .\n                    \"'\" . formTrim($iter['subtype']) . \"'  \" .\n                    \")\");\n            }\n        }\n    }\n} elseif ($_POST['formaction'] == 'addlist') {\n    // make a new list ID from the new list name\n    $newlistID = $_POST['newlistname'];\n    $newlistID = preg_replace(\"/\\W/\", \"_\", $newlistID);\n\n    // determine the position of this new list\n    $row = sqlQuery(\"SELECT max(seq) AS maxseq FROM list_options WHERE list_id= 'lists'\");\n\n    // add the new list to the list-of-lists\n    sqlInsert(\"INSERT INTO list_options ( \" .\n        \"list_id, option_id, title, seq, is_default, option_value \" .\n        \") VALUES ( \" .\n        \"'lists',\" . // the master list-of-lists\n        \"'\" . $newlistID . \"',\" .\n        \"'\" . $_POST['newlistname'] . \"', \" .\n        \"'\" . ($row['maxseq'] + 1) . \"',\" .\n        \"'1', '0')\");\n    $list_id = $newlistID;\n} elseif ($_POST['formaction'] == 'deletelist') {\n    // delete the lists options\n    sqlStatement(\"DELETE FROM list_options WHERE list_id = '\" . $_POST['list_id'] . \"'\");\n    // delete the list from the master list-of-lists\n    sqlStatement(\"DELETE FROM list_options WHERE list_id = 'lists' AND option_id='\" . $_POST['list_id'] . \"'\");\n}\n\n$opt_line_no = 0;\n\n// Given a string of multiple instances of code_type|code|selector,\n// make a description for each.\n// @TODO Instead should use a function from custom/code_types.inc.php and need to remove casing functions\nfunction getCodeDescriptions($codes)\n{\n    global $code_types;\n    $arrcodes = explode('~', $codes);\n    $s = '';\n    foreach ($arrcodes as $codestring) {\n        if ($codestring === '') {\n            continue;\n        }\n        $arrcode = explode('|', $codestring);\n        $code_type = $arrcode[0];\n        $code = $arrcode[1];\n        $selector = $arrcode[2];\n        $desc = '';\n        if ($code_type == 'PROD') {\n            $row = sqlQuery(\"SELECT name FROM drugs WHERE drug_id = '$code' \");\n            $desc = \"$code:$selector \" . $row['name'];\n        } else {\n            $row = sqlQuery(\"SELECT code_text FROM codes WHERE \" .\n                \"code_type = '\" . $code_types[$code_type]['id'] . \"' AND \" .\n                \"code = '$code' ORDER BY modifier LIMIT 1\");\n            $desc = \"$code_type:$code \" . ucfirst(strtolower($row['code_text']));\n        }\n        $desc = str_replace('~', ' ', $desc);\n        if ($s) {\n            $s .= '~';\n        }\n        $s .= $desc;\n    }\n    return $s;\n}\n\n// Write one option line to the form.\n//\nfunction writeOptionLine(\n    $option_id,\n    $title,\n    $seq,\n    $default,\n    $value,\n    $mapping = '',\n    $notes = '',\n    $codes = '',\n    $tog1 = '',\n    $tog2 = '',\n    $active = '1',\n    $subtype = ''\n) {\n\n    global $opt_line_no, $list_id;\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n    $checked = $default ? \" checked\" : \"\";\n    $checked_tog1 = $tog1 ? \" checked\" : \"\";\n    $checked_tog2 = $tog2 ? \" checked\" : \"\";\n    $checked_active = $active ? \" checked\" : \"\";\n\n    echo \" <tr>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][id]' value='\" .\n        htmlspecialchars($option_id, ENT_QUOTES) . \"' size='12' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][title]' value='\" .\n        htmlspecialchars($title, ENT_QUOTES) . \"' size='20' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . (htmlspecialchars(xl($title), ENT_QUOTES)) . \"</td>\\n\";\n    }\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][seq]' value='\" .\n        htmlspecialchars($seq, ENT_QUOTES) . \"' size='4' maxlength='10' class='optin' />\";\n    echo \"</td>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='checkbox' name='opt[$opt_line_no][default]' value='1' \" .\n        \"onclick='defClicked($opt_line_no)' class='optin'$checked />\";\n    echo \"</td>\\n\";\n    \n    if (preg_match('/Eye_QP_/', $list_id)) {\n        echo \"  <td>\";\n        echo \"<select name='opt[$opt_line_no][activity]' class='optin'>\";\n        foreach (array(\n                     1 => xl('Replace'),\n                     2 => xl('Append')\n                 ) as $key => $desc) {\n            echo \"<option value='$key'\";\n            if ($key == $active) {\n                echo \" selected\";\n            }\n            echo \">\" . htmlspecialchars($desc) . \"</option>\";\n        }\n        echo \"</select>\";\n        echo \"</td>\";\n    } else {\n        echo \"  <td>\";\n        echo \"<input type='checkbox' name='opt[$opt_line_no][activity]' value='1' \" . \" class='optin'$checked_active />\";\n        echo \"</td>\\n\";\n    }\n    // Tax rates, contraceptive methods and LBF names have an additional attribute.\n    //\n    if ($list_id == 'taxrate' || $list_id == 'contrameth' || $list_id == 'lbfnames' || $list_id == 'transactions') {\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][value]' value='\" .\n            htmlspecialchars($value, ENT_QUOTES) . \"' size='8' maxlength='15' class='optin' />\";\n        echo \"</td>\\n\";\n    } // Adjustment reasons use option_value as a reason category.  This is\n    // needed to distinguish between adjustments that change the invoice\n    // balance and those that just shift responsibility of payment or\n    // are used as comments.\n    //\n    elseif ($list_id == 'adjreason') {\n        echo \"  <td>\";\n        echo \"<select name='opt[$opt_line_no][value]' class='optin'>\";\n        foreach (array(\n                     1 => xl('Charge adjustment'),\n                     2 => xl('Coinsurance'),\n                     3 => xl('Deductible'),\n                     4 => xl('Other pt resp'),\n                     5 => xl('Comment'),\n                 ) as $key => $desc) {\n            echo \"<option value='$key'\";\n            if ($key == $value) {\n                echo \" selected\";\n            }\n            echo \">\" . htmlspecialchars($desc) . \"</option>\";\n        }\n        echo \"</select>\";\n        echo \"</td>\\n\";\n    } // Address book categories use option_value to flag category as a\n    // person-centric vs company-centric vs indifferent.\n    //\n    elseif ($list_id == 'abook_type') {\n        echo \"  <td>\";\n        echo \"<select name='opt[$opt_line_no][value]' class='optin'>\";\n        foreach (array(\n                     1 => xl('Unassigned'),\n                     2 => xl('Person'),\n                     3 => xl('Company'),\n                 ) as $key => $desc) {\n            echo \"<option value='$key'\";\n            if ($key == $value) {\n                echo \" selected\";\n            }\n            echo \">\" . htmlspecialchars($desc) . \"</option>\";\n        }\n        echo \"</select>\";\n        echo \"</td>\\n\";\n    } // Immunization categories use option_value to map list items\n    // to CVX codes.\n    //\n    elseif ($list_id == 'immunizations') {\n        echo \"  <td>\";\n        echo \"<input type='text' size='10' name='opt[$opt_line_no][value]' \" .\n            \"value='\" . htmlspecialchars($value, ENT_QUOTES) . \"' onclick='sel_cvxcode(this)' \" .\n            \"title='\" . htmlspecialchars(xl('Click to select or change CVX code'), ENT_QUOTES) . \"'/>\";\n        echo \"</td>\\n\";\n    }\n\n    // IPPF includes the ability to map each list item to a \"master\" identifier.\n    // Sports teams use this for some extra info for fitness levels.\n    //\n    if ($GLOBALS['ippf_specific'] || $list_id == 'fitness') {\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][mapping]' value='\" .\n            htmlspecialchars($mapping, ENT_QUOTES) . \"' size='12' maxlength='15' class='optin' />\";\n        echo \"</td>\\n\";\n    } elseif ($list_id == 'apptstat' || $list_id == 'groupstat') {\n        list($apptstat_color, $apptstat_timealert) = explode(\"|\", $notes);\n        echo \"  <td>\";\n        echo \"<input type='text' class='jscolor' name='opt[$opt_line_no][apptstat_color]' value='\" .\n            htmlspecialchars($apptstat_color, ENT_QUOTES) . \"' size='6' maxlength='6' class='optin' />\";\n        echo \"</td>\\n\";\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][apptstat_timealert]' value='\" .\n            htmlspecialchars($apptstat_timealert, ENT_QUOTES) . \"' size='2' maxlength='2' class='optin' />\";\n        echo \"</td>\\n\";\n    } else {\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][notes]' value='\" .\n            attr($notes) . \"' size='25' maxlength='255' class='optin' \";\n        echo \"/>\";\n        echo \"</td>\\n\";\n    }\n    if ($list_id == 'apptstat' || $list_id == 'groupstat') {\n        echo \"  <td>\";\n        echo \"<input type='checkbox' name='opt[$opt_line_no][toggle_setting_1]' value='1' \" .\n            \"onclick='defClicked($opt_line_no)' class='optin'$checked_tog1 />\";\n        echo \"</td>\\n\";\n        echo \"  <td>\";\n        echo \"<input type='checkbox' name='opt[$opt_line_no][toggle_setting_2]' value='1' \" .\n            \"onclick='defClicked($opt_line_no)' class='optin'$checked_tog2 />\";\n        echo \"</td>\\n\";\n    }\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][codes]' title='\" .\n        xla('Clinical Term Code(s)') . \"' value='\" .\n        htmlspecialchars($codes, ENT_QUOTES) . \"' onclick='select_clin_term_code(this)' size='25' maxlength='255' class='optin' />\";\n    echo \"</td>\\n\";\n\n    if (preg_match('/_issue_list$/', $list_id)) {\n        echo \"  <td>\";\n        echo generate_select_list(\"opt[$opt_line_no][subtype]\", 'issue_subtypes', $subtype, 'Subtype', ' ', 'optin');\n        echo \"</td>\\n\";\n    }\n    if (preg_match('/Eye_QP_/', $list_id)) {\n        echo \"<input type='hidden' name='opt[$opt_line_no][subtype]' value='\" . htmlspecialchars($subtype, ENT_QUOTES) . \"' />\";\n        echo \"<input type='hidden' name='opt[$opt_line_no][mapping]' value='\" . htmlspecialchars($mapping, ENT_QUOTES) . \"' />\";\n    }\n    echo \" </tr>\\n\";\n}\n\n// Write a form line as above but for the special case of the Fee Sheet.\n//\nfunction writeFSLine($category, $option, $codes)\n{\n    global $opt_line_no;\n\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n\n    $descs = getCodeDescriptions($codes);\n\n    echo \" <tr>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][category]' value='\" .\n        htmlspecialchars($category, ENT_QUOTES) . \"' size='20' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][option]' value='\" .\n        htmlspecialchars($option, ENT_QUOTES) . \"' size='20' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n\n    echo \"  <td align='left' class='optcell'>\";\n    echo \"   <div id='codelist_$opt_line_no'>\";\n    if (strlen($descs)) {\n        $arrdescs = explode('~', $descs);\n        $i = 0;\n        foreach ($arrdescs as $desc) {\n            echo \"<a href='' onclick='return delete_code($opt_line_no,$i)' title='\" . xl('Delete') . \"'>\";\n            echo \"[x]&nbsp;</a>$desc<br />\";\n            ++$i;\n        }\n    }\n    echo \"</div>\";\n    echo \"<a href='' onclick='return select_code($opt_line_no)'>\";\n    echo \"[\" . xl('Add') . \"]</a>\";\n\n    echo \"<input type='hidden' name='opt[$opt_line_no][codes]' value='\" .\n        htmlspecialchars($codes, ENT_QUOTES) . \"' />\";\n    echo \"<input type='hidden' name='opt[$opt_line_no][descs]' value='\" .\n        htmlspecialchars($descs, ENT_QUOTES) . \"' />\";\n    echo \"</td>\\n\";\n\n    echo \" </tr>\\n\";\n}\n\n\n/**\n * Helper functions for writeITLine() and writeCTLine().\n */\nfunction ctGenCell($opt_line_no, $data_array, $name, $size, $maxlength, $title = '')\n{\n    $value = isset($data_array[$name]) ? $data_array[$name] : '';\n    $s = \"  <td\";\n    if ($title) {\n        $s .= \" title='\" . attr($title) . \"'\";\n    }\n    $s .= \">\";\n    $s .= \"<input type='text' name='opt[$opt_line_no][$name]' value='\";\n    $s .= attr($value);\n    $s .= \"' size='$size' maxlength='$maxlength' class='optin' />\";\n    $s .= \"</td>\\n\";\n    return $s;\n}\n\nfunction ctGenCbox($opt_line_no, $data_array, $name, $title = '')\n{\n    $checked = empty($data_array[$name]) ? '' : 'checked ';\n    $s = \"  <td\";\n    if ($title) {\n        $s .= \" title='\" . attr($title) . \"'\";\n    }\n    $s .= \">\";\n    $s .= \"<input type='checkbox' name='opt[$opt_line_no][$name]' value='1' \";\n    $s .= \"$checked/>\";\n    $s .= \"</td>\\n\";\n    return $s;\n}\n\nfunction ctSelector($opt_line_no, $data_array, $name, $option_array, $title = '')\n{\n    $value = isset($data_array[$name]) ? $data_array[$name] : '';\n    $s = \"  <td title='\" . attr($title) . \"'>\";\n    $s .= \"<select name='opt[$opt_line_no][$name]' class='optin'>\";\n    foreach ($option_array as $key => $desc) {\n        $s .= \"<option value='\" . attr($key) . \"'\";\n        if ($key == $value) {\n            $s .= \" selected\";\n        }\n        $s .= \">\" . text($desc) . \"</option>\";\n    }\n    $s .= \"</select>\";\n    $s .= \"</td>\\n\";\n    return $s;\n}\n\n// Write a form line as above but for the special case of Code Types.\n//\nfunction writeCTLine($ct_array)\n{\n    global $opt_line_no, $cd_external_options;\n\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n\n    echo \" <tr>\\n\";\n\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_active',\n        xl('Is this code type active?')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_key',\n        6,\n        15,\n        xl('Unique human-readable identifier for this type')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_id',\n        2,\n        11,\n        xl('Unique numeric identifier for this type')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_label',\n        6,\n        30,\n        xl('Label for this type')\n    );\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($ct_array['ct_label']) . \"</td>\\n\";\n    }\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_seq',\n        2,\n        3,\n        xl('Numeric display order')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_mod',\n        1,\n        2,\n        xl('Length of modifier, 0 if none')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_just',\n        4,\n        15,\n        xl('If billing justification is used enter the name of the diagnosis code type.')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_mask',\n        6,\n        9,\n        xl('Specifies formatting for codes. # = digit, @ = alpha, * = any character. Empty if not used.')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_claim',\n        xl('Is this code type used in claims?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_fee',\n        xl('Are fees charged for this type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_rel',\n        xl('Does this type allow related codes?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_nofs',\n        xl('Is this type hidden in the fee sheet?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_proc',\n        xl('Is this a procedure/service type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_diag',\n        xl('Is this a diagnosis type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_term',\n        xl('Is this a Clinical Term code type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_problem',\n        xl('Is this a Medical Problem code type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_drug',\n        xl('Is this a Medication type?')\n    );\n    echo ctSelector(\n        $opt_line_no,\n        $ct_array,\n        'ct_external',\n        $cd_external_options,\n        xl('Is this using external sql tables? If it is, then choose the format.')\n    );\n    echo \" </tr>\\n\";\n}\n\n/**\n * Special case of Issue Types\n */\nfunction writeITLine($it_array)\n{\n    global $opt_line_no, $ISSUE_TYPE_CATEGORIES, $ISSUE_TYPE_STYLES;\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n    echo \" <tr>\\n\";\n    echo ctSelector($opt_line_no, $it_array, 'category', $ISSUE_TYPE_CATEGORIES, xl('OpenEMR Application Category'));\n    echo ctGenCBox($opt_line_no, $it_array, 'active', xl('Is this active?'));\n    echo ctGenCell($opt_line_no, $it_array, 'ordering', 4, 10, xl('Order'));\n    echo ctGenCell($opt_line_no, $it_array, 'type', 15, 75, xl('Issue Type'));\n    echo ctGenCell($opt_line_no, $it_array, 'plural', 15, 75, xl('Plural'));\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($it_array['plural']) . \"</td>\\n\";\n    }\n    echo ctGenCell($opt_line_no, $it_array, 'singular', 15, 75, xl('Singular'));\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($it_array['singular']) . \"</td>\\n\";\n    }\n    echo ctGenCell($opt_line_no, $it_array, 'abbreviation', 5, 10, xl('Abbreviation'));\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($it_array['abbreviation']) . \"</td>\\n\";\n    }\n    echo ctSelector($opt_line_no, $it_array, 'style', $ISSUE_TYPE_STYLES, xl('Standard; Simplified: only title, start date, comments and an Active checkbox;no diagnosis, occurrence, end date, referred-by or sports fields. ; Football Injury'));\n    echo ctGenCBox($opt_line_no, $it_array, 'force_show', xl('Show this category on the patient summary screen even if no issues have been entered for this category.'));\n\n    echo \"<td>\";\n    echo \"<select name='opt[$opt_line_no][aco_spec]' class='optin'>\";\n    echo \"<option value=''></option>\";\n    echo gen_aco_html_options($it_array['aco_spec']);\n    echo \"</select>\";\n    echo \"</td>\";\n\n    echo \" </tr>\\n\";\n}\n\n?>\n<html>\n\n<head>\n    <?php echo Header::setupHeader(['select2', 'jscolor']); ?>\n    <title><?php xl('List Editor', 'e'); ?></title>\n    <style>\n        .optcell {\n        }\n\n        .optin {\n            background-color: transparent;\n        }\n\n        .help {\n            cursor: help;\n        }\n\n        .translation {\n            color: green;\n        }\n    </style>\n    <script type=\"text/javascript\">\n        $(document).ready(function () {\n            $(\".select-dropdown\").select2({\n                theme: \"bootstrap\"\n            });\n        });\n\n        // Keeping track of code picker requests.\n        var current_lino = 0;\n        var current_sel_name = '';\n        var current_sel_clin_term = '';\n\n        // Helper function to set the contents of a div.\n        // This is for Fee Sheet administration.\n        function setDivContent(id, content) {\n            if (document.getElementById) {\n                var x = document.getElementById(id);\n                x.innerHTML = '';\n                x.innerHTML = content;\n            }\n            else if (document.all) {\n                var x = document.all[id];\n                x.innerHTML = content;\n            }\n        }\n\n        // Given a line number, redisplay its descriptive list of codes.\n        // This is for Fee Sheet administration.\n        function displayCodes(lino) {\n            var f = document.forms[0];\n            var s = '';\n            var descs = f['opt[' + lino + '][descs]'].value;\n            if (descs.length) {\n                var arrdescs = descs.split('~');\n                for (var i = 0; i < arrdescs.length; ++i) {\n                    s += \"<a href='' onclick='return delete_code(\" + lino + \",\" + i + \")' title='<?php xl('Delete', 'e'); ?>'>\";\n                    s += \"[x]&nbsp;</a>\" + arrdescs[i] + \"<br />\";\n                }\n            }\n            setDivContent('codelist_' + lino, s);\n        }\n\n        // Helper function to remove a Fee Sheet code.\n        function dc_substring(s, i) {\n            var r = '';\n            var j = s.indexOf('~', i);\n            if (j < 0) { // deleting last segment\n                if (i > 0) r = s.substring(0, i - 1); // omits trailing ~\n            }\n            else { // not last segment\n                r = s.substring(0, i) + s.substring(j + 1);\n            }\n            return r;\n        }\n\n        // Remove a generated Fee Sheet code.\n        function delete_code(lino, seqno) {\n            var f = document.forms[0];\n            var celem = f['opt[' + lino + '][codes]'];\n            var delem = f['opt[' + lino + '][descs]'];\n            var ci = 0;\n            var di = 0;\n            for (var i = 0; i < seqno; ++i) {\n                ci = celem.value.indexOf('~', ci) + 1;\n                di = delem.value.indexOf('~', di) + 1;\n            }\n            celem.value = dc_substring(celem.value, ci);\n            delem.value = dc_substring(delem.value, di);\n            displayCodes(lino);\n            return false;\n        }\n\n        // This invokes the find-code popup.\n        // For Fee Sheet administration.\n        function select_code(lino) {\n            current_sel_name = '';\n            current_sel_clin_term = '';\n            current_lino = lino;\n            dlgopen('../patient_file/encounter/find_code_dynamic.php', '_blank', 900, 600);\n            return false;\n        }\n\n        // This invokes the find-code popup.\n        // For CVX/immunization code administration.\n        function sel_cvxcode(e) {\n            current_sel_clin_term = '';\n            current_sel_name = e.name;\n            dlgopen('../patient_file/encounter/find_code_dynamic.php?codetype=CVX', '_blank', 900, 600);\n        }\n\n        // This invokes the find-code popup.\n        // For CVX/immunization code administration.\n        function select_clin_term_code(e) {\n            current_sel_name = '';\n            current_sel_clin_term = e.name;\n            dlgopen('../patient_file/encounter/find_code_dynamic.php?codetype=<?php echo attr(collect_codetypes(\"clinical_term\", \"csv\")); ?>', '_blank', 900, 600);\n        }\n\n        // This is for callback by the find-code popup.\n        function set_related(codetype, code, selector, codedesc) {\n            var f = document.forms[0];\n            if (current_sel_clin_term) {\n                // Coming from the Clinical Terms Code(s) edit\n                var e = f[current_sel_clin_term];\n                var s = e.value;\n                if (code) {\n                    if (s.length > 0) s += ';';\n                    s += codetype + ':' + code;\n                }\n                else {\n                    s = '';\n                }\n                e.value = s;\n            }\n            else if (current_sel_name) {\n                // Coming from Immunizations edit\n                var e = f[current_sel_name];\n                var s = e.value;\n                if (code) {\n                    s = code;\n                }\n                else {\n                    s = '0';\n                }\n                e.value = s;\n            }\n            else {\n                // Coming from Fee Sheet edit\n                var celem = f['opt[' + current_lino + '][codes]'];\n                var delem = f['opt[' + current_lino + '][descs]'];\n                var i = 0;\n                while ((i = codedesc.indexOf('~')) >= 0) {\n                    codedesc = codedesc.substring(0, i) + ' ' + codedesc.substring(i+1);\n                }\n                if (code) {\n                    if (celem.value) {\n                        celem.value += '~';\n                        delem.value += '~';\n                    }\n                    celem.value += codetype + '|' + code + '|' + selector;\n                    if (codetype == 'PROD') {\n                        delem.value += code + ':' + selector + ' ' + codedesc;\n                    } else {\n                        delem.value += codetype + ':' + code + ' ' + codedesc;\n                    }\n                } else {\n                    celem.value = '';\n                    delem.value = '';\n                }\n                displayCodes(current_lino);\n            }\n        }\n\n        // This is for callback by the find-code popup.\n        // Deletes the specified codetype:code from the currently selected list.\n        function del_related(s) {\n            var f = document.forms[0];\n            if (current_sel_clin_term) {\n                // Coming from the Clinical Terms Code(s) edit\n                my_del_related(s, f[current_sel_clin_term], false);\n            }\n            else if (current_sel_name) {\n                // Coming from Immunizations edit\n                f[current_sel_name].value = '0';\n            }\n            else {\n                // Coming from Fee Sheet edit\n                f['opt[' + current_lino + '][codes]'].value = '';\n                f['opt[' + current_lino + '][descs]'].value = '';\n                displayCodes(current_lino);\n            }\n        }\n\n        // This is for callback by the find-code popup.\n        // Returns the array of currently selected codes with each element in codetype:code format.\n        function get_related() {\n            var f = document.forms[0];\n            if (current_sel_clin_term) {\n                return f[current_sel_clin_term].value.split(';');\n            }\n            return new Array();\n        }\n\n        // Called when a \"default\" checkbox is clicked.  Clears all the others.\n        function defClicked(lino) {\n            var f = document.forms[0];\n            for (var i = 1; f['opt[' + i + '][default]']; ++i) {\n                if (i != lino) f['opt[' + i + '][default]'].checked = false;\n            }\n        }\n\n        // Form validation and submission.\n        // This needs more validation.\n        function mysubmit() {\n            var f = document.forms[0];\n            if (f.list_id.value == 'code_types') {\n                for (var i = 1; f['opt[' + i + '][ct_key]'].value; ++i) {\n                    var ikey = 'opt[' + i + ']';\n                    for (var j = i + 1; f['opt[' + j + '][ct_key]'].value; ++j) {\n                        var jkey = 'opt[' + j + ']';\n                        if (f[ikey + '[ct_key]'].value == f[jkey + '[ct_key]'].value) {\n                            alert('<?php echo xl('Error: duplicated name on line') ?>' + ' ' + j);\n                            return;\n                        }\n                        if (parseInt(f[ikey + '[ct_id]'].value) == parseInt(f[jkey + '[ct_id]'].value)) {\n                            alert('<?php echo xl('Error: duplicated ID on line') ?>' + ' ' + j);\n                            return;\n                        }\n                    }\n                }\n            }\n            else if (f['opt[1][id]']) {\n                // Check for duplicate IDs.\n                for (var i = 1; f['opt[' + i + '][id]']; ++i) {\n                    var ikey = 'opt[' + i + '][id]';\n                    if (f[ikey].value == '') continue;\n                    for (var j = i+1; f['opt[' + j + '][id]']; ++j) {\n                        var jkey = 'opt[' + j + '][id]';\n                        if (f[ikey].value.toUpperCase() == f[jkey].value.toUpperCase()) {\n                            alert('<?php echo xls('Error: duplicated ID') ?>' + ': ' + f[jkey].value);\n                            f[jkey].scrollIntoView();\n                            f[jkey].focus();\n                            f[jkey].select();\n                            return;\n                        }\n                    }\n                }\n            }\n            f.submit();\n        }\n\n    </script>\n\n</head>\n\n<body class=\"body_top\">\n<form method='post' name='theform' id='theform' action='edit_list.php'>\n<nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle collapsed\"\n                    data-toggle=\"collapse\" data-target=\"#navbar-list\"\n                    aria-expanded=\"false\">\n                <span class=\"sr-only\"><?php xl('Toggle navigation', 'e'); ?></span>\n                <i class=\"fa fa-bars\"></i>\n            </button>\n            <a class=\"navbar-brand\"\n               href=\"#\"><?php xl('Manage Lists', 'e'); ?></a>\n        </div>\n\n        <!-- Collect the nav links, forms, and other content for toggling -->\n        <div class=\"collapse navbar-collapse\" id=\"navbar-list\">\n            <ul class=\"nav navbar-nav\">\n                <li><a href=\"#\" data-toggle=\"modal\"\n                       data-target=\"#modal-new-list\"><i class=\"fa fa-plus\"></i>&nbsp;<?php xl('New List', 'e'); ?>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" class=\"deletelist\" id=\"<?php echo $list_id; ?>\">\n                        <i class=\"fa fa-trash\"></i>&nbsp;<?php xl('Delete List', 'e'); ?>\n                    </a>\n                </li>\n            </ul>\n                <input type=\"hidden\" name=\"formaction\" id=\"formaction\">\n                <div class=\"form-group navbar-left\">\n                    <select name='list_id' class=\"form-control select-dropdown\"\n                            id=\"list_id\">\n                        <?php\n\n                        // List order depends on language translation options.\n                        $lang_id = empty($_SESSION['language_choice']) ? '1' : $_SESSION['language_choice'];\n\n                        if (($lang_id == '1' && !empty($GLOBALS['skip_english_translation'])) ||\n                            !$GLOBALS['translate_lists']\n                        ) {\n                            $res = sqlStatement(\"SELECT option_id, title FROM list_options WHERE \" .\n                                \"list_id = 'lists' ORDER BY title, seq\");\n                        } else {\n                            // Use and sort by the translated list name.\n                            $res = sqlStatement(\"SELECT lo.option_id, \" .\n                                \"IF(LENGTH(ld.definition),ld.definition,lo.title) AS title \" .\n                                \"FROM list_options AS lo \" .\n                                \"LEFT JOIN lang_constants AS lc ON lc.constant_name = lo.title \" .\n                                \"LEFT JOIN lang_definitions AS ld ON ld.cons_id = lc.cons_id AND \" .\n                                \"ld.lang_id = '$lang_id' \" .\n                                \"WHERE lo.list_id = 'lists' AND lo.edit_options = 1 \" .\n                                \"ORDER BY IF(LENGTH(ld.definition),ld.definition,lo.title), lo.seq\");\n                        }\n\n                        while ($row = sqlFetchArray($res)) {\n                            // This allows the list to default to the first item on the list\n                            //   when the list_id request parameter is blank.\n                            if (($blank_list_id) && ($list_id == 'language')) {\n                                $list_id = $row['option_id'];\n                                $blank_list_id = false;\n                            }\n\n                            $key = $row['option_id'];\n                            echo \"<option value='$key'\";\n                            if ($key == $list_id) {\n                                echo \" selected\";\n                            }\n                            echo \">\" . $row['title'] . \"</option>\\n\";\n                        }\n\n                        ?>\n                    </select>\n                </div>\n\n        </div><!-- /.navbar-collapse -->\n    </div>\n</nav>\n\n<table class=\"table table-striped table-condensed\" style=\"margin-top:55px;\">\n    <thead>\n    <tr>\n        <?php if ($list_id == 'feesheet') : ?>\n            <td><b><?php xl('Group', 'e'); ?></b></td>\n            <td><b><?php xl('Option', 'e'); ?></b></td>\n            <td><b><?php xl('Generates', 'e'); ?></b></td>\n        <?php elseif ($list_id == 'code_types') : ?>\n            <th><b><?php xl('Active', 'e'); ?></b></th>\n            <th><b><?php xl('Key', 'e'); ?></b></th>\n            <th><b><?php xl('ID', 'e'); ?></b></th>\n            <th><b><?php xl('Label', 'e'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php xl('Seq', 'e'); ?></b></th>\n            <th><b><?php xl('ModLength', 'e'); ?></b></th>\n            <th><b><?php xl('Justify', 'e'); ?></b></th>\n            <th><b><?php xl('Mask', 'e'); ?></b></th>\n            <th><b><?php xl('Claims', 'e'); ?></b></th>\n            <th><b><?php xl('Fees', 'e'); ?></b></th>\n            <th><b><?php xl('Relations', 'e'); ?></b></th>\n            <th><b><?php xl('Hide', 'e'); ?></b></th>\n            <th><b><?php xl('Procedure', 'e'); ?></b></th>\n            <th><b><?php xl('Diagnosis', 'e'); ?></b></th>\n            <th><b><?php xl('Clinical Term', 'e'); ?></b></th>\n            <th><b><?php xl('Medical Problem', 'e'); ?></b></th>\n            <th><b><?php xl('Drug', 'e'); ?></b></th>\n            <th><b><?php xl('External', 'e'); ?></b></th>\n        <?php elseif ($list_id == 'apptstat' || $list_id == 'groupstat') : ?>\n            <th><b><?php xl('ID', 'e'); ?></b></th>\n            <th><b><?php xl('Title', 'e'); ?></b></th>\n            <th><b><?php xl('Order', 'e'); ?></b></th>\n            <th><b><?php xl('Default', 'e'); ?></b></th>\n            <th><b><?php xl('Active', 'e'); ?></b></th>\n            <th><b><?php xl('Color', 'e'); ?></b></th>\n            <th><b><?php xl('Alert Time', 'e'); ?></b></th>\n            <th><b><?php xl('Check In', 'e'); ?>&nbsp;&nbsp;&nbsp;&nbsp;</b>\n            </th>\n            <th><b><?php xl('Check Out', 'e'); ?></b></th>\n            <th><b><?php xl('Code(s)', 'e'); ?></b></th>\n        <?php elseif ($list_id == 'issue_types') : ?>\n            <th><b><?php echo xlt('OpenEMR Application Category'); ?></b></th>\n            <th><b><?php echo xlt('Active'); ?></b></th>\n            <th><b><?php echo xlt('Order'); ?></b></th>\n            <th><b><?php echo xlt('Type'); ?></b></th>\n            <th><b><?php echo xlt('Plural'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php echo xlt('Singular'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php echo xlt('Mini'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php echo xlt('Style'); ?></b></th>\n            <th><b><?php echo xlt('Force Show'); ?></b></th>\n            <th><b><?php echo xlt('Access Control'); ?></b></th>\n        <?php else : ?>\n            <th title=<?php xl('Click to edit', 'e', '\\'', '\\''); ?>>\n                <b><?php xl('ID', 'e'); ?></b></th>\n            <th><b><?php xl('Title', 'e'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php xl('Order', 'e'); ?></b></th>\n            <th><b><?php xl('Default', 'e'); ?></b></th>\n            <th><b><?php xl('Active', 'e'); ?></b></th>\n            <?php if ($list_id == 'taxrate') { ?>\n                <th><b><?php xl('Rate', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'contrameth') { ?>\n                <th><b><?php xl('Effectiveness', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'lbfnames' || $list_id == 'transactions') { ?>\n                <th title='<?php xl('Number of past history columns', 'e'); ?>'>\n                    <b><?php xl('Repeats', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'fitness') { ?>\n                <th><b><?php xl('Color:Abbr', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'adjreason' || $list_id == 'abook_type') { ?>\n                <th><b><?php xl('Type', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'immunizations') { ?>\n                <th>\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;<?php xl('CVX Code Mapping', 'e'); ?></b>\n                </th>\n            <?php }\nif ($GLOBALS['ippf_specific']) { ?>\n                            <th><b><?php xl('Global ID', 'e'); ?></b></th>\n<?php } ?>\n            <th><b><?php\n            if ($list_id == 'language') {\n                echo xlt('ISO 639-2 Code');\n            } elseif ($list_id == 'personal_relationship' || $list_id == 'religious_affiliation' || $list_id == 'ethnicity' || $list_id == 'race' || $list_id == 'drug_route') {\n                echo xlt('HL7-V3 Concept Code');\n            } elseif ($list_id == 'Immunization_Completion_Status') {\n                echo xlt('Treatment Completion Status');\n            } elseif ($list_id == 'race') {\n                echo xlt('CDC Code');\n            } elseif ($list_id == 'Immunization_Manufacturer') {\n                echo xlt('MVX Code');\n            } elseif ($list_id == 'marital') {\n                echo xlt('Marital Status');\n            } elseif ($list_id == 'county') {\n                echo xlt('INCITS Code'); //International Committee for Information Technology Standards\n            } elseif ($list_id == 'immunization_registry_status' || $list_id == 'imm_vac_eligibility_results') {\n                echo xlt('IIS Code');\n            } elseif ($list_id == 'publicity_code') {\n                echo xlt('CDC Code');\n            } elseif ($list_id == 'immunization_refusal_reason' || $list_id == 'immunization_informationsource') {\n                echo xlt('CDC-NIP Code');\n            } elseif ($list_id == 'next_of_kin_relationship' || $list_id == 'immunization_administered_site') {\n                echo xlt('HL7 Code');\n            } elseif ($list_id == 'immunization_observation') {\n                echo xlt('LOINC Code');\n            } elseif ($list_id == 'page_validation') {\n                echo xlt('Page Validation');\n            } elseif ($list_id == 'lbfnames') {\n                echo xlt('Attributes');\n            } else {\n                echo xlt('Notes');\n            } ?></b></th>\n\n            <th><b><?php xl('Code(s)', 'e'); ?></b></th>\n            <?php\n            if (preg_match('/_issue_list$/', $list_id)) { ?>\n                <th><b><?php echo xlt('Subtype'); ?></b></th>\n            <?php\n            }\n        endif; // end not fee sheet ?>\n    </tr>\n    </thead>\n    <tbody>\n    <?php\n    // Get the selected list's elements.\n    if ($list_id) {\n        if ($list_id == 'feesheet') {\n            $res = sqlStatement(\"SELECT * FROM fee_sheet_options \" .\n                \"ORDER BY fs_category, fs_option\");\n            while ($row = sqlFetchArray($res)) {\n                writeFSLine($row['fs_category'], $row['fs_option'], $row['fs_codes']);\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeFSLine('', '', '');\n            }\n        } elseif ($list_id == 'code_types') {\n            $res = sqlStatement(\"SELECT * FROM code_types \" .\n                \"ORDER BY ct_seq, ct_key\");\n            while ($row = sqlFetchArray($res)) {\n                writeCTLine($row);\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeCTLine(array());\n            }\n        } elseif ($list_id == 'issue_types') {\n            $res = sqlStatement(\"SELECT * FROM issue_types \" .\n                \"ORDER BY category, ordering ASC\");\n            while ($row = sqlFetchArray($res)) {\n                writeITLine($row);\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeITLine(array());\n            }\n        } else {\n            /*\n             *  Add edit options to show or hide in list management\n             *   If the edit_options setting of the main list entry is set to 0,\n             *    then none of the list items will show.\n             *   If the edit_options setting of the main list entry is set to 1,\n             *    then the list items with edit_options set to 1 will show.\n             */\n            $res = sqlStatement(\"SELECT lo.*\n                         FROM list_options as lo\n                         right join list_options as lo2 on lo2.option_id = lo.list_id AND lo2.edit_options = 1\n                         WHERE lo.list_id = '{$list_id}' AND lo.edit_options = 1\n                         ORDER BY seq,title\");\n            while ($row = sqlFetchArray($res)) {\n                writeOptionLine(\n                    $row['option_id'],\n                    $row['title'],\n                    $row['seq'],\n                    $row['is_default'],\n                    $row['option_value'],\n                    $row['mapping'],\n                    $row['notes'],\n                    $row['codes'],\n                    $row['toggle_setting_1'],\n                    $row['toggle_setting_2'],\n                    $row['activity'],\n                    $row['subtype']\n                );\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeOptionLine('', '', '', '', 0);\n            }\n        }\n    }\n    ?>\n    </tbody>\n</table>\n\n<?php if ($list_id == 'immunizations') { ?>\n    <p> <?php echo xlt('Is it ok to map these CVX codes to already existent immunizations?') ?>\n        <input type='checkbox' name='ok_map_cvx_codes' id='ok_map_cvx_codes'\n               value='1'/>\n    </p>\n<?php } // end if($list_id == 'immunizations') ?>\n\n<p>\n    <button type=\"submit\" name='form_save' id='form_save'\n            class=\"btn btn-default btn-save\"><?php xl('Save', 'e'); ?></button>\n</p>\n\n</form>\n\n<div class=\"modal fade\" id=\"modal-new-list\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <form action=\"edit_list.php\" method=\"post\" class=\"form\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n                            aria-label=\"<?php echo xl('Close'); ?>\"><i\n                                class=\"fa fa-times\"\n                                aria-hidden=\"true\"></i>\n                    </button>\n                    <h4 class=\"modal-title\"><?php xl('New List', 'e'); ?></h4>\n                </div>\n                <div class=\"modal-body\">\n                    <label for=\"newlistname\"\n                           class=\"control-label\"><?php xl('List Name', 'e'); ?></label>\n                    <input type=\"text\" size=\"20\" class=\"form-control\"\n                           maxlength=\"100\" name=\"newlistname\" id=\"newlistname\">\n                    <input type=\"hidden\" name=\"formaction\" value=\"addlist\">\n\n                </div>\n                <div class=\"modal-footer text-right\">\n                    <button type=\"submit\"\n                            class=\"btn btn-default btn-save\"><?php xl('Save', 'e'); ?></button>\n                    <button type=\"button\" class=\"btn btn-link btn-cancel\"\n                            data-dismiss=\"modal\"><?php xl('Cancel', 'e'); ?></button>\n                </div>\n            </form>\n        </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n</div><!-- /.modal #modal-new-list -->\n\n</body>\n<script type=\"text/javascript\">\n    // jQuery stuff to make the page a little easier to use\n\n    $(document).ready(function () {\n        $(\"#form_save\").click(function () {\n            SaveChanges();\n        });\n        $(\"#list_id\").change(function () {\n            $('#theform').submit();\n        });\n\n        $(\".newlist\").click(function () {\n            NewList(this);\n        });\n        $(\".savenewlist\").click(function () {\n            SaveNewList(this);\n        });\n        $(\".deletelist\").click(function () {\n            DeleteList(this);\n        });\n\n        var SaveChanges = function () {\n            $(\"#formaction\").val(\"save\");\n            // $('#theform').submit();\n            mysubmit();\n        };\n\n        // show the DIV to create a new list\n        var NewList = function (btnObj) {\n            // show the field details DIV\n            $('#newlistdetail').css('visibility', 'visible');\n            $('#newlistdetail').css('display', 'block');\n            $(btnObj).parent().append($(\"#newlistdetail\"));\n            $('#newlistdetail > #newlistname').focus();\n        };\n        // save the new list\n        var SaveNewList = function () {\n            // the list name can only have letters, numbers, spaces and underscores\n            // AND it cannot start with a number\n            if ($(\"#newlistname\").val().match(/^\\d+/)) {\n                alert(\"<?php xl('List names cannot start with numbers.', 'e'); ?>\");\n                return false;\n            }\n            var validname = $(\"#newlistname\").val().replace(/[^A-za-z0-9 -]/g, \"_\"); // match any non-word characters and replace them\n            if (validname != $(\"#newlistname\").val()) {\n                if (!confirm(\"<?php xl('Your list name has been changed to meet naming requirements.', 'e', '', '\\n') . xl('Please compare the new name', 'e', '', ', \\''); ?>\" + validname + \"<?php xl('with the old name', 'e', '\\' ', ', \\''); ?>\" + $(\"#newlistname\").val() + \"<?php xl('Do you wish to continue with the new name?', 'e', '\\'.\\n', ''); ?>\")) {\n                    return false;\n                }\n            }\n            $(\"#newlistname\").val(validname);\n\n            // submit the form to add a new field to a specific group\n            $(\"#formaction\").val(\"addlist\");\n            $(\"#theform\").submit();\n        };\n        // actually delete an entire list from the database\n        var DeleteList = function (btnObj) {\n            var listid = $(btnObj).attr(\"id\");\n            if (confirm(\"<?php xl('WARNING', 'e', '', ' - ') . xl('This action cannot be undone.', 'e', '', '\\n') . xl('Are you sure you wish to delete the entire list', 'e', ' ', '('); ?>\" + listid + \")?\")) {\n                // submit the form to add a new field to a specific group\n                $(\"#formaction\").val(\"deletelist\");\n                $(\"#deletelistname\").val(listid);\n                $(\"#theform\").submit();\n            }\n        };\n    });\n\n</script>\n</html>\n"], "fixing_code": ["<?php\n/**\n * Administration Lists Module.\n *\n * @package   OpenEMR\n * @link      http://www.open-emr.org\n * @author    Rod Roark <rod@sunsetsystems.com>\n * @author    Brady Miller <brady.g.miller@gmail.com>\n * @author    Teny <teny@zhservices.com>\n * @copyright Copyright (c) 2007-2017 Rod Roark <rod@sunsetsystems.com>\n * @copyright Copyright (c) 2017-2018 Brady Miller <brady.g.miller@gmail.com>\n * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3\n */\n\nrequire_once(\"../globals.php\");\nrequire_once(\"$srcdir/acl.inc\");\nrequire_once(\"$phpgacl_location/gacl_api.class.php\");\nrequire_once(\"$srcdir/lists.inc\");\nrequire_once(\"../../custom/code_types.inc.php\");\nrequire_once(\"$srcdir/options.inc.php\");\n\nuse OpenEMR\\Core\\Header;\n\n// Below allows the list to default to the first item on the list\n//   when list_id is blank.\n$blank_list_id = '';\nif (empty($_REQUEST['list_id'])) {\n    $list_id = 'language';\n    $blank_list_id = true;\n} else {\n    $list_id = $_REQUEST['list_id'];\n}\n\n// Check authorization.\n$thisauth = acl_check('admin', 'super');\nif (!$thisauth) {\n    die(xl('Not authorized'));\n}\n\n// If we are saving, then save.\n//\nif ($_POST['formaction'] == 'save' && $list_id) {\n    $opt = $_POST['opt'];\n    if ($list_id == 'feesheet') {\n        // special case for the feesheet list\n        sqlStatement(\"DELETE FROM fee_sheet_options\");\n        for ($lino = 1; isset($opt[\"$lino\"]['category']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $category = formTrim($iter['category']);\n            $option = formTrim($iter['option']);\n            $codes = formTrim($iter['codes']);\n            if (strlen($category) > 0 && strlen($option) > 0) {\n                sqlInsert(\"INSERT INTO fee_sheet_options ( \" .\n                    \"fs_category, fs_option, fs_codes \" .\n                    \") VALUES ( \" .\n                    \"'$category', \" .\n                    \"'$option', \" .\n                    \"'$codes' \" .\n                    \")\");\n            }\n        }\n    } elseif ($list_id == 'code_types') {\n        // special case for code types\n        sqlStatement(\"DELETE FROM code_types\");\n        for ($lino = 1; isset($opt[\"$lino\"]['ct_key']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $ct_key = formTrim($iter['ct_key']);\n            $ct_id = formTrim($iter['ct_id']) + 0;\n            $ct_seq = formTrim($iter['ct_seq']) + 0;\n            $ct_mod = formTrim($iter['ct_mod']) + 0;\n            $ct_just = formTrim($iter['ct_just']);\n            $ct_mask = formTrim($iter['ct_mask']);\n            $ct_fee = empty($iter['ct_fee']) ? 0 : 1;\n            $ct_rel = empty($iter['ct_rel']) ? 0 : 1;\n            $ct_nofs = empty($iter['ct_nofs']) ? 0 : 1;\n            $ct_diag = empty($iter['ct_diag']) ? 0 : 1;\n            $ct_active = empty($iter['ct_active']) ? 0 : 1;\n            $ct_label = formTrim($iter['ct_label']);\n            $ct_external = formTrim($iter['ct_external']) + 0;\n            $ct_claim = empty($iter['ct_claim']) ? 0 : 1;\n            $ct_proc = empty($iter['ct_proc']) ? 0 : 1;\n            $ct_term = empty($iter['ct_term']) ? 0 : 1;\n            $ct_problem = empty($iter['ct_problem']) ? 0 : 1;\n            $ct_drug = empty($iter['ct_drug']) ? 0 : 1;\n            if (strlen($ct_key) > 0 && $ct_id > 0) {\n                sqlInsert(\"INSERT INTO code_types ( \" .\n                    \"ct_key, ct_id, ct_seq, ct_mod, ct_just, ct_mask, ct_fee, ct_rel, ct_nofs, ct_diag, ct_active, ct_label, ct_external, ct_claim, ct_proc, ct_term, ct_problem, ct_drug \" .\n                    \") VALUES ( \" .\n                    \"'$ct_key' , \" .\n                    \"'$ct_id'  , \" .\n                    \"'$ct_seq' , \" .\n                    \"'$ct_mod' , \" .\n                    \"'$ct_just', \" .\n                    \"'$ct_mask', \" .\n                    \"'$ct_fee' , \" .\n                    \"'$ct_rel' , \" .\n                    \"'$ct_nofs', \" .\n                    \"'$ct_diag', \" .\n                    \"'$ct_active', \" .\n                    \"'$ct_label', \" .\n                    \"'$ct_external', \" .\n                    \"'$ct_claim', \" .\n                    \"'$ct_proc', \" .\n                    \"'$ct_term', \" .\n                    \"'$ct_problem', \" .\n                    \"'$ct_drug' \" .\n                    \")\");\n            }\n        }\n    } elseif ($list_id == 'issue_types') {\n        // special case for issue_types\n        sqlStatement(\"DELETE FROM issue_types\");\n        for ($lino = 1; isset($opt[\"$lino\"]['category']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $it_category = formTrim($iter['category']);\n            $it_type = formTrim($iter['type']);\n            if ((strlen($it_category) > 0) && (strlen($it_type) > 0)) {\n                sqlInsert(\"INSERT INTO issue_types (\" .\n                    \"`active`,`category`,`ordering`, `type`, `plural`, `singular`, `abbreviation`, `style`, \" .\n                    \"`force_show`, `aco_spec`) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\", array(\n                    formTrim($iter['active']),\n                    $it_category,\n                    formTrim($iter['ordering']),\n                    $it_type,\n                    formTrim($iter['plural']),\n                    formTrim($iter['singular']),\n                    formTrim($iter['abbreviation']),\n                    formTrim($iter['style']),\n                    formTrim($iter['force_show']),\n                    formTrim($iter['aco_spec']),\n                ));\n            }\n        }\n    } else {\n        // all other lists\n        //\n        // collect the option toggle if using the 'immunizations' list\n        if ($list_id == 'immunizations') {\n            $ok_map_cvx_codes = isset($_POST['ok_map_cvx_codes']) ? $_POST['ok_map_cvx_codes'] : 0;\n        }\n        // erase lists options and recreate them from the submitted form data\n        sqlStatement(\"DELETE FROM list_options WHERE list_id = '$list_id'\");\n        for ($lino = 1; isset($opt[\"$lino\"]['id']); ++$lino) {\n            $iter = $opt[\"$lino\"];\n            $value = empty($iter['value']) ? 0 : (formTrim($iter['value']) + 0);\n            $id = formTrim($iter['id']);\n            if (strlen($id) > 0) {\n                // Special processing for the immunizations list\n                // Map the entered cvx codes into the immunizations table cvx_code\n                // Ensure the following conditions are met to do this:\n                //   $list_id == 'immunizations'\n                //   $value is an integer and greater than 0\n                //   $id is set, not empty and not equal to 0\n                //    (note that all these filters are important. Not allowing $id\n                //     of zero here is extremely important; never remove this conditional\n                //     or you risk corrupting your current immunizations database entries)\n                //   $ok_map_cvx_codes is equal to 1\n                if ($list_id == 'immunizations' &&\n                    is_int($value) &&\n                    $value > 0 &&\n                    isset($id) &&\n                    !empty($id) &&\n                    $id != 0 &&\n                    $ok_map_cvx_codes == 1\n                ) {\n                    sqlStatement(\"UPDATE `immunizations` \" .\n                        \"SET `cvx_code`='\" . $value . \"' \" .\n                        \"WHERE `immunization_id`='\" . $id . \"'\");\n                }\n\n                // Force List Based Form names to start with LBF.\n                if ($list_id == 'lbfnames' && substr($id, 0, 3) != 'LBF') {\n                    $id = \"LBF$id\";\n                }\n\n                // Force Transaction Form names to start with LBT.\n                if ($list_id == 'transactions' && substr($id, 0, 3) != 'LBT') {\n                    $id = \"LBT$id\";\n                }\n\n                if ($list_id == 'apptstat' || $list_id == 'groupstat') {\n                    $notes = formTrim($iter['apptstat_color']) . '|' . formTrim($iter['apptstat_timealert']);\n                } else {\n                    $notes = formTrim($iter['notes']);\n                }\n                // Insert the list item\n                sqlInsert(\"INSERT INTO list_options ( \" .\n                    \"list_id, option_id, title, seq, is_default, option_value, mapping, notes, codes, toggle_setting_1, toggle_setting_2, activity, subtype \" .\n                    \") VALUES ( \" .\n                    \"'$list_id', \" .\n                    \"'\" . $id . \"', \" .\n                    \"'\" . formTrim($iter['title']) . \"', \" .\n                    \"'\" . formTrim($iter['seq']) . \"', \" .\n                    \"'\" . formTrim($iter['default']) . \"', \" .\n                    \"'\" . $value . \"', \" .\n                    \"'\" . formTrim($iter['mapping']) . \"', \" .\n                    \"'\" . $notes . \"', \" .\n                    \"'\" . formTrim($iter['codes']) . \"', \" .\n                    \"'\" . formTrim($iter['toggle_setting_1']) . \"', \" .\n                    \"'\" . formTrim($iter['toggle_setting_2']) . \"', \" .\n                    \"'\" . formTrim($iter['activity']) . \"', \" .\n                    \"'\" . formTrim($iter['subtype']) . \"'  \" .\n                    \")\");\n            }\n        }\n    }\n} elseif ($_POST['formaction'] == 'addlist') {\n    // make a new list ID from the new list name\n    $newlistID = $_POST['newlistname'];\n    $newlistID = preg_replace(\"/\\W/\", \"_\", $newlistID);\n\n    // determine the position of this new list\n    $row = sqlQuery(\"SELECT max(seq) AS maxseq FROM list_options WHERE list_id= 'lists'\");\n\n    // add the new list to the list-of-lists\n    sqlInsert(\"INSERT INTO list_options ( \" .\n        \"list_id, option_id, title, seq, is_default, option_value \" .\n        \") VALUES ( 'lists', ?, ?, ?, '1', '0')\", array($newlistID, $_POST['newlistname'], ($row['maxseq'] + 1)));\n    $list_id = $newlistID;\n} elseif ($_POST['formaction'] == 'deletelist') {\n    // delete the lists options\n    sqlStatement(\"DELETE FROM list_options WHERE list_id = '\" . $_POST['list_id'] . \"'\");\n    // delete the list from the master list-of-lists\n    sqlStatement(\"DELETE FROM list_options WHERE list_id = 'lists' AND option_id='\" . $_POST['list_id'] . \"'\");\n}\n\n$opt_line_no = 0;\n\n// Given a string of multiple instances of code_type|code|selector,\n// make a description for each.\n// @TODO Instead should use a function from custom/code_types.inc.php and need to remove casing functions\nfunction getCodeDescriptions($codes)\n{\n    global $code_types;\n    $arrcodes = explode('~', $codes);\n    $s = '';\n    foreach ($arrcodes as $codestring) {\n        if ($codestring === '') {\n            continue;\n        }\n        $arrcode = explode('|', $codestring);\n        $code_type = $arrcode[0];\n        $code = $arrcode[1];\n        $selector = $arrcode[2];\n        $desc = '';\n        if ($code_type == 'PROD') {\n            $row = sqlQuery(\"SELECT name FROM drugs WHERE drug_id = '$code' \");\n            $desc = \"$code:$selector \" . $row['name'];\n        } else {\n            $row = sqlQuery(\"SELECT code_text FROM codes WHERE \" .\n                \"code_type = '\" . $code_types[$code_type]['id'] . \"' AND \" .\n                \"code = '$code' ORDER BY modifier LIMIT 1\");\n            $desc = \"$code_type:$code \" . ucfirst(strtolower($row['code_text']));\n        }\n        $desc = str_replace('~', ' ', $desc);\n        if ($s) {\n            $s .= '~';\n        }\n        $s .= $desc;\n    }\n    return $s;\n}\n\n// Write one option line to the form.\n//\nfunction writeOptionLine(\n    $option_id,\n    $title,\n    $seq,\n    $default,\n    $value,\n    $mapping = '',\n    $notes = '',\n    $codes = '',\n    $tog1 = '',\n    $tog2 = '',\n    $active = '1',\n    $subtype = ''\n) {\n\n    global $opt_line_no, $list_id;\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n    $checked = $default ? \" checked\" : \"\";\n    $checked_tog1 = $tog1 ? \" checked\" : \"\";\n    $checked_tog2 = $tog2 ? \" checked\" : \"\";\n    $checked_active = $active ? \" checked\" : \"\";\n\n    echo \" <tr>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][id]' value='\" .\n        htmlspecialchars($option_id, ENT_QUOTES) . \"' size='12' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][title]' value='\" .\n        htmlspecialchars($title, ENT_QUOTES) . \"' size='20' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . (htmlspecialchars(xl($title), ENT_QUOTES)) . \"</td>\\n\";\n    }\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][seq]' value='\" .\n        htmlspecialchars($seq, ENT_QUOTES) . \"' size='4' maxlength='10' class='optin' />\";\n    echo \"</td>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='checkbox' name='opt[$opt_line_no][default]' value='1' \" .\n        \"onclick='defClicked($opt_line_no)' class='optin'$checked />\";\n    echo \"</td>\\n\";\n\n    if (preg_match('/Eye_QP_/', $list_id)) {\n        echo \"  <td>\";\n        echo \"<select name='opt[$opt_line_no][activity]' class='optin'>\";\n        foreach (array(\n                     1 => xl('Replace'),\n                     2 => xl('Append')\n                 ) as $key => $desc) {\n            echo \"<option value='$key'\";\n            if ($key == $active) {\n                echo \" selected\";\n            }\n            echo \">\" . htmlspecialchars($desc) . \"</option>\";\n        }\n        echo \"</select>\";\n        echo \"</td>\";\n    } else {\n        echo \"  <td>\";\n        echo \"<input type='checkbox' name='opt[$opt_line_no][activity]' value='1' \" . \" class='optin'$checked_active />\";\n        echo \"</td>\\n\";\n    }\n    // Tax rates, contraceptive methods and LBF names have an additional attribute.\n    //\n    if ($list_id == 'taxrate' || $list_id == 'contrameth' || $list_id == 'lbfnames' || $list_id == 'transactions') {\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][value]' value='\" .\n            htmlspecialchars($value, ENT_QUOTES) . \"' size='8' maxlength='15' class='optin' />\";\n        echo \"</td>\\n\";\n    } // Adjustment reasons use option_value as a reason category.  This is\n    // needed to distinguish between adjustments that change the invoice\n    // balance and those that just shift responsibility of payment or\n    // are used as comments.\n    //\n    elseif ($list_id == 'adjreason') {\n        echo \"  <td>\";\n        echo \"<select name='opt[$opt_line_no][value]' class='optin'>\";\n        foreach (array(\n                     1 => xl('Charge adjustment'),\n                     2 => xl('Coinsurance'),\n                     3 => xl('Deductible'),\n                     4 => xl('Other pt resp'),\n                     5 => xl('Comment'),\n                 ) as $key => $desc) {\n            echo \"<option value='$key'\";\n            if ($key == $value) {\n                echo \" selected\";\n            }\n            echo \">\" . htmlspecialchars($desc) . \"</option>\";\n        }\n        echo \"</select>\";\n        echo \"</td>\\n\";\n    } // Address book categories use option_value to flag category as a\n    // person-centric vs company-centric vs indifferent.\n    //\n    elseif ($list_id == 'abook_type') {\n        echo \"  <td>\";\n        echo \"<select name='opt[$opt_line_no][value]' class='optin'>\";\n        foreach (array(\n                     1 => xl('Unassigned'),\n                     2 => xl('Person'),\n                     3 => xl('Company'),\n                 ) as $key => $desc) {\n            echo \"<option value='$key'\";\n            if ($key == $value) {\n                echo \" selected\";\n            }\n            echo \">\" . htmlspecialchars($desc) . \"</option>\";\n        }\n        echo \"</select>\";\n        echo \"</td>\\n\";\n    } // Immunization categories use option_value to map list items\n    // to CVX codes.\n    //\n    elseif ($list_id == 'immunizations') {\n        echo \"  <td>\";\n        echo \"<input type='text' size='10' name='opt[$opt_line_no][value]' \" .\n            \"value='\" . htmlspecialchars($value, ENT_QUOTES) . \"' onclick='sel_cvxcode(this)' \" .\n            \"title='\" . htmlspecialchars(xl('Click to select or change CVX code'), ENT_QUOTES) . \"'/>\";\n        echo \"</td>\\n\";\n    }\n\n    // IPPF includes the ability to map each list item to a \"master\" identifier.\n    // Sports teams use this for some extra info for fitness levels.\n    //\n    if ($GLOBALS['ippf_specific'] || $list_id == 'fitness') {\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][mapping]' value='\" .\n            htmlspecialchars($mapping, ENT_QUOTES) . \"' size='12' maxlength='15' class='optin' />\";\n        echo \"</td>\\n\";\n    } elseif ($list_id == 'apptstat' || $list_id == 'groupstat') {\n        list($apptstat_color, $apptstat_timealert) = explode(\"|\", $notes);\n        echo \"  <td>\";\n        echo \"<input type='text' class='jscolor' name='opt[$opt_line_no][apptstat_color]' value='\" .\n            htmlspecialchars($apptstat_color, ENT_QUOTES) . \"' size='6' maxlength='6' class='optin' />\";\n        echo \"</td>\\n\";\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][apptstat_timealert]' value='\" .\n            htmlspecialchars($apptstat_timealert, ENT_QUOTES) . \"' size='2' maxlength='2' class='optin' />\";\n        echo \"</td>\\n\";\n    } else {\n        echo \"  <td>\";\n        echo \"<input type='text' name='opt[$opt_line_no][notes]' value='\" .\n            attr($notes) . \"' size='25' maxlength='255' class='optin' \";\n        echo \"/>\";\n        echo \"</td>\\n\";\n    }\n    if ($list_id == 'apptstat' || $list_id == 'groupstat') {\n        echo \"  <td>\";\n        echo \"<input type='checkbox' name='opt[$opt_line_no][toggle_setting_1]' value='1' \" .\n            \"onclick='defClicked($opt_line_no)' class='optin'$checked_tog1 />\";\n        echo \"</td>\\n\";\n        echo \"  <td>\";\n        echo \"<input type='checkbox' name='opt[$opt_line_no][toggle_setting_2]' value='1' \" .\n            \"onclick='defClicked($opt_line_no)' class='optin'$checked_tog2 />\";\n        echo \"</td>\\n\";\n    }\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][codes]' title='\" .\n        xla('Clinical Term Code(s)') . \"' value='\" .\n        htmlspecialchars($codes, ENT_QUOTES) . \"' onclick='select_clin_term_code(this)' size='25' maxlength='255' class='optin' />\";\n    echo \"</td>\\n\";\n\n    if (preg_match('/_issue_list$/', $list_id)) {\n        echo \"  <td>\";\n        echo generate_select_list(\"opt[$opt_line_no][subtype]\", 'issue_subtypes', $subtype, 'Subtype', ' ', 'optin');\n        echo \"</td>\\n\";\n    }\n    if (preg_match('/Eye_QP_/', $list_id)) {\n        echo \"<input type='hidden' name='opt[$opt_line_no][subtype]' value='\" . htmlspecialchars($subtype, ENT_QUOTES) . \"' />\";\n        echo \"<input type='hidden' name='opt[$opt_line_no][mapping]' value='\" . htmlspecialchars($mapping, ENT_QUOTES) . \"' />\";\n    }\n    echo \" </tr>\\n\";\n}\n\n// Write a form line as above but for the special case of the Fee Sheet.\n//\nfunction writeFSLine($category, $option, $codes)\n{\n    global $opt_line_no;\n\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n\n    $descs = getCodeDescriptions($codes);\n\n    echo \" <tr>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][category]' value='\" .\n        htmlspecialchars($category, ENT_QUOTES) . \"' size='20' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n\n    echo \"  <td>\";\n    echo \"<input type='text' name='opt[$opt_line_no][option]' value='\" .\n        htmlspecialchars($option, ENT_QUOTES) . \"' size='20' maxlength='63' class='optin' />\";\n    echo \"</td>\\n\";\n\n    echo \"  <td align='left' class='optcell'>\";\n    echo \"   <div id='codelist_$opt_line_no'>\";\n    if (strlen($descs)) {\n        $arrdescs = explode('~', $descs);\n        $i = 0;\n        foreach ($arrdescs as $desc) {\n            echo \"<a href='' onclick='return delete_code($opt_line_no,$i)' title='\" . xl('Delete') . \"'>\";\n            echo \"[x]&nbsp;</a>$desc<br />\";\n            ++$i;\n        }\n    }\n    echo \"</div>\";\n    echo \"<a href='' onclick='return select_code($opt_line_no)'>\";\n    echo \"[\" . xl('Add') . \"]</a>\";\n\n    echo \"<input type='hidden' name='opt[$opt_line_no][codes]' value='\" .\n        htmlspecialchars($codes, ENT_QUOTES) . \"' />\";\n    echo \"<input type='hidden' name='opt[$opt_line_no][descs]' value='\" .\n        htmlspecialchars($descs, ENT_QUOTES) . \"' />\";\n    echo \"</td>\\n\";\n\n    echo \" </tr>\\n\";\n}\n\n\n/**\n * Helper functions for writeITLine() and writeCTLine().\n */\nfunction ctGenCell($opt_line_no, $data_array, $name, $size, $maxlength, $title = '')\n{\n    $value = isset($data_array[$name]) ? $data_array[$name] : '';\n    $s = \"  <td\";\n    if ($title) {\n        $s .= \" title='\" . attr($title) . \"'\";\n    }\n    $s .= \">\";\n    $s .= \"<input type='text' name='opt[$opt_line_no][$name]' value='\";\n    $s .= attr($value);\n    $s .= \"' size='$size' maxlength='$maxlength' class='optin' />\";\n    $s .= \"</td>\\n\";\n    return $s;\n}\n\nfunction ctGenCbox($opt_line_no, $data_array, $name, $title = '')\n{\n    $checked = empty($data_array[$name]) ? '' : 'checked ';\n    $s = \"  <td\";\n    if ($title) {\n        $s .= \" title='\" . attr($title) . \"'\";\n    }\n    $s .= \">\";\n    $s .= \"<input type='checkbox' name='opt[$opt_line_no][$name]' value='1' \";\n    $s .= \"$checked/>\";\n    $s .= \"</td>\\n\";\n    return $s;\n}\n\nfunction ctSelector($opt_line_no, $data_array, $name, $option_array, $title = '')\n{\n    $value = isset($data_array[$name]) ? $data_array[$name] : '';\n    $s = \"  <td title='\" . attr($title) . \"'>\";\n    $s .= \"<select name='opt[$opt_line_no][$name]' class='optin'>\";\n    foreach ($option_array as $key => $desc) {\n        $s .= \"<option value='\" . attr($key) . \"'\";\n        if ($key == $value) {\n            $s .= \" selected\";\n        }\n        $s .= \">\" . text($desc) . \"</option>\";\n    }\n    $s .= \"</select>\";\n    $s .= \"</td>\\n\";\n    return $s;\n}\n\n// Write a form line as above but for the special case of Code Types.\n//\nfunction writeCTLine($ct_array)\n{\n    global $opt_line_no, $cd_external_options;\n\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n\n    echo \" <tr>\\n\";\n\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_active',\n        xl('Is this code type active?')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_key',\n        6,\n        15,\n        xl('Unique human-readable identifier for this type')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_id',\n        2,\n        11,\n        xl('Unique numeric identifier for this type')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_label',\n        6,\n        30,\n        xl('Label for this type')\n    );\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($ct_array['ct_label']) . \"</td>\\n\";\n    }\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_seq',\n        2,\n        3,\n        xl('Numeric display order')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_mod',\n        1,\n        2,\n        xl('Length of modifier, 0 if none')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_just',\n        4,\n        15,\n        xl('If billing justification is used enter the name of the diagnosis code type.')\n    );\n    echo ctGenCell(\n        $opt_line_no,\n        $ct_array,\n        'ct_mask',\n        6,\n        9,\n        xl('Specifies formatting for codes. # = digit, @ = alpha, * = any character. Empty if not used.')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_claim',\n        xl('Is this code type used in claims?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_fee',\n        xl('Are fees charged for this type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_rel',\n        xl('Does this type allow related codes?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_nofs',\n        xl('Is this type hidden in the fee sheet?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_proc',\n        xl('Is this a procedure/service type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_diag',\n        xl('Is this a diagnosis type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_term',\n        xl('Is this a Clinical Term code type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_problem',\n        xl('Is this a Medical Problem code type?')\n    );\n    echo ctGenCBox(\n        $opt_line_no,\n        $ct_array,\n        'ct_drug',\n        xl('Is this a Medication type?')\n    );\n    echo ctSelector(\n        $opt_line_no,\n        $ct_array,\n        'ct_external',\n        $cd_external_options,\n        xl('Is this using external sql tables? If it is, then choose the format.')\n    );\n    echo \" </tr>\\n\";\n}\n\n/**\n * Special case of Issue Types\n */\nfunction writeITLine($it_array)\n{\n    global $opt_line_no, $ISSUE_TYPE_CATEGORIES, $ISSUE_TYPE_STYLES;\n    ++$opt_line_no;\n    $bgcolor = \"#\" . (($opt_line_no & 1) ? \"ddddff\" : \"ffdddd\");\n    echo \" <tr>\\n\";\n    echo ctSelector($opt_line_no, $it_array, 'category', $ISSUE_TYPE_CATEGORIES, xl('OpenEMR Application Category'));\n    echo ctGenCBox($opt_line_no, $it_array, 'active', xl('Is this active?'));\n    echo ctGenCell($opt_line_no, $it_array, 'ordering', 4, 10, xl('Order'));\n    echo ctGenCell($opt_line_no, $it_array, 'type', 15, 75, xl('Issue Type'));\n    echo ctGenCell($opt_line_no, $it_array, 'plural', 15, 75, xl('Plural'));\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($it_array['plural']) . \"</td>\\n\";\n    }\n    echo ctGenCell($opt_line_no, $it_array, 'singular', 15, 75, xl('Singular'));\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($it_array['singular']) . \"</td>\\n\";\n    }\n    echo ctGenCell($opt_line_no, $it_array, 'abbreviation', 5, 10, xl('Abbreviation'));\n    // if not english and translating lists then show the translation\n    if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n        echo \"  <td align='center' class='translation'>\" . xlt($it_array['abbreviation']) . \"</td>\\n\";\n    }\n    echo ctSelector($opt_line_no, $it_array, 'style', $ISSUE_TYPE_STYLES, xl('Standard; Simplified: only title, start date, comments and an Active checkbox;no diagnosis, occurrence, end date, referred-by or sports fields. ; Football Injury'));\n    echo ctGenCBox($opt_line_no, $it_array, 'force_show', xl('Show this category on the patient summary screen even if no issues have been entered for this category.'));\n\n    echo \"<td>\";\n    echo \"<select name='opt[$opt_line_no][aco_spec]' class='optin'>\";\n    echo \"<option value=''></option>\";\n    echo gen_aco_html_options($it_array['aco_spec']);\n    echo \"</select>\";\n    echo \"</td>\";\n\n    echo \" </tr>\\n\";\n}\n\n?>\n<html>\n\n<head>\n    <?php echo Header::setupHeader(['select2', 'jscolor']); ?>\n    <title><?php xl('List Editor', 'e'); ?></title>\n    <style>\n        .optcell {\n        }\n\n        .optin {\n            background-color: transparent;\n        }\n\n        .help {\n            cursor: help;\n        }\n\n        .translation {\n            color: green;\n        }\n    </style>\n    <script type=\"text/javascript\">\n        $(document).ready(function () {\n            $(\".select-dropdown\").select2({\n                theme: \"bootstrap\"\n            });\n        });\n\n        // Keeping track of code picker requests.\n        var current_lino = 0;\n        var current_sel_name = '';\n        var current_sel_clin_term = '';\n\n        // Helper function to set the contents of a div.\n        // This is for Fee Sheet administration.\n        function setDivContent(id, content) {\n            if (document.getElementById) {\n                var x = document.getElementById(id);\n                x.innerHTML = '';\n                x.innerHTML = content;\n            }\n            else if (document.all) {\n                var x = document.all[id];\n                x.innerHTML = content;\n            }\n        }\n\n        // Given a line number, redisplay its descriptive list of codes.\n        // This is for Fee Sheet administration.\n        function displayCodes(lino) {\n            var f = document.forms[0];\n            var s = '';\n            var descs = f['opt[' + lino + '][descs]'].value;\n            if (descs.length) {\n                var arrdescs = descs.split('~');\n                for (var i = 0; i < arrdescs.length; ++i) {\n                    s += \"<a href='' onclick='return delete_code(\" + lino + \",\" + i + \")' title='<?php xl('Delete', 'e'); ?>'>\";\n                    s += \"[x]&nbsp;</a>\" + arrdescs[i] + \"<br />\";\n                }\n            }\n            setDivContent('codelist_' + lino, s);\n        }\n\n        // Helper function to remove a Fee Sheet code.\n        function dc_substring(s, i) {\n            var r = '';\n            var j = s.indexOf('~', i);\n            if (j < 0) { // deleting last segment\n                if (i > 0) r = s.substring(0, i - 1); // omits trailing ~\n            }\n            else { // not last segment\n                r = s.substring(0, i) + s.substring(j + 1);\n            }\n            return r;\n        }\n\n        // Remove a generated Fee Sheet code.\n        function delete_code(lino, seqno) {\n            var f = document.forms[0];\n            var celem = f['opt[' + lino + '][codes]'];\n            var delem = f['opt[' + lino + '][descs]'];\n            var ci = 0;\n            var di = 0;\n            for (var i = 0; i < seqno; ++i) {\n                ci = celem.value.indexOf('~', ci) + 1;\n                di = delem.value.indexOf('~', di) + 1;\n            }\n            celem.value = dc_substring(celem.value, ci);\n            delem.value = dc_substring(delem.value, di);\n            displayCodes(lino);\n            return false;\n        }\n\n        // This invokes the find-code popup.\n        // For Fee Sheet administration.\n        function select_code(lino) {\n            current_sel_name = '';\n            current_sel_clin_term = '';\n            current_lino = lino;\n            dlgopen('../patient_file/encounter/find_code_dynamic.php', '_blank', 900, 600);\n            return false;\n        }\n\n        // This invokes the find-code popup.\n        // For CVX/immunization code administration.\n        function sel_cvxcode(e) {\n            current_sel_clin_term = '';\n            current_sel_name = e.name;\n            dlgopen('../patient_file/encounter/find_code_dynamic.php?codetype=CVX', '_blank', 900, 600);\n        }\n\n        // This invokes the find-code popup.\n        // For CVX/immunization code administration.\n        function select_clin_term_code(e) {\n            current_sel_name = '';\n            current_sel_clin_term = e.name;\n            dlgopen('../patient_file/encounter/find_code_dynamic.php?codetype=<?php echo attr(collect_codetypes(\"clinical_term\", \"csv\")); ?>', '_blank', 900, 600);\n        }\n\n        // This is for callback by the find-code popup.\n        function set_related(codetype, code, selector, codedesc) {\n            var f = document.forms[0];\n            if (current_sel_clin_term) {\n                // Coming from the Clinical Terms Code(s) edit\n                var e = f[current_sel_clin_term];\n                var s = e.value;\n                if (code) {\n                    if (s.length > 0) s += ';';\n                    s += codetype + ':' + code;\n                }\n                else {\n                    s = '';\n                }\n                e.value = s;\n            }\n            else if (current_sel_name) {\n                // Coming from Immunizations edit\n                var e = f[current_sel_name];\n                var s = e.value;\n                if (code) {\n                    s = code;\n                }\n                else {\n                    s = '0';\n                }\n                e.value = s;\n            }\n            else {\n                // Coming from Fee Sheet edit\n                var celem = f['opt[' + current_lino + '][codes]'];\n                var delem = f['opt[' + current_lino + '][descs]'];\n                var i = 0;\n                while ((i = codedesc.indexOf('~')) >= 0) {\n                    codedesc = codedesc.substring(0, i) + ' ' + codedesc.substring(i+1);\n                }\n                if (code) {\n                    if (celem.value) {\n                        celem.value += '~';\n                        delem.value += '~';\n                    }\n                    celem.value += codetype + '|' + code + '|' + selector;\n                    if (codetype == 'PROD') {\n                        delem.value += code + ':' + selector + ' ' + codedesc;\n                    } else {\n                        delem.value += codetype + ':' + code + ' ' + codedesc;\n                    }\n                } else {\n                    celem.value = '';\n                    delem.value = '';\n                }\n                displayCodes(current_lino);\n            }\n        }\n\n        // This is for callback by the find-code popup.\n        // Deletes the specified codetype:code from the currently selected list.\n        function del_related(s) {\n            var f = document.forms[0];\n            if (current_sel_clin_term) {\n                // Coming from the Clinical Terms Code(s) edit\n                my_del_related(s, f[current_sel_clin_term], false);\n            }\n            else if (current_sel_name) {\n                // Coming from Immunizations edit\n                f[current_sel_name].value = '0';\n            }\n            else {\n                // Coming from Fee Sheet edit\n                f['opt[' + current_lino + '][codes]'].value = '';\n                f['opt[' + current_lino + '][descs]'].value = '';\n                displayCodes(current_lino);\n            }\n        }\n\n        // This is for callback by the find-code popup.\n        // Returns the array of currently selected codes with each element in codetype:code format.\n        function get_related() {\n            var f = document.forms[0];\n            if (current_sel_clin_term) {\n                return f[current_sel_clin_term].value.split(';');\n            }\n            return new Array();\n        }\n\n        // Called when a \"default\" checkbox is clicked.  Clears all the others.\n        function defClicked(lino) {\n            var f = document.forms[0];\n            for (var i = 1; f['opt[' + i + '][default]']; ++i) {\n                if (i != lino) f['opt[' + i + '][default]'].checked = false;\n            }\n        }\n\n        // Form validation and submission.\n        // This needs more validation.\n        function mysubmit() {\n            var f = document.forms[0];\n            if (f.list_id.value == 'code_types') {\n                for (var i = 1; f['opt[' + i + '][ct_key]'].value; ++i) {\n                    var ikey = 'opt[' + i + ']';\n                    for (var j = i + 1; f['opt[' + j + '][ct_key]'].value; ++j) {\n                        var jkey = 'opt[' + j + ']';\n                        if (f[ikey + '[ct_key]'].value == f[jkey + '[ct_key]'].value) {\n                            alert('<?php echo xl('Error: duplicated name on line') ?>' + ' ' + j);\n                            return;\n                        }\n                        if (parseInt(f[ikey + '[ct_id]'].value) == parseInt(f[jkey + '[ct_id]'].value)) {\n                            alert('<?php echo xl('Error: duplicated ID on line') ?>' + ' ' + j);\n                            return;\n                        }\n                    }\n                }\n            }\n            else if (f['opt[1][id]']) {\n                // Check for duplicate IDs.\n                for (var i = 1; f['opt[' + i + '][id]']; ++i) {\n                    var ikey = 'opt[' + i + '][id]';\n                    if (f[ikey].value == '') continue;\n                    for (var j = i+1; f['opt[' + j + '][id]']; ++j) {\n                        var jkey = 'opt[' + j + '][id]';\n                        if (f[ikey].value.toUpperCase() == f[jkey].value.toUpperCase()) {\n                            alert('<?php echo xls('Error: duplicated ID') ?>' + ': ' + f[jkey].value);\n                            f[jkey].scrollIntoView();\n                            f[jkey].focus();\n                            f[jkey].select();\n                            return;\n                        }\n                    }\n                }\n            }\n            f.submit();\n        }\n\n    </script>\n\n</head>\n\n<body class=\"body_top\">\n<form method='post' name='theform' id='theform' action='edit_list.php'>\n<nav class=\"navbar navbar-default navbar-fixed-top\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle collapsed\"\n                    data-toggle=\"collapse\" data-target=\"#navbar-list\"\n                    aria-expanded=\"false\">\n                <span class=\"sr-only\"><?php xl('Toggle navigation', 'e'); ?></span>\n                <i class=\"fa fa-bars\"></i>\n            </button>\n            <a class=\"navbar-brand\"\n               href=\"#\"><?php xl('Manage Lists', 'e'); ?></a>\n        </div>\n\n        <!-- Collect the nav links, forms, and other content for toggling -->\n        <div class=\"collapse navbar-collapse\" id=\"navbar-list\">\n            <ul class=\"nav navbar-nav\">\n                <li><a href=\"#\" data-toggle=\"modal\"\n                       data-target=\"#modal-new-list\"><i class=\"fa fa-plus\"></i>&nbsp;<?php xl('New List', 'e'); ?>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" class=\"deletelist\" id=\"<?php echo $list_id; ?>\">\n                        <i class=\"fa fa-trash\"></i>&nbsp;<?php xl('Delete List', 'e'); ?>\n                    </a>\n                </li>\n            </ul>\n                <input type=\"hidden\" name=\"formaction\" id=\"formaction\">\n                <div class=\"form-group navbar-left\">\n                    <select name='list_id' class=\"form-control select-dropdown\"\n                            id=\"list_id\">\n                        <?php\n\n                        // List order depends on language translation options.\n                        $lang_id = empty($_SESSION['language_choice']) ? '1' : $_SESSION['language_choice'];\n\n                        if (($lang_id == '1' && !empty($GLOBALS['skip_english_translation'])) ||\n                            !$GLOBALS['translate_lists']\n                        ) {\n                            $res = sqlStatement(\"SELECT option_id, title FROM list_options WHERE \" .\n                                \"list_id = 'lists' ORDER BY title, seq\");\n                        } else {\n                            // Use and sort by the translated list name.\n                            $res = sqlStatement(\"SELECT lo.option_id, \" .\n                                \"IF(LENGTH(ld.definition),ld.definition,lo.title) AS title \" .\n                                \"FROM list_options AS lo \" .\n                                \"LEFT JOIN lang_constants AS lc ON lc.constant_name = lo.title \" .\n                                \"LEFT JOIN lang_definitions AS ld ON ld.cons_id = lc.cons_id AND \" .\n                                \"ld.lang_id = '$lang_id' \" .\n                                \"WHERE lo.list_id = 'lists' AND lo.edit_options = 1 \" .\n                                \"ORDER BY IF(LENGTH(ld.definition),ld.definition,lo.title), lo.seq\");\n                        }\n\n                        while ($row = sqlFetchArray($res)) {\n                            // This allows the list to default to the first item on the list\n                            //   when the list_id request parameter is blank.\n                            if (($blank_list_id) && ($list_id == 'language')) {\n                                $list_id = $row['option_id'];\n                                $blank_list_id = false;\n                            }\n\n                            $key = $row['option_id'];\n                            echo \"<option value='$key'\";\n                            if ($key == $list_id) {\n                                echo \" selected\";\n                            }\n                            echo \">\" . $row['title'] . \"</option>\\n\";\n                        }\n\n                        ?>\n                    </select>\n                </div>\n\n        </div><!-- /.navbar-collapse -->\n    </div>\n</nav>\n\n<table class=\"table table-striped table-condensed\" style=\"margin-top:55px;\">\n    <thead>\n    <tr>\n        <?php if ($list_id == 'feesheet') : ?>\n            <td><b><?php xl('Group', 'e'); ?></b></td>\n            <td><b><?php xl('Option', 'e'); ?></b></td>\n            <td><b><?php xl('Generates', 'e'); ?></b></td>\n        <?php elseif ($list_id == 'code_types') : ?>\n            <th><b><?php xl('Active', 'e'); ?></b></th>\n            <th><b><?php xl('Key', 'e'); ?></b></th>\n            <th><b><?php xl('ID', 'e'); ?></b></th>\n            <th><b><?php xl('Label', 'e'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php xl('Seq', 'e'); ?></b></th>\n            <th><b><?php xl('ModLength', 'e'); ?></b></th>\n            <th><b><?php xl('Justify', 'e'); ?></b></th>\n            <th><b><?php xl('Mask', 'e'); ?></b></th>\n            <th><b><?php xl('Claims', 'e'); ?></b></th>\n            <th><b><?php xl('Fees', 'e'); ?></b></th>\n            <th><b><?php xl('Relations', 'e'); ?></b></th>\n            <th><b><?php xl('Hide', 'e'); ?></b></th>\n            <th><b><?php xl('Procedure', 'e'); ?></b></th>\n            <th><b><?php xl('Diagnosis', 'e'); ?></b></th>\n            <th><b><?php xl('Clinical Term', 'e'); ?></b></th>\n            <th><b><?php xl('Medical Problem', 'e'); ?></b></th>\n            <th><b><?php xl('Drug', 'e'); ?></b></th>\n            <th><b><?php xl('External', 'e'); ?></b></th>\n        <?php elseif ($list_id == 'apptstat' || $list_id == 'groupstat') : ?>\n            <th><b><?php xl('ID', 'e'); ?></b></th>\n            <th><b><?php xl('Title', 'e'); ?></b></th>\n            <th><b><?php xl('Order', 'e'); ?></b></th>\n            <th><b><?php xl('Default', 'e'); ?></b></th>\n            <th><b><?php xl('Active', 'e'); ?></b></th>\n            <th><b><?php xl('Color', 'e'); ?></b></th>\n            <th><b><?php xl('Alert Time', 'e'); ?></b></th>\n            <th><b><?php xl('Check In', 'e'); ?>&nbsp;&nbsp;&nbsp;&nbsp;</b>\n            </th>\n            <th><b><?php xl('Check Out', 'e'); ?></b></th>\n            <th><b><?php xl('Code(s)', 'e'); ?></b></th>\n        <?php elseif ($list_id == 'issue_types') : ?>\n            <th><b><?php echo xlt('OpenEMR Application Category'); ?></b></th>\n            <th><b><?php echo xlt('Active'); ?></b></th>\n            <th><b><?php echo xlt('Order'); ?></b></th>\n            <th><b><?php echo xlt('Type'); ?></b></th>\n            <th><b><?php echo xlt('Plural'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php echo xlt('Singular'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php echo xlt('Mini'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php echo xlt('Style'); ?></b></th>\n            <th><b><?php echo xlt('Force Show'); ?></b></th>\n            <th><b><?php echo xlt('Access Control'); ?></b></th>\n        <?php else : ?>\n            <th title=<?php xl('Click to edit', 'e', '\\'', '\\''); ?>>\n                <b><?php xl('ID', 'e'); ?></b></th>\n            <th><b><?php xl('Title', 'e'); ?></b></th>\n            <?php //show translation column if not english and the translation lists flag is set\n            if ($GLOBALS['translate_lists'] && $_SESSION['language_choice'] > 1) {\n                echo \"<th><b>\" . xl('Translation') . \"</b><span class='help' title='\" . xl('The translated Title that will appear in current language') . \"'> (?)</span></th>\";\n            } ?>\n            <th><b><?php xl('Order', 'e'); ?></b></th>\n            <th><b><?php xl('Default', 'e'); ?></b></th>\n            <th><b><?php xl('Active', 'e'); ?></b></th>\n            <?php if ($list_id == 'taxrate') { ?>\n                <th><b><?php xl('Rate', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'contrameth') { ?>\n                <th><b><?php xl('Effectiveness', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'lbfnames' || $list_id == 'transactions') { ?>\n                <th title='<?php xl('Number of past history columns', 'e'); ?>'>\n                    <b><?php xl('Repeats', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'fitness') { ?>\n                <th><b><?php xl('Color:Abbr', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'adjreason' || $list_id == 'abook_type') { ?>\n                <th><b><?php xl('Type', 'e'); ?></b></th>\n            <?php } elseif ($list_id == 'immunizations') { ?>\n                <th>\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;<?php xl('CVX Code Mapping', 'e'); ?></b>\n                </th>\n            <?php }\nif ($GLOBALS['ippf_specific']) { ?>\n                            <th><b><?php xl('Global ID', 'e'); ?></b></th>\n<?php } ?>\n            <th><b><?php\n            if ($list_id == 'language') {\n                echo xlt('ISO 639-2 Code');\n            } elseif ($list_id == 'personal_relationship' || $list_id == 'religious_affiliation' || $list_id == 'ethnicity' || $list_id == 'race' || $list_id == 'drug_route') {\n                echo xlt('HL7-V3 Concept Code');\n            } elseif ($list_id == 'Immunization_Completion_Status') {\n                echo xlt('Treatment Completion Status');\n            } elseif ($list_id == 'race') {\n                echo xlt('CDC Code');\n            } elseif ($list_id == 'Immunization_Manufacturer') {\n                echo xlt('MVX Code');\n            } elseif ($list_id == 'marital') {\n                echo xlt('Marital Status');\n            } elseif ($list_id == 'county') {\n                echo xlt('INCITS Code'); //International Committee for Information Technology Standards\n            } elseif ($list_id == 'immunization_registry_status' || $list_id == 'imm_vac_eligibility_results') {\n                echo xlt('IIS Code');\n            } elseif ($list_id == 'publicity_code') {\n                echo xlt('CDC Code');\n            } elseif ($list_id == 'immunization_refusal_reason' || $list_id == 'immunization_informationsource') {\n                echo xlt('CDC-NIP Code');\n            } elseif ($list_id == 'next_of_kin_relationship' || $list_id == 'immunization_administered_site') {\n                echo xlt('HL7 Code');\n            } elseif ($list_id == 'immunization_observation') {\n                echo xlt('LOINC Code');\n            } elseif ($list_id == 'page_validation') {\n                echo xlt('Page Validation');\n            } elseif ($list_id == 'lbfnames') {\n                echo xlt('Attributes');\n            } else {\n                echo xlt('Notes');\n            } ?></b></th>\n\n            <th><b><?php xl('Code(s)', 'e'); ?></b></th>\n            <?php\n            if (preg_match('/_issue_list$/', $list_id)) { ?>\n                <th><b><?php echo xlt('Subtype'); ?></b></th>\n            <?php\n            }\n        endif; // end not fee sheet ?>\n    </tr>\n    </thead>\n    <tbody>\n    <?php\n    // Get the selected list's elements.\n    if ($list_id) {\n        if ($list_id == 'feesheet') {\n            $res = sqlStatement(\"SELECT * FROM fee_sheet_options \" .\n                \"ORDER BY fs_category, fs_option\");\n            while ($row = sqlFetchArray($res)) {\n                writeFSLine($row['fs_category'], $row['fs_option'], $row['fs_codes']);\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeFSLine('', '', '');\n            }\n        } elseif ($list_id == 'code_types') {\n            $res = sqlStatement(\"SELECT * FROM code_types \" .\n                \"ORDER BY ct_seq, ct_key\");\n            while ($row = sqlFetchArray($res)) {\n                writeCTLine($row);\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeCTLine(array());\n            }\n        } elseif ($list_id == 'issue_types') {\n            $res = sqlStatement(\"SELECT * FROM issue_types \" .\n                \"ORDER BY category, ordering ASC\");\n            while ($row = sqlFetchArray($res)) {\n                writeITLine($row);\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeITLine(array());\n            }\n        } else {\n            /*\n             *  Add edit options to show or hide in list management\n             *   If the edit_options setting of the main list entry is set to 0,\n             *    then none of the list items will show.\n             *   If the edit_options setting of the main list entry is set to 1,\n             *    then the list items with edit_options set to 1 will show.\n             */\n            $res = sqlStatement(\"SELECT lo.*\n                         FROM list_options as lo\n                         right join list_options as lo2 on lo2.option_id = lo.list_id AND lo2.edit_options = 1\n                         WHERE lo.list_id = '{$list_id}' AND lo.edit_options = 1\n                         ORDER BY seq,title\");\n            while ($row = sqlFetchArray($res)) {\n                writeOptionLine(\n                    $row['option_id'],\n                    $row['title'],\n                    $row['seq'],\n                    $row['is_default'],\n                    $row['option_value'],\n                    $row['mapping'],\n                    $row['notes'],\n                    $row['codes'],\n                    $row['toggle_setting_1'],\n                    $row['toggle_setting_2'],\n                    $row['activity'],\n                    $row['subtype']\n                );\n            }\n            for ($i = 0; $i < 3; ++$i) {\n                writeOptionLine('', '', '', '', 0);\n            }\n        }\n    }\n    ?>\n    </tbody>\n</table>\n\n<?php if ($list_id == 'immunizations') { ?>\n    <p> <?php echo xlt('Is it ok to map these CVX codes to already existent immunizations?') ?>\n        <input type='checkbox' name='ok_map_cvx_codes' id='ok_map_cvx_codes'\n               value='1'/>\n    </p>\n<?php } // end if($list_id == 'immunizations') ?>\n\n<p>\n    <button type=\"submit\" name='form_save' id='form_save'\n            class=\"btn btn-default btn-save\"><?php xl('Save', 'e'); ?></button>\n</p>\n\n</form>\n\n<div class=\"modal fade\" id=\"modal-new-list\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <form action=\"edit_list.php\" method=\"post\" class=\"form\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n                            aria-label=\"<?php echo xl('Close'); ?>\"><i\n                                class=\"fa fa-times\"\n                                aria-hidden=\"true\"></i>\n                    </button>\n                    <h4 class=\"modal-title\"><?php xl('New List', 'e'); ?></h4>\n                </div>\n                <div class=\"modal-body\">\n                    <label for=\"newlistname\"\n                           class=\"control-label\"><?php xl('List Name', 'e'); ?></label>\n                    <input type=\"text\" size=\"20\" class=\"form-control\"\n                           maxlength=\"100\" name=\"newlistname\" id=\"newlistname\">\n                    <input type=\"hidden\" name=\"formaction\" value=\"addlist\">\n\n                </div>\n                <div class=\"modal-footer text-right\">\n                    <button type=\"submit\"\n                            class=\"btn btn-default btn-save\"><?php xl('Save', 'e'); ?></button>\n                    <button type=\"button\" class=\"btn btn-link btn-cancel\"\n                            data-dismiss=\"modal\"><?php xl('Cancel', 'e'); ?></button>\n                </div>\n            </form>\n        </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n</div><!-- /.modal #modal-new-list -->\n\n</body>\n<script type=\"text/javascript\">\n    // jQuery stuff to make the page a little easier to use\n\n    $(document).ready(function () {\n        $(\"#form_save\").click(function () {\n            SaveChanges();\n        });\n        $(\"#list_id\").change(function () {\n            $('#theform').submit();\n        });\n\n        $(\".newlist\").click(function () {\n            NewList(this);\n        });\n        $(\".savenewlist\").click(function () {\n            SaveNewList(this);\n        });\n        $(\".deletelist\").click(function () {\n            DeleteList(this);\n        });\n\n        var SaveChanges = function () {\n            $(\"#formaction\").val(\"save\");\n            // $('#theform').submit();\n            mysubmit();\n        };\n\n        // show the DIV to create a new list\n        var NewList = function (btnObj) {\n            // show the field details DIV\n            $('#newlistdetail').css('visibility', 'visible');\n            $('#newlistdetail').css('display', 'block');\n            $(btnObj).parent().append($(\"#newlistdetail\"));\n            $('#newlistdetail > #newlistname').focus();\n        };\n        // save the new list\n        var SaveNewList = function () {\n            // the list name can only have letters, numbers, spaces and underscores\n            // AND it cannot start with a number\n            if ($(\"#newlistname\").val().match(/^\\d+/)) {\n                alert(\"<?php xl('List names cannot start with numbers.', 'e'); ?>\");\n                return false;\n            }\n            var validname = $(\"#newlistname\").val().replace(/[^A-za-z0-9 -]/g, \"_\"); // match any non-word characters and replace them\n            if (validname != $(\"#newlistname\").val()) {\n                if (!confirm(\"<?php xl('Your list name has been changed to meet naming requirements.', 'e', '', '\\n') . xl('Please compare the new name', 'e', '', ', \\''); ?>\" + validname + \"<?php xl('with the old name', 'e', '\\' ', ', \\''); ?>\" + $(\"#newlistname\").val() + \"<?php xl('Do you wish to continue with the new name?', 'e', '\\'.\\n', ''); ?>\")) {\n                    return false;\n                }\n            }\n            $(\"#newlistname\").val(validname);\n\n            // submit the form to add a new field to a specific group\n            $(\"#formaction\").val(\"addlist\");\n            $(\"#theform\").submit();\n        };\n        // actually delete an entire list from the database\n        var DeleteList = function (btnObj) {\n            var listid = $(btnObj).attr(\"id\");\n            if (confirm(\"<?php xl('WARNING', 'e', '', ' - ') . xl('This action cannot be undone.', 'e', '', '\\n') . xl('Are you sure you wish to delete the entire list', 'e', ' ', '('); ?>\" + listid + \")?\")) {\n                // submit the form to add a new field to a specific group\n                $(\"#formaction\").val(\"deletelist\");\n                $(\"#deletelistname\").val(listid);\n                $(\"#theform\").submit();\n            }\n        };\n    });\n\n</script>\n</html>\n"], "filenames": ["interface/super/edit_list.php"], "buggy_code_start_loc": [5], "buggy_code_end_loc": [329], "fixing_code_start_loc": [5], "fixing_code_end_loc": [314], "type": "CWE-89", "message": "interface\\super\\edit_list.php in OpenEMR before v5_0_1_1 allows remote authenticated users to execute arbitrary SQL commands via the newlistname parameter.", "other": {"cve": {"id": "CVE-2018-9250", "sourceIdentifier": "cve@mitre.org", "published": "2018-05-18T14:29:00.310", "lastModified": "2018-06-20T14:36:17.037", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "interface\\super\\edit_list.php in OpenEMR before v5_0_1_1 allows remote authenticated users to execute arbitrary SQL commands via the newlistname parameter."}, {"lang": "es", "value": "interface\\super\\edit_list.php en OpenEMR en versiones anteriores a la v5_0_1_1 permite que usuarios autenticados remotos ejecuten comandos SQL arbitrarios mediante el par\u00e1metro newlistname."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": true, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open-emr:openemr:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.0.1.1", "matchCriteriaId": "1D52D333-14A8-4C9B-8BCB-82EBB40C6FAA"}]}]}], "references": [{"url": "https://github.com/openemr/openemr/commit/2a5dd0601e1f616251006d7471997ecd7aaf9651", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/openemr/openemr/pull/1578", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/openemr/openemr/commit/2a5dd0601e1f616251006d7471997ecd7aaf9651"}}