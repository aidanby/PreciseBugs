{"buggy_code": ["<?php\nif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly.\n\n/**\n * Icons_For_Features_Admin Class\n *\n * All functionality pertaining to the icons for features administration interface.\n *\n * @package WordPress\n * @subpackage Icons_For_Features\n * @category Plugin\n * @author Matty\n * @since 1.0.0\n */\nclass Icons_For_Features_Admin {\n\t/**\n\t * The token.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $token;\n\n\t/**\n\t * Constructor function.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function __construct () {\n\t\t$this->token = 'icons-for-features';\n\n\t\tadd_action( 'admin_menu', array( $this, 'meta_box_setup' ), 20 );\n\t\tadd_action( 'save_post', array( $this, 'meta_box_save' ) );\n\n\t\t// Register necessary scripts and styles, to enable others to enqueue them at will as well.\n\t\tadd_action( 'admin_print_styles', array( $this, 'maybe_load_styles' ) );\n\t\tadd_action( 'admin_print_scripts', array( $this, 'maybe_load_scripts' ) );\n\n\t\tadd_filter( 'manage_edit-feature_columns', array( $this, 'register_custom_column_headings' ), 20, 1 );\n\t\tadd_action( 'manage_posts_custom_column', array( $this, 'register_custom_columns' ), 20, 2 );\n\n\t\t// Display an admin notice, if the Features by WooThemes plugin it's present or is present yet not activated.\n\t\tadd_action( 'network_admin_notices', array( $this, 'maybe_display_activation_notice' ) );\n\t\tadd_action( 'admin_notices', array( $this, 'maybe_display_activation_notice' ) );\n\n\t\t// Process the 'Dismiss' link, if valid.\n\t\tadd_action( 'admin_init', array( $this, 'maybe_process_dismiss_link' ) );\n\t} // End __construct()\n\n\t/**\n\t * If the nonce is valid and the action is \"icons-for-features-dismiss\", process the dismissal.\n\t * @access  public\n\t * @since   1.2.1\n\t * @return  void\n\t */\n\tpublic function maybe_process_dismiss_link () {\n\t\tif ( isset( $_GET['action'] ) && ( 'icons-for-features-dismiss' == $_GET['action'] ) && isset( $_GET['nonce'] ) && check_admin_referer( 'icons-for-features-dismiss', 'nonce' ) ) {\n\t\t\tupdate_option( 'icons_for_features_dismiss_activation_notice', true );\n\n\t\t\t$redirect_url = remove_query_arg( 'action', remove_query_arg( 'nonce', $_SERVER['REQUEST_URI'] ) );\n\n\t\t\twp_safe_redirect( $redirect_url );\n\t\t\texit;\n\t\t}\n\t} // End maybe_process_dismiss_link()\n\n\t/**\n\t * Display an admin notice, if the Features by WooThemes plugin is present and not activated, or not present.\n\t * @access  public\n\t * @since   1.2.1\n\t * @return  void\n\t */\n\tpublic function maybe_display_activation_notice () {\n\t\tif ( $this->_is_features_plugin_activated() ) return;\n\t\tif ( ! current_user_can( 'manage_options' ) ) return; // Don't show the message if the user isn't an administrator.\n\t\tif ( is_multisite() && ! is_super_admin() ) return; // Don't show the message if on a multisite and the user isn't a super user.\n\t\tif ( true == get_option( 'icons_for_features_dismiss_activation_notice', false ) ) return; // Don't show the message if the user dismissed it.\n\n\t\t$slug = 'features-by-woothemes';\n\t\t$install_url = wp_nonce_url( self_admin_url( 'update.php?action=install-plugin&plugin=' . $slug ), 'install-plugin_' . $slug );\n\t\t$activate_url = 'plugins.php?action=activate&plugin=' . urlencode( 'features-by-woothemes/woothemes-features.php' ) . '&plugin_status=all&paged=1&s&_wpnonce=' . urlencode( wp_create_nonce( 'activate-plugin_features-by-woothemes/woothemes-features.php' ) );\n\t\tif ( true == $this->_is_features_plugin_installed() ) {\n\t\t\t$text = '<a href=\"' . esc_url( $activate_url ) . '\">' . __( 'Activate the Features by WooThemes plugin', 'icons-for-features' ) . '</a>';\n\t\t} else {\n\t\t\t$text = '<a href=\"' . esc_url( $install_url ) . '\">' . __( 'Install the Features by WooThemes plugin', 'icons-for-features' ) . '</a>';\n\t\t}\n\t\t$text = sprintf( __( '%sIcons for Features%s is almost ready. %s to get started.', 'icons-for-features' ), '<strong>', '</strong>', $text );\n\n\t\t$dismiss_url = add_query_arg( 'action', 'icons-for-features-dismiss', add_query_arg( 'nonce', wp_create_nonce( 'icons-for-features-dismiss' ) ) );\n\t\t\t\techo '<div class=\"updated fade\"><p class=\"alignleft\">' . $text . '</p><p class=\"alignright\"><a href=\"' . esc_url( $dismiss_url ) . '\">' . __( 'Dismiss', 'icons-for-features' ) . '</a></p><div class=\"clear\"></div></div>' . \"\\n\";\n\t} // End maybe_display_activation_notice()\n\n\t/**\n\t * Check if the Features by WooThemes plugin is activated.\n\t * @access  protected\n\t * @since   6.0.0\n\t * @return  boolean\n\t */\n\tprotected function _is_features_plugin_activated () {\n\t\t$response = false;\n\t\t$active_plugins = apply_filters( 'active_plugins', get_option('active_plugins' ) );\n\t\tif ( 0 < count( $active_plugins ) && in_array( 'features-by-woothemes/woothemes-features.php', $active_plugins ) ) $response = true;\n\t\treturn $response;\n\t} // End _is_features_plugin_activated()\n\n\t/**\n\t * Check if the Features by WooThemes plugin is installed.\n\t * @access  protected\n\t * @since   6.0.0\n\t * @return  boolean\n\t */\n\tprotected function _is_features_plugin_installed () {\n\t\t$response = false;\n\t\t$plugins = get_plugins();\n\t\tif ( 0 < count( $plugins ) && in_array( 'features-by-woothemes/woothemes-features.php', array_keys( $plugins ) ) ) $response = true;\n\t\treturn $response;\n\t} // End _is_features_plugin_installed()\n\n\t/**\n\t * Conditionally load the admin styles if we're viewing the \"feature\" post type.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_load_styles () {\n\t\tif ( 'feature' == get_post_type() ) {\n\t\t\twp_enqueue_style( $this->token . '-icons-admin' );\n\t\t}\n\t} // End maybe_load_styles()\n\n\t/**\n\t * Conditionally load the admin scripts if we're viewing the \"feature\" post type.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_load_scripts () {\n\t\tif ( 'feature' == get_post_type() ) {\n\t\t\t$suffix = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\t\twp_enqueue_script( $this->token . '-icons-admin', esc_url( Icons_For_Features()->plugin_url . 'assets/js/admin-icon-toggle' . $suffix . '.js' ), array( 'jquery' ), Icons_For_Features()->version, true );\n\t\t}\n\t} // End maybe_load_scripts()\n\n\t/**\n\t * Setup the meta box.\n\t *\n\t * @access public\n\t * @since  1.1.0\n\t * @return void\n\t */\n\tpublic function meta_box_setup () {\n\t\tadd_meta_box( 'feature-icon', __( 'Feature Icon', 'icons-for-features' ), array( $this, 'meta_box_content' ), 'feature', 'side' );\n\t} // End meta_box_setup()\n\n\t/**\n\t * The contents of our meta box.\n\t *\n\t * @access public\n\t * @since  1.1.0\n\t * @return void\n\t */\n\tpublic function meta_box_content () {\n\t\tglobal $post_id;\n\t\t$fields = get_post_custom( $post_id );\n\t\t$icons = Icons_For_Features()->get_supported_icon_list();\n\n\t\tif ( 0 >= count( $icons ) ) {\n\t\t\t_e( 'No icons are currently supported.', 'icons-for-features' );\n\t\t\treturn;\n\t\t}\n\n\t\t$icon = 'fa-no-feature-icon';\n\t\tif ( isset( $fields['_icon'][0] ) ) {\n\t\t\t$icon = esc_attr( $fields['_icon'][0] );\n\t\t}\n\n\t\t$html = '<input type=\"hidden\" name=\"woo_' . $this->token . '_noonce\" id=\"woo_' . $this->token . '_noonce\" value=\"' . wp_create_nonce( $this->token ) . '\" />';\n\n\t\t$html .= '<div class=\"icon-preview fa ' . esc_attr( $icon ) . '\"></div>';\n\n\t\t$html .= '<select name=\"icon\" class=\"feature-icon-selector\">' . \"\\n\";\n\t\t\t$html .= '<option value=\"\">' . __( 'No Icon', 'icons-for-features' ) . '</option>' . \"\\n\";\n\t\tforeach ( $icons as $k => $v ) {\n\t\t\t$html .= '<option value=\"' . esc_attr( $v ) . '\"' . selected( $icon, $v, false ) . '>' . esc_html( Icons_For_Features()->get_icon_label( $v ) ) . '</option>' . \"\\n\";\n\t\t}\n\t\t$html .= '</select>' . \"\\n\";\n\n\t\t// Make sure this variable is empty, to ensure we have an empty hidden field.\n\t\tif ( 'fa-no-featured-icon' == $icon ) $icon = '';\n\n\t\t$html .= '<input type=\"hidden\" name=\"currently-selected-icon\" class=\"currently-selected-icon\" value=\"' . esc_attr( $icon ) . '\" />' . \"\\n\";\n\n\t\t$html .= '<p><small>' . __( '(When an icon is selected, it takes the place of the featured image.)', 'icons-for-features' ) . '</small></p>' . \"\\n\";\n\n\t\techo $html;\n\t} // End meta_box_content()\n\n\t/**\n\t * Save meta box fields.\n\t *\n\t * @access public\n\t * @since  1.1.0\n\t * @param int $post_id\n\t * @return void\n\t */\n\tpublic function meta_box_save ( $post_id ) {\n\t\tglobal $post, $messages;\n\n\t\t// Verify\n\t\tif ( ( get_post_type() != 'feature' ) || ! wp_verify_nonce( $_POST['woo_' . $this->token . '_noonce'], $this->token ) ) {\n\t\t\treturn $post_id;\n\t\t}\n\n\t\tif ( ! current_user_can( 'edit_post', $post_id ) ) {\n\t\t\treturn $post_id;\n\t\t}\n\n\t\t$fields = array( 'icon' );\n\n\t\tforeach ( $fields as $f ) {\n\n\t\t\t${$f} = strip_tags(trim($_POST[$f]));\n\n\t\t\tif ( get_post_meta( $post_id, '_' . $f ) == '' ) {\n\t\t\t\tadd_post_meta( $post_id, '_' . $f, ${$f}, true );\n\t\t\t} elseif( ${$f} != get_post_meta( $post_id, '_' . $f, true ) ) {\n\t\t\t\tupdate_post_meta( $post_id, '_' . $f, ${$f} );\n\t\t\t} elseif ( ${$f} == '' ) {\n\t\t\t\tdelete_post_meta( $post_id, '_' . $f, get_post_meta( $post_id, '_' . $f, true ) );\n\t\t\t}\n\t\t}\n\t} // End meta_box_save()\n\n\t/**\n\t * Add custom columns for the \"manage\" screen of this post type.\n\t *\n\t * @access public\n\t * @param string $column_name\n\t * @param int $id\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function register_custom_columns ( $column_name, $id ) {\n\t\tif ( 'feature' != get_post_type() ) return;\n\t\tglobal $post;\n\n\t\tswitch ( $column_name ) {\n\n\t\t\tcase 'icon':\n\t\t\t\t$value = '';\n\n\t\t\t\t$value = Icons_For_Features()->get_the_icon_html( $id );\n\n\t\t\t\techo $value;\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t} // End register_custom_columns()\n\n\t/**\n\t * Add custom column headings for the \"manage\" screen of this post type.\n\t *\n\t * @access public\n\t * @param array $defaults\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function register_custom_column_headings ( $defaults ) {\n\t\tif ( 'feature' != get_post_type() ) return;\n\t\t$new_columns = array( 'icon' => __( 'Icon', 'icons-for-features' ) );\n\n\t\t$last_item = '';\n\n\t\tif ( count( $defaults ) > 2 ) {\n\t\t\t$last_item = array_slice( $defaults, -1 );\n\n\t\t\tarray_pop( $defaults );\n\t\t}\n\t\t$defaults = array_merge( $defaults, $new_columns );\n\n\t\tif ( $last_item != '' ) {\n\t\t\tforeach ( $last_item as $k => $v ) {\n\t\t\t\t$defaults[$k] = $v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $defaults;\n\t} // End register_custom_column_headings()\n} // End Class\n?>", "<?php\n/**\n * Plugin Name: Icons For Features\n * Plugin URI: http://www.woothemes.com/products/icons-for-features/\n * Description: Hey there! Do you want to display awesome icons for each of your features? Look no further, I'm here to help!\n * Version: 1.0.0\n * Author: WooThemes\n * Author URI: http://woothemes.com/\n * Requires at least: 3.8.1\n * Tested up to: 3.8.1\n *\n * Text Domain: icons-for-features\n * Domain Path: /languages/\n *\n * @package Icons_For_Features\n * @category Core\n * @author Matty\n */\n\nif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly\n\n/**\n * Returns the main instance of Icons_For_Features to prevent the need to use globals.\n *\n * @since  1.0.0\n * @return object Icons_For_Features\n */\nfunction Icons_For_Features() {\n\treturn Icons_For_Features::instance();\n} // End Icons_For_Features()\n\nIcons_For_Features();\n\n/**\n * Main Icons_For_Features Class\n *\n * @class Icons_For_Features\n * @version\t1.0.0\n * @since 1.0.0\n * @package\tKudos\n * @author Matty\n */\nfinal class Icons_For_Features {\n\t/**\n\t * Icons_For_Features The single instance of Icons_For_Features.\n\t * @var \tobject\n\t * @access  private\n\t * @since \t1.0.0\n\t */\n\tprivate static $_instance = null;\n\n\t/**\n\t * The token.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $token;\n\n\t/**\n\t * The version number.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $version;\n\n\t/**\n\t * An instance of the Icons_For_Features_Admin class.\n\t * @var     object\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $admin;\n\n\t/**\n\t * The name of the hook on which we will be working our magic.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $hook;\n\n\t/**\n\t * Constructor function.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function __construct () {\n\t\t$this->token \t\t\t= 'icons-for-features';\n\t\t$this->plugin_url \t\t= plugin_dir_url( __FILE__ );\n\t\t$this->plugin_path \t\t= plugin_dir_path( __FILE__ );\n\t\t$this->version \t\t\t= '1.0.0';\n\n\t\tregister_activation_hook( __FILE__, array( $this, 'install' ) );\n\n\t\tadd_action( 'init', array( $this, 'load_plugin_textdomain' ) );\n\n\t\t/* Conditionally load the admin. */\n\t\tif ( is_admin() ) {\n\t\t\tadd_action( 'admin_init', array( $this, 'register_styles' ) );\n\n\t\t\trequire_once( 'classes/class-icons-for-features-admin.php' );\n\t\t\t$this->admin = new Icons_For_Features_Admin();\n\t\t} else {\n\t\t\tadd_action( 'wp_enqueue_scripts', array( $this, 'register_styles' ) );\n\t\t\t// An unfortunate caveat, as we need to wait for the entire page to load, in order to determine whether or not there have been Features called.\n\t\t\tadd_action( 'wp_footer', array( $this, 'maybe_enqueue_styles' ) );\n\t\t\tadd_filter( 'woothemes_features_item_template', array( $this, 'add_feature_icon_placeholder' ), 10, 2 );\n\t\t\tadd_filter( 'woothemes_features_template', array( $this, 'override_feature_icon_placeholder' ), 10, 2 );\n\t\t\tadd_filter( 'woothemes_features_html', array( $this, 'maybe_remove_override_filter' ) );\n\t\t}\n\t} // End __construct()\n\n\t/**\n\t * Main Icons_For_Features Instance\n\t *\n\t * Ensures only one instance of Icons_For_Features is loaded or can be loaded.\n\t *\n\t * @since 1.0.0\n\t * @static\n\t * @see Icons_For_Features()\n\t * @return Main Icons_For_Features instance\n\t */\n\tpublic static function instance () {\n\t\tif ( is_null( self::$_instance ) )\n\t\t\tself::$_instance = new self();\n\t\treturn self::$_instance;\n\t} // End instance()\n\n\t/**\n\t * Load the localisation file.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function load_plugin_textdomain() {\n\t\tload_plugin_textdomain( 'icons-for-features', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );\n\t} // End load_plugin_textdomain()\n\n\t/**\n\t * Cloning is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __clone () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __clone()\n\n\t/**\n\t * Unserializing instances of this class is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __wakeup () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __wakeup()\n\n\t/**\n\t * Installation. Runs on activation.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function install () {\n\t\t$this->_log_version_number();\n\t} // End install()\n\n\t/**\n\t * Log the plugin version number.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tprivate function _log_version_number () {\n\t\t// Log the version number.\n\t\tupdate_option( $this->_token . '_version', $this->_version );\n\t} // End _log_version_number()\n\n\t/**\n\t * Force has_post_thumbnail() to return false, to \"skip over\" images where there is an icon for the feature.\n\t * This caters for older versions of the Features by WooThemes plugin, where there are a few useful filters that are missing.\n\t * @access public\n\t * @since  1.0.0\n\t * @param  boolean $response  Force this to be false, somehow.\n\t * @param  int $object_id The current object ID.\n\t * @param  string $meta_key  The specified meta key to retrieve.\n\t * @param  boolean $single    Whether this is a singular instance key or not.\n\t * @return boolean            Always return a boolean.\n\t */\n\tpublic function override_has_post_thumbnail ( $response, $object_id, $meta_key, $single ) {\n\t\tif ( '_thumbnail_id' != $meta_key ) return $response;\n\t\tif ( '' != get_post_meta( intval( $object_id ), '_icon', true ) ) $response = false;\n\t\treturn $response;\n\t} // End override_has_post_thumbnail()\n\n\t/**\n\t * Remove the filter used to force has_post_thumbnail() to return false.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_remove_override_filter ( $html ) {\n\t\tremove_filter( 'get_post_metadata', array( $this, 'override_has_post_thumbnail' ), 10, 4 );\n\t\treturn $html;\n\t} // End maybe_remove_override_filter()\n\n\t/**\n\t * Add an %%ICON%% placeholder to the feature template, replacing %%IMAGE%%, if it exists.\n\t * If no %%IMAGE%% tag is present, the administrator doesn't want an image to display, so don't display an icon (respect their wishes).\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function add_feature_icon_placeholder ( $tpl, $args ) {\n\t\tadd_filter( 'get_post_metadata', array( $this, 'override_has_post_thumbnail' ), 10, 4 );\n\n\t\t$tpl = str_replace( '%%IMAGE%%', '%%ICON%%%%IMAGE%%', $tpl );\n\t\treturn $tpl;\n\t} // End add_feature_icon_placeholder()\n\n\t/**\n\t * Override the %%ICON%% template tag, if an icon is available. If not, remove the template tag.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function override_feature_icon_placeholder ( $html, $post ) {\n\t\t$icon = $this->get_the_icon_html( get_the_ID() );\n\t\t$html = str_replace( '%%ICON%%', $icon, $html );\n\t\treturn $html;\n\t} // End override_feature_icon_placeholder()\n\n\t/**\n\t * Register the CSS files to be loaded for this plugin.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function register_styles () {\n\t\t$suffix = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\twp_register_style( $this->token . '-icons', esc_url( $this->plugin_url . 'assets/lib/font-awesome/css/font-awesome' . $suffix . '.css' ), array(), '4.0.3', 'all' );\n\t\twp_register_style( $this->token . '-icons-loader', esc_url( $this->plugin_url . 'assets/css/style.css' ), array( $this->token . '-icons' ), $this->version, 'all' );\n\t\twp_register_style( $this->token . '-icons-admin', esc_url( $this->plugin_url . 'assets/css/admin.css' ), array( $this->token . '-icons' ), $this->version, 'all' );\n\t} // End register_styles()\n\n\t/**\n\t * Conditionally load the CSS files for this plugin.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_enqueue_styles () {\n\t\tif ( ( is_singular() && 'feature' == get_post_type() ) || is_post_type_archive( 'feature' ) || did_action( 'woothemes_features_before' ) ) {\n\t\t\twp_enqueue_style( $this->token . '-icons-loader' );\n\t\t}\n\t} // End maybe_enqueue_styles()\n\n\t/**\n\t * Get the HTML for the stored icon for a given feature.\n\t * @access public\n\t * @since  1.0.0\n\t * @param  int $post_id The feature for which to retrieve the icon.\n\t * @return string       Formatted icon HTML.\n\t */\n\tpublic function get_the_icon_html ( $post_id = null ) {\n\t\tif ( is_null( $post_id ) ) $post_id = get_the_ID();\n\t\t$response = '';\n\t\t$icon = get_post_meta( intval( $post_id ), '_icon', true );\n\t\tif ( '' != $icon && in_array( $icon, $this->get_supported_icon_list() ) ) {\n\t\t\t$response = '<div class=\"icon-preview fa ' . esc_attr( $icon ) . '\"></div>' . \"\\n\";\n\t\t}\n\t\treturn (string)apply_filters( 'icons_for_features_get_the_icon_html', $response );\n\t} // End get_the_icon_html()\n\n\t/**\n\t * Transform a given icon key into a human-readable label.\n\t * @access public\n\t * @since  1.0.0\n\t * @param  string $key Given icon key.\n\t * @return string      Formatted icon label.\n\t */\n\tpublic function get_icon_label ( $key ) {\n\t\t$label = $key;\n\t\t$label = str_replace( 'fa-', '', $label );\n\t\t$label = str_replace( '-', ' ', $label );\n\n\t\tif ( ' o' == substr( $label, -2 ) ) {\n\t\t\t$label = substr( $label, 0, ( strlen( $label ) -2 ) );\n\t\t}\n\n\t\t$label = ucwords( $label );\n\t\treturn $label;\n\t} // End get_icon_label()\n\n\t/**\n\t * Returns a filterable list of supported icon keys.\n\t * @access public\n\t * @since  1.0.0\n\t * @return array Supported icon keys.\n\t */\n\tpublic function get_supported_icon_list () {\n\t\treturn (array)apply_filters( 'icons_for_features_supported_icons', array(\n\t\t\t'fa-glass',\n\t\t\t'fa-music',\n\t\t\t'fa-search',\n\t\t\t'fa-envelope-o',\n\t\t\t'fa-heart',\n\t\t\t'fa-star',\n\t\t\t'fa-star-o',\n\t\t\t'fa-user',\n\t\t\t'fa-film',\n\t\t\t'fa-th-large',\n\t\t\t'fa-th',\n\t\t\t'fa-th-list',\n\t\t\t'fa-check',\n\t\t\t'fa-times',\n\t\t\t'fa-search-plus',\n\t\t\t'fa-search-minus',\n\t\t\t'fa-power-off',\n\t\t\t'fa-signal',\n\t\t\t'fa-cog',\n\t\t\t'fa-trash-o',\n\t\t\t'fa-home',\n\t\t\t'fa-file-o',\n\t\t\t'fa-clock-o',\n\t\t\t'fa-road',\n\t\t\t'fa-download',\n\t\t\t'fa-arrow-circle-o-down',\n\t\t\t'fa-arrow-circle-o-up',\n\t\t\t'fa-inbox',\n\t\t\t'fa-play-circle-o',\n\t\t\t'fa-repeat',\n\t\t\t'fa-refresh',\n\t\t\t'fa-list-alt',\n\t\t\t'fa-lock',\n\t\t\t'fa-flag',\n\t\t\t'fa-headphones',\n\t\t\t'fa-volume-off',\n\t\t\t'fa-volume-down',\n\t\t\t'fa-volume-up',\n\t\t\t'fa-qrcode',\n\t\t\t'fa-barcode',\n\t\t\t'fa-tag',\n\t\t\t'fa-tags',\n\t\t\t'fa-book',\n\t\t\t'fa-bookmark',\n\t\t\t'fa-print',\n\t\t\t'fa-camera',\n\t\t\t'fa-font',\n\t\t\t'fa-bold',\n\t\t\t'fa-italic',\n\t\t\t'fa-text-height',\n\t\t\t'fa-text-width',\n\t\t\t'fa-align-left',\n\t\t\t'fa-align-center',\n\t\t\t'fa-align-right',\n\t\t\t'fa-align-justify',\n\t\t\t'fa-list',\n\t\t\t'fa-outdent',\n\t\t\t'fa-indent',\n\t\t\t'fa-video-camera',\n\t\t\t'fa-picture-o',\n\t\t\t'fa-pencil',\n\t\t\t'fa-map-marker',\n\t\t\t'fa-adjust',\n\t\t\t'fa-tint',\n\t\t\t'fa-pencil-square-o',\n\t\t\t'fa-share-square-o',\n\t\t\t'fa-check-square-o',\n\t\t\t'fa-arrows',\n\t\t\t'fa-step-backward',\n\t\t\t'fa-fast-backward',\n\t\t\t'fa-backward',\n\t\t\t'fa-play',\n\t\t\t'fa-pause',\n\t\t\t'fa-stop',\n\t\t\t'fa-forward',\n\t\t\t'fa-fast-forward',\n\t\t\t'fa-step-forward',\n\t\t\t'fa-eject',\n\t\t\t'fa-chevron-left',\n\t\t\t'fa-chevron-right',\n\t\t\t'fa-plus-circle',\n\t\t\t'fa-minus-circle',\n\t\t\t'fa-times-circle',\n\t\t\t'fa-check-circle',\n\t\t\t'fa-question-circle',\n\t\t\t'fa-info-circle',\n\t\t\t'fa-crosshairs',\n\t\t\t'fa-times-circle-o',\n\t\t\t'fa-check-circle-o',\n\t\t\t'fa-ban',\n\t\t\t'fa-arrow-left',\n\t\t\t'fa-arrow-right',\n\t\t\t'fa-arrow-up',\n\t\t\t'fa-arrow-down',\n\t\t\t'fa-share',\n\t\t\t'fa-expand',\n\t\t\t'fa-compress',\n\t\t\t'fa-plus',\n\t\t\t'fa-minus',\n\t\t\t'fa-asterisk',\n\t\t\t'fa-exclamation-circle',\n\t\t\t'fa-gift',\n\t\t\t'fa-leaf',\n\t\t\t'fa-fire',\n\t\t\t'fa-eye',\n\t\t\t'fa-eye-slash',\n\t\t\t'fa-exclamation-triangle',\n\t\t\t'fa-plane',\n\t\t\t'fa-calendar',\n\t\t\t'fa-random',\n\t\t\t'fa-comment',\n\t\t\t'fa-magnet',\n\t\t\t'fa-chevron-up',\n\t\t\t'fa-chevron-down',\n\t\t\t'fa-retweet',\n\t\t\t'fa-shopping-cart',\n\t\t\t'fa-folder',\n\t\t\t'fa-folder-open',\n\t\t\t'fa-arrows-v',\n\t\t\t'fa-arrows-h',\n\t\t\t'fa-bar-chart-o',\n\t\t\t'fa-twitter-square',\n\t\t\t'fa-facebook-square',\n\t\t\t'fa-camera-retro',\n\t\t\t'fa-key',\n\t\t\t'fa-cogs',\n\t\t\t'fa-comments',\n\t\t\t'fa-thumbs-o-up',\n\t\t\t'fa-thumbs-o-down',\n\t\t\t'fa-star-half',\n\t\t\t'fa-heart-o',\n\t\t\t'fa-sign-out',\n\t\t\t'fa-linkedin-square',\n\t\t\t'fa-thumb-tack',\n\t\t\t'fa-external-link',\n\t\t\t'fa-sign-in',\n\t\t\t'fa-trophy',\n\t\t\t'fa-github-square',\n\t\t\t'fa-upload',\n\t\t\t'fa-lemon-o',\n\t\t\t'fa-phone',\n\t\t\t'fa-square-o',\n\t\t\t'fa-bookmark-o',\n\t\t\t'fa-phone-square',\n\t\t\t'fa-twitter',\n\t\t\t'fa-facebook',\n\t\t\t'fa-github',\n\t\t\t'fa-unlock',\n\t\t\t'fa-credit-card',\n\t\t\t'fa-rss',\n\t\t\t'fa-hdd-o',\n\t\t\t'fa-bullhorn',\n\t\t\t'fa-bell',\n\t\t\t'fa-certificate',\n\t\t\t'fa-hand-o-right',\n\t\t\t'fa-hand-o-left',\n\t\t\t'fa-hand-o-up',\n\t\t\t'fa-hand-o-down',\n\t\t\t'fa-arrow-circle-left',\n\t\t\t'fa-arrow-circle-right',\n\t\t\t'fa-arrow-circle-up',\n\t\t\t'fa-arrow-circle-down',\n\t\t\t'fa-globe',\n\t\t\t'fa-wrench',\n\t\t\t'fa-tasks',\n\t\t\t'fa-filter',\n\t\t\t'fa-briefcase',\n\t\t\t'fa-arrows-alt',\n\t\t\t'fa-users',\n\t\t\t'fa-link',\n\t\t\t'fa-cloud',\n\t\t\t'fa-flask',\n\t\t\t'fa-scissors',\n\t\t\t'fa-files-o',\n\t\t\t'fa-paperclip',\n\t\t\t'fa-floppy-o',\n\t\t\t'fa-square',\n\t\t\t'fa-bars',\n\t\t\t'fa-list-ul',\n\t\t\t'fa-list-ol',\n\t\t\t'fa-strikethrough',\n\t\t\t'fa-underline',\n\t\t\t'fa-table',\n\t\t\t'fa-magic',\n\t\t\t'fa-truck',\n\t\t\t'fa-pinterest',\n\t\t\t'fa-pinterest-square',\n\t\t\t'fa-google-plus-square',\n\t\t\t'fa-google-plus',\n\t\t\t'fa-money',\n\t\t\t'fa-caret-down',\n\t\t\t'fa-caret-up',\n\t\t\t'fa-caret-left',\n\t\t\t'fa-caret-right',\n\t\t\t'fa-columns',\n\t\t\t'fa-sort',\n\t\t\t'fa-sort-asc',\n\t\t\t'fa-sort-desc',\n\t\t\t'fa-envelope',\n\t\t\t'fa-linkedin',\n\t\t\t'fa-undo',\n\t\t\t'fa-gavel',\n\t\t\t'fa-tachometer',\n\t\t\t'fa-comment-o',\n\t\t\t'fa-comments-o',\n\t\t\t'fa-bolt',\n\t\t\t'fa-sitemap',\n\t\t\t'fa-umbrella',\n\t\t\t'fa-clipboard',\n\t\t\t'fa-lightbulb-o',\n\t\t\t'fa-exchange',\n\t\t\t'fa-cloud-download',\n\t\t\t'fa-cloud-upload',\n\t\t\t'fa-user-md',\n\t\t\t'fa-stethoscope',\n\t\t\t'fa-suitcase',\n\t\t\t'fa-bell-o',\n\t\t\t'fa-coffee',\n\t\t\t'fa-cutlery',\n\t\t\t'fa-file-text-o',\n\t\t\t'fa-building-o',\n\t\t\t'fa-hospital-o',\n\t\t\t'fa-ambulance',\n\t\t\t'fa-medkit',\n\t\t\t'fa-fighter-jet',\n\t\t\t'fa-beer',\n\t\t\t'fa-h-square',\n\t\t\t'fa-plus-square',\n\t\t\t'fa-angle-double-left',\n\t\t\t'fa-angle-double-right',\n\t\t\t'fa-angle-double-up',\n\t\t\t'fa-angle-double-down',\n\t\t\t'fa-angle-left',\n\t\t\t'fa-angle-right',\n\t\t\t'fa-angle-up',\n\t\t\t'fa-angle-down',\n\t\t\t'fa-desktop',\n\t\t\t'fa-laptop',\n\t\t\t'fa-tablet',\n\t\t\t'fa-mobile',\n\t\t\t'fa-circle-o',\n\t\t\t'fa-quote-left',\n\t\t\t'fa-quote-right',\n\t\t\t'fa-spinner',\n\t\t\t'fa-circle',\n\t\t\t'fa-reply',\n\t\t\t'fa-github-alt',\n\t\t\t'fa-folder-o',\n\t\t\t'fa-folder-open-o',\n\t\t\t'fa-smile-o',\n\t\t\t'fa-frown-o',\n\t\t\t'fa-meh-o',\n\t\t\t'fa-gamepad',\n\t\t\t'fa-keyboard-o',\n\t\t\t'fa-flag-o',\n\t\t\t'fa-flag-checkered',\n\t\t\t'fa-terminal',\n\t\t\t'fa-code',\n\t\t\t'fa-reply-all',\n\t\t\t'fa-mail-reply-all',\n\t\t\t'fa-star-half-o',\n\t\t\t'fa-location-arrow',\n\t\t\t'fa-crop',\n\t\t\t'fa-code-fork',\n\t\t\t'fa-chain-broken',\n\t\t\t'fa-question',\n\t\t\t'fa-info',\n\t\t\t'fa-exclamation',\n\t\t\t'fa-superscript',\n\t\t\t'fa-subscript',\n\t\t\t'fa-eraser',\n\t\t\t'fa-puzzle-piece',\n\t\t\t'fa-microphone',\n\t\t\t'fa-microphone-slash',\n\t\t\t'fa-shield',\n\t\t\t'fa-calendar-o',\n\t\t\t'fa-fire-extinguisher',\n\t\t\t'fa-rocket',\n\t\t\t'fa-maxcdn',\n\t\t\t'fa-chevron-circle-left',\n\t\t\t'fa-chevron-circle-right',\n\t\t\t'fa-chevron-circle-up',\n\t\t\t'fa-chevron-circle-down',\n\t\t\t'fa-html5',\n\t\t\t'fa-css3',\n\t\t\t'fa-anchor',\n\t\t\t'fa-unlock-alt',\n\t\t\t'fa-bullseye',\n\t\t\t'fa-ellipsis-h',\n\t\t\t'fa-ellipsis-v',\n\t\t\t'fa-rss-square',\n\t\t\t'fa-play-circle',\n\t\t\t'fa-ticket',\n\t\t\t'fa-minus-square',\n\t\t\t'fa-minus-square-o',\n\t\t\t'fa-level-up',\n\t\t\t'fa-level-down',\n\t\t\t'fa-check-square',\n\t\t\t'fa-pencil-square',\n\t\t\t'fa-external-link-square',\n\t\t\t'fa-share-square',\n\t\t\t'fa-compass',\n\t\t\t'fa-caret-square-o-down',\n\t\t\t'fa-caret-square-o-up',\n\t\t\t'fa-caret-square-o-right',\n\t\t\t'fa-eur',\n\t\t\t'fa-gbp',\n\t\t\t'fa-usd',\n\t\t\t'fa-inr',\n\t\t\t'fa-jpy',\n\t\t\t'fa-rub',\n\t\t\t'fa-krw',\n\t\t\t'fa-btc',\n\t\t\t'fa-file',\n\t\t\t'fa-file-text',\n\t\t\t'fa-sort-alpha-asc',\n\t\t\t'fa-sort-alpha-desc',\n\t\t\t'fa-sort-amount-asc',\n\t\t\t'fa-sort-amount-desc',\n\t\t\t'fa-sort-numeric-asc',\n\t\t\t'fa-sort-numeric-desc',\n\t\t\t'fa-thumbs-up',\n\t\t\t'fa-thumbs-down',\n\t\t\t'fa-youtube-square',\n\t\t\t'fa-youtube',\n\t\t\t'fa-xing',\n\t\t\t'fa-xing-square',\n\t\t\t'fa-youtube-play',\n\t\t\t'fa-dropbox',\n\t\t\t'fa-stack-overflow',\n\t\t\t'fa-instagram',\n\t\t\t'fa-flickr',\n\t\t\t'fa-adn',\n\t\t\t'fa-bitbucket',\n\t\t\t'fa-bitbucket-square',\n\t\t\t'fa-tumblr',\n\t\t\t'fa-tumblr-square',\n\t\t\t'fa-long-arrow-down',\n\t\t\t'fa-long-arrow-up',\n\t\t\t'fa-long-arrow-left',\n\t\t\t'fa-long-arrow-right',\n\t\t\t'fa-apple',\n\t\t\t'fa-windows',\n\t\t\t'fa-android',\n\t\t\t'fa-linux',\n\t\t\t'fa-dribbble',\n\t\t\t'fa-skype',\n\t\t\t'fa-foursquare',\n\t\t\t'fa-trello',\n\t\t\t'fa-female',\n\t\t\t'fa-male',\n\t\t\t'fa-gittip',\n\t\t\t'fa-sun-o',\n\t\t\t'fa-moon-o',\n\t\t\t'fa-archive',\n\t\t\t'fa-bug',\n\t\t\t'fa-vk',\n\t\t\t'fa-weibo',\n\t\t\t'fa-renren',\n\t\t\t'fa-pagelines',\n\t\t\t'fa-stack-exchange',\n\t\t\t'fa-arrow-circle-o-right',\n\t\t\t'fa-arrow-circle-o-left',\n\t\t\t'fa-caret-square-o-left',\n\t\t\t'fa-dot-circle-o',\n\t\t\t'fa-wheelchair',\n\t\t\t'fa-vimeo-square',\n\t\t\t'fa-try',\n\t\t\t'fa-plus-square-o'\n\t\t\t) );\n\t} // End get_supported_icon_list()\n} // End Class\n?>\n", "=== Icons for Features ===\nContributors: woothemes,mattyza\nDonate link: http://woothemes.com/\nTags: features,icons,font-awesome\nRequires at least: 3.8.1\nTested up to: 3.8.1\nStable tag: 1.0.0\nLicense: GPLv3 or later\nLicense URI: http://www.gnu.org/licenses/gpl-3.0.html\n\nDisplay an icon for a feature, instead of an image, in the \"Features by WooThemes\" plugin.\n\n== Description ==\n\nIcons for Features makes it really easy to select an icon to go along with your feature. Select from the entire library of Font Awesome icons, using an intuitive administration interface, similar to the \"Featured Image\" meta box.\n\nIcons for Features; when an image just won't do.\n\n== Usage ==\n\nOnce activated, add or edit a feature under the \"Features\" administration menu (provided by the Features by WooThemes plugin). A \"Feature Icon\" meta box is added to the side column of this edit screen, where an icon can be selected.\n\nOnce done, hit the \"Publish\" button and you're good to go!\n\n== Installation ==\n\nInstalling \"Icons for Features\" can be done either by searching for \"Icons for Features\" via the \"Plugins > Add New\" screen in your WordPress dashboard, or by using the following steps:\n\n1. Download the plugin via WordPress.org.\n1. Upload the ZIP file through the \"Plugins > Add New > Upload\" screen in your WordPress dashboard.\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Add or edit a feature and use the \"Feature Icon\" meta box.\n\n== Frequently Asked Questions ==\n\n= I don't see any \"Features\" menu in my WordPress admin? What do I do? =\n\nThis plugin requires the [Features by WooThemes](http://wordpress.org/plugins/features-by-woothemes/), which it modifies. Please download and activate this plugin, to proceed.\n\n= The icon is too small! How do I adjust it's size? =\n\nTheme developers may, from time to time, add specific styling to cater for this icon. If not, that's okay!\n\nThe following CSS is a basic example of adjusting the size of the icons:\n\n`.feature .icon-preview { font-size: 5em; }`\n\n= How do I contribute? =\n\nWe encourage everyone to contribute their ideas, thoughts and code snippets. This can be done by forking the [repository over at GitHub](http://github.com/woothemes/icons-for-features/).\n\n== Screenshots ==\n\n1. The Icons for Features administration meta box.\n\n2. The Features list screen, showcasing icons for the features.\n\n\n== Upgrade Notice ==\n\n= 1.0.0 =\n* 2014-03-18\n* Initial release. Woo!\n\n== Changelog ==\n\n= 1.0.0 =\n* 2014-03-18\n* Initial release. Woo!"], "fixing_code": ["<?php\nif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly.\n\n/**\n * Icons_For_Features_Admin Class\n *\n * All functionality pertaining to the icons for features administration interface.\n *\n * @package WordPress\n * @subpackage Icons_For_Features\n * @category Plugin\n * @author Matty\n * @since 1.0.0\n */\nclass Icons_For_Features_Admin {\n\t/**\n\t * The token.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $token;\n\n\t/**\n\t * Constructor function.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function __construct () {\n\t\t$this->token = 'icons-for-features';\n\n\t\tadd_action( 'admin_menu', array( $this, 'meta_box_setup' ), 20 );\n\t\tadd_action( 'save_post', array( $this, 'meta_box_save' ) );\n\n\t\t// Register necessary scripts and styles, to enable others to enqueue them at will as well.\n\t\tadd_action( 'admin_print_styles', array( $this, 'maybe_load_styles' ) );\n\t\tadd_action( 'admin_print_scripts', array( $this, 'maybe_load_scripts' ) );\n\n\t\tadd_filter( 'manage_edit-feature_columns', array( $this, 'register_custom_column_headings' ), 20, 1 );\n\t\tadd_action( 'manage_posts_custom_column', array( $this, 'register_custom_columns' ), 20, 2 );\n\n\t\t// Display an admin notice, if the Features by WooThemes plugin it's present or is present yet not activated.\n\t\tadd_action( 'network_admin_notices', array( $this, 'maybe_display_activation_notice' ) );\n\t\tadd_action( 'admin_notices', array( $this, 'maybe_display_activation_notice' ) );\n\n\t\t// Process the 'Dismiss' link, if valid.\n\t\tadd_action( 'admin_init', array( $this, 'maybe_process_dismiss_link' ) );\n\t} // End __construct()\n\n\t/**\n\t * If the nonce is valid and the action is \"icons-for-features-dismiss\", process the dismissal.\n\t * @access  public\n\t * @since   1.2.1\n\t * @return  void\n\t */\n\tpublic function maybe_process_dismiss_link () {\n\t\tif ( isset( $_GET['action'] ) && ( 'icons-for-features-dismiss' == $_GET['action'] ) && isset( $_GET['nonce'] ) && check_admin_referer( 'icons-for-features-dismiss', 'nonce' ) ) {\n\t\t\tupdate_option( 'icons_for_features_dismiss_activation_notice', true );\n\n\t\t\t$redirect_url = remove_query_arg( 'action', remove_query_arg( 'nonce', $_SERVER['REQUEST_URI'] ) );\n\n\t\t\twp_safe_redirect( esc_url( $redirect_url ) );\n\t\t\texit;\n\t\t}\n\t} // End maybe_process_dismiss_link()\n\n\t/**\n\t * Display an admin notice, if the Features by WooThemes plugin is present and not activated, or not present.\n\t * @access  public\n\t * @since   1.2.1\n\t * @return  void\n\t */\n\tpublic function maybe_display_activation_notice () {\n\t\tif ( $this->_is_features_plugin_activated() ) return;\n\t\tif ( ! current_user_can( 'manage_options' ) ) return; // Don't show the message if the user isn't an administrator.\n\t\tif ( is_multisite() && ! is_super_admin() ) return; // Don't show the message if on a multisite and the user isn't a super user.\n\t\tif ( true == get_option( 'icons_for_features_dismiss_activation_notice', false ) ) return; // Don't show the message if the user dismissed it.\n\n\t\t$slug = 'features-by-woothemes';\n\t\t$install_url = wp_nonce_url( self_admin_url( 'update.php?action=install-plugin&plugin=' . $slug ), 'install-plugin_' . $slug );\n\t\t$activate_url = 'plugins.php?action=activate&plugin=' . urlencode( 'features-by-woothemes/woothemes-features.php' ) . '&plugin_status=all&paged=1&s&_wpnonce=' . urlencode( wp_create_nonce( 'activate-plugin_features-by-woothemes/woothemes-features.php' ) );\n\t\tif ( true == $this->_is_features_plugin_installed() ) {\n\t\t\t$text = '<a href=\"' . esc_url( $activate_url ) . '\">' . __( 'Activate the Features by WooThemes plugin', 'icons-for-features' ) . '</a>';\n\t\t} else {\n\t\t\t$text = '<a href=\"' . esc_url( $install_url ) . '\">' . __( 'Install the Features by WooThemes plugin', 'icons-for-features' ) . '</a>';\n\t\t}\n\t\t$text = sprintf( __( '%sIcons for Features%s is almost ready. %s to get started.', 'icons-for-features' ), '<strong>', '</strong>', $text );\n\n\t\t$dismiss_url = add_query_arg( 'action', 'icons-for-features-dismiss', add_query_arg( 'nonce', wp_create_nonce( 'icons-for-features-dismiss' ) ) );\n\t\t\t\techo '<div class=\"updated fade\"><p class=\"alignleft\">' . $text . '</p><p class=\"alignright\"><a href=\"' . esc_url( $dismiss_url ) . '\">' . __( 'Dismiss', 'icons-for-features' ) . '</a></p><div class=\"clear\"></div></div>' . \"\\n\";\n\t} // End maybe_display_activation_notice()\n\n\t/**\n\t * Check if the Features by WooThemes plugin is activated.\n\t * @access  protected\n\t * @since   6.0.0\n\t * @return  boolean\n\t */\n\tprotected function _is_features_plugin_activated () {\n\t\t$response = false;\n\t\t$active_plugins = apply_filters( 'active_plugins', get_option('active_plugins' ) );\n\t\tif ( 0 < count( $active_plugins ) && in_array( 'features-by-woothemes/woothemes-features.php', $active_plugins ) ) $response = true;\n\t\treturn $response;\n\t} // End _is_features_plugin_activated()\n\n\t/**\n\t * Check if the Features by WooThemes plugin is installed.\n\t * @access  protected\n\t * @since   6.0.0\n\t * @return  boolean\n\t */\n\tprotected function _is_features_plugin_installed () {\n\t\t$response = false;\n\t\t$plugins = get_plugins();\n\t\tif ( 0 < count( $plugins ) && in_array( 'features-by-woothemes/woothemes-features.php', array_keys( $plugins ) ) ) $response = true;\n\t\treturn $response;\n\t} // End _is_features_plugin_installed()\n\n\t/**\n\t * Conditionally load the admin styles if we're viewing the \"feature\" post type.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_load_styles () {\n\t\tif ( 'feature' == get_post_type() ) {\n\t\t\twp_enqueue_style( $this->token . '-icons-admin' );\n\t\t}\n\t} // End maybe_load_styles()\n\n\t/**\n\t * Conditionally load the admin scripts if we're viewing the \"feature\" post type.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_load_scripts () {\n\t\tif ( 'feature' == get_post_type() ) {\n\t\t\t$suffix = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\t\twp_enqueue_script( $this->token . '-icons-admin', esc_url( Icons_For_Features()->plugin_url . 'assets/js/admin-icon-toggle' . $suffix . '.js' ), array( 'jquery' ), Icons_For_Features()->version, true );\n\t\t}\n\t} // End maybe_load_scripts()\n\n\t/**\n\t * Setup the meta box.\n\t *\n\t * @access public\n\t * @since  1.1.0\n\t * @return void\n\t */\n\tpublic function meta_box_setup () {\n\t\tadd_meta_box( 'feature-icon', __( 'Feature Icon', 'icons-for-features' ), array( $this, 'meta_box_content' ), 'feature', 'side' );\n\t} // End meta_box_setup()\n\n\t/**\n\t * The contents of our meta box.\n\t *\n\t * @access public\n\t * @since  1.1.0\n\t * @return void\n\t */\n\tpublic function meta_box_content () {\n\t\tglobal $post_id;\n\t\t$fields = get_post_custom( $post_id );\n\t\t$icons = Icons_For_Features()->get_supported_icon_list();\n\n\t\tif ( 0 >= count( $icons ) ) {\n\t\t\t_e( 'No icons are currently supported.', 'icons-for-features' );\n\t\t\treturn;\n\t\t}\n\n\t\t$icon = 'fa-no-feature-icon';\n\t\tif ( isset( $fields['_icon'][0] ) ) {\n\t\t\t$icon = esc_attr( $fields['_icon'][0] );\n\t\t}\n\n\t\t$html = '<input type=\"hidden\" name=\"woo_' . $this->token . '_noonce\" id=\"woo_' . $this->token . '_noonce\" value=\"' . wp_create_nonce( $this->token ) . '\" />';\n\n\t\t$html .= '<div class=\"icon-preview fa ' . esc_attr( $icon ) . '\"></div>';\n\n\t\t$html .= '<select name=\"icon\" class=\"feature-icon-selector\">' . \"\\n\";\n\t\t\t$html .= '<option value=\"\">' . __( 'No Icon', 'icons-for-features' ) . '</option>' . \"\\n\";\n\t\tforeach ( $icons as $k => $v ) {\n\t\t\t$html .= '<option value=\"' . esc_attr( $v ) . '\"' . selected( $icon, $v, false ) . '>' . esc_html( Icons_For_Features()->get_icon_label( $v ) ) . '</option>' . \"\\n\";\n\t\t}\n\t\t$html .= '</select>' . \"\\n\";\n\n\t\t// Make sure this variable is empty, to ensure we have an empty hidden field.\n\t\tif ( 'fa-no-featured-icon' == $icon ) $icon = '';\n\n\t\t$html .= '<input type=\"hidden\" name=\"currently-selected-icon\" class=\"currently-selected-icon\" value=\"' . esc_attr( $icon ) . '\" />' . \"\\n\";\n\n\t\t$html .= '<p><small>' . __( '(When an icon is selected, it takes the place of the featured image.)', 'icons-for-features' ) . '</small></p>' . \"\\n\";\n\n\t\techo $html;\n\t} // End meta_box_content()\n\n\t/**\n\t * Save meta box fields.\n\t *\n\t * @access public\n\t * @since  1.1.0\n\t * @param int $post_id\n\t * @return void\n\t */\n\tpublic function meta_box_save ( $post_id ) {\n\t\tglobal $post, $messages;\n\n\t\t// Verify\n\t\tif ( ( get_post_type() != 'feature' ) || ! wp_verify_nonce( $_POST['woo_' . $this->token . '_noonce'], $this->token ) ) {\n\t\t\treturn $post_id;\n\t\t}\n\n\t\tif ( ! current_user_can( 'edit_post', $post_id ) ) {\n\t\t\treturn $post_id;\n\t\t}\n\n\t\t$fields = array( 'icon' );\n\n\t\tforeach ( $fields as $f ) {\n\n\t\t\t${$f} = strip_tags(trim($_POST[$f]));\n\n\t\t\tif ( get_post_meta( $post_id, '_' . $f ) == '' ) {\n\t\t\t\tadd_post_meta( $post_id, '_' . $f, ${$f}, true );\n\t\t\t} elseif( ${$f} != get_post_meta( $post_id, '_' . $f, true ) ) {\n\t\t\t\tupdate_post_meta( $post_id, '_' . $f, ${$f} );\n\t\t\t} elseif ( ${$f} == '' ) {\n\t\t\t\tdelete_post_meta( $post_id, '_' . $f, get_post_meta( $post_id, '_' . $f, true ) );\n\t\t\t}\n\t\t}\n\t} // End meta_box_save()\n\n\t/**\n\t * Add custom columns for the \"manage\" screen of this post type.\n\t *\n\t * @access public\n\t * @param string $column_name\n\t * @param int $id\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function register_custom_columns ( $column_name, $id ) {\n\t\tif ( 'feature' != get_post_type() ) return;\n\t\tglobal $post;\n\n\t\tswitch ( $column_name ) {\n\n\t\t\tcase 'icon':\n\t\t\t\t$value = '';\n\n\t\t\t\t$value = Icons_For_Features()->get_the_icon_html( $id );\n\n\t\t\t\techo $value;\n\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t} // End register_custom_columns()\n\n\t/**\n\t * Add custom column headings for the \"manage\" screen of this post type.\n\t *\n\t * @access public\n\t * @param array $defaults\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function register_custom_column_headings ( $defaults ) {\n\t\tif ( 'feature' != get_post_type() ) return;\n\t\t$new_columns = array( 'icon' => __( 'Icon', 'icons-for-features' ) );\n\n\t\t$last_item = '';\n\n\t\tif ( count( $defaults ) > 2 ) {\n\t\t\t$last_item = array_slice( $defaults, -1 );\n\n\t\t\tarray_pop( $defaults );\n\t\t}\n\t\t$defaults = array_merge( $defaults, $new_columns );\n\n\t\tif ( $last_item != '' ) {\n\t\t\tforeach ( $last_item as $k => $v ) {\n\t\t\t\t$defaults[$k] = $v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $defaults;\n\t} // End register_custom_column_headings()\n} // End Class\n?>", "<?php\n/**\n * Plugin Name: Icons For Features\n * Plugin URI: http://www.woothemes.com/products/icons-for-features/\n * Description: Hey there! Do you want to display awesome icons for each of your features? Look no further, I'm here to help!\n * Version: 1.0.1\n * Author: WooThemes\n * Author URI: http://woothemes.com/\n * Requires at least: 3.8.1\n * Tested up to: 4.1.1\n *\n * Text Domain: icons-for-features\n * Domain Path: /languages/\n *\n * @package Icons_For_Features\n * @category Core\n * @author Matty\n */\n\nif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly\n\n/**\n * Returns the main instance of Icons_For_Features to prevent the need to use globals.\n *\n * @since  1.0.0\n * @return object Icons_For_Features\n */\nfunction Icons_For_Features() {\n\treturn Icons_For_Features::instance();\n} // End Icons_For_Features()\n\nIcons_For_Features();\n\n/**\n * Main Icons_For_Features Class\n *\n * @class Icons_For_Features\n * @version\t1.0.0\n * @since 1.0.0\n * @package\tKudos\n * @author Matty\n */\nfinal class Icons_For_Features {\n\t/**\n\t * Icons_For_Features The single instance of Icons_For_Features.\n\t * @var \tobject\n\t * @access  private\n\t * @since \t1.0.0\n\t */\n\tprivate static $_instance = null;\n\n\t/**\n\t * The token.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $token;\n\n\t/**\n\t * The version number.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $version;\n\n\t/**\n\t * An instance of the Icons_For_Features_Admin class.\n\t * @var     object\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $admin;\n\n\t/**\n\t * The name of the hook on which we will be working our magic.\n\t * @var     string\n\t * @access  public\n\t * @since   1.0.0\n\t */\n\tpublic $hook;\n\n\t/**\n\t * Constructor function.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function __construct () {\n\t\t$this->token \t\t\t= 'icons-for-features';\n\t\t$this->plugin_url \t\t= plugin_dir_url( __FILE__ );\n\t\t$this->plugin_path \t\t= plugin_dir_path( __FILE__ );\n\t\t$this->version \t\t\t= '1.0.0';\n\n\t\tregister_activation_hook( __FILE__, array( $this, 'install' ) );\n\n\t\tadd_action( 'init', array( $this, 'load_plugin_textdomain' ) );\n\n\t\t/* Conditionally load the admin. */\n\t\tif ( is_admin() ) {\n\t\t\tadd_action( 'admin_init', array( $this, 'register_styles' ) );\n\n\t\t\trequire_once( 'classes/class-icons-for-features-admin.php' );\n\t\t\t$this->admin = new Icons_For_Features_Admin();\n\t\t} else {\n\t\t\tadd_action( 'wp_enqueue_scripts', array( $this, 'register_styles' ) );\n\t\t\t// An unfortunate caveat, as we need to wait for the entire page to load, in order to determine whether or not there have been Features called.\n\t\t\tadd_action( 'wp_footer', array( $this, 'maybe_enqueue_styles' ) );\n\t\t\tadd_filter( 'woothemes_features_item_template', array( $this, 'add_feature_icon_placeholder' ), 10, 2 );\n\t\t\tadd_filter( 'woothemes_features_template', array( $this, 'override_feature_icon_placeholder' ), 10, 2 );\n\t\t\tadd_filter( 'woothemes_features_html', array( $this, 'maybe_remove_override_filter' ) );\n\t\t}\n\t} // End __construct()\n\n\t/**\n\t * Main Icons_For_Features Instance\n\t *\n\t * Ensures only one instance of Icons_For_Features is loaded or can be loaded.\n\t *\n\t * @since 1.0.0\n\t * @static\n\t * @see Icons_For_Features()\n\t * @return Main Icons_For_Features instance\n\t */\n\tpublic static function instance () {\n\t\tif ( is_null( self::$_instance ) )\n\t\t\tself::$_instance = new self();\n\t\treturn self::$_instance;\n\t} // End instance()\n\n\t/**\n\t * Load the localisation file.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function load_plugin_textdomain() {\n\t\tload_plugin_textdomain( 'icons-for-features', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' );\n\t} // End load_plugin_textdomain()\n\n\t/**\n\t * Cloning is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __clone () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __clone()\n\n\t/**\n\t * Unserializing instances of this class is forbidden.\n\t *\n\t * @since 1.0.0\n\t */\n\tpublic function __wakeup () {\n\t\t_doing_it_wrong( __FUNCTION__, __( 'Cheatin&#8217; huh?' ), '1.0.0' );\n\t} // End __wakeup()\n\n\t/**\n\t * Installation. Runs on activation.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function install () {\n\t\t$this->_log_version_number();\n\t} // End install()\n\n\t/**\n\t * Log the plugin version number.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tprivate function _log_version_number () {\n\t\t// Log the version number.\n\t\tupdate_option( $this->_token . '_version', $this->_version );\n\t} // End _log_version_number()\n\n\t/**\n\t * Force has_post_thumbnail() to return false, to \"skip over\" images where there is an icon for the feature.\n\t * This caters for older versions of the Features by WooThemes plugin, where there are a few useful filters that are missing.\n\t * @access public\n\t * @since  1.0.0\n\t * @param  boolean $response  Force this to be false, somehow.\n\t * @param  int $object_id The current object ID.\n\t * @param  string $meta_key  The specified meta key to retrieve.\n\t * @param  boolean $single    Whether this is a singular instance key or not.\n\t * @return boolean            Always return a boolean.\n\t */\n\tpublic function override_has_post_thumbnail ( $response, $object_id, $meta_key, $single ) {\n\t\tif ( '_thumbnail_id' != $meta_key ) return $response;\n\t\tif ( '' != get_post_meta( intval( $object_id ), '_icon', true ) ) $response = false;\n\t\treturn $response;\n\t} // End override_has_post_thumbnail()\n\n\t/**\n\t * Remove the filter used to force has_post_thumbnail() to return false.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_remove_override_filter ( $html ) {\n\t\tremove_filter( 'get_post_metadata', array( $this, 'override_has_post_thumbnail' ), 10, 4 );\n\t\treturn $html;\n\t} // End maybe_remove_override_filter()\n\n\t/**\n\t * Add an %%ICON%% placeholder to the feature template, replacing %%IMAGE%%, if it exists.\n\t * If no %%IMAGE%% tag is present, the administrator doesn't want an image to display, so don't display an icon (respect their wishes).\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function add_feature_icon_placeholder ( $tpl, $args ) {\n\t\tadd_filter( 'get_post_metadata', array( $this, 'override_has_post_thumbnail' ), 10, 4 );\n\n\t\t$tpl = str_replace( '%%IMAGE%%', '%%ICON%%%%IMAGE%%', $tpl );\n\t\treturn $tpl;\n\t} // End add_feature_icon_placeholder()\n\n\t/**\n\t * Override the %%ICON%% template tag, if an icon is available. If not, remove the template tag.\n\t * @access  public\n\t * @since   1.0.0\n\t * @return  void\n\t */\n\tpublic function override_feature_icon_placeholder ( $html, $post ) {\n\t\t$icon = $this->get_the_icon_html( get_the_ID() );\n\t\t$html = str_replace( '%%ICON%%', $icon, $html );\n\t\treturn $html;\n\t} // End override_feature_icon_placeholder()\n\n\t/**\n\t * Register the CSS files to be loaded for this plugin.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function register_styles () {\n\t\t$suffix = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\twp_register_style( $this->token . '-icons', esc_url( $this->plugin_url . 'assets/lib/font-awesome/css/font-awesome' . $suffix . '.css' ), array(), '4.0.3', 'all' );\n\t\twp_register_style( $this->token . '-icons-loader', esc_url( $this->plugin_url . 'assets/css/style.css' ), array( $this->token . '-icons' ), $this->version, 'all' );\n\t\twp_register_style( $this->token . '-icons-admin', esc_url( $this->plugin_url . 'assets/css/admin.css' ), array( $this->token . '-icons' ), $this->version, 'all' );\n\t} // End register_styles()\n\n\t/**\n\t * Conditionally load the CSS files for this plugin.\n\t * @access public\n\t * @since  1.0.0\n\t * @return void\n\t */\n\tpublic function maybe_enqueue_styles () {\n\t\tif ( ( is_singular() && 'feature' == get_post_type() ) || is_post_type_archive( 'feature' ) || did_action( 'woothemes_features_before' ) ) {\n\t\t\twp_enqueue_style( $this->token . '-icons-loader' );\n\t\t}\n\t} // End maybe_enqueue_styles()\n\n\t/**\n\t * Get the HTML for the stored icon for a given feature.\n\t * @access public\n\t * @since  1.0.0\n\t * @param  int $post_id The feature for which to retrieve the icon.\n\t * @return string       Formatted icon HTML.\n\t */\n\tpublic function get_the_icon_html ( $post_id = null ) {\n\t\tif ( is_null( $post_id ) ) $post_id = get_the_ID();\n\t\t$response = '';\n\t\t$icon = get_post_meta( intval( $post_id ), '_icon', true );\n\t\tif ( '' != $icon && in_array( $icon, $this->get_supported_icon_list() ) ) {\n\t\t\t$response = '<div class=\"icon-preview fa ' . esc_attr( $icon ) . '\"></div>' . \"\\n\";\n\t\t}\n\t\treturn (string)apply_filters( 'icons_for_features_get_the_icon_html', $response );\n\t} // End get_the_icon_html()\n\n\t/**\n\t * Transform a given icon key into a human-readable label.\n\t * @access public\n\t * @since  1.0.0\n\t * @param  string $key Given icon key.\n\t * @return string      Formatted icon label.\n\t */\n\tpublic function get_icon_label ( $key ) {\n\t\t$label = $key;\n\t\t$label = str_replace( 'fa-', '', $label );\n\t\t$label = str_replace( '-', ' ', $label );\n\n\t\tif ( ' o' == substr( $label, -2 ) ) {\n\t\t\t$label = substr( $label, 0, ( strlen( $label ) -2 ) );\n\t\t}\n\n\t\t$label = ucwords( $label );\n\t\treturn $label;\n\t} // End get_icon_label()\n\n\t/**\n\t * Returns a filterable list of supported icon keys.\n\t * @access public\n\t * @since  1.0.0\n\t * @return array Supported icon keys.\n\t */\n\tpublic function get_supported_icon_list () {\n\t\treturn (array)apply_filters( 'icons_for_features_supported_icons', array(\n\t\t\t'fa-glass',\n\t\t\t'fa-music',\n\t\t\t'fa-search',\n\t\t\t'fa-envelope-o',\n\t\t\t'fa-heart',\n\t\t\t'fa-star',\n\t\t\t'fa-star-o',\n\t\t\t'fa-user',\n\t\t\t'fa-film',\n\t\t\t'fa-th-large',\n\t\t\t'fa-th',\n\t\t\t'fa-th-list',\n\t\t\t'fa-check',\n\t\t\t'fa-times',\n\t\t\t'fa-search-plus',\n\t\t\t'fa-search-minus',\n\t\t\t'fa-power-off',\n\t\t\t'fa-signal',\n\t\t\t'fa-cog',\n\t\t\t'fa-trash-o',\n\t\t\t'fa-home',\n\t\t\t'fa-file-o',\n\t\t\t'fa-clock-o',\n\t\t\t'fa-road',\n\t\t\t'fa-download',\n\t\t\t'fa-arrow-circle-o-down',\n\t\t\t'fa-arrow-circle-o-up',\n\t\t\t'fa-inbox',\n\t\t\t'fa-play-circle-o',\n\t\t\t'fa-repeat',\n\t\t\t'fa-refresh',\n\t\t\t'fa-list-alt',\n\t\t\t'fa-lock',\n\t\t\t'fa-flag',\n\t\t\t'fa-headphones',\n\t\t\t'fa-volume-off',\n\t\t\t'fa-volume-down',\n\t\t\t'fa-volume-up',\n\t\t\t'fa-qrcode',\n\t\t\t'fa-barcode',\n\t\t\t'fa-tag',\n\t\t\t'fa-tags',\n\t\t\t'fa-book',\n\t\t\t'fa-bookmark',\n\t\t\t'fa-print',\n\t\t\t'fa-camera',\n\t\t\t'fa-font',\n\t\t\t'fa-bold',\n\t\t\t'fa-italic',\n\t\t\t'fa-text-height',\n\t\t\t'fa-text-width',\n\t\t\t'fa-align-left',\n\t\t\t'fa-align-center',\n\t\t\t'fa-align-right',\n\t\t\t'fa-align-justify',\n\t\t\t'fa-list',\n\t\t\t'fa-outdent',\n\t\t\t'fa-indent',\n\t\t\t'fa-video-camera',\n\t\t\t'fa-picture-o',\n\t\t\t'fa-pencil',\n\t\t\t'fa-map-marker',\n\t\t\t'fa-adjust',\n\t\t\t'fa-tint',\n\t\t\t'fa-pencil-square-o',\n\t\t\t'fa-share-square-o',\n\t\t\t'fa-check-square-o',\n\t\t\t'fa-arrows',\n\t\t\t'fa-step-backward',\n\t\t\t'fa-fast-backward',\n\t\t\t'fa-backward',\n\t\t\t'fa-play',\n\t\t\t'fa-pause',\n\t\t\t'fa-stop',\n\t\t\t'fa-forward',\n\t\t\t'fa-fast-forward',\n\t\t\t'fa-step-forward',\n\t\t\t'fa-eject',\n\t\t\t'fa-chevron-left',\n\t\t\t'fa-chevron-right',\n\t\t\t'fa-plus-circle',\n\t\t\t'fa-minus-circle',\n\t\t\t'fa-times-circle',\n\t\t\t'fa-check-circle',\n\t\t\t'fa-question-circle',\n\t\t\t'fa-info-circle',\n\t\t\t'fa-crosshairs',\n\t\t\t'fa-times-circle-o',\n\t\t\t'fa-check-circle-o',\n\t\t\t'fa-ban',\n\t\t\t'fa-arrow-left',\n\t\t\t'fa-arrow-right',\n\t\t\t'fa-arrow-up',\n\t\t\t'fa-arrow-down',\n\t\t\t'fa-share',\n\t\t\t'fa-expand',\n\t\t\t'fa-compress',\n\t\t\t'fa-plus',\n\t\t\t'fa-minus',\n\t\t\t'fa-asterisk',\n\t\t\t'fa-exclamation-circle',\n\t\t\t'fa-gift',\n\t\t\t'fa-leaf',\n\t\t\t'fa-fire',\n\t\t\t'fa-eye',\n\t\t\t'fa-eye-slash',\n\t\t\t'fa-exclamation-triangle',\n\t\t\t'fa-plane',\n\t\t\t'fa-calendar',\n\t\t\t'fa-random',\n\t\t\t'fa-comment',\n\t\t\t'fa-magnet',\n\t\t\t'fa-chevron-up',\n\t\t\t'fa-chevron-down',\n\t\t\t'fa-retweet',\n\t\t\t'fa-shopping-cart',\n\t\t\t'fa-folder',\n\t\t\t'fa-folder-open',\n\t\t\t'fa-arrows-v',\n\t\t\t'fa-arrows-h',\n\t\t\t'fa-bar-chart-o',\n\t\t\t'fa-twitter-square',\n\t\t\t'fa-facebook-square',\n\t\t\t'fa-camera-retro',\n\t\t\t'fa-key',\n\t\t\t'fa-cogs',\n\t\t\t'fa-comments',\n\t\t\t'fa-thumbs-o-up',\n\t\t\t'fa-thumbs-o-down',\n\t\t\t'fa-star-half',\n\t\t\t'fa-heart-o',\n\t\t\t'fa-sign-out',\n\t\t\t'fa-linkedin-square',\n\t\t\t'fa-thumb-tack',\n\t\t\t'fa-external-link',\n\t\t\t'fa-sign-in',\n\t\t\t'fa-trophy',\n\t\t\t'fa-github-square',\n\t\t\t'fa-upload',\n\t\t\t'fa-lemon-o',\n\t\t\t'fa-phone',\n\t\t\t'fa-square-o',\n\t\t\t'fa-bookmark-o',\n\t\t\t'fa-phone-square',\n\t\t\t'fa-twitter',\n\t\t\t'fa-facebook',\n\t\t\t'fa-github',\n\t\t\t'fa-unlock',\n\t\t\t'fa-credit-card',\n\t\t\t'fa-rss',\n\t\t\t'fa-hdd-o',\n\t\t\t'fa-bullhorn',\n\t\t\t'fa-bell',\n\t\t\t'fa-certificate',\n\t\t\t'fa-hand-o-right',\n\t\t\t'fa-hand-o-left',\n\t\t\t'fa-hand-o-up',\n\t\t\t'fa-hand-o-down',\n\t\t\t'fa-arrow-circle-left',\n\t\t\t'fa-arrow-circle-right',\n\t\t\t'fa-arrow-circle-up',\n\t\t\t'fa-arrow-circle-down',\n\t\t\t'fa-globe',\n\t\t\t'fa-wrench',\n\t\t\t'fa-tasks',\n\t\t\t'fa-filter',\n\t\t\t'fa-briefcase',\n\t\t\t'fa-arrows-alt',\n\t\t\t'fa-users',\n\t\t\t'fa-link',\n\t\t\t'fa-cloud',\n\t\t\t'fa-flask',\n\t\t\t'fa-scissors',\n\t\t\t'fa-files-o',\n\t\t\t'fa-paperclip',\n\t\t\t'fa-floppy-o',\n\t\t\t'fa-square',\n\t\t\t'fa-bars',\n\t\t\t'fa-list-ul',\n\t\t\t'fa-list-ol',\n\t\t\t'fa-strikethrough',\n\t\t\t'fa-underline',\n\t\t\t'fa-table',\n\t\t\t'fa-magic',\n\t\t\t'fa-truck',\n\t\t\t'fa-pinterest',\n\t\t\t'fa-pinterest-square',\n\t\t\t'fa-google-plus-square',\n\t\t\t'fa-google-plus',\n\t\t\t'fa-money',\n\t\t\t'fa-caret-down',\n\t\t\t'fa-caret-up',\n\t\t\t'fa-caret-left',\n\t\t\t'fa-caret-right',\n\t\t\t'fa-columns',\n\t\t\t'fa-sort',\n\t\t\t'fa-sort-asc',\n\t\t\t'fa-sort-desc',\n\t\t\t'fa-envelope',\n\t\t\t'fa-linkedin',\n\t\t\t'fa-undo',\n\t\t\t'fa-gavel',\n\t\t\t'fa-tachometer',\n\t\t\t'fa-comment-o',\n\t\t\t'fa-comments-o',\n\t\t\t'fa-bolt',\n\t\t\t'fa-sitemap',\n\t\t\t'fa-umbrella',\n\t\t\t'fa-clipboard',\n\t\t\t'fa-lightbulb-o',\n\t\t\t'fa-exchange',\n\t\t\t'fa-cloud-download',\n\t\t\t'fa-cloud-upload',\n\t\t\t'fa-user-md',\n\t\t\t'fa-stethoscope',\n\t\t\t'fa-suitcase',\n\t\t\t'fa-bell-o',\n\t\t\t'fa-coffee',\n\t\t\t'fa-cutlery',\n\t\t\t'fa-file-text-o',\n\t\t\t'fa-building-o',\n\t\t\t'fa-hospital-o',\n\t\t\t'fa-ambulance',\n\t\t\t'fa-medkit',\n\t\t\t'fa-fighter-jet',\n\t\t\t'fa-beer',\n\t\t\t'fa-h-square',\n\t\t\t'fa-plus-square',\n\t\t\t'fa-angle-double-left',\n\t\t\t'fa-angle-double-right',\n\t\t\t'fa-angle-double-up',\n\t\t\t'fa-angle-double-down',\n\t\t\t'fa-angle-left',\n\t\t\t'fa-angle-right',\n\t\t\t'fa-angle-up',\n\t\t\t'fa-angle-down',\n\t\t\t'fa-desktop',\n\t\t\t'fa-laptop',\n\t\t\t'fa-tablet',\n\t\t\t'fa-mobile',\n\t\t\t'fa-circle-o',\n\t\t\t'fa-quote-left',\n\t\t\t'fa-quote-right',\n\t\t\t'fa-spinner',\n\t\t\t'fa-circle',\n\t\t\t'fa-reply',\n\t\t\t'fa-github-alt',\n\t\t\t'fa-folder-o',\n\t\t\t'fa-folder-open-o',\n\t\t\t'fa-smile-o',\n\t\t\t'fa-frown-o',\n\t\t\t'fa-meh-o',\n\t\t\t'fa-gamepad',\n\t\t\t'fa-keyboard-o',\n\t\t\t'fa-flag-o',\n\t\t\t'fa-flag-checkered',\n\t\t\t'fa-terminal',\n\t\t\t'fa-code',\n\t\t\t'fa-reply-all',\n\t\t\t'fa-mail-reply-all',\n\t\t\t'fa-star-half-o',\n\t\t\t'fa-location-arrow',\n\t\t\t'fa-crop',\n\t\t\t'fa-code-fork',\n\t\t\t'fa-chain-broken',\n\t\t\t'fa-question',\n\t\t\t'fa-info',\n\t\t\t'fa-exclamation',\n\t\t\t'fa-superscript',\n\t\t\t'fa-subscript',\n\t\t\t'fa-eraser',\n\t\t\t'fa-puzzle-piece',\n\t\t\t'fa-microphone',\n\t\t\t'fa-microphone-slash',\n\t\t\t'fa-shield',\n\t\t\t'fa-calendar-o',\n\t\t\t'fa-fire-extinguisher',\n\t\t\t'fa-rocket',\n\t\t\t'fa-maxcdn',\n\t\t\t'fa-chevron-circle-left',\n\t\t\t'fa-chevron-circle-right',\n\t\t\t'fa-chevron-circle-up',\n\t\t\t'fa-chevron-circle-down',\n\t\t\t'fa-html5',\n\t\t\t'fa-css3',\n\t\t\t'fa-anchor',\n\t\t\t'fa-unlock-alt',\n\t\t\t'fa-bullseye',\n\t\t\t'fa-ellipsis-h',\n\t\t\t'fa-ellipsis-v',\n\t\t\t'fa-rss-square',\n\t\t\t'fa-play-circle',\n\t\t\t'fa-ticket',\n\t\t\t'fa-minus-square',\n\t\t\t'fa-minus-square-o',\n\t\t\t'fa-level-up',\n\t\t\t'fa-level-down',\n\t\t\t'fa-check-square',\n\t\t\t'fa-pencil-square',\n\t\t\t'fa-external-link-square',\n\t\t\t'fa-share-square',\n\t\t\t'fa-compass',\n\t\t\t'fa-caret-square-o-down',\n\t\t\t'fa-caret-square-o-up',\n\t\t\t'fa-caret-square-o-right',\n\t\t\t'fa-eur',\n\t\t\t'fa-gbp',\n\t\t\t'fa-usd',\n\t\t\t'fa-inr',\n\t\t\t'fa-jpy',\n\t\t\t'fa-rub',\n\t\t\t'fa-krw',\n\t\t\t'fa-btc',\n\t\t\t'fa-file',\n\t\t\t'fa-file-text',\n\t\t\t'fa-sort-alpha-asc',\n\t\t\t'fa-sort-alpha-desc',\n\t\t\t'fa-sort-amount-asc',\n\t\t\t'fa-sort-amount-desc',\n\t\t\t'fa-sort-numeric-asc',\n\t\t\t'fa-sort-numeric-desc',\n\t\t\t'fa-thumbs-up',\n\t\t\t'fa-thumbs-down',\n\t\t\t'fa-youtube-square',\n\t\t\t'fa-youtube',\n\t\t\t'fa-xing',\n\t\t\t'fa-xing-square',\n\t\t\t'fa-youtube-play',\n\t\t\t'fa-dropbox',\n\t\t\t'fa-stack-overflow',\n\t\t\t'fa-instagram',\n\t\t\t'fa-flickr',\n\t\t\t'fa-adn',\n\t\t\t'fa-bitbucket',\n\t\t\t'fa-bitbucket-square',\n\t\t\t'fa-tumblr',\n\t\t\t'fa-tumblr-square',\n\t\t\t'fa-long-arrow-down',\n\t\t\t'fa-long-arrow-up',\n\t\t\t'fa-long-arrow-left',\n\t\t\t'fa-long-arrow-right',\n\t\t\t'fa-apple',\n\t\t\t'fa-windows',\n\t\t\t'fa-android',\n\t\t\t'fa-linux',\n\t\t\t'fa-dribbble',\n\t\t\t'fa-skype',\n\t\t\t'fa-foursquare',\n\t\t\t'fa-trello',\n\t\t\t'fa-female',\n\t\t\t'fa-male',\n\t\t\t'fa-gittip',\n\t\t\t'fa-sun-o',\n\t\t\t'fa-moon-o',\n\t\t\t'fa-archive',\n\t\t\t'fa-bug',\n\t\t\t'fa-vk',\n\t\t\t'fa-weibo',\n\t\t\t'fa-renren',\n\t\t\t'fa-pagelines',\n\t\t\t'fa-stack-exchange',\n\t\t\t'fa-arrow-circle-o-right',\n\t\t\t'fa-arrow-circle-o-left',\n\t\t\t'fa-caret-square-o-left',\n\t\t\t'fa-dot-circle-o',\n\t\t\t'fa-wheelchair',\n\t\t\t'fa-vimeo-square',\n\t\t\t'fa-try',\n\t\t\t'fa-plus-square-o'\n\t\t\t) );\n\t} // End get_supported_icon_list()\n} // End Class\n?>\n", "=== Icons for Features ===\nContributors: woothemes,mattyza\nDonate link: http://woothemes.com/\nTags: features,icons,font-awesome\nRequires at least: 3.8.1\nTested up to: 4.1.1\nStable tag: 1.0.1\nLicense: GPLv3 or later\nLicense URI: http://www.gnu.org/licenses/gpl-3.0.html\n\nDisplay an icon for a feature, instead of an image, in the \"Features by WooThemes\" plugin.\n\n== Description ==\n\nIcons for Features makes it really easy to select an icon to go along with your feature. Select from the entire library of Font Awesome icons, using an intuitive administration interface, similar to the \"Featured Image\" meta box.\n\nIcons for Features; when an image just won't do.\n\n== Usage ==\n\nOnce activated, add or edit a feature under the \"Features\" administration menu (provided by the Features by WooThemes plugin). A \"Feature Icon\" meta box is added to the side column of this edit screen, where an icon can be selected.\n\nOnce done, hit the \"Publish\" button and you're good to go!\n\n== Installation ==\n\nInstalling \"Icons for Features\" can be done either by searching for \"Icons for Features\" via the \"Plugins > Add New\" screen in your WordPress dashboard, or by using the following steps:\n\n1. Download the plugin via WordPress.org.\n1. Upload the ZIP file through the \"Plugins > Add New > Upload\" screen in your WordPress dashboard.\n1. Activate the plugin through the 'Plugins' menu in WordPress\n1. Add or edit a feature and use the \"Feature Icon\" meta box.\n\n== Frequently Asked Questions ==\n\n= I don't see any \"Features\" menu in my WordPress admin? What do I do? =\n\nThis plugin requires the [Features by WooThemes](http://wordpress.org/plugins/features-by-woothemes/), which it modifies. Please download and activate this plugin, to proceed.\n\n= The icon is too small! How do I adjust it's size? =\n\nTheme developers may, from time to time, add specific styling to cater for this icon. If not, that's okay!\n\nThe following CSS is a basic example of adjusting the size of the icons:\n\n`.feature .icon-preview { font-size: 5em; }`\n\n= How do I contribute? =\n\nWe encourage everyone to contribute their ideas, thoughts and code snippets. This can be done by forking the [repository over at GitHub](http://github.com/woothemes/icons-for-features/).\n\n== Screenshots ==\n\n1. The Icons for Features administration meta box.\n\n2. The Features list screen, showcasing icons for the features.\n\n\n== Upgrade Notice ==\n\n= 1.0.1 =\n* 2015-04-22\n* Security Fix for remove_query_arg vulnerability\n\n= 1.0.0 =\n* 2014-03-18\n* Initial release. Woo!\n\n== Changelog ==\n\n= 1.0.1 =\n* 2015-04-22\n* Fix for remove_query_arg vulnerability\n\n= 1.0.0 =\n* 2014-03-18\n* Initial release. Woo!"], "filenames": ["classes/class-icons-for-features-admin.php", "icons-for-features.php", "readme.txt"], "buggy_code_start_loc": [63, 6, 6], "buggy_code_end_loc": [64, 11, 66], "fixing_code_start_loc": [63, 6, 6], "fixing_code_end_loc": [64, 11, 75], "type": "CWE-601", "message": "A vulnerability, which was classified as problematic, has been found in Icons for Features Plugin 1.0.0 on WordPress. Affected by this issue is some unknown functionality of the file classes/class-icons-for-features-admin.php. The manipulation of the argument redirect_url leads to open redirect. The attack may be launched remotely. Upgrading to version 1.0.1 is able to address this issue. The name of the patch is 63124c021ae24b68e56872530df26eb4268ad633. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-227756.", "other": {"cve": {"id": "CVE-2015-10104", "sourceIdentifier": "cna@vuldb.com", "published": "2023-04-30T21:15:30.740", "lastModified": "2023-05-06T03:06:43.207", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in Icons for Features Plugin 1.0.0 on WordPress. Affected by this issue is some unknown functionality of the file classes/class-icons-for-features-admin.php. The manipulation of the argument redirect_url leads to open redirect. The attack may be launched remotely. Upgrading to version 1.0.1 is able to address this issue. The name of the patch is 63124c021ae24b68e56872530df26eb4268ad633. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-227756."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-601"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:woocommerce:icons_for_features:1.0.0:*:*:*:*:wordpress:*:*", "matchCriteriaId": "21FF31E2-3C97-4E47-A258-10E7EAED788F"}]}]}], "references": [{"url": "https://github.com/wp-plugins/icons-for-features/commit/63124c021ae24b68e56872530df26eb4268ad633", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/wp-plugins/icons-for-features/releases/tag/1.0.1", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.227756", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.227756", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/wp-plugins/icons-for-features/commit/63124c021ae24b68e56872530df26eb4268ad633"}}