{"buggy_code": ["\"\"\"\nDjango settings for nsupdate project\n\nNote: do not directly use these settings, rather use \"dev\" or \"prod\".\n\"\"\"\n\n# Note: django internally first loads its own defaults and then loads the\n# project's settings on top of that. Due to this, no import * is required here.\n\nimport os\n\n# To make this work, put a unique, long, random, secret string into your environment.\n# E.g. in ~/.bashrc: export SECRET_KEY=\"...\"\ntry:\n    SECRET_KEY = os.environ['SECRET_KEY']\nexcept KeyError:\n    # if there is no SECRET_KEY in the environment, it will be just undefined and\n    # Django will refuse running - except if you define it somehow else later (e.g. in\n    # a local_settings.py file that imports this file).\n    pass\n\n# service contact for showing on the \"about\" page:\nSERVICE_CONTACT = 'your_email AT example DOT com'\n\n# sender address for e.g. user activation emails\nDEFAULT_FROM_EMAIL = \"your_email@example.com\"\n\n# admins will get traceback emails\nADMINS = (\n    # ('Your Name', 'your_email@example.com'),\n)\nMANAGERS = ADMINS\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.\n        'NAME': 'nsupdate.sqlite',               # Or path to database file if using sqlite3.\n        # The following settings are not used with sqlite3:\n        'USER': '',\n        'PASSWORD': '',\n        'HOST': '',             # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.\n        'PORT': ''              # Set to empty string for default.\n    }\n}\n\n# these useragents are unacceptable for /nic/update service\nBAD_AGENTS = set([])  # list can have str elements\n\n# these IPAdresses and/or IPNetworks are unacceptable for /nic/update service\n# like e.g. IPs of servers related to illegal activities\nfrom netaddr import IPSet, IPAddress, IPNetwork\nBAD_IPS_HOST = IPSet([])  # inner list can have IPAddress and IPNetwork elements\n\n# when encountering these hostnames (fqdn), block them early/silently from\n# api usage. avoid any database access, so if someone tries to update\n# every 5s, the database won't be locked all the time and we can at least\n# delete the host from django admin.\nBAD_HOSTS = set([])\n\n# nameservers used e.g. for MX lookups in the registration email validation.\n# google / cloudflare DNS IPs are only given as example / fallback -\n# please configure your own nameservers in your local settings file.\nNAMESERVERS = ['8.8.8.8', '1.1.1.1', ]\n\n# registration email validation: disallow specific email domains,\n# e.g. domains that have a non-working mx / that are frequently abused.\n# we use a multiline string here with one regex per line (used with re.search).\n# the domains given below are just examples, please configure your own\n# regexes in your local settings file.\nMAILDOMAIN_BLACKLIST = r\"\"\"\nmailcatch\\.com$\nmailspam\\.xyz$\n\"\"\"\n\n# Local time zone for this installation. Choices can be found here:\n# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name\n# although not all choices may be available on all operating systems.\n# In a Windows environment this must be set to your system time zone.\nTIME_ZONE = 'Europe/Berlin'\n\n# Language code for this installation. All choices can be found here:\n# http://www.i18nguy.com/unicode/language-identifiers.html\nLANGUAGE_CODE = 'en-us'\n\nSITE_ID = 1\n\n# If you set this to False, Django will make some optimizations so as not\n# to load the internationalization machinery.\nUSE_I18N = True\n\n# If you set this to False, Django will not format dates, numbers and\n# calendars according to the current locale.\nUSE_L10N = True\n\n# If you set this to False, Django will not use timezone-aware datetimes.\nUSE_TZ = True\n\n# Absolute filesystem path to the directory that will hold user-uploaded files.\n# Example: \"/var/www/example.com/media/\"\nMEDIA_ROOT = ''\n\n# URL that handles the media served from MEDIA_ROOT. Make sure to use a\n# trailing slash.\n# Examples: \"http://example.com/media/\", \"http://media.example.com/\"\nMEDIA_URL = ''\n\n# URL prefix for static files.\n# Example: \"http://example.com/static/\", \"http://static.example.com/\"\nSTATIC_URL = '/static/'\n\n# Absolute path to the directory static files should be collected to.\n# Don't put anything in this directory yourself; store your static files\n# in apps' \"static/\" subdirectories and in STATICFILES_DIRS.\n# Example: \"/var/www/example.com/static/\"\n# STATIC_ROOT = \"/srv/nsupdate.info/htdocs/static\"\n\n# Additional locations of static files\nSTATICFILES_DIRS = (\n    # Put strings here, like \"/home/html/static\" or \"C:/www/django/static\".\n    # Always use forward slashes, even on Windows.\n    # Don't forget to use absolute paths, not relative paths.\n)\n\n# List of finder classes that know how to find static files in\n# various locations.\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',\n)\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            # '/where/you/have/additional/templates',\n        ],\n        'OPTIONS': {\n            'context_processors': [\n                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this\n                # list if you haven't customized them:\n                # 'django.contrib.auth.context_processors.auth',\n                # 'django.template.context_processors.debug',\n                'django.template.context_processors.i18n',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'nsupdate.context_processors.add_settings',\n                'nsupdate.context_processors.update_ips',\n                # 'django.template.context_processors.media',\n                # 'django.template.context_processors.static',\n                # 'django.template.context_processors.tz',\n                # 'django.contrib.messages.context_processors.messages',\n                'social_django.context_processors.backends',\n                'social_django.context_processors.login_redirect',\n\n            ],\n            'loaders': [\n                'django.template.loaders.filesystem.Loader',\n                'django.template.loaders.app_directories.Loader',\n            ],\n        },\n    },\n]\n\nMIDDLEWARE = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.locale.LocaleMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django_referrer_policy.middleware.ReferrerPolicyMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'social_django.middleware.SocialAuthExceptionMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n)\n\nROOT_URLCONF = 'nsupdate.urls'\n\n# Python dotted path to the WSGI application used by Django's runserver.\nWSGI_APPLICATION = 'nsupdate.wsgi.application'\n\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',\n    'social_django',\n    'nsupdate.login',\n    'nsupdate',\n    'nsupdate.accounts',\n    'nsupdate.api',\n    'nsupdate.main',\n    'bootstrapform',\n    'django.contrib.admin',\n    'registration',\n    'django_extensions',\n)\n\n# A sample logging configuration.\n# Sends an email to the site admins on every HTTP 500 error when DEBUG=False.\n# Do some stderr logging for some views.\n# See http://docs.djangoproject.com/en/dev/topics/logging for\n# more details on how to customize your logging configuration.\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        },\n        'stderr': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'stderr'\n        },\n        'stderr_request': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'stderr_request'\n        }\n    },\n    'loggers': {\n        'nsupdate.api.views': {\n            'handlers': ['stderr_request', ],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'nsupdate.main.views': {\n            'handlers': ['stderr_request', ],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'nsupdate.main.dnstools': {\n            'handlers': ['stderr', ],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        # this is the toplevel handler for all request processing:\n        'django.request': {\n            'handlers': ['mail_admins', 'stderr'],\n            'level': 'ERROR',\n            'propagate': True,\n        },\n    },\n    'formatters': {\n        'stderr': {\n            'format': '[%(asctime)s] %(levelname)s %(message)s',\n        },\n        'stderr_request': {\n            'format': '[%(asctime)s] %(levelname)s %(message)s '\n                      '[ip: %(request.META.REMOTE_ADDR)s, ua: \"%(request.META.HTTP_USER_AGENT)s\"]',\n        },\n    },\n}\n\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n\nACCOUNT_ACTIVATION_DAYS = 7\nREGISTRATION_EMAIL_HTML = False  # we override the text, but not the html email template\nREGISTRATION_FORM = 'nsupdate.accounts.registration_form.RegistrationFormValidateEmail'\n\nLOGIN_REDIRECT_URL = '/overview/'\nLOGOUT_REDIRECT_URL = '/'\n\nX_FRAME_OPTIONS = 'DENY'  # for clickjacking middleware\nSECURE_BROWSER_XSS_FILTER = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nREFERRER_POLICY = 'same-origin'\n\nCSRF_FAILURE_VIEW = 'nsupdate.main.views.csrf_failure_view'\n\n# Settings for CSRF cookie.\nCSRF_COOKIE_NAME = 'csrftoken'\nCSRF_COOKIE_PATH = '/'\nCSRF_COOKIE_HTTPONLY = False\n\n# Settings for session cookie.\nSESSION_COOKIE_NAME = 'sessionid'\nSESSION_COOKIE_PATH = '/'\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_AGE = 10 * 60 * 60  # 10 hours, in seconds (remember_me is True), see #381\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # more safe (remember_me is False)\n\n# Allow SHA1 for host update secrets\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',\n    'django.contrib.auth.hashers.Argon2PasswordHasher',\n    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',\n    'django.contrib.auth.hashers.BCryptPasswordHasher',\n    'django.contrib.auth.hashers.SHA1PasswordHasher',\n]\n\n# python-social-auth settings\nAUTHENTICATION_BACKENDS = (\n    'social_core.backends.amazon.AmazonOAuth2',\n    'social_core.backends.bitbucket.BitbucketOAuth',\n    'social_core.backends.disqus.DisqusOAuth2',\n    'social_core.backends.dropbox.DropboxOAuth',\n    'social_core.backends.github.GithubOAuth2',\n    'social_core.backends.google.GoogleOAuth2',\n    'social_core.backends.reddit.RedditOAuth2',\n    'social_core.backends.soundcloud.SoundcloudOAuth2',\n    'social_core.backends.stackoverflow.StackoverflowOAuth2',\n    'social_core.backends.twitter.TwitterOAuth',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'\n#    Used to redirect the user once the auth process ended successfully.\n#    The value of ?next=/foo is used if it was present\n\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login/'\n#    URL where the user will be redirected in case of an error\n\nSOCIAL_AUTH_LOGIN_URL = '/accounts/login/'\n#    Is used as a fallback for LOGIN_ERROR_URL (if it is not defined).\n\n# SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/new-users-redirect-url/'\n#    Used to redirect new registered users, will be used in place of SOCIAL_AUTH_LOGIN_REDIRECT_URL if defined.\n\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/account/profile/'\n#    Like SOCIAL_AUTH_NEW_USER_REDIRECT_URL but for new associated accounts (user is already logged in).\n#    Used in place of SOCIAL_AUTH_LOGIN_REDIRECT_URL.\n\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/account/profile'\n#    The user will be redirected to this URL when a social account is disconnected\n\nSOCIAL_AUTH_INACTIVE_USER_URL = '/'\n#    Inactive users can be redirected to this URL when trying to authenticate.\n\n# SOCIAL_AUTH_USER_MODEL = 'foo.bar.User'\n#    User model must have a username and email field, these are required.\n#    Also an is_authenticated and is_active boolean flags are recommended, these can be methods if necessary (must\n#    return True or False). If the model lacks them a True value is assumed.\n\n# SOCIAL_AUTH_UID_LENGTH = <int>\n#    Used to define the max length of the field uid. A value of 223 should work when using MySQL InnoDB which impose\n#    a 767 bytes limit (assuming UTF-8 encoding).\n\n# SOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = <int>\n#    Nonce model has a unique constraint over ('server_url', 'timestamp', 'salt'), salt has a max length of 40, so\n#    server_url length must be tweaked using this setting.\n\n# SOCIAL_AUTH_ASSOCIATION_SERVER_URL_LENGTH = <int> or SOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH = <int>\n#    Association model has a unique constraint over ('server_url', 'handle'), both fields lengths can be tweaked by\n#    these settings.\n\nSOCIAL_AUTH_DEFAULT_USERNAME = 'user'\n#    Default value to use as username, can be a callable. An UUID will be appended in case of duplicate entries.\n\nSOCIAL_AUTH_UUID_LENGTH = 16\n#    This controls the length of the UUID appended to usernames.\n\nSOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True\n#    If you want to use the full email address as the username, define this setting.\n\n# SOCIAL_AUTH_SLUGIFY_USERNAMES = False\n#    For those that prefer slugged usernames, the get_username pipeline can apply a slug transformation (code borrowed\n#    from Django project) by defining this setting to True. The feature is disabled by default to to not force this\n#    option to all projects.\n\n# SOCIAL_AUTH_CLEAN_USERNAMES = True\n#    By default the regex r'[^\\w.@+-_]+' is applied over usernames to clean them from usual undesired characters like\n#    spaces. Set this setting to False to disable this behavior.\n\n# SOCIAL_AUTH_SANITIZE_REDIRECTS = False\n#    The auth process finishes with a redirect, by default it's done to the value of SOCIAL_AUTH_LOGIN_REDIRECT_URL\n#    but can be overridden with next GET argument. If this settings is True, this application will verify the domain of\n#    the final URL and only redirect to it if it's on the same domain.\n\n# SOCIAL_AUTH_REDIRECT_IS_HTTPS = False\n#    On projects behind a reverse proxy that uses HTTPS, the redirect URIs can became with the wrong schema\n#    (http:// instead of https://) when the request lacks some headers, and might cause errors with the auth process,\n#    to force HTTPS in the final URIs set this setting to True\n\n# SOCIAL_AUTH_URLOPEN_TIMEOUT = 30\n#    Any urllib2.urlopen call will be performed with the default timeout value, to change it without affecting the\n#    global socket timeout define this setting (the value specifies timeout seconds).\n#    urllib2.urlopen uses socket.getdefaulttimeout() value by default, so setting socket.setdefaulttimeout(...) will\n#    affect urlopen when this setting is not defined, otherwise this setting takes precedence. Also this might affect\n#    other places in Django.\n#    timeout argument was introduced in python 2.6 according to urllib2 documentation\n\n# SOCIAL_AUTH_<BACKEND_NAME>_WHITELISTED_DOMAINS = ['foo.com', 'bar.com']\n#    Supply a list of domain names to be white-listed. Any user with an email address on any of the allowed domains will\n#    login successfully, otherwise AuthForbidden is raised.\n\n# SOCIAL_AUTH_<BACKEND_NAME>_WHITELISTED_EMAILS = ['me@foo.com', 'you@bar.com']\n#    Supply a list of email addresses to be white-listed. Any user with an email address in this list will login\n#    successfully, otherwise AuthForbidden is raised.\n\n# SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email', ]\n#    The user_details pipeline processor will set certain fields on user objects, such as email. Set this to a list of\n#    fields you only want to set for newly created users and avoid updating on further logins.\n\n# SOCIAL_AUTH_SESSION_EXPIRATION = True\n#    Some providers return the time that the access token will live, the value is stored in UserSocialAuth.extra_data\n#    under the key expires. By default the current user session is set to expire if this value is present, this\n#    behavior can be disabled by setting.\n\n# SOCIAL_AUTH_OPENID_PAPE_MAX_AUTH_AGE = <int value>\n#    Enable OpenID PAPE extension support by defining this setting.\n\n# SOCIAL_AUTH_FIELDS_STORED_IN_SESSION = ['foo', ]\n#    If you want to store extra parameters from POST or GET in session, like it was made for next parameter, define\n#    this setting with the parameter names.\n#    In this case foo field's value will be stored when user follows this link\n#    <a href=\"{% url socialauth_begin 'github' %}?foo=bar\">...</a>.\n\n# we need slightly different classes for bootstrap3 than the default ones\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: '',\n    constants.INFO: 'alert-info',\n    constants.SUCCESS: 'alert-success',\n    constants.WARNING: 'alert-warning',\n    constants.ERROR: 'alert-danger',\n}\n\n# translations - for details, see:\n# https://docs.djangoproject.com/en/dev/topics/i18n/translation/#message-files and\n# https://docs.djangoproject.com/en/dev/topics/i18n/translation/#how-django-discovers-language-preference\n# By default language is set to english - modify settings.py to set list of languages\ngettext_noop = lambda s: s\nLANGUAGES = (\n    ('en', gettext_noop('English')),\n    ('de', gettext_noop('German')),\n    ('el', gettext_noop('Greek')),\n    ('fr', gettext_noop('French')),\n    ('it', gettext_noop('Italian')),\n    # ('es', gettext_noop('Spanish')),\n    # ('zh-cn', gettext_noop('Chinese (China)')),\n)\n\n# silences 1_6.W001 warning you get without this:\nTEST_RUNNER = 'django.test.runner.DiscoverRunner'\n"], "fixing_code": ["\"\"\"\nDjango settings for nsupdate project\n\nNote: do not directly use these settings, rather use \"dev\" or \"prod\".\n\"\"\"\n\n# Note: django internally first loads its own defaults and then loads the\n# project's settings on top of that. Due to this, no import * is required here.\n\nimport os\n\n# To make this work, put a unique, long, random, secret string into your environment.\n# E.g. in ~/.bashrc: export SECRET_KEY=\"...\"\ntry:\n    SECRET_KEY = os.environ['SECRET_KEY']\nexcept KeyError:\n    # if there is no SECRET_KEY in the environment, it will be just undefined and\n    # Django will refuse running - except if you define it somehow else later (e.g. in\n    # a local_settings.py file that imports this file).\n    pass\n\n# service contact for showing on the \"about\" page:\nSERVICE_CONTACT = 'your_email AT example DOT com'\n\n# sender address for e.g. user activation emails\nDEFAULT_FROM_EMAIL = \"your_email@example.com\"\n\n# admins will get traceback emails\nADMINS = (\n    # ('Your Name', 'your_email@example.com'),\n)\nMANAGERS = ADMINS\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.\n        'NAME': 'nsupdate.sqlite',               # Or path to database file if using sqlite3.\n        # The following settings are not used with sqlite3:\n        'USER': '',\n        'PASSWORD': '',\n        'HOST': '',             # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.\n        'PORT': ''              # Set to empty string for default.\n    }\n}\n\n# these useragents are unacceptable for /nic/update service\nBAD_AGENTS = set([])  # list can have str elements\n\n# these IPAdresses and/or IPNetworks are unacceptable for /nic/update service\n# like e.g. IPs of servers related to illegal activities\nfrom netaddr import IPSet, IPAddress, IPNetwork\nBAD_IPS_HOST = IPSet([])  # inner list can have IPAddress and IPNetwork elements\n\n# when encountering these hostnames (fqdn), block them early/silently from\n# api usage. avoid any database access, so if someone tries to update\n# every 5s, the database won't be locked all the time and we can at least\n# delete the host from django admin.\nBAD_HOSTS = set([])\n\n# nameservers used e.g. for MX lookups in the registration email validation.\n# google / cloudflare DNS IPs are only given as example / fallback -\n# please configure your own nameservers in your local settings file.\nNAMESERVERS = ['8.8.8.8', '1.1.1.1', ]\n\n# registration email validation: disallow specific email domains,\n# e.g. domains that have a non-working mx / that are frequently abused.\n# we use a multiline string here with one regex per line (used with re.search).\n# the domains given below are just examples, please configure your own\n# regexes in your local settings file.\nMAILDOMAIN_BLACKLIST = r\"\"\"\nmailcatch\\.com$\nmailspam\\.xyz$\n\"\"\"\n\n# Local time zone for this installation. Choices can be found here:\n# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name\n# although not all choices may be available on all operating systems.\n# In a Windows environment this must be set to your system time zone.\nTIME_ZONE = 'Europe/Berlin'\n\n# Language code for this installation. All choices can be found here:\n# http://www.i18nguy.com/unicode/language-identifiers.html\nLANGUAGE_CODE = 'en-us'\n\nSITE_ID = 1\n\n# If you set this to False, Django will make some optimizations so as not\n# to load the internationalization machinery.\nUSE_I18N = True\n\n# If you set this to False, Django will not format dates, numbers and\n# calendars according to the current locale.\nUSE_L10N = True\n\n# If you set this to False, Django will not use timezone-aware datetimes.\nUSE_TZ = True\n\n# Absolute filesystem path to the directory that will hold user-uploaded files.\n# Example: \"/var/www/example.com/media/\"\nMEDIA_ROOT = ''\n\n# URL that handles the media served from MEDIA_ROOT. Make sure to use a\n# trailing slash.\n# Examples: \"http://example.com/media/\", \"http://media.example.com/\"\nMEDIA_URL = ''\n\n# URL prefix for static files.\n# Example: \"http://example.com/static/\", \"http://static.example.com/\"\nSTATIC_URL = '/static/'\n\n# Absolute path to the directory static files should be collected to.\n# Don't put anything in this directory yourself; store your static files\n# in apps' \"static/\" subdirectories and in STATICFILES_DIRS.\n# Example: \"/var/www/example.com/static/\"\n# STATIC_ROOT = \"/srv/nsupdate.info/htdocs/static\"\n\n# Additional locations of static files\nSTATICFILES_DIRS = (\n    # Put strings here, like \"/home/html/static\" or \"C:/www/django/static\".\n    # Always use forward slashes, even on Windows.\n    # Don't forget to use absolute paths, not relative paths.\n)\n\n# List of finder classes that know how to find static files in\n# various locations.\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',\n)\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            # '/where/you/have/additional/templates',\n        ],\n        'OPTIONS': {\n            'context_processors': [\n                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this\n                # list if you haven't customized them:\n                # 'django.contrib.auth.context_processors.auth',\n                # 'django.template.context_processors.debug',\n                'django.template.context_processors.i18n',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'nsupdate.context_processors.add_settings',\n                'nsupdate.context_processors.update_ips',\n                # 'django.template.context_processors.media',\n                # 'django.template.context_processors.static',\n                # 'django.template.context_processors.tz',\n                # 'django.contrib.messages.context_processors.messages',\n                'social_django.context_processors.backends',\n                'social_django.context_processors.login_redirect',\n\n            ],\n            'loaders': [\n                'django.template.loaders.filesystem.Loader',\n                'django.template.loaders.app_directories.Loader',\n            ],\n        },\n    },\n]\n\nMIDDLEWARE = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.locale.LocaleMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django_referrer_policy.middleware.ReferrerPolicyMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'social_django.middleware.SocialAuthExceptionMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n)\n\nROOT_URLCONF = 'nsupdate.urls'\n\n# Python dotted path to the WSGI application used by Django's runserver.\nWSGI_APPLICATION = 'nsupdate.wsgi.application'\n\nINSTALLED_APPS = (\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',\n    'social_django',\n    'nsupdate.login',\n    'nsupdate',\n    'nsupdate.accounts',\n    'nsupdate.api',\n    'nsupdate.main',\n    'bootstrapform',\n    'django.contrib.admin',\n    'registration',\n    'django_extensions',\n)\n\n# A sample logging configuration.\n# Sends an email to the site admins on every HTTP 500 error when DEBUG=False.\n# Do some stderr logging for some views.\n# See http://docs.djangoproject.com/en/dev/topics/logging for\n# more details on how to customize your logging configuration.\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        },\n        'stderr': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'stderr'\n        },\n        'stderr_request': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'stderr_request'\n        }\n    },\n    'loggers': {\n        'nsupdate.api.views': {\n            'handlers': ['stderr_request', ],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'nsupdate.main.views': {\n            'handlers': ['stderr_request', ],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        'nsupdate.main.dnstools': {\n            'handlers': ['stderr', ],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n        # this is the toplevel handler for all request processing:\n        'django.request': {\n            'handlers': ['mail_admins', 'stderr'],\n            'level': 'ERROR',\n            'propagate': True,\n        },\n    },\n    'formatters': {\n        'stderr': {\n            'format': '[%(asctime)s] %(levelname)s %(message)s',\n        },\n        'stderr_request': {\n            'format': '[%(asctime)s] %(levelname)s %(message)s '\n                      '[ip: %(request.META.REMOTE_ADDR)s, ua: \"%(request.META.HTTP_USER_AGENT)s\"]',\n        },\n    },\n}\n\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n\nACCOUNT_ACTIVATION_DAYS = 7\nREGISTRATION_EMAIL_HTML = False  # we override the text, but not the html email template\nREGISTRATION_FORM = 'nsupdate.accounts.registration_form.RegistrationFormValidateEmail'\n\nLOGIN_REDIRECT_URL = '/overview/'\nLOGOUT_REDIRECT_URL = '/'\n\nX_FRAME_OPTIONS = 'DENY'  # for clickjacking middleware\nSECURE_BROWSER_XSS_FILTER = True\nSECURE_CONTENT_TYPE_NOSNIFF = True\nREFERRER_POLICY = 'same-origin'\n\nCSRF_FAILURE_VIEW = 'nsupdate.main.views.csrf_failure_view'\n\n# Settings for CSRF cookie.\nCSRF_COOKIE_NAME = 'csrftoken'\nCSRF_COOKIE_PATH = '/'\nCSRF_COOKIE_HTTPONLY = True\n\n# Settings for session cookie.\nSESSION_COOKIE_NAME = 'sessionid'\nSESSION_COOKIE_PATH = '/'\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_AGE = 10 * 60 * 60  # 10 hours, in seconds (remember_me is True), see #381\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # more safe (remember_me is False)\n\n# Allow SHA1 for host update secrets\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',\n    'django.contrib.auth.hashers.Argon2PasswordHasher',\n    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',\n    'django.contrib.auth.hashers.BCryptPasswordHasher',\n    'django.contrib.auth.hashers.SHA1PasswordHasher',\n]\n\n# python-social-auth settings\nAUTHENTICATION_BACKENDS = (\n    'social_core.backends.amazon.AmazonOAuth2',\n    'social_core.backends.bitbucket.BitbucketOAuth',\n    'social_core.backends.disqus.DisqusOAuth2',\n    'social_core.backends.dropbox.DropboxOAuth',\n    'social_core.backends.github.GithubOAuth2',\n    'social_core.backends.google.GoogleOAuth2',\n    'social_core.backends.reddit.RedditOAuth2',\n    'social_core.backends.soundcloud.SoundcloudOAuth2',\n    'social_core.backends.stackoverflow.StackoverflowOAuth2',\n    'social_core.backends.twitter.TwitterOAuth',\n    'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'\n#    Used to redirect the user once the auth process ended successfully.\n#    The value of ?next=/foo is used if it was present\n\nSOCIAL_AUTH_LOGIN_ERROR_URL = '/accounts/login/'\n#    URL where the user will be redirected in case of an error\n\nSOCIAL_AUTH_LOGIN_URL = '/accounts/login/'\n#    Is used as a fallback for LOGIN_ERROR_URL (if it is not defined).\n\n# SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/new-users-redirect-url/'\n#    Used to redirect new registered users, will be used in place of SOCIAL_AUTH_LOGIN_REDIRECT_URL if defined.\n\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/account/profile/'\n#    Like SOCIAL_AUTH_NEW_USER_REDIRECT_URL but for new associated accounts (user is already logged in).\n#    Used in place of SOCIAL_AUTH_LOGIN_REDIRECT_URL.\n\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/account/profile'\n#    The user will be redirected to this URL when a social account is disconnected\n\nSOCIAL_AUTH_INACTIVE_USER_URL = '/'\n#    Inactive users can be redirected to this URL when trying to authenticate.\n\n# SOCIAL_AUTH_USER_MODEL = 'foo.bar.User'\n#    User model must have a username and email field, these are required.\n#    Also an is_authenticated and is_active boolean flags are recommended, these can be methods if necessary (must\n#    return True or False). If the model lacks them a True value is assumed.\n\n# SOCIAL_AUTH_UID_LENGTH = <int>\n#    Used to define the max length of the field uid. A value of 223 should work when using MySQL InnoDB which impose\n#    a 767 bytes limit (assuming UTF-8 encoding).\n\n# SOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = <int>\n#    Nonce model has a unique constraint over ('server_url', 'timestamp', 'salt'), salt has a max length of 40, so\n#    server_url length must be tweaked using this setting.\n\n# SOCIAL_AUTH_ASSOCIATION_SERVER_URL_LENGTH = <int> or SOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH = <int>\n#    Association model has a unique constraint over ('server_url', 'handle'), both fields lengths can be tweaked by\n#    these settings.\n\nSOCIAL_AUTH_DEFAULT_USERNAME = 'user'\n#    Default value to use as username, can be a callable. An UUID will be appended in case of duplicate entries.\n\nSOCIAL_AUTH_UUID_LENGTH = 16\n#    This controls the length of the UUID appended to usernames.\n\nSOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True\n#    If you want to use the full email address as the username, define this setting.\n\n# SOCIAL_AUTH_SLUGIFY_USERNAMES = False\n#    For those that prefer slugged usernames, the get_username pipeline can apply a slug transformation (code borrowed\n#    from Django project) by defining this setting to True. The feature is disabled by default to to not force this\n#    option to all projects.\n\n# SOCIAL_AUTH_CLEAN_USERNAMES = True\n#    By default the regex r'[^\\w.@+-_]+' is applied over usernames to clean them from usual undesired characters like\n#    spaces. Set this setting to False to disable this behavior.\n\n# SOCIAL_AUTH_SANITIZE_REDIRECTS = False\n#    The auth process finishes with a redirect, by default it's done to the value of SOCIAL_AUTH_LOGIN_REDIRECT_URL\n#    but can be overridden with next GET argument. If this settings is True, this application will verify the domain of\n#    the final URL and only redirect to it if it's on the same domain.\n\n# SOCIAL_AUTH_REDIRECT_IS_HTTPS = False\n#    On projects behind a reverse proxy that uses HTTPS, the redirect URIs can became with the wrong schema\n#    (http:// instead of https://) when the request lacks some headers, and might cause errors with the auth process,\n#    to force HTTPS in the final URIs set this setting to True\n\n# SOCIAL_AUTH_URLOPEN_TIMEOUT = 30\n#    Any urllib2.urlopen call will be performed with the default timeout value, to change it without affecting the\n#    global socket timeout define this setting (the value specifies timeout seconds).\n#    urllib2.urlopen uses socket.getdefaulttimeout() value by default, so setting socket.setdefaulttimeout(...) will\n#    affect urlopen when this setting is not defined, otherwise this setting takes precedence. Also this might affect\n#    other places in Django.\n#    timeout argument was introduced in python 2.6 according to urllib2 documentation\n\n# SOCIAL_AUTH_<BACKEND_NAME>_WHITELISTED_DOMAINS = ['foo.com', 'bar.com']\n#    Supply a list of domain names to be white-listed. Any user with an email address on any of the allowed domains will\n#    login successfully, otherwise AuthForbidden is raised.\n\n# SOCIAL_AUTH_<BACKEND_NAME>_WHITELISTED_EMAILS = ['me@foo.com', 'you@bar.com']\n#    Supply a list of email addresses to be white-listed. Any user with an email address in this list will login\n#    successfully, otherwise AuthForbidden is raised.\n\n# SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email', ]\n#    The user_details pipeline processor will set certain fields on user objects, such as email. Set this to a list of\n#    fields you only want to set for newly created users and avoid updating on further logins.\n\n# SOCIAL_AUTH_SESSION_EXPIRATION = True\n#    Some providers return the time that the access token will live, the value is stored in UserSocialAuth.extra_data\n#    under the key expires. By default the current user session is set to expire if this value is present, this\n#    behavior can be disabled by setting.\n\n# SOCIAL_AUTH_OPENID_PAPE_MAX_AUTH_AGE = <int value>\n#    Enable OpenID PAPE extension support by defining this setting.\n\n# SOCIAL_AUTH_FIELDS_STORED_IN_SESSION = ['foo', ]\n#    If you want to store extra parameters from POST or GET in session, like it was made for next parameter, define\n#    this setting with the parameter names.\n#    In this case foo field's value will be stored when user follows this link\n#    <a href=\"{% url socialauth_begin 'github' %}?foo=bar\">...</a>.\n\n# we need slightly different classes for bootstrap3 than the default ones\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: '',\n    constants.INFO: 'alert-info',\n    constants.SUCCESS: 'alert-success',\n    constants.WARNING: 'alert-warning',\n    constants.ERROR: 'alert-danger',\n}\n\n# translations - for details, see:\n# https://docs.djangoproject.com/en/dev/topics/i18n/translation/#message-files and\n# https://docs.djangoproject.com/en/dev/topics/i18n/translation/#how-django-discovers-language-preference\n# By default language is set to english - modify settings.py to set list of languages\ngettext_noop = lambda s: s\nLANGUAGES = (\n    ('en', gettext_noop('English')),\n    ('de', gettext_noop('German')),\n    ('el', gettext_noop('Greek')),\n    ('fr', gettext_noop('French')),\n    ('it', gettext_noop('Italian')),\n    # ('es', gettext_noop('Spanish')),\n    # ('zh-cn', gettext_noop('Chinese (China)')),\n)\n\n# silences 1_6.W001 warning you get without this:\nTEST_RUNNER = 'django.test.runner.DiscoverRunner'\n"], "filenames": ["src/nsupdate/settings/base.py"], "buggy_code_start_loc": [286], "buggy_code_end_loc": [287], "fixing_code_start_loc": [286], "fixing_code_end_loc": [287], "type": "CWE-1004", "message": "A vulnerability classified as problematic has been found in nsupdate.info. This affects an unknown part of the file src/nsupdate/settings/base.py of the component CSRF Cookie Handler. The manipulation of the argument CSRF_COOKIE_HTTPONLY leads to cookie without 'httponly' flag. It is possible to initiate the attack remotely. The name of the patch is 60a3fe559c453bc36b0ec3e5dd39c1303640a59a. It is recommended to apply a patch to fix this issue. The identifier VDB-216909 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2019-25091", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-27T23:15:10.263", "lastModified": "2023-01-06T16:35:09.320", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in nsupdate.info. This affects an unknown part of the file src/nsupdate/settings/base.py of the component CSRF Cookie Handler. The manipulation of the argument CSRF_COOKIE_HTTPONLY leads to cookie without 'httponly' flag. It is possible to initiate the attack remotely. The name of the patch is 60a3fe559c453bc36b0ec3e5dd39c1303640a59a. It is recommended to apply a patch to fix this issue. The identifier VDB-216909 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.7, "baseSeverity": "LOW"}, "exploitabilityScore": 2.2, "impactScore": 1.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1004"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nsupdate:nsupdate.info:*:*:*:*:*:*:*:*", "versionEndExcluding": "2019-05-19", "matchCriteriaId": "8AFC967B-14BC-4631-B1E3-30A385D2ADC3"}]}]}], "references": [{"url": "https://github.com/nsupdate-info/nsupdate.info/commit/60a3fe559c453bc36b0ec3e5dd39c1303640a59a", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nsupdate-info/nsupdate.info/pull/410", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.216909", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216909", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nsupdate-info/nsupdate.info/commit/60a3fe559c453bc36b0ec3e5dd39c1303640a59a"}}