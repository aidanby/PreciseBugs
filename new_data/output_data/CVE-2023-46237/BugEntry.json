{"buggy_code": ["<?php\n/**\n * Get's files stored as requested\n *\n * PHP version 5\n *\n * @category Getfiles\n * @package  FOGProject\n * @author   Tom Elliott <tommygunsster@gmail.com>\n * @license  http://opensource.org/licenses/gpl-3.0 GPLv3\n * @link     https://fogproject.org\n */\n/**\n * Get's files stored as requested\n *\n * PHP version 5\n *\n * @category Getfiles\n * @package  FOGProject\n * @author   Tom Elliott <tommygunsster@gmail.com>\n * @license  http://opensource.org/licenses/gpl-3.0 GPLv3\n * @link     https://fogproject.org\n */\nrequire '../commons/base.inc.php';\nif (!is_string($_GET['path'])) {\n    echo json_encode(\n        _('Invalid')\n    );\n    exit;\n}\n$path = $_GET['path'];\n$decodePath = urldecode(\n    Initiator::sanitizeItems(\n        $path\n    )\n);\n$paths = explode(':', $decodePath);\n$files = array();\nforeach ((array)$paths as &$decodedPath) {\n    if (!(is_dir($decodedPath)\n        && file_exists($decodedPath)\n        && is_readable($decodedPath))\n    ) {\n        $files[] = json_encode(_('Path is unavailable'));\n        continue;\n    }\n    $replaced_dir_sep = str_replace(\n        array('\\\\', '/'),\n        array(\n            DS,\n            DS\n        ),\n        $decodedPath\n    );\n    $glob_str = sprintf(\n        '%s%s*',\n        $replaced_dir_sep,\n        DS\n    );\n    $files = FOGCore::fastmerge(\n        (array) $files,\n        (array) glob($glob_str)\n    );\n}\necho json_encode(\n    Initiator::sanitizeItems(\n        $files\n    )\n);\nexit;\n"], "fixing_code": ["<?php\n/**\n * Get's files stored as requested\n *\n * PHP version 5\n *\n * @category Getfiles\n * @package  FOGProject\n * @author   Tom Elliott <tommygunsster@gmail.com>\n * @license  http://opensource.org/licenses/gpl-3.0 GPLv3\n * @link     https://fogproject.org\n */\n/**\n * Get's files stored as requested\n *\n * PHP version 5\n *\n * @category Getfiles\n * @package  FOGProject\n * @author   Tom Elliott <tommygunsster@gmail.com>\n * @license  http://opensource.org/licenses/gpl-3.0 GPLv3\n * @link     https://fogproject.org\n */\nrequire '../commons/base.inc.php';\n\n// Prevent file enumeration by an unauthenticated user\n$unauthorized = !$currentUser->isValid() || empty($_SERVER['HTTP_X_REQUESTED_WITH'])\n    || strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) !== 'xmlhttprequest';\n\nif ($unauthorized) {\n    echo _('Unauthorized');\n    exit;\n}\n\nif (!is_string($_GET['path'])) {\n    echo json_encode(\n        _('Invalid')\n    );\n    exit;\n}\n$path = $_GET['path'];\n$decodePath = urldecode(\n    Initiator::sanitizeItems(\n        $path\n    )\n);\n$paths = explode(':', $decodePath);\n$files = array();\nforeach ((array)$paths as &$decodedPath) {\n    if (!(is_dir($decodedPath)\n        && file_exists($decodedPath)\n        && is_readable($decodedPath))\n    ) {\n        $files[] = json_encode(_('Path is unavailable'));\n        continue;\n    }\n    $replaced_dir_sep = str_replace(\n        array('\\\\', '/'),\n        array(\n            DS,\n            DS\n        ),\n        $decodedPath\n    );\n    $glob_str = sprintf(\n        '%s%s*',\n        $replaced_dir_sep,\n        DS\n    );\n    $files = FOGCore::fastmerge(\n        (array) $files,\n        (array) glob($glob_str)\n    );\n}\necho json_encode(\n    Initiator::sanitizeItems(\n        $files\n    )\n);\nexit;\n"], "filenames": ["packages/web/status/getfiles.php"], "buggy_code_start_loc": [24], "buggy_code_end_loc": [24], "fixing_code_start_loc": [25], "fixing_code_end_loc": [35], "type": "CWE-22", "message": "FOG is a free open-source cloning/imaging/rescue suite/inventory management system. Prior to version 1.5.10, an endpoint intended to offer limited enumeration abilities to authenticated users was accessible to unauthenticated users. This enabled unauthenticated users to discover files and their respective paths that were visible to the Apache user group. Version 1.5.10 contains a patch for this issue.", "other": {"cve": {"id": "CVE-2023-46237", "sourceIdentifier": "security-advisories@github.com", "published": "2023-10-31T15:15:09.707", "lastModified": "2023-11-08T17:41:11.243", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "FOG is a free open-source cloning/imaging/rescue suite/inventory management system. Prior to version 1.5.10, an endpoint intended to offer limited enumeration abilities to authenticated users was accessible to unauthenticated users. This enabled unauthenticated users to discover files and their respective paths that were visible to the Apache user group. Version 1.5.10 contains a patch for this issue."}, {"lang": "es", "value": "FOG es un sistema gratuito de gesti\u00f3n de inventario, im\u00e1genes, clonaci\u00f3n y rescate de c\u00f3digo abierto. Antes de la versi\u00f3n 1.5.10, los usuarios no autenticados pod\u00edan acceder a un endpoint destinado a ofrecer capacidades de enumeraci\u00f3n limitadas a usuarios autenticados. Esto permiti\u00f3 a los usuarios no autenticados descubrir archivos y sus respectivas rutas que eran visibles para el grupo de usuarios de Apache. La versi\u00f3n 1.5.10 contiene un parche para este problema."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fogproject:fogproject:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.5.10", "matchCriteriaId": "F0A79C05-662C-4102-B8D5-7FCA7C19A1C2"}]}]}], "references": [{"url": "https://github.com/FOGProject/fogproject/commit/68d73740d7d40aee77cfda3fb8199d58bf04f48b", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/FOGProject/fogproject/security/advisories/GHSA-ffp9-rhfm-98c2", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/FOGProject/fogproject/commit/68d73740d7d40aee77cfda3fb8199d58bf04f48b"}}