{"buggy_code": ["/*\n * Copyright 2016 Erwin M\u00fcller <erwin.mueller@deventm.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.anrisoftware.globalpom.fileresourcemanager;\n\n/*-\n * #%L\n * Global POM Utilities :: File Resources Manager\n * %%\n * Copyright (C) 2013 - 2018 Advanced Natural Research Institute\n * %%\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * #L%\n */\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.inject.Inject;\n\nimport org.apache.commons.transaction.file.FileResourceManager;\nimport org.apache.commons.transaction.util.LoggerFacade;\nimport org.apache.commons.transaction.util.PrintWriterLogger;\n\nimport com.google.inject.Provider;\n\n/**\n * Provides the file resource manager for ACID file operations. The store\n * directory must be set before creating the manager.\n * \n * @author Erwin Mueller, erwin.mueller@deventm.org\n * @since 1.8\n */\npublic class FileResourceManagerProvider implements\n\t\tProvider<FileResourceManager> {\n\n\t@Inject\n\tprivate FileResourceManagerProviderLogger log;\n\n\tprivate String storeDir;\n\n\tprivate boolean debug;\n\n\t/**\n\t * Sets debug enabled for the file resource manager.\n\t * \n\t * @param debug\n\t *            set to {@code true} to enable debug before creating the\n\t *            manager.\n\t */\n\tpublic void setDebug(boolean debug) {\n\t\tthis.debug = debug;\n\t}\n\n\t/**\n\t * Sets the store directory path for the file resource manager.\n\t * \n\t * @param path\n\t *            the store directory {@link File} path.\n\t */\n\tpublic void setStoreDir(File path) {\n\t\tsetStoreDir(path.getAbsolutePath());\n\t}\n\n\t/**\n\t * Sets the store directory path for the file resource manager.\n\t * \n\t * @param path\n\t *            the store directory path.\n\t */\n\tpublic void setStoreDir(String path) {\n\t\tthis.storeDir = path;\n\t}\n\n\t@Override\n\tpublic FileResourceManager get() {\n\t\tString workDir = createTmpDir();\n\t\tboolean urlEncodePath = false;\n\t\tfinal ByteArrayOutputStream stream = new ByteArrayOutputStream(1024);\n\t\tPrintWriter printWriter = new PrintWriter(stream) {\n\t\t\t@Override\n\t\t\tpublic void flush() {\n\t\t\t\tsuper.flush();\n\t\t\t\tlog.logFileResourceMessage(stream.toString());\n\t\t\t}\n\t\t};\n\t\tLoggerFacade logger = new PrintWriterLogger(printWriter, \"\", debug);\n\t\treturn new FileResourceManager(storeDir, workDir, urlEncodePath, logger);\n\t}\n\n\tprivate String createTmpDir() {\n\t\ttry {\n\t\t\tFile tmp = File.createTempFile(\"fileresourcemanager\", null);\n\t\t\ttmp.delete();\n\t\t\ttmp.mkdir();\n\t\t\tString workDir = tmp.getAbsolutePath();\n\t\t\treturn workDir;\n\t\t} catch (IOException e) {\n\t\t\tthrow log.errorCreateWorkDir(e);\n\t\t}\n\t}\n\n}\n"], "fixing_code": ["package com.anrisoftware.globalpom.fileresourcemanager;\n\n/*-\n * #%L\n * Global POM Utilities :: File Resources Manager\n * %%\n * Copyright (C) 2013 - 2018 Advanced Natural Research Institute\n * %%\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * #L%\n */\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.nio.file.Files;\n\nimport javax.inject.Inject;\n\nimport org.apache.commons.transaction.file.FileResourceManager;\nimport org.apache.commons.transaction.util.LoggerFacade;\nimport org.apache.commons.transaction.util.PrintWriterLogger;\n\nimport com.google.inject.Provider;\n\n/**\n * Provides the file resource manager for ACID file operations. The store\n * directory must be set before creating the manager.\n *\n * @author Erwin Mueller, erwin.mueller@deventm.org\n * @since 1.8\n */\npublic class FileResourceManagerProvider implements Provider<FileResourceManager> {\n\n    @Inject\n    private FileResourceManagerProviderLogger log;\n\n    private String storeDir;\n\n    private boolean debug;\n\n    /**\n     * Sets debug enabled for the file resource manager.\n     *\n     * @param debug set to {@code true} to enable debug before creating the manager.\n     */\n    public void setDebug(boolean debug) {\n        this.debug = debug;\n    }\n\n    /**\n     * Sets the store directory path for the file resource manager.\n     *\n     * @param path the store directory {@link File} path.\n     */\n    public void setStoreDir(File path) {\n        setStoreDir(path.getAbsolutePath());\n    }\n\n    /**\n     * Sets the store directory path for the file resource manager.\n     *\n     * @param path the store directory path.\n     */\n    public void setStoreDir(String path) {\n        this.storeDir = path;\n    }\n\n    @Override\n    public FileResourceManager get() {\n        String workDir = createTmpDir();\n        boolean urlEncodePath = false;\n        final ByteArrayOutputStream stream = new ByteArrayOutputStream(1024);\n        PrintWriter printWriter = new PrintWriter(stream) {\n            @Override\n            public void flush() {\n                super.flush();\n                log.logFileResourceMessage(stream.toString());\n            }\n        };\n        LoggerFacade logger = new PrintWriterLogger(printWriter, \"\", debug);\n        return new FileResourceManager(storeDir, workDir, urlEncodePath, logger);\n    }\n\n    private String createTmpDir() {\n        try {\n            File tmp = Files.createTempDirectory(\"fileresourcemanager\").toFile();\n            String workDir = tmp.getAbsolutePath();\n            return workDir;\n        } catch (IOException e) {\n            throw log.errorCreateWorkDir(e);\n        }\n    }\n\n}\n"], "filenames": ["globalpomutils-fileresources/src/main/java/com/anrisoftware/globalpom/fileresourcemanager/FileResourceManagerProvider.java"], "buggy_code_start_loc": [1], "buggy_code_end_loc": [126], "fixing_code_start_loc": [0], "fixing_code_end_loc": [105], "type": "CWE-377", "message": "A vulnerability has been found in devent globalpom-utils up to 4.5.0 and classified as critical. This vulnerability affects the function createTmpDir of the file globalpomutils-fileresources/src/main/java/com/anrisoftware/globalpom/fileresourcemanager/FileResourceManagerProvider.java. The manipulation leads to insecure temporary file. The attack can be initiated remotely. Upgrading to version 4.5.1 is able to address this issue. The name of the patch is 77a820bac2f68e662ce261ecb050c643bd7ee560. It is recommended to upgrade the affected component. VDB-217570 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2018-25068", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-06T21:15:09.243", "lastModified": "2023-01-12T15:29:24.653", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability has been found in devent globalpom-utils up to 4.5.0 and classified as critical. This vulnerability affects the function createTmpDir of the file globalpomutils-fileresources/src/main/java/com/anrisoftware/globalpom/fileresourcemanager/FileResourceManagerProvider.java. The manipulation leads to insecure temporary file. The attack can be initiated remotely. Upgrading to version 4.5.1 is able to address this issue. The name of the patch is 77a820bac2f68e662ce261ecb050c643bd7ee560. It is recommended to upgrade the affected component. VDB-217570 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-377"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:globalpom-utils_project:globalpom-utils:*:*:*:*:*:*:*:*", "versionEndExcluding": "4.5.1", "matchCriteriaId": "41D355ED-AC06-49C9-AD65-1CC499CB7EC4"}]}]}], "references": [{"url": "https://github.com/devent/globalpom-utils/commit/77a820bac2f68e662ce261ecb050c643bd7ee560", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/devent/globalpom-utils/releases/tag/globalpomutils-4.5.1", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217570", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217570", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/devent/globalpom-utils/commit/77a820bac2f68e662ce261ecb050c643bd7ee560"}}