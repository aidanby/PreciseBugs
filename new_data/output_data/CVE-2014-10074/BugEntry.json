{"buggy_code": ["<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<settings>\r\n\r\n  <!-- \r\n    umbracoSettings.config configuration documentation can be found here: \r\n    http://our.umbraco.org/documentation/using-umbraco/config-files/umbracoSettings/\r\n    Many of the optional settings are not explicitly listed here \r\n    but can be found in the online documentation.\r\n    -->\r\n  \r\n  <content>\r\n    \r\n    <errors>\r\n      <error404>1</error404>\r\n      <!--\r\n        <error404>\r\n            <errorPage culture=\"default\">1</errorPage>\r\n            <errorPage culture=\"en-US\">200</errorPage>\r\n        </error404>\r\n       -->      \r\n    </errors>\r\n    \r\n    <notifications>\r\n      <!-- the email that should be used as from mail when umbraco sends a notification -->\r\n      <email>your@email.here</email>\r\n    </notifications>\r\n\r\n    <!-- Show property descriptions in editing view \"icon|text|none\" -->\r\n    <PropertyContextHelpOption>text</PropertyContextHelpOption>\r\n\r\n    <!-- The html injected into a (x)html page if Umbraco is running in preview mode -->\r\n    <PreviewBadge>\r\n      <![CDATA[<a id=\"umbracoPreviewBadge\" style=\"position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{1}/preview/previewModeBadge.png') no-repeat;z-index: 9999999;\" href=\"#\" OnClick=\"javascript:window.top.location.href = '{0}/endPreview.aspx?redir={2}'\"><span style=\"display:none;\">In Preview Mode - click to end</span></a>]]></PreviewBadge>\r\n\r\n    <!-- Cache cycle of Media and Member data fetched from the umbraco.library methods -->\r\n    <!-- In seconds. 0 will disable cache -->\r\n    <UmbracoLibraryCacheDuration>1800</UmbracoLibraryCacheDuration>\r\n\r\n    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:\r\n         - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.\r\n         - silent - Silently suppress the error and do not render the offending macro.\r\n         - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such\r\n                    error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.\r\n         Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->\r\n    <MacroErrors>inline</MacroErrors>\r\n\r\n    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->\r\n    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,swf,xml,html.htm,svg</disallowedUploadFiles>\r\n\r\n    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->\r\n    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>\r\n  </content>\r\n\r\n  <security>\r\n    <!-- set to true to auto update login interval (and there by disabling the lock screen -->\r\n    <keepUserLoggedIn>false</keepUserLoggedIn>\r\n    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->\r\n    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>\r\n  </security>\r\n\r\n  <requestHandler>\r\n    <!-- this will ensure that urls are unique when running with multiple root nodes -->\r\n    <useDomainPrefixes>false</useDomainPrefixes>\r\n    <!-- this will add a trailing slash (/) to urls when in directory url mode -->\r\n    <addTrailingSlash>true</addTrailingSlash>   \r\n  </requestHandler>\r\n\r\n  <templates>\r\n    <!-- To switch the default rendering engine to MVC, change this value from WebForms to Mvc -->\r\n    <defaultRenderingEngine>Mvc</defaultRenderingEngine>\r\n  </templates>\r\n\r\n  <scheduledTasks>\r\n    <!-- add tasks that should be called with an interval (seconds) -->\r\n    <!--    <task log=\"true\" alias=\"test60\" interval=\"60\" url=\"http://localhost/umbraco/test.aspx\"/>-->\r\n  </scheduledTasks>\r\n\r\n  <!-- distributed calls must be enabled when using Umbraco in a load balanced environment -->\r\n  <distributedCall enable=\"false\">\r\n    <!-- the id of the user who's making the calls -->\r\n    <!-- needed for security, umbraco will automatically look up correct login and passwords -->\r\n    <user>0</user>\r\n\r\n    <!--\r\n    When distributed call is enabled, you need to add all of the servers part taking in load balancing\r\n    to the server list below. \r\n    -->\r\n\r\n    <servers>\r\n\r\n      <!-- \r\n      Add ip number or hostname, make sure that it can be reached from all servers\r\n      you can also add optional attributes to force a protocol or port number.\r\n      \r\n      Examples:\r\n      \r\n      <server>127.0.0.1</server>\r\n      <server forceProtocol=\"http|https\" forcePortnumber=\"80|443\">127.0.0.1</server>\r\n      \r\n      Generally when setting up load balancing you will designate a 'master' server, \r\n      Umbraco will always assume that the FIRST server listed in this list is the 'master'.\r\n      (NOTE: Not all load balancing scenarios have a 'master', depends on how you are setting it up)\r\n      \r\n      In order for scheduled tasks (including scheduled publishing) to work properly when load balancing, each \r\n      server in the load balanced environment needs to know if it is the 'master'. In order for servers\r\n      to know this or not, they need to compare some values against the servers listed. These values\r\n      are either: serverName or appId. You should not enter both values but appId will always supersede serverName.\r\n      The serverName is the easiest and will work so long as you are not load balancing your site on the same server.\r\n      If you are doing this, then you will need to use appId which is equivalent to the value returned from\r\n      HttpRuntime.AppDomainAppId. It is recommended that you set either the serverName or appId for all servers \r\n      registered here if possible, not just the first one.\r\n      \r\n      Examples:\r\n      \r\n      <server serverName=\"MyServer\">server1.mysite.com</server>      \r\n      <server appId=\"/LM/W3SVC/69/ROOT\">server1.mysite.com</server>      \r\n      -->\r\n\r\n    </servers>\r\n  </distributedCall>\r\n\r\n  <!-- \r\n    web.routing\r\n      @trySkipIisCustomErrors\r\n        Tries to skip IIS custom errors.\r\n        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take\r\n        over and render its build-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.\r\n        The default value is false, for backward compatibility reasons, which means that IIS _will_ take\r\n        over, and _prevent_ Umbraco 404 pages to show.\r\n      @internalRedirectPreservesTemplate\r\n        By default as soon as we're not displaying the initial document, we reset the template set by the\r\n        finder or by the alt. template. Set this option to true to preserve the template set by the finder\r\n        or by the alt. template, in case of an internal redirect.\r\n        (false by default, and in fact should remain false unless you know what you're doing)\r\n  -->\r\n  <web.routing\r\n    trySkipIisCustomErrors=\"false\"\r\n    internalRedirectPreservesTemplate=\"false\">\r\n  </web.routing>\r\n\r\n</settings>\r\n", "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<settings>\r\n  <content>\r\n    <imaging>\r\n      <!-- what file extension that should cause umbraco to create thumbnails -->\r\n      <imageFileTypes>jpeg,jpg,gif,bmp,png,tiff,tif</imageFileTypes>\r\n      <!-- what attributes that are allowed in the editor on an img tag -->\r\n      <allowedAttributes>src,alt,border,class,style,align,id,name,onclick,usemap</allowedAttributes>\r\n      <!-- automatically updates dimension, filesize and extension attributes on upload -->\r\n      <autoFillImageProperties>\r\n        <uploadField alias=\"umbracoFile\">\r\n          <widthFieldAlias>umbracoWidth</widthFieldAlias>\r\n          <heightFieldAlias>umbracoHeight</heightFieldAlias>\r\n          <lengthFieldAlias>umbracoBytes</lengthFieldAlias>\r\n          <extensionFieldAlias>umbracoExtension</extensionFieldAlias>\r\n        </uploadField>\r\n      </autoFillImageProperties>\r\n      \r\n    </imaging>\r\n    <scripteditor>\r\n      <!-- Path to script folder - no ending \"/\" -->\r\n      <scriptFolderPath>/scripts</scriptFolderPath>\r\n      <!-- what files can be opened/created in the script editor -->\r\n      <scriptFileTypes>js,xml</scriptFileTypes>\r\n      <!-- disable the codemirror editor and use a simple textarea instead -->\r\n      <scriptDisableEditor>false</scriptDisableEditor>\r\n    </scripteditor>\r\n\r\n    <!-- should umbraco store the uploaded files like /media/xxx/filename.ext or like /media/xxx-filename.ext\r\n\t\tshould be set to false if the application pool's user account hasn't got readrights of the driveroot up to the /media directory -->\r\n    <UploadAllowDirectories>True</UploadAllowDirectories>\r\n    <errors>\r\n      <!-- the id of the page that should be shown if the page is not found -->\r\n      <!--<error404>\r\n                   <errorPage culture=\"default\">1</errorPage>\r\n                   <errorPage culture=\"en-US\">200</errorPage>\r\n            </error404>-->\r\n      <error404>\r\n        <errorPage culture=\"default\">1</errorPage>\r\n      </error404>\r\n    </errors>\r\n    <notifications>\r\n      <!-- the email that should be used as from mail when umbraco sends a notification -->\r\n      <email>your@email.here</email>\r\n    </notifications>\r\n\r\n    <!-- if true umbraco will ensure that no page under the same parent has an identical name -->\r\n    <ensureUniqueNaming>True</ensureUniqueNaming>\r\n\r\n    <!-- clean editor content with use of tidy -->\r\n    <TidyEditorContent>False</TidyEditorContent>\r\n\r\n    <!-- the encoding type for tidy. Default is UTF8, options are ASCII, Raw, Latin1, UTF8, ISO2022, MacroMan-->\r\n    <TidyCharEncoding>UTF8</TidyCharEncoding>\r\n\r\n    <!-- to enable new content schema, this needs to be false -->\r\n    <UseLegacyXmlSchema>false</UseLegacyXmlSchema>\r\n\r\n    <!-- Whether to force safe aliases (no spaces, no special characters) at businesslogic level on contenttypes and propertytypes -->\r\n    <!-- HIGHLY recommend to keep this to true to ensure valid and beautiful XML Schemas -->\r\n    <ForceSafeAliases>true</ForceSafeAliases>\r\n\r\n    <!-- Enable / disable xml content cache -->\r\n    <XmlCacheEnabled>True</XmlCacheEnabled>\r\n\r\n    <!-- Update disk cache every time content has changed -->\r\n    <ContinouslyUpdateXmlDiskCache>True</ContinouslyUpdateXmlDiskCache>\r\n\r\n    <!-- Update in-memory cache if xml file is changed -->\r\n    <XmlContentCheckForDiskChanges>False</XmlContentCheckForDiskChanges>\r\n\r\n    <!-- Show the /config/splashes/booting.aspx page while initializing content -->\r\n    <EnableSplashWhileLoading>False</EnableSplashWhileLoading>\r\n\r\n    <!-- Show property descriptions in editing view \"icon|text|none\" -->\r\n    <PropertyContextHelpOption>text</PropertyContextHelpOption>\r\n\r\n    <!-- The html injected into a (x)html page if Umbraco is running in preview mode -->\r\n    <PreviewBadge>\r\n      <![CDATA[<a id=\"umbracoPreviewBadge\" style=\"position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{1}/preview/previewModeBadge.png') no-repeat;\" href=\"#\" OnClick=\"javascript:window.top.location.href = '{0}/endPreview.aspx?redir={2}'\"><span style=\"display:none;\">In Preview Mode - click to end</span></a>\r\n    ]]></PreviewBadge>\r\n\r\n    <!-- Cache cycle of Media and Member data fetched from the umbraco.library methods -->\r\n    <!-- In seconds. 0 will disable cache -->\r\n    <UmbracoLibraryCacheDuration>1800</UmbracoLibraryCacheDuration>\r\n\r\n    <!-- Url Resolving ensures that all links works if you run Umbraco in virtual directories -->\r\n    <!-- Setting this to true can increase render time for pages with a large number of links -->\r\n    <!-- If running Umbraco in virtual directory this *must* be set to true! -->\r\n    <ResolveUrlsFromTextString>false</ResolveUrlsFromTextString>\r\n\r\n    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:\r\n         - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.\r\n         - silent - Silently suppress the error and do not render the offending macro.\r\n         - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such\r\n                    error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.\r\n         Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->\r\n    <MacroErrors>throw</MacroErrors>\r\n    \r\n    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->\r\n    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,swf,xml,html.htm,svg</disallowedUploadFiles>\r\n\r\n    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->\r\n    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>\r\n  </content>\r\n\r\n  <security>\r\n    <!-- set to true to auto update login interval (and there by disabling the lock screen -->\r\n    <keepUserLoggedIn>true</keepUserLoggedIn>\r\n\r\n    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->\r\n    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>\r\n    \r\n  </security>\r\n\r\n  <requestHandler>\r\n    <!-- this will ensure that urls are unique when running with multiple root nodes -->\r\n    <useDomainPrefixes>false</useDomainPrefixes>\r\n    <!-- this will add a trailing slash (/) to urls when in directory url mode -->\r\n    <addTrailingSlash>true</addTrailingSlash>\r\n    <urlReplacing removeDoubleDashes=\"true\">\r\n      <char org=\" \">-</char>\r\n      <char org=\"&quot;\"></char>\r\n      <char org=\"'\"></char>\r\n      <char org=\"%\"></char>\r\n      <char org=\".\"></char>\r\n      <char org=\";\"></char>\r\n      <char org=\"/\"></char>\r\n      <char org=\"\\\"></char>\r\n      <char org=\":\"></char>\r\n      <char org=\"#\"></char>\r\n      <char org=\"+\">plus</char>\r\n      <char org=\"*\">star</char>\r\n      <char org=\"&amp;\"></char>\r\n      <char org=\"?\"></char>\r\n      <char org=\"\u00e6\">ae</char>\r\n      <char org=\"\u00f8\">oe</char>\r\n      <char org=\"\u00e5\">aa</char>\r\n      <char org=\"\u00e4\">ae</char>\r\n      <char org=\"\u00f6\">oe</char>\r\n      <char org=\"\u00fc\">ue</char>\r\n      <char org=\"\u00df\">ss</char>\r\n      <char org=\"\u00c4\">ae</char>\r\n      <char org=\"\u00d6\">oe</char>\r\n      <char org=\"|\">-</char>\r\n      <char org=\"&lt;\"></char>\r\n      <char org=\"&gt;\"></char>\r\n    </urlReplacing>\r\n  </requestHandler>\r\n\r\n  <templates>\r\n    <!-- If you want to switch to Mvc then do NOT change useAspNetMasterPages to false -->\r\n    <!-- This (old!) setting is still used to control how macros are inserted into your pages -->\r\n    <useAspNetMasterPages>true</useAspNetMasterPages>\r\n\r\n    <!-- To switch the default rendering engine to MVC, change this value from WebForms to Mvc -->\r\n    <!-- Do not set useAspNetMasterPages to false, it is not relevant to MVC usage -->\r\n    <defaultRenderingEngine>Mvc</defaultRenderingEngine>\r\n  </templates>\r\n\r\n\r\n  <!-- this is used by Umbraco to determine if there's valid classes in the /App_Code folder to be used for Rest/XSLT extensions -->\r\n  <developer>\r\n    <appCodeFileExtensions>\r\n      <ext>cs</ext>\r\n      <ext>vb</ext>\r\n    </appCodeFileExtensions>\r\n  </developer>\r\n\r\n  <scripting>\r\n    <razor>\r\n      <!-- razor DynamicNode typecasting detects XML and returns DynamicXml - Root elements that won't convert to DynamicXml -->\r\n      <notDynamicXmlDocumentElements>\r\n        <element>p</element>\r\n        <element>div</element>\r\n        <element>ul</element>\r\n        <element>span</element>\r\n      </notDynamicXmlDocumentElements>\r\n      <dataTypeModelStaticMappings>\r\n        <!--\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping documentTypeAlias=\"textPage\" nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\" documentTypeAlias=\"textPage\" nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\" documentTypeAlias=\"textPage\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\" nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            -->\r\n      </dataTypeModelStaticMappings>\r\n    </razor>\r\n  </scripting>\r\n\r\n  <!-- This moves the asp.net viewstate data to the end of the html document instead of having it in the beginning-->\r\n  <viewstateMoverModule enable=\"false\" />\r\n\r\n  <!-- \r\n\t\tNow that we have Log4Net logging enabled, this section is only used for what gets logged to the umbracoLog table\r\n\t\twhich currently logs items used in the audit trail and roll back scenarios.\r\n\t\t-->\r\n  <logging>\r\n    <enableLogging>true</enableLogging>\r\n    <enableAsyncLogging>true</enableAsyncLogging>\r\n    <disabledLogTypes>\r\n      <!-- <logTypeAlias>[alias-of-log-type-in-lowercase]</logTypeAlias> -->\r\n    </disabledLogTypes>\r\n    <!-- You can add your own logging tool by implementing the umbraco.BusinessLogic.Interfaces.ILog interface and add the reference here -->\r\n    <!-- The external logger can also act as the audit trail storage by setting the logAuditTrail attribute to true -->\r\n    <!--<externalLogger assembly=\"~/bin/assemblyFileName.dll\" type=\"fully.qualified.namespace.and.type\" logAuditTrail=\"false\" /> -->\r\n  </logging>\r\n\r\n  <scheduledTasks>\r\n    <!-- add tasks that should be called with an interval (seconds) -->\r\n    <!--    <task log=\"true\" alias=\"test60\" interval=\"60\" url=\"http://localhost/umbraco/test.aspx\"/>-->\r\n  </scheduledTasks>\r\n\r\n  <!-- distributed calls must be enabled when using Umbraco in a load balanced environment -->\r\n  <distributedCall enable=\"false\">\r\n    <!-- the id of the user who's making the calls -->\r\n    <!-- needed for security, umbraco will automatically look up correct login and passwords -->\r\n    <user>0</user>\r\n\r\n    <!--\r\n    When distributed call is enabled, you need to add all of the servers part taking in load balancing\r\n    to the server list below. \r\n    -->\r\n\r\n    <servers>\r\n\r\n      <!-- \r\n      Add ip number or hostname, make sure that it can be reached from all servers\r\n      you can also add optional attributes to force a protocol or port number.\r\n      \r\n      Examples:\r\n      \r\n      <server>127.0.0.1</server>\r\n      <server forceProtocol=\"http|https\" forcePortnumber=\"80|443\">127.0.0.1</server>\r\n      \r\n      Generally when setting up load balancing you will designate a 'master' server, \r\n      Umbraco will always assume that the FIRST server listed in this list is the 'master'.\r\n      (NOTE: Not all load balancing scenarios have a 'master', depends on how you are setting it up)\r\n      \r\n      In order for scheduled tasks (including scheduled publishing) to work properly when load balancing, each \r\n      server in the load balanced environment needs to know if it is the 'master'. In order for servers\r\n      to know this or not, they need to compare some values against the servers listed. These values\r\n      are either: serverName or appId. You should not enter both values but appId will always supersede serverName.\r\n      The serverName is the easiest and will work so long as you are not load balancing your site on the same server.\r\n      If you are doing this, then you will need to use appId which is equivalent to the value returned from\r\n      HttpRuntime.AppDomainAppId. It is recommended that you set either the serverName or appId for all servers \r\n      registered here if possible, not just the first one.\r\n      \r\n      Examples:\r\n      \r\n      <server serverName=\"MyServer\">server1.mysite.com</server>      \r\n      <server appId=\"/LM/W3SVC/69/ROOT\">server1.mysite.com</server>      \r\n      -->\r\n     \r\n      \r\n    </servers>\r\n  </distributedCall>\r\n\r\n  <!-- Configuration for repositories -->\r\n  <!-- Add or remove repositories here. You will need the repository's unique key to be able to connect to it.-->\r\n  <repositories>\r\n    <repository name=\"Umbraco package Repository\" guid=\"65194810-1f85-11dd-bd0b-0800200c9a66\" />\r\n  </repositories>\r\n\r\n  <providers>\r\n    <users>\r\n      <!-- if you wish to use your own membershipprovider for authenticating to the umbraco back office -->\r\n      <!-- specify it here (remember to add it to the web.config as well) -->\r\n      <DefaultBackofficeProvider>UsersMembershipProvider</DefaultBackofficeProvider>\r\n    </users>\r\n  </providers>\r\n\r\n  <!-- Maps language, usertype, application and application_url to help pages -->\r\n  <help defaultUrl=\"http://our.umbraco.org/wiki/umbraco-help/{0}/{1}\">\r\n    <!-- Add links that should open custom help pages -->\r\n    <!--<link application=\"content\" applicationUrl=\"dashboard.aspx\"  language=\"en\" userType=\"Administrators\" helpUrl=\"http://www.xyz.no?{0}/{1}/{2}/{3}\" /> -->\r\n  </help>\r\n\r\n  <!-- \r\n    web.routing\r\n      @trySkipIisCustomErrors\r\n        Tries to skip IIS custom errors.\r\n        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take\r\n        over and render its build-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.\r\n        The default value is false, for backward compatibility reasons, which means that IIS _will_ take\r\n        over, and _prevent_ Umbraco 404 pages to show.\r\n      @internalRedirectPreservesTemplate\r\n        By default as soon as we're not displaying the initial document, we reset the template set by the\r\n        finder or by the alt. template. Set this option to true to preserve the template set by the finder\r\n        or by the alt. template, in case of an internal redirect.\r\n        (false by default, and in fact should remain false unless you know what you're doing)\r\n  -->\r\n  <web.routing\r\n    trySkipIisCustomErrors=\"false\"\r\n    internalRedirectPreservesTemplate=\"false\">\r\n  </web.routing>\r\n\r\n</settings>"], "fixing_code": ["<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<settings>\r\n\r\n  <!-- \r\n    umbracoSettings.config configuration documentation can be found here: \r\n    http://our.umbraco.org/documentation/using-umbraco/config-files/umbracoSettings/\r\n    Many of the optional settings are not explicitly listed here \r\n    but can be found in the online documentation.\r\n    -->\r\n  \r\n  <content>\r\n    \r\n    <errors>\r\n      <error404>1</error404>\r\n      <!--\r\n        <error404>\r\n            <errorPage culture=\"default\">1</errorPage>\r\n            <errorPage culture=\"en-US\">200</errorPage>\r\n        </error404>\r\n       -->      \r\n    </errors>\r\n    \r\n    <notifications>\r\n      <!-- the email that should be used as from mail when umbraco sends a notification -->\r\n      <email>your@email.here</email>\r\n    </notifications>\r\n\r\n    <!-- Show property descriptions in editing view \"icon|text|none\" -->\r\n    <PropertyContextHelpOption>text</PropertyContextHelpOption>\r\n\r\n    <!-- The html injected into a (x)html page if Umbraco is running in preview mode -->\r\n    <PreviewBadge>\r\n      <![CDATA[<a id=\"umbracoPreviewBadge\" style=\"position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{1}/preview/previewModeBadge.png') no-repeat;z-index: 9999999;\" href=\"#\" OnClick=\"javascript:window.top.location.href = '{0}/endPreview.aspx?redir={2}'\"><span style=\"display:none;\">In Preview Mode - click to end</span></a>]]></PreviewBadge>\r\n\r\n    <!-- Cache cycle of Media and Member data fetched from the umbraco.library methods -->\r\n    <!-- In seconds. 0 will disable cache -->\r\n    <UmbracoLibraryCacheDuration>1800</UmbracoLibraryCacheDuration>\r\n\r\n    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:\r\n         - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.\r\n         - silent - Silently suppress the error and do not render the offending macro.\r\n         - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such\r\n                    error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.\r\n         Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->\r\n    <MacroErrors>inline</MacroErrors>\r\n\r\n    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->\r\n    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,swf,xml,html.htm,svg,php</disallowedUploadFiles>\r\n\r\n    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->\r\n    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>\r\n  </content>\r\n\r\n  <security>\r\n    <!-- set to true to auto update login interval (and there by disabling the lock screen -->\r\n    <keepUserLoggedIn>false</keepUserLoggedIn>\r\n    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->\r\n    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>\r\n  </security>\r\n\r\n  <requestHandler>\r\n    <!-- this will ensure that urls are unique when running with multiple root nodes -->\r\n    <useDomainPrefixes>false</useDomainPrefixes>\r\n    <!-- this will add a trailing slash (/) to urls when in directory url mode -->\r\n    <addTrailingSlash>true</addTrailingSlash>   \r\n  </requestHandler>\r\n\r\n  <templates>\r\n    <!-- To switch the default rendering engine to MVC, change this value from WebForms to Mvc -->\r\n    <defaultRenderingEngine>Mvc</defaultRenderingEngine>\r\n  </templates>\r\n\r\n  <scheduledTasks>\r\n    <!-- add tasks that should be called with an interval (seconds) -->\r\n    <!--    <task log=\"true\" alias=\"test60\" interval=\"60\" url=\"http://localhost/umbraco/test.aspx\"/>-->\r\n  </scheduledTasks>\r\n\r\n  <!-- distributed calls must be enabled when using Umbraco in a load balanced environment -->\r\n  <distributedCall enable=\"false\">\r\n    <!-- the id of the user who's making the calls -->\r\n    <!-- needed for security, umbraco will automatically look up correct login and passwords -->\r\n    <user>0</user>\r\n\r\n    <!--\r\n    When distributed call is enabled, you need to add all of the servers part taking in load balancing\r\n    to the server list below. \r\n    -->\r\n\r\n    <servers>\r\n\r\n      <!-- \r\n      Add ip number or hostname, make sure that it can be reached from all servers\r\n      you can also add optional attributes to force a protocol or port number.\r\n      \r\n      Examples:\r\n      \r\n      <server>127.0.0.1</server>\r\n      <server forceProtocol=\"http|https\" forcePortnumber=\"80|443\">127.0.0.1</server>\r\n      \r\n      Generally when setting up load balancing you will designate a 'master' server, \r\n      Umbraco will always assume that the FIRST server listed in this list is the 'master'.\r\n      (NOTE: Not all load balancing scenarios have a 'master', depends on how you are setting it up)\r\n      \r\n      In order for scheduled tasks (including scheduled publishing) to work properly when load balancing, each \r\n      server in the load balanced environment needs to know if it is the 'master'. In order for servers\r\n      to know this or not, they need to compare some values against the servers listed. These values\r\n      are either: serverName or appId. You should not enter both values but appId will always supersede serverName.\r\n      The serverName is the easiest and will work so long as you are not load balancing your site on the same server.\r\n      If you are doing this, then you will need to use appId which is equivalent to the value returned from\r\n      HttpRuntime.AppDomainAppId. It is recommended that you set either the serverName or appId for all servers \r\n      registered here if possible, not just the first one.\r\n      \r\n      Examples:\r\n      \r\n      <server serverName=\"MyServer\">server1.mysite.com</server>      \r\n      <server appId=\"/LM/W3SVC/69/ROOT\">server1.mysite.com</server>      \r\n      -->\r\n\r\n    </servers>\r\n  </distributedCall>\r\n\r\n  <!-- \r\n    web.routing\r\n      @trySkipIisCustomErrors\r\n        Tries to skip IIS custom errors.\r\n        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take\r\n        over and render its build-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.\r\n        The default value is false, for backward compatibility reasons, which means that IIS _will_ take\r\n        over, and _prevent_ Umbraco 404 pages to show.\r\n      @internalRedirectPreservesTemplate\r\n        By default as soon as we're not displaying the initial document, we reset the template set by the\r\n        finder or by the alt. template. Set this option to true to preserve the template set by the finder\r\n        or by the alt. template, in case of an internal redirect.\r\n        (false by default, and in fact should remain false unless you know what you're doing)\r\n  -->\r\n  <web.routing\r\n    trySkipIisCustomErrors=\"false\"\r\n    internalRedirectPreservesTemplate=\"false\">\r\n  </web.routing>\r\n\r\n</settings>\r\n", "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<settings>\r\n  <content>\r\n    <imaging>\r\n      <!-- what file extension that should cause umbraco to create thumbnails -->\r\n      <imageFileTypes>jpeg,jpg,gif,bmp,png,tiff,tif</imageFileTypes>\r\n      <!-- what attributes that are allowed in the editor on an img tag -->\r\n      <allowedAttributes>src,alt,border,class,style,align,id,name,onclick,usemap</allowedAttributes>\r\n      <!-- automatically updates dimension, filesize and extension attributes on upload -->\r\n      <autoFillImageProperties>\r\n        <uploadField alias=\"umbracoFile\">\r\n          <widthFieldAlias>umbracoWidth</widthFieldAlias>\r\n          <heightFieldAlias>umbracoHeight</heightFieldAlias>\r\n          <lengthFieldAlias>umbracoBytes</lengthFieldAlias>\r\n          <extensionFieldAlias>umbracoExtension</extensionFieldAlias>\r\n        </uploadField>\r\n      </autoFillImageProperties>\r\n      \r\n    </imaging>\r\n    <scripteditor>\r\n      <!-- Path to script folder - no ending \"/\" -->\r\n      <scriptFolderPath>/scripts</scriptFolderPath>\r\n      <!-- what files can be opened/created in the script editor -->\r\n      <scriptFileTypes>js,xml</scriptFileTypes>\r\n      <!-- disable the codemirror editor and use a simple textarea instead -->\r\n      <scriptDisableEditor>false</scriptDisableEditor>\r\n    </scripteditor>\r\n\r\n    <!-- should umbraco store the uploaded files like /media/xxx/filename.ext or like /media/xxx-filename.ext\r\n\t\tshould be set to false if the application pool's user account hasn't got readrights of the driveroot up to the /media directory -->\r\n    <UploadAllowDirectories>True</UploadAllowDirectories>\r\n    <errors>\r\n      <!-- the id of the page that should be shown if the page is not found -->\r\n      <!--<error404>\r\n                   <errorPage culture=\"default\">1</errorPage>\r\n                   <errorPage culture=\"en-US\">200</errorPage>\r\n            </error404>-->\r\n      <error404>\r\n        <errorPage culture=\"default\">1</errorPage>\r\n      </error404>\r\n    </errors>\r\n    <notifications>\r\n      <!-- the email that should be used as from mail when umbraco sends a notification -->\r\n      <email>your@email.here</email>\r\n    </notifications>\r\n\r\n    <!-- if true umbraco will ensure that no page under the same parent has an identical name -->\r\n    <ensureUniqueNaming>True</ensureUniqueNaming>\r\n\r\n    <!-- clean editor content with use of tidy -->\r\n    <TidyEditorContent>False</TidyEditorContent>\r\n\r\n    <!-- the encoding type for tidy. Default is UTF8, options are ASCII, Raw, Latin1, UTF8, ISO2022, MacroMan-->\r\n    <TidyCharEncoding>UTF8</TidyCharEncoding>\r\n\r\n    <!-- to enable new content schema, this needs to be false -->\r\n    <UseLegacyXmlSchema>false</UseLegacyXmlSchema>\r\n\r\n    <!-- Whether to force safe aliases (no spaces, no special characters) at businesslogic level on contenttypes and propertytypes -->\r\n    <!-- HIGHLY recommend to keep this to true to ensure valid and beautiful XML Schemas -->\r\n    <ForceSafeAliases>true</ForceSafeAliases>\r\n\r\n    <!-- Enable / disable xml content cache -->\r\n    <XmlCacheEnabled>True</XmlCacheEnabled>\r\n\r\n    <!-- Update disk cache every time content has changed -->\r\n    <ContinouslyUpdateXmlDiskCache>True</ContinouslyUpdateXmlDiskCache>\r\n\r\n    <!-- Update in-memory cache if xml file is changed -->\r\n    <XmlContentCheckForDiskChanges>False</XmlContentCheckForDiskChanges>\r\n\r\n    <!-- Show the /config/splashes/booting.aspx page while initializing content -->\r\n    <EnableSplashWhileLoading>False</EnableSplashWhileLoading>\r\n\r\n    <!-- Show property descriptions in editing view \"icon|text|none\" -->\r\n    <PropertyContextHelpOption>text</PropertyContextHelpOption>\r\n\r\n    <!-- The html injected into a (x)html page if Umbraco is running in preview mode -->\r\n    <PreviewBadge>\r\n      <![CDATA[<a id=\"umbracoPreviewBadge\" style=\"position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{1}/preview/previewModeBadge.png') no-repeat;\" href=\"#\" OnClick=\"javascript:window.top.location.href = '{0}/endPreview.aspx?redir={2}'\"><span style=\"display:none;\">In Preview Mode - click to end</span></a>\r\n    ]]></PreviewBadge>\r\n\r\n    <!-- Cache cycle of Media and Member data fetched from the umbraco.library methods -->\r\n    <!-- In seconds. 0 will disable cache -->\r\n    <UmbracoLibraryCacheDuration>1800</UmbracoLibraryCacheDuration>\r\n\r\n    <!-- Url Resolving ensures that all links works if you run Umbraco in virtual directories -->\r\n    <!-- Setting this to true can increase render time for pages with a large number of links -->\r\n    <!-- If running Umbraco in virtual directory this *must* be set to true! -->\r\n    <ResolveUrlsFromTextString>false</ResolveUrlsFromTextString>\r\n\r\n    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:\r\n         - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.\r\n         - silent - Silently suppress the error and do not render the offending macro.\r\n         - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such\r\n                    error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.\r\n         Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->\r\n    <MacroErrors>throw</MacroErrors>\r\n    \r\n    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->\r\n    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,swf,xml,html.htm,svg,php</disallowedUploadFiles>\r\n\r\n    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->\r\n    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>\r\n  </content>\r\n\r\n  <security>\r\n    <!-- set to true to auto update login interval (and there by disabling the lock screen -->\r\n    <keepUserLoggedIn>true</keepUserLoggedIn>\r\n\r\n    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->\r\n    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>\r\n    \r\n  </security>\r\n\r\n  <requestHandler>\r\n    <!-- this will ensure that urls are unique when running with multiple root nodes -->\r\n    <useDomainPrefixes>false</useDomainPrefixes>\r\n    <!-- this will add a trailing slash (/) to urls when in directory url mode -->\r\n    <addTrailingSlash>true</addTrailingSlash>\r\n    <urlReplacing removeDoubleDashes=\"true\">\r\n      <char org=\" \">-</char>\r\n      <char org=\"&quot;\"></char>\r\n      <char org=\"'\"></char>\r\n      <char org=\"%\"></char>\r\n      <char org=\".\"></char>\r\n      <char org=\";\"></char>\r\n      <char org=\"/\"></char>\r\n      <char org=\"\\\"></char>\r\n      <char org=\":\"></char>\r\n      <char org=\"#\"></char>\r\n      <char org=\"+\">plus</char>\r\n      <char org=\"*\">star</char>\r\n      <char org=\"&amp;\"></char>\r\n      <char org=\"?\"></char>\r\n      <char org=\"\u00e6\">ae</char>\r\n      <char org=\"\u00f8\">oe</char>\r\n      <char org=\"\u00e5\">aa</char>\r\n      <char org=\"\u00e4\">ae</char>\r\n      <char org=\"\u00f6\">oe</char>\r\n      <char org=\"\u00fc\">ue</char>\r\n      <char org=\"\u00df\">ss</char>\r\n      <char org=\"\u00c4\">ae</char>\r\n      <char org=\"\u00d6\">oe</char>\r\n      <char org=\"|\">-</char>\r\n      <char org=\"&lt;\"></char>\r\n      <char org=\"&gt;\"></char>\r\n    </urlReplacing>\r\n  </requestHandler>\r\n\r\n  <templates>\r\n    <!-- If you want to switch to Mvc then do NOT change useAspNetMasterPages to false -->\r\n    <!-- This (old!) setting is still used to control how macros are inserted into your pages -->\r\n    <useAspNetMasterPages>true</useAspNetMasterPages>\r\n\r\n    <!-- To switch the default rendering engine to MVC, change this value from WebForms to Mvc -->\r\n    <!-- Do not set useAspNetMasterPages to false, it is not relevant to MVC usage -->\r\n    <defaultRenderingEngine>Mvc</defaultRenderingEngine>\r\n  </templates>\r\n\r\n\r\n  <!-- this is used by Umbraco to determine if there's valid classes in the /App_Code folder to be used for Rest/XSLT extensions -->\r\n  <developer>\r\n    <appCodeFileExtensions>\r\n      <ext>cs</ext>\r\n      <ext>vb</ext>\r\n    </appCodeFileExtensions>\r\n  </developer>\r\n\r\n  <scripting>\r\n    <razor>\r\n      <!-- razor DynamicNode typecasting detects XML and returns DynamicXml - Root elements that won't convert to DynamicXml -->\r\n      <notDynamicXmlDocumentElements>\r\n        <element>p</element>\r\n        <element>div</element>\r\n        <element>ul</element>\r\n        <element>span</element>\r\n      </notDynamicXmlDocumentElements>\r\n      <dataTypeModelStaticMappings>\r\n        <!--\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping documentTypeAlias=\"textPage\" nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\" documentTypeAlias=\"textPage\" nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\" documentTypeAlias=\"textPage\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping dataTypeGuid=\"00000000-0000-0000-0000-000000000000\" nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            <mapping nodeTypeAlias=\"propertyAlias\">Fully.Qualified.Type.Name.For.ModelBinder,Assembly.Name.Excluding.Dot.Dll</mapping>\r\n            -->\r\n      </dataTypeModelStaticMappings>\r\n    </razor>\r\n  </scripting>\r\n\r\n  <!-- This moves the asp.net viewstate data to the end of the html document instead of having it in the beginning-->\r\n  <viewstateMoverModule enable=\"false\" />\r\n\r\n  <!-- \r\n\t\tNow that we have Log4Net logging enabled, this section is only used for what gets logged to the umbracoLog table\r\n\t\twhich currently logs items used in the audit trail and roll back scenarios.\r\n\t\t-->\r\n  <logging>\r\n    <enableLogging>true</enableLogging>\r\n    <enableAsyncLogging>true</enableAsyncLogging>\r\n    <disabledLogTypes>\r\n      <!-- <logTypeAlias>[alias-of-log-type-in-lowercase]</logTypeAlias> -->\r\n    </disabledLogTypes>\r\n    <!-- You can add your own logging tool by implementing the umbraco.BusinessLogic.Interfaces.ILog interface and add the reference here -->\r\n    <!-- The external logger can also act as the audit trail storage by setting the logAuditTrail attribute to true -->\r\n    <!--<externalLogger assembly=\"~/bin/assemblyFileName.dll\" type=\"fully.qualified.namespace.and.type\" logAuditTrail=\"false\" /> -->\r\n  </logging>\r\n\r\n  <scheduledTasks>\r\n    <!-- add tasks that should be called with an interval (seconds) -->\r\n    <!--    <task log=\"true\" alias=\"test60\" interval=\"60\" url=\"http://localhost/umbraco/test.aspx\"/>-->\r\n  </scheduledTasks>\r\n\r\n  <!-- distributed calls must be enabled when using Umbraco in a load balanced environment -->\r\n  <distributedCall enable=\"false\">\r\n    <!-- the id of the user who's making the calls -->\r\n    <!-- needed for security, umbraco will automatically look up correct login and passwords -->\r\n    <user>0</user>\r\n\r\n    <!--\r\n    When distributed call is enabled, you need to add all of the servers part taking in load balancing\r\n    to the server list below. \r\n    -->\r\n\r\n    <servers>\r\n\r\n      <!-- \r\n      Add ip number or hostname, make sure that it can be reached from all servers\r\n      you can also add optional attributes to force a protocol or port number.\r\n      \r\n      Examples:\r\n      \r\n      <server>127.0.0.1</server>\r\n      <server forceProtocol=\"http|https\" forcePortnumber=\"80|443\">127.0.0.1</server>\r\n      \r\n      Generally when setting up load balancing you will designate a 'master' server, \r\n      Umbraco will always assume that the FIRST server listed in this list is the 'master'.\r\n      (NOTE: Not all load balancing scenarios have a 'master', depends on how you are setting it up)\r\n      \r\n      In order for scheduled tasks (including scheduled publishing) to work properly when load balancing, each \r\n      server in the load balanced environment needs to know if it is the 'master'. In order for servers\r\n      to know this or not, they need to compare some values against the servers listed. These values\r\n      are either: serverName or appId. You should not enter both values but appId will always supersede serverName.\r\n      The serverName is the easiest and will work so long as you are not load balancing your site on the same server.\r\n      If you are doing this, then you will need to use appId which is equivalent to the value returned from\r\n      HttpRuntime.AppDomainAppId. It is recommended that you set either the serverName or appId for all servers \r\n      registered here if possible, not just the first one.\r\n      \r\n      Examples:\r\n      \r\n      <server serverName=\"MyServer\">server1.mysite.com</server>      \r\n      <server appId=\"/LM/W3SVC/69/ROOT\">server1.mysite.com</server>      \r\n      -->\r\n     \r\n      \r\n    </servers>\r\n  </distributedCall>\r\n\r\n  <!-- Configuration for repositories -->\r\n  <!-- Add or remove repositories here. You will need the repository's unique key to be able to connect to it.-->\r\n  <repositories>\r\n    <repository name=\"Umbraco package Repository\" guid=\"65194810-1f85-11dd-bd0b-0800200c9a66\" />\r\n  </repositories>\r\n\r\n  <providers>\r\n    <users>\r\n      <!-- if you wish to use your own membershipprovider for authenticating to the umbraco back office -->\r\n      <!-- specify it here (remember to add it to the web.config as well) -->\r\n      <DefaultBackofficeProvider>UsersMembershipProvider</DefaultBackofficeProvider>\r\n    </users>\r\n  </providers>\r\n\r\n  <!-- Maps language, usertype, application and application_url to help pages -->\r\n  <help defaultUrl=\"http://our.umbraco.org/wiki/umbraco-help/{0}/{1}\">\r\n    <!-- Add links that should open custom help pages -->\r\n    <!--<link application=\"content\" applicationUrl=\"dashboard.aspx\"  language=\"en\" userType=\"Administrators\" helpUrl=\"http://www.xyz.no?{0}/{1}/{2}/{3}\" /> -->\r\n  </help>\r\n\r\n  <!-- \r\n    web.routing\r\n      @trySkipIisCustomErrors\r\n        Tries to skip IIS custom errors.\r\n        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take\r\n        over and render its build-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.\r\n        The default value is false, for backward compatibility reasons, which means that IIS _will_ take\r\n        over, and _prevent_ Umbraco 404 pages to show.\r\n      @internalRedirectPreservesTemplate\r\n        By default as soon as we're not displaying the initial document, we reset the template set by the\r\n        finder or by the alt. template. Set this option to true to preserve the template set by the finder\r\n        or by the alt. template, in case of an internal redirect.\r\n        (false by default, and in fact should remain false unless you know what you're doing)\r\n  -->\r\n  <web.routing\r\n    trySkipIisCustomErrors=\"false\"\r\n    internalRedirectPreservesTemplate=\"false\">\r\n  </web.routing>\r\n\r\n</settings>"], "filenames": ["src/Umbraco.Web.UI/config/umbracoSettings.Release.config", "src/Umbraco.Web.UI/config/umbracoSettings.config"], "buggy_code_start_loc": [48, 101], "buggy_code_end_loc": [49, 102], "fixing_code_start_loc": [48, 101], "fixing_code_end_loc": [49, 102], "type": "CWE-434", "message": "Umbraco before 7.2.0 has a remote PHP code execution vulnerability because Umbraco.Web.UI/config/umbracoSettings.Release.config does not block the upload of .php files.", "other": {"cve": {"id": "CVE-2014-10074", "sourceIdentifier": "cve@mitre.org", "published": "2018-08-27T04:29:00.230", "lastModified": "2018-11-06T19:46:47.180", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Umbraco before 7.2.0 has a remote PHP code execution vulnerability because Umbraco.Web.UI/config/umbracoSettings.Release.config does not block the upload of .php files."}, {"lang": "es", "value": "Umbraco en versiones anteriores a la 7.2.0 tiene una vulnerabilidad de ejecuci\u00f3n remota de c\u00f3digo PHP debido a que Umbraco.Web.UI/config/umbracoSettings.Release.config no bloquea la subida de archivos .php."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-434"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:umbraco:umbraco_cms:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.2.0", "matchCriteriaId": "42ADB7EC-ECB7-43F1-A0CA-3464E83B089A"}]}]}], "references": [{"url": "http://issues.umbraco.org/issue/U4-5901", "source": "cve@mitre.org", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://github.com/Umbraco/Umbraco-CMS/commit/cad06502235acabf7fb7dca779d2f78f08547e39", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Umbraco/Umbraco-CMS/commit/cad06502235acabf7fb7dca779d2f78f08547e39"}}