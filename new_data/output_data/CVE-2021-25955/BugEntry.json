{"buggy_code": ["<?php\n/* Copyright (C) 2000-2007\tRodolphe Quiedeville\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2018\tLaurent Destailleur\t\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tSebastien Di Cintio\t\t\t<sdicintio@ressource-toi.org>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2004\t\tChristophe Combelles\t\t<ccomb@free.fr>\n * Copyright (C) 2005-2019\tRegis Houssin\t\t\t\t<regis.houssin@inodbox.com>\n * Copyright (C) 2008\t\tRaphael Bertrand (Resultic)\t<raphael.bertrand@resultic.fr>\n * Copyright (C) 2010-2018\tJuanjo Menent\t\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013\t\tC\u00e9dric Salvador\t\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2013-2021\tAlexandre Spangaro\t\t\t<aspangaro@open-dsi.fr>\n * Copyright (C) 2014\t\tC\u00e9dric GROSS\t\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tMarcos Garc\u00eda\t\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t\t<jfefe@aternatik.fr>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France             <frederic.france@netlogic.fr>\n * Copyright (C) 2019       Thibault Foucart            <support@ptibogxiv.net>\n * Copyright (C) 2020       Open-Dsi         \t\t\t<support@open-dsi.fr>\n * Copyright (C) 2021       Gauthier VERDOL         \t<gauthier.verdol@atm-consulting.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n * or see https://www.gnu.org/\n */\n\n/**\n *\t\\file\t\t\thtdocs/core/lib/functions.lib.php\n *\t\\brief\t\t\tA set of functions for Dolibarr\n *\t\t\t\t\tThis file contains all frequently used functions.\n */\n\ninclude_once DOL_DOCUMENT_ROOT.'/core/lib/json.lib.php';\n\n/**\n * Return dolibarr global constant string value\n * @param string $key key to return value, return '' if not set\n * @return string\n */\nfunction getDolGlobalString($key)\n{\n\tglobal $conf;\n\t// return $conf->global->$key ?? '';\n\treturn (string) (empty($conf->global->$key) ? '' : $conf->global->$key);\n}\n\n/**\n * Return dolibarr global constant int value\n * @param string $key key to return value, return 0 if not set\n * @return int\n */\nfunction getDolGlobalInt($key)\n{\n\tglobal $conf;\n\t// return $conf->global->$key ?? 0;\n\treturn (int) (empty($conf->global->$key) ? 0 : $conf->global->$key);\n}\n\n/**\n * Return a DoliDB instance (database handler).\n *\n * @param   string\t$type\t\tType of database (mysql, pgsql...)\n * @param\tstring\t$host\t\tAddress of database server\n * @param\tstring\t$user\t\tAuthorized username\n * @param\tstring\t$pass\t\tPassword\n * @param\tstring\t$name\t\tName of database\n * @param\tint\t\t$port\t\tPort of database server\n * @return\tDoliDB\t\t\t\tA DoliDB instance\n */\nfunction getDoliDBInstance($type, $host, $user, $pass, $name, $port)\n{\n\trequire_once DOL_DOCUMENT_ROOT.\"/core/db/\".$type.'.class.php';\n\n\t$class = 'DoliDB'.ucfirst($type);\n\t$dolidb = new $class($type, $host, $user, $pass, $name, $port);\n\treturn $dolidb;\n}\n\n/**\n * \tGet list of entity id to use.\n *\n * \t@param\tstring\t$element\t\tCurrent element\n *\t\t\t\t\t\t\t\t\t'societe', 'socpeople', 'actioncomm', 'agenda', 'resource',\n *\t\t\t\t\t\t\t\t\t'product', 'productprice', 'stock', 'bom', 'mo',\n *\t\t\t\t\t\t\t\t\t'propal', 'supplier_proposal', 'invoice', 'supplier_invoice', 'payment_various',\n *\t\t\t\t\t\t\t\t\t'categorie', 'bank_account', 'bank_account', 'adherent', 'user',\n *\t\t\t\t\t\t\t\t\t'commande', 'supplier_order', 'expedition', 'intervention', 'survey',\n *\t\t\t\t\t\t\t\t\t'contract', 'tax', 'expensereport', 'holiday', 'multicurrency', 'project',\n *\t\t\t\t\t\t\t\t\t'email_template', 'event', 'donation'\n *\t\t\t\t\t\t\t\t\t'c_paiement', 'c_payment_term', ...\n * \t@param\tint\t\t$shared\t\t\t0=Return id of current entity only,\n * \t\t\t\t\t\t\t\t\t1=Return id of current entity + shared entities (default)\n *  @param\tobject\t$currentobject\tCurrent object if needed\n * \t@return\tmixed\t\t\t\t\tEntity id(s) to use ( eg. entity IN ('.getEntity(elementname).')' )\n */\nfunction getEntity($element, $shared = 1, $currentobject = null)\n{\n\tglobal $conf, $mc;\n\n\t// fix different element names (France to English)\n\tswitch ($element) {\n\t\tcase 'contrat':\n\t\t\t$element = 'contract';\n\t\t\tbreak; // \"/contrat/class/contrat.class.php\"\n\t\tcase 'order_supplier':\n\t\t\t$element = 'supplier_order';\n\t\t\tbreak; // \"/fourn/class/fournisseur.commande.class.php\"\n\t}\n\n\tif (is_object($mc)) {\n\t\treturn $mc->getEntity($element, $shared, $currentobject);\n\t} else {\n\t\t$out = '';\n\t\t$addzero = array('user', 'usergroup', 'c_email_templates', 'email_template', 'default_values');\n\t\tif (in_array($element, $addzero)) {\n\t\t\t$out .= '0,';\n\t\t}\n\t\t$out .= ((int) $conf->entity);\n\t\treturn $out;\n\t}\n}\n\n/**\n * \tSet entity id to use when to create an object\n *\n * \t@param\tobject\t$currentobject\tCurrent object\n * \t@return\tmixed\t\t\t\t\tEntity id to use ( eg. entity = '.setEntity($object) )\n */\nfunction setEntity($currentobject)\n{\n\tglobal $conf, $mc;\n\n\tif (is_object($mc) && method_exists($mc, 'setEntity')) {\n\t\treturn $mc->setEntity($currentobject);\n\t} else {\n\t\treturn ((is_object($currentobject) && $currentobject->id > 0 && $currentobject->entity > 0) ? $currentobject->entity : $conf->entity);\n\t}\n}\n\n/**\n * \tReturn if string has a name dedicated to store a secret\n *\n * \t@param\tstring\t$keyname\tName of key to test\n * \t@return\tboolean\t\t\t\tTrue if key is used to store a secret\n */\nfunction isASecretKey($keyname)\n{\n\treturn preg_match('/(_pass|password|_pw|_key|securekey|serverkey|secret\\d?|p12key|exportkey|_PW_[a-z]+|token)$/i', $keyname);\n}\n\n/**\n * Return information about user browser\n *\n * Returns array with the following format:\n * array(\n *  'browsername' => Browser name (firefox|chrome|iceweasel|epiphany|safari|opera|ie|unknown)\n *  'browserversion' => Browser version. Empty if unknown\n *  'browseros' => Set with mobile OS (android|blackberry|ios|palm|symbian|webos|maemo|windows|unknown)\n *  'layout' => (tablet|phone|classic)\n *  'phone' => empty if not mobile, (android|blackberry|ios|palm|unknown) if mobile\n *  'tablet' => true/false\n * )\n *\n * @param string $user_agent Content of $_SERVER[\"HTTP_USER_AGENT\"] variable\n * @return\tarray Check function documentation\n */\nfunction getBrowserInfo($user_agent)\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/includes/mobiledetect/mobiledetectlib/Mobile_Detect.php';\n\n\t$name = 'unknown';\n\t$version = '';\n\t$os = 'unknown';\n\t$phone = '';\n\n\t$user_agent = substr($user_agent, 0, 512);\t// Avoid to process too large user agent\n\n\t$detectmobile = new Mobile_Detect(null, $user_agent);\n\t$tablet = $detectmobile->isTablet();\n\n\tif ($detectmobile->isMobile()) {\n\t\t$phone = 'unknown';\n\n\t\t// If phone/smartphone, we set phone os name.\n\t\tif ($detectmobile->is('AndroidOS')) {\n\t\t\t$os = $phone = 'android';\n\t\t} elseif ($detectmobile->is('BlackBerryOS')) {\n\t\t\t$os = $phone = 'blackberry';\n\t\t} elseif ($detectmobile->is('iOS')) {\n\t\t\t$os = 'ios';\n\t\t\t$phone = 'iphone';\n\t\t} elseif ($detectmobile->is('PalmOS')) {\n\t\t\t$os = $phone = 'palm';\n\t\t} elseif ($detectmobile->is('SymbianOS')) {\n\t\t\t$os = 'symbian';\n\t\t} elseif ($detectmobile->is('webOS')) {\n\t\t\t$os = 'webos';\n\t\t} elseif ($detectmobile->is('MaemoOS')) {\n\t\t\t$os = 'maemo';\n\t\t} elseif ($detectmobile->is('WindowsMobileOS') || $detectmobile->is('WindowsPhoneOS')) {\n\t\t\t$os = 'windows';\n\t\t}\n\t}\n\n\t// OS\n\tif (preg_match('/linux/i', $user_agent)) {\n\t\t$os = 'linux';\n\t} elseif (preg_match('/macintosh/i', $user_agent)) {\n\t\t$os = 'macintosh';\n\t} elseif (preg_match('/windows/i', $user_agent)) {\n\t\t$os = 'windows';\n\t}\n\n\t// Name\n\t$reg = array();\n\tif (preg_match('/firefox(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t$name = 'firefox';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/edge(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t$name = 'edge';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/chrome(\\/|\\s)([\\d\\.]+)/i', $user_agent, $reg)) {\n\t\t$name = 'chrome';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/chrome/i', $user_agent, $reg)) {\n\t\t// we can have 'chrome (Mozilla...) chrome x.y' in one string\n\t\t$name = 'chrome';\n\t} elseif (preg_match('/iceweasel/i', $user_agent)) {\n\t\t$name = 'iceweasel';\n\t} elseif (preg_match('/epiphany/i', $user_agent)) {\n\t\t$name = 'epiphany';\n\t} elseif (preg_match('/safari(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t$name = 'safari';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/opera(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t// Safari is often present in string for mobile but its not.\n\t\t$name = 'opera';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/(MSIE\\s([0-9]+\\.[0-9]))|.*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg)) {\n\t\t$name = 'ie';\n\t\t$version = end($reg);\n\t} elseif (preg_match('/(Windows NT\\s([0-9]+\\.[0-9])).*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg)) {\n\t\t// MS products at end\n\t\t$name = 'ie';\n\t\t$version = end($reg);\n\t} elseif (preg_match('/l(i|y)n(x|ks)(\\(|\\/|\\s)*([\\d\\.]+)/i', $user_agent, $reg)) {\n\t\t// MS products at end\n\t\t$name = 'lynxlinks';\n\t\t$version = $reg[4];\n\t}\n\n\tif ($tablet) {\n\t\t$layout = 'tablet';\n\t} elseif ($phone) {\n\t\t$layout = 'phone';\n\t} else {\n\t\t$layout = 'classic';\n\t}\n\n\treturn array(\n\t\t'browsername' => $name,\n\t\t'browserversion' => $version,\n\t\t'browseros' => $os,\n\t\t'layout' => $layout,\n\t\t'phone' => $phone,\n\t\t'tablet' => $tablet\n\t);\n}\n\n/**\n *  Function called at end of web php process\n *\n *  @return\tvoid\n */\nfunction dol_shutdown()\n{\n\tglobal $conf, $user, $langs, $db;\n\t$disconnectdone = false;\n\t$depth = 0;\n\tif (is_object($db) && !empty($db->connected)) {\n\t\t$depth = $db->transaction_opened;\n\t\t$disconnectdone = $db->close();\n\t}\n\tdol_syslog(\"--- End access to \".$_SERVER[\"PHP_SELF\"].(($disconnectdone && $depth) ? ' (Warn: db disconnection forced, transaction depth was '.$depth.')' : ''), (($disconnectdone && $depth) ?LOG_WARNING:LOG_INFO));\n}\n\n/**\n * Return true if we are in a context of submitting the parameter $paramname from a POST of a form.\n *\n * @param \tstring\t$paramname\t\tName or parameter to test\n * @return \tboolean\t\t\t\t\tTrue if we have just submit a POST or GET request with the parameter provided (even if param is empty)\n */\nfunction GETPOSTISSET($paramname)\n{\n\t$isset = false;\n\n\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t// Clean $relativepathstring\n\tif (constant('DOL_URL_ROOT')) {\n\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t}\n\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t//var_dump($relativepathstring);\n\t//var_dump($user->default_values);\n\n\t// Code for search criteria persistence.\n\t// Retrieve values if restore_lastsearch_values\n\tif (!empty($_GET['restore_lastsearch_values'])) {        // Use $_GET here and not GETPOST\n\t\tif (!empty($_SESSION['lastsearch_values_'.$relativepathstring])) {\t// If there is saved values\n\t\t\t$tmp = json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t\t\tif (is_array($tmp)) {\n\t\t\t\tforeach ($tmp as $key => $val) {\n\t\t\t\t\tif ($key == $paramname) {\t// We are on the requested parameter\n\t\t\t\t\t\t$isset = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If there is saved contextpage, page or limit\n\t\tif ($paramname == 'contextpage' && !empty($_SESSION['lastsearch_contextpage_'.$relativepathstring])) {\n\t\t\t$isset = true;\n\t\t} elseif ($paramname == 'page' && !empty($_SESSION['lastsearch_page_'.$relativepathstring])) {\n\t\t\t$isset = true;\n\t\t} elseif ($paramname == 'limit' && !empty($_SESSION['lastsearch_limit_'.$relativepathstring])) {\n\t\t\t$isset = true;\n\t\t}\n\t} else {\n\t\t$isset = (isset($_POST[$paramname]) || isset($_GET[$paramname])); // We must keep $_POST and $_GET here\n\t}\n\n\treturn $isset;\n}\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['createform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param  string  $paramname   Name of parameter to found\n *  @param  string  $check\t     Type of check\n *                               ''=no check (deprecated)\n *                               'none'=no check (only for param that should have very rich content)\n *                               'array', 'array:restricthtml' or 'array:aZ09' to check it's an array\n *                               'int'=check it's numeric (integer or float)\n *                               'intcomma'=check it's integer+comma ('1,2,3,4...')\n *                               'alpha'=Same than alphanohtml since v13\n *                               'alphawithlgt'=alpha with lgt\n *                               'alphanohtml'=check there is no html content and no \" and no ../\n *                               'aZ'=check it's a-z only\n *                               'aZ09'=check it's simple alpha string (recommended for keys)\n *                               'san_alpha'=Use filter_var with FILTER_SANITIZE_STRING (do not use this for free text string)\n *                               'nohtml'=check there is no html content and no \" and no ../\n *                               'restricthtml'=check html content is restricted to some tags only\n *                               'custom'= custom filter specify $filter and $options)\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @param\tstring\t$noreplace\t Force disable of replacement of __xxx__ strings.\n *  @return string|array         Value found (string or array), or '' if check fails\n */\nfunction GETPOST($paramname, $check = 'alphanohtml', $method = 0, $filter = null, $options = null, $noreplace = 0)\n{\n\tglobal $mysoc, $user, $conf;\n\n\tif (empty($paramname)) {\n\t\treturn 'BadFirstParameterForGETPOST';\n\t}\n\tif (empty($check)) {\n\t\tdol_syslog(\"Deprecated use of GETPOST, called with 1st param = \".$paramname.\" and 2nd param is '', when calling page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t// Enable this line to know who call the GETPOST with '' $check parameter.\n\t\t//var_dump(debug_backtrace()[0]);\n\t}\n\n\tif (empty($method)) {\n\t\t$out = isset($_GET[$paramname]) ? $_GET[$paramname] : (isset($_POST[$paramname]) ? $_POST[$paramname] : '');\n\t} elseif ($method == 1) {\n\t\t$out = isset($_GET[$paramname]) ? $_GET[$paramname] : '';\n\t} elseif ($method == 2) {\n\t\t$out = isset($_POST[$paramname]) ? $_POST[$paramname] : '';\n\t} elseif ($method == 3) {\n\t\t$out = isset($_POST[$paramname]) ? $_POST[$paramname] : (isset($_GET[$paramname]) ? $_GET[$paramname] : '');\n\t} else {\n\t\treturn 'BadThirdParameterForGETPOST';\n\t}\n\n\tif (empty($method) || $method == 3 || $method == 4) {\n\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t// Clean $relativepathstring\n\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t}\n\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t//var_dump($relativepathstring);\n\t\t//var_dump($user->default_values);\n\n\t\t// Code for search criteria persistence.\n\t\t// Retrieve values if restore_lastsearch_values\n\t\tif (!empty($_GET['restore_lastsearch_values'])) {        // Use $_GET here and not GETPOST\n\t\t\tif (!empty($_SESSION['lastsearch_values_'.$relativepathstring])) {\t// If there is saved values\n\t\t\t\t$tmp = json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t\t\t\tif (is_array($tmp)) {\n\t\t\t\t\tforeach ($tmp as $key => $val) {\n\t\t\t\t\t\tif ($key == $paramname) {\t// We are on the requested parameter\n\t\t\t\t\t\t\t$out = $val;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If there is saved contextpage, page or limit\n\t\t\tif ($paramname == 'contextpage' && !empty($_SESSION['lastsearch_contextpage_'.$relativepathstring])) {\n\t\t\t\t$out = $_SESSION['lastsearch_contextpage_'.$relativepathstring];\n\t\t\t} elseif ($paramname == 'page' && !empty($_SESSION['lastsearch_page_'.$relativepathstring])) {\n\t\t\t\t$out = $_SESSION['lastsearch_page_'.$relativepathstring];\n\t\t\t} elseif ($paramname == 'limit' && !empty($_SESSION['lastsearch_limit_'.$relativepathstring])) {\n\t\t\t\t$out = $_SESSION['lastsearch_limit_'.$relativepathstring];\n\t\t\t}\n\t\t} elseif (!isset($_GET['sortfield'])) {\n\t\t\t// Else, retrieve default values if we are not doing a sort\n\t\t\t// If we did a click on a field to sort, we do no apply default values. Same if option MAIN_ENABLE_DEFAULT_VALUES is not set\n\t\t\tif (!empty($_GET['action']) && $_GET['action'] == 'create' && !isset($_GET[$paramname]) && !isset($_POST[$paramname])) {\n\t\t\t\t// Search default value from $object->field\n\t\t\t\tglobal $object;\n\t\t\t\tif (is_object($object) && isset($object->fields[$paramname]['default'])) {\n\t\t\t\t\t$out = $object->fields[$paramname]['default'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_ENABLE_DEFAULT_VALUES)) {\n\t\t\t\tif (!empty($_GET['action']) && (preg_match('/^create/', $_GET['action']) || preg_match('/^presend/', $_GET['action'])) && !isset($_GET[$paramname]) && !isset($_POST[$paramname])) {\n\t\t\t\t\t// Now search in setup to overwrite default values\n\t\t\t\t\tif (!empty($user->default_values)) {\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform'])) {\n\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['createform'] as $defkey => $defval) {\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t\t\tif (!in_array($tmpquerytohave, $tmpqueryarraywehave)) {\n\t\t\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform'][$defkey][$paramname])) {\n\t\t\t\t\t\t\t\t\t\t$out = $user->default_values[$relativepathstring]['createform'][$defkey][$paramname];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (!empty($paramname) && !isset($_GET[$paramname]) && !isset($_POST[$paramname])) {\n\t\t\t\t\t// Management of default search_filters and sort order\n\t\t\t\t\tif (!empty($user->default_values)) {\n\t\t\t\t\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t\t//var_dump($user->default_values[$relativepathstring]);\n\t\t\t\t\t\tif ($paramname == 'sortfield' || $paramname == 'sortorder') {\n\t\t\t\t\t\t\t// Sorted on which fields ? ASC or DESC ?\n\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['sortorder'])) {\n\t\t\t\t\t\t\t\t// Even if paramname is sortfield, data are stored into ['sortorder...']\n\t\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['sortorder'] as $defkey => $defval) {\n\t\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t\t\t\tif (!in_array($tmpquerytohave, $tmpqueryarraywehave)) {\n\t\t\t\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \";\", \"=\"); // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['sortorder'][$defkey] as $key => $val) {\n\t\t\t\t\t\t\t\t\t\t\tif ($out) {\n\t\t\t\t\t\t\t\t\t\t\t\t$out .= ', ';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortfield') {\n\t\t\t\t\t\t\t\t\t\t\t\t$out .= dol_string_nospecial($key, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortorder') {\n\t\t\t\t\t\t\t\t\t\t\t\t$out .= dol_string_nospecial($val, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//break;\t// No break for sortfield and sortorder so we can cumulate fields (is it realy usefull ?)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} elseif (isset($user->default_values[$relativepathstring]['filters'])) {\n\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['filters'] as $defkey => $defval) {\t// $defkey is a querystring like 'a=b&c=d', $defval is key of user\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t\t\tif (!in_array($tmpquerytohave, $tmpqueryarraywehave)) {\n\t\t\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\t\t\t// We must keep $_POST and $_GET here\n\t\t\t\t\t\t\t\t\tif (isset($_POST['sall']) || isset($_POST['search_all']) || isset($_GET['sall']) || isset($_GET['search_all'])) {\n\t\t\t\t\t\t\t\t\t\t// We made a search from quick search menu, do we still use default filter ?\n\t\t\t\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_DEFAULT_FILTER_FOR_QUICK_SEARCH)) {\n\t\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \";\", \"=\"); // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \";\", \"=\"); // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Substitution variables for GETPOST (used to get final url with variable parameters or final default value with variable parameters)\n\t// Example of variables: __DAY__, __MONTH__, __YEAR__, __MYCOMPANY_COUNTRY_ID__, __USER_ID__, ...\n\t// We do this only if var is a GET. If it is a POST, may be we want to post the text with vars as the setup text.\n\tif (!is_array($out) && empty($_POST[$paramname]) && empty($noreplace)) {\n\t\t$reg = array();\n\t\t$maxloop = 20;\n\t\t$loopnb = 0; // Protection against infinite loop\n\t\twhile (preg_match('/__([A-Z0-9]+_?[A-Z0-9]+)__/i', $out, $reg) && ($loopnb < $maxloop)) {    // Detect '__ABCDEF__' as key 'ABCDEF' and '__ABC_DEF__' as key 'ABC_DEF'. Detection is also correct when 2 vars are side by side.\n\t\t\t$loopnb++;\n\t\t\t$newout = '';\n\n\t\t\tif ($reg[1] == 'DAY') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = $tmp['mday'];\n\t\t\t} elseif ($reg[1] == 'MONTH') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = $tmp['mon'];\n\t\t\t} elseif ($reg[1] == 'YEAR') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = $tmp['year'];\n\t\t\t} elseif ($reg[1] == 'PREVIOUS_DAY') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['day'];\n\t\t\t} elseif ($reg[1] == 'PREVIOUS_MONTH') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_prev_month($tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['month'];\n\t\t\t} elseif ($reg[1] == 'PREVIOUS_YEAR') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = ($tmp['year'] - 1);\n\t\t\t} elseif ($reg[1] == 'NEXT_DAY') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['day'];\n\t\t\t} elseif ($reg[1] == 'NEXT_MONTH') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_next_month($tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['month'];\n\t\t\t} elseif ($reg[1] == 'NEXT_YEAR') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = ($tmp['year'] + 1);\n\t\t\t} elseif ($reg[1] == 'MYCOMPANY_COUNTRY_ID' || $reg[1] == 'MYCOUNTRY_ID' || $reg[1] == 'MYCOUNTRYID') {\n\t\t\t\t$newout = $mysoc->country_id;\n\t\t\t} elseif ($reg[1] == 'USER_ID' || $reg[1] == 'USERID') {\n\t\t\t\t$newout = $user->id;\n\t\t\t} elseif ($reg[1] == 'USER_SUPERVISOR_ID' || $reg[1] == 'SUPERVISOR_ID' || $reg[1] == 'SUPERVISORID') {\n\t\t\t\t$newout = $user->fk_user;\n\t\t\t} elseif ($reg[1] == 'ENTITY_ID' || $reg[1] == 'ENTITYID') {\n\t\t\t\t$newout = $conf->entity;\n\t\t\t} else {\n\t\t\t\t$newout = ''; // Key not found, we replace with empty string\n\t\t\t}\n\t\t\t//var_dump('__'.$reg[1].'__ -> '.$newout);\n\t\t\t$out = preg_replace('/__'.preg_quote($reg[1], '/').'__/', $newout, $out);\n\t\t}\n\t}\n\n\t// Check rule\n\tif (preg_match('/^array/', $check)) {\t// If 'array' or 'array:restricthtml' or 'array:aZ09'\n\t\tif (!is_array($out) || empty($out)) {\n\t\t\t$out = array();\n\t\t} else {\n\t\t\t$tmparray = explode(':', $check);\n\t\t\tif (!empty($tmparray[1])) {\n\t\t\t\t$tmpcheck = $tmparray[1];\n\t\t\t} else {\n\t\t\t\t$tmpcheck = 'alphanohtml';\n\t\t\t}\n\t\t\tforeach ($out as $outkey => $outval) {\n\t\t\t\t$out[$outkey] = checkVal($outval, $tmpcheck, $filter, $options);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$out = checkVal($out, $check, $filter, $options);\n\t}\n\n\t// Sanitizing for special parameters.\n\t// Note: There is no reason to allow the backtopage, backtolist or backtourl parameter to contains an external URL.\n\tif ($paramname == 'backtopage' || $paramname == 'backtolist' || $paramname == 'backtourl') {\n\t\t$out = str_replace('\\\\', '/', $out);\t\t\t\t\t// Can be before the loop because only 1 char is replaced. No risk to get it after other replacements.\n\t\t$out = str_replace(array(':', ';', '@'), '', $out);\t\t// Can be before the loop because only 1 char is replaced. No risk to get it after other replacements.\n\t\tdo {\n\t\t\t$oldstringtoclean = $out;\n\t\t\t$out = str_ireplace(array('javascript', 'vbscript', '&colon', '&#'), '', $out);\n\t\t} while ($oldstringtoclean != $out);\n\n\t\t$out = preg_replace(array('/^[a-z]*\\/\\/+/i'), '', $out);\t// We remove schema*// to remove external URL\n\t}\n\n\t// Code for search criteria persistence.\n\t// Save data into session if key start with 'search_' or is 'smonth', 'syear', 'month', 'year'\n\tif (empty($method) || $method == 3 || $method == 4) {\n\t\tif (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder', 'sortfield'))) {\n\t\t\t//var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n\n\t\t\t// We save search key only if $out not empty that means:\n\t\t\t// - posted value not empty, or\n\t\t\t// - if posted value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n\n\t\t\tif ($out != '') {\t\t// $out = '0' or 'abc', it is a search criteria to keep\n\t\t\t\t$user->lastsearch_values_tmp[$relativepathstring][$paramname] = $out;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['creatform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param  string  $paramname   Name of parameter to found\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @param\tstring\t$noreplace   Force disable of replacement of __xxx__ strings.\n *  @return int                  Value found (int)\n */\nfunction GETPOSTINT($paramname, $method = 0, $filter = null, $options = null, $noreplace = 0)\n{\n\treturn (int) GETPOST($paramname, 'int', $method, $filter, $options, $noreplace);\n}\n\n/**\n *  Return a value after checking on a rule. A sanitization may also have been done.\n *\n *  @param  string  $out\t     Value to check/clear.\n *  @param  string  $check\t     Type of check/sanitizing\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @return string|array         Value sanitized (string or array). It may be '' if format check fails.\n */\nfunction checkVal($out = '', $check = 'alphanohtml', $filter = null, $options = null)\n{\n\tglobal $conf;\n\n\t// Check is done after replacement\n\tswitch ($check) {\n\t\tcase 'none':\n\t\t\tbreak;\n\t\tcase 'int':    // Check param is a numeric value (integer but also float or hexadecimal)\n\t\t\tif (!is_numeric($out)) {\n\t\t\t\t$out = '';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'intcomma':\n\t\t\tif (preg_match('/[^0-9,-]+/i', $out)) {\n\t\t\t\t$out = '';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'san_alpha':\n\t\t\t$out = filter_var($out, FILTER_SANITIZE_STRING);\n\t\t\tbreak;\n\t\tcase 'email':\n\t\t\t$out = filter_var($out, FILTER_SANITIZE_EMAIL);\n\t\t\tbreak;\n\t\tcase 'aZ':\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tif (preg_match('/[^a-z]+/i', $out)) {\n\t\t\t\t\t$out = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'aZ09':\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tif (preg_match('/[^a-z0-9_\\-\\.]+/i', $out)) {\n\t\t\t\t\t$out = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'aZ09comma':\t\t// great to sanitize sortfield or sortorder params that can be t.abc,t.def_gh\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tif (preg_match('/[^a-z0-9_\\-\\.,]+/i', $out)) {\n\t\t\t\t\t$out = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'nohtml':\t\t// No html\n\t\t\t$out = dol_string_nohtmltag($out, 0);\n\t\t\tbreak;\n\t\tcase 'alpha':\t\t// No html and no ../ and \"\n\t\tcase 'alphanohtml':\t// Recommended for most scalar parameters and search parameters\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tdo {\n\t\t\t\t\t$oldstringtoclean = $out;\n\t\t\t\t\t// Remove html tags\n\t\t\t\t\t$out = dol_string_nohtmltag($out, 0);\n\t\t\t\t\t// Remove also other dangerous string sequences\n\t\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\t\t// Note &#38, '&#0000038', '&#x26'... is a simple char like '&' alone but there is no reason to accept such way to encode input data.\n\t\t\t\t\t$out = str_ireplace(array('&#38', '&#0000038', '&#x26', '&quot', '&#34', '&#0000034', '&#x22', '\"', '&#47', '&#0000047', '&#x2F', '../'), '', $out);\n\t\t\t\t} while ($oldstringtoclean != $out);\n\t\t\t\t// keep lines feed\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'alphawithlgt':\t\t// No \" and no ../ but we keep balanced < > tags with no special chars inside. Can be used for email string like \"Name <email>\"\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tdo {\n\t\t\t\t\t$oldstringtoclean = $out;\n\t\t\t\t\t// Remove html tags\n\t\t\t\t\t$out = dol_html_entity_decode($out, ENT_COMPAT | ENT_HTML5, 'UTF-8');\n\t\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\t\t// Note &#38, '&#0000038', '&#x26'... is a simple char like '&' alone but there is no reason to accept such way to encode input data.\n\t\t\t\t\t$out = str_ireplace(array('&#38', '&#0000038', '&#x26', '&quot', '&#34', '&#0000034', '&#x22', '\"', '&#47', '&#0000047', '&#x2F', '../'), '', $out);\n\t\t\t\t} while ($oldstringtoclean != $out);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'restricthtml':\t\t// Recommended for most html textarea\n\t\t\tdo {\n\t\t\t\t$oldstringtoclean = $out;\n\n\t\t\t\t// We replace chars encoded with numeric HTML entities with real char (to avoid to have numeric entities used for obfuscation of injections)\n\t\t\t\t$out = preg_replace_callback('/&#(x?[0-9][0-9a-f]+);/i', 'realCharForNumericEntities', $out);\n\t\t\t\t$out = preg_replace('/&#x?[0-9]+/i', '', $out);\t// For example if we have j&#x61vascript with an entities without the ; to hide the 'a' of 'javascript'.\n\n\t\t\t\t$out = dol_string_onlythesehtmltags($out, 0, 1, 1);\n\n\t\t\t\t// We should also exclude non expected attributes\n\t\t\t\tif (!empty($conf->global->MAIN_RESTRICTHTML_REMOVE_ALSO_BAD_ATTRIBUTES)) {\n\t\t\t\t\t$out = dol_string_onlythesehtmlattributes($out);\n\t\t\t\t}\n\t\t\t} while ($oldstringtoclean != $out);\n\t\t\tbreak;\n\t\tcase 'custom':\n\t\t\tif (empty($filter)) {\n\t\t\t\treturn 'BadFourthParameterForGETPOST';\n\t\t\t}\n\t\t\t$out = filter_var($out, $filter, $options);\n\t\t\tbreak;\n\t}\n\n\treturn $out;\n}\n\n\nif (!function_exists('dol_getprefix')) {\n\t/**\n\t *  Return a prefix to use for this Dolibarr instance, for session/cookie names or email id.\n\t *  The prefix is unique for instance and avoid conflict between multi-instances, even when having two instances with same root dir\n\t *  or two instances in same virtual servers.\n\t *\n\t *  @param  string  $mode                   '' (prefix for session name) or 'email' (prefix for email id)\n\t *  @return\tstring                          A calculated prefix\n\t */\n\tfunction dol_getprefix($mode = '')\n\t{\n\t\t// If prefix is for email (we need to have $conf alreayd loaded for this case)\n\t\tif ($mode == 'email') {\n\t\t\tglobal $conf;\n\n\t\t\tif (!empty($conf->global->MAIL_PREFIX_FOR_EMAIL_ID)) {\t// If MAIL_PREFIX_FOR_EMAIL_ID is set (a value initialized with a random value is recommended)\n\t\t\t\tif ($conf->global->MAIL_PREFIX_FOR_EMAIL_ID != 'SERVER_NAME') {\n\t\t\t\t\treturn $conf->global->MAIL_PREFIX_FOR_EMAIL_ID;\n\t\t\t\t} elseif (isset($_SERVER[\"SERVER_NAME\"])) {\n\t\t\t\t\treturn $_SERVER[\"SERVER_NAME\"];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The recommended value (may be not defined for old versions)\n\t\t\tif (!empty($conf->file->instance_unique_id)) {\n\t\t\t\treturn $conf->file->instance_unique_id;\n\t\t\t}\n\n\t\t\t// For backward compatibility\n\t\t\treturn dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT, '3');\n\t\t}\n\n\t\t// If prefix is for session (no need to have $conf loaded)\n\t\tglobal $dolibarr_main_instance_unique_id, $dolibarr_main_cookie_cryptkey;\t// This is loaded by filefunc.inc.php\n\t\t$tmp_instance_unique_id = empty($dolibarr_main_instance_unique_id) ? (empty($dolibarr_main_cookie_cryptkey) ? '' : $dolibarr_main_cookie_cryptkey) : $dolibarr_main_instance_unique_id; // Unique id of instance\n\n\t\t// The recommended value (may be not defined for old versions)\n\t\tif (!empty($tmp_instance_unique_id)) {\n\t\t\treturn $tmp_instance_unique_id;\n\t\t}\n\n\t\t// For backward compatibility\n\t\tif (isset($_SERVER[\"SERVER_NAME\"]) && isset($_SERVER[\"DOCUMENT_ROOT\"])) {\n\t\t\treturn dol_hash($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT, '3');\n\t\t}\n\n\t\treturn dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT, '3');\n\t}\n}\n\n/**\n *\tMake an include_once using default root and alternate root if it fails.\n *  To link to a core file, use include(DOL_DOCUMENT_ROOT.'/pathtofile')\n *  To link to a module file from a module file, use include './mymodulefile';\n *  To link to a module file from a core file, then this function can be used (call by hook / trigger / speciales pages)\n *\n * \t@param\tstring\t$relpath\tRelative path to file (Ie: mydir/myfile, ../myfile, ...)\n * \t@param\tstring\t$classname\tClass name (deprecated)\n *  @return bool                True if load is a success, False if it fails\n */\nfunction dol_include_once($relpath, $classname = '')\n{\n\tglobal $conf, $langs, $user, $mysoc; // Do not remove this. They must be defined for files we include. Other globals var must be retrieved with $GLOBALS['var']\n\n\t$fullpath = dol_buildpath($relpath);\n\n\tif (!file_exists($fullpath)) {\n\t\tdol_syslog('functions::dol_include_once Tried to load unexisting file: '.$relpath, LOG_WARNING);\n\t\treturn false;\n\t}\n\n\tif (!empty($classname) && !class_exists($classname)) {\n\t\treturn include $fullpath;\n\t} else {\n\t\treturn include_once $fullpath;\n\t}\n}\n\n\n/**\n *\tReturn path of url or filesystem. Can check into alternate dir or alternate dir + main dir depending on value of $returnemptyifnotfound.\n *\n * \t@param\tstring\t$path\t\t\t\t\t\tRelative path to file (if mode=0) or relative url (if mode=1). Ie: mydir/myfile, ../myfile\n *  @param\tint\t\t$type\t\t\t\t\t\t0=Used for a Filesystem path, 1=Used for an URL path (output relative), 2=Used for an URL path (output full path using same host that current url), 3=Used for an URL path (output full path using host defined into $dolibarr_main_url_root of conf file)\n *  @param\tint\t\t$returnemptyifnotfound\t\t0:If $type==0 and if file was not found into alternate dir, return default path into main dir (no test on it)\n *  \t\t\t\t\t\t\t\t\t\t\t1:If $type==0 and if file was not found into alternate dir, return empty string\n *  \t\t\t\t\t\t\t\t\t\t\t2:If $type==0 and if file was not found into alternate dir, test into main dir, return default path if found, empty string if not found\n *  @return string\t\t\t\t\t\t\t\tFull filesystem path (if path=0) or '' if file not found, Full url path (if mode=1)\n */\nfunction dol_buildpath($path, $type = 0, $returnemptyifnotfound = 0)\n{\n\tglobal $conf;\n\n\t$path = preg_replace('/^\\//', '', $path);\n\n\tif (empty($type)) {\t// For a filesystem path\n\t\t$res = DOL_DOCUMENT_ROOT.'/'.$path; // Standard default path\n\t\tif (is_array($conf->file->dol_document_root)) {\n\t\t\tforeach ($conf->file->dol_document_root as $key => $dirroot) {\t// ex: array(\"main\"=>\"/home/main/htdocs\", \"alt0\"=>\"/home/dirmod/htdocs\", ...)\n\t\t\t\tif ($key == 'main') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (file_exists($dirroot.'/'.$path)) {\n\t\t\t\t\t$res = $dirroot.'/'.$path;\n\t\t\t\t\treturn $res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($returnemptyifnotfound) {\n\t\t\t// Not found into alternate dir\n\t\t\tif ($returnemptyifnotfound == 1 || !file_exists($res)) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// For an url path\n\t\t// We try to get local path of file on filesystem from url\n\t\t// Note that trying to know if a file on disk exist by forging path on disk from url\n\t\t// works only for some web server and some setup. This is bugged when\n\t\t// using proxy, rewriting, virtual path, etc...\n\t\t$res = '';\n\t\tif ($type == 1) {\n\t\t\t$res = DOL_URL_ROOT.'/'.$path; // Standard value\n\t\t}\n\t\tif ($type == 2) {\n\t\t\t$res = DOL_MAIN_URL_ROOT.'/'.$path; // Standard value\n\t\t}\n\t\tif ($type == 3) {\n\t\t\t$res = DOL_URL_ROOT.'/'.$path;\n\t\t}\n\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot) {\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t\tif ($key == 'main') {\n\t\t\t\tif ($type == 3) {\n\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t$urlwithouturlroot = preg_replace('/'.preg_quote(DOL_URL_ROOT, '/').'$/i', '', trim($dolibarr_main_url_root));\n\t\t\t\t\t$urlwithroot = $urlwithouturlroot.DOL_URL_ROOT; // This is to use external domain name found into config file\n\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : $urlwithroot).'/'.$path; // Test on start with http is for old conf syntax\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreg_match('/^([^\\?]+(\\.css\\.php|\\.css|\\.js\\.php|\\.js|\\.png|\\.jpg|\\.php)?)/i', $path, $regs); // Take part before '?'\n\t\t\tif (!empty($regs[1])) {\n\t\t\t\t//print $key.'-'.$dirroot.'/'.$path.'-'.$conf->file->dol_url_root[$type].'<br>'.\"\\n\";\n\t\t\t\tif (file_exists($dirroot.'/'.$regs[1])) {\n\t\t\t\t\tif ($type == 1) {\n\t\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : DOL_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 2) {\n\t\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : DOL_MAIN_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 3) {\n\t\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t\t$urlwithouturlroot = preg_replace('/'.preg_quote(DOL_URL_ROOT, '/').'$/i', '', trim($dolibarr_main_url_root));\n\t\t\t\t\t\t$urlwithroot = $urlwithouturlroot.DOL_URL_ROOT; // This is to use external domain name found into config file\n\t\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : $urlwithroot).$conf->file->dol_url_root[$key].'/'.$path; // Test on start with http is for old conf syntax\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $res;\n}\n\n/**\n *\tCreate a clone of instance of object (new instance with same value for properties)\n *  With native = 0: Property that are reference are also new object (full isolation clone). This means $this->db of new object is not valid.\n *  With native = 1: Use PHP clone. Property that are reference are same pointer. This means $this->db of new object is still valid but point to same this->db than original object.\n *\n * \t@param\tobject\t$object\t\tObject to clone\n *  @param\tint\t\t$native\t\t0=Full isolation method, 1=Native PHP method\n *\t@return object\t\t\t\tClone object\n *  @see https://php.net/manual/language.oop5.cloning.php\n */\nfunction dol_clone($object, $native = 0)\n{\n\tif (empty($native)) {\n\t\t$myclone = unserialize(serialize($object));\n\t} else {\n\t\t$myclone = clone $object; // PHP clone is a shallow copy only, not a real clone, so properties of references will keep the reference (refering to the same target/variable)\n\t}\n\n\treturn $myclone;\n}\n\n/**\n *\tOptimize a size for some browsers (phone, smarphone, ...)\n *\n * \t@param\tint\t\t$size\t\tSize we want\n * \t@param\tstring\t$type\t\tType of optimizing:\n * \t\t\t\t\t\t\t\t'' = function used to define a size for truncation\n * \t\t\t\t\t\t\t\t'width' = function is used to define a width\n *\t@return int\t\t\t\t\tNew size after optimizing\n */\nfunction dol_size($size, $type = '')\n{\n\tglobal $conf;\n\tif (empty($conf->dol_optimize_smallscreen)) {\n\t\treturn $size;\n\t}\n\tif ($type == 'width' && $size > 250) {\n\t\treturn 250;\n\t} else {\n\t\treturn 10;\n\t}\n}\n\n\n/**\n *\tClean a string to use it as a file name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial(), dol_string_unaccent(), dol_sanitizePathName()\n */\nfunction dol_sanitizeFileName($str, $newstr = '_', $unaccent = 1)\n{\n\t// List of special chars for filenames in windows are defined on page https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file\n\t// Char '>' '<' '|' '$' and ';' are special chars for shells.\n\t// Char '/' and '\\' are file delimiters.\n\t// -- car can be used into filename to inject special paramaters like --use-compress-program to make command with file as parameter making remote execution of command\n\t$filesystem_forbidden_chars = array('<', '>', '/', '\\\\', '?', '*', '|', '\"', ':', '\u00b0', '$', ';', '--');\n\treturn dol_string_nospecial($unaccent ? dol_string_unaccent($str) : $str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string to use it as a path name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial(), dol_string_unaccent(), dol_sanitizeFileName()\n */\nfunction dol_sanitizePathName($str, $newstr = '_', $unaccent = 1)\n{\n\t$filesystem_forbidden_chars = array('<', '>', '?', '*', '|', '\"', '\u00b0');\n\treturn dol_string_nospecial($unaccent ? dol_string_unaccent($str) : $str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *  Clean a string to use it as an URL (into a href or src attribute)\n *\n *  @param      string\t\t$stringtoclean\t\tString to clean\n *  @param\t\tint\t\t\t$type\t\t\t\t0=Accept all Url, 1=Clean external Url (keep only relative Url)\n *  @return     string     \t\t \t\t\t\tEscaped string.\n */\nfunction dol_sanitizeUrl($stringtoclean, $type = 1)\n{\n\t// We clean string because some hacks try to obfuscate evil strings by inserting non printable chars. Example: 'java(ascci09)scr(ascii00)ipt' is processed like 'javascript' (whatever is place of evil ascii char)\n\t// We should use dol_string_nounprintableascii but function may not be yet loaded/available\n\t$stringtoclean = preg_replace('/[\\x00-\\x1F\\x7F]/u', '', $stringtoclean); // /u operator makes UTF8 valid characters being ignored so are not included into the replace\n\t// We clean html comments because some hacks try to obfuscate evil strings by inserting HTML comments. Example: on<!-- -->error=alert(1)\n\t$stringtoclean = preg_replace('/<!--[^>]*-->/', '', $stringtoclean);\n\n\t$stringtoclean = str_replace('\\\\', '/', $stringtoclean);\n\tif ($type == 1) {\n\t\t// removing : should disable links to external url like http:aaa)\n\t\t// removing ';' should disable \"named\" html entities encode into an url (we should not have this into an url)\n\t\t$stringtoclean = str_replace(array(':', ';', '@'), '', $stringtoclean);\n\t}\n\n\tdo {\n\t\t$oldstringtoclean = $stringtoclean;\n\t\t// removing '&colon' should disable links to external url like http:aaa)\n\t\t// removing '&#' should disable \"numeric\" html entities encode into an url (we should not have this into an url)\n\t\t$stringtoclean = str_ireplace(array('javascript', 'vbscript', '&colon', '&#'), '', $stringtoclean);\n\t} while ($oldstringtoclean != $stringtoclean);\n\n\tif ($type == 1) {\n\t\t// removing '//' should disable links to external url like //aaa or http//)\n\t\t$stringtoclean = preg_replace(array('/^[a-z]*\\/\\/+/i'), '', $stringtoclean);\n\t}\n\n\treturn $stringtoclean;\n}\n\n/**\n *\tClean a string from all accent characters to be used as ref, login or by dol_sanitizeFileName\n *\n *\t@param\tstring\t$str\t\t\tString to clean\n *\t@return string   \t       \t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename(), dol_string_nospecial()\n */\nfunction dol_string_unaccent($str)\n{\n\tif (utf8_check($str)) {\n\t\t// See http://www.utf8-chartable.de/\n\t\t$string = rawurlencode($str);\n\t\t$replacements = array(\n\t\t'%C3%80' => 'A', '%C3%81' => 'A', '%C3%82' => 'A', '%C3%83' => 'A', '%C3%84' => 'A', '%C3%85' => 'A',\n\t\t'%C3%88' => 'E', '%C3%89' => 'E', '%C3%8A' => 'E', '%C3%8B' => 'E',\n\t\t'%C3%8C' => 'I', '%C3%8D' => 'I', '%C3%8E' => 'I', '%C3%8F' => 'I',\n\t\t'%C3%92' => 'O', '%C3%93' => 'O', '%C3%94' => 'O', '%C3%95' => 'O', '%C3%96' => 'O',\n\t\t'%C3%99' => 'U', '%C3%9A' => 'U', '%C3%9B' => 'U', '%C3%9C' => 'U',\n\t\t'%C3%A0' => 'a', '%C3%A1' => 'a', '%C3%A2' => 'a', '%C3%A3' => 'a', '%C3%A4' => 'a', '%C3%A5' => 'a',\n\t\t'%C3%A7' => 'c',\n\t\t'%C3%A8' => 'e', '%C3%A9' => 'e', '%C3%AA' => 'e', '%C3%AB' => 'e',\n\t\t'%C3%AC' => 'i', '%C3%AD' => 'i', '%C3%AE' => 'i', '%C3%AF' => 'i',\n\t\t'%C3%B1' => 'n',\n\t\t'%C3%B2' => 'o', '%C3%B3' => 'o', '%C3%B4' => 'o', '%C3%B5' => 'o', '%C3%B6' => 'o',\n\t\t'%C3%B9' => 'u', '%C3%BA' => 'u', '%C3%BB' => 'u', '%C3%BC' => 'u',\n\t\t'%C3%BF' => 'y'\n\t\t);\n\t\t$string = strtr($string, $replacements);\n\t\treturn rawurldecode($string);\n\t} else {\n\t\t// See http://www.ascii-code.com/\n\t\t$string = strtr(\n\t\t\t$str,\n\t\t\t\"\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC7\n\t\t\t\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\n\t\t\t\\xD2\\xD3\\xD4\\xD5\\xD8\\xD9\\xDA\\xDB\\xDD\n\t\t\t\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE7\\xE8\\xE9\\xEA\\xEB\n\t\t\t\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF8\n\t\t\t\\xF9\\xFA\\xFB\\xFC\\xFD\\xFF\",\n\t\t\t\"AAAAAAC\n\t\t\tEEEEIIIIDN\n\t\t\tOOOOOUUUY\n\t\t\taaaaaaceeee\n\t\t\tiiiidnooooo\n\t\t\tuuuuyy\"\n\t\t);\n\t\t$string = strtr($string, array(\"\\xC4\"=>\"Ae\", \"\\xC6\"=>\"AE\", \"\\xD6\"=>\"Oe\", \"\\xDC\"=>\"Ue\", \"\\xDE\"=>\"TH\", \"\\xDF\"=>\"ss\", \"\\xE4\"=>\"ae\", \"\\xE6\"=>\"ae\", \"\\xF6\"=>\"oe\", \"\\xFC\"=>\"ue\", \"\\xFE\"=>\"th\"));\n\t\treturn $string;\n\t}\n}\n\n/**\n *\tClean a string from all punctuation characters to use it as a ref or login.\n *  This is a more complete function than dol_sanitizeFileName.\n *\n *\t@param\tstring\t$str            \tString to clean\n * \t@param\tstring\t$newstr\t\t\t\tString to replace forbidden chars with\n *  @param  array\t$badcharstoreplace  List of forbidden characters\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename(), dol_string_unaccent(), dol_string_nounprintableascii()\n */\nfunction dol_string_nospecial($str, $newstr = '_', $badcharstoreplace = '')\n{\n\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \",\", \";\", \"=\", '\u00b0'); // more complete than dol_sanitizeFileName\n\t$forbidden_chars_to_remove = array();\n\tif (is_array($badcharstoreplace)) {\n\t\t$forbidden_chars_to_replace = $badcharstoreplace;\n\t}\n\t//$forbidden_chars_to_remove=array(\"(\",\")\");\n\n\treturn str_replace($forbidden_chars_to_replace, $newstr, str_replace($forbidden_chars_to_remove, \"\", $str));\n}\n\n\n/**\n *\tClean a string from all non printable ASCII chars (0x00-0x1F and 0x7F). It can also removes also Tab-CR-LF. UTF8 chars remains.\n *  This can be used to sanitize a string and view its real content. Some hacks try to obfuscate attacks by inserting non printable chars.\n *  Note, for information: UTF8 on 1 byte are: \\x00-\\7F\n *                                 2 bytes are: byte 1 \\xc0-\\xdf, byte 2 = \\x80-\\xbf\n *                                 3 bytes are: byte 1 \\xe0-\\xef, byte 2 = \\x80-\\xbf, byte 3 = \\x80-\\xbf\n *                                 4 bytes are: byte 1 \\xf0-\\xf7, byte 2 = \\x80-\\xbf, byte 3 = \\x80-\\xbf, byte 4 = \\x80-\\xbf\n *\t@param\tstring\t$str            \tString to clean\n *  @param\tint\t\t$removetabcrlf\t\tRemove also CR-LF\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename(), dol_string_unaccent(), dol_string_nospecial()\n */\nfunction dol_string_nounprintableascii($str, $removetabcrlf = 1)\n{\n\tif ($removetabcrlf) {\n\t\treturn preg_replace('/[\\x00-\\x1F\\x7F]/u', '', $str); // /u operator makes UTF8 valid characters being ignored so are not included into the replace\n\t} else {\n\t\treturn preg_replace('/[\\x00-\\x08\\x11-\\x12\\x14-\\x1F\\x7F]/u', '', $str); // /u operator should make UTF8 valid characters being ignored so are not included into the replace\n\t}\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t$mode\t\t\t\t0=Escape also ' and \" into ', 1=Escape ' but not \" for usage into 'string', 2=Escape \" but not ' for usage into \"string\", 3=Escape ' and \" with \\\n *  @param\t\tint\t\t$noescapebackslashn\t0=Escape also \\n. 1=Do not escape \\n.\n *  @return     string     \t\t \t\t\t\tEscaped string. Both ' and \" are escaped into ' if they are escaped.\n */\nfunction dol_escape_js($stringtoescape, $mode = 0, $noescapebackslashn = 0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$substitjs = array(\"&#039;\"=>\"\\\\'\", \"\\r\"=>'\\\\r');\n\t//$substitjs['</']='<\\/';\t// We removed this. Should be useless.\n\tif (empty($noescapebackslashn)) {\n\t\t$substitjs[\"\\n\"] = '\\\\n';\n\t\t$substitjs['\\\\'] = '\\\\\\\\';\n\t}\n\tif (empty($mode)) {\n\t\t$substitjs[\"'\"] = \"\\\\'\";\n\t\t$substitjs['\"'] = \"\\\\'\";\n\t} elseif ($mode == 1) {\n\t\t$substitjs[\"'\"] = \"\\\\'\";\n\t} elseif ($mode == 2) {\n\t\t$substitjs['\"'] = '\\\\\"';\n\t} elseif ($mode == 3) {\n\t\t$substitjs[\"'\"] = \"\\\\'\";\n\t\t$substitjs['\"'] = \"\\\\\\\"\";\n\t}\n\treturn strtr($stringtoescape, $substitjs);\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @return     string     \t\t \t\t\t\tEscaped string for json content.\n */\nfunction dol_escape_json($stringtoescape)\n{\n\treturn str_replace('\"', '\\\"', $stringtoescape);\n}\n\n/**\n *  Returns text escaped for inclusion in HTML alt or title tags, or into values of HTML input fields.\n *\n *  @param      string\t\t$stringtoescape\t\t\tString to escape\n *  @param\t\tint\t\t\t$keepb\t\t\t\t\t1=Keep b tags and escape them, 0=remove them\n *  @param      int         $keepn              \t1=Preserve \\r\\n strings (otherwise, replace them with escaped value). Set to 1 when escaping for a <textarea>.\n *  @param\t\tstring\t\t$keepmoretags\t\t\t'' or 'common' or list of tags\n *  @param\t\tint\t\t\t$escapeonlyhtmltags\t\t1=Escape only html tags, not the special chars like accents.\n *  @return     string     \t\t\t\t \t\t\tEscaped string\n *  @see\t\tdol_string_nohtmltag(), dol_string_nospecial(), dol_string_unaccent()\n */\nfunction dol_escape_htmltag($stringtoescape, $keepb = 0, $keepn = 0, $keepmoretags = '', $escapeonlyhtmltags = 0)\n{\n\tif ($keepmoretags == 'common') {\n\t\t$keepmoretags = 'html,body,a,b,em,i,u,ul,li,br,div,img,font,p,span,strong,table,tr,td,th,tbody';\n\t}\n\t// TODO Implement $keepmoretags\n\n\t// escape quotes and backslashes, newlines, etc.\n\tif ($escapeonlyhtmltags) {\n\t\t$tmp = htmlspecialchars_decode($stringtoescape, ENT_COMPAT);\n\t} else {\n\t\t$tmp = html_entity_decode($stringtoescape, ENT_COMPAT, 'UTF-8');\n\t}\n\tif (!$keepb) {\n\t\t$tmp = strtr($tmp, array(\"<b>\"=>'', '</b>'=>''));\n\t}\n\tif (!$keepn) {\n\t\t$tmp = strtr($tmp, array(\"\\r\"=>'\\\\r', \"\\n\"=>'\\\\n'));\n\t}\n\tif ($escapeonlyhtmltags) {\n\t\treturn htmlspecialchars($tmp, ENT_COMPAT, 'UTF-8');\n\t} else {\n\t\treturn htmlentities($tmp, ENT_COMPAT, 'UTF-8');\n\t}\n}\n\n/**\n * Convert a string to lower. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$string\t\t        String to encode\n * @param   string      $encoding           Character set encoding\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtolower($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_strtolower')) {\n\t\treturn mb_strtolower($string, $encoding);\n\t} else {\n\t\treturn strtolower($string);\n\t}\n}\n\n/**\n * Convert a string to upper. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$string\t\t        String to encode\n * @param   string      $encoding           Character set encoding\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtoupper($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_strtoupper')) {\n\t\treturn mb_strtoupper($string, $encoding);\n\t} else {\n\t\treturn strtoupper($string);\n\t}\n}\n\n/**\n * Convert first character of the first word of a string to upper. Never use ucfirst because it does not works with UTF8 strings.\n *\n * @param   string      $string         String to encode\n * @param   string      $encoding       Character set encodign\n * @return  string                      String converted\n */\nfunction dol_ucfirst($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_substr')) {\n\t\treturn mb_strtoupper(mb_substr($string, 0, 1, $encoding), $encoding).mb_substr($string, 1, null, $encoding);\n\t} else {\n\t\treturn ucfirst($string);\n\t}\n}\n\n/**\n * Convert first character of all the words of a string to upper. Never use ucfirst because it does not works with UTF8 strings.\n *\n * @param   string      $string         String to encode\n * @param   string      $encoding       Character set encodign\n * @return  string                      String converted\n */\nfunction dol_ucwords($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_convert_case')) {\n\t\treturn mb_convert_case($string, MB_CASE_TITLE, $encoding);\n\t} else {\n\t\treturn ucwords($string);\n\t}\n}\n\n/**\n *\tWrite log message into outputs. Possible outputs can be:\n *\tSYSLOG_HANDLERS = [\"mod_syslog_file\"]  \t\tfile name is then defined by SYSLOG_FILE\n *\tSYSLOG_HANDLERS = [\"mod_syslog_syslog\"]  \tfacility is then defined by SYSLOG_FACILITY\n *  Warning, syslog functions are bugged on Windows, generating memory protection faults. To solve\n *  this, use logging to files instead of syslog (see setup of module).\n *  Note: If constant 'SYSLOG_FILE_NO_ERROR' defined, we never output any error message when writing to log fails.\n *  Note: You can get log message into html sources by adding parameter &logtohtml=1 (constant MAIN_LOGTOHTML must be set)\n *  This function works only if syslog module is enabled.\n * \tThis must not use any call to other function calling dol_syslog (avoid infinite loop).\n *\n * \t@param  string\t\t$message\t\t\t\tLine to log. ''=Show nothing\n *  @param  int\t\t\t$level\t\t\t\t\tLog level\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Windows LOG_ERR=4, LOG_WARNING=5, LOG_NOTICE=LOG_INFO=6, LOG_DEBUG=6 si define_syslog_variables ou PHP 5.3+, 7 si dolibarr\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Linux   LOG_ERR=3, LOG_WARNING=4, LOG_NOTICE=5, LOG_INFO=6, LOG_DEBUG=7\n *  @param\tint\t\t\t$ident\t\t\t\t\t1=Increase ident of 1, -1=Decrease ident of 1\n *  @param\tstring\t\t$suffixinfilename\t\tWhen output is a file, append this suffix into default log filename.\n *  @param\tstring\t\t$restricttologhandler\tForce output of log only to this log handler\n *  @param\tarray|null\t$logcontext\t\t\t\tIf defined, an array with extra informations (can be used by some log handlers)\n *  @return\tvoid\n */\nfunction dol_syslog($message, $level = LOG_INFO, $ident = 0, $suffixinfilename = '', $restricttologhandler = '', $logcontext = null)\n{\n\tglobal $conf, $user, $debugbar;\n\n\t// If syslog module enabled\n\tif (empty($conf->syslog->enabled)) {\n\t\treturn;\n\t}\n\n\t// Check if we are into execution of code of a website\n\tif (defined('USEEXTERNALSERVER') && !defined('USEDOLIBARRSERVER') && !defined('USEDOLIBARREDITOR')) {\n\t\tglobal $website, $websitekey;\n\t\tif (is_object($website) && !empty($website->ref)) {\n\t\t\t$suffixinfilename .= '_website_'.$website->ref;\n\t\t} elseif (!empty($websitekey)) {\n\t\t\t$suffixinfilename .= '_website_'.$websitekey;\n\t\t}\n\t}\n\n\tif ($ident < 0) {\n\t\tforeach ($conf->loghandlers as $loghandlerinstance) {\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n\n\tif (!empty($message)) {\n\t\t// Test log level\n\t\t$logLevels = array(LOG_EMERG=>'EMERG', LOG_ALERT=>'ALERT', LOG_CRIT=>'CRITICAL', LOG_ERR=>'ERR', LOG_WARNING=>'WARN', LOG_NOTICE=>'NOTICE', LOG_INFO=>'INFO', LOG_DEBUG=>'DEBUG');\n\t\tif (!array_key_exists($level, $logLevels)) {\n\t\t\tthrow new Exception('Incorrect log level');\n\t\t}\n\t\tif ($level > $conf->global->SYSLOG_LEVEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_SHOW_PASSWORD_INTO_LOG)) {\n\t\t\t$message = preg_replace('/password=\\'[^\\']*\\'/', 'password=\\'hidden\\'', $message); // protection to avoid to have value of password in log\n\t\t}\n\n\t\t// If adding log inside HTML page is required\n\t\tif ((!empty($_REQUEST['logtohtml']) && !empty($conf->global->MAIN_ENABLE_LOG_TO_HTML))\n\t\t\t|| (!empty($user->rights->debugbar->read) && is_object($debugbar))) {\n\t\t\t$conf->logbuffer[] = dol_print_date(time(), \"%Y-%m-%d %H:%M:%S\").\" \".$logLevels[$level].\" \".$message;\n\t\t}\n\n\t\t//TODO: Remove this. MAIN_ENABLE_LOG_INLINE_HTML should be deprecated and use a log handler dedicated to HTML output\n\t\t// If html log tag enabled and url parameter log defined, we show output log on HTML comments\n\t\tif (!empty($conf->global->MAIN_ENABLE_LOG_INLINE_HTML) && !empty($_GET[\"log\"])) {\n\t\t\tprint \"\\n\\n<!-- Log start\\n\";\n\t\t\tprint dol_escape_htmltag($message).\"\\n\";\n\t\t\tprint \"Log end -->\\n\";\n\t\t}\n\n\t\t$data = array(\n\t\t\t'message' => $message,\n\t\t\t'script' => (isset($_SERVER['PHP_SELF']) ? basename($_SERVER['PHP_SELF'], '.php') : false),\n\t\t\t'level' => $level,\n\t\t\t'user' => ((is_object($user) && $user->id) ? $user->login : false),\n\t\t\t'ip' => false\n\t\t);\n\n\t\t$remoteip = getUserRemoteIP(); // Get ip when page run on a web server\n\t\tif (!empty($remoteip)) {\n\t\t\t$data['ip'] = $remoteip;\n\t\t\t// This is when server run behind a reverse proxy\n\t\t\tif (!empty($_SERVER['HTTP_X_FORWARDED_FOR']) && $_SERVER['HTTP_X_FORWARDED_FOR'] != $remoteip) {\n\t\t\t\t$data['ip'] = $_SERVER['HTTP_X_FORWARDED_FOR'].' -> '.$data['ip'];\n\t\t\t} elseif (!empty($_SERVER['HTTP_CLIENT_IP']) && $_SERVER['HTTP_CLIENT_IP'] != $remoteip) {\n\t\t\t\t$data['ip'] = $_SERVER['HTTP_CLIENT_IP'].' -> '.$data['ip'];\n\t\t\t}\n\t\t} elseif (!empty($_SERVER['SERVER_ADDR'])) {\n\t\t\t// This is when PHP session is ran inside a web server but not inside a client request (example: init code of apache)\n\t\t\t$data['ip'] = $_SERVER['SERVER_ADDR'];\n\t\t} elseif (!empty($_SERVER['COMPUTERNAME'])) {\n\t\t\t// This is when PHP session is ran outside a web server, like from Windows command line (Not always defined, but useful if OS defined it).\n\t\t\t$data['ip'] = $_SERVER['COMPUTERNAME'].(empty($_SERVER['USERNAME']) ? '' : '@'.$_SERVER['USERNAME']);\n\t\t} elseif (!empty($_SERVER['LOGNAME'])) {\n\t\t\t// This is when PHP session is ran outside a web server, like from Linux command line (Not always defined, but usefull if OS defined it).\n\t\t\t$data['ip'] = '???@'.$_SERVER['LOGNAME'];\n\t\t}\n\t\t// Loop on each log handler and send output\n\t\tforeach ($conf->loghandlers as $loghandlerinstance) {\n\t\t\tif ($restricttologhandler && $loghandlerinstance->code != $restricttologhandler) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$loghandlerinstance->export($data, $suffixinfilename);\n\t\t}\n\t\tunset($data);\n\t}\n\n\tif ($ident > 0) {\n\t\tforeach ($conf->loghandlers as $loghandlerinstance) {\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n}\n\n/**\n *\tReturn HTML code to output a button to open a dialog popup box.\n *  Such buttons must be included inside a HTML form.\n *\n *\t@param\tstring\t$name\t\t\t\tA name for the html component\n *\t@param\tstring\t$label \t    \t\tLabel of button\n *\t@param  string\t$buttonstring  \t\tbutton string\n *\t@param  string\t$url\t\t\t\tUrl to open\n *  @param\tstring\t$disabled\t\t\tDisabled text\n * \t@return\tstring\t\t\t\t\t\tHTML component with button\n */\nfunction dolButtonToOpenUrlInDialogPopup($name, $label, $buttonstring, $url, $disabled = '')\n{\n\tif (strpos($url, '?') > 0) {\n\t\t$url .= '&dol_hide_topmenu=1&dol_hide_leftmenu=1&dol_openinpopup=1';\n\t} else {\n\t\t$url .= '?dol_hide_menuinpopup=1&dol_hide_leftmenu=1&dol_openinpopup=1';\n\t}\n\n\t//print '<input type=\"submit\" class=\"button bordertransp\"'.$disabled.' value=\"'.dol_escape_htmltag($langs->trans(\"MediaFiles\")).'\" name=\"file_manager\">';\n\t$out = '<a class=\"button bordertransp button_'.$name.'\"'.$disabled.' title=\"'.dol_escape_htmltag($label).'\">'.$buttonstring.'</a>';\n\t$out .= '<!-- Add js code to open dialog popup on dialog -->';\n\t$out .= '<script language=\"javascript\">\n\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\tjQuery(\".button_'.$name.'\").click(function () {\n\t\t\t\t\t\tconsole.log(\"Open popup with jQuery(...).dialog() on URL '.dol_escape_js(DOL_URL_ROOT.$url).'\")\n\t\t\t\t\t\tvar $dialog = $(\\'<div></div>\\').html(\\'<iframe class=\"iframedialog\" style=\"border: 0px;\" src=\"'.DOL_URL_ROOT.$url.'\" width=\"100%\" height=\"98%\"></iframe>\\')\n\t\t\t\t\t\t\t.dialog({\n\t\t\t\t\t\t\t\tautoOpen: false,\n\t\t\t\t\t\t\t \tmodal: true,\n\t\t\t\t\t\t\t \theight: (window.innerHeight - 150),\n\t\t\t\t\t\t\t \twidth: \\'80%\\',\n\t\t\t\t\t\t\t \ttitle: \"'.dol_escape_js($label).'\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t$dialog.dialog(\\'open\\');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t</script>';\n\treturn $out;\n}\n\n/**\n *\tShow tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs. Currently initialized by calling a function xxx_admin_prepare_head\n *\t@param\tstring\t$active     \t\tActive tab name (document', 'info', 'ldap', ....)\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header (if you set this to 1, using print dol_get_fiche_end() to close tab is not required), -2=Add tab header with no seaparation under tab (to start a tab just after)\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n *  @param\tint\t\t$limittoshow\t\tLimit number of tabs to show. Use 0 to use automatic default value.\n *  @param\tstring\t$moretabssuffix\t\tA suffix to use when you have several dol_get_fiche_head() in same page\n * \t@return\tvoid\n *  @deprecated Use print dol_get_fiche_head() instead\n */\nfunction dol_fiche_head($links = array(), $active = '0', $title = '', $notab = 0, $picto = '', $pictoisfullpath = 0, $morehtmlright = '', $morecss = '', $limittoshow = 0, $moretabssuffix = '')\n{\n\tprint dol_get_fiche_head($links, $active, $title, $notab, $picto, $pictoisfullpath, $morehtmlright, $morecss, $limittoshow, $moretabssuffix);\n}\n\n/**\n *  Show tabs of a record\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs\n *\t@param\tstring\t$active     \t\tActive tab name\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header (if you set this to 1, using print dol_get_fiche_end() to close tab is not required), -2=Add tab header with no seaparation under tab (to start a tab just after)\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n *  @param\tint\t\t$limittoshow\t\tLimit number of tabs to show. Use 0 to use automatic default value.\n *  @param\tstring\t$moretabssuffix\t\tA suffix to use when you have several dol_get_fiche_head() in same page\n * \t@return\tstring\n */\nfunction dol_get_fiche_head($links = array(), $active = '', $title = '', $notab = 0, $picto = '', $pictoisfullpath = 0, $morehtmlright = '', $morecss = '', $limittoshow = 0, $moretabssuffix = '')\n{\n\tglobal $conf, $langs, $hookmanager;\n\n\t// Show title\n\t$showtitle = 1;\n\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t$showtitle = 0;\n\t}\n\n\t$out = \"\\n\".'<!-- dol_fiche_head - dol_get_fiche_head -->';\n\n\tif ((!empty($title) && $showtitle) || $morehtmlright || !empty($links)) {\n\t\t$out .= '<div class=\"tabs'.($picto ? '' : ' nopaddingleft').'\" data-role=\"controlgroup\" data-type=\"horizontal\">'.\"\\n\";\n\t}\n\n\t// Show right part\n\tif ($morehtmlright) {\n\t\t$out .= '<div class=\"inline-block floatright tabsElem\">'.$morehtmlright.'</div>'; // Output right area first so when space is missing, text is in front of tabs and not under.\n\t}\n\n\t// Show title\n\tif (!empty($title) && $showtitle && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t$limittitle = 30;\n\t\t$out .= '<a class=\"tabTitle\">';\n\t\tif ($picto) {\n\t\t\t$out .= img_picto($title, ($pictoisfullpath ? '' : 'object_').$picto, '', $pictoisfullpath, 0, 0, '', 'imgTabTitle').' ';\n\t\t}\n\t\t$out .= '<span class=\"tabTitleText\">'.dol_escape_htmltag(dol_trunc($title, $limittitle)).'</span>';\n\t\t$out .= '</a>';\n\t}\n\n\t// Show tabs\n\n\t// Define max of key (max may be higher than sizeof because of hole due to module disabling some tabs).\n\t$maxkey = -1;\n\tif (is_array($links) && !empty($links)) {\n\t\t$keys = array_keys($links);\n\t\tif (count($keys)) {\n\t\t\t$maxkey = max($keys);\n\t\t}\n\t}\n\n\t// Show tabs\n\t// if =0 we don't use the feature\n\tif (empty($limittoshow)) {\n\t\t$limittoshow = (empty($conf->global->MAIN_MAXTABS_IN_CARD) ? 99 : $conf->global->MAIN_MAXTABS_IN_CARD);\n\t}\n\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t$limittoshow = 2;\n\t}\n\n\t$displaytab = 0;\n\t$nbintab = 0;\n\t$popuptab = 0;\n\t$outmore = '';\n\tfor ($i = 0; $i <= $maxkey; $i++) {\n\t\tif ((is_numeric($active) && $i == $active) || (!empty($links[$i][2]) && !is_numeric($active) && $active == $links[$i][2])) {\n\t\t\t// If active tab is already present\n\t\t\tif ($i >= $limittoshow) {\n\t\t\t\t$limittoshow--;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor ($i = 0; $i <= $maxkey; $i++) {\n\t\tif ((is_numeric($active) && $i == $active) || (!empty($links[$i][2]) && !is_numeric($active) && $active == $links[$i][2])) {\n\t\t\t$isactive = true;\n\t\t} else {\n\t\t\t$isactive = false;\n\t\t}\n\n\t\tif ($i < $limittoshow || $isactive) {\n\t\t\t// Add a new entry\n\t\t\t$out .= '<div class=\"inline-block tabsElem'.($isactive ? ' tabsElemActive' : '').((!$isactive && !empty($conf->global->MAIN_HIDE_INACTIVETAB_ON_PRINT)) ? ' hideonprint' : '').'\"><!-- id tab = '.(empty($links[$i][2]) ? '' : $links[$i][2]).' -->';\n\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image') {\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$out .= '<a class=\"tabimage'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t} elseif (!empty($links[$i][1])) {\n\t\t\t\t//print \"x $i $active \".$links[$i][2].\" z\";\n\t\t\t\t$out .= '<div class=\"tab tab'.($isactive?'active':'unactive').'\" style=\"margin: 0 !important\">';\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$out .= '<a'.(!empty($links[$i][2]) ? ' id=\"'.$links[$i][2].'\"' : '').' class=\"tab inline-block'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t}\n\t\t\t\t$out .= $links[$i][1];\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$out .= '</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$out .= empty($links[$i][4]) ? '' : $links[$i][4];\n\t\t\t\t$out .= '</div>';\n\t\t\t}\n\n\t\t\t$out .= '</div>';\n\t\t} else {\n\t\t\t// The popup with the other tabs\n\t\t\tif (!$popuptab) {\n\t\t\t\t$popuptab = 1;\n\t\t\t\t$outmore .= '<div class=\"popuptabset wordwrap\">'; // The css used to hide/show popup\n\t\t\t}\n\t\t\t$outmore .= '<div class=\"popuptab wordwrap\" style=\"display:inherit;\">';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image') {\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$outmore .= '<a class=\"tabimage'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$outmore .= '<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t} elseif (!empty($links[$i][1])) {\n\t\t\t\t$outmore .= '<a'.(!empty($links[$i][2]) ? ' id=\"'.$links[$i][2].'\"' : '').' class=\"wordwrap inline-block'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t$outmore .= preg_replace('/([a-z])\\/([a-z])/i', '\\\\1 / \\\\2', $links[$i][1]); // Replace x/y with x / y to allow wrap on long composed texts.\n\t\t\t\t$outmore .= '</a>'.\"\\n\";\n\t\t\t}\n\t\t\t$outmore .= '</div>';\n\n\t\t\t$nbintab++;\n\t\t}\n\t\t$displaytab = $i;\n\t}\n\tif ($popuptab) {\n\t\t$outmore .= '</div>';\n\t}\n\n\tif ($popuptab) {\t// If there is some tabs not shown\n\t\t$left = ($langs->trans(\"DIRECTION\") == 'rtl' ? 'right' : 'left');\n\t\t$right = ($langs->trans(\"DIRECTION\") == 'rtl' ? 'left' : 'right');\n\t\t$widthofpopup = 200;\n\n\t\t$tabsname = $moretabssuffix;\n\t\tif (empty($tabsname)) {\n\t\t\t$tabsname = str_replace(\"@\", \"\", $picto);\n\t\t}\n\t\t$out .= '<div id=\"moretabs'.$tabsname.'\" class=\"inline-block tabsElem\">';\n\t\t$out .= '<a href=\"#\" class=\"tab moretab inline-block tabunactive\"><span class=\"hideonsmartphone\">'.$langs->trans(\"More\").'</span>... ('.$nbintab.')</a>'; // Do not use \"reposition\" class in the \"More\".\n\t\t$out .= '<div id=\"moretabsList'.$tabsname.'\" style=\"width: '.$widthofpopup.'px; position: absolute; '.$left.': -999em; text-align: '.$left.'; margin:0px; padding:2px; z-index:10;\">';\n\t\t$out .= $outmore;\n\t\t$out .= '</div>';\n\t\t$out .= '<div></div>';\n\t\t$out .= \"</div>\\n\";\n\n\t\t$out .= \"<script>\";\n\t\t$out .= \"$('#moretabs\".$tabsname.\"').mouseenter( function() {\n\t\t\tvar x = this.offsetLeft, y = this.offsetTop;\n\t\t\tconsole.log('mouseenter \".$left.\" x='+x+' y='+y+' window.innerWidth='+window.innerWidth);\n\t\t\tif ((window.innerWidth - x) < \".($widthofpopup + 10).\") {\n\t\t\t\t$('#moretabsList\".$tabsname.\"').css('\".$right.\"','8px');\n\t\t\t}\n\t\t\t$('#moretabsList\".$tabsname.\"').css('\".$left.\"','auto');\n\t\t\t});\n\t\t\";\n\t\t$out .= \"$('#moretabs\".$tabsname.\"').mouseleave( function() { console.log('mouseleave \".$left.\"'); $('#moretabsList\".$tabsname.\"').css('\".$left.\"','-999em');});\";\n\t\t$out .= \"</script>\";\n\t}\n\n\tif ((!empty($title) && $showtitle) || $morehtmlright || !empty($links)) {\n\t\t$out .= \"</div>\\n\";\n\t}\n\n\tif (!$notab || $notab == -1 || $notab == -2) {\n\t\t$out .= \"\\n\".'<div class=\"tabBar'.($notab == -1 ? '' : ($notab == -2 ? ' tabBarNoTop' : ' tabBarWithBottom')).'\">'.\"\\n\";\n\t}\n\n\t$parameters = array('tabname' => $active, 'out' => $out);\n\t$reshook = $hookmanager->executeHooks('printTabsHead', $parameters); // This hook usage is called just before output the head of tabs. Take also a look at \"completeTabsHead\"\n\tif ($reshook > 0) {\n\t\t$out = $hookmanager->resPrint;\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Show tab footer of a card\n *\n *  @param\tint\t\t$notab       -1 or 0=Add tab footer, 1=no tab footer\n *  @return\tvoid\n *  @deprecated Use print dol_get_fiche_end() instead\n */\nfunction dol_fiche_end($notab = 0)\n{\n\tprint dol_get_fiche_end($notab);\n}\n\n/**\n *\tReturn tab footer of a card\n *\n *\t@param  int\t\t$notab\t\t-1 or 0=Add tab footer, 1=no tab footer\n *  @return\tstring\n */\nfunction dol_get_fiche_end($notab = 0)\n{\n\tif (!$notab || $notab == -1) {\n\t\treturn \"\\n</div>\\n\";\n\t} else {\n\t\treturn '';\n\t}\n}\n\n/**\n *  Show tab footer of a card.\n *  Note: $object->next_prev_filter can be set to restrict select to find next or previous record by $form->showrefnav.\n *\n *  @param\tObject\t$object\t\t\tObject to show\n *  @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link\n *  @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar\n *  @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1)\n *  @param\tstring\t$fieldid   \t\tNom du champ en base a utiliser pour select next et previous (we make the select max and min on this field). Use 'none' for no prev/next search.\n *  @param\tstring\t$fieldref   \tNom du champ objet ref (object->ref) a utiliser pour select next et previous\n *  @param\tstring\t$morehtmlref  \tMore html to show after the ref (see $morehtmlleft for before)\n *  @param\tstring\t$moreparam  \tMore param to add in nav link url.\n *\t@param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name\n *\t@param\tstring\t$morehtmlleft\tMore html code to show before the ref (see $morehtmlref for after)\n *\t@param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows\n *  @param  int     $onlybanner     Put this to 1, if the card will contains only a banner (this add css 'arearefnobottom' on div)\n *\t@param\tstring\t$morehtmlright\tMore html code to show before navigation arrows\n *  @return\tvoid\n */\nfunction dol_banner_tab($object, $paramid, $morehtml = '', $shownav = 1, $fieldid = 'rowid', $fieldref = 'ref', $morehtmlref = '', $moreparam = '', $nodbprefix = 0, $morehtmlleft = '', $morehtmlstatus = '', $onlybanner = 0, $morehtmlright = '')\n{\n\tglobal $conf, $form, $user, $langs;\n\n\t$error = 0;\n\n\t$maxvisiblephotos = 1;\n\t$showimage = 1;\n\t$entity = (empty($object->entity) ? $conf->entity : $object->entity);\n\t$showbarcode = empty($conf->barcode->enabled) ? 0 : (empty($object->barcode) ? 0 : 1);\n\tif (!empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) {\n\t\t$showbarcode = 0;\n\t}\n\t$modulepart = 'unknown';\n\n\tif ($object->element == 'societe' || $object->element == 'contact' || $object->element == 'product' || $object->element == 'ticket') {\n\t\t$modulepart = $object->element;\n\t} elseif ($object->element == 'member') {\n\t\t$modulepart = 'memberphoto';\n\t} elseif ($object->element == 'user') {\n\t\t$modulepart = 'userphoto';\n\t}\n\n\tif (class_exists(\"Imagick\")) {\n\t\tif ($object->element == 'expensereport' || $object->element == 'propal' || $object->element == 'commande' || $object->element == 'facture' || $object->element == 'supplier_proposal') {\n\t\t\t$modulepart = $object->element;\n\t\t} elseif ($object->element == 'fichinter') {\n\t\t\t$modulepart = 'ficheinter';\n\t\t} elseif ($object->element == 'contrat') {\n\t\t\t$modulepart = 'contract';\n\t\t} elseif ($object->element == 'order_supplier') {\n\t\t\t$modulepart = 'supplier_order';\n\t\t} elseif ($object->element == 'invoice_supplier') {\n\t\t\t$modulepart = 'supplier_invoice';\n\t\t}\n\t}\n\n\tif ($object->element == 'product') {\n\t\t$width = 80;\n\t\t$cssclass = 'photoref';\n\t\t$showimage = $object->is_photo_available($conf->product->multidir_output[$entity]);\n\t\t$maxvisiblephotos = (isset($conf->global->PRODUCT_MAX_VISIBLE_PHOTO) ? $conf->global->PRODUCT_MAX_VISIBLE_PHOTO : 5);\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$maxvisiblephotos = 1;\n\t\t}\n\t\tif ($showimage) {\n\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$object->show_photos('product', $conf->product->multidir_output[$entity], 'small', $maxvisiblephotos, 0, 0, 0, $width, 0).'</div>';\n\t\t} else {\n\t\t\tif (!empty($conf->global->PRODUCT_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto = '';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t} else {    // Show no photo link\n\t\t\t\t$nophoto = '/public/theme/common/nophoto.png';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"><img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"No photo\"'.($width ? ' style=\"width: '.$width.'px\"' : '').' src=\"'.DOL_URL_ROOT.$nophoto.'\"></div>';\n\t\t\t}\n\t\t}\n\t} elseif ($object->element == 'ticket') {\n\t\t$width = 80;\n\t\t$cssclass = 'photoref';\n\t\t$showimage = $object->is_photo_available($conf->ticket->multidir_output[$entity].'/'.$object->ref);\n\t\t$maxvisiblephotos = (isset($conf->global->TICKET_MAX_VISIBLE_PHOTO) ? $conf->global->TICKET_MAX_VISIBLE_PHOTO : 2);\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$maxvisiblephotos = 1;\n\t\t}\n\n\t\tif ($showimage) {\n\t\t\t$showphoto = $object->show_photos('ticket', $conf->ticket->multidir_output[$entity], 'small', $maxvisiblephotos, 0, 0, 0, $width, 0);\n\t\t\tif ($object->nbphoto > 0) {\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$showphoto.'</div>';\n\t\t\t} else {\n\t\t\t\t$showimage = 0;\n\t\t\t}\n\t\t}\n\t\tif (!$showimage) {\n\t\t\tif (!empty($conf->global->TICKET_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto = '';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t} else {    // Show no photo link\n\t\t\t\t$nophoto = img_picto('No photo', 'object_ticket');\n\t\t\t\t$morehtmlleft .= '<!-- No photo to show -->';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t$morehtmlleft .= $nophoto;\n\t\t\t\t$morehtmlleft .= '</div></div>';\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($showimage) {\n\t\t\tif ($modulepart != 'unknown') {\n\t\t\t\t$phototoshow = '';\n\t\t\t\t// Check if a preview file is available\n\t\t\t\tif (in_array($modulepart, array('propal', 'commande', 'facture', 'ficheinter', 'contract', 'supplier_order', 'supplier_proposal', 'supplier_invoice', 'expensereport')) && class_exists(\"Imagick\")) {\n\t\t\t\t\t$objectref = dol_sanitizeFileName($object->ref);\n\t\t\t\t\t$dir_output = (empty($conf->$modulepart->multidir_output[$entity]) ? $conf->$modulepart->dir_output : $conf->$modulepart->multidir_output[$entity]).\"/\";\n\t\t\t\t\tif (in_array($modulepart, array('invoice_supplier', 'supplier_invoice'))) {\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 2, 0, 1, $object, $modulepart);\n\t\t\t\t\t\t$subdir .= ((!empty($subdir) && !preg_match('/\\/$/', $subdir)) ? '/' : '').$objectref; // the objectref dir is not included into get_exdir when used with level=2, so we add it at end\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 0, 0, 1, $object, $modulepart);\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($subdir)) {\n\t\t\t\t\t\t$subdir = 'errorgettingsubdirofobject'; // Protection to avoid to return empty path\n\t\t\t\t\t}\n\n\t\t\t\t\t$filepath = $dir_output.$subdir.\"/\";\n\n\t\t\t\t\t$filepdf = $filepath.$objectref.\".pdf\";\n\t\t\t\t\t$relativepath = $subdir.'/'.$objectref.'.pdf';\n\n\t\t\t\t\t// Define path to preview pdf file (preview precompiled \"file.ext\" are \"file.ext_preview.png\")\n\t\t\t\t\t$fileimage = $filepdf.'_preview.png';\n\t\t\t\t\t$relativepathimage = $relativepath.'_preview.png';\n\n\t\t\t\t\t$pdfexists = file_exists($filepdf);\n\n\t\t\t\t\t// If PDF file exists\n\t\t\t\t\tif ($pdfexists) {\n\t\t\t\t\t\t// Conversion du PDF en image png si fichier png non existant\n\t\t\t\t\t\tif (!file_exists($fileimage) || (filemtime($fileimage) < filemtime($filepdf))) {\n\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_PDF_THUMBS)) {\t\t// If you experience trouble with pdf thumb generation and imagick, you can disable here.\n\t\t\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\t\t\t\t\t\t\t\t$ret = dol_convert_file($filepdf, 'png', $fileimage, '0'); // Convert first page of PDF into a file _preview.png\n\t\t\t\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($pdfexists && !$error) {\n\t\t\t\t\t\t$heightforphotref = 80;\n\t\t\t\t\t\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t\t\t\t\t\t$heightforphotref = 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the preview file is found\n\t\t\t\t\t\tif (file_exists($fileimage)) {\n\t\t\t\t\t\t\t$phototoshow = '<div class=\"photoref\">';\n\t\t\t\t\t\t\t$phototoshow .= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($relativepathimage).'\">';\n\t\t\t\t\t\t\t$phototoshow .= '</div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (!$phototoshow) { // example if modulepart = 'societe' or 'photo'\n\t\t\t\t\t$phototoshow .= $form->showphoto($modulepart, $object, 0, 0, 0, 'photoref', 'small', 1, 0, $maxvisiblephotos);\n\t\t\t\t}\n\n\t\t\t\tif ($phototoshow) {\n\t\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\t\t$morehtmlleft .= $phototoshow;\n\t\t\t\t\t$morehtmlleft .= '</div>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (empty($phototoshow)) {      // Show No photo link (picto of object)\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\tif ($object->element == 'action') {\n\t\t\t\t\t$width = 80;\n\t\t\t\t\t$cssclass = 'photorefcenter';\n\t\t\t\t\t$nophoto = img_picto('No photo', 'title_agenda');\n\t\t\t\t} else {\n\t\t\t\t\t$width = 14;\n\t\t\t\t\t$cssclass = 'photorefcenter';\n\t\t\t\t\t$picto = $object->picto;\n\t\t\t\t\tif ($object->element == 'project' && !$object->public) {\n\t\t\t\t\t\t$picto = 'project'; // instead of projectpub\n\t\t\t\t\t}\n\t\t\t\t\t$nophoto = img_picto('No photo', 'object_'.$picto);\n\t\t\t\t}\n\t\t\t\t$morehtmlleft .= '<!-- No photo to show -->';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t$morehtmlleft .= $nophoto;\n\t\t\t\t$morehtmlleft .= '</div></div>';\n\n\t\t\t\t$morehtmlleft .= '</div>';\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($showbarcode) {\n\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$form->showbarcode($object, 100, 'photoref').'</div>';\n\t}\n\n\tif ($object->element == 'societe') {\n\t\tif (!empty($conf->use_javascript_ajax) && $user->rights->societe->creer && !empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus .= ajax_object_onoff($object, 'status', 'status', 'InActivity', 'ActivityCeased');\n\t\t} else {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(6);\n\t\t}\n\t} elseif ($object->element == 'product') {\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").') ';\n\t\tif (!empty($conf->use_javascript_ajax) && $user->rights->produit->creer && !empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus .= ajax_object_onoff($object, 'status', 'tosell', 'ProductStatusOnSell', 'ProductStatusNotOnSell');\n\t\t} else {\n\t\t\t$morehtmlstatus .= '<span class=\"statusrefsell\">'.$object->getLibStatut(6, 0).'</span>';\n\t\t}\n\t\t$morehtmlstatus .= ' &nbsp; ';\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").') ';\n\t\tif (!empty($conf->use_javascript_ajax) && $user->rights->produit->creer && !empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus .= ajax_object_onoff($object, 'status_buy', 'tobuy', 'ProductStatusOnBuy', 'ProductStatusNotOnBuy');\n\t\t} else {\n\t\t\t$morehtmlstatus .= '<span class=\"statusrefbuy\">'.$object->getLibStatut(6, 1).'</span>';\n\t\t}\n\t} elseif (in_array($object->element, array('facture', 'invoice', 'invoice_supplier', 'chargesociales', 'loan', 'tva', 'salary'))) {\n\t\t$tmptxt = $object->getLibStatut(6, $object->totalpaye);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3)) {\n\t\t\t$tmptxt = $object->getLibStatut(5, $object->totalpaye);\n\t\t}\n\t\t$morehtmlstatus .= $tmptxt;\n\t} elseif ($object->element == 'contrat' || $object->element == 'contract') {\n\t\tif ($object->statut == 0) {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(5);\n\t\t} else {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(4);\n\t\t}\n\t} elseif ($object->element == 'facturerec') {\n\t\tif ($object->frequency == 0) {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(2);\n\t\t} else {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(5);\n\t\t}\n\t} elseif ($object->element == 'project_task') {\n\t\t$object->fk_statut = 1;\n\t\tif ($object->progress > 0) {\n\t\t\t$object->fk_statut = 2;\n\t\t}\n\t\tif ($object->progress >= 100) {\n\t\t\t$object->fk_statut = 3;\n\t\t}\n\t\t$tmptxt = $object->getLibStatut(5);\n\t\t$morehtmlstatus .= $tmptxt; // No status on task\n\t} else { // Generic case\n\t\t$tmptxt = $object->getLibStatut(6);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3)) {\n\t\t\t$tmptxt = $object->getLibStatut(5);\n\t\t}\n\t\t$morehtmlstatus .= $tmptxt;\n\t}\n\n\t// Add if object was dispatched \"into accountancy\"\n\tif (!empty($conf->accounting->enabled) && in_array($object->element, array('bank', 'paiementcharge', 'facture', 'invoice', 'invoice_supplier', 'expensereport', 'payment_various'))) {\n\t\t// Note: For 'chargesociales', 'salaries'... this is the payments that are dispatched (so element = 'bank')\n\t\tif (method_exists($object, 'getVentilExportCompta')) {\n\t\t\t$accounted = $object->getVentilExportCompta();\n\t\t\t$langs->load(\"accountancy\");\n\t\t\t$morehtmlstatus .= '</div><div class=\"statusref statusrefbis\"><span class=\"opacitymedium\">'.($accounted > 0 ? $langs->trans(\"Accounted\") : $langs->trans(\"NotYetAccounted\")).'</span>';\n\t\t}\n\t}\n\n\t// Add alias for thirdparty\n\tif (!empty($object->name_alias)) {\n\t\t$morehtmlref .= '<div class=\"refidno\">'.$object->name_alias.'</div>';\n\t}\n\n\t// Add label\n\tif (in_array($object->element, array('product', 'bank_account', 'project_task'))) {\n\t\tif (!empty($object->label)) {\n\t\t\t$morehtmlref .= '<div class=\"refidno\">'.$object->label.'</div>';\n\t\t}\n\t}\n\n\tif (method_exists($object, 'getBannerAddress') && !in_array($object->element, array('product', 'bookmark', 'ecm_directories', 'ecm_files'))) {\n\t\t$moreaddress = $object->getBannerAddress('refaddress', $object);\n\t\tif ($moreaddress) {\n\t\t\t$morehtmlref .= '<div class=\"refidno\">';\n\t\t\t$morehtmlref .= $moreaddress;\n\t\t\t$morehtmlref .= '</div>';\n\t\t}\n\t}\n\tif (!empty($conf->global->MAIN_SHOW_TECHNICAL_ID) && ($conf->global->MAIN_SHOW_TECHNICAL_ID == '1' || preg_match('/'.preg_quote($object->element, '/').'/i', $conf->global->MAIN_SHOW_TECHNICAL_ID)) && !empty($object->id)) {\n\t\t$morehtmlref .= '<div style=\"clear: both;\"></div>';\n\t\t$morehtmlref .= '<div class=\"refidno\">';\n\t\t$morehtmlref .= $langs->trans(\"TechnicalID\").': '.$object->id;\n\t\t$morehtmlref .= '</div>';\n\t}\n\n\tprint '<div class=\"'.($onlybanner ? 'arearefnobottom ' : 'arearef ').'heightref valignmiddle centpercent\">';\n\tprint $form->showrefnav($object, $paramid, $morehtml, $shownav, $fieldid, $fieldref, $morehtmlref, $moreparam, $nodbprefix, $morehtmlleft, $morehtmlstatus, $morehtmlright);\n\tprint '</div>';\n\tprint '<div class=\"underrefbanner clearboth\"></div>';\n}\n\n/**\n * Show a string with the label tag dedicated to the HTML edit field.\n *\n * @param\tstring\t$langkey\t\tTranslation key\n * @param \tstring\t$fieldkey\t\tKey of the html select field the text refers to\n * @param\tint\t\t$fieldrequired\t1=Field is mandatory\n * @return string\n * @deprecated Form::editfieldkey\n */\nfunction fieldLabel($langkey, $fieldkey, $fieldrequired = 0)\n{\n\tglobal $langs;\n\t$ret = '';\n\tif ($fieldrequired) {\n\t\t$ret .= '<span class=\"fieldrequired\">';\n\t}\n\t$ret .= '<label for=\"'.$fieldkey.'\">';\n\t$ret .= $langs->trans($langkey);\n\t$ret .= '</label>';\n\tif ($fieldrequired) {\n\t\t$ret .= '</span>';\n\t}\n\treturn $ret;\n}\n\n/**\n * Return string to add class property on html element with pair/impair.\n *\n * @param\tstring\t$var\t\t\t0 or 1\n * @param\tstring\t$moreclass\t\tMore class to add\n * @return\tstring\t\t\t\t\tString to add class onto HTML element\n */\nfunction dol_bc($var, $moreclass = '')\n{\n\tglobal $bc;\n\t$ret = ' '.$bc[$var];\n\tif ($moreclass) {\n\t\t$ret = preg_replace('/class=\\\"/', 'class=\"'.$moreclass.' ', $ret);\n\t}\n\treturn $ret;\n}\n\n/**\n *      Return a formated address (part address/zip/town/state) according to country rules.\n *      See https://en.wikipedia.org/wiki/Address\n *\n *      @param  Object\t\t$object\t\t\tA company or contact object\n * \t    @param\tint\t\t\t$withcountry\t1=Add country into address string\n *      @param\tstring\t\t$sep\t\t\tSeparator to use to build string\n *      @param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *      @param\tint\t\t\t$mode\t\t\t0=Standard output, 1=Remove address\n *  \t@param\tstring\t\t$extralangcode\tUser extralanguage $langcode as values for address, town\n *      @return string\t\t\t\t\t\tFormated string\n *      @see dol_print_address()\n */\nfunction dol_format_address($object, $withcountry = 0, $sep = \"\\n\", $outputlangs = '', $mode = 0, $extralangcode = '')\n{\n\tglobal $conf, $langs;\n\n\t$ret = '';\n\t$countriesusingstate = array('AU', 'CA', 'US', 'IN', 'GB', 'ES', 'UK', 'TR'); // See also MAIN_FORCE_STATE_INTO_ADDRESS\n\n\t// See format of addresses on https://en.wikipedia.org/wiki/Address\n\t// Address\n\tif (empty($mode)) {\n\t\t$ret .= ($extralangcode ? $object->array_languages['address'][$extralangcode] : (empty($object->address) ? '' : $object->address));\n\t}\n\t// Zip/Town/State\n\tif (isset($object->country_code) && in_array($object->country_code, array('AU', 'CA', 'US')) || !empty($conf->global->MAIN_FORCE_STATE_INTO_ADDRESS)) {\n\t\t// US: title firstname name \\n address lines \\n town, state, zip \\n country\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($ret ? $sep : '').$town;\n\t\tif (!empty($object->state))\t{\n\t\t\t$ret .= ($ret ? \", \" : '').$object->state;\n\t\t}\n\t\tif (!empty($object->zip)) {\n\t\t\t$ret .= ($ret ? \", \" : '').$object->zip;\n\t\t}\n\t} elseif (isset($object->country_code) && in_array($object->country_code, array('GB', 'UK'))) {\n\t\t// UK: title firstname name \\n address lines \\n town state \\n zip \\n country\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($ret ? $sep : '').$town;\n\t\tif (!empty($object->state)) {\n\t\t\t$ret .= ($ret ? \", \" : '').$object->state;\n\t\t}\n\t\tif (!empty($object->zip)) {\n\t\t\t$ret .= ($ret ? $sep : '').$object->zip;\n\t\t}\n\t} elseif (isset($object->country_code) && in_array($object->country_code, array('ES', 'TR'))) {\n\t\t// ES: title firstname name \\n address lines \\n zip town \\n state \\n country\n\t\t$ret .= ($ret ? $sep : '').$object->zip;\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($town ? (($object->zip ? ' ' : '').$town) : '');\n\t\tif (!empty($object->state)) {\n\t\t\t$ret .= \"\\n\".$object->state;\n\t\t}\n\t} elseif (isset($object->country_code) && in_array($object->country_code, array('IT'))) {\n\t\t// IT: tile firstname name\\n address lines \\n zip (Code Departement) \\n country\n\t\t$ret .= ($ret ? $sep : '').$object->zip;\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($town ? (($object->zip ? ' ' : '').$town) : '');\n\t\t$ret .= (empty($object->state_code) ? '' : (' '.$object->state_code));\n\t} else { // Other: title firstname name \\n address lines \\n zip town \\n country\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= !empty($object->zip) ? (($ret ? $sep : '').$object->zip) : '';\n\t\t$ret .= ($town ? (($object->zip ? ' ' : ($ret ? $sep : '')).$town) : '');\n\t\tif (!empty($object->state) && in_array($object->country_code, $countriesusingstate)) {\n\t\t\t$ret .= ($ret ? \", \" : '').$object->state;\n\t\t}\n\t}\n\tif (!is_object($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\tif ($withcountry) {\n\t\t$langs->load(\"dict\");\n\t\t$ret .= (empty($object->country_code) ? '' : ($ret ? $sep : '').$outputlangs->convToOutputCharset($outputlangs->transnoentitiesnoconv(\"Country\".$object->country_code)));\n\t}\n\n\treturn $ret;\n}\n\n\n\n/**\n *\tFormat a string.\n *\n *\t@param\tstring\t$fmt\t\tFormat of strftime function (http://php.net/manual/fr/function.strftime.php)\n *  @param\tint\t\t$ts\t\t\tTimesamp (If is_gmt is true, timestamp is already includes timezone and daylight saving offset, if is_gmt is false, timestamp is a GMT timestamp and we must compensate with server PHP TZ)\n *  @param\tint\t\t$is_gmt\t\tSee comment of timestamp parameter\n *\t@return\tstring\t\t\t\tA formatted string\n */\nfunction dol_strftime($fmt, $ts = false, $is_gmt = false)\n{\n\tif ((abs($ts) <= 0x7FFFFFFF)) { // check if number in 32-bit signed range\n\t\treturn ($is_gmt) ? @gmstrftime($fmt, $ts) : @strftime($fmt, $ts);\n\t} else {\n\t\treturn 'Error date into a not supported range';\n\t}\n}\n\n/**\n *\tOutput date in a string format according to outputlangs (or langs if not defined).\n * \tReturn charset is always UTF-8, except if encodetoouput is defined. In this case charset is output charset\n *\n *\t@param\tint\t\t\t$time\t\t\tGM Timestamps date\n *\t@param\tstring\t\t$format      \tOutput date format (tag of strftime function)\n *\t\t\t\t\t\t\t\t\t\t\"%d %b %Y\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M:%S\",\n *                                      \"%B\"=Long text of month, \"%A\"=Long text of day, \"%b\"=Short text of month, \"%a\"=Short text of day\n *\t\t\t\t\t\t\t\t\t\t\"day\", \"daytext\", \"dayhour\", \"dayhourldap\", \"dayhourtext\", \"dayrfc\", \"dayhourrfc\", \"...inputnoreduce\", \"...reduceformat\"\n * \t@param\tstring\t\t$tzoutput\t\ttrue or 'gmt' => string is for Greenwich location\n * \t\t\t\t\t\t\t\t\t\tfalse or 'tzserver' => output string is for local PHP server TZ usage\n * \t\t\t\t\t\t\t\t\t\t'tzuser' => output string is for user TZ (current browser TZ with current dst) => In a future, we should have same behaviour than 'tzuserrel'\n *                                      'tzuserrel' => output string is for user TZ (current browser TZ with dst or not, depending on date position) (TODO not implemented yet)\n *\t@param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *  @param  boolean\t\t$encodetooutput false=no convert into output pagecode\n * \t@return string      \t\t\t\tFormated date or '' if time is null\n *\n *  @see        dol_mktime(), dol_stringtotime(), dol_getdate()\n */\nfunction dol_print_date($time, $format = '', $tzoutput = 'auto', $outputlangs = '', $encodetooutput = false)\n{\n\tglobal $conf, $langs;\n\n\tif ($tzoutput === 'auto') {\n\t\t$tzoutput = (empty($conf) ? 'tzserver' : (isset($conf->tzuserinputkey) ? $conf->tzuserinputkey : 'tzserver'));\n\t}\n\n\t// Clean parameters\n\t$to_gmt = false;\n\t$offsettz = $offsetdst = 0;\n\tif ($tzoutput) {\n\t\t$to_gmt = true; // For backward compatibility\n\t\tif (is_string($tzoutput)) {\n\t\t\tif ($tzoutput == 'tzserver') {\n\t\t\t\t$to_gmt = false;\n\t\t\t\t$offsettzstring = @date_default_timezone_get(); // Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz = 0;\t// Timezone offset with server timezone, so 0\n\t\t\t\t$offsetdst = 0;\t// Dst offset with server timezone, so 0\n\t\t\t} elseif ($tzoutput == 'tzuser' || $tzoutput == 'tzuserrel') {\n\t\t\t\t$to_gmt = true;\n\t\t\t\t$offsettzstring = (empty($_SESSION['dol_tz_string']) ? 'UTC' : $_SESSION['dol_tz_string']); // Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz = (empty($_SESSION['dol_tz']) ? 0 : $_SESSION['dol_tz']) * 60 * 60; // Will not be used anymore\n\t\t\t\t$offsetdst = (empty($_SESSION['dol_dst']) ? 0 : $_SESSION['dol_dst']) * 60 * 60; // Will not be used anymore\n\t\t\t}\n\t\t}\n\t}\n\tif (!is_object($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\tif (!$format) {\n\t\t$format = 'daytextshort';\n\t}\n\n\t// Do we have to reduce the length of date (year on 2 chars) to save space.\n\t// Note: dayinputnoreduce is same than day but no reduction of year length will be done\n\t$reduceformat = (!empty($conf->dol_optimize_smallscreen) && in_array($format, array('day', 'dayhour'))) ? 1 : 0;\t// Test on original $format param.\n\t$format = preg_replace('/inputnoreduce/', '', $format);\t// so format 'dayinputnoreduce' is processed like day\n\t$formatwithoutreduce = preg_replace('/reduceformat/', '', $format);\n\tif ($formatwithoutreduce != $format) {\n\t\t$format = $formatwithoutreduce;\n\t\t$reduceformat = 1;\n\t}  // so format 'dayreduceformat' is processed like day\n\n\t// Change predefined format into computer format. If found translation in lang file we use it, otherwise we use default.\n\t// TODO Add format daysmallyear and dayhoursmallyear\n\tif ($format == 'day') {\n\t\t$format = ($outputlangs->trans(\"FormatDateShort\") != \"FormatDateShort\" ? $outputlangs->trans(\"FormatDateShort\") : $conf->format_date_short);\n\t} elseif ($format == 'hour') {\n\t\t$format = ($outputlangs->trans(\"FormatHourShort\") != \"FormatHourShort\" ? $outputlangs->trans(\"FormatHourShort\") : $conf->format_hour_short);\n\t} elseif ($format == 'hourduration') {\n\t\t$format = ($outputlangs->trans(\"FormatHourShortDuration\") != \"FormatHourShortDuration\" ? $outputlangs->trans(\"FormatHourShortDuration\") : $conf->format_hour_short_duration);\n\t} elseif ($format == 'daytext') {\n\t\t$format = ($outputlangs->trans(\"FormatDateText\") != \"FormatDateText\" ? $outputlangs->trans(\"FormatDateText\") : $conf->format_date_text);\n\t} elseif ($format == 'daytextshort') {\n\t\t$format = ($outputlangs->trans(\"FormatDateTextShort\") != \"FormatDateTextShort\" ? $outputlangs->trans(\"FormatDateTextShort\") : $conf->format_date_text_short);\n\t} elseif ($format == 'dayhour') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourShort\") != \"FormatDateHourShort\" ? $outputlangs->trans(\"FormatDateHourShort\") : $conf->format_date_hour_short);\n\t} elseif ($format == 'dayhoursec') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourSecShort\") != \"FormatDateHourSecShort\" ? $outputlangs->trans(\"FormatDateHourSecShort\") : $conf->format_date_hour_sec_short);\n\t} elseif ($format == 'dayhourtext') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourText\") != \"FormatDateHourText\" ? $outputlangs->trans(\"FormatDateHourText\") : $conf->format_date_hour_text);\n\t} elseif ($format == 'dayhourtextshort') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourTextShort\") != \"FormatDateHourTextShort\" ? $outputlangs->trans(\"FormatDateHourTextShort\") : $conf->format_date_hour_text_short);\n\t} elseif ($format == 'dayhourlog') {\n\t\t// Format not sensitive to language\n\t\t$format = '%Y%m%d%H%M%S';\n\t} elseif ($format == 'dayhourldap') {\n\t\t$format = '%Y%m%d%H%M%SZ';\n\t} elseif ($format == 'dayhourxcard') {\n\t\t$format = '%Y%m%dT%H%M%SZ';\n\t} elseif ($format == 'dayxcard') {\n\t\t$format = '%Y%m%d';\n\t} elseif ($format == 'dayrfc') {\n\t\t$format = '%Y-%m-%d'; // DATE_RFC3339\n\t} elseif ($format == 'dayhourrfc') {\n\t\t$format = '%Y-%m-%dT%H:%M:%SZ'; // DATETIME RFC3339\n\t} elseif ($format == 'standard') {\n\t\t$format = '%Y-%m-%d %H:%M:%S';\n\t}\n\n\tif ($reduceformat) {\n\t\t$format = str_replace('%Y', '%y', $format);\n\t\t$format = str_replace('yyyy', 'yy', $format);\n\t}\n\n\t// If date undefined or \"\", we return \"\"\n\tif (dol_strlen($time) == 0) {\n\t\treturn ''; // $time=0 allowed (it means 01/01/1970 00:00:00)\n\t}\n\n\t// Clean format\n\tif (preg_match('/%b/i', $format)) {\t\t// There is some text to translate\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format = str_replace('%b', '__b__', $format);\n\t\t$format = str_replace('%B', '__B__', $format);\n\t}\n\tif (preg_match('/%a/i', $format)) {\t\t// There is some text to translate\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format = str_replace('%a', '__a__', $format);\n\t\t$format = str_replace('%A', '__A__', $format);\n\t}\n\n\n\t// Analyze date\n\t$reg = array();\n\tif (preg_match('/^([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])$/i', $time, $reg)) {\t// Deprecated. Ex: 1970-01-01, 1970-01-01 01:00:00, 19700101010000\n\t\tdol_print_error(\"Functions.lib::dol_print_date function called with a bad value from page \".$_SERVER[\"PHP_SELF\"]);\n\t\treturn '';\n\t} elseif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+) ?([0-9]+)?:?([0-9]+)?:?([0-9]+)?/i', $time, $reg)) {    // Still available to solve problems in extrafields of type date\n\t\t// This part of code should not be used anymore.\n\t\tdol_syslog(\"Functions.lib::dol_print_date function called with a bad value from page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t//if (function_exists('debug_print_backtrace')) debug_print_backtrace();\n\t\t// Date has format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'\n\t\t$syear\t= (!empty($reg[1]) ? $reg[1] : '');\n\t\t$smonth = (!empty($reg[2]) ? $reg[2] : '');\n\t\t$sday\t= (!empty($reg[3]) ? $reg[3] : '');\n\t\t$shour\t= (!empty($reg[4]) ? $reg[4] : '');\n\t\t$smin\t= (!empty($reg[5]) ? $reg[5] : '');\n\t\t$ssec\t= (!empty($reg[6]) ? $reg[6] : '');\n\n\t\t$time = dol_mktime($shour, $smin, $ssec, $smonth, $sday, $syear, true);\n\t\t$ret = adodb_strftime($format, $time + $offsettz + $offsetdst, $to_gmt);\n\t} else {\n\t\t// Date is a timestamps\n\t\tif ($time < 100000000000) {\t// Protection against bad date values\n\t\t\t$timetouse = $time + $offsettz + $offsetdst; // TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t\t$ret = adodb_strftime($format, $timetouse, $to_gmt);\t// If to_gmt = false then adodb_strftime use TZ of server\n\t\t} else {\n\t\t\t$ret = 'Bad value '.$time.' for date';\n\t\t}\n\t}\n\n\tif (preg_match('/__b__/i', $format)) {\n\t\t$timetouse = $time + $offsettz + $offsetdst; // TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t// Here ret is string in PHP setup language (strftime was used). Now we convert to $outputlangs.\n\t\t$month = adodb_strftime('%m', $timetouse, $to_gmt);\t\t// If to_gmt = false then adodb_strftime use TZ of server\n\t\t$month = sprintf(\"%02d\", $month); // $month may be return with format '06' on some installation and '6' on other, so we force it to '06'.\n\t\tif ($encodetooutput) {\n\t\t\t$monthtext = $outputlangs->transnoentities('Month'.$month);\n\t\t\t$monthtextshort = $outputlangs->transnoentities('MonthShort'.$month);\n\t\t} else {\n\t\t\t$monthtext = $outputlangs->transnoentitiesnoconv('Month'.$month);\n\t\t\t$monthtextshort = $outputlangs->transnoentitiesnoconv('MonthShort'.$month);\n\t\t}\n\t\t//print 'monthtext='.$monthtext.' monthtextshort='.$monthtextshort;\n\t\t$ret = str_replace('__b__', $monthtextshort, $ret);\n\t\t$ret = str_replace('__B__', $monthtext, $ret);\n\t\t//print 'x'.$outputlangs->charset_output.'-'.$ret.'x';\n\t\t//return $ret;\n\t}\n\tif (preg_match('/__a__/i', $format)) {\n\t\t//print \"time=$time offsettz=$offsettz offsetdst=$offsetdst offsettzstring=$offsettzstring\";\n\t\t$timetouse = $time + $offsettz + $offsetdst; // TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t$w = adodb_strftime('%w', $timetouse, $to_gmt);\t\t// If to_gmt = false then adodb_strftime use TZ of server\n\t\t$dayweek = $outputlangs->transnoentitiesnoconv('Day'.$w);\n\t\t$ret = str_replace('__A__', $dayweek, $ret);\n\t\t$ret = str_replace('__a__', dol_substr($dayweek, 0, 3), $ret);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n *  Return an array with locale date info.\n *  WARNING: This function use PHP server timezone by default to return locale informations.\n *  Be aware to add the third parameter to \"UTC\" if you need to work on UTC.\n *\n *\t@param\tint\t\t\t$timestamp      Timestamp\n *\t@param\tboolean\t\t$fast           Fast mode. deprecated.\n *  @param\tstring\t\t$forcetimezone\t'' to use the PHP server timezone. Or use a form like 'gmt', 'Europe/Paris' or '+0200' to force timezone.\n *\t@return\tarray\t\t\t\t\t\tArray of informations\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'wday' => $dow,\t\t0=sunday, 6=saturday\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power)\n *\t\t\t\t\t\t\t\t\t\t'0' => original timestamp\n * \t@see \t\t\t\t\t\t\t\tdol_print_date(), dol_stringtotime(), dol_mktime()\n */\nfunction dol_getdate($timestamp, $fast = false, $forcetimezone = '')\n{\n\t//$datetimeobj = new DateTime('@'.$timestamp);\n\t$datetimeobj = new DateTime();\n\t$datetimeobj->setTimestamp($timestamp); // Use local PHP server timezone\n\tif ($forcetimezone) {\n\t\t$datetimeobj->setTimezone(new DateTimeZone($forcetimezone == 'gmt' ? 'UTC' : $forcetimezone)); //  (add timezone relative to the date entered)\n\t}\n\t$arrayinfo = array(\n\t\t'year'=>((int) date_format($datetimeobj, 'Y')),\n\t\t'mon'=>((int) date_format($datetimeobj, 'm')),\n\t\t'mday'=>((int) date_format($datetimeobj, 'd')),\n\t\t'wday'=>((int) date_format($datetimeobj, 'w')),\n\t\t'yday'=>((int) date_format($datetimeobj, 'z')),\n\t\t'hours'=>((int) date_format($datetimeobj, 'H')),\n\t\t'minutes'=>((int) date_format($datetimeobj, 'i')),\n\t\t'seconds'=>((int) date_format($datetimeobj, 's')),\n\t\t'0'=>$timestamp\n\t);\n\n\treturn $arrayinfo;\n}\n\n/**\n *\tReturn a timestamp date built from detailed informations (by default a local PHP server timestamp)\n * \tReplace function mktime not available under Windows if year < 1970\n *\tPHP mktime is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *\n * \t@param\tint\t\t\t$hour\t\t\tHour\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$minute\t\t\tMinute\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$second\t\t\tSecond\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$month\t\t\tMonth (1 to 12)\n *\t@param\tint\t\t\t$day\t\t\tDay (1 to 31)\n *\t@param\tint\t\t\t$year\t\t\tYear\n *\t@param\tmixed\t\t$gm\t\t\t\tTrue or 1 or 'gmt'=Input informations are GMT values\n *\t\t\t\t\t\t\t\t\t\tFalse or 0 or 'tzserver' = local to server TZ\n *\t\t\t\t\t\t\t\t\t\t'auto'\n *\t\t\t\t\t\t\t\t\t\t'tzuser' = local to user TZ taking dst into account at the current date. Not yet implemented.\n *\t\t\t\t\t\t\t\t\t\t'tzuserrel' = local to user TZ taking dst into account at the given date. Use this one to convert date input from user.\n *\t\t\t\t\t\t\t\t\t\t'tz,TimeZone' = use specified timezone\n *\t@param\tint\t\t\t$check\t\t\t0=No check on parameters (Can use day 32, etc...)\n *\t@return\tint|string\t\t\t\t\tDate as a timestamp, '' or false if error\n * \t@see \t\t\t\t\t\t\t\tdol_print_date(), dol_stringtotime(), dol_getdate()\n */\nfunction dol_mktime($hour, $minute, $second, $month, $day, $year, $gm = 'auto', $check = 1)\n{\n\tglobal $conf;\n\t//print \"- \".$hour.\",\".$minute.\",\".$second.\",\".$month.\",\".$day.\",\".$year.\",\".$_SERVER[\"WINDIR\"].\" -\";\n\t//print 'gm:'.$gm.' gm==auto:'.($gm == 'auto').'<br>';\n\n\tif ($gm === 'auto') {\n\t\t$gm = (empty($conf) ? 'tzserver' : $conf->tzuserinputkey);\n\t}\n\n\t// Clean parameters\n\tif ($hour == -1 || empty($hour)) {\n\t\t$hour = 0;\n\t}\n\tif ($minute == -1 || empty($minute)) {\n\t\t$minute = 0;\n\t}\n\tif ($second == -1 || empty($second)) {\n\t\t$second = 0;\n\t}\n\n\t// Check parameters\n\tif ($check) {\n\t\tif (!$month || !$day) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($day > 31) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($month > 12) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($hour < 0 || $hour > 24) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($minute < 0 || $minute > 60) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($second < 0 || $second > 60) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tif (empty($gm) || ($gm === 'server' || $gm === 'tzserver')) {\n\t\t$default_timezone = @date_default_timezone_get(); // Example 'Europe/Berlin'\n\t\t$localtz = new DateTimeZone($default_timezone);\n\t} elseif ($gm === 'user' || $gm === 'tzuser' || $gm === 'tzuserrel') {\n\t\t// We use dol_tz_string first because it is more reliable.\n\t\t$default_timezone = (empty($_SESSION[\"dol_tz_string\"]) ? @date_default_timezone_get() : $_SESSION[\"dol_tz_string\"]); // Example 'Europe/Berlin'\n\t\ttry {\n\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t} catch (Exception $e) {\n\t\t\tdol_syslog(\"Warning dol_tz_string contains an invalid value \".$_SESSION[\"dol_tz_string\"], LOG_WARNING);\n\t\t\t$default_timezone = @date_default_timezone_get();\n\t\t}\n\t} elseif (strrpos($gm, \"tz,\") !== false) {\n\t\t$timezone = str_replace(\"tz,\", \"\", $gm); // Example 'tz,Europe/Berlin'\n\t\ttry {\n\t\t\t$localtz = new DateTimeZone($timezone);\n\t\t} catch (Exception $e) {\n\t\t\tdol_syslog(\"Warning passed timezone contains an invalid value \".$timezone, LOG_WARNING);\n\t\t}\n\t}\n\n\tif (empty($localtz)) {\n\t\t$localtz = new DateTimeZone('UTC');\n\t}\n\t//var_dump($localtz);\n\t//var_dump($year.'-'.$month.'-'.$day.'-'.$hour.'-'.$minute);\n\t$dt = new DateTime(null, $localtz);\n\t$dt->setDate((int) $year, (int) $month, (int) $day);\n\t$dt->setTime((int) $hour, (int) $minute, (int) $second);\n\t$date = $dt->getTimestamp(); // should include daylight saving time\n\t//var_dump($date);\n\treturn $date;\n}\n\n\n/**\n *  Return date for now. In most cases, we use this function without parameters (that means GMT time).\n *\n *  @param\tstring\t\t$mode\t'auto' => for backward compatibility (avoid this),\n *  \t\t\t\t\t\t\t'gmt' => we return GMT timestamp,\n * \t\t\t\t\t\t\t\t'tzserver' => we add the PHP server timezone\n *  \t\t\t\t\t\t\t'tzref' => we add the company timezone. Not implemented.\n * \t\t\t\t\t\t\t\t'tzuser' or 'tzuserrel' => we add the user timezone\n *\t@return int   $date\tTimestamp\n */\nfunction dol_now($mode = 'auto')\n{\n\t$ret = 0;\n\n\tif ($mode === 'auto') {\n\t\t$mode = 'gmt';\n\t}\n\n\tif ($mode == 'gmt') {\n\t\t$ret = time(); // Time for now at greenwich.\n\t} elseif ($mode == 'tzserver') {\t\t// Time for now with PHP server timezone added\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond = getServerTimeZoneInt('now'); // Contains tz+dayling saving time\n\t\t$ret = (int) (dol_now('gmt') + ($tzsecond * 3600));\n\t\t//} elseif ($mode == 'tzref') {// Time for now with parent company timezone is added\n\t\t//\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t//\t$tzsecond=getParentCompanyTimeZoneInt();    // Contains tz+dayling saving time\n\t\t//\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t\t//}\n\t} elseif ($mode == 'tzuser' || $mode == 'tzuserrel') {\n\t\t// Time for now with user timezone added\n\t\t//print 'time: '.time();\n\t\t$offsettz = (empty($_SESSION['dol_tz']) ? 0 : $_SESSION['dol_tz']) * 60 * 60;\n\t\t$offsetdst = (empty($_SESSION['dol_dst']) ? 0 : $_SESSION['dol_dst']) * 60 * 60;\n\t\t$ret = (int) (dol_now('gmt') + ($offsettz + $offsetdst));\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n * Return string with formated size\n *\n * @param\tint\t\t$size\t\tSize to print\n * @param\tint\t\t$shortvalue\tTell if we want long value to use another unit (Ex: 1.5Kb instead of 1500b)\n * @param\tint\t\t$shortunit\tUse short label of size unit (for example 'b' instead of 'bytes')\n * @return\tstring\t\t\t\tLink\n */\nfunction dol_print_size($size, $shortvalue = 0, $shortunit = 0)\n{\n\tglobal $conf, $langs;\n\t$level = 1024;\n\n\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t$shortunit = 1;\n\t}\n\n\t// Set value text\n\tif (empty($shortvalue) || $size < ($level * 10)) {\n\t\t$ret = $size;\n\t\t$textunitshort = $langs->trans(\"b\");\n\t\t$textunitlong = $langs->trans(\"Bytes\");\n\t} else {\n\t\t$ret = round($size / $level, 0);\n\t\t$textunitshort = $langs->trans(\"Kb\");\n\t\t$textunitlong = $langs->trans(\"KiloBytes\");\n\t}\n\t// Use long or short text unit\n\tif (empty($shortunit)) {\n\t\t$ret .= ' '.$textunitlong;\n\t} else {\n\t\t$ret .= ' '.$textunitshort;\n\t}\n\n\treturn $ret;\n}\n\n/**\n * Show Url link\n *\n * @param\tstring\t\t$url\t\tUrl to show\n * @param\tstring\t\t$target\t\tTarget for link\n * @param\tint\t\t\t$max\t\tMax number of characters to show\n * @param\tint\t\t\t$withpicto\tWith picto\n * @return\tstring\t\t\t\t\tHTML Link\n */\nfunction dol_print_url($url, $target = '_blank', $max = 32, $withpicto = 0)\n{\n\tglobal $langs;\n\n\tif (empty($url)) {\n\t\treturn '';\n\t}\n\n\t$link = '<a href=\"';\n\tif (!preg_match('/^http/i', $url)) {\n\t\t$link .= 'http://';\n\t}\n\t$link .= $url;\n\t$link .= '\"';\n\tif ($target) {\n\t\t$link .= ' target=\"'.$target.'\"';\n\t}\n\t$link .= '>';\n\tif (!preg_match('/^http/i', $url)) {\n\t\t$link .= 'http://';\n\t}\n\t$link .= dol_trunc($url, $max);\n\t$link .= '</a>';\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto ?img_picto($langs->trans(\"Url\"), 'globe').' ' : '').$link.'</div>';\n}\n\n/**\n * Show EMail link formatted for HTML output.\n *\n * @param\tstring\t\t$email\t\t\tEMail to show (only email, without 'Name of recipient' before)\n * @param \tint\t\t\t$cid \t\t\tId of contact if known\n * @param \tint\t\t\t$socid \t\t\tId of third party if known\n * @param \tint\t\t\t$addlink\t\t0=no link, 1=email has a html email link (+ link to create action if constant AGENDA_ADDACTIONFOREMAIL is on)\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @param\tint\t\t\t$showinvalid\t1=Show warning if syntax email is wrong\n * @param\tint\t\t\t$withpicto\t\tShow picto\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_email($email, $cid = 0, $socid = 0, $addlink = 0, $max = 64, $showinvalid = 1, $withpicto = 0)\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$newemail = dol_escape_htmltag($email);\n\n\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && $withpicto) {\n\t\t$withpicto = 0;\n\t}\n\n\tif (empty($email)) {\n\t\treturn '&nbsp;';\n\t}\n\n\tif (!empty($addlink)) {\n\t\t$newemail = '<a style=\"text-overflow: ellipsis;\" href=\"';\n\t\tif (!preg_match('/^mailto:/i', $email)) {\n\t\t\t$newemail .= 'mailto:';\n\t\t}\n\t\t$newemail .= $email;\n\t\t$newemail .= '\">';\n\t\t$newemail .= dol_trunc($email, $max);\n\t\t$newemail .= '</a>';\n\t\tif ($showinvalid && !isValidEmail($email)) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail .= img_warning($langs->trans(\"ErrorBadEMail\", $email));\n\t\t}\n\n\t\tif (($cid || $socid) && !empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create) {\n\t\t\t$type = 'AC_EMAIL';\n\t\t\t$link = '';\n\t\t\tif (!empty($conf->global->AGENDA_ADDACTIONFOREMAIL)) {\n\t\t\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"), \"calendar\").'</a>';\n\t\t\t}\n\t\t\tif ($link) {\n\t\t\t\t$newemail = '<div>'.$newemail.' '.$link.'</div>';\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($showinvalid && !isValidEmail($email)) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail .= img_warning($langs->trans(\"ErrorBadEMail\", $email));\n\t\t}\n\t}\n\n\t//$rep = '<div class=\"nospan\" style=\"margin-right: 10px\">';\n\t$rep = ($withpicto ? img_picto($langs->trans(\"EMail\").' : '.$email, 'object_email.png').' ' : '').$newemail;\n\t//$rep .= '</div>';\n\tif ($hookmanager) {\n\t\t$parameters = array('cid' => $cid, 'socid' => $socid, 'addlink' => $addlink, 'picto' => $withpicto);\n\t\t$reshook = $hookmanager->executeHooks('printEmail', $parameters, $email);\n\t\tif ($reshook > 0) {\n\t\t\t$rep = '';\n\t\t}\n\t\t$rep .= $hookmanager->resPrint;\n\t}\n\n\treturn $rep;\n}\n\n/**\n * Get array of social network dictionary\n *\n * @return  array       Array of Social Networks Dictionary\n */\nfunction getArrayOfSocialNetworks()\n{\n\tglobal $conf, $db;\n\n\t$socialnetworks = array();\n\t// Enable caching of array\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/memory.lib.php';\n\t$cachekey = 'socialnetworks_' . $conf->entity;\n\t$dataretrieved = dol_getcache($cachekey);\n\tif (!is_null($dataretrieved)) {\n\t\t$socialnetworks = $dataretrieved;\n\t} else {\n\t\t$sql = \"SELECT rowid, code, label, url, icon, active FROM \".MAIN_DB_PREFIX.\"c_socialnetworks\";\n\t\t$sql .= \" WHERE entity=\".$conf->entity;\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t$socialnetworks[$obj->code] = array(\n\t\t\t\t\t'rowid' => $obj->rowid,\n\t\t\t\t\t'label' => $obj->label,\n\t\t\t\t\t'url' => $obj->url,\n\t\t\t\t\t'icon' => $obj->icon,\n\t\t\t\t\t'active' => $obj->active,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tdol_setcache($cachekey, $socialnetworks); // If setting cache fails, this is not a problem, so we do not test result.\n\t}\n\n\treturn $socialnetworks;\n}\n\n/**\n * Show social network link\n *\n * @param\tstring\t\t$value\t\t\t\tSkype to show (only skype, without 'Name of recipient' before)\n * @param\tint \t\t$cid \t\t\t\tId of contact if known\n * @param\tint \t\t$socid \t\t\t\tId of third party if known\n * @param\tstring \t\t$type\t\t\t\t'skype','facebook',...\n * @param\tarray\t\t$dictsocialnetworks socialnetworks availables\n * @return\tstring\t\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_socialnetworks($value, $cid, $socid, $type, $dictsocialnetworks = array())\n{\n\tglobal $conf, $user, $langs;\n\n\t$htmllink = $value;\n\n\tif (empty($value)) {\n\t\treturn '&nbsp;';\n\t}\n\n\tif (!empty($type)) {\n\t\t$htmllink = '<div class=\"divsocialnetwork inline-block valignmiddle\">';\n\t\t// Use dictionary definition for picto $dictsocialnetworks[$type]['icon']\n\t\t$htmllink .= '<span class=\"fa paddingright '.($dictsocialnetworks[$type]['icon'] ? $dictsocialnetworks[$type]['icon'] : 'fa-link').'\"></span>';\n\t\tif ($type == 'skype') {\n\t\t\t$htmllink .= $value;\n\t\t\t$htmllink .= '&nbsp;';\n\t\t\t$htmllink .= '<a href=\"skype:';\n\t\t\t$htmllink .= $value;\n\t\t\t$htmllink .= '?call\" alt=\"'.$langs->trans(\"Call\").'&nbsp;'.$value.'\" title=\"'.$langs->trans(\"Call\").'&nbsp;'.$value.'\">';\n\t\t\t$htmllink .= '<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_callbutton.png\" border=\"0\">';\n\t\t\t$htmllink .= '</a><a href=\"skype:';\n\t\t\t$htmllink .= $value;\n\t\t\t$htmllink .= '?chat\" alt=\"'.$langs->trans(\"Chat\").'&nbsp;'.$value.'\" title=\"'.$langs->trans(\"Chat\").'&nbsp;'.$value.'\">';\n\t\t\t$htmllink .= '<img class=\"paddingleft\" src=\"'.DOL_URL_ROOT.'/theme/common/skype_chatbutton.png\" border=\"0\">';\n\t\t\t$htmllink .= '</a>';\n\t\t\tif (($cid || $socid) && !empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create) {\n\t\t\t\t$addlink = 'AC_SKYPE';\n\t\t\t\t$link = '';\n\t\t\t\tif (!empty($conf->global->AGENDA_ADDACTIONFORSKYPE)) {\n\t\t\t\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$addlink.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"), \"calendar\").'</a>';\n\t\t\t\t}\n\t\t\t\t$htmllink .= ($link ? ' '.$link : '');\n\t\t\t}\n\t\t} else {\n\t\t\tif (!empty($dictsocialnetworks[$type]['url'])) {\n\t\t\t\t$link = str_replace('{socialid}', $value, $dictsocialnetworks[$type]['url']);\n\t\t\t\t$htmllink .= '&nbsp;<a href=\"'.$link.'\" target=\"_blank\">'.$value.'</a>';\n\t\t\t} else {\n\t\t\t\t$htmllink .= $value;\n\t\t\t}\n\t\t}\n\t\t$htmllink .= '</div>';\n\t} else {\n\t\t$langs->load(\"errors\");\n\t\t$htmllink .= img_warning($langs->trans(\"ErrorBadSocialNetworkValue\", $value));\n\t}\n\treturn $htmllink;\n}\n\n/**\n * \tFormat phone numbers according to country\n *\n * \t@param  string  $phone          Phone number to format\n * \t@param  string  $countrycode    Country code to use for formatting\n * \t@param \tint\t\t$cid \t\t    Id of contact if known\n * \t@param \tint\t\t$socid          Id of third party if known\n * \t@param \tstring\t$addlink\t    ''=no link to create action, 'AC_TEL'=add link to clicktodial (if module enabled) and add link to create event (if conf->global->AGENDA_ADDACTIONFORPHONE set)\n * \t@param \tstring\t$separ \t\t    Separation between numbers for a better visibility example : xx.xx.xx.xx.xx\n *  @param\tstring  $withpicto      Show picto\n *  @param\tstring\t$titlealt\t    Text to show on alt\n *  @param  int     $adddivfloat    Add div float around phone.\n * \t@return string \t\t\t\t    Formated phone number\n */\nfunction dol_print_phone($phone, $countrycode = '', $cid = 0, $socid = 0, $addlink = '', $separ = \"&nbsp;\", $withpicto = '', $titlealt = '', $adddivfloat = 0)\n{\n\tglobal $conf, $user, $langs, $mysoc, $hookmanager;\n\n\t// Clean phone parameter\n\t$phone = preg_replace(\"/[\\s.-]/\", \"\", trim($phone));\n\tif (empty($phone)) {\n\t\treturn '';\n\t}\n\tif (!empty($conf->global->MAIN_PHONE_SEPAR)) {\n\t\t$separ = $conf->global->MAIN_PHONE_SEPAR;\n\t}\n\tif (empty($countrycode)) {\n\t\t$countrycode = $mysoc->country_code;\n\t}\n\n\t// Short format for small screens\n\tif ($conf->dol_optimize_smallscreen) {\n\t\t$separ = '';\n\t}\n\n\t$newphone = $phone;\n\tif (strtoupper($countrycode) == \"FR\") {\n\t\t// France\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone = substr($newphone, 0, 2).$separ.substr($newphone, 2, 2).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2);\n\t\t} elseif (dol_strlen($phone) == 7) {\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 2);\n\t\t} elseif (dol_strlen($phone) == 9) {\n\t\t\t$newphone = substr($newphone, 0, 2).$separ.substr($newphone, 2, 3).$separ.substr($newphone, 5, 2).$separ.substr($newphone, 7, 2);\n\t\t} elseif (dol_strlen($phone) == 11) {\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 2).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t} elseif (dol_strlen($phone) == 12) {\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"CA\") {\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone = ($separ != '' ? '(' : '').substr($newphone, 0, 3).($separ != '' ? ')' : '').$separ.substr($newphone, 3, 3).($separ != '' ? '-' : '').substr($newphone, 6, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"PT\") {//Portugal\n\t\tif (dol_strlen($phone) == 13) {//ex: +351_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"SR\") {//Suriname\n\t\tif (dol_strlen($phone) == 10) {//ex: +597_ABC_DEF\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3);\n\t\t} elseif (dol_strlen($phone) == 11) {//ex: +597_ABC_DEFG\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"DE\") {//Allemagne\n\t\tif (dol_strlen($phone) == 14) {//ex:  +49_ABCD_EFGH_IJK\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 4).$separ.substr($newphone, 7, 4).$separ.substr($newphone, 11, 3);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +49_ABC_DEFG_HIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 4).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"ES\") {//Espagne\n\t\tif (dol_strlen($phone) == 12) {//ex:  +34_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"BF\") {// Burkina Faso\n\t\tif (dol_strlen($phone) == 12) {//ex :  +22 A BC_DE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"RO\") {// Roumanie\n\t\tif (dol_strlen($phone) == 12) {//ex :  +40 AB_CDE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"TR\") {//Turquie\n\t\tif (dol_strlen($phone) == 13) {//ex :  +90 ABC_DEF_GHIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"US\") {//Etat-Unis\n\t\tif (dol_strlen($phone) == 12) {//ex: +1 ABC_DEF_GHIJ\n\t\t\t$newphone = substr($newphone, 0, 2).$separ.substr($newphone, 2, 3).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MX\") {//Mexique\n\t\tif (dol_strlen($phone) == 12) {//ex: +52 ABCD_EFG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 4).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 11) {//ex: +52 AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 2).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +52 ABC_DEF_GHIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"ML\") {//Mali\n\t\tif (dol_strlen($phone) == 12) {//ex: +223 AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"TH\") {//Tha\u00eflande\n\t\tif (dol_strlen($phone) == 11) {//ex: +66_ABC_DE_FGH\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 3);\n\t\t} elseif (dol_strlen($phone) == 12) {//ex: +66_A_BCD_EF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MU\") {\n\t\t//Maurice\n\t\tif (dol_strlen($phone) == 11) {//ex: +230_ABC_DE_FG\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t} elseif (dol_strlen($phone) == 12) {//ex: +230_ABCD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 4).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"ZA\") {//Afrique du sud\n\t\tif (dol_strlen($phone) == 12) {//ex: +27_AB_CDE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"SY\") {//Syrie\n\t\tif (dol_strlen($phone) == 12) {//ex: +963_AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +963_AB_CD_EF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"AE\") {//Emirats Arabes Unis\n\t\tif (dol_strlen($phone) == 12) {//ex: +971_ABC_DEF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +971_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t} elseif (dol_strlen($phone) == 14) {//ex: +971_ABC_DEF_GHIK\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"DZ\") {//Alg\u00e9rie\n\t\tif (dol_strlen($phone) == 13) {//ex: +213_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"BE\") {//Belgique\n\t\tif (dol_strlen($phone) == 11) {//ex: +32_ABC_DE_FGH\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 3);\n\t\t} elseif (dol_strlen($phone) == 12) {//ex: +32_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"PF\") {//Polyn\u00e9sie fran\u00e7aise\n\t\tif (dol_strlen($phone) == 12) {//ex: +689_AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"CO\") {//Colombie\n\t\tif (dol_strlen($phone) == 13) {//ex: +57_ABC_DEF_GH_IJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"JO\") {//Jordanie\n\t\tif (dol_strlen($phone) == 12) {//ex: +962_A_BCD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 1).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"JM\") {//Jama\u00efque\n\t\tif (dol_strlen($newphone) == 12) {//ex: +1867_ABC_DEFG\n\t\t\t$newphone = substr($newphone, 0, 5).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MG\") {//Madagascar\n\t\tif (dol_strlen($phone) == 13) {//ex: +261_AB_CD_EF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"GB\") {//Royaume uni\n\t\tif (dol_strlen($phone) == 13) {//ex: +44_ABCD_EFG_HIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 4).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"CH\") {//Suisse\n\t\tif (dol_strlen($phone) == 12) {//ex: +41_AB_CDE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 15) {// +41_AB_CDE_FGH_IJKL\n\t\t\t$newphone = $newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 3).$separ.substr($newphone, 11, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"TN\") {//Tunisie\n\t\tif (dol_strlen($phone) == 12) {//ex: +216_AB_CDE_FGH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"GF\") {//Guyane francaise\n\t\tif (dol_strlen($phone) == 13) {//ex: +594_ABC_DE_FG_HI  (ABC=594 de nouveau)\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"GP\") {//Guadeloupe\n\t\tif (dol_strlen($phone) == 13) {//ex: +590_ABC_DE_FG_HI  (ABC=590 de nouveau)\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MQ\") {//Martinique\n\t\tif (dol_strlen($phone) == 13) {//ex: +596_ABC_DE_FG_HI  (ABC=596 de nouveau)\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"IT\") {//Italie\n\t\tif (dol_strlen($phone) == 12) {//ex: +39_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +39_ABC_DEF_GH_IJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"AU\") {\n\t\t//Australie\n\t\tif (dol_strlen($phone) == 12) {\n\t\t\t//ex: +61_A_BCDE_FGHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 4).$separ.substr($newphone, 8, 4);\n\t\t}\n\t}\n\tif (!empty($addlink)) {\t// Link on phone number (+ link to add action if conf->global->AGENDA_ADDACTIONFORPHONE set)\n\t\tif ($conf->browser->layout == 'phone' || (!empty($conf->clicktodial->enabled) && !empty($conf->global->CLICKTODIAL_USE_TEL_LINK_ON_PHONE_NUMBERS))) {\t// If phone or option for, we use link of phone\n\t\t\t$newphoneform = $newphone;\n\t\t\t$newphone = '<a href=\"tel:'.$phone.'\"';\n\t\t\t$newphone .= '>'.$newphoneform.'</a>';\n\t\t} elseif (!empty($conf->clicktodial->enabled) && $addlink == 'AC_TEL') {\t\t// If click to dial, we use click to dial url\n\t\t\tif (empty($user->clicktodial_loaded)) {\n\t\t\t\t$user->fetch_clicktodial();\n\t\t\t}\n\n\t\t\t// Define urlmask\n\t\t\t$urlmask = 'ErrorClickToDialModuleNotConfigured';\n\t\t\tif (!empty($conf->global->CLICKTODIAL_URL)) {\n\t\t\t\t$urlmask = $conf->global->CLICKTODIAL_URL;\n\t\t\t}\n\t\t\tif (!empty($user->clicktodial_url)) {\n\t\t\t\t$urlmask = $user->clicktodial_url;\n\t\t\t}\n\n\t\t\t$clicktodial_poste = (!empty($user->clicktodial_poste) ?urlencode($user->clicktodial_poste) : '');\n\t\t\t$clicktodial_login = (!empty($user->clicktodial_login) ?urlencode($user->clicktodial_login) : '');\n\t\t\t$clicktodial_password = (!empty($user->clicktodial_password) ?urlencode($user->clicktodial_password) : '');\n\t\t\t// This line is for backward compatibility\n\t\t\t$url = sprintf($urlmask, urlencode($phone), $clicktodial_poste, $clicktodial_login, $clicktodial_password);\n\t\t\t// Thoose lines are for substitution\n\t\t\t$substitarray = array('__PHONEFROM__'=>$clicktodial_poste,\n\t\t\t\t\t\t\t\t'__PHONETO__'=>urlencode($phone),\n\t\t\t\t\t\t\t\t'__LOGIN__'=>$clicktodial_login,\n\t\t\t\t\t\t\t\t'__PASS__'=>$clicktodial_password);\n\t\t\t$url = make_substitutions($url, $substitarray);\n\t\t\t$newphonesav = $newphone;\n\t\t\t$newphone = '<a href=\"'.$url.'\"';\n\t\t\tif (!empty($conf->global->CLICKTODIAL_FORCENEWTARGET)) {\n\t\t\t\t$newphone .= ' target=\"_blank\"';\n\t\t\t}\n\t\t\t$newphone .= '>'.$newphonesav.'</a>';\n\t\t}\n\n\t\t//if (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\tif (!empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create) {\n\t\t\t$type = 'AC_TEL';\n\t\t\t$link = '';\n\t\t\tif ($addlink == 'AC_FAX') {\n\t\t\t\t$type = 'AC_FAX';\n\t\t\t}\n\t\t\tif (!empty($conf->global->AGENDA_ADDACTIONFORPHONE)) {\n\t\t\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.($cid ? '&amp;contactid='.$cid : '').($socid ? '&amp;socid='.$socid : '').'\">'.img_object($langs->trans(\"AddAction\"), \"calendar\").'</a>';\n\t\t\t}\n\t\t\tif ($link) {\n\t\t\t\t$newphone = '<div>'.$newphone.' '.$link.'</div>';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (empty($titlealt)) {\n\t\t$titlealt = ($withpicto == 'fax' ? $langs->trans(\"Fax\") : $langs->trans(\"Phone\"));\n\t}\n\t$rep = '';\n\n\tif ($hookmanager) {\n\t\t$parameters = array('countrycode' => $countrycode, 'cid' => $cid, 'socid' => $socid, 'titlealt' => $titlealt, 'picto' => $withpicto);\n\t\t$reshook = $hookmanager->executeHooks('printPhone', $parameters, $phone);\n\t\t$rep .= $hookmanager->resPrint;\n\t}\n\tif (empty($reshook)) {\n\t\t$picto = '';\n\t\tif ($withpicto) {\n\t\t\tif ($withpicto == 'fax') {\n\t\t\t\t$picto = 'phoning_fax';\n\t\t\t} elseif ($withpicto == 'phone') {\n\t\t\t\t$picto = 'phoning';\n\t\t\t} elseif ($withpicto == 'mobile') {\n\t\t\t\t$picto = 'phoning_mobile';\n\t\t\t} else {\n\t\t\t\t$picto = '';\n\t\t\t}\n\t\t}\n\t\tif ($adddivfloat) {\n\t\t\t$rep .= '<div class=\"nospan float\" style=\"margin-right: 10px\">';\n\t\t} else {\n\t\t\t$rep .= '<span style=\"margin-right: 10px;\">';\n\t\t}\n\t\t$rep .= ($withpicto ?img_picto($titlealt, 'object_'.$picto.'.png').' ' : '').$newphone;\n\t\tif ($adddivfloat) {\n\t\t\t$rep .= '</div>';\n\t\t} else {\n\t\t\t$rep .= '</span>';\n\t\t}\n\t}\n\n\treturn $rep;\n}\n\n/**\n * \tReturn an IP formated to be shown on screen\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@param\tint\t\t$mode\t\t0=return IP + country/flag, 1=return only country/flag, 2=return only IP\n * \t@return string \t\t\t\tFormated IP, with country if GeoIP module is enabled\n */\nfunction dol_print_ip($ip, $mode = 0)\n{\n\tglobal $conf, $langs;\n\n\t$ret = '';\n\n\tif (empty($mode)) {\n\t\t$ret .= $ip;\n\t}\n\n\tif ($mode != 2) {\n\t\t$countrycode = dolGetCountryCodeFromIp($ip);\n\t\tif ($countrycode) {\t// If success, countrycode is us, fr, ...\n\t\t\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/common/flags/'.$countrycode.'.png')) {\n\t\t\t\t$ret .= ' '.img_picto($countrycode.' '.$langs->trans(\"AccordingToGeoIPDatabase\"), DOL_URL_ROOT.'/theme/common/flags/'.$countrycode.'.png', '', 1);\n\t\t\t} else {\n\t\t\t\t$ret .= ' ('.$countrycode.')';\n\t\t\t}\n\t\t} else {\n\t\t\t// Nothing\n\t\t}\n\t}\n\n\treturn $ret;\n}\n\n/**\n * Return the IP of remote user.\n * Take HTTP_X_FORWARDED_FOR (defined when using proxy)\n * Then HTTP_CLIENT_IP if defined (rare)\n * Then REMOTE_ADDR (no way to be modified by user but may be wrong if user is using a proxy)\n *\n * @return\tstring\t\tIp of remote user.\n */\nfunction getUserRemoteIP()\n{\n\tif (empty($_SERVER['HTTP_X_FORWARDED_FOR']) || preg_match('/[^0-9\\.\\:,\\[\\]]/', $_SERVER['HTTP_X_FORWARDED_FOR'])) {\n\t\tif (empty($_SERVER['HTTP_CLIENT_IP']) || preg_match('/[^0-9\\.\\:,\\[\\]]/', $_SERVER['HTTP_CLIENT_IP'])) {\n\t\t\tif (empty($_SERVER[\"HTTP_CF_CONNECTING_IP\"])) {\n\t\t\t\t$ip = (empty($_SERVER['REMOTE_ADDR']) ? '' : $_SERVER['REMOTE_ADDR']);\t// value may have been the IP of the proxy and not the client\n\t\t\t} else {\n\t\t\t\t$ip = $_SERVER[\"HTTP_CF_CONNECTING_IP\"];\t// value here may have been forged by client\n\t\t\t}\n\t\t} else {\n\t\t\t$ip = $_SERVER['HTTP_CLIENT_IP']; // value is clean here but may have been forged by proxy\n\t\t}\n\t} else {\n\t\t$ip = $_SERVER['HTTP_X_FORWARDED_FOR']; // value is clean here but may have been forged by proxy\n\t}\n\treturn $ip;\n}\n\n/**\n * Return if we are using a HTTPS connexion\n * Check HTTPS (no way to be modified by user but may be empty or wrong if user is using a proxy)\n * Take HTTP_X_FORWARDED_PROTO (defined when using proxy)\n * Then HTTP_X_FORWARDED_SSL\n *\n * @return\tboolean\t\tTrue if user is using HTTPS\n */\nfunction isHTTPS()\n{\n\t$isSecure = false;\n\tif (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') {\n\t\t$isSecure = true;\n\t} elseif (!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https' || !empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on') {\n\t\t$isSecure = true;\n\t}\n\treturn $isSecure;\n}\n\n/**\n * \tReturn a country code from IP. Empty string if not found.\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@return string \t\t\t\tCountry code ('us', 'fr', ...)\n */\nfunction dolGetCountryCodeFromIp($ip)\n{\n\tglobal $conf;\n\n\t$countrycode = '';\n\n\tif (!empty($conf->geoipmaxmind->enabled)) {\n\t\t$datafile = $conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='/usr/share/GeoIP/GeoIP.dat';    Note that this must be downloaded datafile (not same than datafile provided with ubuntu packages)\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip = new DolGeoIP('country', $datafile);\n\t\t//print 'ip='.$ip.' databaseType='.$geoip->gi->databaseType.\" GEOIP_CITY_EDITION_REV1=\".GEOIP_CITY_EDITION_REV1.\"\\n\";\n\t\t$countrycode = $geoip->getCountryCodeFromIP($ip);\n\t}\n\n\treturn $countrycode;\n}\n\n\n/**\n *  Return country code for current user.\n *  If software is used inside a local network, detection may fails (we need a public ip)\n *\n *  @return     string      Country code (fr, es, it, us, ...)\n */\nfunction dol_user_country()\n{\n\tglobal $conf, $langs, $user;\n\n\t//$ret=$user->xxx;\n\t$ret = '';\n\tif (!empty($conf->geoipmaxmind->enabled)) {\n\t\t$ip = getUserRemoteIP();\n\t\t$datafile = $conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip = new DolGeoIP('country', $datafile);\n\t\t$countrycode = $geoip->getCountryCodeFromIP($ip);\n\t\t$ret = $countrycode;\n\t}\n\treturn $ret;\n}\n\n/**\n *  Format address string\n *\n *  @param\tstring\t$address    Address string, already formatted with dol_format_address()\n *  @param  int\t\t$htmlid     Html ID (for example 'gmap')\n *  @param  int\t\t$element    'thirdparty'|'contact'|'member'|'other'\n *  @param  int\t\t$id         Id of object\n *  @param\tint\t\t$noprint\tNo output. Result is the function return\n *  @param  string  $charfornl  Char to use instead of nl2br. '' means we use a standad nl2br.\n *  @return string|void\t\t\tNothing if noprint is 0, formatted address if noprint is 1\n *  @see dol_format_address()\n */\nfunction dol_print_address($address, $htmlid, $element, $id, $noprint = 0, $charfornl = '')\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$out = '';\n\n\tif ($address) {\n\t\tif ($hookmanager) {\n\t\t\t$parameters = array('element' => $element, 'id' => $id);\n\t\t\t$reshook = $hookmanager->executeHooks('printAddress', $parameters, $address);\n\t\t\t$out .= $hookmanager->resPrint;\n\t\t}\n\t\tif (empty($reshook)) {\n\t\t\tif (empty($charfornl)) {\n\t\t\t\t$out .= nl2br($address);\n\t\t\t} else {\n\t\t\t\t$out .= preg_replace('/[\\r\\n]+/', $charfornl, $address);\n\t\t\t}\n\n\t\t\t// TODO Remove this block, we can add this using the hook now\n\t\t\t$showgmap = $showomap = 0;\n\t\t\tif (($element == 'thirdparty' || $element == 'societe') && !empty($conf->google->enabled) && !empty($conf->global->GOOGLE_ENABLE_GMAPS)) {\n\t\t\t\t$showgmap = 1;\n\t\t\t}\n\t\t\tif ($element == 'contact' && !empty($conf->google->enabled) && !empty($conf->global->GOOGLE_ENABLE_GMAPS_CONTACTS)) {\n\t\t\t\t$showgmap = 1;\n\t\t\t}\n\t\t\tif ($element == 'member' && !empty($conf->google->enabled) && !empty($conf->global->GOOGLE_ENABLE_GMAPS_MEMBERS)) {\n\t\t\t\t$showgmap = 1;\n\t\t\t}\n\t\t\tif (($element == 'thirdparty' || $element == 'societe') && !empty($conf->openstreetmap->enabled) && !empty($conf->global->OPENSTREETMAP_ENABLE_MAPS)) {\n\t\t\t\t$showomap = 1;\n\t\t\t}\n\t\t\tif ($element == 'contact' && !empty($conf->openstreetmap->enabled) && !empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_CONTACTS)) {\n\t\t\t\t$showomap = 1;\n\t\t\t}\n\t\t\tif ($element == 'member' && !empty($conf->openstreetmap->enabled) && !empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_MEMBERS)) {\n\t\t\t\t$showomap = 1;\n\t\t\t}\n\t\t\tif ($showgmap) {\n\t\t\t\t$url = dol_buildpath('/google/gmaps.php?mode='.$element.'&id='.$id, 1);\n\t\t\t\t$out .= ' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t\tif ($showomap) {\n\t\t\t\t$url = dol_buildpath('/openstreetmap/maps.php?mode='.$element.'&id='.$id, 1);\n\t\t\t\t$out .= ' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'_openstreetmap\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t}\n\t}\n\tif ($noprint) {\n\t\treturn $out;\n\t} else {\n\t\tprint $out;\n\t}\n}\n\n\n/**\n *\tReturn true if email syntax is ok.\n *\n *\t@param\t    string\t\t$address    \t\t\temail (Ex: \"toto@examle.com\". Long form \"John Do <johndo@example.com>\" will be false)\n *  @param\t\tint\t\t\t$acceptsupervisorkey\tIf 1, the special string '__SUPERVISOREMAIL__' is also accepted as valid\n *\t@return     boolean     \t\t\t\t\t\ttrue if email syntax is OK, false if KO or empty string\n *  @see isValidMXRecord()\n */\nfunction isValidEmail($address, $acceptsupervisorkey = 0)\n{\n\tif ($acceptsupervisorkey && $address == '__SUPERVISOREMAIL__') {\n\t\treturn true;\n\t}\n\tif (filter_var($address, FILTER_VALIDATE_EMAIL)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *\tReturn if the domain name has a valid MX record.\n *  WARNING: This need function idn_to_ascii, checkdnsrr and getmxrr\n *\n *\t@param\t    string\t\t$domain\t    \t\t\tDomain name (Ex: \"yahoo.com\", \"yhaoo.com\", \"dolibarr.fr\")\n *\t@return     int     \t\t\t\t\t\t\t-1 if error (function not available), 0=Not valid, 1=Valid\n *  @see isValidEmail()\n */\nfunction isValidMXRecord($domain)\n{\n\tif (function_exists('idn_to_ascii') && function_exists('checkdnsrr')) {\n\t\tif (!checkdnsrr(idn_to_ascii($domain), 'MX')) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (function_exists('getmxrr')) {\n\t\t\t$mxhosts = array();\n\t\t\t$weight = array();\n\t\t\tgetmxrr(idn_to_ascii($domain), $mxhosts, $weight);\n\t\t\tif (count($mxhosts) > 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (count($mxhosts) == 1 && !empty($mxhosts[0])) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n *  Return true if phone number syntax is ok\n *  TODO Decide what to do with this\n *\n *  @param\tstring\t\t$phone\t\tphone (Ex: \"0601010101\")\n *  @return boolean     \t\t\ttrue if phone syntax is OK, false if KO or empty string\n */\nfunction isValidPhone($phone)\n{\n\treturn true;\n}\n\n\n/**\n * Make a strlen call. Works even if mbstring module not enabled\n *\n * @param   string\t\t$string\t\t\t\tString to calculate length\n * @param   string\t\t$stringencoding\t\tEncoding of string\n * @return  int\t\t\t\t\t\t\t\tLength of string\n */\nfunction dol_strlen($string, $stringencoding = 'UTF-8')\n{\n\tif (function_exists('mb_strlen')) {\n\t\treturn mb_strlen($string, $stringencoding);\n\t} else {\n\t\treturn strlen($string);\n\t}\n}\n\n/**\n * Make a substring. Works even if mbstring module is not enabled for better compatibility.\n *\n * @param\tstring\t$string\t\t\t\tString to scan\n * @param\tstring\t$start\t\t\t\tStart position\n * @param\tint\t\t$length\t\t\t\tLength (in nb of characters or nb of bytes depending on trunconbytes param)\n * @param   string\t$stringencoding\t\tPage code used for input string encoding\n * @param\tint\t\t$trunconbytes\t\t1=Length is max of bytes instead of max of characters\n * @return  string\t\t\t\t\t\tsubstring\n */\nfunction dol_substr($string, $start, $length, $stringencoding = '', $trunconbytes = 0)\n{\n\tglobal $langs;\n\n\tif (empty($stringencoding)) {\n\t\t$stringencoding = $langs->charset_output;\n\t}\n\n\t$ret = '';\n\tif (empty($trunconbytes)) {\n\t\tif (function_exists('mb_substr')) {\n\t\t\t$ret = mb_substr($string, $start, $length, $stringencoding);\n\t\t} else {\n\t\t\t$ret = substr($string, $start, $length);\n\t\t}\n\t} else {\n\t\tif (function_exists('mb_strcut')) {\n\t\t\t$ret = mb_strcut($string, $start, $length, $stringencoding);\n\t\t} else {\n\t\t\t$ret = substr($string, $start, $length);\n\t\t}\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tTruncate a string to a particular length adding '\u2026' if string larger than length.\n * \tIf length = max length+1, we do no truncate to avoid having just 1 char replaced with '\u2026'.\n *  MAIN_DISABLE_TRUNC=1 can disable all truncings\n *\n *\t@param\tstring\t$string\t\t\t\tString to truncate\n *\t@param  int\t\t$size\t\t\t\tMax string size visible (excluding \u2026). 0 for no limit. WARNING: Final string size can have 3 more chars (if we added \u2026, or if size was max+1 so it does not worse to replace with ...)\n *\t@param\tstring\t$trunc\t\t\t\tWhere to trunc: 'right', 'left', 'middle' (size must be a 2 power), 'wrap'\n * \t@param\tstring\t$stringencoding\t\tTell what is source string encoding\n *  @param\tint\t\t$nodot\t\t\t\tTruncation do not add \u2026 after truncation. So it's an exact truncation.\n *  @param  int     $display            Trunc is used to display data and can be changed for small screen. TODO Remove this param (must be dealt with CSS)\n *\t@return string\t\t\t\t\t\tTruncated string. WARNING: length is never higher than $size if $nodot is set, but can be 3 chars higher otherwise.\n */\nfunction dol_trunc($string, $size = 40, $trunc = 'right', $stringencoding = 'UTF-8', $nodot = 0, $display = 0)\n{\n\tglobal $conf;\n\n\tif (empty($size) || !empty($conf->global->MAIN_DISABLE_TRUNC)) {\n\t\treturn $string;\n\t}\n\n\tif (empty($stringencoding)) {\n\t\t$stringencoding = 'UTF-8';\n\t}\n\t// reduce for small screen\n\tif ($conf->dol_optimize_smallscreen == 1 && $display == 1) {\n\t\t$size = round($size / 3);\n\t}\n\n\t// We go always here\n\tif ($trunc == 'right') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > ($size + ($nodot ? 0 : 1))) {\n\t\t\t// If nodot is 0 and size is 1 chars more, we don't trunc and don't add \u2026\n\t\t\treturn dol_substr($newstring, 0, $size, $stringencoding).($nodot ? '' : '\u2026');\n\t\t} else {\n\t\t\t//return 'u'.$size.'-'.$newstring.'-'.dol_strlen($newstring,$stringencoding).'-'.$string;\n\t\t\treturn $string;\n\t\t}\n\t} elseif ($trunc == 'middle') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > 2 && dol_strlen($newstring, $stringencoding) > ($size + 1)) {\n\t\t\t$size1 = round($size / 2);\n\t\t\t$size2 = round($size / 2);\n\t\t\treturn dol_substr($newstring, 0, $size1, $stringencoding).'\u2026'.dol_substr($newstring, dol_strlen($newstring, $stringencoding) - $size2, $size2, $stringencoding);\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t} elseif ($trunc == 'left') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > ($size + ($nodot ? 0 : 1))) {\n\t\t\t// If nodot is 0 and size is 1 chars more, we don't trunc and don't add \u2026\n\t\t\treturn '\u2026'.dol_substr($newstring, dol_strlen($newstring, $stringencoding) - $size, $size, $stringencoding);\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t} elseif ($trunc == 'wrap') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > ($size + 1)) {\n\t\t\treturn dol_substr($newstring, 0, $size, $stringencoding).\"\\n\".dol_trunc(dol_substr($newstring, $size, dol_strlen($newstring, $stringencoding) - $size, $stringencoding), $size, $trunc);\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t} else {\n\t\treturn 'BadParam3CallingDolTrunc';\n\t}\n}\n\n/**\n *\tShow picto whatever it's its name (generic function)\n *\n *\t@param      string\t\t$titlealt         \t\tText on title tag for tooltip. Not used if param notitle is set to 1.\n *\t@param      string\t\t$picto       \t\t\tName of image file to show ('filenew', ...)\n *\t\t\t\t\t\t\t\t\t\t\t\t\tIf no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                  \t\t\t\tExample: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                  \t\t\t\tExample: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                  \t\t\t\tExample: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@param\t\tstring\t\t$moreatt\t\t\t\tAdd more attribute on img tag (For example 'class=\"pictofixedwidth\"')\n *\t@param\t\tboolean|int\t$pictoisfullpath\t\tIf true or 1, image path is a full path\n *\t@param\t\tint\t\t\t$srconly\t\t\t\tReturn only content of the src attribute of img.\n *  @param\t\tint\t\t\t$notitle\t\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *  @param\t\tstring\t\t$alt\t\t\t\t\tForce alt for bind people\n *  @param\t\tstring\t\t$morecss\t\t\t\tAdd more class css on img tag (For example 'myclascss').\n *  @param\t\tstring\t\t$marginleftonlyshort\t1 = Add a short left margin on picto, 2 = Add a larger left margin on picto, 0 = No margin left. Works for fontawesome picto only.\n *  @return     string       \t\t\t\t    \tReturn img tag\n *  @see        img_object(), img_picto_common()\n */\nfunction img_picto($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly = 0, $notitle = 0, $alt = '', $morecss = '', $marginleftonlyshort = 2)\n{\n\tglobal $conf, $langs;\n\t// We forge fullpathpicto for image to $path/img/$picto. By default, we take DOL_URL_ROOT/theme/$conf->theme/img/$picto\n\t$url = DOL_URL_ROOT;\n\t$theme = isset($conf->theme) ? $conf->theme : null;\n\t$path = 'theme/'.$theme;\n\t// Define fullpathpicto to use into src\n\tif ($pictoisfullpath) {\n\t\t// Clean parameters\n\t\tif (!preg_match('/(\\.png|\\.gif|\\.svg)$/i', $picto)) {\n\t\t\t$picto .= '.png';\n\t\t}\n\t\t$fullpathpicto = $picto;\n\t\t$reg = array();\n\t\tif (preg_match('/class=\"([^\"]+)\"/', $moreatt, $reg)) {\n\t\t\t$morecss .= ($morecss ? ' ' : '').$reg[1];\n\t\t\t$moreatt = str_replace('class=\"'.$reg[1].'\"', '', $moreatt);\n\t\t}\n\t} else {\n\t\t$pictowithouttext = preg_replace('/(\\.png|\\.gif|\\.svg)$/', '', $picto);\n\t\t$pictowithouttext = str_replace('object_', '', $pictowithouttext);\n\t\tif (empty($srconly) && in_array($pictowithouttext, array(\n\t\t\t\t'1downarrow', '1uparrow', '1leftarrow', '1rightarrow', '1uparrow_selected', '1downarrow_selected', '1leftarrow_selected', '1rightarrow_selected',\n\t\t\t\t'accountancy', 'account', 'accountline', 'action', 'add', 'address', 'angle-double-down', 'angle-double-up', 'asset',\n\t\t\t\t'bank_account', 'barcode', 'bank', 'bill', 'billa', 'billr', 'billd', 'bookmark', 'bom', 'bug', 'building',\n\t\t\t\t'calendar', 'calendarmonth', 'calendarweek', 'calendarday', 'calendarperuser', 'calendarpertype',\n\t\t\t\t'cash-register', 'category', 'chart', 'check', 'clock', 'close_title', 'cog', 'collab', 'company', 'contact', 'country', 'contract', 'conversation', 'cron', 'cubes',\n\t\t\t\t'multicurrency',\n\t\t\t\t'delete', 'dolly', 'dollyrevert', 'donation', 'download', 'dynamicprice',\n\t\t\t\t'edit', 'ellipsis-h', 'email', 'eraser', 'establishment', 'expensereport', 'external-link-alt', 'external-link-square-alt',\n\t\t\t\t'filter', 'file-code', 'file-export', 'file-import', 'file-upload', 'autofill', 'folder', 'folder-open', 'folder-plus',\n\t\t\t\t'generate', 'globe', 'globe-americas', 'graph', 'grip', 'grip_title', 'group',\n\t\t\t\t'help', 'holiday',\n\t\t\t\t'images', 'incoterm', 'info', 'intervention', 'inventory', 'intracommreport', 'knowledgemanagement',\n\t\t\t\t'label', 'language', 'link', 'list', 'list-alt', 'listlight', 'loan', 'lot', 'long-arrow-alt-right',\n\t\t\t\t'margin', 'map-marker-alt', 'member', 'meeting', 'money-bill-alt', 'movement', 'mrp', 'note', 'next',\n\t\t\t\t'off', 'on', 'order',\n\t\t\t\t'paiment', 'paragraph', 'play', 'pdf', 'phone', 'phoning', 'phoning_mobile', 'phoning_fax', 'playdisabled', 'previous', 'poll', 'pos', 'printer', 'product', 'propal', 'stock', 'resize', 'service', 'stats', 'trip',\n\t\t\t\t'security', 'setup', 'share-alt', 'sign-out', 'split', 'stripe', 'stripe-s', 'switch_off', 'switch_on', 'tools', 'unlink', 'uparrow', 'user', 'vcard', 'wrench',\n\t\t\t\t'github', 'jabber', 'skype', 'twitter', 'facebook', 'linkedin', 'instagram', 'snapchat', 'youtube', 'google-plus-g', 'whatsapp',\n\t\t\t\t'chevron-left', 'chevron-right', 'chevron-down', 'chevron-top', 'commercial', 'companies',\n\t\t\t\t'generic', 'home', 'hrm', 'members', 'products', 'invoicing',\n\t\t\t\t'partnership', 'payment', 'pencil-ruler', 'preview', 'project', 'projectpub', 'projecttask', 'question', 'refresh', 'salary', 'shipment',\n\t\t\t\t'supplier_invoice', 'supplier_invoicea', 'supplier_invoicer', 'supplier_invoiced',\n\t\t\t\t'technic', 'ticket',\n\t\t\t\t'error', 'warning',\n\t\t\t\t'recent', 'reception', 'recruitmentcandidature', 'recruitmentjobposition', 'resource',\n\t\t\t\t'shapes', 'supplier', 'supplier_proposal', 'supplier_order', 'supplier_invoice',\n\t\t\t\t'timespent', 'title_setup', 'title_accountancy', 'title_bank', 'title_hrm', 'title_agenda',\n\t\t\t\t'uncheck', 'user-cog', 'website', 'workstation',\n\t\t\t\t'conferenceorbooth', 'eventorganization'\n\t\t\t))) {\n\t\t\t$fakey = $pictowithouttext;\n\t\t\t$facolor = '';\n\t\t\t$fasize = '';\n\t\t\t$fa = 'fas';\n\t\t\tif (in_array($pictowithouttext, array('clock', 'establishment', 'generic', 'minus-square', 'object_generic', 'pdf', 'plus-square', 'timespent', 'note', 'off', 'on', 'object_bookmark', 'bookmark', 'vcard'))) {\n\t\t\t\t$fa = 'far';\n\t\t\t}\n\t\t\tif (in_array($pictowithouttext, array('black-tie', 'github', 'skype', 'twitter', 'facebook', 'linkedin', 'instagram', 'snapchat', 'stripe', 'stripe-s', 'youtube', 'google-plus-g', 'whatsapp'))) {\n\t\t\t\t$fa = 'fab';\n\t\t\t}\n\n\t\t\t$arrayconvpictotofa = array(\n\t\t\t\t'account'=>'university', 'accountline'=>'receipt', 'accountancy'=>'search-dollar', 'action'=>'calendar-alt', 'add'=>'plus-circle', 'address'=> 'address-book', 'asset'=>'money-check-alt', 'autofill'=>'fill',\n\t\t\t\t'bank_account'=>'university',\n\t\t\t\t'bill'=>'file-invoice-dollar', 'billa'=>'file-excel', 'billr'=>'file-invoice-dollar', 'billd'=>'file-medical',\n\t\t\t\t'supplier_invoice'=>'file-invoice-dollar', 'supplier_invoicea'=>'file-excel', 'supplier_invoicer'=>'file-invoice-dollar', 'supplier_invoiced'=>'file-medical',\n\t\t\t\t'bom'=>'shapes',\n\t\t\t\t'chart'=>'chart-line', 'company'=>'building', 'contact'=>'address-book', 'contract'=>'suitcase', 'collab'=>'people-arrows', 'conversation'=>'comments', 'country'=>'globe-americas', 'cron'=>'business-time',\n\t\t\t\t'donation'=>'file-alt', 'dynamicprice'=>'hand-holding-usd',\n\t\t\t\t'setup'=>'cog', 'companies'=>'building', 'products'=>'cube', 'commercial'=>'suitcase', 'invoicing'=>'coins',\n\t\t\t\t'accounting'=>'search-dollar', 'category'=>'tag', 'dollyrevert'=>'dolly',\n\t\t\t\t'generate'=>'plus-square', 'hrm'=>'user-tie', 'incoterm'=>'truck-loading',\n\t\t\t\t'margin'=>'calculator', 'members'=>'user-friends', 'ticket'=>'ticket-alt', 'globe'=>'external-link-alt', 'lot'=>'barcode',\n\t\t\t\t'email'=>'at', 'establishment'=>'building',\n\t\t\t\t'edit'=>'pencil-alt', 'graph'=>'chart-line', 'grip_title'=>'arrows-alt', 'grip'=>'arrows-alt', 'help'=>'question-circle',\n\t\t\t\t'generic'=>'file', 'holiday'=>'umbrella-beach',\n\t\t\t\t'info'=>'info-circle', 'inventory'=>'boxes', 'intracommreport'=>'globe-europe', 'knowledgemanagement'=>'ticket-alt', 'label'=>'layer-group', 'loan'=>'money-bill-alt',\n\t\t\t\t'member'=>'user-alt', 'meeting'=>'chalkboard-teacher', 'mrp'=>'cubes', 'next'=>'arrow-alt-circle-right',\n\t\t\t\t'trip'=>'wallet', 'expensereport'=>'wallet', 'group'=>'users', 'movement'=>'people-carry',\n\t\t\t\t'sign-out'=>'sign-out-alt',\n\t\t\t\t'switch_off'=>'toggle-off', 'switch_on'=>'toggle-on', 'check'=>'check', 'bookmark'=>'star', 'bookmark'=>'star',\n\t\t\t\t'bank'=>'university', 'close_title'=>'times', 'delete'=>'trash', 'edit'=>'pencil-alt', 'filter'=>'filter',\n\t\t\t\t'list-alt'=>'list-alt', 'calendar'=>'calendar-alt', 'calendarmonth'=>'calendar-alt', 'calendarweek'=>'calendar-week', 'calendarmonth'=>'calendar-alt', 'calendarday'=>'calendar-day', 'calendarperuser'=>'table',\n\t\t\t\t'intervention'=>'ambulance', 'invoice'=>'file-invoice-dollar', 'multicurrency'=>'dollar-sign', 'order'=>'file-invoice',\n\t\t\t\t'error'=>'exclamation-triangle', 'warning'=>'exclamation-triangle',\n\t\t\t\t'other'=>'square',\n\t\t\t\t'playdisabled'=>'play', 'pdf'=>'file-pdf',  'poll'=>'check-double', 'pos'=>'cash-register', 'preview'=>'binoculars', 'project'=>'project-diagram', 'projectpub'=>'project-diagram', 'projecttask'=>'tasks', 'propal'=>'file-signature',\n\t\t\t\t'partnership'=>'handshake', 'payment'=>'money-check-alt', 'phoning'=>'phone', 'phoning_mobile'=>'mobile-alt', 'phoning_fax'=>'fax', 'previous'=>'arrow-alt-circle-left', 'printer'=>'print', 'product'=>'cube', 'service'=>'concierge-bell',\n\t\t\t\t'recent' => 'question', 'reception'=>'dolly', 'recruitmentjobposition'=>'id-card-alt', 'recruitmentcandidature'=>'id-badge',\n\t\t\t\t'resize'=>'crop', 'supplier_order'=>'dol-order_supplier', 'supplier_proposal'=>'file-signature',\n\t\t\t\t'refresh'=>'redo', 'resource'=>'laptop-house',\n\t\t\t\t'security'=>'key', 'salary'=>'wallet', 'shipment'=>'dolly', 'stock'=>'box-open', 'stats' => 'chart-bar', 'split'=>'code-branch', 'stripe'=>'stripe-s',\n\t\t\t\t'supplier'=>'building', 'supplier_invoice'=>'file-invoice-dollar', 'technic'=>'cogs', 'ticket'=>'ticket-alt',\n\t\t\t\t'timespent'=>'clock', 'title_setup'=>'tools', 'title_accountancy'=>'money-check-alt', 'title_bank'=>'university', 'title_hrm'=>'umbrella-beach',\n\t\t\t\t'title_agenda'=>'calendar-alt',\n\t\t\t\t'uncheck'=>'times', 'uparrow'=>'share', 'vcard'=>'address-card',\n\t\t\t\t'jabber'=>'comment-o',\n\t\t\t\t'website'=>'globe-americas', 'workstation'=>'pallet',\n\t\t\t\t'conferenceorbooth'=>'chalkboard-teacher', 'eventorganization'=>'project-diagram'\n\t\t\t);\n\t\t\tif ($pictowithouttext == 'off') {\n\t\t\t\t$fakey = 'fa-square';\n\t\t\t\t$fasize = '1.3em';\n\t\t\t} elseif ($pictowithouttext == 'on') {\n\t\t\t\t$fakey = 'fa-check-square';\n\t\t\t\t$fasize = '1.3em';\n\t\t\t} elseif ($pictowithouttext == 'listlight') {\n\t\t\t\t$fakey = 'fa-download';\n\t\t\t\t$marginleftonlyshort = 1;\n\t\t\t} elseif ($pictowithouttext == 'printer') {\n\t\t\t\t$fakey = 'fa-print';\n\t\t\t\t$fasize = '1.2em';\n\t\t\t} elseif ($pictowithouttext == 'note') {\n\t\t\t\t$fakey = 'fa-sticky-note';\n\t\t\t\t$marginleftonlyshort = 1;\n\t\t\t} elseif (in_array($pictowithouttext, array('1uparrow', '1downarrow', '1leftarrow', '1rightarrow', '1uparrow_selected', '1downarrow_selected', '1leftarrow_selected', '1rightarrow_selected'))) {\n\t\t\t\t$convertarray = array('1uparrow'=>'caret-up', '1downarrow'=>'caret-down', '1leftarrow'=>'caret-left', '1rightarrow'=>'caret-right', '1uparrow_selected'=>'caret-up', '1downarrow_selected'=>'caret-down', '1leftarrow_selected'=>'caret-left', '1rightarrow_selected'=>'caret-right');\n\t\t\t\t$fakey = 'fa-'.$convertarray[$pictowithouttext];\n\t\t\t\tif (preg_match('/selected/', $pictowithouttext)) {\n\t\t\t\t\t$facolor = '#888';\n\t\t\t\t}\n\t\t\t\t$marginleftonlyshort = 1;\n\t\t\t} elseif (!empty($arrayconvpictotofa[$pictowithouttext])) {\n\t\t\t\t$fakey = 'fa-'.$arrayconvpictotofa[$pictowithouttext];\n\t\t\t} else {\n\t\t\t\t$fakey = 'fa-'.$pictowithouttext;\n\t\t\t}\n\n\t\t\tif (in_array($pictowithouttext, array('dollyrevert', 'member', 'members', 'contract', 'group', 'resource', 'shipment'))) {\n\t\t\t\t$morecss = 'em092';\n\t\t\t}\n\t\t\tif (in_array($pictowithouttext, array('conferenceorbooth', 'collab', 'eventorganization', 'holiday', 'info', 'project', 'workstation'))) {\n\t\t\t\t$morecss = 'em088';\n\t\t\t}\n\t\t\tif (in_array($pictowithouttext, array('asset', 'intervention', 'payment', 'loan', 'partnership', 'stock', 'technic'))) {\n\t\t\t\t$morecss = 'em080';\n\t\t\t}\n\n\t\t\t// Define $marginleftonlyshort\n\t\t\t$arrayconvpictotomarginleftonly = array(\n\t\t\t\t'bank', 'check', 'delete', 'generic', 'grip', 'grip_title', 'jabber',\n\t\t\t\t'grip_title', 'grip', 'listlight', 'note', 'on', 'off', 'playdisabled', 'printer', 'resize', 'sign-out', 'stats', 'switch_on', 'switch_off',\n\t\t\t\t'uparrow', '1uparrow', '1downarrow', '1leftarrow', '1rightarrow', '1uparrow_selected', '1downarrow_selected', '1leftarrow_selected', '1rightarrow_selected'\n\t\t\t);\n\t\t\tif (!isset($arrayconvpictotomarginleftonly[$pictowithouttext])) {\n\t\t\t\t$marginleftonlyshort = 0;\n\t\t\t}\n\n\t\t\t// Add CSS\n\t\t\t$arrayconvpictotomorcess = array(\n\t\t\t\t'action'=>'infobox-action', 'account'=>'infobox-bank_account', 'accountline'=>'infobox-bank_account', 'accountancy'=>'infobox-bank_account', 'asset'=>'infobox-bank_account',\n\t\t\t\t'bank_account'=>'bg-infobox-bank_account',\n\t\t\t\t'bill'=>'infobox-commande', 'billa'=>'infobox-commande', 'billr'=>'infobox-commande', 'billd'=>'infobox-commande',\n\t\t\t\t'conferenceorbooth'=>'infobox-project',\n\t\t\t\t'cash-register'=>'infobox-bank_account', 'contract'=>'infobox-contrat', 'check'=>'font-status4', 'collab'=>'infobox-action', 'conversation'=>'infobox-contrat',\n\t\t\t\t'donation'=>'infobox-commande', 'dolly'=>'infobox-commande',  'dollyrevert'=>'flip infobox-order_supplier',\n\t\t\t\t'ecm'=>'infobox-action', 'eventorganization'=>'infobox-project',\n\t\t\t\t'hrm'=>'infobox-adherent', 'group'=>'infobox-adherent', 'intervention'=>'infobox-contrat',\n\t\t\t\t'incoterm'=>'infobox-supplier_proposal',\n\t\t\t\t'multicurrency'=>'infobox-bank_account',\n\t\t\t\t'members'=>'infobox-adherent', 'member'=>'infobox-adherent', 'money-bill-alt'=>'infobox-bank_account',\n\t\t\t\t'order'=>'infobox-commande',\n\t\t\t\t'user'=>'infobox-adherent', 'users'=>'infobox-adherent',\n\t\t\t\t'error'=>'pictoerror', 'warning'=>'pictowarning', 'switch_on'=>'font-status4',\n\t\t\t\t'holiday'=>'infobox-holiday', 'info'=>'opacityhigh', 'invoice'=>'infobox-commande',\n\t\t\t\t'knowledgemanagement'=>'infobox-contrat rotate90', 'loan'=>'infobox-bank_account',\n\t\t\t\t'payment'=>'infobox-bank_account', 'poll'=>'infobox-adherent', 'pos'=>'infobox-bank_account', 'project'=>'infobox-project', 'projecttask'=>'infobox-project', 'propal'=>'infobox-propal',\n\t\t\t\t'reception'=>'flip', 'recruitmentjobposition'=>'infobox-adherent', 'recruitmentcandidature'=>'infobox-adherent',\n\t\t\t\t'resource'=>'infobox-action',\n\t\t\t\t'salary'=>'infobox-bank_account', 'shipment'=>'infobox-commande', 'supplier_invoice'=>'infobox-order_supplier', 'supplier_invoicea'=>'infobox-order_supplier', 'supplier_invoiced'=>'infobox-order_supplier',\n\t\t\t\t'supplier'=>'infobox-order_supplier', 'supplier_order'=>'infobox-order_supplier', 'supplier_proposal'=>'infobox-supplier_proposal',\n\t\t\t\t'ticket'=>'infobox-contrat', 'title_accountancy'=>'infobox-bank_account', 'title_hrm'=>'infobox-holiday', 'expensereport'=>'infobox-expensereport', 'trip'=>'infobox-expensereport', 'title_agenda'=>'infobox-action',\n\t\t\t\t//'title_setup'=>'infobox-action', 'tools'=>'infobox-action',\n\t\t\t\t'list-alt'=>'imgforviewmode', 'calendar'=>'imgforviewmode', 'calendarweek'=>'imgforviewmode', 'calendarmonth'=>'imgforviewmode', 'calendarday'=>'imgforviewmode', 'calendarperuser'=>'imgforviewmode'\n\t\t\t);\n\t\t\tif (!empty($arrayconvpictotomorcess[$pictowithouttext])) {\n\t\t\t\t$morecss .= ($morecss ? ' ' : '').$arrayconvpictotomorcess[$pictowithouttext];\n\t\t\t}\n\n\t\t\t// Define $color\n\t\t\t$arrayconvpictotocolor = array(\n\t\t\t\t'address'=>'#6c6aa8', 'building'=>'#6c6aa8', 'bom'=>'#a69944',\n\t\t\t\t'cog'=>'#999', 'companies'=>'#6c6aa8', 'company'=>'#6c6aa8', 'contact'=>'#6c6aa8', 'cron'=>'#555',\n\t\t\t\t'dynamicprice'=>'#a69944',\n\t\t\t\t'edit'=>'#444', 'note'=>'#999', 'error'=>'', 'help'=>'#bbb', 'listlight'=>'#999', 'language'=>'#555',\n\t\t\t\t//'dolly'=>'#a69944', 'dollyrevert'=>'#a69944',\n\t\t\t\t'lot'=>'#a69944',\n\t\t\t\t'map-marker-alt'=>'#aaa', 'mrp'=>'#a69944', 'product'=>'#a69944', 'service'=>'#a69944', 'inventory'=>'#a69944', 'stock'=>'#a69944', 'movement'=>'#a69944',\n\t\t\t\t'other'=>'#ddd',\n\t\t\t\t'partnership'=>'#6c6aa8', 'playdisabled'=>'#ccc', 'printer'=>'#444', 'projectpub'=>'#986c6a', 'reception'=>'#a69944', 'resize'=>'#444', 'rss'=>'#cba',\n\t\t\t\t//'shipment'=>'#a69944',\n\t\t\t\t'security'=>'#999', 'stats'=>'#444', 'switch_off'=>'#999', 'technic'=>'#999', 'timespent'=>'#555',\n\t\t\t\t'uncheck'=>'#800', 'uparrow'=>'#555', 'user-cog'=>'#999', 'country'=>'#aaa', 'globe-americas'=>'#aaa',\n\t\t\t\t'website'=>'#304', 'workstation'=>'#a69944'\n\t\t\t);\n\t\t\tif (isset($arrayconvpictotocolor[$pictowithouttext])) {\n\t\t\t\t$facolor = $arrayconvpictotocolor[$pictowithouttext];\n\t\t\t}\n\n\t\t\t// This snippet only needed since function img_edit accepts only one additional parameter: no separate one for css only.\n\t\t\t// class/style need to be extracted to avoid duplicate class/style validation errors when $moreatt is added to the end of the attributes.\n\t\t\t$morestyle = '';\n\t\t\t$reg = array();\n\t\t\tif (preg_match('/class=\"([^\"]+)\"/', $moreatt, $reg)) {\n\t\t\t\t$morecss .= ($morecss ? ' ' : '').$reg[1];\n\t\t\t\t$moreatt = str_replace('class=\"'.$reg[1].'\"', '', $moreatt);\n\t\t\t}\n\t\t\tif (preg_match('/style=\"([^\"]+)\"/', $moreatt, $reg)) {\n\t\t\t\t$morestyle = $reg[1];\n\t\t\t\t$moreatt = str_replace('style=\"'.$reg[1].'\"', '', $moreatt);\n\t\t\t}\n\t\t\t$moreatt = trim($moreatt);\n\n\t\t\t$enabledisablehtml = '<span class=\"'.$fa.' '.$fakey.($marginleftonlyshort ? ($marginleftonlyshort == 1 ? ' marginleftonlyshort' : ' marginleftonly') : '');\n\t\t\t$enabledisablehtml .= ($morecss ? ' '.$morecss : '').'\" style=\"'.($fasize ? ('font-size: '.$fasize.';') : '').($facolor ? (' color: '.$facolor.';') : '').($morestyle ? ' '.$morestyle : '').'\"'.(($notitle || empty($titlealt)) ? '' : ' title=\"'.dol_escape_htmltag($titlealt).'\"').($moreatt ? ' '.$moreatt : '').'>';\n\t\t\t/*if (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$enabledisablehtml .= $titlealt;\n\t\t\t}*/\n\t\t\t$enabledisablehtml .= '</span>';\n\n\t\t\treturn $enabledisablehtml;\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_OVERWRITE_THEME_PATH)) {\n\t\t\t$path = $conf->global->MAIN_OVERWRITE_THEME_PATH.'/theme/'.$theme; // If the theme does not have the same name as the module\n\t\t} elseif (!empty($conf->global->MAIN_OVERWRITE_THEME_RES)) {\n\t\t\t$path = $conf->global->MAIN_OVERWRITE_THEME_RES.'/theme/'.$conf->global->MAIN_OVERWRITE_THEME_RES; // To allow an external module to overwrite image resources whatever is activated theme\n\t\t} elseif (!empty($conf->modules_parts['theme']) && array_key_exists($theme, $conf->modules_parts['theme'])) {\n\t\t\t$path = $theme.'/theme/'.$theme; // If the theme have the same name as the module\n\t\t}\n\n\t\t// If we ask an image into $url/$mymodule/img (instead of default path)\n\t\t$regs = array();\n\t\tif (preg_match('/^([^@]+)@([^@]+)$/i', $picto, $regs)) {\n\t\t\t$picto = $regs[1];\n\t\t\t$path = $regs[2]; // $path is $mymodule\n\t\t}\n\n\t\t// Clean parameters\n\t\tif (!preg_match('/(\\.png|\\.gif|\\.svg)$/i', $picto)) {\n\t\t\t$picto .= '.png';\n\t\t}\n\t\t// If alt path are defined, define url where img file is, according to physical path\n\t\t// ex: array([\"main\"]=>\"/home/maindir/htdocs\", [\"alt0\"]=>\"/home/moddir0/htdocs\", ...)\n\t\tforeach ($conf->file->dol_document_root as $type => $dirroot) {\n\t\t\tif ($type == 'main') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// This need a lot of time, that's why enabling alternative dir like \"custom\" dir is not recommanded\n\t\t\tif (file_exists($dirroot.'/'.$path.'/img/'.$picto)) {\n\t\t\t\t$url = DOL_URL_ROOT.$conf->file->dol_url_root[$type];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// $url is '' or '/custom', $path is current theme or\n\t\t$fullpathpicto = $url.'/'.$path.'/img/'.$picto;\n\t}\n\n\tif ($srconly) {\n\t\treturn $fullpathpicto;\n\t}\n\t\t// tag title is used for tooltip on <a>, tag alt can be used with very simple text on image for blind people\n\treturn '<img src=\"'.$fullpathpicto.'\" alt=\"'.dol_escape_htmltag($alt).'\"'.(($notitle || empty($titlealt)) ? '' : ' title=\"'.dol_escape_htmltag($titlealt).'\"').($moreatt ? ' '.$moreatt.($morecss ? ' class=\"'.$morecss.'\"' : '') : ' class=\"inline-block'.($morecss ? ' '.$morecss : '').'\"').'>'; // Alt is used for accessibility, title for popup\n}\n\n/**\n *\tShow a picto called object_picto (generic function)\n *\n *\t@param\tstring\t$titlealt\t\t\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$picto\t\t\t\tName of image to show object_picto (example: user, group, action, bill, contract, propal, product, ...)\n *\t\t\t\t\t\t\t\t\t\tFor external modules use imagename@mymodule to search into directory \"img\" of module.\n *\t@param\tstring\t$moreatt\t\t\tAdd more attribute on img tag (ie: class=\"datecallink\")\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\tint\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\tint\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *\t@return\tstring\t\t\t\t\t\tReturn img tag\n *\t@see\timg_picto(), img_picto_common()\n */\nfunction img_object($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly = 0, $notitle = 0)\n{\n\tif (strpos($picto, '^') === 0) {\n\t\treturn img_picto($titlealt, str_replace('^', '', $picto), $moreatt, $pictoisfullpath, $srconly, $notitle);\n\t} else {\n\t\treturn img_picto($titlealt, 'object_'.$picto, $moreatt, $pictoisfullpath, $srconly, $notitle);\n\t}\n}\n\n/**\n *\tShow weather picto\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string|int\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory. Or level of meteo image (0-4).\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *  @param      string      $morecss            More CSS\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        img_object(), img_picto()\n */\nfunction img_weather($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0, $morecss = '')\n{\n\tglobal $conf;\n\n\tif (is_numeric($picto)) {\n\t\t//$leveltopicto = array(0=>'weather-clear.png', 1=>'weather-few-clouds.png', 2=>'weather-clouds.png', 3=>'weather-many-clouds.png', 4=>'weather-storm.png');\n\t\t//$picto = $leveltopicto[$picto];\n\t\treturn '<i class=\"fa fa-weather-level'.$picto.'\"></i>';\n\t} elseif (!preg_match('/(\\.png|\\.gif)$/i', $picto)) {\n\t\t$picto .= '.png';\n\t}\n\n\t$path = DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/weather/'.$picto;\n\n\treturn img_picto($titlealt, $path, $moreatt, 1, 0, 0, '', $morecss);\n}\n\n/**\n *\tShow picto (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        img_object(), img_picto()\n */\nfunction img_picto_common($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (!preg_match('/(\\.png|\\.gif)$/i', $picto)) {\n\t\t$picto .= '.png';\n\t}\n\n\tif ($pictoisfullpath) {\n\t\t$path = $picto;\n\t} else {\n\t\t$path = DOL_URL_ROOT.'/theme/common/'.$picto;\n\n\t\tif (!empty($conf->global->MAIN_MODULE_CAN_OVERWRITE_COMMONICONS)) {\n\t\t\t$themepath = DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/'.$picto;\n\n\t\t\tif (file_exists($themepath)) {\n\t\t\t\t$path = $themepath;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow logo action\n *\n *\t@param\tstring\t\t$titlealt       Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t\t$numaction   \tAction id or code to show\n *\t@param \tstring\t\t$picto      \tName of image file to show ('filenew', ...)\n *                                      If no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                      Example: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                      Example: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                      Example: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@return string      \t\t\t\tReturn an img tag\n */\nfunction img_action($titlealt, $numaction, $picto = '')\n{\n\tglobal $langs;\n\n\tif (empty($titlealt) || $titlealt == 'default') {\n\t\tif ($numaction == '-1' || $numaction == 'ST_NO') {\n\t\t\t$numaction = -1;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeDoNotContact');\n\t\t} elseif ($numaction == '0' || $numaction == 'ST_NEVER') {\n\t\t\t$numaction = 0;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeNeverContacted');\n\t\t} elseif ($numaction == '1' || $numaction == 'ST_TODO') {\n\t\t\t$numaction = 1;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeToContact');\n\t\t} elseif ($numaction == '2' || $numaction == 'ST_PEND') {\n\t\t\t$numaction = 2;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeContactInProcess');\n\t\t} elseif ($numaction == '3' || $numaction == 'ST_DONE') {\n\t\t\t$numaction = 3;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeContactDone');\n\t\t} else {\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeStatus '.$numaction);\n\t\t\t$numaction = 0;\n\t\t}\n\t}\n\tif (!is_numeric($numaction)) {\n\t\t$numaction = 0;\n\t}\n\n\treturn img_picto($titlealt, !empty($picto) ? $picto : 'stcomm'.$numaction.'.png');\n}\n\n/**\n *  Show pdf logo\n *\n *  @param\tstring\t\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  int\t\t    $size       Taille de l'icone : 3 = 16x16px , 2 = 14x14px\n *  @return string      \t\t\tRetourne tag img\n */\nfunction img_pdf($titlealt = 'default', $size = 3)\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Show');\n\t}\n\n\treturn img_picto($titlealt, 'pdf'.$size.'.png');\n}\n\n/**\n *\tShow logo +\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_add($titlealt = 'default', $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Add');\n\t}\n\n\treturn img_picto($titlealt, 'edit_add.png', $other);\n}\n/**\n *\tShow logo -\n *\n *\t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_remove($titlealt = 'default', $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Remove');\n\t}\n\n\treturn img_picto($titlealt, 'edit_remove.png', $other);\n}\n\n/**\n *\tShow logo editer/modifier fiche\n *\n *\t@param  string\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      If you have to put the style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Modify');\n\t}\n\n\treturn img_picto($titlealt, 'edit.png', ($float ? 'style=\"float: '.($langs->tab_translate[\"DIRECTION\"] == 'rtl' ? 'left' : 'right').'\"' : \"\").($other ? ' '.$other : ''));\n}\n\n/**\n *\tShow logo view card\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      If you have to put the style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_view($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('View');\n\t}\n\n\t$moreatt = ($float ? 'style=\"float: right\" ' : '').$other;\n\n\treturn img_picto($titlealt, 'view.png', $moreatt);\n}\n\n/**\n *  Show delete logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @param\tstring\t$morecss\tMore CSS\n *  @return string      \t\tRetourne tag img\n */\nfunction img_delete($titlealt = 'default', $other = 'class=\"pictodelete\"', $morecss = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Delete');\n\t}\n\n\treturn img_picto($titlealt, 'delete.png', $other, false, 0, 0, '', $morecss);\n}\n\n/**\n *  Show printer logo\n *\n *  @param  string  $titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  string  $other      Add more attributes on img\n *  @return string              Retourne tag img\n */\nfunction img_printer($titlealt = \"default\", $other = '')\n{\n\tglobal $langs;\n\tif ($titlealt == \"default\") {\n\t\t$titlealt = $langs->trans(\"Print\");\n\t}\n\treturn img_picto($titlealt, 'printer.png', $other);\n}\n\n/**\n *  Show split logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_split($titlealt = 'default', $other = 'class=\"pictosplit\"')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Split');\n\t}\n\n\treturn img_picto($titlealt, 'split.png', $other);\n}\n\n/**\n *\tShow help logo with cursor \"?\"\n *\n * \t@param\tint              \t$usehelpcursor\t\t1=Use help cursor, 2=Use click pointer cursor, 0=No specific cursor\n * \t@param\tint|string\t        $usealttitle\t\tText to use as alt title\n * \t@return string            \t           \t\t\tReturn tag img\n */\nfunction img_help($usehelpcursor = 1, $usealttitle = 1)\n{\n\tglobal $langs;\n\n\tif ($usealttitle) {\n\t\tif (is_string($usealttitle)) {\n\t\t\t$usealttitle = dol_escape_htmltag($usealttitle);\n\t\t} else {\n\t\t\t$usealttitle = $langs->trans('Info');\n\t\t}\n\t}\n\n\treturn img_picto($usealttitle, 'info.png', 'style=\"vertical-align: middle;'.($usehelpcursor == 1 ? ' cursor: help' : ($usehelpcursor == 2 ? ' cursor: pointer' : '')).'\"');\n}\n\n/**\n *\tShow info logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_info($titlealt = 'default')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Informations');\n\t}\n\n\treturn img_picto($titlealt, 'info.png', 'style=\"vertical-align: middle;\"');\n}\n\n/**\n *\tShow warning logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"'). If 1, add float: right. Can't be \"class\" attribute.\n *  @param\tstring  $morecss\tAdd more CSS\n *\t@return string      \t\tReturn img tag\n */\nfunction img_warning($titlealt = 'default', $moreatt = '', $morecss = 'pictowarning')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Warning');\n\t}\n\n\t//return '<div class=\"imglatecoin\">'.img_picto($titlealt, 'warning_white.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): '')).'</div>';\n\treturn img_picto($titlealt, 'warning.png', 'class=\"'.$morecss.'\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt) : ''));\n}\n\n/**\n *  Show error logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_error($titlealt = 'default')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Error');\n\t}\n\n\treturn img_picto($titlealt, 'error.png');\n}\n\n/**\n *\tShow next logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n*\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_next($titlealt = 'default', $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Next');\n\t}\n\n\t//return img_picto($titlealt, 'next.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-right paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow previous logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_previous($titlealt = 'default', $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Previous');\n\t}\n\n\t//return img_picto($titlealt, 'previous.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-left paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow down arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected   Selected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_down($titlealt = 'default', $selected = 0, $moreclass = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Down');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1downarrow_selected.png' : '1downarrow.png'), 'class=\"imgdown'.($moreclass ? \" \".$moreclass : \"\").'\"');\n}\n\n/**\n *\tShow top arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_up($titlealt = 'default', $selected = 0, $moreclass = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Up');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1uparrow_selected.png' : '1uparrow.png'), 'class=\"imgup'.($moreclass ? \" \".$moreclass : \"\").'\"');\n}\n\n/**\n *\tShow left arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_left($titlealt = 'default', $selected = 0, $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Left');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1leftarrow_selected.png' : '1leftarrow.png'), $moreatt);\n}\n\n/**\n *\tShow right arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_right($titlealt = 'default', $selected = 0, $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Right');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1rightarrow_selected.png' : '1rightarrow.png'), $moreatt);\n}\n\n/**\n *\tShow tick logo if allowed\n *\n *\t@param\tstring\t$allow\t\tAllow\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_allow($allow, $titlealt = 'default')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Active');\n\t}\n\n\tif ($allow == 1) {\n\t\treturn img_picto($titlealt, 'tick.png');\n\t}\n\n\treturn '-';\n}\n\n/**\n *\tReturn image of a credit card according to its brand name\n *\n *\t@param  string\t$brand\t\tBrand name of credit card\n *  @param  string\t$morecss\tMore CSS\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_credit_card($brand, $morecss = null)\n{\n\tif (is_null($morecss)) {\n\t\t$morecss = 'fa-2x';\n\t}\n\n\tif ($brand == 'visa' || $brand == 'Visa') {\n\t\t$brand = 'cc-visa';\n\t} elseif ($brand == 'mastercard' || $brand == 'MasterCard') {\n\t\t$brand = 'cc-mastercard';\n\t} elseif ($brand == 'amex' || $brand == 'American Express') {\n\t\t$brand = 'cc-amex';\n\t} elseif ($brand == 'discover' || $brand == 'Discover') {\n\t\t$brand = 'cc-discover';\n\t} elseif ($brand == 'jcb' || $brand == 'JCB') {\n\t\t$brand = 'cc-jcb';\n\t} elseif ($brand == 'diners' || $brand == 'Diners club') {\n\t\t$brand = 'cc-diners-club';\n\t} elseif (!in_array($brand, array('cc-visa', 'cc-mastercard', 'cc-amex', 'cc-discover', 'cc-jcb', 'cc-diners-club'))) {\n\t\t$brand = 'credit-card';\n\t}\n\n\treturn '<span class=\"fa fa-'.$brand.' fa-fw'.($morecss ? ' '.$morecss : '').'\"></span>';\n}\n\n/**\n *\tShow MIME img of a file\n *\n *\t@param\tstring\t$file\t\tFilename\n * \t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param\tstring\t$morecss\tMore css\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_mime($file, $titlealt = '', $morecss = '')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$mimetype = dol_mimetype($file, '', 1);\n\t$mimeimg = dol_mimetype($file, '', 2);\n\t$mimefa = dol_mimetype($file, '', 4);\n\n\tif (empty($titlealt)) {\n\t\t$titlealt = 'Mime type: '.$mimetype;\n\t}\n\n\t//return img_picto_common($titlealt, 'mime/'.$mimeimg, 'class=\"'.$morecss.'\"');\n\treturn '<i class=\"fa fa-'.$mimefa.' paddingright\"'.($titlealt ? ' title=\"'.$titlealt.'\"' : '').'></i>';\n}\n\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_search($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Search');\n\t}\n\n\t$img = img_picto($titlealt, 'search.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.$img.'\" ';\n\t$input .= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_searchclear($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Search');\n\t}\n\n\t$img = img_picto($titlealt, 'searchclear.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.$img.'\" ';\n\t$input .= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *\tShow information for admin users or standard users\n *\n *\t@param\tstring\t$text\t\t\t\tText info\n *\t@param  integer\t$infoonimgalt\t\tInfo is shown only on alt of star picto, otherwise it is show on output after the star picto\n *\t@param\tint\t\t$nodiv\t\t\t\tNo div\n *  @param  string  $admin      \t    '1'=Info for admin users. '0'=Info for standard users (change only the look), 'error', 'warning', 'xxx'=Other\n *  @param\tstring\t$morecss\t\t\tMore CSS ('', 'warning', 'error')\n *  @param\tstring\t$textfordropdown\tShow a text to click to dropdown the info box.\n *\t@return\tstring\t\t\t\t\t\tString with info text\n */\nfunction info_admin($text, $infoonimgalt = 0, $nodiv = 0, $admin = '1', $morecss = '', $textfordropdown = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($infoonimgalt) {\n\t\t$result = img_picto($text, 'info', 'class=\"hideonsmartphone'.($morecss ? ' '.$morecss : '').'\"');\n\t} else {\n\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\t$textfordropdown = '';\n\t\t}\n\n\t\t$class = (empty($admin) ? 'undefined' : ($admin == '1' ? 'info' : $admin));\n\t\t$result = ($nodiv ? '' : '<div class=\"'.$class.' hideonsmartphone'.($morecss ? ' '.$morecss : '').($textfordropdown ? ' hidden' : '').'\">').'<span class=\"fa fa-info-circle\" title=\"'.dol_escape_htmltag($admin ? $langs->trans('InfoAdmin') : $langs->trans('Note')).'\"></span> '.$text.($nodiv ? '' : '</div>');\n\n\t\tif ($textfordropdown) {\n\t\t\t$tmpresult .= '<span class=\"'.$class.'text opacitymedium cursorpointer\">'.$langs->trans($textfordropdown).' '.img_picto($langs->trans($textfordropdown), '1downarrow').'</span>';\n\t\t\t$tmpresult .= '<script type=\"text/javascript\" language=\"javascript\">\n\t\t\t\tjQuery(document).ready(function() {\n\t\t\t\t\tjQuery(\".'.$class.'text\").click(function() {\n\t\t\t\t\t\tconsole.log(\"toggle text\");\n\t\t\t\t\t\tjQuery(\".'.$class.'\").toggle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>';\n\n\t\t\t$result = $tmpresult.$result;\n\t\t}\n\t}\n\n\treturn $result;\n}\n\n\n/**\n *  Displays error message system with all the information to facilitate the diagnosis and the escalation of the bugs.\n *  This function must be called when a blocking technical error is encountered.\n *  However, one must try to call it only within php pages, classes must return their error through their property \"error\".\n *\n *\t@param\t \tDoliDB          $db      \tDatabase handler\n *\t@param  \tstring|string[] $error\t\tString or array of errors strings to show\n *  @param\t\tarray           $errors\t\tArray of errors\n *\t@return \tvoid\n *  @see    \tdol_htmloutput_errors()\n */\nfunction dol_print_error($db = '', $error = '', $errors = null)\n{\n\tglobal $conf, $langs, $argv;\n\tglobal $dolibarr_main_prod;\n\n\t$out = '';\n\t$syslog = '';\n\n\t// If error occurs before the $lang object was loaded\n\tif (!$langs) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n\t\t$langs = new Translate('', $conf);\n\t\t$langs->load(\"main\");\n\t}\n\n\t// Load translation files required by the error messages\n\t$langs->loadLangs(array('main', 'errors'));\n\n\tif ($_SERVER['DOCUMENT_ROOT']) {    // Mode web\n\t\t$out .= $langs->trans(\"DolibarrHasDetectedError\").\".<br>\\n\";\n\t\tif (!empty($conf->global->MAIN_FEATURES_LEVEL)) {\n\t\t\t$out .= \"You use an experimental or develop level of features, so please do NOT report any bugs or vulnerability, except if problem is confirmed after moving option MAIN_FEATURES_LEVEL back to 0.<br>\\n\";\n\t\t}\n\t\t$out .= $langs->trans(\"InformationToHelpDiagnose\").\":<br>\\n\";\n\n\t\t$out .= \"<b>\".$langs->trans(\"Date\").\":</b> \".dol_print_date(time(), 'dayhourlog').\"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"Dolibarr\").\":</b> \".DOL_VERSION.\" - https://www.dolibarr.org<br>\\n\";\n\t\tif (isset($conf->global->MAIN_FEATURES_LEVEL)) {\n\t\t\t$out .= \"<b>\".$langs->trans(\"LevelOfFeature\").\":</b> \".dol_htmlentities($conf->global->MAIN_FEATURES_LEVEL, ENT_COMPAT).\"<br>\\n\";\n\t\t}\n\t\tif (function_exists(\"phpversion\")) {\n\t\t\t$out .= \"<b>\".$langs->trans(\"PHP\").\":</b> \".phpversion().\"<br>\\n\";\n\t\t}\n\t\t$out .= \"<b>\".$langs->trans(\"Server\").\":</b> \".(isset($_SERVER[\"SERVER_SOFTWARE\"]) ? dol_htmlentities($_SERVER[\"SERVER_SOFTWARE\"], ENT_COMPAT) : '').\"<br>\\n\";\n\t\tif (function_exists(\"php_uname\")) {\n\t\t\t$out .= \"<b>\".$langs->trans(\"OS\").\":</b> \".php_uname().\"<br>\\n\";\n\t\t}\n\t\t$out .= \"<b>\".$langs->trans(\"UserAgent\").\":</b> \".(isset($_SERVER[\"HTTP_USER_AGENT\"]) ? dol_htmlentities($_SERVER[\"HTTP_USER_AGENT\"], ENT_COMPAT) : '').\"<br>\\n\";\n\t\t$out .= \"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"RequestedUrl\").\":</b> \".dol_htmlentities($_SERVER[\"REQUEST_URI\"], ENT_COMPAT).\"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"Referer\").\":</b> \".(isset($_SERVER[\"HTTP_REFERER\"]) ? dol_htmlentities($_SERVER[\"HTTP_REFERER\"], ENT_COMPAT) : '').\"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"MenuManager\").\":</b> \".(isset($conf->standard_menu) ? dol_htmlentities($conf->standard_menu, ENT_COMPAT) : '').\"<br>\\n\";\n\t\t$out .= \"<br>\\n\";\n\t\t$syslog .= \"url=\".dol_escape_htmltag($_SERVER[\"REQUEST_URI\"]);\n\t\t$syslog .= \", query_string=\".dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\t} else // Mode CLI\n\t{\n\t\t$out .= '> '.$langs->transnoentities(\"ErrorInternalErrorDetected\").\":\\n\".$argv[0].\"\\n\";\n\t\t$syslog .= \"pid=\".dol_getmypid();\n\t}\n\n\tif (!empty($conf->modules)) {\n\t\t$out .= \"<b>\".$langs->trans(\"Modules\").\":</b> \".join(', ', $conf->modules).\"<br>\\n\";\n\t}\n\n\tif (is_object($db)) {\n\t\tif ($_SERVER['DOCUMENT_ROOT']) {  // Mode web\n\t\t\t$out .= \"<b>\".$langs->trans(\"DatabaseTypeManager\").\":</b> \".$db->type.\"<br>\\n\";\n\t\t\t$out .= \"<b>\".$langs->trans(\"RequestLastAccessInError\").\":</b> \".($db->lastqueryerror() ? dol_escape_htmltag($db->lastqueryerror()) : $langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out .= \"<b>\".$langs->trans(\"ReturnCodeLastAccessInError\").\":</b> \".($db->lasterrno() ? dol_escape_htmltag($db->lasterrno()) : $langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out .= \"<b>\".$langs->trans(\"InformationLastAccessInError\").\":</b> \".($db->lasterror() ? dol_escape_htmltag($db->lasterror()) : $langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out .= \"<br>\\n\";\n\t\t} else // Mode CLI\n\t\t{\n\t\t\t// No dol_escape_htmltag for output, we are in CLI mode\n\t\t\t$out .= '> '.$langs->transnoentities(\"DatabaseTypeManager\").\":\\n\".$db->type.\"\\n\";\n\t\t\t$out .= '> '.$langs->transnoentities(\"RequestLastAccessInError\").\":\\n\".($db->lastqueryerror() ? $db->lastqueryerror() : $langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out .= '> '.$langs->transnoentities(\"ReturnCodeLastAccessInError\").\":\\n\".($db->lasterrno() ? $db->lasterrno() : $langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out .= '> '.$langs->transnoentities(\"InformationLastAccessInError\").\":\\n\".($db->lasterror() ? $db->lasterror() : $langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t}\n\t\t$syslog .= \", sql=\".$db->lastquery();\n\t\t$syslog .= \", db_error=\".$db->lasterror();\n\t}\n\n\tif ($error || $errors) {\n\t\t$langs->load(\"errors\");\n\n\t\t// Merge all into $errors array\n\t\tif (is_array($error) && is_array($errors)) {\n\t\t\t$errors = array_merge($error, $errors);\n\t\t} elseif (is_array($error)) {\n\t\t\t$errors = $error;\n\t\t} elseif (is_array($errors)) {\n\t\t\t$errors = array_merge(array($error), $errors);\n\t\t} else {\n\t\t\t$errors = array_merge(array($error));\n\t\t}\n\n\t\tforeach ($errors as $msg) {\n\t\t\tif (empty($msg)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($_SERVER['DOCUMENT_ROOT']) {  // Mode web\n\t\t\t\t$out .= \"<b>\".$langs->trans(\"Message\").\":</b> \".dol_escape_htmltag($msg).\"<br>\\n\";\n\t\t\t} else // Mode CLI\n\t\t\t{\n\t\t\t\t$out .= '> '.$langs->transnoentities(\"Message\").\":\\n\".$msg.\"\\n\";\n\t\t\t}\n\t\t\t$syslog .= \", msg=\".$msg;\n\t\t}\n\t}\n\tif (empty($dolibarr_main_prod) && $_SERVER['DOCUMENT_ROOT'] && function_exists('xdebug_print_function_stack') && function_exists('xdebug_call_file')) {\n\t\txdebug_print_function_stack();\n\t\t$out .= '<b>XDebug informations:</b>'.\"<br>\\n\";\n\t\t$out .= 'File: '.xdebug_call_file().\"<br>\\n\";\n\t\t$out .= 'Line: '.xdebug_call_line().\"<br>\\n\";\n\t\t$out .= 'Function: '.xdebug_call_function().\"<br>\\n\";\n\t\t$out .= \"<br>\\n\";\n\t}\n\n\t// Return a http error code if possible\n\tif (!headers_sent()) {\n\t\thttp_response_code(500);\n\t}\n\n\tif (empty($dolibarr_main_prod)) {\n\t\tprint $out;\n\t} else {\n\t\tif (empty($langs->defaultlang)) {\n\t\t\t$langs->setDefaultLang();\n\t\t}\n\t\t$langs->loadLangs(array(\"main\", \"errors\")); // Reload main because language may have been set only on previous line so we have to reload files we need.\n\t\t// This should not happen, except if there is a bug somewhere. Enabled and check log in such case.\n\t\tprint 'This website or feature is currently temporarly not available or failed after a technical error.<br><br>This may be due to a maintenance operation. Current status of operation ('.dol_print_date(dol_now(), 'dayhourrfc').') are on next line...<br><br>'.\"\\n\";\n\t\tprint $langs->trans(\"DolibarrHasDetectedError\").'. ';\n\t\tprint $langs->trans(\"YouCanSetOptionDolibarrMainProdToZero\");\n\t\tdefine(\"MAIN_CORE_ERROR\", 1);\n\t}\n\n\tdol_syslog(\"Error \".$syslog, LOG_ERR);\n}\n\n/**\n * Show a public email and error code to contact if technical error\n *\n * @param\tstring\t$prefixcode\t\tPrefix of public error code\n * @param   string  $errormessage   Complete error message\n * @param\tarray\t$errormessages\tArray of error messages\n * @param\tstring\t$morecss\t\tMore css\n * @param\tstring\t$email\t\t\tEmail\n * @return\tvoid\n */\nfunction dol_print_error_email($prefixcode, $errormessage = '', $errormessages = array(), $morecss = 'error', $email = '')\n{\n\tglobal $langs, $conf;\n\n\tif (empty($email)) {\n\t\t$email = $conf->global->MAIN_INFO_SOCIETE_MAIL;\n\t}\n\n\t$langs->load(\"errors\");\n\t$now = dol_now();\n\n\tprint '<br><div class=\"center login_main_message\"><div class=\"'.$morecss.'\">';\n\tprint $langs->trans(\"ErrorContactEMail\", $email, $prefixcode.dol_print_date($now, '%Y%m%d%H%M%S'));\n\tif ($errormessage) {\n\t\tprint '<br><br>'.$errormessage;\n\t}\n\tif (is_array($errormessages) && count($errormessages)) {\n\t\tforeach ($errormessages as $mesgtoshow) {\n\t\t\tprint '<br><br>'.$mesgtoshow;\n\t\t}\n\t}\n\tprint '</div></div>';\n}\n\n/**\n *\tShow title line of an array\n *\n *\t@param\tstring\t$name        Label of field\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  Options of attribute td (\"\" by defaut, example: 'align=\"center\"')\n *\t@param  string\t$sortfield   Current field used to sort\n *\t@param  string\t$sortorder   Current sort order\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *  @param\tstring\t$tooltip\t Tooltip\n *  @param\tstring\t$forcenowrapcolumntitle\t\tNo need for use 'wrapcolumntitle' css style\n *\t@return\tvoid\n */\nfunction print_liste_field_titre($name, $file = \"\", $field = \"\", $begin = \"\", $moreparam = \"\", $moreattrib = \"\", $sortfield = \"\", $sortorder = \"\", $prefix = \"\", $tooltip = \"\", $forcenowrapcolumntitle = 0)\n{\n\tprint getTitleFieldOfList($name, 0, $file, $field, $begin, $moreparam, $moreattrib, $sortfield, $sortorder, $prefix, 0, $tooltip, $forcenowrapcolumntitle);\n}\n\n/**\n *\tGet title line of an array\n *\n *\t@param\tstring\t$name        \t\tTranslation key of field to show or complete HTML string to show\n *\t@param\tint\t\t$thead\t\t \t\t0=To use with standard table format, 1=To use inside <thead><tr>, 2=To use with <div>\n *\t@param\tstring\t$file        \t\tUrl used when we click on sort picto\n *\t@param\tstring\t$field       \t\tField to use for new sorting. Empty if this field is not sortable. Example \"t.abc\" or \"t.abc,t.def\"\n *\t@param\tstring\t$begin       \t\t(\"\" by defaut)\n *\t@param\tstring\t$moreparam   \t\tAdd more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  \t\tAdd more attributes on th (\"\" by defaut, example: 'align=\"center\"'). To add more css class, use param $prefix.\n *\t@param  string\t$sortfield   \t\tCurrent field used to sort (Ex: 'd.datep,d.id')\n *\t@param  string\t$sortorder   \t\tCurrent sort order (Ex: 'asc,desc')\n *  @param\tstring\t$prefix\t\t \t\tPrefix for css. Use space after prefix to add your own CSS tag, for example 'mycss '.\n *  @param\tstring\t$disablesortlink\t1=Disable sort link\n *  @param\tstring\t$tooltip\t \t\tTooltip\n *  @param\tstring\t$forcenowrapcolumntitle\t\tNo need for use 'wrapcolumntitle' css style\n *\t@return\tstring\n */\nfunction getTitleFieldOfList($name, $thead = 0, $file = \"\", $field = \"\", $begin = \"\", $moreparam = \"\", $moreattrib = \"\", $sortfield = \"\", $sortorder = \"\", $prefix = \"\", $disablesortlink = 0, $tooltip = '', $forcenowrapcolumntitle = 0)\n{\n\tglobal $conf, $langs, $form;\n\t//print \"$name, $file, $field, $begin, $options, $moreattrib, $sortfield, $sortorder<br>\\n\";\n\n\tif ($moreattrib == 'class=\"right\"') {\n\t\t$prefix .= 'right '; // For backward compatibility\n\t}\n\n\t$sortorder = strtoupper($sortorder);\n\t$out = '';\n\t$sortimg = '';\n\n\t$tag = 'th';\n\tif ($thead == 2) {\n\t\t$tag = 'div';\n\t}\n\n\t$tmpsortfield = explode(',', $sortfield);\n\t$sortfield1 = trim($tmpsortfield[0]); // If $sortfield is 'd.datep,d.id', it becomes 'd.datep'\n\t$tmpfield = explode(',', $field);\n\t$field1 = trim($tmpfield[0]); // If $field is 'd.datep,d.id', it becomes 'd.datep'\n\n\tif (empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) && empty($forcenowrapcolumntitle)) {\n\t\t$prefix = 'wrapcolumntitle '.$prefix;\n\t}\n\n\t//var_dump('field='.$field.' field1='.$field1.' sortfield='.$sortfield.' sortfield1='.$sortfield1);\n\t// If field is used as sort criteria we use a specific css class liste_titre_sel\n\t// Example if (sortfield,field)=(\"nom\",\"xxx.nom\") or (sortfield,field)=(\"nom\",\"nom\")\n\t$liste_titre = 'liste_titre';\n\tif ($field1 && ($sortfield1 == $field1 || $sortfield1 == preg_replace(\"/^[^\\.]+\\./\", \"\", $field1))) {\n\t\t$liste_titre = 'liste_titre_sel';\n\t}\n\t$out .= '<'.$tag.' class=\"'.$prefix.$liste_titre.'\" '.$moreattrib;\n\t//$out .= (($field && empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) && preg_match('/^[a-zA-Z_0-9\\s\\.\\-:&;]*$/', $name)) ? ' title=\"'.dol_escape_htmltag($langs->trans($name)).'\"' : '');\n\t$out .= ($name && empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) && empty($forcenowrapcolumntitle) && !dol_textishtml($name)) ? ' title=\"'.dol_escape_htmltag($langs->trans($name)).'\"' : '';\n\t$out .= '>';\n\n\tif (empty($thead) && $field && empty($disablesortlink)) {    // If this is a sort field\n\t\t$options = preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i', '', (is_scalar($moreparam) ? $moreparam : ''));\n\t\t$options = preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i', '', $options);\n\t\t$options = preg_replace('/&+/i', '&', $options);\n\t\tif (!preg_match('/^&/', $options)) {\n\t\t\t$options = '&'.$options;\n\t\t}\n\n\t\t$sortordertouseinlink = '';\n\t\tif ($field1 != $sortfield1) { // We are on another field than current sorted field\n\t\t\tif (preg_match('/^DESC/i', $sortorder)) {\n\t\t\t\t$sortordertouseinlink .= str_repeat('desc,', count(explode(',', $field)));\n\t\t\t} else // We reverse the var $sortordertouseinlink\n\t\t\t{\n\t\t\t\t$sortordertouseinlink .= str_repeat('asc,', count(explode(',', $field)));\n\t\t\t}\n\t\t} else // We are on field that is the first current sorting criteria\n\t\t{\n\t\t\tif (preg_match('/^ASC/i', $sortorder)) {\t// We reverse the var $sortordertouseinlink\n\t\t\t\t$sortordertouseinlink .= str_repeat('desc,', count(explode(',', $field)));\n\t\t\t} else {\n\t\t\t\t$sortordertouseinlink .= str_repeat('asc,', count(explode(',', $field)));\n\t\t\t}\n\t\t}\n\t\t$sortordertouseinlink = preg_replace('/,$/', '', $sortordertouseinlink);\n\t\t$out .= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$field.'&sortorder='.$sortordertouseinlink.'&begin='.$begin.$options.'\"';\n\t\t//$out .= (empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) ? ' title=\"'.dol_escape_htmltag($langs->trans($name)).'\"' : '');\n\t\t$out .= '>';\n\t}\n\n\tif ($tooltip) {\n\t\t// You can also use 'TranslationString:keyfortooltiponlick' for a tooltip on click.\n\t\t$tmptooltip = explode(':', $tooltip);\n\t\t$out .= $form->textwithpicto($langs->trans($name), $langs->trans($tmptooltip[0]), 1, 'help', '', 0, 3, (empty($tmptooltip[1]) ? '' : 'extra_'.str_replace('.', '_', $field).'_'.$tmptooltip[1]));\n\t} else {\n\t\t$out .= $langs->trans($name);\n\t}\n\n\tif (empty($thead) && $field && empty($disablesortlink)) {    // If this is a sort field\n\t\t$out .= '</a>';\n\t}\n\n\tif (empty($thead) && $field) {    // If this is a sort field\n\t\t$options = preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i', '', (is_scalar($moreparam) ? $moreparam : ''));\n\t\t$options = preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i', '', $options);\n\t\t$options = preg_replace('/&+/i', '&', $options);\n\t\tif (!preg_match('/^&/', $options)) {\n\t\t\t$options = '&'.$options;\n\t\t}\n\n\t\tif (!$sortorder || $field1 != $sortfield1) {\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t} else {\n\t\t\tif (preg_match('/^DESC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",1).'</a>';\n\t\t\t\t$sortimg .= '<span class=\"nowrap\">'.img_up(\"Z-A\", 0, 'paddingleft').'</span>';\n\t\t\t}\n\t\t\tif (preg_match('/^ASC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",1).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t\t\t$sortimg .= '<span class=\"nowrap\">'.img_down(\"A-Z\", 0, 'paddingleft').'</span>';\n\t\t\t}\n\t\t}\n\t}\n\n\t$out .= $sortimg;\n\n\t$out .= '</'.$tag.'>';\n\n\treturn $out;\n}\n\n/**\n *\tShow a title.\n *\n *\t@param\tstring\t$title\t\t\tTitle to show\n *\t@return\tstring\t\t\t\t\tTitle to show\n *  @deprecated\t\t\t\t\t\tUse load_fiche_titre instead\n *  @see load_fiche_titre()\n */\nfunction print_titre($title)\n{\n\tdol_syslog(__FUNCTION__.\" is deprecated\", LOG_WARNING);\n\n\tprint '<div class=\"titre\">'.$title.'</div>';\n}\n\n/**\n *\tShow a title with picto\n *\n *\t@param\tstring\t$title\t\t\t\tTitle to show\n *\t@param\tstring\t$mesg\t\t\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n * \t@return\tvoid\n *  @deprecated Use print load_fiche_titre instead\n */\nfunction print_fiche_titre($title, $mesg = '', $picto = 'generic', $pictoisfullpath = 0, $id = '')\n{\n\tprint load_fiche_titre($title, $mesg, $picto, $pictoisfullpath, $id);\n}\n\n/**\n *\tLoad a title with picto\n *\n *\t@param\tstring\t$titre\t\t\t\tTitle to show\n *\t@param\tstring\t$morehtmlright\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tstring\t$id\t\t\t\t\tTo force an id on html objects\n *  @param  string  $morecssontable     More css on table\n *\t@param\tstring\t$morehtmlcenter\t\tAdded message to show on center\n * \t@return\tstring\n *  @see print_barre_liste()\n */\nfunction load_fiche_titre($titre, $morehtmlright = '', $picto = 'generic', $pictoisfullpath = 0, $id = '', $morecssontable = '', $morehtmlcenter = '')\n{\n\tglobal $conf;\n\n\t$return = '';\n\n\tif ($picto == 'setup') {\n\t\t$picto = 'generic';\n\t}\n\n\t$return .= \"\\n\";\n\t$return .= '<table '.($id ? 'id=\"'.$id.'\" ' : '').'class=\"centpercent notopnoleftnoright table-fiche-title'.($morecssontable ? ' '.$morecssontable : '').'\">'; // maring bottom must be same than into print_barre_list\n\t$return .= '<tr class=\"titre\">';\n\tif ($picto) {\n\t\t$return .= '<td class=\"nobordernopadding widthpictotitle valignmiddle col-picto\">'.img_picto('', $picto, 'class=\"valignmiddle widthpictotitle pictotitle\"', $pictoisfullpath).'</td>';\n\t}\n\t$return .= '<td class=\"nobordernopadding valignmiddle col-title\">';\n\t$return .= '<div class=\"titre inline-block\">'.$titre.'</div>';\n\t$return .= '</td>';\n\tif (dol_strlen($morehtmlcenter)) {\n\t\t$return .= '<td class=\"nobordernopadding center valignmiddle\">'.$morehtmlcenter.'</td>';\n\t}\n\tif (dol_strlen($morehtmlright)) {\n\t\t$return .= '<td class=\"nobordernopadding titre_right wordbreakimp right valignmiddle\">'.$morehtmlright.'</td>';\n\t}\n\t$return .= '</tr></table>'.\"\\n\";\n\n\treturn $return;\n}\n\n/**\n *\tPrint a title with navigation controls for pagination\n *\n *\t@param\tstring\t    $titre\t\t\t\tTitle to show (required)\n *\t@param\tint   \t    $page\t\t\t\tNumero of page to show in navigation links (required)\n *\t@param\tstring\t    $file\t\t\t\tUrl of page (required)\n *\t@param\tstring\t    $options         \tMore parameters for links ('' by default, does not include sortfield neither sortorder). Value must be 'urlencoded' before calling function.\n *\t@param\tstring    \t$sortfield       \tField to sort on ('' by default)\n *\t@param\tstring\t    $sortorder       \tOrder to sort ('' by default)\n *\t@param\tstring\t    $morehtmlcenter     String in the middle ('' by default). We often find here string $massaction comming from $form->selectMassAction()\n *\t@param\tint\t\t    $num\t\t\t\tNumber of records found by select with limit+1\n *\t@param\tint|string  $totalnboflines\t\tTotal number of records/lines for all pages (if known). Use a negative value of number to not show number. Use '' if unknown.\n *\t@param\tstring\t    $picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t    $pictoisfullpath\t1=Icon name is a full absolute url of image\n *  @param\tstring\t    $morehtmlright\t\tMore html to show (after arrows)\n *  @param  string      $morecss            More css to the table\n *  @param  int         $limit              Max number of lines (-1 = use default, 0 = no limit, > 0 = limit).\n *  @param  int         $hideselectlimit    Force to hide select limit\n *  @param  int         $hidenavigation     Force to hide all navigation tools\n *  @param  int\t\t\t$pagenavastextinput 1=Do not suggest list of pages to navigate but suggest the page number into an input field.\n *  @param\tstring\t\t$morehtmlrightbeforearrow\tMore html to show (before arrows)\n *\t@return\tvoid\n */\nfunction print_barre_liste($titre, $page, $file, $options = '', $sortfield = '', $sortorder = '', $morehtmlcenter = '', $num = -1, $totalnboflines = '', $picto = 'generic', $pictoisfullpath = 0, $morehtmlright = '', $morecss = '', $limit = -1, $hideselectlimit = 0, $hidenavigation = 0, $pagenavastextinput = 0, $morehtmlrightbeforearrow = '')\n{\n\tglobal $conf, $langs;\n\n\t$savlimit = $limit;\n\t$savtotalnboflines = $totalnboflines;\n\t$totalnboflines = abs((int) $totalnboflines);\n\n\tif ($picto == 'setup') {\n\t\t$picto = 'title_setup.png';\n\t}\n\tif (($conf->browser->name == 'ie') && $picto == 'generic') {\n\t\t$picto = 'title.gif';\n\t}\n\tif ($limit < 0) {\n\t\t$limit = $conf->liste_limit;\n\t}\n\tif ($savlimit != 0 && (($num > $limit) || ($num == -1) || ($limit == 0))) {\n\t\t$nextpage = 1;\n\t} else {\n\t\t$nextpage = 0;\n\t}\n\t//print 'totalnboflines='.$totalnboflines.'-savlimit='.$savlimit.'-limit='.$limit.'-num='.$num.'-nextpage='.$nextpage;\n\n\tprint \"\\n\";\n\tprint \"<!-- Begin title -->\\n\";\n\tprint '<table class=\"centpercent notopnoleftnoright table-fiche-title'.($morecss ? ' '.$morecss : '').'\"><tr>'; // maring bottom must be same than into load_fiche_tire\n\n\t// Left\n\n\tif ($picto && $titre) {\n\t\tprint '<td class=\"nobordernopadding widthpictotitle valignmiddle col-picto\">'.img_picto('', $picto, 'class=\"valignmiddle pictotitle widthpictotitle\"', $pictoisfullpath).'</td>';\n\t}\n\tprint '<td class=\"nobordernopadding valignmiddle col-title\">';\n\tprint '<div class=\"titre inline-block\">'.$titre;\n\tif (!empty($titre) && $savtotalnboflines >= 0 && (string) $savtotalnboflines != '') {\n\t\tprint '<span class=\"opacitymedium colorblack paddingleft\">('.$totalnboflines.')</span>';\n\t}\n\tprint '</div></td>';\n\n\t// Center\n\tif ($morehtmlcenter) {\n\t\tprint '<td class=\"nobordernopadding center valignmiddle\">'.$morehtmlcenter.'</td>';\n\t}\n\n\t// Right\n\tprint '<td class=\"nobordernopadding valignmiddle right\">';\n\tprint '<input type=\"hidden\" name=\"pageplusoneold\" value=\"'.((int) $page + 1).'\">';\n\tif ($sortfield) {\n\t\t$options .= \"&sortfield=\".urlencode($sortfield);\n\t}\n\tif ($sortorder) {\n\t\t$options .= \"&sortorder=\".urlencode($sortorder);\n\t}\n\t// Show navigation bar\n\t$pagelist = '';\n\tif ($savlimit != 0 && ($page > 0 || $num > $limit)) {\n\t\tif ($totalnboflines) {\t// If we know total nb of lines\n\t\t\t// Define nb of extra page links before and after selected page + ... + first or last\n\t\t\t$maxnbofpage = (empty($conf->dol_optimize_smallscreen) ? 4 : 0);\n\n\t\t\tif ($limit > 0) {\n\t\t\t\t$nbpages = ceil($totalnboflines / $limit);\n\t\t\t} else {\n\t\t\t\t$nbpages = 1;\n\t\t\t}\n\t\t\t$cpt = ($page - $maxnbofpage);\n\t\t\tif ($cpt < 0) {\n\t\t\t\t$cpt = 0;\n\t\t\t}\n\n\t\t\tif ($cpt >= 1) {\n\t\t\t\tif (empty($pagenavastextinput)) {\n\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page=0'.$options.'\">1</a></li>';\n\t\t\t\t\tif ($cpt > 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"inactive\">...</span></li>';\n\t\t\t\t\t} elseif ($cpt == 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page=1'.$options.'\">2</a></li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tif ($pagenavastextinput) {\n\t\t\t\t\tif ($cpt == $page) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><input type=\"text\" class=\"width25 center pageplusone\" name=\"pageplusone\" value=\"'.($page + 1).'\"></li>';\n\t\t\t\t\t\t$pagelist .= '/';\n\t\t\t\t\t\t//if (($cpt + 1) < $nbpages) $pagelist .= '/';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($cpt == $page) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"active\">'.($page + 1).'</span></li>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.$cpt.$options.'\">'.($cpt + 1).'</a></li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$cpt++;\n\t\t\t} while ($cpt < $nbpages && $cpt <= ($page + $maxnbofpage));\n\n\t\t\tif (empty($pagenavastextinput)) {\n\t\t\t\tif ($cpt < $nbpages) {\n\t\t\t\t\tif ($cpt < $nbpages - 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"inactive\">...</span></li>';\n\t\t\t\t\t} elseif ($cpt == $nbpages - 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.($nbpages - 2).$options.'\">'.($nbpages - 1).'</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.($nbpages - 1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//var_dump($page.' '.$cpt.' '.$nbpages);\n\t\t\t\t//if (($page + 1) < $nbpages) {\n\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.($nbpages - 1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t\t//}\n\t\t\t}\n\t\t} else {\n\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"active\">'.($page + 1).\"</li>\";\n\t\t}\n\t}\n\n\tif ($savlimit || $morehtmlright || $morehtmlrightbeforearrow) {\n\t\tprint_fleche_navigation($page, $file, $options, $nextpage, $pagelist, $morehtmlright, $savlimit, $totalnboflines, $hideselectlimit, $morehtmlrightbeforearrow); // output the div and ul for previous/last completed with page numbers into $pagelist\n\t}\n\n\t// js to autoselect page field on focus\n\tif ($pagenavastextinput) {\n\t\tprint ajax_autoselect('.pageplusone');\n\t}\n\n\tprint '</td>';\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"<!-- End title -->\\n\\n\";\n}\n\n/**\n *\tFunction to show navigation arrows into lists\n *\n *\t@param\tint\t\t\t\t$page\t\t\t\tNumber of page\n *\t@param\tstring\t\t\t$file\t\t\t\tPage URL (in most cases provided with $_SERVER[\"PHP_SELF\"])\n *\t@param\tstring\t\t\t$options         \tOther url parameters to propagate (\"\" by default, may include sortfield and sortorder)\n *\t@param\tinteger\t\t\t$nextpage\t    \tDo we show a next page button\n *\t@param\tstring\t\t\t$betweenarrows\t\tHTML content to show between arrows. MUST contains '<li> </li>' tags or '<li><span> </span></li>'.\n *  @param\tstring\t\t\t$afterarrows\t\tHTML content to show after arrows. Must NOT contains '<li> </li>' tags.\n *  @param  int             $limit              Max nb of record to show  (-1 = no combo with limit, 0 = no limit, > 0 = limit)\n *\t@param\tint\t\t        $totalnboflines\t\tTotal number of records/lines for all pages (if known)\n *  @param  int             $hideselectlimit    Force to hide select limit\n *  @param\tstring\t\t\t$beforearrows\t\tHTML content to show before arrows. Must NOT contains '<li> </li>' tags.\n *\t@return\tvoid\n */\nfunction print_fleche_navigation($page, $file, $options = '', $nextpage = 0, $betweenarrows = '', $afterarrows = '', $limit = -1, $totalnboflines = 0, $hideselectlimit = 0, $beforearrows = '')\n{\n\tglobal $conf, $langs;\n\n\tprint '<div class=\"pagination\"><ul>';\n\tif ($beforearrows) {\n\t\tprint '<li class=\"paginationbeforearrows\">';\n\t\tprint $beforearrows;\n\t\tprint '</li>';\n\t}\n\tif ((int) $limit > 0 && empty($hideselectlimit)) {\n\t\t$pagesizechoices = '10:10,15:15,20:20,30:30,40:40,50:50,100:100,250:250,500:500,1000:1000,5000:5000,25000:25000';\n\t\t//$pagesizechoices.=',0:'.$langs->trans(\"All\");     // Not yet supported\n\t\t//$pagesizechoices.=',2:2';\n\t\tif (!empty($conf->global->MAIN_PAGESIZE_CHOICES)) {\n\t\t\t$pagesizechoices = $conf->global->MAIN_PAGESIZE_CHOICES;\n\t\t}\n\n\t\tprint '<li class=\"pagination\">';\n\t\tprint '<select class=\"flat selectlimit\" name=\"limit\" title=\"'.dol_escape_htmltag($langs->trans(\"MaxNbOfRecordPerPage\")).'\">';\n\t\t$tmpchoice = explode(',', $pagesizechoices);\n\t\t$tmpkey = $limit.':'.$limit;\n\t\tif (!in_array($tmpkey, $tmpchoice)) {\n\t\t\t$tmpchoice[] = $tmpkey;\n\t\t}\n\t\t$tmpkey = $conf->liste_limit.':'.$conf->liste_limit;\n\t\tif (!in_array($tmpkey, $tmpchoice)) {\n\t\t\t$tmpchoice[] = $tmpkey;\n\t\t}\n\t\tasort($tmpchoice, SORT_NUMERIC);\n\t\tforeach ($tmpchoice as $val) {\n\t\t\t$selected = '';\n\t\t\t$tmp = explode(':', $val);\n\t\t\t$key = $tmp[0];\n\t\t\t$val = $tmp[1];\n\t\t\tif ($key != '' && $val != '') {\n\t\t\t\tif ((int) $key == (int) $limit) {\n\t\t\t\t\t$selected = ' selected=\"selected\"';\n\t\t\t\t}\n\t\t\t\tprint '<option name=\"'.$key.'\"'.$selected.'>'.dol_escape_htmltag($val).'</option>'.\"\\n\";\n\t\t\t}\n\t\t}\n\t\tprint '</select>';\n\t\tif ($conf->use_javascript_ajax) {\n\t\t\tprint '<!-- JS CODE TO ENABLE select limit to launch submit of page -->\n            \t\t<script>\n                \tjQuery(document).ready(function () {\n            \t  \t\tjQuery(\".selectlimit\").change(function() {\n                            console.log(\"Change limit. Send submit\");\n                            $(this).parents(\\'form:first\\').submit();\n            \t  \t\t});\n                \t});\n            \t\t</script>\n                ';\n\t\t}\n\t\tprint '</li>';\n\t}\n\tif ($page > 0) {\n\t\tprint '<li class=\"pagination paginationpage paginationpageleft\"><a class=\"paginationprevious\" href=\"'.$file.'?page='.($page - 1).$options.'\"><i class=\"fa fa-chevron-left\" title=\"'.dol_escape_htmltag($langs->trans(\"Previous\")).'\"></i></a></li>';\n\t}\n\tif ($betweenarrows) {\n\t\tprint '<!--<div class=\"betweenarrows nowraponall inline-block\">-->';\n\t\tprint $betweenarrows;\n\t\tprint '<!--</div>-->';\n\t}\n\tif ($nextpage > 0) {\n\t\tprint '<li class=\"pagination paginationpage paginationpageright\"><a class=\"paginationnext\" href=\"'.$file.'?page='.($page + 1).$options.'\"><i class=\"fa fa-chevron-right\" title=\"'.dol_escape_htmltag($langs->trans(\"Next\")).'\"></i></a></li>';\n\t}\n\tif ($afterarrows) {\n\t\tprint '<li class=\"paginationafterarrows\">';\n\t\tprint $afterarrows;\n\t\tprint '</li>';\n\t}\n\tprint '</ul></div>'.\"\\n\";\n}\n\n\n/**\n *\tReturn a string with VAT rate label formated for view output\n *\tUsed into pdf and HTML pages\n *\n *\t@param\tstring\t$rate\t\t\tRate value to format ('19.6', '19,6', '19.6%', '19,6%', '19.6 (CODEX)', ...)\n *  @param\tboolean\t$addpercent\t\tAdd a percent % sign in output\n *\t@param\tint\t\t$info_bits\t\tMiscellaneous information on vat (0=Default, 1=French NPR vat)\n *\t@param\tint\t\t$usestarfornpr\t-1=Never show, 0 or 1=Use '*' for NPR vat rates\n *  @return\tstring\t\t\t\t\tString with formated amounts ('19,6' or '19,6%' or '8.5% (NPR)' or '8.5% *' or '19,6 (CODEX)')\n */\nfunction vatrate($rate, $addpercent = false, $info_bits = 0, $usestarfornpr = 0)\n{\n\t$morelabel = '';\n\n\tif (preg_match('/%/', $rate)) {\n\t\t$rate = str_replace('%', '', $rate);\n\t\t$addpercent = true;\n\t}\n\tif (preg_match('/\\((.*)\\)/', $rate, $reg)) {\n\t\t$morelabel = ' ('.$reg[1].')';\n\t\t$rate = preg_replace('/\\s*'.preg_quote($morelabel, '/').'/', '', $rate);\n\t}\n\tif (preg_match('/\\*/', $rate)) {\n\t\t$rate = str_replace('*', '', $rate);\n\t\t$info_bits |= 1;\n\t}\n\n\t// If rate is '9/9/9' we don't change it.  If rate is '9.000' we apply price()\n\tif (!preg_match('/\\//', $rate)) {\n\t\t$ret = price($rate, 0, '', 0, 0).($addpercent ? '%' : '');\n\t} else {\n\t\t// TODO Split on / and output with a price2num to have clean numbers without ton of 000.\n\t\t$ret = $rate.($addpercent ? '%' : '');\n\t}\n\tif (($info_bits & 1) && $usestarfornpr >= 0) {\n\t\t$ret .= ' *';\n\t}\n\t$ret .= $morelabel;\n\treturn $ret;\n}\n\n\n/**\n *\t\tFunction to format a value into an amount for visual output\n *\t\tFunction used into PDF and HTML pages\n *\n *\t\t@param\tfloat\t\t$amount\t\t\tAmount to format\n *\t\t@param\tinteger\t\t$form\t\t\tType of format, HTML or not (not by default)\n *\t\t@param\tTranslate\t$outlangs\t\tObject langs for output\n *\t\t@param\tint\t\t\t$trunc\t\t\t1=Truncate if there is more decimals than MAIN_MAX_DECIMALS_SHOWN (default), 0=Does not truncate. Deprecated because amount are rounded (to unit or total amount accurancy) before beeing inserted into database or after a computation, so this parameter should be useless.\n *\t\t@param\tint\t\t\t$rounding\t\tMinimum number of decimal to show. If 0, no change, if -1, we use min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOT)\n *\t\t@param\tint\t\t\t$forcerounding\tForce the number of decimal to forcerounding decimal (-1=do not force)\n *\t\t@param\tstring\t\t$currency_code\tTo add currency symbol (''=add nothing, 'auto'=Use default currency, 'XXX'=add currency symbols for XXX currency)\n *\t\t@return\tstring\t\t\t\t\t\tChaine avec montant formate\n *\n *\t\t@see\tprice2num()\t\t\t\t\tRevert function of price\n */\nfunction price($amount, $form = 0, $outlangs = '', $trunc = 1, $rounding = -1, $forcerounding = -1, $currency_code = '')\n{\n\tglobal $langs, $conf;\n\n\t// Clean parameters\n\tif (empty($amount)) {\n\t\t$amount = 0; // To have a numeric value if amount not defined or = ''\n\t}\n\t$amount = (is_numeric($amount) ? $amount : 0); // Check if amount is numeric, for example, an error occured when amount value = o (letter) instead 0 (number)\n\tif ($rounding < 0) {\n\t\t$rounding = min($conf->global->MAIN_MAX_DECIMALS_UNIT, $conf->global->MAIN_MAX_DECIMALS_TOT);\n\t}\n\t$nbdecimal = $rounding;\n\n\t// Output separators by default (french)\n\t$dec = ',';\n\t$thousand = ' ';\n\n\t// If $outlangs not forced, we use use language\n\tif (!is_object($outlangs)) {\n\t\t$outlangs = $langs;\n\t}\n\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\") {\n\t\t$dec = $outlangs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\t}\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorThousand\") != \"SeparatorThousand\") {\n\t\t$thousand = $outlangs->transnoentitiesnoconv(\"SeparatorThousand\");\n\t}\n\tif ($thousand == 'None') {\n\t\t$thousand = '';\n\t} elseif ($thousand == 'Space') {\n\t\t$thousand = ' ';\n\t}\n\t//print \"outlangs=\".$outlangs->defaultlang.\" amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t//print \"amount=\".$amount.\"-\";\n\t$amount = str_replace(',', '.', $amount); // should be useless\n\t//print $amount.\"-\";\n\t$datas = explode('.', $amount);\n\t$decpart = isset($datas[1]) ? $datas[1] : '';\n\t$decpart = preg_replace('/0+$/i', '', $decpart); // Supprime les 0 de fin de partie decimale\n\t//print \"decpart=\".$decpart.\"<br>\";\n\t$end = '';\n\n\t// We increase nbdecimal if there is more decimal than asked (to not loose information)\n\tif (dol_strlen($decpart) > $nbdecimal) {\n\t\t$nbdecimal = dol_strlen($decpart);\n\t}\n\t// Si on depasse max\n\tif ($trunc && $nbdecimal > $conf->global->MAIN_MAX_DECIMALS_SHOWN) {\n\t\t$nbdecimal = $conf->global->MAIN_MAX_DECIMALS_SHOWN;\n\t\tif (preg_match('/\\.\\.\\./i', $conf->global->MAIN_MAX_DECIMALS_SHOWN)) {\n\t\t\t// Si un affichage est tronque, on montre des ...\n\t\t\t$end = '...';\n\t\t}\n\t}\n\n\t// If force rounding\n\tif ($forcerounding >= 0) {\n\t\t$nbdecimal = $forcerounding;\n\t}\n\n\t// Format number\n\t$output = number_format($amount, $nbdecimal, $dec, $thousand);\n\tif ($form) {\n\t\t$output = preg_replace('/\\s/', '&nbsp;', $output);\n\t\t$output = preg_replace('/\\'/', '&#039;', $output);\n\t}\n\t// Add symbol of currency if requested\n\t$cursymbolbefore = $cursymbolafter = '';\n\tif ($currency_code) {\n\t\tif ($currency_code == 'auto') {\n\t\t\t$currency_code = $conf->currency;\n\t\t}\n\n\t\t$listofcurrenciesbefore = array('AUD', 'CAD', 'CNY', 'COP', 'CLP', 'GBP', 'HKD', 'MXN', 'PEN', 'USD');\n\t\t$listoflanguagesbefore = array('nl_NL');\n\t\tif (in_array($currency_code, $listofcurrenciesbefore) || in_array($outlangs->defaultlang, $listoflanguagesbefore)) {\n\t\t\t$cursymbolbefore .= $outlangs->getCurrencySymbol($currency_code);\n\t\t} else {\n\t\t\t$tmpcur = $outlangs->getCurrencySymbol($currency_code);\n\t\t\t$cursymbolafter .= ($tmpcur == $currency_code ? ' '.$tmpcur : $tmpcur);\n\t\t}\n\t}\n\t$output = $cursymbolbefore.$output.$end.($cursymbolafter ? ' ' : '').$cursymbolafter;\n\n\treturn $output;\n}\n\n/**\n *\tFunction that return a number with universal decimal format (decimal separator is '.') from an amount typed by a user.\n *\tFunction to use on each input amount before any numeric test or database insert. A better name for this function\n *  should be roundtext2num().\n *\n *\t@param\tstring|float\t$amount\t\t\tAmount to convert/clean or round\n *\t@param\tstring|int\t\t$rounding\t\t''=No rounding\n * \t\t\t\t\t\t\t\t\t\t\t'MU'=Round to Max unit price (MAIN_MAX_DECIMALS_UNIT)\n *\t\t\t\t\t\t\t\t\t\t\t'MT'=Round to Max for totals with Tax (MAIN_MAX_DECIMALS_TOT)\n *\t\t\t\t\t\t\t\t\t\t\t'MS'=Round to Max for stock quantity (MAIN_MAX_DECIMALS_STOCK)\n *      \t\t                            'CU'=Round to Max unit price of foreign currency accuracy\n *      \t\t                            'CT'=Round to Max for totals with Tax of foreign currency accuracy\n *\t\t\t\t\t\t\t\t\t\t\tNumeric = Nb of digits for rounding (For example 2 for a percentage)\n * \t@param\tint\t\t\t\t$option\t\t\tPut 1 if you know that content is already universal format number (so no correction on decimal will be done)\n * \t\t\t\t\t\t\t\t\t\t\tPut 2 if you know that number is a user input (so we know we don't have to fix decimal separator).\n *\t@return\tstring\t\t\t\t\t\t\tAmount with universal numeric format (Example: '99.99999').\n *\t\t\t\t\t\t\t\t\t\t\tIf conversion fails, it return text unchanged if ($rounding = '' and $option = 1) or '0' if ($rounding is defined and $option = 1).\n *\t\t\t\t\t\t\t\t\t\t\tIf amount is null or '', it returns '' if $rounding = '' or '0' if $rounding is defined..\n *\n *\t@see    price()\t\t\t\t\t\t\tOpposite function of price2num\n */\nfunction price2num($amount, $rounding = '', $option = 0)\n{\n\tglobal $langs, $conf;\n\n\t// Round PHP function does not allow number like '1,234.56' nor '1.234,56' nor '1 234,56'\n\t// Numbers must be '1234.56'\n\t// Decimal delimiter for PHP and database SQL requests must be '.'\n\t$dec = ',';\n\t$thousand = ' ';\n\tif ($langs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\") {\n\t\t$dec = $langs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\t}\n\tif ($langs->transnoentitiesnoconv(\"SeparatorThousand\") != \"SeparatorThousand\") {\n\t\t$thousand = $langs->transnoentitiesnoconv(\"SeparatorThousand\");\n\t}\n\tif ($thousand == 'None') {\n\t\t$thousand = '';\n\t} elseif ($thousand == 'Space') {\n\t\t$thousand = ' ';\n\t}\n\t//print \"amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t// Convert value to universal number format (no thousand separator, '.' as decimal separator)\n\tif ($option != 1) {\t// If not a PHP number or unknown, we change or clean format\n\t\t//print \"\\n\".'PP'.$amount.' - '.$dec.' - '.$thousand.' - '.intval($amount).'<br>';\n\t\tif (!is_numeric($amount)) {\n\t\t\t$amount = preg_replace('/[a-zA-Z\\/\\\\\\*\\(\\)\\<\\>\\_]/', '', $amount);\n\t\t}\n\n\t\tif ($option == 2 && $thousand == '.' && preg_match('/\\.(\\d\\d\\d)$/', (string) $amount)) {\t// It means the . is used as a thousand separator and string come from input data, so 1.123 is 1123\n\t\t\t$amount = str_replace($thousand, '', $amount);\n\t\t}\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be like defined by Dolibarr setup.\n\t\t// So if number was already a good number, it is converted into local Dolibarr setup.\n\t\tif (is_numeric($amount)) {\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps = sprintf(\"%0.10F\", $amount - intval($amount)); // temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps = preg_replace('/([\\.1-9])0+$/', '\\\\1', $temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec = max(0, dol_strlen($temps) - 2); // -2 to remove \"0.\"\n\t\t\t$amount = number_format($amount, $nbofdec, $dec, $thousand);\n\t\t}\n\t\t//print \"QQ\".$amount.\"<br>\\n\";\n\n\t\t// Now make replace (the main goal of function)\n\t\tif ($thousand != ',' && $thousand != '.') {\n\t\t\t$amount = str_replace(',', '.', $amount); // To accept 2 notations for french users\n\t\t}\n\t\t$amount = str_replace(' ', '', $amount); // To avoid spaces\n\t\t$amount = str_replace($thousand, '', $amount); // Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount = str_replace($dec, '.', $amount);\n\t}\n\t//print ' XX'.$amount.' '.$rounding;\n\n\t// Now, make a rounding if required\n\tif ($rounding) {\n\t\t$nbofdectoround = '';\n\t\tif ($rounding == 'MU') {\n\t\t\t$nbofdectoround = $conf->global->MAIN_MAX_DECIMALS_UNIT;\n\t\t} elseif ($rounding == 'MT') {\n\t\t\t$nbofdectoround = $conf->global->MAIN_MAX_DECIMALS_TOT;\n\t\t} elseif ($rounding == 'MS') {\n\t\t\t$nbofdectoround = empty($conf->global->MAIN_MAX_DECIMALS_STOCK) ? 5 : $conf->global->MAIN_MAX_DECIMALS_STOCK;\n\t\t} elseif ($rounding == 'CU') {\n\t\t\t$nbofdectoround = max($conf->global->MAIN_MAX_DECIMALS_UNIT, 8);\t// TODO Use param of currency\n\t\t} elseif ($rounding == 'CT') {\n\t\t\t$nbofdectoround = max($conf->global->MAIN_MAX_DECIMALS_TOT, 8);\t\t// TODO Use param of currency\n\t\t} elseif (is_numeric($rounding)) {\n\t\t\t$nbofdectoround = (int) $rounding;\n\t\t}\n\t\t//print \" RR\".$amount.' - '.$nbofdectoround.'<br>';\n\t\tif (dol_strlen($nbofdectoround)) {\n\t\t\t$amount = round(is_string($amount) ? (float) $amount : $amount, $nbofdectoround); // $nbofdectoround can be 0.\n\t\t} else {\n\t\t\treturn 'ErrorBadParameterProvidedToFunction';\n\t\t}\n\t\t//print ' SS'.$amount.' - '.$nbofdec.' - '.$dec.' - '.$thousand.' - '.$nbofdectoround.'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be defined by Dolibarr setup.\n\t\tif (is_numeric($amount)) {\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps = sprintf(\"%0.10F\", $amount - intval($amount)); // temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps = preg_replace('/([\\.1-9])0+$/', '\\\\1', $temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec = max(0, dol_strlen($temps) - 2); // -2 to remove \"0.\"\n\t\t\t$amount = number_format($amount, min($nbofdec, $nbofdectoround), $dec, $thousand); // Convert amount to format with dolibarr dec and thousand\n\t\t}\n\t\t//print \"TT\".$amount.'<br>';\n\n\t\t// Always make replace because each math function (like round) replace\n\t\t// with local values and we want a number that has a SQL string format x.y\n\t\tif ($thousand != ',' && $thousand != '.') {\n\t\t\t$amount = str_replace(',', '.', $amount); // To accept 2 notations for french users\n\t\t}\n\t\t$amount = str_replace(' ', '', $amount); // To avoid spaces\n\t\t$amount = str_replace($thousand, '', $amount); // Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount = str_replace($dec, '.', $amount);\n\t}\n\n\treturn $amount;\n}\n\n/**\n * Output a dimension with best unit\n *\n * @param   float       $dimension      Dimension\n * @param   int         $unit           Unit scale of dimension (Example: 0=kg, -3=g, -6=mg, 98=ounce, 99=pound, ...)\n * @param   string      $type           'weight', 'volume', ...\n * @param   Translate   $outputlangs    Translate language object\n * @param   int         $round          -1 = non rounding, x = number of decimal\n * @param   string      $forceunitoutput    'no' or numeric (-3, -6, ...) compared to $unit (In most case, this value is value defined into $conf->global->MAIN_WEIGHT_DEFAULT_UNIT)\n * @return  string                      String to show dimensions\n */\nfunction showDimensionInBestUnit($dimension, $unit, $type, $outputlangs, $round = -1, $forceunitoutput = 'no')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\tif (($forceunitoutput == 'no' && $dimension < 1 / 10000 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == -6)) {\n\t\t$dimension = $dimension * 1000000;\n\t\t$unit = $unit - 6;\n\t} elseif (($forceunitoutput == 'no' && $dimension < 1 / 10 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == -3)) {\n\t\t$dimension = $dimension * 1000;\n\t\t$unit = $unit - 3;\n\t} elseif (($forceunitoutput == 'no' && $dimension > 100000000 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == 6)) {\n\t\t$dimension = $dimension / 1000000;\n\t\t$unit = $unit + 6;\n\t} elseif (($forceunitoutput == 'no' && $dimension > 100000 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == 3)) {\n\t\t$dimension = $dimension / 1000;\n\t\t$unit = $unit + 3;\n\t}\n\t// Special case when we want output unit into pound or ounce\n\t/* TODO\n\tif ($unit < 90 && $type == 'weight' && is_numeric($forceunitoutput) && (($forceunitoutput == 98) || ($forceunitoutput == 99))\n\t{\n\t\t$dimension = // convert dimension from standard unit into ounce or pound\n\t\t$unit = $forceunitoutput;\n\t}\n\tif ($unit > 90 && $type == 'weight' && is_numeric($forceunitoutput) && $forceunitoutput < 90)\n\t{\n\t\t$dimension = // convert dimension from standard unit into ounce or pound\n\t\t$unit = $forceunitoutput;\n\t}*/\n\n\t$ret = price($dimension, 0, $outputlangs, 0, 0, $round).' '.measuringUnitString(0, $type, $unit);\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn localtax rate for a particular vat, when selling a product with vat $vatrate, from a $thirdparty_buyer to a $thirdparty_seller\n *  Note: This function applies same rules than get_default_tva\n *\n * \t@param\tfloat\t\t$vatrate\t\t        Vat rate. Can be '8.5' or '8.5 (VATCODEX)' for example\n * \t@param  int\t\t\t$local\t\t         \tLocal tax to search and return (1 or 2 return only tax rate 1 or tax rate 2)\n *  @param  Societe\t\t$thirdparty_buyer    \tObject of buying third party\n *  @param\tSociete\t\t$thirdparty_seller\t\tObject of selling third party ($mysoc if not defined)\n *  @param\tint\t\t\t$vatnpr\t\t\t\t\tIf vat rate is NPR or not\n * \t@return\tmixed\t\t\t   \t\t\t\t\t0 if not found, localtax rate if found\n *  @see get_default_tva()\n */\nfunction get_localtax($vatrate, $local, $thirdparty_buyer = \"\", $thirdparty_seller = \"\", $vatnpr = 0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\tif (empty($thirdparty_seller) || !is_object($thirdparty_seller)) {\n\t\t$thirdparty_seller = $mysoc;\n\t}\n\n\tdol_syslog(\"get_localtax tva=\".$vatrate.\" local=\".$local.\" thirdparty_buyer id=\".(is_object($thirdparty_buyer) ? $thirdparty_buyer->id : '').\"/country_code=\".(is_object($thirdparty_buyer) ? $thirdparty_buyer->country_code : '').\" thirdparty_seller id=\".$thirdparty_seller->id.\"/country_code=\".$thirdparty_seller->country_code.\" thirdparty_seller localtax1_assuj=\".$thirdparty_seller->localtax1_assuj.\"  thirdparty_seller localtax2_assuj=\".$thirdparty_seller->localtax2_assuj);\n\n\t$vatratecleaned = $vatrate;\n\t$reg = array();\n\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg)) {     // If vat is \"xx (yy)\"\n\t\t$vatratecleaned = trim($reg[1]);\n\t\t$vatratecode = $reg[2];\n\t}\n\n\t/*if ($thirdparty_buyer->country_code != $thirdparty_seller->country_code)\n\t{\n\t\treturn 0;\n\t}*/\n\n\t// Some test to guess with no need to make database access\n\tif ($mysoc->country_code == 'ES') { // For spain localtaxes 1 and 2, tax is qualified if buyer use local tax\n\t\tif ($local == 1) {\n\t\t\tif (!$mysoc->localtax1_assuj || (string) $vatratecleaned == \"0\") {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ($thirdparty_seller->id == $mysoc->id) {\n\t\t\t\tif (!$thirdparty_buyer->localtax1_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!$thirdparty_seller->localtax1_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($local == 2) {\n\t\t\t//if (! $mysoc->localtax2_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif (!$mysoc->localtax2_assuj) {\n\t\t\t\treturn 0; // If main vat is 0, IRPF may be different than 0.\n\t\t\t}\n\t\t\tif ($thirdparty_seller->id == $mysoc->id) {\n\t\t\t\tif (!$thirdparty_buyer->localtax2_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!$thirdparty_seller->localtax2_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($local == 1 && !$thirdparty_seller->localtax1_assuj) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ($local == 2 && !$thirdparty_seller->localtax2_assuj) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// For some country MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY is forced to on.\n\tif (in_array($mysoc->country_code, array('ES'))) {\n\t\t$conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY = 1;\n\t}\n\n\t// Search local taxes\n\tif (!empty($conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY)) {\n\t\tif ($local == 1) {\n\t\t\tif ($thirdparty_seller != $mysoc) {\n\t\t\t\tif (!isOnlyOneLocalTax($local)) {  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t\treturn $thirdparty_seller->localtax1_value;\n\t\t\t\t}\n\t\t\t} else { // i am the seller\n\t\t\t\tif (!isOnlyOneLocalTax($local)) { // TODO If seller is me, why not always returning this, even if there is only one locatax vat.\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($local == 2) {\n\t\t\tif ($thirdparty_seller != $mysoc) {\n\t\t\t\tif (!isOnlyOneLocalTax($local)) {  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t\t// TODO We should also return value defined on thirdparty only if defined\n\t\t\t\t\treturn $thirdparty_seller->localtax2_value;\n\t\t\t\t}\n\t\t\t} else { // i am the seller\n\t\t\t\tif (in_array($mysoc->country_code, array('ES'))) {\n\t\t\t\t\treturn $thirdparty_buyer->localtax2_value;\n\t\t\t\t} else {\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// By default, search value of local tax on line of common tax\n\t$sql = \"SELECT t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($thirdparty_seller->country_code).\"'\";\n\t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\tif (!empty($vatratecode)) {\n\t\t$sql .= \" AND t.code ='\".$db->escape($vatratecode).\"'\"; // If we have the code, we use it in priority\n\t} else {\n\t\t$sql .= \" AND t.recuperableonly = '\".$db->escape($vatnpr).\"'\";\n\t}\n\tdol_syslog(\"get_localtax\", LOG_DEBUG);\n\t$resql = $db->query($sql);\n\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) {\n\t\t\tif ($local == 1) {\n\t\t\t\treturn $obj->localtax1;\n\t\t\t} elseif ($local == 2) {\n\t\t\t\treturn $obj->localtax2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n\n/**\n * Return true if LocalTax (1 or 2) is unique.\n * Example: If localtax1 is 5 on line with highest common vat rate, return true\n * Example: If localtax1 is 5:8:15 on line with highest common vat rate, return false\n *\n * @param   int \t$local\tLocal tax to test (1 or 2)\n * @return  boolean \t\tTrue if LocalTax have multiple values, False if not\n */\nfunction isOnlyOneLocalTax($local)\n{\n\t$tax = get_localtax_by_third($local);\n\n\t$valors = explode(\":\", $tax);\n\n\tif (count($valors) > 1) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\n/**\n * Get values of localtaxes (1 or 2) for company country for the common vat with the highest value\n *\n * @param\tint\t\t$local \tLocalTax to get\n * @return\tnumber\t\t\tValues of localtax\n */\nfunction get_localtax_by_third($local)\n{\n\tglobal $db, $mysoc;\n\t$sql = \"SELECT t.localtax1, t.localtax2 \";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=t.fk_pays\";\n\t$sql .= \" WHERE c.code = '\".$db->escape($mysoc->country_code).\"' AND t.active = 1 AND t.taux=(\";\n\t$sql .= \"  SELECT max(tt.taux) FROM \".MAIN_DB_PREFIX.\"c_tva as tt inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=tt.fk_pays\";\n\t$sql .= \"  WHERE c.code = '\".$db->escape($mysoc->country_code).\"' AND tt.active = 1\";\n\t$sql .= \"  )\";\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local == 1) {\n\t\t\treturn $obj->localtax1;\n\t\t} elseif ($local == 2) {\n\t\t\treturn $obj->localtax2;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n\n/**\n *  Get tax (VAT) main information from Id.\n *  You can also call getLocalTaxesFromRate() after to get only localtax fields.\n *\n *  @param\tint|string  $vatrate\t\t    VAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray       \t  \t\t\t\tarray('rowid'=> , 'code'=> ...)\n *  @see getLocalTaxesFromRate()\n */\nfunction getTaxesFromId($vatrate, $buyer = null, $seller = null, $firstparamisid = 1)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getTaxesFromId vat id or rate = \".$vatrate);\n\n\t// Search local taxes\n\t$sql = \"SELECT t.rowid, t.code, t.taux as rate, t.recuperableonly as npr, t.accountancy_code_sell, t.accountancy_code_buy,\";\n\t$sql .= \" t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) {\n\t\t$sql .= \" WHERE t.rowid = \".(int) $vatrate;\n\t} else {\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\t$reg = array();\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg)) {      // If vat is \"xx (yy)\"\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql .= \", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t/*if ($mysoc->country_code == 'ES') $sql.= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($buyer->country_code).\"'\";    // vat in spain use the buyer country ??\n\t\telse $sql.= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($seller->country_code).\"'\";*/\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($seller->country_code).\"'\";\n\t\t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) {\n\t\t\t$sql .= \" AND t.code = '\".$db->escape($vatratecode).\"'\";\n\t\t}\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) {\n\t\t\treturn array(\n\t\t\t'rowid'=>$obj->rowid,\n\t\t\t'code'=>$obj->code,\n\t\t\t'rate'=>$obj->rate,\n\t\t\t'localtax1'=>$obj->localtax1,\n\t\t\t'localtax1_type'=>$obj->localtax1_type,\n\t\t\t'localtax2'=>$obj->localtax2,\n\t\t\t'localtax2_type'=>$obj->localtax2_type,\n\t\t\t'npr'=>$obj->npr,\n\t\t\t'accountancy_code_sell'=>$obj->accountancy_code_sell,\n\t\t\t'accountancy_code_buy'=>$obj->accountancy_code_buy\n\t\t\t);\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\treturn array();\n}\n\n/**\n *  Get type and rate of localtaxes for a particular vat rate/country of a thirdparty.\n *  This does not take into account the seller setup if subject to vat or not, only country.\n *\n *  TODO This function is ALSO called to retrieve type for building PDF. Such call of function must be removed.\n *  Instead this function must be called when adding a line to get the array of possible values for localtax and type, and then\n *  provide the selected value to the function calcul_price_total.\n *\n *  @param\tint|string  $vatrate\t\t\tVAT ID or Rate+Code. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tint\t\t    $local              Number of localtax (1 or 2, or 0 to return 1 & 2)\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is ID into table instead of Rate+code (use this if you can)\n *  @return\tarray    \t    \t\t\t\tarray(localtax_type1(1-6 or 0 if not found), rate localtax1, localtax_type2, rate localtax2, accountancycodecust, accountancycodesupp)\n *  @see getTaxesFromId()\n */\nfunction getLocalTaxesFromRate($vatrate, $local, $buyer, $seller, $firstparamisid = 0)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getLocalTaxesFromRate vatrate=\".$vatrate.\" local=\".$local);\n\n\t// Search local taxes\n\t$sql  = \"SELECT t.taux as rate, t.code, t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) {\n\t\t$sql .= \" WHERE t.rowid = \".(int) $vatrate;\n\t} else {\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\t$reg = array();\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg)) {     // If vat is \"x.x (yy)\"\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql .= \", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\tif ($mysoc->country_code == 'ES') {\n\t\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($buyer->country_code).\"'\"; // local tax in spain use the buyer country ??\n\t\t} else {\n\t\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape(empty($seller->country_code) ? $mysoc->country_code : $seller->country_code).\"'\";\n\t\t}\n\t\t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) {\n\t\t\t$sql .= \" AND t.code = '\".$db->escape($vatratecode).\"'\";\n\t\t}\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\n\t\tif ($obj) {\n\t\t\t$vateratestring = $obj->rate.($obj->code ? ' ('.$obj->code.')' : '');\n\n\t\t\tif ($local == 1) {\n\t\t\t\treturn array($obj->localtax1_type, get_localtax($vateratestring, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t} elseif ($local == 2) {\n\t\t\t\treturn array($obj->localtax2_type, get_localtax($vateratestring, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t} else {\n\t\t\t\treturn array($obj->localtax1_type, get_localtax($vateratestring, 1, $buyer, $seller), $obj->localtax2_type, get_localtax($vateratestring, 2, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn array();\n}\n\n/**\n *\tReturn vat rate of a product in a particular country, or default country vat if product is unknown.\n *  Function called by get_default_tva().\n *\n *  @param\tint\t\t\t$idprod          \tId of product or 0 if not a predefined product\n *  @param  Societe\t\t$thirdpartytouse  \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *\t@param\tint\t\t\t$idprodfournprice\tId product_fournisseur_price (for \"supplier\" proposal/order/invoice)\n *  @return float|string   \t\t\t\t    Vat rate to use with format 5.0 or '5.0 (XXX)'\n *  @see get_product_localtax_for_country()\n */\nfunction get_product_vat_for_country($idprod, $thirdpartytouse, $idprodfournprice = 0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\n\t$ret = 0;\n\t$found = 0;\n\n\tif ($idprod > 0) {\n\t\t// Load product\n\t\t$product = new Product($db);\n\t\t$result = $product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdpartytouse->country_code) { // If country to consider is ours\n\t\t\tif ($idprodfournprice > 0) {     // We want vat for product for a \"supplier\" object\n\t\t\t\t$product->get_buyprice($idprodfournprice, 0, 0, 0);\n\t\t\t\t$ret = $product->vatrate_supplier;\n\t\t\t\tif ($product->default_vat_code) {\n\t\t\t\t\t$ret .= ' ('.$product->default_vat_code.')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$ret = $product->tva_tx; // Default vat of product we defined\n\t\t\t\tif ($product->default_vat_code) {\n\t\t\t\t\t$ret .= ' ('.$product->default_vat_code.')';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$found = 1;\n\t\t} else {\n\t\t\t// TODO Read default product vat according to product and another countrycode.\n\t\t\t// Vat for couple anothercountrycode/product is data that is not managed and store yet, so we will fallback on next rule.\n\t\t}\n\t}\n\n\tif (!$found) {\n\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS)) {\n\t\t\t// If vat of product for the country not found or not defined, we return the first higher vat of country.\n\t\t\t$sql = \"SELECT t.taux as vat_rate, t.code as default_vat_code\";\n\t\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t\t$sql .= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$db->escape($thirdpartytouse->country_code).\"'\";\n\t\t\t$sql .= \" ORDER BY t.taux DESC, t.code ASC, t.recuperableonly ASC\";\n\t\t\t$sql .= $db->plimit(1);\n\n\t\t\t$resql = $db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj) {\n\t\t\t\t\t$ret = $obj->vat_rate;\n\t\t\t\t\tif ($obj->default_vat_code) {\n\t\t\t\t\t\t$ret .= ' ('.$obj->default_vat_code.')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$db->free($sql);\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t} else {\n\t\t\t$ret = $conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS; // Forced value if autodetect fails\n\t\t}\n\t}\n\n\tdol_syslog(\"get_product_vat_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tReturn localtax vat rate of a product in a particular country or default country vat if product is unknown\n *\n *  @param\tint\t\t$idprod         \t\tId of product\n *  @param  int\t\t$local          \t\t1 for localtax1, 2 for localtax 2\n *  @param  Societe\t$thirdpartytouse    \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *  @return int             \t\t\t\t<0 if KO, Vat rate if OK\n *  @see get_product_vat_for_country()\n */\nfunction get_product_localtax_for_country($idprod, $local, $thirdpartytouse)\n{\n\tglobal $db, $mysoc;\n\n\tif (!class_exists('Product')) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t}\n\n\t$ret = 0;\n\t$found = 0;\n\n\tif ($idprod > 0) {\n\t\t// Load product\n\t\t$product = new Product($db);\n\t\t$result = $product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdpartytouse->country_code) { // If selling country is ours\n\t\t\t/* Not defined yet, so we don't use this\n\t\t\tif ($local==1) $ret=$product->localtax1_tx;\n\t\t\telseif ($local==2) $ret=$product->localtax2_tx;\n\t\t\t$found=1;\n\t\t\t*/\n\t\t} else {\n\t\t\t// TODO Read default product vat according to product and another countrycode.\n\t\t\t// Vat for couple anothercountrycode/product is data that is not managed and store yet, so we will fallback on next rule.\n\t\t}\n\t}\n\n\tif (!$found) {\n\t\t// If vat of product for the country not found or not defined, we return higher vat of country.\n\t\t$sql = \"SELECT taux as vat_rate, localtax1, localtax2\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$db->escape($thirdpartytouse->country_code).\"'\";\n\t\t$sql .= \" ORDER BY t.taux DESC, t.recuperableonly ASC\";\n\t\t$sql .= $db->plimit(1);\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $db->fetch_object($resql);\n\t\t\tif ($obj) {\n\t\t\t\tif ($local == 1) {\n\t\t\t\t\t$ret = $obj->localtax1;\n\t\t\t\t} elseif ($local == 2) {\n\t\t\t\t\t$ret = $obj->localtax2;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tdol_syslog(\"get_product_localtax_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tFunction that return vat rate of a product line (according to seller, buyer and product vat rate)\n *   VATRULE 1: Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t VATRULE 2: Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t VATRULE 3: Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n *\t VATRULE 4: Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n *\t VATRULE 5: Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n *\t VATRULE 6: Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tObjet societe vendeuse\n *\t@param  Societe\t\t$thirdparty_buyer   \tObjet societe acheteuse\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@param\tint\t\t\t$idprodfournprice\t\tId product_fournisseur_price (for supplier order/invoice)\n *\t@return float|string   \t\t\t\t      \tVat rate to use with format 5.0 or '5.0 (XXX)', -1 if we can't guess it\n *  @see get_default_npr(), get_default_localtax()\n */\nfunction get_default_tva(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod = 0, $idprodfournprice = 0)\n{\n\tglobal $conf;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\n\t// Note: possible values for tva_assuj are 0/1 or franchise/reel\n\t$seller_use_vat = ((is_numeric($thirdparty_seller->tva_assuj) && !$thirdparty_seller->tva_assuj) || (!is_numeric($thirdparty_seller->tva_assuj) && $thirdparty_seller->tva_assuj == 'franchise')) ? 0 : 1;\n\n\t$seller_country_code = $thirdparty_seller->country_code;\n\t$seller_in_cee = isInEEC($thirdparty_seller);\n\n\t$buyer_country_code = $thirdparty_buyer->country_code;\n\t$buyer_in_cee = isInEEC($thirdparty_buyer);\n\n\tdol_syslog(\"get_default_tva: seller use vat=\".$seller_use_vat.\", seller country=\".$seller_country_code.\", seller in cee=\".$seller_in_cee.\", buyer vat number=\".$thirdparty_buyer->tva_intra.\" buyer country=\".$buyer_country_code.\", buyer in cee=\".$buyer_in_cee.\", idprod=\".$idprod.\", idprodfournprice=\".$idprodfournprice.\", SERVICE_ARE_ECOMMERCE_200238EC=\".(!empty($conf->global->SERVICES_ARE_ECOMMERCE_200238EC) ? $conf->global->SERVICES_ARE_ECOMMERCE_200238EC : ''));\n\n\t// If services are eServices according to EU Council Directive 2002/38/EC (http://ec.europa.eu/taxation_customs/taxation/vat/traders/e-commerce/article_1610_en.htm)\n\t// we use the buyer VAT.\n\tif (!empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC)) {\n\t\tif ($seller_in_cee && $buyer_in_cee) {\n\t\t\t$isacompany = $thirdparty_buyer->isACompany();\n\t\t\tif ($isacompany && !empty($conf->global->MAIN_USE_VAT_COMPANIES_IN_EEC_WITH_INVALID_VAT_ID_ARE_INDIVIDUAL)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\t\tif (!isValidVATID($thirdparty_buyer)) {\n\t\t\t\t\t$isacompany = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$isacompany) {\n\t\t\t\t//print 'VATRULE 0';\n\t\t\t\treturn get_product_vat_for_country($idprod, $thirdparty_buyer, $idprodfournprice);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If seller does not use VAT\n\tif (!$seller_use_vat) {\n\t\t//print 'VATRULE 1';\n\t\treturn 0;\n\t}\n\n\t// Le test ci-dessus ne devrait pas etre necessaire. Me signaler l'exemple du cas juridique concerne si le test suivant n'est pas suffisant.\n\n\t// Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\tif (($seller_country_code == $buyer_country_code)\n\t|| (in_array($seller_country_code, array('FR,MC')) && in_array($buyer_country_code, array('FR', 'MC')))) { // Warning ->country_code not always defined\n\t\t//print 'VATRULE 2';\n\t\treturn get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice);\n\t}\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t// 'VATRULE 3' - Not supported\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\tif (($seller_in_cee && $buyer_in_cee)) {\n\t\t$isacompany = $thirdparty_buyer->isACompany();\n\t\tif ($isacompany && !empty($conf->global->MAIN_USE_VAT_COMPANIES_IN_EEC_WITH_INVALID_VAT_ID_ARE_INDIVIDUAL)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\tif (!isValidVATID($thirdparty_buyer)) {\n\t\t\t\t$isacompany = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (!$isacompany) {\n\t\t\t//print 'VATRULE 4';\n\t\t\treturn get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice);\n\t\t} else {\n\t\t\t//print 'VATRULE 5';\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// Si (vendeur dans Communaute europeene et acheteur hors Communaute europeenne et acheteur particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\t// I don't see any use case that need this rule.\n\tif (!empty($conf->global->MAIN_USE_VAT_OF_PRODUCT_FOR_INDIVIDUAL_CUSTOMER_OUT_OF_EEC) && empty($buyer_in_cee)) {\n\t\t$isacompany = $thirdparty_buyer->isACompany();\n\t\tif (!$isacompany) {\n\t\t\treturn get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice);\n\t\t\t//print 'VATRULE extra';\n\t\t}\n\t}\n\n\t// Sinon la TVA proposee par defaut=0. Fin de regle.\n\t// Rem: Cela signifie qu'au moins un des 2 est hors Communaute europeenne et que le pays differe\n\t//print 'VATRULE 6';\n\treturn 0;\n}\n\n\n/**\n *\tFonction qui renvoie si tva doit etre tva percue recuperable\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param  int\t\t\t$idprod                 Id product\n *  @param\tint\t\t\t$idprodfournprice\t\tId supplier price for product\n *\t@return float       \t\t\t        \t0 or 1\n *  @see get_default_tva(), get_default_localtax()\n */\nfunction get_default_npr(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod = 0, $idprodfournprice = 0)\n{\n\tglobal $db;\n\n\tif ($idprodfournprice > 0) {\n\t\tif (!class_exists('ProductFournisseur')) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.product.class.php';\n\t\t}\n\t\t$prodprice = new ProductFournisseur($db);\n\t\t$prodprice->fetch_product_fournisseur_price($idprodfournprice);\n\t\treturn $prodprice->fourn_tva_npr;\n\t} elseif ($idprod > 0) {\n\t\tif (!class_exists('Product')) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t}\n\t\t$prod = new Product($db);\n\t\t$prod->fetch($idprod);\n\t\treturn $prod->tva_npr;\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tFunction that return localtax of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param\tint\t\t\t$local\t\t\t\t\tLocaltax to process (1 or 2)\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@return integer        \t\t\t\t       \tlocaltax, -1 si ne peut etre determine\n *  @see get_default_tva(), get_default_npr()\n */\nfunction get_default_localtax($thirdparty_seller, $thirdparty_buyer, $local, $idprod = 0)\n{\n\tglobal $mysoc;\n\n\tif (!is_object($thirdparty_seller)) {\n\t\treturn -1;\n\t}\n\tif (!is_object($thirdparty_buyer)) {\n\t\treturn -1;\n\t}\n\n\tif ($local == 1) { // Localtax 1\n\t\tif ($mysoc->country_code == 'ES') {\n\t\t\tif (is_numeric($thirdparty_buyer->localtax1_assuj) && !$thirdparty_buyer->localtax1_assuj) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// Si vendeur non assujeti a Localtax1, localtax1 par default=0\n\t\t\tif (is_numeric($thirdparty_seller->localtax1_assuj) && !$thirdparty_seller->localtax1_assuj) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!is_numeric($thirdparty_seller->localtax1_assuj) && $thirdparty_seller->localtax1_assuj == 'localtax1off') {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} elseif ($local == 2) { //I Localtax 2\n\t\t// Si vendeur non assujeti a Localtax2, localtax2 par default=0\n\t\tif (is_numeric($thirdparty_seller->localtax2_assuj) && !$thirdparty_seller->localtax2_assuj) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (!is_numeric($thirdparty_seller->localtax2_assuj) && $thirdparty_seller->localtax2_assuj == 'localtax2off') {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tif ($thirdparty_seller->country_code == $thirdparty_buyer->country_code) {\n\t\treturn get_product_localtax_for_country($idprod, $local, $thirdparty_seller);\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn yes or no in current language\n *\n *\t@param\tstring|int\t$yesno\t\t\tValue to test (1, 'yes', 'true' or 0, 'no', 'false')\n *\t@param\tinteger\t\t$case\t\t\t1=Yes/No, 0=yes/no, 2=Disabled checkbox, 3=Disabled checkbox + Yes/No\n *\t@param\tint\t\t\t$color\t\t\t0=texte only, 1=Text is formated with a color font style ('ok' or 'error'), 2=Text is formated with 'ok' color.\n *\t@return\tstring\t\t\t\t\t\tHTML string\n */\nfunction yn($yesno, $case = 1, $color = 0)\n{\n\tglobal $langs;\n\t$result = 'unknown';\n\t$classname = '';\n\tif ($yesno == 1 || strtolower($yesno) == 'yes' || strtolower($yesno) == 'true') { \t// A mettre avant test sur no a cause du == 0\n\t\t$result = $langs->trans('yes');\n\t\tif ($case == 1 || $case == 3) {\n\t\t\t$result = $langs->trans(\"Yes\");\n\t\t}\n\t\tif ($case == 2) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"1\" checked disabled>';\n\t\t}\n\t\tif ($case == 3) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"1\" checked disabled> '.$result;\n\t\t}\n\n\t\t$classname = 'ok';\n\t} elseif ($yesno == 0 || strtolower($yesno) == 'no' || strtolower($yesno) == 'false') {\n\t\t$result = $langs->trans(\"no\");\n\t\tif ($case == 1 || $case == 3) {\n\t\t\t$result = $langs->trans(\"No\");\n\t\t}\n\t\tif ($case == 2) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"0\" disabled>';\n\t\t}\n\t\tif ($case == 3) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"0\" disabled> '.$result;\n\t\t}\n\n\t\tif ($color == 2) {\n\t\t\t$classname = 'ok';\n\t\t} else {\n\t\t\t$classname = 'error';\n\t\t}\n\t}\n\tif ($color) {\n\t\treturn '<font class=\"'.$classname.'\">'.$result.'</font>';\n\t}\n\treturn $result;\n}\n\n/**\n *\tReturn a path to have a the directory according to object where files are stored.\n *  New usage:       $conf->module->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 1, $object, '').'/'\n *         or:       $conf->module->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, '')     if multidir_output not defined.\n *  Example out with new usage:       $object is invoice -> 'INYYMM-ABCD'\n *  Example out with old usage:       '015' with level 3->\"0/1/5/\", '015' with level 1->\"5/\", 'ABC-1' with level 3 ->\"0/0/1/\"\n *\n *\t@param\tstring|int\t$num            Id of object (deprecated, $object will be used in future)\n *\t@param  int\t\t\t$level\t\t    Level of subdirs to return (1, 2 or 3 levels). (deprecated, global option will be used in future)\n * \t@param\tint\t\t\t$alpha\t\t    0=Keep number only to forge path, 1=Use alpha part afer the - (By default, use 0). (deprecated, global option will be used in future)\n *  @param  int\t\t\t$withoutslash   0=With slash at end (except if '/', we return ''), 1=without slash at end\n *  @param\tObject\t\t$object\t\t\tObject to use to get ref to forge the path.\n *  @param\tstring\t\t$modulepart\t\tType of object ('invoice_supplier, 'donation', 'invoice', ...'). Use '' for autodetect from $object.\n *  @return\tstring\t\t\t\t\t\tDir to use ending. Example '' or '1/' or '1/2/'\n */\nfunction get_exdir($num, $level, $alpha, $withoutslash, $object, $modulepart = '')\n{\n\tglobal $conf;\n\n\tif (empty($modulepart) && !empty($object->module)) {\n\t\t$modulepart = $object->module;\n\t}\n\n\t$path = '';\n\n\t$arrayforoldpath = array('cheque', 'category', 'holiday', 'supplier_invoice', 'invoice_supplier', 'mailing', 'supplier_payment');\n\tif (!empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) {\n\t\t$arrayforoldpath[] = 'product';\n\t}\n\tif (!empty($level) && in_array($modulepart, $arrayforoldpath)) {\n\t\t// This part should be removed once all code is using \"get_exdir\" to forge path, with parameter $object and $modulepart provided.\n\t\tif (empty($alpha)) {\n\t\t\t$num = preg_replace('/([^0-9])/i', '', $num);\n\t\t} else {\n\t\t\t$num = preg_replace('/^.*\\-/i', '', $num);\n\t\t}\n\t\t$num = substr(\"000\".$num, -$level);\n\t\tif ($level == 1) {\n\t\t\t$path = substr($num, 0, 1);\n\t\t}\n\t\tif ($level == 2) {\n\t\t\t$path = substr($num, 1, 1).'/'.substr($num, 0, 1);\n\t\t}\n\t\tif ($level == 3) {\n\t\t\t$path = substr($num, 2, 1).'/'.substr($num, 1, 1).'/'.substr($num, 0, 1);\n\t\t}\n\t} else {\n\t\t// We will enhance here a common way of forging path for document storage.\n\t\t// In a future, we may distribute directories on several levels depending on setup and object.\n\t\t// Here, $object->id, $object->ref and $modulepart are required.\n\t\t//var_dump($modulepart);\n\t\t$path = dol_sanitizeFileName(empty($object->ref) ? (string) $object->id : $object->ref);\n\t}\n\n\tif (empty($withoutslash) && !empty($path)) {\n\t\t$path .= '/';\n\t}\n\n\treturn $path;\n}\n\n/**\n *\tCreation of a directory (this can create recursive subdir)\n *\n *\t@param\tstring\t\t$dir\t\tDirectory to create (Separator must be '/'. Example: '/mydir/mysubdir')\n *\t@param\tstring\t\t$dataroot\tData root directory (To avoid having the data root in the loop. Using this will also lost the warning on first dir PHP has no permission when open_basedir is used)\n *  @param\tstring|null\t$newmask\tMask for new file (Defaults to $conf->global->MAIN_UMASK or 0755 if unavailable). Example: '0444'\n *\t@return int         \t\t\t< 0 if KO, 0 = already exists, > 0 if OK\n */\nfunction dol_mkdir($dir, $dataroot = '', $newmask = null)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"functions.lib::dol_mkdir: dir=\".$dir, LOG_INFO);\n\n\t$dir_osencoded = dol_osencode($dir);\n\tif (@is_dir($dir_osencoded)) {\n\t\treturn 0;\n\t}\n\n\t$nberr = 0;\n\t$nbcreated = 0;\n\n\t$ccdir = '';\n\tif (!empty($dataroot)) {\n\t\t// Remove data root from loop\n\t\t$dir = str_replace($dataroot.'/', '', $dir);\n\t\t$ccdir = $dataroot.'/';\n\t}\n\n\t$cdir = explode(\"/\", $dir);\n\t$num = count($cdir);\n\tfor ($i = 0; $i < $num; $i++) {\n\t\tif ($i > 0) {\n\t\t\t$ccdir .= '/'.$cdir[$i];\n\t\t} else {\n\t\t\t$ccdir .= $cdir[$i];\n\t\t}\n\t\tif (preg_match(\"/^.:$/\", $ccdir, $regs)) {\n\t\t\tcontinue; // Si chemin Windows incomplet, on poursuit par rep suivant\n\t\t}\n\n\t\t// Attention, le is_dir() peut echouer bien que le rep existe.\n\t\t// (ex selon config de open_basedir)\n\t\tif ($ccdir) {\n\t\t\t$ccdir_osencoded = dol_osencode($ccdir);\n\t\t\tif (!@is_dir($ccdir_osencoded)) {\n\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' does not exists or is outside open_basedir PHP setting.\", LOG_DEBUG);\n\n\t\t\t\tumask(0);\n\t\t\t\t$dirmaskdec = octdec($newmask);\n\t\t\t\tif (empty($newmask)) {\n\t\t\t\t\t$dirmaskdec = empty($conf->global->MAIN_UMASK) ? octdec('0755') : octdec($conf->global->MAIN_UMASK);\n\t\t\t\t}\n\t\t\t\t$dirmaskdec |= octdec('0111'); // Set x bit required for directories\n\t\t\t\tif (!@mkdir($ccdir_osencoded, $dirmaskdec)) {\n\t\t\t\t\t// Si le is_dir a renvoye une fausse info, alors on passe ici.\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Fails to create directory '\".$ccdir.\"' or directory already exists.\", LOG_WARNING);\n\t\t\t\t\t$nberr++;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' created\", LOG_DEBUG);\n\t\t\t\t\t$nberr = 0; // On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignore\n\t\t\t\t\t$nbcreated++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$nberr = 0; // On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignores\n\t\t\t}\n\t\t}\n\t}\n\treturn ($nberr ? -$nberr : $nbcreated);\n}\n\n\n/**\n *\tReturn picto saying a field is required\n *\n *\t@return  string\t\tChaine avec picto obligatoire\n */\nfunction picto_required()\n{\n\treturn '<span class=\"fieldrequired\">*</span>';\n}\n\n\n/**\n *\tClean a string from all HTML tags and entities.\n *  This function differs from strip_tags because:\n *  - <br> are replaced with \\n if removelinefeed=0 or 1\n *  - if entities are found, they are decoded BEFORE the strip\n *  - you can decide to convert line feed into a space\n *\n *\t@param\tstring\t$stringtoclean\t\tString to clean\n *\t@param\tinteger\t$removelinefeed\t\t1=Replace all new lines by 1 space, 0=Only ending new lines are removed others are replaced with \\n, 2=Ending new lines are removed but others are kept with a same number of \\n than nb of <br> when there is both \"...<br>\\n...\"\n *  @param  string\t$pagecodeto      \tEncoding of input/output string\n *  @param\tinteger\t$strip_tags\t\t\t0=Use internal strip, 1=Use strip_tags() php function (bugged when text contains a < char that is not for a html tag or when tags is not closed like '<img onload=aaa')\n *  @param\tinteger\t$removedoublespaces\tReplace double space into one space\n *\t@return string\t    \t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_onlythesehtmltags() dol_string_neverthesehtmltags(), dolStripPhpCode()\n */\nfunction dol_string_nohtmltag($stringtoclean, $removelinefeed = 1, $pagecodeto = 'UTF-8', $strip_tags = 0, $removedoublespaces = 1)\n{\n\tif ($removelinefeed == 2) {\n\t\t$stringtoclean = preg_replace('/<br[^>]*>(\\n|\\r)+/ims', '<br>', $stringtoclean);\n\t}\n\t$temp = preg_replace('/<br[^>]*>/i', \"\\n\", $stringtoclean);\n\n\t// We remove entities BEFORE stripping (in case of an open separator char that is entity encoded and not the closing other, the strip will fails)\n\t$temp = dol_html_entity_decode($temp, ENT_COMPAT | ENT_HTML5, $pagecodeto);\n\n\t$temp = str_replace('< ', '__ltspace__', $temp);\n\n\tif ($strip_tags) {\n\t\t$temp = strip_tags($temp);\n\t} else {\n\t\t$temp = str_replace('<>', '', $temp);\t// No reason to have this into a text, except if value is to try bypass the next html cleaning\n\t\t$pattern = \"/<[^<>]+>/\";\n\t\t// Example of $temp: <a href=\"/myurl\" title=\"<u>A title</u>\">0000-021</a>\n\t\t$temp = preg_replace($pattern, \"\", $temp); // pass 1 - $temp after pass 1: <a href=\"/myurl\" title=\"A title\">0000-021\n\t\t$temp = preg_replace($pattern, \"\", $temp); // pass 2 - $temp after pass 2: 0000-021\n\t\t// Remove '<' into remainging, so remove non closing html tags like '<abc' or '<<abc'. Note: '<123abc' is not a html tag (can be kept), but '<abc123' is (must be removed).\n\t\t$temp = preg_replace('/<+([a-z]+)/i', '\\1', $temp);\n\t}\n\n\t$temp = dol_html_entity_decode($temp, ENT_COMPAT, $pagecodeto);\n\n\t// Remove also carriage returns\n\tif ($removelinefeed == 1) {\n\t\t$temp = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), \" \", $temp);\n\t}\n\n\t// And double quotes\n\tif ($removedoublespaces) {\n\t\twhile (strpos($temp, \"  \")) {\n\t\t\t$temp = str_replace(\"  \", \" \", $temp);\n\t\t}\n\t}\n\n\t$temp = str_replace('__ltspace__', '< ', $temp);\n\n\treturn trim($temp);\n}\n\n/**\n *\tClean a string to keep only desirable HTML tags.\n *  WARNING: This also clean HTML comments (used to obfuscate tag name).\n *\n *\t@param\tstring\t$stringtoclean\t\t\tString to clean\n *  @param\tint\t\t$cleanalsosomestyles\tRemove absolute/fixed positioning from inline styles\n *  @param\tint\t\t$removeclassattribute\t1=Remove the class attribute from tags\n *  @param\tint\t\t$cleanalsojavascript\tRemove also occurence of 'javascript:'.\n *  @param\tint\t\t$allowiframe\t\t\tAllow iframe tags.\n *\t@return string\t    \t\t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_nohtmltag() dol_string_neverthesehtmltags()\n */\nfunction dol_string_onlythesehtmltags($stringtoclean, $cleanalsosomestyles = 1, $removeclassattribute = 1, $cleanalsojavascript = 0, $allowiframe = 0)\n{\n\t$allowed_tags = array(\n\t\t\"html\", \"head\", \"meta\", \"body\", \"article\", \"a\", \"abbr\", \"b\", \"blockquote\", \"br\", \"cite\", \"div\", \"dl\", \"dd\", \"dt\", \"em\", \"font\", \"img\", \"ins\", \"hr\", \"i\", \"li\", \"link\",\n\t\t\"ol\", \"p\", \"q\", \"s\", \"section\", \"span\", \"strike\", \"strong\", \"title\", \"table\", \"tr\", \"th\", \"td\", \"u\", \"ul\", \"sup\", \"sub\", \"blockquote\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"\n\t);\n\tif ($allowiframe) {\n\t\t$allowed_tags[] = \"iframe\";\n\t}\n\n\t$allowed_tags_string = join(\"><\", $allowed_tags);\n\t$allowed_tags_string = '<'.$allowed_tags_string.'>';\n\n\t$stringtoclean = str_replace('<!DOCTYPE html>', '__!DOCTYPE_HTML__', $stringtoclean);\t// Replace DOCTYPE to avoid to have it removed by the strip_tags\n\n\t$stringtoclean = dol_string_nounprintableascii($stringtoclean, 0);\n\n\t$stringtoclean = preg_replace('/<!--[^>]*-->/', '', $stringtoclean);\n\n\t$stringtoclean = preg_replace('/&colon;/i', ':', $stringtoclean);\n\t$stringtoclean = preg_replace('/&#58;|&#0+58|&#x3A/i', '', $stringtoclean); // refused string ':' encoded (no reason to have a : encoded like this) to disable 'javascript:...'\n\t$stringtoclean = preg_replace('/javascript\\s*:/i', '', $stringtoclean);\n\n\t$temp = strip_tags($stringtoclean, $allowed_tags_string);\n\n\tif ($cleanalsosomestyles) {\t// Clean for remaining html tags\n\t\t$temp = preg_replace('/position\\s*:\\s*(absolute|fixed)\\s*!\\s*important/i', '', $temp); // Note: If hacker try to introduce css comment into string to bypass this regex, the string must also be encoded by the dol_htmlentitiesbr during output so it become harmless\n\t}\n\tif ($removeclassattribute) {\t// Clean for remaining html tags\n\t\t$temp = preg_replace('/(<[^>]+)\\s+class=(([\"\\']).*?\\\\3|\\\\w*)/i', '\\\\1', $temp);\n\t}\n\n\t// Remove 'javascript:' that we should not find into a text with\n\t// Warning: This is not reliable to fight against obfuscated javascript, there is a lot of other solution to include js into a common html tag (only filtered by a GETPOST(.., powerfullfilter)).\n\tif ($cleanalsojavascript) {\n\t\t$temp = preg_replace('/javascript\\s*:/i', '', $temp);\n\t}\n\n\t$temp = str_replace('__!DOCTYPE_HTML__', '<!DOCTYPE html>', $temp);\t// Restore the DOCTYPE\n\n\treturn $temp;\n}\n\n\n/**\n *\tClean a string from some undesirable HTML tags.\n *  Note. Not as secured as dol_string_onlythesehtmltags().\n *\n *\t@param\tstring\t$stringtoclean\t\t\tString to clean\n *  @param\tarray\t$allowed_attributes\t\tArray of tags not allowed\n *\t@return string\t    \t\t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_nohtmltag() dol_string_onlythesehtmltags() dol_string_neverthesehtmltags()\n */\nfunction dol_string_onlythesehtmlattributes($stringtoclean, $allowed_attributes = array(\"allow\", \"allowfullscreen\", \"alt\", \"class\", \"contenteditable\", \"data-html\", \"frameborder\", \"height\", \"href\", \"id\", \"name\", \"src\", \"style\", \"target\", \"title\", \"width\"))\n{\n\tif (class_exists('DOMDocument') && !empty($stringtoclean)) {\n\t\t$stringtoclean = '<html><body>'.$stringtoclean.'</body></html>';\n\n\t\t$dom = new DOMDocument();\n\t\t$dom->loadHTML($stringtoclean, LIBXML_ERR_NONE|LIBXML_HTML_NOIMPLIED|LIBXML_HTML_NODEFDTD|LIBXML_NONET|LIBXML_NOWARNING|LIBXML_NOXMLDECL);\n\t\tif (is_object($dom)) {\n\t\t\tfor ($els = $dom->getElementsByTagname('*'), $i = $els->length - 1; $i >= 0; $i--) {\n\t\t\t\tfor ($attrs = $els->item($i)->attributes, $ii = $attrs->length - 1; $ii >= 0; $ii--) {\n\t\t\t\t\t// Delete attribute if not into allowed_attributes\n\t\t\t\t\tif (! empty($attrs->item($ii)->name) && ! in_array($attrs->item($ii)->name, $allowed_attributes)) {\n\t\t\t\t\t\t$els->item($i)->removeAttribute($attrs->item($ii)->name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$return = $dom->saveHTML();\n\n\t\t//$return = '<html><body>aaaa</p>bb<p>ssdd</p>'.\"\\n<p>aaa</p>aa<p>bb</p>\";\n\t\t$return = preg_replace('/^<html><body>/', '', $return);\n\t\t$return = preg_replace('/<\\/body><\\/html>$/', '', $return);\n\t\treturn $return;\n\t} else {\n\t\treturn $stringtoclean;\n\t}\n}\n\n/**\n *\tClean a string from some undesirable HTML tags.\n *  Note. Not as secured as dol_string_onlythesehtmltags().\n *\n *\t@param\tstring\t$stringtoclean\t\t\tString to clean\n *  @param\tarray\t$disallowed_tags\t\tArray of tags not allowed\n *  @param\tstring\t$cleanalsosomestyles\tClean also some tags\n *\t@return string\t    \t\t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_nohtmltag() dol_string_onlythesehtmltags() dol_string_onlythesehtmlattributes()\n */\nfunction dol_string_neverthesehtmltags($stringtoclean, $disallowed_tags = array('textarea'), $cleanalsosomestyles = 0)\n{\n\t$temp = $stringtoclean;\n\tforeach ($disallowed_tags as $tagtoremove) {\n\t\t$temp = preg_replace('/<\\/?'.$tagtoremove.'>/', '', $temp);\n\t\t$temp = preg_replace('/<\\/?'.$tagtoremove.'\\s+[^>]*>/', '', $temp);\n\t}\n\n\tif ($cleanalsosomestyles) {\n\t\t$temp = preg_replace('/position\\s*:\\s*(absolute|fixed)\\s*!\\s*important/', '', $temp); // Note: If hacker try to introduce css comment into string to avoid this, string should be encoded by the dol_htmlentitiesbr so be harmless\n\t}\n\n\treturn $temp;\n}\n\n\n/**\n * Return first line of text. Cut will depends if content is HTML or not.\n *\n * @param \tstring\t$text\t\tInput text\n * @param\tint\t\t$nboflines  Nb of lines to get (default is 1 = first line only)\n * @param   string  $charset    Charset of $text string (UTF-8 by default)\n * @return\tstring\t\t\t\tOutput text\n * @see dol_nboflines_bis(), dol_string_nohtmltag(), dol_escape_htmltag()\n */\nfunction dolGetFirstLineOfText($text, $nboflines = 1, $charset = 'UTF-8')\n{\n\tif ($nboflines == 1) {\n\t\tif (dol_textishtml($text)) {\n\t\t\t$firstline = preg_replace('/<br[^>]*>.*$/s', '', $text); // The s pattern modifier means the . can match newline characters\n\t\t\t$firstline = preg_replace('/<div[^>]*>.*$/s', '', $firstline); // The s pattern modifier means the . can match newline characters\n\t\t} else {\n\t\t\t$firstline = preg_replace('/[\\n\\r].*/', '', $text);\n\t\t}\n\t\treturn $firstline.((strlen($firstline) != strlen($text)) ? '...' : '');\n\t} else {\n\t\t$ishtml = 0;\n\t\tif (dol_textishtml($text)) {\n\t\t\t$text = preg_replace('/\\n/', '', $text);\n\t\t\t$ishtml = 1;\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t} else {\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\n\t\t$text = strtr($text, $repTable);\n\t\tif ($charset == 'UTF-8') {\n\t\t\t$pattern = '/(<br[^>]*>)/Uu';\n\t\t} else {\n\t\t\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\t\t$pattern = '/(<br[^>]*>)/U'; // /U is to have UNGREEDY regex to limit to one html tag.\n\t\t}\n\t\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t$firstline = '';\n\t\t$i = 0;\n\t\t$nba = count($a); // 2x nb of lines in $a because $a contains also a line for each new line separator\n\t\twhile (($i < $nba) && ($i < ($nboflines * 2))) {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$firstline .= $a[$i];\n\t\t\t} elseif (($i < (($nboflines * 2) - 1)) && ($i < ($nba - 1))) {\n\t\t\t\t$firstline .= ($ishtml ? \"<br>\\n\" : \"\\n\");\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tunset($a);\n\t\treturn $firstline.(($i < $nba) ? '...' : '');\n\t}\n}\n\n\n/**\n * Replace CRLF in string with a HTML BR tag.\n * WARNING: The content after operation contains some HTML tags (the <br>) so be sure to also have encode the special chars of stringtoencode into HTML before.\n *\n * @param\tstring\t$stringtoencode\t\tString to encode\n * @param\tint     $nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br\n * @param   bool\t$forxml             false=Use <br>, true=Use <br />\n * @return\tstring\t\t\t\t\t\tString encoded\n * @see dol_nboflines(), dolGetFirstLineOfText()\n */\nfunction dol_nl2br($stringtoencode, $nl2brmode = 0, $forxml = false)\n{\n\tif (!$nl2brmode) {\n\t\treturn nl2br($stringtoencode, $forxml);\n\t} else {\n\t\t$ret = preg_replace('/(\\r\\n|\\r|\\n)/i', ($forxml ? '<br />' : '<br>'), $stringtoencode);\n\t\treturn $ret;\n\t}\n}\n\n\n/**\n *\tThis function is called to encode a string into a HTML string but differs from htmlentities because\n * \ta detection is done before to see if text is already HTML or not. Also, all entities but &,<,>,\" are converted.\n *  This permits to encode special chars to entities with no double encoding for already encoded HTML strings.\n * \tThis function also remove last EOL or BR if $removelasteolbr=1 (default).\n *  For PDF usage, you can show text by 2 ways:\n *              - writeHTMLCell -> param must be encoded into HTML.\n *              - MultiCell -> param must not be encoded into HTML.\n *              Because writeHTMLCell convert also \\n into <br>, if function\n *              is used to build PDF, nl2brmode must be 1.\n *\n *\t@param\tstring\t$stringtoencode\t\tString to encode\n *\t@param\tint\t\t$nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br (for use with FPDF writeHTMLCell function for example)\n *  @param  string\t$pagecodefrom       Pagecode stringtoencode is encoded\n *  @param\tint\t\t$removelasteolbr\t1=Remove last br or lasts \\n (default), 0=Do nothing\n *  @return\tstring\t\t\t\t\t\tString encoded\n */\nfunction dol_htmlentitiesbr($stringtoencode, $nl2brmode = 0, $pagecodefrom = 'UTF-8', $removelasteolbr = 1)\n{\n\t$newstring = $stringtoencode;\n\tif (dol_textishtml($stringtoencode)) {\t// Check if text is already HTML or not\n\t\t$newstring = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i', '<br>', $newstring); // Replace \"<br type=\"_moz\" />\" by \"<br>\". It's same and avoid pb with FPDF.\n\t\tif ($removelasteolbr) {\n\t\t\t$newstring = preg_replace('/<br>$/i', '', $newstring); // Remove last <br> (remove only last one)\n\t\t}\n\t\t$newstring = strtr($newstring, array('&'=>'__and__', '<'=>'__lt__', '>'=>'__gt__', '\"'=>'__dquot__'));\n\t\t$newstring = dol_htmlentities($newstring, ENT_COMPAT, $pagecodefrom); // Make entity encoding\n\t\t$newstring = strtr($newstring, array('__and__'=>'&', '__lt__'=>'<', '__gt__'=>'>', '__dquot__'=>'\"'));\n\t} else {\n\t\tif ($removelasteolbr) {\n\t\t\t$newstring = preg_replace('/(\\r\\n|\\r|\\n)$/i', '', $newstring); // Remove last \\n (may remove several)\n\t\t}\n\t\t$newstring = dol_nl2br(dol_htmlentities($newstring, ENT_COMPAT, $pagecodefrom), $nl2brmode);\n\t}\n\t// Other substitutions that htmlentities does not do\n\t//$newstring=str_replace(chr(128),'&euro;',$newstring);\t// 128 = 0x80. Not in html entity table.     // Seems useles with TCPDF. Make bug with UTF8 languages\n\treturn $newstring;\n}\n\n/**\n *\tThis function is called to decode a HTML string (it decodes entities and br tags)\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@param\tstring\t$pagecodeto\t\t\tPage code for result\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlentitiesbr_decode($stringtodecode, $pagecodeto = 'UTF-8')\n{\n\t$ret = dol_html_entity_decode($stringtodecode, ENT_COMPAT | ENT_HTML5, $pagecodeto);\n\t$ret = preg_replace('/'.\"\\r\\n\".'<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i', \"<br>\", $ret);\n\t$ret = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\r\\n\".'/i', \"\\r\\n\", $ret);\n\t$ret = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\n\".'/i', \"\\n\", $ret);\n\t$ret = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i', \"\\n\", $ret);\n\treturn $ret;\n}\n\n/**\n *\tThis function remove all ending \\n and br at end\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlcleanlastbr($stringtodecode)\n{\n\t$ret = preg_replace('/(<br>|<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>|'.\"\\n\".'|'.\"\\r\".')+$/i', \"\", $stringtodecode);\n\treturn $ret;\n}\n\n/**\n * Replace html_entity_decode functions to manage errors\n *\n * @param   string\t$a\t\t\t\t\tOperand a\n * @param   string\t$b\t\t\t\t\tOperand b (ENT_QUOTES|ENT_HTML5=convert simple, double quotes, colon, e accent, ...)\n * @param   string\t$c\t\t\t\t\tOperand c\n * @param\tstring\t$keepsomeentities\tEntities but &, <, >, \" are not converted.\n * @return  string\t\t\t\t\t\tString decoded\n */\nfunction dol_html_entity_decode($a, $b, $c = 'UTF-8', $keepsomeentities = 0)\n{\n\t$newstring = $a;\n\tif ($keepsomeentities) {\n\t\t$newstring = strtr($newstring, array('&amp;'=>'__andamp__', '&lt;'=>'__andlt__', '&gt;'=>'__andgt__', '\"'=>'__dquot__'));\n\t}\n\t$newstring = html_entity_decode($newstring, $b, $c);\n\tif ($keepsomeentities) {\n\t\t$newstring = strtr($newstring, array('__andamp__'=>'&amp;', '__andlt__'=>'&lt;', '__andgt__'=>'&gt;', '__dquot__'=>'\"'));\n\t}\n\treturn $newstring;\n}\n\n/**\n * Replace htmlentities functions.\n * Goal of this function is to be sure to have default values of htmlentities that match what we need.\n *\n * @param   string  $string         The input string to encode\n * @param   int     $flags          Flags (see PHP doc above)\n * @param   string  $encoding       Encoding page code\n * @param   bool    $double_encode  When double_encode is turned off, PHP will not encode existing html entities\n * @return  string  $ret            Encoded string\n */\nfunction dol_htmlentities($string, $flags = null, $encoding = 'UTF-8', $double_encode = false)\n{\n\treturn htmlentities($string, $flags, $encoding, $double_encode);\n}\n\n/**\n *\tCheck if a string is a correct iso string\n *\tIf not, it will we considered not HTML encoded even if it is by FPDF.\n *\tExample, if string contains euro symbol that has ascii code 128\n *\n *\t@param\tstring\t\t$s      \tString to check\n *  @param\tstring\t\t$clean\t\tClean if it is not an ISO. Warning, if file is utf8, you will get a bad formated file.\n *\t@return\tint|string  \t   \t\t0 if bad iso, 1 if good iso, Or the clean string if $clean is 1\n */\nfunction dol_string_is_good_iso($s, $clean = 0)\n{\n\t$len = dol_strlen($s);\n\t$out = '';\n\t$ok = 1;\n\tfor ($scursor = 0; $scursor < $len; $scursor++) {\n\t\t$ordchar = ord($s[$scursor]);\n\t\t//print $scursor.'-'.$ordchar.'<br>';\n\t\tif ($ordchar < 32 && $ordchar != 13 && $ordchar != 10) {\n\t\t\t$ok = 0;\n\t\t\tbreak;\n\t\t} elseif ($ordchar > 126 && $ordchar < 160) {\n\t\t\t$ok = 0;\n\t\t\tbreak;\n\t\t} elseif ($clean) {\n\t\t\t$out .= $s[$scursor];\n\t\t}\n\t}\n\tif ($clean) {\n\t\treturn $out;\n\t}\n\treturn $ok;\n}\n\n/**\n *\tReturn nb of lines of a clear text\n *\n *\t@param\tstring\t$s\t\t\tString to check\n * \t@param\tint     $maxchar\tNot yet used\n *\t@return\tint\t\t\t\t\tNumber of lines\n *  @see\tdol_nboflines_bis(), dolGetFirstLineOfText()\n */\nfunction dol_nboflines($s, $maxchar = 0)\n{\n\tif ($s == '') {\n\t\treturn 0;\n\t}\n\t$arraystring = explode(\"\\n\", $s);\n\t$nb = count($arraystring);\n\n\treturn $nb;\n}\n\n\n/**\n *\tReturn nb of lines of a formated text with \\n and <br> (WARNING: string must not have mixed \\n and br separators)\n *\n *\t@param\tstring\t$text      \t\tText\n *\t@param\tint\t\t$maxlinesize  \tLargeur de ligne en caracteres (ou 0 si pas de limite - defaut)\n * \t@param\tstring\t$charset\t\tGive the charset used to encode the $text variable in memory.\n *\t@return int\t\t\t\t\t\tNumber of lines\n *\t@see\tdol_nboflines(), dolGetFirstLineOfText()\n */\nfunction dol_nboflines_bis($text, $maxlinesize = 0, $charset = 'UTF-8')\n{\n\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\tif (dol_textishtml($text)) {\n\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t}\n\n\t$text = strtr($text, $repTable);\n\tif ($charset == 'UTF-8') {\n\t\t$pattern = '/(<br[^>]*>)/Uu';\n\t} else {\n\t\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\t$pattern = '/(<br[^>]*>)/U'; // /U is to have UNGREEDY regex to limit to one html tag.\n\t}\n\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t$nblines = (int) floor((count($a) + 1) / 2);\n\t// count possible auto line breaks\n\tif ($maxlinesize) {\n\t\tforeach ($a as $line) {\n\t\t\tif (dol_strlen($line) > $maxlinesize) {\n\t\t\t\t//$line_dec = html_entity_decode(strip_tags($line));\n\t\t\t\t$line_dec = html_entity_decode($line);\n\t\t\t\tif (dol_strlen($line_dec) > $maxlinesize) {\n\t\t\t\t\t$line_dec = wordwrap($line_dec, $maxlinesize, '\\n', true);\n\t\t\t\t\t$nblines += substr_count($line_dec, '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunset($a);\n\treturn $nblines;\n}\n\n/**\n *\tReturn if a text is a html content\n *\n *\t@param\tstring\t$msg\t\tContent to check\n *\t@param\tint\t\t$option\t\t0=Full detection, 1=Fast check\n *\t@return\tboolean\t\t\t\ttrue/false\n *\t@see\tdol_concatdesc()\n */\nfunction dol_textishtml($msg, $option = 0)\n{\n\tif ($option == 1) {\n\t\tif (preg_match('/<html/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<body/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<\\/textarea/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(b|em|i|u)>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<br/i', $msg)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else {\n\t\tif (preg_match('/<html/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<body/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<\\/textarea/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(b|em|i|u)>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<br\\/>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(br|div|font|li|p|span|strong|table)>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*\\/?>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<img\\s+[^<>]*src[^<>]*>/i', $msg)) {\n\t\t\treturn true; // must accept <img src=\"http://example.com/aaa.png\" />\n\t\t} elseif (preg_match('/<a\\s+[^<>]*href[^<>]*>/i', $msg)) {\n\t\t\treturn true; // must accept <a href=\"http://example.com/aaa.png\" />\n\t\t} elseif (preg_match('/<h[0-9]>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/&[A-Z0-9]{1,6};/i', $msg)) {\n\t\t\treturn true; // Html entities names (http://www.w3schools.com/tags/ref_entities.asp)\n\t\t} elseif (preg_match('/&#[0-9]{2,3};/i', $msg)) {\n\t\t\treturn true; // Html entities numbers (http://www.w3schools.com/tags/ref_entities.asp)\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n/**\n *  Concat 2 descriptions with a new line between them (second operand after first one with appropriate new line separator)\n *  text1 html + text2 html => text1 + '<br>' + text2\n *  text1 html + text2 txt  => text1 + '<br>' + dol_nl2br(text2)\n *  text1 txt  + text2 html => dol_nl2br(text1) + '<br>' + text2\n *  text1 txt  + text2 txt  => text1 + '\\n' + text2\n *\n *  @param  string  $text1          Text 1\n *  @param  string  $text2          Text 2\n *  @param  bool    $forxml         true=Use <br /> instead of <br> if we have to add a br tag\n *  @param  bool    $invert         invert order of description lines (we often use config MAIN_CHANGE_ORDER_CONCAT_DESCRIPTION in this parameter)\n *  @return string                  Text 1 + new line + Text2\n *  @see    dol_textishtml()\n */\nfunction dol_concatdesc($text1, $text2, $forxml = false, $invert = false)\n{\n\tif (!empty($invert)) {\n\t\t\t$tmp = $text1;\n\t\t\t$text1 = $text2;\n\t\t\t$text2 = $tmp;\n\t}\n\n\t$ret = '';\n\t$ret .= (!dol_textishtml($text1) && dol_textishtml($text2)) ? dol_nl2br(dol_escape_htmltag($text1, 0, 1, '', 1), 0, $forxml) : $text1;\n\t$ret .= (!empty($text1) && !empty($text2)) ? ((dol_textishtml($text1) || dol_textishtml($text2)) ? ($forxml ? \"<br \\>\\n\" : \"<br>\\n\") : \"\\n\") : \"\";\n\t$ret .= (dol_textishtml($text1) && !dol_textishtml($text2)) ? dol_nl2br(dol_escape_htmltag($text2, 0, 1, '', 1), 0, $forxml) : $text2;\n\treturn $ret;\n}\n\n\n\n/**\n * Return array of possible common substitutions. This includes several families like: 'system', 'mycompany', 'object', 'objectamount', 'date', 'user'\n *\n * @param\tTranslate\t$outputlangs\tOutput language\n * @param   int         $onlykey        1=Do not calculate some heavy values of keys (performance enhancement when we need only the keys), 2=Values are trunc and html sanitized (to use for help tooltip)\n * @param   array       $exclude        Array of family keys we want to exclude. For example array('system', 'mycompany', 'object', 'objectamount', 'date', 'user', ...)\n * @param   Object      $object         Object for keys on object\n * @return\tarray\t\t\t\t\t\tArray of substitutions\n * @see setSubstitFromObject()\n */\nfunction getCommonSubstitutionArray($outputlangs, $onlykey = 0, $exclude = null, $object = null)\n{\n\tglobal $db, $conf, $mysoc, $user, $extrafields;\n\n\t$substitutionarray = array();\n\n\tif (empty($exclude) || !in_array('user', $exclude)) {\n\t\t// Add SIGNATURE into substitutionarray first, so, when we will make the substitution,\n\t\t// this will include signature content first and then replace var found into content of signature\n\t\t$signature = $user->signature;\n\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t'__USER_SIGNATURE__' => (string) (($signature && empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN)) ? ($onlykey == 2 ? dol_trunc(dol_string_nohtmltag($signature), 30) : $signature) : '')\n\t\t));\n\n\t\tif (is_object($user)) {\n\t\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t\t'__USER_ID__' => (string) $user->id,\n\t\t\t\t'__USER_LOGIN__' => (string) $user->login,\n\t\t\t\t'__USER_EMAIL__' => (string) $user->email,\n\t\t\t\t'__USER_LASTNAME__' => (string) $user->lastname,\n\t\t\t\t'__USER_FIRSTNAME__' => (string) $user->firstname,\n\t\t\t\t'__USER_FULLNAME__' => (string) $user->getFullName($outputlangs),\n\t\t\t\t'__USER_SUPERVISOR_ID__' => (string) ($user->fk_user ? $user->fk_user : '0'),\n\t\t\t\t'__USER_REMOTE_IP__' => (string) getUserRemoteIP()\n\t\t\t\t));\n\t\t}\n\t}\n\tif ((empty($exclude) || !in_array('mycompany', $exclude)) && is_object($mysoc)) {\n\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t'__MYCOMPANY_NAME__'    => $mysoc->name,\n\t\t\t'__MYCOMPANY_EMAIL__'   => $mysoc->email,\n\t\t\t'__MYCOMPANY_PROFID1__' => $mysoc->idprof1,\n\t\t\t'__MYCOMPANY_PROFID2__' => $mysoc->idprof2,\n\t\t\t'__MYCOMPANY_PROFID3__' => $mysoc->idprof3,\n\t\t\t'__MYCOMPANY_PROFID4__' => $mysoc->idprof4,\n\t\t\t'__MYCOMPANY_PROFID5__' => $mysoc->idprof5,\n\t\t\t'__MYCOMPANY_PROFID6__' => $mysoc->idprof6,\n\t\t\t'__MYCOMPANY_CAPITAL__' => $mysoc->capital,\n\t\t\t'__MYCOMPANY_FULLADDRESS__' => (method_exists($mysoc, 'getFullAddress') ? $mysoc->getFullAddress(1, ', ') : ''),\t// $mysoc may be stdClass\n\t\t\t'__MYCOMPANY_ADDRESS__' => $mysoc->address,\n\t\t\t'__MYCOMPANY_ZIP__'     => $mysoc->zip,\n\t\t\t'__MYCOMPANY_TOWN__'    => $mysoc->town,\n\t\t\t'__MYCOMPANY_COUNTRY__'    => $mysoc->country,\n\t\t\t'__MYCOMPANY_COUNTRY_ID__' => $mysoc->country_id,\n\t\t\t'__MYCOMPANY_COUNTRY_CODE__' => $mysoc->country_code,\n\t\t\t'__MYCOMPANY_CURRENCY_CODE__' => $conf->currency\n\t\t));\n\t}\n\n\tif (($onlykey || is_object($object)) && (empty($exclude) || !in_array('object', $exclude))) {\n\t\tif ($onlykey) {\n\t\t\t$substitutionarray['__ID__'] = '__ID__';\n\t\t\t$substitutionarray['__REF__'] = '__REF__';\n\t\t\t$substitutionarray['__REF_CLIENT__'] = '__REF_CLIENT__';\n\t\t\t$substitutionarray['__REF_SUPPLIER__'] = '__REF_SUPPLIER__';\n\t\t\t$substitutionarray['__NOTE_PUBLIC__'] = '__NOTE_PUBLIC__';\n\t\t\t$substitutionarray['__NOTE_PRIVATE__'] = '__NOTE_PRIVATE__';\n\t\t\t$substitutionarray['__EXTRAFIELD_XXX__'] = '__EXTRAFIELD_XXX__';\n\n\t\t\tif (!empty($conf->societe->enabled)) {\t// Most objects are concerned\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = '__THIRDPARTY_ID__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = '__THIRDPARTY_NAME__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = '__THIRDPARTY_NAME_ALIAS__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_CLIENT__'] = '__THIRDPARTY_CODE_CLIENT__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_FOURNISSEUR__'] = '__THIRDPARTY_CODE_FOURNISSEUR__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = '__THIRDPARTY_EMAIL__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_PHONE__'] = '__THIRDPARTY_PHONE__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_FAX__'] = '__THIRDPARTY_FAX__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_ADDRESS__'] = '__THIRDPARTY_ADDRESS__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_ZIP__'] = '__THIRDPARTY_ZIP__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_TOWN__'] = '__THIRDPARTY_TOWN__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF1__'] = '__THIRDPARTY_IDPROF1__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF2__'] = '__THIRDPARTY_IDPROF2__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF3__'] = '__THIRDPARTY_IDPROF3__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF4__'] = '__THIRDPARTY_IDPROF4__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF5__'] = '__THIRDPARTY_IDPROF5__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF6__'] = '__THIRDPARTY_IDPROF6__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_TVAINTRA__'] = '__THIRDPARTY_TVAINTRA__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PUBLIC__'] = '__THIRDPARTY_NOTE_PUBLIC__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PRIVATE__'] = '__THIRDPARTY_NOTE_PRIVATE__';\n\t\t\t}\n\t\t\tif (!empty($conf->adherent->enabled) && (!is_object($object) || $object->element == 'adherent')) {\n\t\t\t\t$substitutionarray['__MEMBER_ID__'] = '__MEMBER_ID__';\n\t\t\t\t$substitutionarray['__MEMBER_CIVILITY__'] = '__MEMBER_CIVILITY__';\n\t\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__'] = '__MEMBER_FIRSTNAME__';\n\t\t\t\t$substitutionarray['__MEMBER_LASTNAME__'] = '__MEMBER_LASTNAME__';\n\t\t\t\t$substitutionarray['__MEMBER_USER_LOGIN_INFORMATION__'] = 'Login and pass of the external user account';\n\t\t\t\t/*$substitutionarray['__MEMBER_NOTE_PUBLIC__'] = '__MEMBER_NOTE_PUBLIC__';\n\t\t\t\t$substitutionarray['__MEMBER_NOTE_PRIVATE__'] = '__MEMBER_NOTE_PRIVATE__';*/\n\t\t\t}\n\t\t\tif (!empty($conf->recruitment->enabled) && (!is_object($object) || $object->element == 'candidature')) {\n\t\t\t\t$substitutionarray['__CANDIDATE_FULLNAME__'] = '__CANDIDATE_FULLNAME__';\n\t\t\t\t$substitutionarray['__CANDIDATE_FIRSTNAME__'] = '__CANDIDATE_FIRSTNAME__';\n\t\t\t\t$substitutionarray['__CANDIDATE_LASTNAME__'] = '__CANDIDATE_LASTNAME__';\n\t\t\t}\n\t\t\tif (!empty($conf->projet->enabled)) {\t\t// Most objects\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = '__PROJECT_ID__';\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = '__PROJECT_REF__';\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = '__PROJECT_NAME__';\n\t\t\t\t/*$substitutionarray['__PROJECT_NOTE_PUBLIC__'] = '__PROJECT_NOTE_PUBLIC__';\n\t\t\t\t$substitutionarray['__PROJECT_NOTE_PRIVATE__'] = '__PROJECT_NOTE_PRIVATE__';*/\n\t\t\t}\n\t\t\tif (!empty($conf->contrat->enabled) && (!is_object($object) || $object->element == 'contract')) {\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = 'Highest date planned for a service start';\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = 'Highest date and hour planned for service start';\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = 'Lowest data for planned expiration of service';\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = 'Lowest date and hour for planned expiration of service';\n\t\t\t}\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = 'UrlToPayOnlineIfApplicable';\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_TEXT_AND_URL__'] = 'TextAndUrlToPayOnlineIfApplicable';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT__'] = 'Security key (if key is not unique per record)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_MEMBER__'] = 'Security key for payment on a member subscription (one key per member)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_ORDER__'] = 'Security key for payment on an order';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_INVOICE__'] = 'Security key for payment on an invoice';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_CONTRACTLINE__'] = 'Security key for payment on a a service';\n\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_PROPOSAL__'] = 'Direct download url of a proposal';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_ORDER__'] = 'Direct download url of an order';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_INVOICE__'] = 'Direct download url of an invoice';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_CONTRACT__'] = 'Direct download url of a contract';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_SUPPLIER_PROPOSAL__'] = 'Direct download url of a supplier proposal';\n\n\t\t\tif (!empty($conf->expedition->enabled) && (!is_object($object) || $object->element == 'shipping')) {\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__'] = 'Shipping tracking number';\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__'] = 'Shipping tracking url';\n\t\t\t}\n\t\t\tif (!empty($conf->reception->enabled) && (!is_object($object) || $object->element == 'reception')) {\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUM__'] = 'Shippin tracking number of shipment';\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUMURL__'] = 'Shipping tracking url';\n\t\t\t}\n\t\t} else {\n\t\t\t$substitutionarray['__ID__'] = $object->id;\n\t\t\t$substitutionarray['__REF__'] = $object->ref;\n\t\t\t$substitutionarray['__REF_CLIENT__'] = (isset($object->ref_client) ? $object->ref_client : (isset($object->ref_customer) ? $object->ref_customer : null));\n\t\t\t$substitutionarray['__REF_SUPPLIER__'] = (isset($object->ref_supplier) ? $object->ref_supplier : null);\n\t\t\t$substitutionarray['__NOTE_PUBLIC__'] = (isset($object->note_public) ? $object->note_public : null);\n\t\t\t$substitutionarray['__NOTE_PRIVATE__'] = (isset($object->note_private) ? $object->note_private : null);\n\t\t\t$substitutionarray['__DATE_DELIVERY__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, 'day', 0, $outputlangs) : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_DAY__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%d\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_DAY_TEXT__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%A\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_MON__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%m\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_MON_TEXT__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%b\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_YEAR__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%Y\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_HH__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%H\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_MM__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%M\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_SS__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%S\") : '');\n\n\t\t\t// For backward compatibility\n\t\t\t$substitutionarray['__REFCLIENT__'] = (isset($object->ref_client) ? $object->ref_client : (isset($object->ref_customer) ? $object->ref_customer : null));\n\t\t\t$substitutionarray['__REFSUPPLIER__'] = (isset($object->ref_supplier) ? $object->ref_supplier : null);\n\t\t\t$substitutionarray['__SUPPLIER_ORDER_DATE_DELIVERY__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, 'day', 0, $outputlangs) : '');\n\t\t\t$substitutionarray['__SUPPLIER_ORDER_DELAY_DELIVERY__'] = (isset($object->availability_code) ? ($outputlangs->transnoentities(\"AvailabilityType\".$object->availability_code) != ('AvailabilityType'.$object->availability_code) ? $outputlangs->transnoentities(\"AvailabilityType\".$object->availability_code) : $outputlangs->convToOutputCharset(isset($object->availability) ? $object->availability : '')) : '');\n\n\t\t\tif (is_object($object) && ($object->element == 'adherent' || $object->element == 'member') && $object->id > 0) {\n\t\t\t\t$birthday = (empty($object->birth) ? '' : dol_print_date($object->birth, 'day'));\n\n\t\t\t\t$substitutionarray['__MEMBER_ID__'] = (isset($object->id) ? $object->id : '');\n\t\t\t\tif (method_exists($object, 'getCivilityLabel')) {\n\t\t\t\t\t$substitutionarray['__MEMBER_CIVILITY__'] = $object->getCivilityLabel();\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__'] = (isset($object->firstname) ? $object->firstname : '');\n\t\t\t\t$substitutionarray['__MEMBER_LASTNAME__'] = (isset($object->lastname) ? $object->lastname : '');\n\t\t\t\t$substitutionarray['__MEMBER_USER_LOGIN_INFORMATION__'] = '';\n\t\t\t\tif (method_exists($object, 'getFullName')) {\n\t\t\t\t\t$substitutionarray['__MEMBER_FULLNAME__'] = $object->getFullName($outputlangs);\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__MEMBER_COMPANY__'] = (isset($object->societe) ? $object->societe : '');\n\t\t\t\t$substitutionarray['__MEMBER_ADDRESS__'] = (isset($object->address) ? $object->address : '');\n\t\t\t\t$substitutionarray['__MEMBER_ZIP__'] = (isset($object->zip) ? $object->zip : '');\n\t\t\t\t$substitutionarray['__MEMBER_TOWN__'] = (isset($object->town) ? $object->town : '');\n\t\t\t\t$substitutionarray['__MEMBER_COUNTRY__'] = (isset($object->country) ? $object->country : '');\n\t\t\t\t$substitutionarray['__MEMBER_EMAIL__'] = (isset($object->email) ? $object->email : '');\n\t\t\t\t$substitutionarray['__MEMBER_BIRTH__'] = (isset($birthday) ? $birthday : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHOTO__'] = (isset($object->photo) ? $object->photo : '');\n\t\t\t\t$substitutionarray['__MEMBER_LOGIN__'] = (isset($object->login) ? $object->login : '');\n\t\t\t\t$substitutionarray['__MEMBER_PASSWORD__'] = (isset($object->pass) ? $object->pass : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHONE__'] = (isset($object->phone) ? $object->phone : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHONEPRO__'] = (isset($object->phone_perso) ? $object->phone_perso : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHONEMOBILE__'] = (isset($object->phone_mobile) ? $object->phone_mobile : '');\n\t\t\t\t$substitutionarray['__MEMBER_TYPE__'] = (isset($object->type) ? $object->type : '');\n\t\t\t\t$substitutionarray['__MEMBER_FIRST_SUBSCRIPTION_DATE__']       = dol_print_date($object->first_subscription_date, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_FIRST_SUBSCRIPTION_DATE_START__'] = dol_print_date($object->first_subscription_date_start, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_FIRST_SUBSCRIPTION_DATE_END__']   = dol_print_date($object->first_subscription_date_end, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_LAST_SUBSCRIPTION_DATE__']        = dol_print_date($object->last_subscription_date, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_LAST_SUBSCRIPTION_DATE_START__']  = dol_print_date($object->last_subscription_date_start, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_LAST_SUBSCRIPTION_DATE_END__']    = dol_print_date($object->last_subscription_date_end, 'dayrfc');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'societe') {\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object) ? $object->id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object) ? $object->name : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object) ? $object->name_alias : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_CLIENT__'] = (is_object($object) ? $object->code_client : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_FOURNISSEUR__'] = (is_object($object) ? $object->code_fournisseur : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object) ? $object->email : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_PHONE__'] = (is_object($object) ? $object->phone : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_FAX__'] = (is_object($object) ? $object->fax : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ADDRESS__'] = (is_object($object) ? $object->address : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ZIP__'] = (is_object($object) ? $object->zip : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TOWN__'] = (is_object($object) ? $object->town : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_ID__'] = (is_object($object) ? $object->country_id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_CODE__'] = (is_object($object) ? $object->country_code : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF1__'] = (is_object($object) ? $object->idprof1 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF2__'] = (is_object($object) ? $object->idprof2 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF3__'] = (is_object($object) ? $object->idprof3 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF4__'] = (is_object($object) ? $object->idprof4 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF5__'] = (is_object($object) ? $object->idprof5 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF6__'] = (is_object($object) ? $object->idprof6 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TVAINTRA__'] = (is_object($object) ? $object->tva_intra : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PUBLIC__'] = (is_object($object) ? dol_htmlentitiesbr($object->note_public) : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PRIVATE__'] = (is_object($object) ? dol_htmlentitiesbr($object->note_private) : '');\n\t\t\t} elseif (is_object($object->thirdparty)) {\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object->thirdparty) ? $object->thirdparty->id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object->thirdparty) ? $object->thirdparty->name : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object->thirdparty) ? $object->thirdparty->name_alias : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_CLIENT__'] = (is_object($object->thirdparty) ? $object->thirdparty->code_client : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_FOURNISSEUR__'] = (is_object($object->thirdparty) ? $object->thirdparty->code_fournisseur : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object->thirdparty) ? $object->thirdparty->email : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_PHONE__'] = (is_object($object->thirdparty) ? $object->thirdparty->phone : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_FAX__'] = (is_object($object->thirdparty) ? $object->thirdparty->fax : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ADDRESS__'] = (is_object($object->thirdparty) ? $object->thirdparty->address : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ZIP__'] = (is_object($object->thirdparty) ? $object->thirdparty->zip : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TOWN__'] = (is_object($object->thirdparty) ? $object->thirdparty->town : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_ID__'] = (is_object($object->thirdparty) ? $object->thirdparty->country_id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_CODE__'] = (is_object($object->thirdparty) ? $object->thirdparty->country_code : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF1__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof1 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF2__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof2 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF3__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof3 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF4__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof4 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF5__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof5 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF6__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof6 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TVAINTRA__'] = (is_object($object->thirdparty) ? $object->thirdparty->tva_intra : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PUBLIC__'] = (is_object($object->thirdparty) ? dol_htmlentitiesbr($object->thirdparty->note_public) : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PRIVATE__'] = (is_object($object->thirdparty) ? dol_htmlentitiesbr($object->thirdparty->note_private) : '');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'recruitmentcandidature') {\n\t\t\t\t$substitutionarray['__CANDIDATE_FULLNAME__'] = $object->getFullName($outputlangs);\n\t\t\t\t$substitutionarray['__CANDIDATE_FIRSTNAME__'] = $object->firstname;\n\t\t\t\t$substitutionarray['__CANDIDATE_LASTNAME__'] = $object->lastname;\n\t\t\t}\n\n\t\t\tif (is_object($object->project)) {\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = (is_object($object->project) ? $object->project->id : '');\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = (is_object($object->project) ? $object->project->ref : '');\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = (is_object($object->project) ? $object->project->title : '');\n\t\t\t}\n\t\t\tif (is_object($object->projet)) {\t// Deprecated, for backward compatibility\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = (is_object($object->projet) ? $object->projet->id : '');\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = (is_object($object->projet) ? $object->projet->ref : '');\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = (is_object($object->projet) ? $object->projet->title : '');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'shipping') {\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__'] = $object->tracking_number;\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__'] = $object->tracking_url;\n\t\t\t}\n\t\t\tif (is_object($object) && $object->element == 'reception') {\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUM__'] = $object->tracking_number;\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUMURL__'] = $object->tracking_url;\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'contrat' && $object->id > 0 && is_array($object->lines)) {\n\t\t\t\t$dateplannedstart = '';\n\t\t\t\t$datenextexpiration = '';\n\t\t\t\tforeach ($object->lines as $line) {\n\t\t\t\t\tif ($line->date_ouverture_prevue > $dateplannedstart) {\n\t\t\t\t\t\t$dateplannedstart = $line->date_ouverture_prevue;\n\t\t\t\t\t}\n\t\t\t\t\tif ($line->statut == 4 && $line->date_fin_prevue && (!$datenextexpiration || $line->date_fin_prevue < $datenextexpiration)) {\n\t\t\t\t\t\t$datenextexpiration = $line->date_fin_prevue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = dol_print_date($dateplannedstart, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = dol_print_date($dateplannedstart, 'standard');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = dol_print_date($datenextexpiration, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = dol_print_date($datenextexpiration, 'standard');\n\t\t\t}\n\n\t\t\t// Create dynamic tags for __EXTRAFIELD_FIELD__\n\t\t\tif ($object->table_element && $object->id > 0) {\n\t\t\t\tif (!is_object($extrafields)) {\n\t\t\t\t\t$extrafields = new ExtraFields($db);\n\t\t\t\t}\n\t\t\t\t$extrafields->fetch_name_optionals_label($object->table_element, true);\n\n\t\t\t\tif ($object->fetch_optionals() > 0) {\n\t\t\t\t\tif (is_array($extrafields->attributes[$object->table_element]['label']) && count($extrafields->attributes[$object->table_element]['label']) > 0) {\n\t\t\t\t\t\tforeach ($extrafields->attributes[$object->table_element]['label'] as $key => $label) {\n\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'__'] = $object->array_options['options_'.$key];\n\t\t\t\t\t\t\tif ($extrafields->attributes[$object->table_element]['type'][$key] == 'date') {\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'__'] = dol_print_date($object->array_options['options_'.$key], 'day');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_LOCALE__'] = dol_print_date($object->array_options['options_'.$key], 'day', 'tzserver', $outputlangs);\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_RFC__'] = dol_print_date($object->array_options['options_'.$key], 'dayrfc');\n\t\t\t\t\t\t\t} elseif ($extrafields->attributes[$object->table_element]['type'][$key] == 'datetime') {\n\t\t\t\t\t\t\t\t$datetime = $object->array_options['options_'.$key];\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'dayhour') : '');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_LOCALE__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'dayhour', 'tzserver', $outputlangs) : '');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_DAY_LOCALE__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'day', 'tzserver', $outputlangs) : '');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_RFC__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'dayhourrfc') : '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Complete substitution array with the url to make online payment\n\t\t\t$paymenturl = '';\n\t\t\tif (empty($substitutionarray['__REF__'])) {\n\t\t\t\t$paymenturl = '';\n\t\t\t} else {\n\t\t\t\t// Set the online payment url link into __ONLINE_PAYMENT_URL__ key\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/payments.lib.php';\n\t\t\t\t$outputlangs->loadLangs(array('paypal', 'other'));\n\t\t\t\t$typeforonlinepayment = 'free';\n\t\t\t\tif (is_object($object) && $object->element == 'commande') {\n\t\t\t\t\t$typeforonlinepayment = 'order';\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'facture') {\n\t\t\t\t\t$typeforonlinepayment = 'invoice';\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'member') {\n\t\t\t\t\t$typeforonlinepayment = 'member';\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'contrat') {\n\t\t\t\t\t$typeforonlinepayment = 'contract';\n\t\t\t\t}\n\t\t\t\t$url = getOnlinePaymentUrl(0, $typeforonlinepayment, $substitutionarray['__REF__']);\n\t\t\t\t$paymenturl = $url;\n\t\t\t}\n\n\t\t\tif ($object->id > 0) {\n\t\t\t\t$substitutionarray['__ONLINE_PAYMENT_TEXT_AND_URL__'] = ($paymenturl ?str_replace('\\n', \"\\n\", $outputlangs->trans(\"PredefinedMailContentLink\", $paymenturl)) : '');\n\t\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = $paymenturl;\n\n\t\t\t\tif (!empty($conf->global->PROPOSAL_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'propal') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_PROPOSAL__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_PROPOSAL__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->ORDER_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'commande') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_ORDER__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_ORDER__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->INVOICE_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'facture') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_INVOICE__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_INVOICE__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->CONTRACT_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'contrat') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_CONTRACT__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_CONTRACT__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->SUPPLIER_PROPOSAL_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'supplier_proposal') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_SUPPLIER_PROPOSAL__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_SUPPLIER_PROPOSAL__'] = '';\n\t\t\t\t}\n\n\t\t\t\tif (is_object($object) && $object->element == 'propal') {\n\t\t\t\t\t$substitutionarray['__URL_PROPOSAL__'] = DOL_MAIN_URL_ROOT.\"/comm/propal/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'commande') {\n\t\t\t\t\t$substitutionarray['__URL_ORDER__'] = DOL_MAIN_URL_ROOT.\"/commande/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'facture') {\n\t\t\t\t\t$substitutionarray['__URL_INVOICE__'] = DOL_MAIN_URL_ROOT.\"/compta/facture/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'contrat') {\n\t\t\t\t\t$substitutionarray['__URL_CONTRACT__'] = DOL_MAIN_URL_ROOT.\"/contrat/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'supplier_proposal') {\n\t\t\t\t\t$substitutionarray['__URL_SUPPLIER_PROPOSAL__'] = DOL_MAIN_URL_ROOT.\"/supplier_proposal/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'action') {\n\t\t\t\t$substitutionarray['__EVENT_LABEL__'] = $object->label;\n\t\t\t\t$substitutionarray['__EVENT_DATE__'] = dol_print_date($object->datep, '%A %d %b %Y');\n\t\t\t\t$substitutionarray['__EVENT_TIME__'] = dol_print_date($object->datep, '%H:%M:%S');\n\t\t\t}\n\t\t}\n\t}\n\tif (empty($exclude) || !in_array('objectamount', $exclude)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/functionsnumtoword.lib.php';\n\n\t\t$substitutionarray['__DATE_YMD__']        = is_object($object) ? (isset($object->date) ? dol_print_date($object->date, 'day', 0, $outputlangs) : null) : '';\n\t\t$substitutionarray['__DATE_DUE_YMD__']    = is_object($object) ? (isset($object->date_lim_reglement) ? dol_print_date($object->date_lim_reglement, 'day', 0, $outputlangs) : null) : '';\n\n\t\t$substitutionarray['__AMOUNT__']          = is_object($object) ? $object->total_ttc : '';\n\t\t$substitutionarray['__AMOUNT_TEXT__']     = is_object($object) ? dol_convertToWord($object->total_ttc, $outputlangs, '', true) : '';\n\t\t$substitutionarray['__AMOUNT_TEXTCURRENCY__'] = is_object($object) ? dol_convertToWord($object->total_ttc, $outputlangs, $conf->currency, true) : '';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX__'] = is_object($object) ? $object->total_ht : '';\n\t\t$substitutionarray['__AMOUNT_VAT__']      = is_object($object) ? (isset($object->total_vat) ? $object->total_vat : $object->total_tva) : '';\n\t\t$substitutionarray['__AMOUNT_VAT_TEXT__']      = is_object($object) ? (isset($object->total_vat) ? dol_convertToWord($object->total_vat, $outputlangs, '', true) : dol_convertToWord($object->total_tva, $outputlangs, '', true)) : '';\n\t\t$substitutionarray['__AMOUNT_VAT_TEXTCURRENCY__']      = is_object($object) ? (isset($object->total_vat) ? dol_convertToWord($object->total_vat, $outputlangs, $conf->currency, true) : dol_convertToWord($object->total_tva, $outputlangs, $conf->currency, true)) : '';\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(1)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX2__']     = is_object($object) ? $object->total_localtax1 : '';\n\t\t}\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(2)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX3__']     = is_object($object) ? $object->total_localtax2 : '';\n\t\t}\n\n\t\t$substitutionarray['__AMOUNT_FORMATED__']          = is_object($object) ? ($object->total_ttc ? price($object->total_ttc, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX_FORMATED__'] = is_object($object) ? ($object->total_ht ? price($object->total_ht, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t$substitutionarray['__AMOUNT_VAT_FORMATED__']      = is_object($object) ? (isset($object->total_vat) ? price($object->total_vat, 0, $outputlangs, 0, -1, -1, $conf->currency) : ($object->total_tva ? price($object->total_tva, 0, $outputlangs, 0, -1, -1, $conf->currency) : null)) : '';\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(1)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX2_FORMATED__']     = is_object($object) ? ($object->total_localtax1 ? price($object->total_localtax1, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t}\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(2)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX3_FORMATED__']     = is_object($object) ? ($object->total_localtax2 ? price($object->total_localtax2, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t}\n\n\t\t$substitutionarray['__AMOUNT_MULTICURRENCY__']          = (is_object($object) && isset($object->multicurrency_total_ttc)) ? $object->multicurrency_total_ttc : '';\n\t\t$substitutionarray['__AMOUNT_MULTICURRENCY_TEXT__']     = (is_object($object) && isset($object->multicurrency_total_ttc)) ? dol_convertToWord($object->multicurrency_total_ttc, $outputlangs, '', true) : '';\n\t\t$substitutionarray['__AMOUNT_MULTICURRENCY_TEXTCURRENCY__'] = (is_object($object) && isset($object->multicurrency_total_ttc)) ? dol_convertToWord($object->multicurrency_total_ttc, $outputlangs, $object->multicurrency_code, true) : '';\n\t\t// TODO Add other keys for foreign multicurrency\n\n\t\t// For backward compatibility\n\t\tif ($onlykey != 2) {\n\t\t\t$substitutionarray['__TOTAL_TTC__']    = is_object($object) ? $object->total_ttc : '';\n\t\t\t$substitutionarray['__TOTAL_HT__']     = is_object($object) ? $object->total_ht : '';\n\t\t\t$substitutionarray['__TOTAL_VAT__']    = is_object($object) ? (isset($object->total_vat) ? $object->total_vat : $object->total_tva) : '';\n\t\t}\n\t}\n\n\t//var_dump($substitutionarray['__AMOUNT_FORMATED__']);\n\tif (empty($exclude) || !in_array('date', $exclude)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t$tmp2 = dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp3 = dol_get_prev_month($tmp['mon'], $tmp['year']);\n\t\t$tmp4 = dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp5 = dol_get_next_month($tmp['mon'], $tmp['year']);\n\n\t\t$daytext = $outputlangs->trans('Day'.$tmp['wday']);\n\n\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t'__DAY__' => (string) $tmp['mday'],\n\t\t\t'__DAY_TEXT__' => $daytext, // Monday\n\t\t\t'__DAY_TEXT_SHORT__' => dol_trunc($daytext, 3, 'right', 'UTF-8', 1), // Mon\n\t\t\t'__DAY_TEXT_MIN__' => dol_trunc($daytext, 1, 'right', 'UTF-8', 1), // M\n\t\t\t'__MONTH__' => (string) $tmp['mon'],\n\t\t\t'__MONTH_TEXT__' => $outputlangs->trans('Month'.sprintf(\"%02d\", $tmp['mon'])),\n\t\t\t'__MONTH_TEXT_SHORT__' => $outputlangs->trans('MonthShort'.sprintf(\"%02d\", $tmp['mon'])),\n\t\t\t'__MONTH_TEXT_MIN__' => $outputlangs->trans('MonthVeryShort'.sprintf(\"%02d\", $tmp['mon'])),\n\t\t\t'__YEAR__' => (string) $tmp['year'],\n\t\t\t'__PREVIOUS_DAY__' => (string) $tmp2['day'],\n\t\t\t'__PREVIOUS_MONTH__' => (string) $tmp3['month'],\n\t\t\t'__PREVIOUS_YEAR__' => (string) ($tmp['year'] - 1),\n\t\t\t'__NEXT_DAY__' => (string) $tmp4['day'],\n\t\t\t'__NEXT_MONTH__' => (string) $tmp5['month'],\n\t\t\t'__NEXT_YEAR__' => (string) ($tmp['year'] + 1),\n\t\t));\n\t}\n\n\tif (!empty($conf->multicompany->enabled)) {\n\t\t$substitutionarray = array_merge($substitutionarray, array('__ENTITY_ID__' => $conf->entity));\n\t}\n\tif (empty($exclude) || !in_array('system', $exclude)) {\n\t\t$substitutionarray['__DOL_MAIN_URL_ROOT__'] = DOL_MAIN_URL_ROOT;\n\t\t$substitutionarray['__(AnyTranslationKey)__'] = $outputlangs->trans('TranslationOfKey');\n\t\t$substitutionarray['__(AnyTranslationKey|langfile)__'] = $outputlangs->trans('TranslationOfKey').' (load also language file before)';\n\t\t$substitutionarray['__[AnyConstantKey]__'] = $outputlangs->trans('ValueOfConstantKey');\n\t}\n\n\treturn $substitutionarray;\n}\n\n/**\n *  Make substitution into a text string, replacing keys with vals from $substitutionarray (oldval=>newval),\n *  and texts like __(TranslationKey|langfile)__ and __[ConstantKey]__ are also replaced.\n *  Example of usage:\n *  $substitutionarray = getCommonSubstitutionArray($langs, 0, null, $thirdparty);\n *  complete_substitutions_array($substitutionarray, $langs, $thirdparty);\n *  $mesg = make_substitutions($mesg, $substitutionarray, $langs);\n *\n *  @param\tstring\t\t$text\t      \t\t\t\t\tSource string in which we must do substitution\n *  @param  array\t\t$substitutionarray\t\t\t\tArray with key->val to substitute. Example: array('__MYKEY__' => 'MyVal', ...)\n *  @param\tTranslate\t$outputlangs\t\t\t\t\tOutput language\n *  @param\tint\t\t\t$converttextinhtmlifnecessary\t0=Convert only value into HTML if text is already in HTML\n *  \t\t\t\t\t\t\t\t\t\t\t\t\t1=Will also convert initial $text into HTML if we try to insert one value that is HTML\n * \t@return string  \t\t    \t\t\t\t\t\tOutput string after substitutions\n *  @see\tcomplete_substitutions_array(), getCommonSubstitutionArray()\n */\nfunction make_substitutions($text, $substitutionarray, $outputlangs = null, $converttextinhtmlifnecessary = 0)\n{\n\tglobal $conf, $langs;\n\n\tif (!is_array($substitutionarray)) {\n\t\treturn 'ErrorBadParameterSubstitutionArrayWhenCalling_make_substitutions';\n\t}\n\n\tif (empty($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\n\t// Is initial text HTML or simple text ?\n\t$msgishtml = 0;\n\tif (dol_textishtml($text, 1)) {\n\t\t$msgishtml = 1;\n\t}\n\n\t// Make substitution for language keys: __(AnyTranslationKey)__ or __(AnyTranslationKey|langfile)__\n\tif (is_object($outputlangs)) {\n\t\t$reg = array();\n\t\twhile (preg_match('/__\\(([^\\)]+)\\)__/', $text, $reg)) {\n\t\t\t// If key is __(TranslationKey|langfile)__, then force load of langfile.lang\n\t\t\t$tmp = explode('|', $reg[1]);\n\t\t\tif (!empty($tmp[1])) {\n\t\t\t\t$outputlangs->load($tmp[1]);\n\t\t\t}\n\n\t\t\t$value = $outputlangs->transnoentitiesnoconv($reg[1]);\n\n\t\t\tif (empty($converttextinhtmlifnecessary)) {\n\t\t\t\t// convert $newval into HTML is necessary\n\t\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $msgishtml ? dol_htmlentitiesbr($value) : $value, $text);\n\t\t\t} else {\n\t\t\t\tif (! $msgishtml) {\n\t\t\t\t\t$valueishtml = dol_textishtml($value, 1);\n\n\t\t\t\t\tif ($valueishtml) {\n\t\t\t\t\t\t$text = dol_htmlentitiesbr($text);\n\t\t\t\t\t\t$msgishtml = 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$value = dol_nl2br(\"$value\");\n\t\t\t\t}\n\n\t\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $value, $text);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Make substitution for constant keys.\n\t// Must be after the substitution of translation, so if the text of translation contains a string __[xxx]__, it is also converted.\n\t$reg = array();\n\twhile (preg_match('/__\\[([^\\]]+)\\]__/', $text, $reg)) {\n\t\t$keyfound = $reg[1];\n\t\tif (isASecretKey($keyfound)) {\n\t\t\t$value = '*****forbidden*****';\n\t\t} else {\n\t\t\t$value = empty($conf->global->$keyfound) ? '' : $conf->global->$keyfound;\n\t\t}\n\n\t\tif (empty($converttextinhtmlifnecessary)) {\n\t\t\t// convert $newval into HTML is necessary\n\t\t\t$text = preg_replace('/__\\['.preg_quote($keyfound, '/').'\\]__/', $msgishtml ? dol_htmlentitiesbr($value) : $value, $text);\n\t\t} else {\n\t\t\tif (! $msgishtml) {\n\t\t\t\t$valueishtml = dol_textishtml($value, 1);\n\n\t\t\t\tif ($valueishtml) {\n\t\t\t\t\t$text = dol_htmlentitiesbr($text);\n\t\t\t\t\t$msgishtml = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$value = dol_nl2br(\"$value\");\n\t\t\t}\n\n\t\t\t$text = preg_replace('/__\\['.preg_quote($keyfound, '/').'\\]__/', $value, $text);\n\t\t}\n\t}\n\n\t// Make substitition for array $substitutionarray\n\tforeach ($substitutionarray as $key => $value) {\n\t\tif (!isset($value)) {\n\t\t\tcontinue; // If value is null, it same than not having substitution key at all into array, we do not replace.\n\t\t}\n\n\t\tif ($key == '__USER_SIGNATURE__' && (!empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) {\n\t\t\t$value = ''; // Protection\n\t\t}\n\n\t\tif (empty($converttextinhtmlifnecessary)) {\n\t\t\t$text = str_replace(\"$key\", \"$value\", $text); // We must keep the \" to work when value is 123.5 for example\n\t\t} else {\n\t\t\tif (! $msgishtml) {\n\t\t\t\t$valueishtml = dol_textishtml($value, 1);\n\n\t\t\t\tif ($valueishtml) {\n\t\t\t\t\t$text = dol_htmlentitiesbr($text);\n\t\t\t\t\t$msgishtml = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$value = dol_nl2br(\"$value\");\n\t\t\t}\n\t\t\t$text = str_replace(\"$key\", \"$value\", $text); // We must keep the \" to work when value is 123.5 for example\n\t\t}\n\t}\n\n\treturn $text;\n}\n\n/**\n *  Complete the $substitutionarray with more entries coming from external module that had set the \"substitutions=1\" into module_part array.\n *  In this case, method completesubstitutionarray provided by module is called.\n *\n *  @param  array\t\t$substitutionarray\t\tArray substitution old value => new value value\n *  @param  Translate\t$outputlangs            Output language\n *  @param  Object\t\t$object                 Source object\n *  @param  mixed\t\t$parameters       \t\tAdd more parameters (useful to pass product lines)\n *  @param  string      $callfunc               What is the name of the custom function that will be called? (default: completesubstitutionarray)\n *  @return\tvoid\n *  @see \tmake_substitutions()\n */\nfunction complete_substitutions_array(&$substitutionarray, $outputlangs, $object = null, $parameters = null, $callfunc = \"completesubstitutionarray\")\n{\n\tglobal $conf, $user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t// Note: substitution key for each extrafields, using key __EXTRA_XXX__ is already available into the getCommonSubstitutionArray used to build the substitution array.\n\n\t// Check if there is external substitution to do, requested by plugins\n\t$dirsubstitutions = array_merge(array(), (array) $conf->modules_parts['substitutions']);\n\n\tforeach ($dirsubstitutions as $reldir) {\n\t\t$dir = dol_buildpath($reldir, 0);\n\n\t\t// Check if directory exists\n\t\tif (!dol_is_dir($dir)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$substitfiles = dol_dir_list($dir, 'files', 0, 'functions_');\n\t\tforeach ($substitfiles as $substitfile) {\n\t\t\t$reg = array();\n\t\t\tif (preg_match('/functions_(.*)\\.lib\\.php/i', $substitfile['name'], $reg)) {\n\t\t\t\t$module = $reg[1];\n\n\t\t\t\tdol_syslog(\"Library \".$substitfile['name'].\" found into \".$dir);\n\t\t\t\t// Include the user's functions file\n\t\t\t\trequire_once $dir.$substitfile['name'];\n\t\t\t\t// Call the user's function, and only if it is defined\n\t\t\t\t$function_name = $module.\"_\".$callfunc;\n\t\t\t\tif (function_exists($function_name)) {\n\t\t\t\t\t$function_name($substitutionarray, $outputlangs, $object, $parameters);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (!empty($conf->global->ODT_ENABLE_ALL_TAGS_IN_SUBSTITUTIONS)) {\n\t\t// to list all tags in odt template\n\t\t$tags = '';\n\t\tforeach ($substitutionarray as $key => $value) {\n\t\t\t$tags .= '{'.$key.'} => '.$value.\"\\n\";\n\t\t}\n\t\t$substitutionarray = array_merge($substitutionarray, array('__ALL_TAGS__' => $tags));\n\t}\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t$date_start    Start date\n *    @param    int\t$date_end      End date\n *    @param    string\t\t$format        Output format\n *    @param\tTranslate\t$outputlangs   Output language\n *    @return\tvoid\n */\nfunction print_date_range($date_start, $date_end, $format = '', $outputlangs = '')\n{\n\tprint get_date_range($date_start, $date_end, $format, $outputlangs);\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t\t\t$date_start    \t\tStart date\n *    @param    int\t\t\t$date_end      \t\tEnd date\n *    @param    string\t\t$format        \t\tOutput format\n *    @param\tTranslate\t$outputlangs   \t\tOutput language\n *    @param\tinteger\t\t$withparenthesis\t1=Add parenthesis, 0=non parenthesis\n *    @return\tstring\t\t\t\t\t\t\tString\n */\nfunction get_date_range($date_start, $date_end, $format = '', $outputlangs = '', $withparenthesis = 1)\n{\n\tglobal $langs;\n\n\t$out = '';\n\n\tif (!is_object($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\n\tif ($date_start && $date_end) {\n\t\t$out .= ($withparenthesis ? ' (' : '').$outputlangs->transnoentitiesnoconv('DateFromTo', dol_print_date($date_start, $format, false, $outputlangs), dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis ? ')' : '');\n\t}\n\tif ($date_start && !$date_end) {\n\t\t$out .= ($withparenthesis ? ' (' : '').$outputlangs->transnoentitiesnoconv('DateFrom', dol_print_date($date_start, $format, false, $outputlangs)).($withparenthesis ? ')' : '');\n\t}\n\tif (!$date_start && $date_end) {\n\t\t$out .= ($withparenthesis ? ' (' : '').$outputlangs->transnoentitiesnoconv('DateUntil', dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis ? ')' : '');\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return firstname and lastname in correct order\n *\n * @param\tstring\t$firstname\t\tFirstname\n * @param\tstring\t$lastname\t\tLastname\n * @param\tint\t\t$nameorder\t\t-1=Auto, 0=Lastname+Firstname, 1=Firstname+Lastname, 2=Firstname, 3=Firstname if defined else lastname, 4=Lastname, 5=Lastname if defined else firstname\n * @return\tstring\t\t\t\t\tFirstname + lastname or Lastname + firstname\n */\nfunction dolGetFirstLastname($firstname, $lastname, $nameorder = -1)\n{\n\tglobal $conf;\n\n\t$ret = '';\n\t// If order not defined, we use the setup\n\tif ($nameorder < 0) {\n\t\t$nameorder = (empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION) ? 1 : 0);\n\t}\n\tif ($nameorder == 1) {\n\t\t$ret .= $firstname;\n\t\tif ($firstname && $lastname) {\n\t\t\t$ret .= ' ';\n\t\t}\n\t\t$ret .= $lastname;\n\t} elseif ($nameorder == 2 || $nameorder == 3) {\n\t\t$ret .= $firstname;\n\t\tif (empty($ret) && $nameorder == 3) {\n\t\t\t$ret .= $lastname;\n\t\t}\n\t} else {\t// 0, 4 or 5\n\t\t$ret .= $lastname;\n\t\tif (empty($ret) && $nameorder == 5) {\n\t\t\t$ret .= $firstname;\n\t\t}\n\t\tif ($nameorder == 0) {\n\t\t\tif ($firstname && $lastname) {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\t\t\t$ret .= $firstname;\n\t\t}\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tSet event message in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *  Note: Prefer to use setEventMessages instead.\n *\n *\t@param\tstring|string[] $mesgs\t\t\tMessage string or array\n *  @param  string          $style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events()\n */\nfunction setEventMessage($mesgs, $style = 'mesgs')\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\t\tThis is not deprecated, it is used by setEventMessages function\n\tif (!is_array($mesgs)) {\n\t\t// If mesgs is a string\n\t\tif ($mesgs) {\n\t\t\t$_SESSION['dol_events'][$style][] = $mesgs;\n\t\t}\n\t} else {\n\t\t// If mesgs is an array\n\t\tforeach ($mesgs as $mesg) {\n\t\t\tif ($mesg) {\n\t\t\t\t$_SESSION['dol_events'][$style][] = $mesg;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\tSet event messages in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *\n *\t@param\tstring\t$mesg\t\t\tMessage string\n *\t@param\tarray\t$mesgs\t\t\tMessage array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @param\tstring\t$messagekey\t\tA key to be used to allow the feature \"Never show this message again\"\n *  @return\tvoid\n *  @see\tdol_htmloutput_events()\n */\nfunction setEventMessages($mesg, $mesgs, $style = 'mesgs', $messagekey = '')\n{\n\tif (empty($mesg) && empty($mesgs)) {\n\t\tdol_syslog(\"Try to add a message in stack with empty message\", LOG_WARNING);\n\t} else {\n\t\tif ($messagekey) {\n\t\t\t// Complete message with a js link to set a cookie \"DOLHIDEMESSAGE\".$messagekey;\n\t\t\t// TODO\n\t\t\t$mesg .= '';\n\t\t}\n\t\tif (empty($messagekey) || empty($_COOKIE[\"DOLHIDEMESSAGE\".$messagekey])) {\n\t\t\tif (!in_array((string) $style, array('mesgs', 'warnings', 'errors'))) {\n\t\t\t\tdol_print_error('', 'Bad parameter style='.$style.' for setEventMessages');\n\t\t\t}\n\t\t\tif (empty($mesgs)) {\n\t\t\t\tsetEventMessage($mesg, $style);\n\t\t\t} else {\n\t\t\t\tif (!empty($mesg) && !in_array($mesg, $mesgs)) {\n\t\t\t\t\tsetEventMessage($mesg, $style); // Add message string if not already into array\n\t\t\t\t}\n\t\t\t\tsetEventMessage($mesgs, $style);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function, so there is\n *  no need to call it explicitely.\n *\n *  @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n *  @return\tvoid\n *  @see    \t\t\t\t\t\t\t\t\tdol_htmloutput_mesg()\n */\nfunction dol_htmloutput_events($disabledoutputofmessages = 0)\n{\n\t// Show mesgs\n\tif (isset($_SESSION['dol_events']['mesgs'])) {\n\t\tif (empty($disabledoutputofmessages)) {\n\t\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['mesgs']);\n\t\t}\n\t\tunset($_SESSION['dol_events']['mesgs']);\n\t}\n\n\t// Show errors\n\tif (isset($_SESSION['dol_events']['errors'])) {\n\t\tif (empty($disabledoutputofmessages)) {\n\t\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['errors'], 'error');\n\t\t}\n\t\tunset($_SESSION['dol_events']['errors']);\n\t}\n\n\t// Show warnings\n\tif (isset($_SESSION['dol_events']['warnings'])) {\n\t\tif (empty($disabledoutputofmessages)) {\n\t\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['warnings'], 'warning');\n\t\t}\n\t\tunset($_SESSION['dol_events']['warnings']);\n\t}\n}\n\n/**\n *\tGet formated messages to output (Used to show messages on html output).\n *  This include also the translation of the message key.\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string\t\t$style          Style of message output ('ok' or 'error')\n *  @param  int\t\t\t$keepembedded   Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tstring\t\t\t\t\t\tReturn html output\n *\n *  @see    dol_print_error()\n *  @see    dol_htmloutput_errors()\n *  @see    setEventMessages()\n */\nfunction get_htmloutput_mesg($mesgstring = '', $mesgarray = '', $style = 'ok', $keepembedded = 0)\n{\n\tglobal $conf, $langs;\n\n\t$ret = 0;\n\t$return = '';\n\t$out = '';\n\t$divstart = $divend = '';\n\n\t// If inline message with no format, we add it.\n\tif ((empty($conf->use_javascript_ajax) || !empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) || $keepembedded) && !preg_match('/<div class=\".*\">/i', $out)) {\n\t\t$divstart = '<div class=\"'.$style.' clearboth\">';\n\t\t$divend = '</div>';\n\t}\n\n\tif ((is_array($mesgarray) && count($mesgarray)) || $mesgstring) {\n\t\t$langs->load(\"errors\");\n\t\t$out .= $divstart;\n\t\tif (is_array($mesgarray) && count($mesgarray)) {\n\t\t\tforeach ($mesgarray as $message) {\n\t\t\t\t$ret++;\n\t\t\t\t$out .= $langs->trans($message);\n\t\t\t\tif ($ret < count($mesgarray)) {\n\t\t\t\t\t$out .= \"<br>\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($mesgstring) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$ret++;\n\t\t\t$out .= $langs->trans($mesgstring);\n\t\t}\n\t\t$out .= $divend;\n\t}\n\n\tif ($out) {\n\t\tif (!empty($conf->use_javascript_ajax) && empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && empty($keepembedded)) {\n\t\t\t$return = '<script>\n\t\t\t\t\t$(document).ready(function() {\n\t\t\t\t\t\tvar block = '.(!empty($conf->global->MAIN_USE_JQUERY_BLOCKUI) ? \"true\" : \"false\").'\n\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t$.dolEventValid(\"\",\"'.dol_escape_js($out).'\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* jnotify(message, preset of message type, keepmessage) */\n\t\t\t\t\t\t\t$.jnotify(\"'.dol_escape_js($out).'\",\n\t\t\t\t\t\t\t\"'.($style == \"ok\" ? 3000 : $style).'\",\n\t\t\t\t\t\t\t'.($style == \"ok\" ? \"false\" : \"true\").',\n\t\t\t\t\t\t\t{ remove: function (){} } );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t</script>';\n\t\t} else {\n\t\t\t$return = $out;\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n *  Get formated error messages to output (Used to show messages on html output).\n *\n *  @param  string\t$mesgstring         Error message\n *  @param  array\t$mesgarray          Error messages array\n *  @param  int\t\t$keepembedded       Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return string                \t\tReturn html output\n *\n *  @see    dol_print_error()\n *  @see    dol_htmloutput_mesg()\n */\nfunction get_htmloutput_errors($mesgstring = '', $mesgarray = array(), $keepembedded = 0)\n{\n\treturn get_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *\t@param  string      $style          Which style to use ('ok', 'warning', 'error')\n *\t@param  int         $keepembedded   Set to 1 if message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tvoid\n *\n *\t@see    dol_print_error()\n *\t@see    dol_htmloutput_errors()\n *\t@see    setEventMessages()\n */\nfunction dol_htmloutput_mesg($mesgstring = '', $mesgarray = array(), $style = 'ok', $keepembedded = 0)\n{\n\tif (empty($mesgstring) && (!is_array($mesgarray) || count($mesgarray) == 0)) {\n\t\treturn;\n\t}\n\n\t$iserror = 0;\n\t$iswarning = 0;\n\tif (is_array($mesgarray)) {\n\t\tforeach ($mesgarray as $val) {\n\t\t\tif ($val && preg_match('/class=\"error\"/i', $val)) {\n\t\t\t\t$iserror++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ($val && preg_match('/class=\"warning\"/i', $val)) {\n\t\t\t\t$iswarning++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} elseif ($mesgstring && preg_match('/class=\"error\"/i', $mesgstring)) {\n\t\t$iserror++;\n\t} elseif ($mesgstring && preg_match('/class=\"warning\"/i', $mesgstring)) {\n\t\t$iswarning++;\n\t}\n\tif ($style == 'error') {\n\t\t$iserror++;\n\t}\n\tif ($style == 'warning') {\n\t\t$iswarning++;\n\t}\n\n\tif ($iserror || $iswarning) {\n\t\t// Remove div from texts\n\t\t$mesgstring = preg_replace('/<\\/div><div class=\"(error|warning)\">/', '<br>', $mesgstring);\n\t\t$mesgstring = preg_replace('/<div class=\"(error|warning)\">/', '', $mesgstring);\n\t\t$mesgstring = preg_replace('/<\\/div>/', '', $mesgstring);\n\t\t// Remove div from texts array\n\t\tif (is_array($mesgarray)) {\n\t\t\t$newmesgarray = array();\n\t\t\tforeach ($mesgarray as $val) {\n\t\t\t\tif (is_string($val)) {\n\t\t\t\t\t$tmpmesgstring = preg_replace('/<\\/div><div class=\"(error|warning)\">/', '<br>', $val);\n\t\t\t\t\t$tmpmesgstring = preg_replace('/<div class=\"(error|warning)\">/', '', $tmpmesgstring);\n\t\t\t\t\t$tmpmesgstring = preg_replace('/<\\/div>/', '', $tmpmesgstring);\n\t\t\t\t\t$newmesgarray[] = $tmpmesgstring;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"Error call of dol_htmloutput_mesg with an array with a value that is not a string\", LOG_WARNING);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$mesgarray = $newmesgarray;\n\t\t}\n\t\tprint get_htmloutput_mesg($mesgstring, $mesgarray, ($iserror ? 'error' : 'warning'), $keepembedded);\n\t} else {\n\t\tprint get_htmloutput_mesg($mesgstring, $mesgarray, 'ok', $keepembedded);\n\t}\n}\n\n/**\n *  Print formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring          Error message\n *  @param  array\t$mesgarray           Error messages array\n *  @param  int\t\t$keepembedded        Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error()\n *  @see    dol_htmloutput_mesg()\n */\nfunction dol_htmloutput_errors($mesgstring = '', $mesgarray = array(), $keepembedded = 0)\n{\n\tdol_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n * \tAdvanced sort array by second index function, which produces ascending (default)\n *  or descending output and uses optionally natural case insensitive sorting (which\n *  can be optionally case sensitive as well).\n *\n *  @param      array\t\t$array      \t\tArray to sort (array of array('key1'=>val1,'key2'=>val2,'key3'...) or array of objects)\n *  @param      string\t\t$index\t\t\t\tKey in array to use for sorting criteria\n *  @param      int\t\t\t$order\t\t\t\tSort order ('asc' or 'desc')\n *  @param      int\t\t\t$natsort\t\t\t1=use \"natural\" sort (natsort) for a search criteria thats is strings or unknown, 0=use \"standard\" sort (asort) for numbers\n *  @param      int\t\t\t$case_sensitive\t\t1=sort is case sensitive, 0=not case sensitive\n *  @param\t\tint\t\t\t$keepindex\t\t\tIf 0 and index key of array to sort is a numeric, than index will be rewrote. If 1 or index key is not numeric, key for index is kept after sorting.\n *  @return     array\t\t\t\t\t\t\tSorted array\n */\nfunction dol_sort_array(&$array, $index, $order = 'asc', $natsort = 0, $case_sensitive = 0, $keepindex = 0)\n{\n\t// Clean parameters\n\t$order = strtolower($order);\n\n\tif (is_array($array)) {\n\t\t$sizearray = count($array);\n\t\tif ($sizearray > 0) {\n\t\t\t$temp = array();\n\t\t\tforeach (array_keys($array) as $key) {\n\t\t\t\tif (is_object($array[$key])) {\n\t\t\t\t\t$temp[$key] = empty($array[$key]->$index) ? 0 : $array[$key]->$index;\n\t\t\t\t} else {\n\t\t\t\t\t$temp[$key] = empty($array[$key][$index]) ? 0 : $array[$key][$index];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$natsort) {\n\t\t\t\tif ($order == 'asc') {\n\t\t\t\t\tasort($temp);\n\t\t\t\t} else {\n\t\t\t\t\tarsort($temp);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($case_sensitive) {\n\t\t\t\t\tnatsort($temp);\n\t\t\t\t} else {\n\t\t\t\t\tnatcasesort($temp);\t// natecasesort is not sensible to case\n\t\t\t\t}\n\t\t\t\tif ($order != 'asc') {\n\t\t\t\t\t$temp = array_reverse($temp, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sorted = array();\n\n\t\t\tforeach (array_keys($temp) as $key) {\n\t\t\t\t(is_numeric($key) && empty($keepindex)) ? $sorted[] = $array[$key] : $sorted[$key] = $array[$key];\n\t\t\t}\n\n\t\t\treturn $sorted;\n\t\t}\n\t}\n\treturn $array;\n}\n\n\n/**\n *      Check if a string is in UTF8\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is UTF8 or ISO compatible with UTF8, False if not (ISO with special char or Binary)\n */\nfunction utf8_check($str)\n{\n\t$str = (string) $str;\t// Sometimes string is an int.\n\n\t// We must use here a binary strlen function (so not dol_strlen)\n\t$strLength = dol_strlen($str);\n\tfor ($i = 0; $i < $strLength; $i++) {\n\t\tif (ord($str[$i]) < 0x80) {\n\t\t\tcontinue; // 0bbbbbbb\n\t\t} elseif ((ord($str[$i]) & 0xE0) == 0xC0) {\n\t\t\t$n = 1; // 110bbbbb\n\t\t} elseif ((ord($str[$i]) & 0xF0) == 0xE0) {\n\t\t\t$n = 2; // 1110bbbb\n\t\t} elseif ((ord($str[$i]) & 0xF8) == 0xF0) {\n\t\t\t$n = 3; // 11110bbb\n\t\t} elseif ((ord($str[$i]) & 0xFC) == 0xF8) {\n\t\t\t$n = 4; // 111110bb\n\t\t} elseif ((ord($str[$i]) & 0xFE) == 0xFC) {\n\t\t\t$n = 5; // 1111110b\n\t\t} else {\n\t\t\treturn false; // Does not match any model\n\t\t}\n\t\tfor ($j = 0; $j < $n; $j++) { // n bytes matching 10bbbbbb follow ?\n\t\t\tif ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n *      Check if a string is in ASCII\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is ASCII, False if not (byte value > 0x7F)\n */\nfunction ascii_check($str)\n{\n\tif (function_exists('mb_check_encoding')) {\n\t\t//if (mb_detect_encoding($str, 'ASCII', true) return false;\n\t\tif (!mb_check_encoding($str, 'ASCII')) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tif (preg_match('/[^\\x00-\\x7f]/', $str)) {\n\t\t\treturn false; // Contains a byte > 7f\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n/**\n *      Return a string encoded into OS filesystem encoding. This function is used to define\n * \t    value to pass to filesystem PHP functions.\n *\n *      @param\tstring\t$str        String to encode (UTF-8)\n * \t\t@return\tstring\t\t\t\tEncoded string (UTF-8, ISO-8859-1)\n */\nfunction dol_osencode($str)\n{\n\tglobal $conf;\n\n\t$tmp = ini_get(\"unicode.filesystem_encoding\"); // Disponible avec PHP 6.0\n\tif (empty($tmp) && !empty($_SERVER[\"WINDIR\"])) {\n\t\t$tmp = 'iso-8859-1'; // By default for windows\n\t}\n\tif (empty($tmp)) {\n\t\t$tmp = 'utf-8'; // By default for other\n\t}\n\tif (!empty($conf->global->MAIN_FILESYSTEM_ENCODING)) {\n\t\t$tmp = $conf->global->MAIN_FILESYSTEM_ENCODING;\n\t}\n\n\tif ($tmp == 'iso-8859-1') {\n\t\treturn utf8_decode($str);\n\t}\n\treturn $str;\n}\n\n\n/**\n *      Return an id or code from a code or id.\n *      Store also Code-Id into a cache to speed up next request on same key.\n *\n * \t\t@param\tDoliDB\t$db\t\t\t\tDatabase handler\n * \t\t@param\tstring\t$key\t\t\tCode or Id to get Id or Code\n * \t\t@param\tstring\t$tablename\t\tTable name without prefix\n * \t\t@param\tstring\t$fieldkey\t\tField to search the key into\n * \t\t@param\tstring\t$fieldid\t\tField to get\n *      @param  int\t\t$entityfilter\tFilter by entity\n *      @return int\t\t\t\t\t\t<0 if KO, Id of code if OK\n *      @see $langs->getLabelFromKey\n */\nfunction dol_getIdFromCode($db, $key, $tablename, $fieldkey = 'code', $fieldid = 'id', $entityfilter = 0)\n{\n\tglobal $cache_codes;\n\n\t// If key empty\n\tif ($key == '') {\n\t\treturn '';\n\t}\n\n\t// Check in cache\n\tif (isset($cache_codes[$tablename][$key][$fieldid])) {\t// Can be defined to 0 or ''\n\t\treturn $cache_codes[$tablename][$key][$fieldid]; // Found in cache\n\t}\n\n\tdol_syslog('dol_getIdFromCode (value for field '.$fieldid.' from key '.$key.' not found into cache)', LOG_DEBUG);\n\n\t$sql = \"SELECT \".$fieldid.\" as valuetoget\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.$tablename;\n\t$sql .= \" WHERE \".$fieldkey.\" = '\".$db->escape($key).\"'\";\n\tif (!empty($entityfilter)) {\n\t\t$sql .= \" AND entity IN (\".getEntity($tablename).\")\";\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) {\n\t\t\t$cache_codes[$tablename][$key][$fieldid] = $obj->valuetoget;\n\t\t} else {\n\t\t\t$cache_codes[$tablename][$key][$fieldid] = '';\n\t\t}\n\t\t$db->free($resql);\n\t\treturn $cache_codes[$tablename][$key][$fieldid];\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/**\n * Verify if condition in string is ok or not\n *\n * @param \tstring\t\t$strRights\t\tString with condition to check\n * @return \tboolean\t\t\t\t\t\tTrue or False. Return True if strRights is ''\n */\nfunction verifCond($strRights)\n{\n\tglobal $user, $conf, $langs;\n\tglobal $leftmenu;\n\tglobal $rights; // To export to dol_eval function\n\n\t//print $strRights.\"<br>\\n\";\n\t$rights = true;\n\tif ($strRights != '') {\n\t\t$str = 'if(!('.$strRights.')) { $rights = false; }';\n\t\tdol_eval($str); // The dol_eval must contains all the global $xxx used into a condition\n\t}\n\treturn $rights;\n}\n\n/**\n * Replace eval function to add more security.\n * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n *\n * @param \tstring\t$s\t\t\t\tString to evaluate\n * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n * @param   int     $hideerrors     1=Hide errors\n * @return\tmixed\t\t\t\t\tNothing or return result of eval\n */\nfunction dol_eval($s, $returnvalue = 0, $hideerrors = 1)\n{\n\t// Only global variables can be changed by eval function and returned to caller\n\tglobal $db, $langs, $user, $conf, $website, $websitepage;\n\tglobal $action, $mainmenu, $leftmenu;\n\tglobal $rights;\n\tglobal $object;\n\tglobal $mysoc;\n\n\tglobal $obj; // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n\tglobal $soc; // For backward compatibility\n\n\t// Replace dangerous char (used for RCE), we allow only PHP variable testing.\n\tif (strpos($s, '`') !== false) {\n\t\treturn 'Bad string syntax to evaluate: '.$s;\n\t}\n\n\t// We block using of php exec or php file functions\n\t$forbiddenphpstrings = array(\"exec(\", \"passthru(\", \"shell_exec(\", \"system(\", \"proc_open(\", \"popen(\", \"eval(\", \"dol_eval(\", \"executeCLI(\");\n\t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array(\"fopen(\", \"file_put_contents(\", \"fputs(\", \"fputscsv(\", \"fwrite(\", \"fpassthru(\", \"unlink(\", \"mkdir(\", \"rmdir(\", \"symlink(\", \"touch(\", \"umask(\"));\n\t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array('function(', '$$', 'call_user_func('));\n\t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array('_ENV', '_SESSION', '_COOKIE', '_GET', '_POST', '_REQUEST'));\n\t$forbiddenphpregex = 'global\\s+\\$';\n\tdo {\n\t\t$oldstringtoclean = $s;\n\t\t$s = str_ireplace($forbiddenphpstrings, '__forbiddenstring__', $s);\n\t\t$s = preg_replace('/'.$forbiddenphpregex.'/', '__forbiddenstring__', $s);\n\t\t//$s = preg_replace('/\\$[a-zA-Z0-9_\\->\\$]+\\(/i', '', $s);\t// Remove $function( call and $mycall->mymethod(\n\t} while ($oldstringtoclean != $s);\n\n\tif (strpos($s, '__forbiddenstring__') !== false) {\n\t\tdol_syslog('Bad string syntax to evaluate: '.$s, LOG_WARNING);\n\t\treturn 'Bad string syntax to evaluate: '.$s;\n\t}\n\n\t//print $s.\"<br>\\n\";\n\tif ($returnvalue) {\n\t\tif ($hideerrors) {\n\t\t\treturn @eval('return '.$s.';');\n\t\t} else {\n\t\t\treturn eval('return '.$s.';');\n\t\t}\n\t} else {\n\t\tif ($hideerrors) {\n\t\t\t@eval($s);\n\t\t} else {\n\t\t\teval($s);\n\t\t}\n\t}\n}\n\n/**\n * Return if var element is ok\n *\n * @param   string      $element    Variable to check\n * @return  boolean                 Return true of variable is not empty\n */\nfunction dol_validElement($element)\n{\n\treturn (trim($element) != '');\n}\n\n/**\n * \tReturn img flag of country for a language code or country code.\n *\n * \t@param\tstring\t$codelang\tLanguage code ('en_IN', 'fr_CA', ...) or ISO Country code on 2 characters in uppercase ('IN', 'FR')\n *  @param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"' or 'class=\"saturatemedium\"')\n * \t@return\tstring\t\t\t\tHTML img string with flag.\n */\nfunction picto_from_langcode($codelang, $moreatt = '')\n{\n\tif (empty($codelang)) {\n\t\treturn '';\n\t}\n\n\tif ($codelang == 'auto') {\n\t\treturn '<span class=\"fa fa-globe\"></span>';\n\t}\n\n\t$langtocountryflag = array(\n\t\t'ar_AR' => '',\n\t\t'ca_ES' => 'catalonia',\n\t\t'da_DA' => 'dk',\n\t\t'fr_CA' => 'mq',\n\t\t'sv_SV' => 'se',\n\t\t'sw_SW' => 'unknown',\n\t\t'AQ' => 'unknown',\n\t\t'CW' => 'unknown',\n\t\t'IM' => 'unknown',\n\t\t'JE' => 'unknown',\n\t\t'MF' => 'unknown',\n\t\t'BL' => 'unknown',\n\t\t'SX' => 'unknown'\n\t);\n\n\tif (isset($langtocountryflag[$codelang])) {\n\t\t$flagImage = $langtocountryflag[$codelang];\n\t} else {\n\t\t$tmparray = explode('_', $codelang);\n\t\t$flagImage = empty($tmparray[1]) ? $tmparray[0] : $tmparray[1];\n\t}\n\n\treturn img_picto_common($codelang, 'flags/'.strtolower($flagImage).'.png', $moreatt);\n}\n\n/**\n * Return default language from country code.\n * Return null if not found.\n *\n * @param \tstring \t$countrycode\tCountry code like 'US', 'FR', 'CA', 'ES', 'MX', ...\n * @return\tstring\t\t\t\t\tValue of locale like 'en_US', 'fr_FR', ...\n */\nfunction getLanguageCodeFromCountryCode($countrycode)\n{\n\tglobal $mysoc;\n\n\tif (empty($countrycode)) {\n\t\treturn null;\n\t}\n\n\tif (strtoupper($countrycode) == 'MQ') {\n\t\treturn 'fr_CA';\n\t}\n\tif (strtoupper($countrycode) == 'SE') {\n\t\treturn 'sv_SE'; // se_SE is Sami/Sweden, and we want in priority sv_SE for SE country\n\t}\n\tif (strtoupper($countrycode) == 'CH') {\n\t\tif ($mysoc->country_code == 'FR') {\n\t\t\treturn 'fr_CH';\n\t\t}\n\t\tif ($mysoc->country_code == 'DE') {\n\t\t\treturn 'de_CH';\n\t\t}\n\t\tif ($mysoc->country_code == 'IT') {\n\t\t\treturn 'it_CH';\n\t\t}\n\t}\n\n\t// Locale list taken from:\n\t// http://stackoverflow.com/questions/3191664/\n\t// list-of-all-locales-and-their-short-codes\n\t$locales = array(\n\t\t'af-ZA',\n\t\t'am-ET',\n\t\t'ar-AE',\n\t\t'ar-BH',\n\t\t'ar-DZ',\n\t\t'ar-EG',\n\t\t'ar-IQ',\n\t\t'ar-JO',\n\t\t'ar-KW',\n\t\t'ar-LB',\n\t\t'ar-LY',\n\t\t'ar-MA',\n\t\t'ar-OM',\n\t\t'ar-QA',\n\t\t'ar-SA',\n\t\t'ar-SY',\n\t\t'ar-TN',\n\t\t'ar-YE',\n\t\t'as-IN',\n\t\t'ba-RU',\n\t\t'be-BY',\n\t\t'bg-BG',\n\t\t'bn-BD',\n\t\t'bn-IN',\n\t\t'bo-CN',\n\t\t'br-FR',\n\t\t'ca-ES',\n\t\t'co-FR',\n\t\t'cs-CZ',\n\t\t'cy-GB',\n\t\t'da-DK',\n\t\t'de-AT',\n\t\t'de-CH',\n\t\t'de-DE',\n\t\t'de-LI',\n\t\t'de-LU',\n\t\t'dv-MV',\n\t\t'el-GR',\n\t\t'en-AU',\n\t\t'en-BZ',\n\t\t'en-CA',\n\t\t'en-GB',\n\t\t'en-IE',\n\t\t'en-IN',\n\t\t'en-JM',\n\t\t'en-MY',\n\t\t'en-NZ',\n\t\t'en-PH',\n\t\t'en-SG',\n\t\t'en-TT',\n\t\t'en-US',\n\t\t'en-ZA',\n\t\t'en-ZW',\n\t\t'es-AR',\n\t\t'es-BO',\n\t\t'es-CL',\n\t\t'es-CO',\n\t\t'es-CR',\n\t\t'es-DO',\n\t\t'es-EC',\n\t\t'es-ES',\n\t\t'es-GT',\n\t\t'es-HN',\n\t\t'es-MX',\n\t\t'es-NI',\n\t\t'es-PA',\n\t\t'es-PE',\n\t\t'es-PR',\n\t\t'es-PY',\n\t\t'es-SV',\n\t\t'es-US',\n\t\t'es-UY',\n\t\t'es-VE',\n\t\t'et-EE',\n\t\t'eu-ES',\n\t\t'fa-IR',\n\t\t'fi-FI',\n\t\t'fo-FO',\n\t\t'fr-BE',\n\t\t'fr-CA',\n\t\t'fr-CH',\n\t\t'fr-FR',\n\t\t'fr-LU',\n\t\t'fr-MC',\n\t\t'fy-NL',\n\t\t'ga-IE',\n\t\t'gd-GB',\n\t\t'gl-ES',\n\t\t'gu-IN',\n\t\t'he-IL',\n\t\t'hi-IN',\n\t\t'hr-BA',\n\t\t'hr-HR',\n\t\t'hu-HU',\n\t\t'hy-AM',\n\t\t'id-ID',\n\t\t'ig-NG',\n\t\t'ii-CN',\n\t\t'is-IS',\n\t\t'it-CH',\n\t\t'it-IT',\n\t\t'ja-JP',\n\t\t'ka-GE',\n\t\t'kk-KZ',\n\t\t'kl-GL',\n\t\t'km-KH',\n\t\t'kn-IN',\n\t\t'ko-KR',\n\t\t'ky-KG',\n\t\t'lb-LU',\n\t\t'lo-LA',\n\t\t'lt-LT',\n\t\t'lv-LV',\n\t\t'mi-NZ',\n\t\t'mk-MK',\n\t\t'ml-IN',\n\t\t'mn-MN',\n\t\t'mr-IN',\n\t\t'ms-BN',\n\t\t'ms-MY',\n\t\t'mt-MT',\n\t\t'nb-NO',\n\t\t'ne-NP',\n\t\t'nl-BE',\n\t\t'nl-NL',\n\t\t'nn-NO',\n\t\t'oc-FR',\n\t\t'or-IN',\n\t\t'pa-IN',\n\t\t'pl-PL',\n\t\t'ps-AF',\n\t\t'pt-BR',\n\t\t'pt-PT',\n\t\t'rm-CH',\n\t\t'ro-MD',\n\t\t'ro-RO',\n\t\t'ru-RU',\n\t\t'rw-RW',\n\t\t'sa-IN',\n\t\t'se-FI',\n\t\t'se-NO',\n\t\t'se-SE',\n\t\t'si-LK',\n\t\t'sk-SK',\n\t\t'sl-SI',\n\t\t'sq-AL',\n\t\t'sv-FI',\n\t\t'sv-SE',\n\t\t'sw-KE',\n\t\t'ta-IN',\n\t\t'te-IN',\n\t\t'th-TH',\n\t\t'tk-TM',\n\t\t'tn-ZA',\n\t\t'tr-TR',\n\t\t'tt-RU',\n\t\t'ug-CN',\n\t\t'uk-UA',\n\t\t'ur-PK',\n\t\t'vi-VN',\n\t\t'wo-SN',\n\t\t'xh-ZA',\n\t\t'yo-NG',\n\t\t'zh-CN',\n\t\t'zh-HK',\n\t\t'zh-MO',\n\t\t'zh-SG',\n\t\t'zh-TW',\n\t\t'zu-ZA',\n\t);\n\n\t$buildprimarykeytotest = strtolower($countrycode).'-'.strtoupper($countrycode);\n\tif (in_array($buildprimarykeytotest, $locales)) {\n\t\treturn strtolower($countrycode).'_'.strtoupper($countrycode);\n\t}\n\n\tif (function_exists('locale_get_primary_language') && function_exists('locale_get_region')) {    // Need extension php-intl\n\t\tforeach ($locales as $locale) {\n\t\t\t$locale_language = locale_get_primary_language($locale);\n\t\t\t$locale_region = locale_get_region($locale);\n\t\t\tif (strtoupper($countrycode) == $locale_region) {\n\t\t\t\t//var_dump($locale.'-'.$locale_language.'-'.$locale_region);\n\t\t\t\treturn strtolower($locale_language).'_'.strtoupper($locale_region);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tdol_syslog(\"Warning Exention php-intl is not available\", LOG_WARNING);\n\t}\n\n\treturn null;\n}\n\n/**\n *  Complete or removed entries into a head array (used to build tabs).\n *  For example, with value added by external modules. Such values are declared into $conf->modules_parts['tab'].\n *  Or by change using hook completeTabsHead\n *\n *  @param\tConf\t\t\t$conf           Object conf\n *  @param  Translate\t\t$langs          Object langs\n *  @param  object|null\t\t$object         Object object\n *  @param  array\t\t\t$head          \tObject head\n *  @param  int\t\t\t\t$h\t\t\t\tNew position to fill\n *  @param  string\t\t\t$type           Value for object where objectvalue can be\n *                              \t\t\t'thirdparty'       to add a tab in third party view\n *\t\t                        \t      \t'intervention'     to add a tab in intervention view\n *     \t\t                    \t     \t'supplier_order'   to add a tab in supplier order view\n *          \t\t            \t        'supplier_invoice' to add a tab in supplier invoice view\n *                  \t\t    \t        'invoice'          to add a tab in customer invoice view\n *                          \t\t\t    'order'            to add a tab in customer order view\n *                          \t\t\t\t'contract'\t\t   to add a tabl in contract view\n *                      \t\t\t        'product'          to add a tab in product view\n *                              \t\t\t'propal'           to add a tab in propal view\n *                              \t\t\t'user'             to add a tab in user view\n *                              \t\t\t'group'            to add a tab in group view\n * \t\t        \t               \t     \t'member'           to add a tab in fundation member view\n *      \t\t                        \t'categories_x'\t   to add a tab in category view ('x': type of category (0=product, 1=supplier, 2=customer, 3=member)\n *      \t\t\t\t\t\t\t\t\t'ecm'\t\t\t   to add a tab for another ecm view\n *                                          'stock'            to add a tab for warehouse view\n *  @param  string\t\t$mode  \t        \t'add' to complete head, 'remove' to remove entries\n *\t@return\tvoid\n */\nfunction complete_head_from_modules($conf, $langs, $object, &$head, &$h, $type, $mode = 'add')\n{\n\tglobal $hookmanager;\n\n\tif (isset($conf->modules_parts['tabs'][$type]) && is_array($conf->modules_parts['tabs'][$type])) {\n\t\tforeach ($conf->modules_parts['tabs'][$type] as $value) {\n\t\t\t$values = explode(':', $value);\n\n\t\t\tif ($mode == 'add' && !preg_match('/^\\-/', $values[1])) {\n\t\t\t\tif (count($values) == 6) {       // new declaration with permissions:  $value='objecttype:+tabname1:Title1:langfile@mymodule:$user->rights->mymodule->read:/mymodule/mynewtab1.php?id=__ID__'\n\t\t\t\t\tif ($values[0] != $type) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (verifCond($values[4])) {\n\t\t\t\t\t\tif ($values[3]) {\n\t\t\t\t\t\t\t$langs->load($values[3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i', $values[2], $reg)) {\n\t\t\t\t\t\t\t$substitutionarray = array();\n\t\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray, $langs, $object, array('needforkey'=>$values[2]));\n\t\t\t\t\t\t\t$label = make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$label = $langs->trans($values[2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && !empty($object->id)) ? $object->id : ''), $values[5]), 1);\n\t\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t\t$head[$h][2] = str_replace('+', '', $values[1]);\n\t\t\t\t\t\t$h++;\n\t\t\t\t\t}\n\t\t\t\t} elseif (count($values) == 5) {       // deprecated\n\t\t\t\t\tdol_syslog('Passing 5 values in tabs module_parts is deprecated. Please update to 6 with permissions.', LOG_WARNING);\n\n\t\t\t\t\tif ($values[0] != $type) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif ($values[3]) {\n\t\t\t\t\t\t$langs->load($values[3]);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i', $values[2], $reg)) {\n\t\t\t\t\t\t$substitutionarray = array();\n\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray, $langs, $object, array('needforkey'=>$values[2]));\n\t\t\t\t\t\t$label = make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$label = $langs->trans($values[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && !empty($object->id)) ? $object->id : ''), $values[4]), 1);\n\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t$head[$h][2] = str_replace('+', '', $values[1]);\n\t\t\t\t\t$h++;\n\t\t\t\t}\n\t\t\t} elseif ($mode == 'remove' && preg_match('/^\\-/', $values[1])) {\n\t\t\t\tif ($values[0] != $type) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$tabname = str_replace('-', '', $values[1]);\n\t\t\t\tforeach ($head as $key => $val) {\n\t\t\t\t\t$condition = (!empty($values[3]) ? verifCond($values[3]) : 1);\n\t\t\t\t\t//var_dump($key.' - '.$tabname.' - '.$head[$key][2].' - '.$values[3].' - '.$condition);\n\t\t\t\t\tif ($head[$key][2] == $tabname && $condition) {\n\t\t\t\t\t\tunset($head[$key]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// No need to make a return $head. Var is modified as a reference\n\tif (!empty($hookmanager)) {\n\t\t$parameters = array('object' => $object, 'mode' => $mode, 'head' => &$head);\n\t\t$reshook = $hookmanager->executeHooks('completeTabsHead', $parameters);\n\t\tif ($reshook > 0) {\n\t\t\t$head = $hookmanager->resArray;\n\t\t}\n\t\t$h = count($head);\n\t}\n}\n\n/**\n * Print common footer :\n * \t\tconf->global->MAIN_HTML_FOOTER\n *      js for switch of menu hider\n * \t\tjs for conf->global->MAIN_GOOGLE_AN_ID\n * \t\tjs for conf->global->MAIN_SHOW_TUNING_INFO or $_SERVER[\"MAIN_SHOW_TUNING_INFO\"]\n * \t\tjs for conf->logbuffer\n *\n * @param\tstring\t$zone\t'private' (for private pages) or 'public' (for public pages)\n * @return\tvoid\n */\nfunction printCommonFooter($zone = 'private')\n{\n\tglobal $conf, $hookmanager, $user, $debugbar;\n\tglobal $action;\n\tglobal $micro_start_time;\n\n\tif ($zone == 'private') {\n\t\tprint \"\\n\".'<!-- Common footer for private page -->'.\"\\n\";\n\t} else {\n\t\tprint \"\\n\".'<!-- Common footer for public page -->'.\"\\n\";\n\t}\n\n\t// A div to store page_y POST parameter so we can read it using javascript\n\tprint \"\\n<!-- A div to store page_y POST parameter -->\\n\";\n\tprint '<div id=\"page_y\" style=\"display: none;\">'.(empty($_POST['page_y']) ? '' : $_POST['page_y']).'</div>'.\"\\n\";\n\n\t$parameters = array();\n\t$reshook = $hookmanager->executeHooks('printCommonFooter', $parameters); // Note that $action and $object may have been modified by some hooks\n\tif (empty($reshook)) {\n\t\tif (!empty($conf->global->MAIN_HTML_FOOTER)) {\n\t\t\tprint $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\t\t}\n\n\t\tprint \"\\n\";\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint '<script>'.\"\\n\";\n\t\t\tprint 'jQuery(document).ready(function() {'.\"\\n\";\n\n\t\t\tif ($zone == 'private' && empty($conf->dol_use_jmobile)) {\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '/* JS CODE TO ENABLE to manage handler to switch left menu page (menuhider) */'.\"\\n\";\n\t\t\t\tprint 'jQuery(\"li.menuhider\").click(function(event) {';\n\t\t\t\tprint '  if (!$( \"body\" ).hasClass( \"sidebar-collapse\" )){ event.preventDefault(); }'.\"\\n\";\n\t\t\t\tprint '  console.log(\"We click on .menuhider\");'.\"\\n\";\n\t\t\t\tprint '  $(\"body\").toggleClass(\"sidebar-collapse\")'.\"\\n\";\n\t\t\t\tprint '});'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Management of focus and mandatory for fields\n\t\t\tif ($action == 'create' || $action == 'edit' || (empty($action) && (preg_match('/new\\.php/', $_SERVER[\"PHP_SELF\"])))) {\n\t\t\t\tprint '/* JS CODE TO ENABLE to manage focus and mandatory form fields */'.\"\\n\";\n\t\t\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t\t\t// Clean $relativepathstring\n\t\t\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t\t\t}\n\t\t\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t\t\t//$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\tif (!empty($user->default_values[$relativepathstring]['focus'])) {\n\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['focus'] as $defkey => $defval) {\n\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t$tmpquerytohaveparam = explode('=', $tmpquerytohave);\n\t\t\t\t\t\t\t\t//print \"console.log('\".$tmpquerytohaveparam[0].\" \".$tmpquerytohaveparam[1].\" \".GETPOST($tmpquerytohaveparam[0]).\"');\";\n\t\t\t\t\t\t\t\tif (!GETPOSTISSET($tmpquerytohaveparam[0]) || ($tmpquerytohaveparam[1] != GETPOST($tmpquerytohaveparam[0]))) {\n\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\tforeach ($defval as $paramkey => $paramval) {\n\t\t\t\t\t\t\t\t// Set focus on field\n\t\t\t\t\t\t\t\tprint 'jQuery(\"input[name=\\''.$paramkey.'\\']\").focus();'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"textarea[name=\\''.$paramkey.'\\']\").focus();'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\']\").focus();'.\"\\n\"; // Not really usefull, but we keep it in case of.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!empty($user->default_values[$relativepathstring]['mandatory'])) {\n\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['mandatory'] as $defkey => $defval) {\n\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t$tmpquerytohaveparam = explode('=', $tmpquerytohave);\n\t\t\t\t\t\t\t\t//print \"console.log('\".$tmpquerytohaveparam[0].\" \".$tmpquerytohaveparam[1].\" \".GETPOST($tmpquerytohaveparam[0]).\"');\";\n\t\t\t\t\t\t\t\tif (!GETPOSTISSET($tmpquerytohaveparam[0]) || ($tmpquerytohaveparam[1] != GETPOST($tmpquerytohaveparam[0]))) {\n\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\tforeach ($defval as $paramkey => $paramval) {\n\t\t\t\t\t\t\t\t// Add property 'required' on input\n\t\t\t\t\t\t\t\tprint 'jQuery(\"input[name=\\''.$paramkey.'\\']\").prop(\\'required\\',true);'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"textarea[name=\\''.$paramkey.'\\']\").prop(\\'required\\',true);'.\"\\n\";\n\t\t\t\t\t\t\t\tprint '// required on a select works only if key is \"\", so we add the required attributes but also we reset the key -1 or 0 to an empty string'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\']\").prop(\\'required\\',true);'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\'] option[value=\\'-1\\']\").prop(\\'value\\', \\'\\');'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\'] option[value=\\'0\\']\").prop(\\'value\\', \\'\\');'.\"\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint '});'.\"\\n\";\n\n\t\t\t// End of tuning\n\t\t\tif (!empty($_SERVER['MAIN_SHOW_TUNING_INFO']) || !empty($conf->global->MAIN_SHOW_TUNING_INFO)) {\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint \"/* JS CODE TO ENABLE to add memory info */\\n\";\n\t\t\t\tprint 'window.console && console.log(\"';\n\t\t\t\tif (!empty($conf->global->MEMCACHED_SERVER)) {\n\t\t\t\t\tprint 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n\t\t\t\t}\n\t\t\t\tprint 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED) ? $conf->global->MAIN_OPTIMIZE_SPEED : 'off');\n\t\t\t\tif (!empty($micro_start_time)) {   // Works only if MAIN_SHOW_TUNING_INFO is defined at $_SERVER level. Not in global variable.\n\t\t\t\t\t$micro_end_time = microtime(true);\n\t\t\t\t\tprint ' - Build time: '.ceil(1000 * ($micro_end_time - $micro_start_time)).' ms';\n\t\t\t\t}\n\n\t\t\t\tif (function_exists(\"memory_get_usage\")) {\n\t\t\t\t\tprint ' - Mem: '.memory_get_usage(); // Do not use true here, it seems it takes the peak amount\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"memory_get_peak_usage\")) {\n\t\t\t\t\tprint ' - Real mem peak: '.memory_get_peak_usage(true);\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"zend_loader_file_encoded\")) {\n\t\t\t\t\tprint ' - Zend encoded file: '.(zend_loader_file_encoded() ? 'yes' : 'no');\n\t\t\t\t}\n\t\t\t\tprint '\");'.\"\\n\";\n\t\t\t}\n\n\t\t\tprint \"\\n\".'</script>'.\"\\n\";\n\n\t\t\t// Google Analytics\n\t\t\t// TODO Add a hook here\n\t\t\tif (!empty($conf->google->enabled) && !empty($conf->global->MAIN_GOOGLE_AN_ID)) {\n\t\t\t\t$tmptagarray = explode(',', $conf->global->MAIN_GOOGLE_AN_ID);\n\t\t\t\tforeach ($tmptagarray as $tmptag) {\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint \"<!-- JS CODE TO ENABLE for google analtics tag -->\\n\";\n\t\t\t\t\tprint \"\n\t\t\t\t\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t\t\t\t\t<script async src=\\\"https://www.googletagmanager.com/gtag/js?id=\".trim($tmptag).\"\\\"></script>\n\t\t\t\t\t<script>\n\t\t\t\t\twindow.dataLayer = window.dataLayer || [];\n\t\t\t\t\tfunction gtag(){dataLayer.push(arguments);}\n\t\t\t\t\tgtag('js', new Date());\n\n\t\t\t\t\tgtag('config', '\".trim($tmptag).\"');\n\t\t\t\t\t</script>\";\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add Xdebug coverage of code\n\t\tif (defined('XDEBUGCOVERAGE')) {\n\t\t\tprint_r(xdebug_get_code_coverage());\n\t\t}\n\n\t\t// Add DebugBar data\n\t\tif (!empty($user->rights->debugbar->read) && is_object($debugbar)) {\n\t\t\t$debugbar['time']->stopMeasure('pageaftermaster');\n\t\t\tprint '<!-- Output debugbar data -->'.\"\\n\";\n\t\t\t$renderer = $debugbar->getRenderer();\n\t\t\tprint $debugbar->getRenderer()->render();\n\t\t} elseif (count($conf->logbuffer)) {    // If there is some logs in buffer to show\n\t\t\tprint \"\\n\";\n\t\t\tprint \"<!-- Start of log output\\n\";\n\t\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\t\tforeach ($conf->logbuffer as $logline) {\n\t\t\t\tprint $logline.\"<br>\\n\";\n\t\t\t}\n\t\t\t//print '</div>'.\"\\n\";\n\t\t\tprint \"End of log output -->\\n\";\n\t\t}\n\t}\n}\n\n/**\n * Split a string with 2 keys into key array.\n * For example: \"A=1;B=2;C=2\" is exploded into array('A'=>1,'B'=>2,'C'=>3)\n *\n * @param \tstring\t$string\t\tString to explode\n * @param \tstring\t$delimiter\tDelimiter between each couple of data\n * @param \tstring\t$kv\t\t\tDelimiter between key and value\n * @return\tarray\t\t\t\tArray of data exploded\n */\nfunction dolExplodeIntoArray($string, $delimiter = ';', $kv = '=')\n{\n\tif ($a = explode($delimiter, $string)) {\n\t\t$ka = array();\n\t\tforeach ($a as $s) { // each part\n\t\t\tif ($s) {\n\t\t\t\tif ($pos = strpos($s, $kv)) { // key/value delimiter\n\t\t\t\t\t$ka[trim(substr($s, 0, $pos))] = trim(substr($s, $pos + strlen($kv)));\n\t\t\t\t} else { // key delimiter not found\n\t\t\t\t\t$ka[] = trim($s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ka;\n\t}\n\treturn array();\n}\n\n\n/**\n * Set focus onto field with selector (similar behaviour of 'autofocus' HTML5 tag)\n *\n * @param \tstring\t$selector\tSelector ('#id' or 'input[name=\"ref\"]') to use to find the HTML input field that must get the autofocus. You must use a CSS selector, so unique id preceding with the '#' char.\n * @return\tstring\t\t\t\tHTML code to set focus\n */\nfunction dol_set_focus($selector)\n{\n\tprint \"\\n\".'<!-- Set focus onto a specific field -->'.\"\\n\";\n\tprint '<script>jQuery(document).ready(function() { jQuery(\"'.dol_escape_js($selector).'\").focus(); });</script>'.\"\\n\";\n}\n\n\n/**\n * Return getmypid() or random PID when function is disabled\n * Some web hosts disable this php function for security reasons\n * and sometimes we can't redeclare function\n *\n * @return\tint\n */\nfunction dol_getmypid()\n{\n\tif (!function_exists('getmypid')) {\n\t\treturn mt_rand(1, 32768);\n\t} else {\n\t\treturn getmypid();\n\t}\n}\n\n\n/**\n * Generate natural SQL search string for a criteria (this criteria can be tested on one or several fields)\n *\n * @param   string|string[]\t$fields \tString or array of strings, filled with the name of all fields in the SQL query we must check (combined with a OR). Example: array(\"p.field1\",\"p.field2\")\n * @param   string \t\t\t$value \t\tThe value to look for.\n *                          \t\t    If param $mode is 0, can contains several keywords separated with a space or |\n *                                      like \"keyword1 keyword2\" = We want record field like keyword1 AND field like keyword2\n *                                      or like \"keyword1|keyword2\" = We want record field like keyword1 OR field like keyword2\n *                             \t\t\tIf param $mode is 1, can contains an operator <, > or = like \"<10\" or \">=100.5 < 1000\"\n *                             \t\t\tIf param $mode is 2, can contains a list of int id separated by comma like \"1,3,4\"\n *                             \t\t\tIf param $mode is 3, can contains a list of string separated by comma like \"a,b,c\"\n * @param\tinteger\t\t\t$mode\t\t0=value is list of keyword strings, 1=value is a numeric test (Example \">5.5 <10\"), 2=value is a list of ID separated with comma (Example '1,3,4')\n * \t\t\t\t\t\t\t\t\t\t3=value is list of string separated with comma (Example 'text 1,text 2'), 4=value is a list of ID separated with comma (Example '2,7') to be used to search into a multiselect string '1,2,3,4'\n * @param\tinteger\t\t\t$nofirstand\t1=Do not output the first 'AND'\n * @return \tstring \t\t\t$res \t\tThe statement to append to the SQL query\n */\nfunction natural_search($fields, $value, $mode = 0, $nofirstand = 0)\n{\n\tglobal $db, $langs;\n\n\t$value = trim($value);\n\n\tif ($mode == 0) {\n\t\t$value = preg_replace('/\\*/', '%', $value); // Replace * with %\n\t}\n\tif ($mode == 1) {\n\t\t$value = preg_replace('/([<>=]+)\\s+([0-9'.preg_quote($langs->trans(\"DecimalSeparator\"), '/').'\\-])/', '\\1\\2', $value); // Clean string '< 10' into '<10' so we can the explode on space to get all tests to do\n\t}\n\n\t$value = preg_replace('/\\s*\\|\\s*/', '|', $value);\n\n\t$crits = explode(' ', $value);\n\t$res = '';\n\tif (!is_array($fields)) {\n\t\t$fields = array($fields);\n\t}\n\n\t$j = 0;\n\tforeach ($crits as $crit) {\n\t\t$crit = trim($crit);\n\t\t$i = 0;\n\t\t$i2 = 0;\n\t\t$newres = '';\n\t\tforeach ($fields as $field) {\n\t\t\tif ($mode == 1) {\n\t\t\t\t$operator = '=';\n\t\t\t\t$newcrit = preg_replace('/([<>=]+)/', '', $crit);\n\n\t\t\t\t$reg = array();\n\t\t\t\tpreg_match('/([<>=]+)/', $crit, $reg);\n\t\t\t\tif ($reg[1]) {\n\t\t\t\t\t$operator = $reg[1];\n\t\t\t\t}\n\t\t\t\tif ($newcrit != '') {\n\t\t\t\t\t$numnewcrit = price2num($newcrit);\n\t\t\t\t\tif (is_numeric($numnewcrit)) {\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').$field.' '.$operator.' '.$db->sanitize($numnewcrit); // should be a numeric\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').'1 = 2'; // force false\n\t\t\t\t\t}\n\t\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t\t}\n\t\t\t} elseif ($mode == 2 || $mode == -2) {\n\t\t\t\t$crit = preg_replace('/[^0-9,]/', '', $crit); // ID are always integer\n\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').$field.\" \".($mode == -2 ? 'NOT ' : '');\n\t\t\t\t$newres .= $crit ? \"IN (\".$db->sanitize($db->escape($crit)).\")\" : \"IN (0)\";\n\t\t\t\tif ($mode == -2) {\n\t\t\t\t\t$newres .= ' OR '.$field.' IS NULL';\n\t\t\t\t}\n\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t} elseif ($mode == 3 || $mode == -3) {\n\t\t\t\t$tmparray = explode(',', $crit);\n\t\t\t\tif (count($tmparray)) {\n\t\t\t\t\t$listofcodes = '';\n\t\t\t\t\tforeach ($tmparray as $val) {\n\t\t\t\t\t\t$val = trim($val);\n\t\t\t\t\t\tif ($val) {\n\t\t\t\t\t\t\t$listofcodes .= ($listofcodes ? ',' : '');\n\t\t\t\t\t\t\t$listofcodes .= \"'\".$db->escape($val).\"'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').$field.\" \".($mode == -3 ? 'NOT ' : '').\"IN (\".$db->sanitize($listofcodes, 1).\")\";\n\t\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t\t}\n\t\t\t\tif ($mode == -3) {\n\t\t\t\t\t$newres .= ' OR '.$field.' IS NULL';\n\t\t\t\t}\n\t\t\t} elseif ($mode == 4) {\n\t\t\t\t$tmparray = explode(',', $crit);\n\t\t\t\tif (count($tmparray)) {\n\t\t\t\t\t$listofcodes = '';\n\t\t\t\t\tforeach ($tmparray as $val) {\n\t\t\t\t\t\t$val = trim($val);\n\t\t\t\t\t\tif ($val) {\n\t\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR (' : '(').$field.' LIKE \\''.$db->escape($val).',%\\'';\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.' = \\''.$db->escape($val).'\\'';\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.' LIKE \\'%,'.$db->escape($val).'\\'';\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.' LIKE \\'%,'.$db->escape($val).',%\\'';\n\t\t\t\t\t\t\t$newres .= ')';\n\t\t\t\t\t\t\t$i2++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else // $mode=0\n\t\t\t{\n\t\t\t\t$tmpcrits = explode('|', $crit);\n\t\t\t\t$i3 = 0;\n\t\t\t\tforeach ($tmpcrits as $tmpcrit) {\n\t\t\t\t\tif ($tmpcrit !== '0' && empty($tmpcrit)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$newres .= (($i2 > 0 || $i3 > 0) ? ' OR ' : '');\n\n\t\t\t\t\tif (preg_match('/\\.(id|rowid)$/', $field)) {\t// Special case for rowid that is sometimes a ref so used as a search field\n\t\t\t\t\t\t$newres .= $field.\" = \".(is_numeric(trim($tmpcrit)) ?trim($tmpcrit) : '0');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$newres .= $field.\" LIKE '\";\n\n\t\t\t\t\t\t$tmpcrit = trim($tmpcrit);\n\t\t\t\t\t\t$tmpcrit2 = $tmpcrit;\n\t\t\t\t\t\t$tmpbefore = '%';\n\t\t\t\t\t\t$tmpafter = '%';\n\t\t\t\t\t\tif (preg_match('/^[\\^\\$]/', $tmpcrit)) {\n\t\t\t\t\t\t\t$tmpbefore = '';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/^[\\^\\$]/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (preg_match('/[\\^\\$]$/', $tmpcrit)) {\n\t\t\t\t\t\t\t$tmpafter = '';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/[\\^\\$]$/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$newres .= $tmpbefore;\n\t\t\t\t\t\t$newres .= $db->escape($tmpcrit2);\n\t\t\t\t\t\t$newres .= $tmpafter;\n\t\t\t\t\t\t$newres .= \"'\";\n\t\t\t\t\t\tif ($tmpcrit2 == '') {\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.\" IS NULL\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$i3++;\n\t\t\t\t}\n\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tif ($newres) {\n\t\t\t$res = $res.($res ? ' AND ' : '').($i2 > 1 ? '(' : '').$newres.($i2 > 1 ? ')' : '');\n\t\t}\n\t\t$j++;\n\t}\n\t$res = ($nofirstand ? \"\" : \" AND \").\"(\".$res.\")\";\n\t//print 'xx'.$res.'yy';\n\treturn $res;\n}\n\n/**\n * Return string with full Url. The file qualified is the one defined by relative path in $object->last_main_doc\n *\n * @param   Object\t$object\t\t\t\tObject\n * @return\tstring\t\t\t\t\t\tUrl string\n */\nfunction showDirectDownloadLink($object)\n{\n\tglobal $conf, $langs;\n\n\t$out = '';\n\t$url = $object->getLastMainDocLink($object->element);\n\n\t$out .= img_picto($langs->trans(\"PublicDownloadLinkDesc\"), 'globe').' <span class=\"opacitymedium\">'.$langs->trans(\"DirectDownloadLink\").'</span><br>';\n\tif ($url) {\n\t\t$out .= '<div class=\"urllink\"><input type=\"text\" id=\"directdownloadlink\" class=\"quatrevingtpercent\" value=\"'.$url.'\"></div>';\n\t\t$out .= ajax_autoselect(\"directdownloadlink\", 0);\n\t} else {\n\t\t$out .= '<div class=\"urllink\">'.$langs->trans(\"FileNotShared\").'</div>';\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return the filename of file to get the thumbs\n *\n * @param   string  $file           Original filename (full or relative path)\n * @param   string  $extName        Extension to differenciate thumb file name ('', '_small', '_mini')\n * @param   string  $extImgTarget   Force image extension for thumbs. Use '' to keep same extension than original image (default).\n * @return  string                  New file name (full or relative path, including the thumbs/)\n */\nfunction getImageFileNameForSize($file, $extName, $extImgTarget = '')\n{\n\t$dirName = dirname($file);\n\tif ($dirName == '.') {\n\t\t$dirName = '';\n\t}\n\n\t$fileName = preg_replace('/(\\.gif|\\.jpeg|\\.jpg|\\.png|\\.bmp|\\.webp)$/i', '', $file); // We remove extension, whatever is its case\n\t$fileName = basename($fileName);\n\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.jpg$/i', $file) ? '.jpg' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.jpeg$/i', $file) ? '.jpeg' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.gif$/i', $file) ? '.gif' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.png$/i', $file) ? '.png' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.bmp$/i', $file) ? '.bmp' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.webp$/i', $file) ? '.webp' : '');\n\t}\n\n\tif (!$extImgTarget) {\n\t\treturn $file;\n\t}\n\n\t$subdir = '';\n\tif ($extName) {\n\t\t$subdir = 'thumbs/';\n\t}\n\n\treturn ($dirName ? $dirName.'/' : '').$subdir.$fileName.$extName.$extImgTarget; // New filename for thumb\n}\n\n\n/**\n * Return URL we can use for advanced preview links\n *\n * @param   string    $modulepart     propal, facture, facture_fourn, ...\n * @param   string    $relativepath   Relative path of docs.\n * @param\tint\t\t  $alldata\t\t  Return array with all components (1 is recommended, then use a simple a href link with the class, target and mime attribute added. 'documentpreview' css class is handled by jquery code into main.inc.php)\n * @param\tstring\t  $param\t\t  More param on http links\n * @return  string|array              Output string with href link or array with all components of link\n */\nfunction getAdvancedPreviewUrl($modulepart, $relativepath, $alldata = 0, $param = '')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->use_javascript_ajax)) {\n\t\treturn '';\n\t}\n\n\t$isAllowedForPreview = dolIsAllowedForPreview($relativepath);\n\n\tif ($alldata == 1) {\n\t\tif ($isAllowedForPreview) {\n\t\t\treturn array('target'=>'_blank', 'css'=>'documentpreview', 'url'=>DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param ? '&'.$param : ''), 'mime'=>dol_mimetype($relativepath));\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t// old behavior, return a string\n\tif ($isAllowedForPreview) {\n\t\treturn 'javascript:document_preview(\\''.dol_escape_js(DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param ? '&'.$param : '')).'\\', \\''.dol_mimetype($relativepath).'\\', \\''.dol_escape_js($langs->trans('Preview')).'\\')';\n\t} else {\n\t\treturn '';\n\t}\n}\n\n\n/**\n * Make content of an input box selected when we click into input field.\n *\n * @param string\t$htmlname\tId of html object ('#idvalue' or '.classvalue')\n * @param string\t$addlink\tAdd a 'link to' after\n * @return string\n */\nfunction ajax_autoselect($htmlname, $addlink = '')\n{\n\tglobal $langs;\n\t$out = '<script>\n               jQuery(document).ready(function () {\n\t\t\t\t    jQuery(\"'.((strpos($htmlname, '.') === 0 ? '' : '#').$htmlname).'\").click(function() { jQuery(this).select(); } );\n\t\t\t\t});\n\t\t    </script>';\n\tif ($addlink) {\n\t\t$out .= ' <a href=\"'.$addlink.'\" target=\"_blank\">'.$langs->trans(\"Link\").'</a>';\n\t}\n\treturn $out;\n}\n\n/**\n *\tReturn if a file is qualified for preview\n *\n *\t@param\tstring\t$file\t\tFilename we looking for information\n *\t@return int\t\t\t\t\t1 If allowed, 0 otherwise\n *  @see    dol_mimetype(), image_format_supported() from images.lib.php\n */\nfunction dolIsAllowedForPreview($file)\n{\n\tglobal $conf;\n\n\t// Check .noexe extension in filename\n\tif (preg_match('/\\.noexe$/i', $file)) {\n\t\treturn 0;\n\t}\n\n\t// Check mime types\n\t$mime_preview = array('bmp', 'jpeg', 'png', 'gif', 'tiff', 'pdf', 'plain', 'css', 'webp');\n\tif (!empty($conf->global->MAIN_ALLOW_SVG_FILES_AS_IMAGES)) {\n\t\t$mime_preview[] = 'svg+xml';\n\t}\n\t//$mime_preview[]='vnd.oasis.opendocument.presentation';\n\t//$mime_preview[]='archive';\n\t$num_mime = array_search(dol_mimetype($file, '', 1), $mime_preview);\n\tif ($num_mime !== false) {\n\t\treturn 1;\n\t}\n\n\t// By default, not allowed for preview\n\treturn 0;\n}\n\n\n/**\n *\tReturn mime type of a file\n *\n *\t@param\tstring\t$file\t\tFilename we looking for MIME type\n *  @param  string\t$default    Default mime type if extension not found in known list\n * \t@param\tint\t\t$mode    \t0=Return full mime, 1=otherwise short mime string, 2=image for mime type, 3=source language, 4=css of font fa\n *\t@return string \t\t    \tReturn a mime type family (text/xxx, application/xxx, image/xxx, audio, video, archive)\n *  @see    dolIsAllowedForPreview(), image_format_supported() from images.lib.php\n */\nfunction dol_mimetype($file, $default = 'application/octet-stream', $mode = 0)\n{\n\t$mime = $default;\n\t$imgmime = 'other.png';\n\t$famime = 'file-o';\n\t$srclang = '';\n\n\t$tmpfile = preg_replace('/\\.noexe$/', '', $file);\n\n\t// Plain text files\n\tif (preg_match('/\\.txt$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.rtx$/i', $tmpfile)) {\n\t\t$mime = 'text/richtext';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.csv$/i', $tmpfile)) {\n\t\t$mime = 'text/csv';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.tsv$/i', $tmpfile)) {\n\t\t$mime = 'text/tab-separated-values';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.(cf|conf|log)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.ini$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'ini';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.md$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'md';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.css$/i', $tmpfile)) {\n\t\t$mime = 'text/css';\n\t\t$imgmime = 'css.png';\n\t\t$srclang = 'css';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.lang$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'lang';\n\t\t$famime = 'file-text-o';\n\t}\n\t// Certificate files\n\tif (preg_match('/\\.(crt|cer|key|pub)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\t// XML based (HTML/XML/XAML)\n\tif (preg_match('/\\.(html|htm|shtml)$/i', $tmpfile)) {\n\t\t$mime = 'text/html';\n\t\t$imgmime = 'html.png';\n\t\t$srclang = 'html';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.(xml|xhtml)$/i', $tmpfile)) {\n\t\t$mime = 'text/xml';\n\t\t$imgmime = 'other.png';\n\t\t$srclang = 'xml';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.xaml$/i', $tmpfile)) {\n\t\t$mime = 'text/xml';\n\t\t$imgmime = 'other.png';\n\t\t$srclang = 'xaml';\n\t\t$famime = 'file-text-o';\n\t}\n\t// Languages\n\tif (preg_match('/\\.bas$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'bas';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(c)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'c';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(cpp)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'cpp';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.cs$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'cs';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(h)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'h';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(java|jsp)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'java';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.php([0-9]{1})?$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'php.png';\n\t\t$srclang = 'php';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.phtml$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'php.png';\n\t\t$srclang = 'php';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(pl|pm)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'pl.png';\n\t\t$srclang = 'perl';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.sql$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'sql';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.js$/i', $tmpfile)) {\n\t\t$mime = 'text/x-javascript';\n\t\t$imgmime = 'jscript.png';\n\t\t$srclang = 'js';\n\t\t$famime = 'file-code-o';\n\t}\n\t// Open office\n\tif (preg_match('/\\.odp$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.oasis.opendocument.presentation';\n\t\t$imgmime = 'ooffice.png';\n\t\t$famime = 'file-powerpoint-o';\n\t}\n\tif (preg_match('/\\.ods$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.oasis.opendocument.spreadsheet';\n\t\t$imgmime = 'ooffice.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.odt$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.oasis.opendocument.text';\n\t\t$imgmime = 'ooffice.png';\n\t\t$famime = 'file-word-o';\n\t}\n\t// MS Office\n\tif (preg_match('/\\.mdb$/i', $tmpfile)) {\n\t\t$mime = 'application/msaccess';\n\t\t$imgmime = 'mdb.png';\n\t\t$famime = 'file-o';\n\t}\n\tif (preg_match('/\\.doc(x|m)?$/i', $tmpfile)) {\n\t\t$mime = 'application/msword';\n\t\t$imgmime = 'doc.png';\n\t\t$famime = 'file-word-o';\n\t}\n\tif (preg_match('/\\.dot(x|m)?$/i', $tmpfile)) {\n\t\t$mime = 'application/msword';\n\t\t$imgmime = 'doc.png';\n\t\t$famime = 'file-word-o';\n\t}\n\tif (preg_match('/\\.xlt(x)?$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-excel';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.xla(m)?$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-excel';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.xls$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-excel';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.xls(b|m|x)$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.pps(m|x)?$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-powerpoint';\n\t\t$imgmime = 'ppt.png';\n\t\t$famime = 'file-powerpoint-o';\n\t}\n\tif (preg_match('/\\.ppt(m|x)?$/i', $tmpfile)) {\n\t\t$mime = 'application/x-mspowerpoint';\n\t\t$imgmime = 'ppt.png';\n\t\t$famime = 'file-powerpoint-o';\n\t}\n\t// Other\n\tif (preg_match('/\\.pdf$/i', $tmpfile)) {\n\t\t$mime = 'application/pdf';\n\t\t$imgmime = 'pdf.png';\n\t\t$famime = 'file-pdf-o';\n\t}\n\t// Scripts\n\tif (preg_match('/\\.bat$/i', $tmpfile)) {\n\t\t$mime = 'text/x-bat';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'dos';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.sh$/i', $tmpfile)) {\n\t\t$mime = 'text/x-sh';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'bash';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.ksh$/i', $tmpfile)) {\n\t\t$mime = 'text/x-ksh';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'bash';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.bash$/i', $tmpfile)) {\n\t\t$mime = 'text/x-bash';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'bash';\n\t\t$famime = 'file-code-o';\n\t}\n\t// Images\n\tif (preg_match('/\\.ico$/i', $tmpfile)) {\n\t\t$mime = 'image/x-icon';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.(jpg|jpeg)$/i', $tmpfile)) {\n\t\t$mime = 'image/jpeg';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.png$/i', $tmpfile)) {\n\t\t$mime = 'image/png';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.gif$/i', $tmpfile)) {\n\t\t$mime = 'image/gif';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.bmp$/i', $tmpfile)) {\n\t\t$mime = 'image/bmp';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.(tif|tiff)$/i', $tmpfile)) {\n\t\t$mime = 'image/tiff';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.svg$/i', $tmpfile)) {\n\t\t$mime = 'image/svg+xml';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.webp$/i', $tmpfile)) {\n\t\t$mime = 'image/webp';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\t// Calendar\n\tif (preg_match('/\\.vcs$/i', $tmpfile)) {\n\t\t$mime = 'text/calendar';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.ics$/i', $tmpfile)) {\n\t\t$mime = 'text/calendar';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-text-o';\n\t}\n\t// Other\n\tif (preg_match('/\\.torrent$/i', $tmpfile)) {\n\t\t$mime = 'application/x-bittorrent';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-o';\n\t}\n\t// Audio\n\tif (preg_match('/\\.(mp3|ogg|au|wav|wma|mid)$/i', $tmpfile)) {\n\t\t$mime = 'audio';\n\t\t$imgmime = 'audio.png';\n\t\t$famime = 'file-audio-o';\n\t}\n\t// Video\n\tif (preg_match('/\\.mp4$/i', $tmpfile)) {\n\t\t$mime = 'video/mp4';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.ogv$/i', $tmpfile)) {\n\t\t$mime = 'video/ogg';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.webm$/i', $tmpfile)) {\n\t\t$mime = 'video/webm';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.avi$/i', $tmpfile)) {\n\t\t$mime = 'video/x-msvideo';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.divx$/i', $tmpfile)) {\n\t\t$mime = 'video/divx';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.xvid$/i', $tmpfile)) {\n\t\t$mime = 'video/xvid';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.(wmv|mpg|mpeg)$/i', $tmpfile)) {\n\t\t$mime = 'video';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\t// Archive\n\tif (preg_match('/\\.(zip|rar|gz|tgz|z|cab|bz2|7z|tar|lzh|zst)$/i', $tmpfile)) {\n\t\t$mime = 'archive';\n\t\t$imgmime = 'archive.png';\n\t\t$famime = 'file-archive-o';\n\t}    // application/xxx where zzz is zip, ...\n\t// Exe\n\tif (preg_match('/\\.(exe|com)$/i', $tmpfile)) {\n\t\t$mime = 'application/octet-stream';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-o';\n\t}\n\t// Lib\n\tif (preg_match('/\\.(dll|lib|o|so|a)$/i', $tmpfile)) {\n\t\t$mime = 'library';\n\t\t$imgmime = 'library.png';\n\t\t$famime = 'file-o';\n\t}\n\t// Err\n\tif (preg_match('/\\.err$/i', $tmpfile)) {\n\t\t$mime = 'error';\n\t\t$imgmime = 'error.png';\n\t\t$famime = 'file-text-o';\n\t}\n\n\t// Return string\n\tif ($mode == 1) {\n\t\t$tmp = explode('/', $mime);\n\t\treturn (!empty($tmp[1]) ? $tmp[1] : $tmp[0]);\n\t}\n\tif ($mode == 2) {\n\t\treturn $imgmime;\n\t}\n\tif ($mode == 3) {\n\t\treturn $srclang;\n\t}\n\tif ($mode == 4) {\n\t\treturn $famime;\n\t}\n\treturn $mime;\n}\n\n/**\n * Return value from dictionary\n *\n * @param string\t$tablename\t\tname of dictionary\n * @param string\t$field\t\t\tthe value to return\n * @param int\t\t$id\t\t\t\tid of line\n * @param bool\t\t$checkentity\tadd filter on entity\n * @param string\t$rowidfield\t\tname of the column rowid\n * @return string\n */\nfunction getDictvalue($tablename, $field, $id, $checkentity = false, $rowidfield = 'rowid')\n{\n\tglobal $dictvalues, $db, $langs;\n\n\tif (!isset($dictvalues[$tablename])) {\n\t\t$dictvalues[$tablename] = array();\n\n\t\t$sql = 'SELECT * FROM '.$tablename.' WHERE 1 = 1'; // Here select * is allowed as it is generic code and we don't have list of fields\n\t\tif ($checkentity) {\n\t\t\t$sql .= ' AND entity IN (0,'.getEntity($tablename).')';\n\t\t}\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t$dictvalues[$tablename][$obj->{$rowidfield}] = $obj;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tif (!empty($dictvalues[$tablename][$id])) {\n\t\treturn $dictvalues[$tablename][$id]->{$field}; // Found\n\t} else // Not found\n\t{\n\t\tif ($id > 0) {\n\t\t\treturn $id;\n\t\t}\n\t\treturn '';\n\t}\n}\n\n/**\n *\tReturn true if the color is light\n *\n *  @param\tstring\t$stringcolor\t\tString with hex (FFFFFF) or comma RGB ('255,255,255')\n *  @return\tint\t\t\t\t\t\t\t-1 : Error with argument passed |0 : color is dark | 1 : color is light\n */\nfunction colorIsLight($stringcolor)\n{\n\t$stringcolor = str_replace('#', '', $stringcolor);\n\t$res = -1;\n\tif (!empty($stringcolor)) {\n\t\t$res = 0;\n\t\t$tmp = explode(',', $stringcolor);\n\t\tif (count($tmp) > 1) {   // This is a comma RGB ('255','255','255')\n\t\t\t$r = $tmp[0];\n\t\t\t$g = $tmp[1];\n\t\t\t$b = $tmp[2];\n\t\t} else {\n\t\t\t$hexr = $stringcolor[0].$stringcolor[1];\n\t\t\t$hexg = $stringcolor[2].$stringcolor[3];\n\t\t\t$hexb = $stringcolor[4].$stringcolor[5];\n\t\t\t$r = hexdec($hexr);\n\t\t\t$g = hexdec($hexg);\n\t\t\t$b = hexdec($hexb);\n\t\t}\n\t\t$bright = (max($r, $g, $b) + min($r, $g, $b)) / 510.0; // HSL algorithm\n\t\tif ($bright > 0.6) {\n\t\t\t$res = 1;\n\t\t}\n\t}\n\treturn $res;\n}\n\n/**\n * Function to test if an entry is enabled or not\n *\n * @param\tstring\t\t$type_user\t\t\t\t\t0=We test for internal user, 1=We test for external user\n * @param\tarray\t\t$menuentry\t\t\t\t\tArray for feature entry to test\n * @param\tarray\t\t$listofmodulesforexternal\tArray with list of modules allowed to external users\n * @return\tint\t\t\t\t\t\t\t\t\t\t0=Hide, 1=Show, 2=Show gray\n */\nfunction isVisibleToUserType($type_user, &$menuentry, &$listofmodulesforexternal)\n{\n\tglobal $conf;\n\n\t//print 'type_user='.$type_user.' module='.$menuentry['module'].' enabled='.$menuentry['enabled'].' perms='.$menuentry['perms'];\n\t//print 'ok='.in_array($menuentry['module'], $listofmodulesforexternal);\n\tif (empty($menuentry['enabled'])) {\n\t\treturn 0; // Entry disabled by condition\n\t}\n\tif ($type_user && $menuentry['module']) {\n\t\t$tmploops = explode('|', $menuentry['module']);\n\t\t$found = 0;\n\t\tforeach ($tmploops as $tmploop) {\n\t\t\tif (in_array($tmploop, $listofmodulesforexternal)) {\n\t\t\t\t$found++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$found) {\n\t\t\treturn 0; // Entry is for menus all excluded to external users\n\t\t}\n\t}\n\tif (!$menuentry['perms'] && $type_user) {\n\t\treturn 0; // No permissions and user is external\n\t}\n\tif (!$menuentry['perms'] && !empty($conf->global->MAIN_MENU_HIDE_UNAUTHORIZED)) {\n\t\treturn 0; // No permissions and option to hide when not allowed, even for internal user, is on\n\t}\n\tif (!$menuentry['perms']) {\n\t\treturn 2; // No permissions and user is external\n\t}\n\treturn 1;\n}\n\n/**\n * Round to next multiple.\n *\n * @param \tdouble\t\t$n\t\tNumber to round up\n * @param \tinteger\t\t$x\t\tMultiple. For example 60 to round up to nearest exact minute for a date with seconds.\n * @return \tinteger\t\t\t\tValue rounded.\n */\nfunction roundUpToNextMultiple($n, $x = 5)\n{\n\treturn (ceil($n) % $x === 0) ? ceil($n) : round(($n + $x / 2) / $x) * $x;\n}\n\n/**\n * Function dolGetBadge\n *\n * @param   string  $label      label of badge no html : use in alt attribute for accessibility\n * @param   string  $html       optional : label of badge with html\n * @param   string  $type       type of badge : Primary Secondary Success Danger Warning Info Light Dark status0 status1 status2 status3 status4 status5 status6 status7 status8 status9\n * @param   string  $mode       default '' , 'pill', 'dot'\n * @param   string  $url        the url for link\n * @param   array   $params     various params for future : recommended rather than adding more fuction arguments. array('attr'=>array('title'=>'abc'))\n * @return  string              Html badge\n */\nfunction dolGetBadge($label, $html = '', $type = 'primary', $mode = '', $url = '', $params = array())\n{\n\t$attr = array(\n\t\t'class'=>'badge '.(!empty($mode) ? ' badge-'.$mode : '').(!empty($type) ? ' badge-'.$type : '').(empty($params['css']) ? '' : ' '.$params['css'])\n\t);\n\n\tif (empty($html)) {\n\t\t$html = $label;\n\t}\n\n\tif (!empty($url)) {\n\t\t$attr['href'] = $url;\n\t}\n\n\tif ($mode === 'dot') {\n\t\t$attr['class'] .= ' classfortooltip';\n\t\t$attr['title'] = $html;\n\t\t$attr['aria-label'] = $label;\n\t\t$html = '';\n\t}\n\n\t// Override attr\n\tif (!empty($params['attr']) && is_array($params['attr'])) {\n\t\tforeach ($params['attr'] as $key => $value) {\n\t\t\tif ($key == 'class') {\n\t\t\t\t$attr['class'] .= ' '.$value;\n\t\t\t} elseif ($key == 'classOverride') {\n\t\t\t\t$attr['class'] = $value;\n\t\t\t} else {\n\t\t\t\t$attr[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO: add hook\n\n\t// escape all attribute\n\t$attr = array_map('dol_escape_htmltag', $attr);\n\n\t$TCompiledAttr = array();\n\tforeach ($attr as $key => $value) {\n\t\t$TCompiledAttr[] = $key.'=\"'.$value.'\"';\n\t}\n\n\t$compiledAttributes = !empty($TCompiledAttr) ?implode(' ', $TCompiledAttr) : '';\n\n\t$tag = !empty($url) ? 'a' : 'span';\n\n\treturn '<'.$tag.' '.$compiledAttributes.'>'.$html.'</'.$tag.'>';\n}\n\n\n/**\n * Output the badge of a status.\n *\n * @param   string  $statusLabel       Label of badge no html : use in alt attribute for accessibility\n * @param   string  $statusLabelShort  Short label of badge no html\n * @param   string  $html              Optional : label of badge with html\n * @param   string  $statusType        status0 status1 status2 status3 status4 status5 status6 status7 status8 status9 : image name or badge name\n * @param   int\t    $displayMode       0=Long label, 1=Short label, 2=Picto + Short label, 3=Picto, 4=Picto + Long label, 5=Short label + Picto, 6=Long label + Picto\n * @param   string  $url               The url for link\n * @param   array   $params            Various params. Example: array('tooltip'=>'no|...', 'badgeParams'=>...)\n * @return  string                     Html status string\n */\nfunction dolGetStatus($statusLabel = '', $statusLabelShort = '', $html = '', $statusType = 'status0', $displayMode = 0, $url = '', $params = array())\n{\n\tglobal $conf;\n\n\t$return = '';\n\t$dolGetBadgeParams = array();\n\n\tif (!empty($params['badgeParams'])) {\n\t\t$dolGetBadgeParams = $params['badgeParams'];\n\t}\n\n\t// TODO : add a hook\n\tif ($displayMode == 0) {\n\t\t$return = !empty($html) ? $html : (empty($conf->dol_optimize_smallscreen) ? $statusLabel : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort));\n\t} elseif ($displayMode == 1) {\n\t\t$return = !empty($html) ? $html : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort);\n\t} elseif (!empty($conf->global->MAIN_STATUS_USES_IMAGES)) {\n\t\t// Use status with images (for backward compatibility)\n\t\t$return = '';\n\t\t$htmlLabel      = (in_array($displayMode, array(1, 2, 5)) ? '<span class=\"hideonsmartphone\">' : '').(!empty($html) ? $html : $statusLabel).(in_array($displayMode, array(1, 2, 5)) ? '</span>' : '');\n\t\t$htmlLabelShort = (in_array($displayMode, array(1, 2, 5)) ? '<span class=\"hideonsmartphone\">' : '').(!empty($html) ? $html : (!empty($statusLabelShort) ? $statusLabelShort : $statusLabel)).(in_array($displayMode, array(1, 2, 5)) ? '</span>' : '');\n\n\t\t// For small screen, we always use the short label instead of long label.\n\t\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t\tif ($displayMode == 0) {\n\t\t\t\t$displayMode = 1;\n\t\t\t} elseif ($displayMode == 4) {\n\t\t\t\t$displayMode = 2;\n\t\t\t} elseif ($displayMode == 6) {\n\t\t\t\t$displayMode = 5;\n\t\t\t}\n\t\t}\n\n\t\t// For backward compatibility. Image's filename are still in French, so we use this array to convert\n\t\t$statusImg = array(\n\t\t\t'status0' => 'statut0',\n\t\t\t'status1' => 'statut1',\n\t\t\t'status2' => 'statut2',\n\t\t\t'status3' => 'statut3',\n\t\t\t'status4' => 'statut4',\n\t\t\t'status5' => 'statut5',\n\t\t\t'status6' => 'statut6',\n\t\t\t'status7' => 'statut7',\n\t\t\t'status8' => 'statut8',\n\t\t\t'status9' => 'statut9'\n\t\t);\n\n\t\tif (!empty($statusImg[$statusType])) {\n\t\t\t$htmlImg = img_picto($statusLabel, $statusImg[$statusType]);\n\t\t} else {\n\t\t\t$htmlImg = img_picto($statusLabel, $statusType);\n\t\t}\n\n\t\tif ($displayMode === 2) {\n\t\t\t$return = $htmlImg.' '.$htmlLabelShort;\n\t\t} elseif ($displayMode === 3) {\n\t\t\t$return = $htmlImg;\n\t\t} elseif ($displayMode === 4) {\n\t\t\t$return = $htmlImg.' '.$htmlLabel;\n\t\t} elseif ($displayMode === 5) {\n\t\t\t$return = $htmlLabelShort.' '.$htmlImg;\n\t\t} else { // $displayMode >= 6\n\t\t\t$return = $htmlLabel.' '.$htmlImg;\n\t\t}\n\t} elseif (empty($conf->global->MAIN_STATUS_USES_IMAGES) && !empty($displayMode)) {\n\t\t// Use new badge\n\t\t$statusLabelShort = (empty($statusLabelShort) ? $statusLabel : $statusLabelShort);\n\n\t\t$dolGetBadgeParams['attr']['class'] = 'badge-status';\n\t\t$dolGetBadgeParams['attr']['title'] = empty($params['tooltip']) ? $statusLabel : ($params['tooltip'] != 'no' ? $params['tooltip'] : '');\n\n\t\tif ($displayMode == 3) {\n\t\t\t$return = dolGetBadge((empty($conf->dol_optimize_smallscreen) ? $statusLabel : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort)), '', $statusType, 'dot', $url, $dolGetBadgeParams);\n\t\t} elseif ($displayMode === 5) {\n\t\t\t$return = dolGetBadge($statusLabelShort, $html, $statusType, '', $url, $dolGetBadgeParams);\n\t\t} else {\n\t\t\t$return = dolGetBadge((empty($conf->dol_optimize_smallscreen) ? $statusLabel : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort)), $html, $statusType, '', $url, $dolGetBadgeParams);\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n\n/**\n * Function dolGetButtonAction\n *\n * @param string    $label      label of button without HTML : use in alt attribute for accessibility $html is not empty\n * @param string    $html       optional : content with html\n * @param string    $actionType default, delete, danger\n * @param string    $url        the url for link\n * @param string    $id         attribute id of button\n * @param int       $userRight  user action right\n * @param array     $params     various params for future : recommended rather than adding more function arguments\n * @return string               html button\n */\nfunction dolGetButtonAction($label, $html = '', $actionType = 'default', $url = '', $id = '', $userRight = 1, $params = array())\n{\n\t$class = 'butAction';\n\tif ($actionType == 'danger' || $actionType == 'delete') {\n\t\t$class = 'butActionDelete';\n\t\tif (strpos($url, 'token=') === false) $url .= '&token='.newToken();\n\t}\n\n\t$attr = array(\n\t\t'class' => $class,\n\t\t'href' => empty($url) ? '' : $url,\n\t\t'title' => $label\n\t);\n\n\tif (empty($html)) {\n\t\t$html = $label;\n\t} else {\n\t\t$attr['aria-label'] = $label;\n\t}\n\n\tif (empty($userRight)) {\n\t\t$attr['class'] = 'butActionRefused';\n\t\t$attr['href'] = '';\n\t}\n\n\tif (!empty($id)) {\n\t\t$attr['id'] = $id;\n\t}\n\n\t// Override attr\n\tif (!empty($params['attr']) && is_array($params['attr'])) {\n\t\tforeach ($params['attr'] as $key => $value) {\n\t\t\tif ($key == 'class') {\n\t\t\t\t$attr['class'] .= ' '.$value;\n\t\t\t} elseif ($key == 'classOverride') {\n\t\t\t\t$attr['class'] = $value;\n\t\t\t} else {\n\t\t\t\t$attr[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset($attr['href']) && empty($attr['href'])) {\n\t\tunset($attr['href']);\n\t}\n\n\t// TODO : add a hook\n\n\t// escape all attribute\n\t$attr = array_map('dol_escape_htmltag', $attr);\n\n\t$TCompiledAttr = array();\n\tforeach ($attr as $key => $value) {\n\t\t$TCompiledAttr[] = $key.'=\"'.$value.'\"';\n\t}\n\n\t$compiledAttributes = !empty($TCompiledAttr) ?implode(' ', $TCompiledAttr) : '';\n\n\t$tag = !empty($attr['href']) ? 'a' : 'span';\n\n\treturn '<'.$tag.' '.$compiledAttributes.'>'.$html.'</'.$tag.'>';\n}\n\n/**\n * Add space between dolGetButtonTitle\n *\n * @param  string $moreClass \tmore css class label\n * @return string \t\t\t\thtml of title separator\n */\nfunction dolGetButtonTitleSeparator($moreClass = \"\")\n{\n\treturn '<span class=\"button-title-separator '.$moreClass.'\" ></span>';\n}\n\n/**\n * Function dolGetButtonTitle : this kind of buttons are used in title in list\n *\n * @param string    $label      label of button\n * @param string    $helpText   optional : content for help tooltip\n * @param string    $iconClass  class for icon element (Example: 'fa fa-file')\n * @param string    $url        the url for link\n * @param string    $id         attribute id of button\n * @param int       $status     0 no user rights, 1 active, 2 current action or selected, -1 Feature Disabled, -2 disable Other reason use helpText as tooltip\n * @param array     $params     various params for future : recommended rather than adding more function arguments\n * @return string               html button\n */\nfunction dolGetButtonTitle($label, $helpText = '', $iconClass = 'fa fa-file', $url = '', $id = '', $status = 1, $params = array())\n{\n\tglobal $langs, $conf, $user;\n\n\t// Actually this conf is used in css too for external module compatibility and smooth transition to this function\n\tif (!empty($conf->global->MAIN_BUTTON_HIDE_UNAUTHORIZED) && (!$user->admin) && $status <= 0) {\n\t\treturn '';\n\t}\n\n\t$class = 'btnTitle';\n\tif (in_array($iconClass, array('fa fa-plus-circle', 'fa fa-comment-dots'))) {\n\t\t$class .= ' btnTitlePlus';\n\t}\n\t$useclassfortooltip = 1;\n\n\tif (!empty($params['morecss'])) {\n\t\t$class .= ' '.$params['morecss'];\n\t}\n\n\t$attr = array(\n\t\t'class' => $class,\n\t\t'href' => empty($url) ? '' : $url\n\t);\n\n\tif (!empty($helpText)) {\n\t\t$attr['title'] = dol_escape_htmltag($helpText);\n\t} elseif (empty($attr['title']) && $label) {\n\t\t$attr['title'] = $label;\n\t\t$useclassfortooltip = 0;\n\t}\n\n\tif ($status == 2) {\n\t\t$attr['class'] .= ' btnTitleSelected';\n\t} elseif ($status <= 0) {\n\t\t$attr['class'] .= ' refused';\n\n\t\t$attr['href'] = '';\n\n\t\tif ($status == -1) { // disable\n\t\t\t$attr['title'] = dol_escape_htmltag($langs->transnoentitiesnoconv(\"FeatureDisabled\"));\n\t\t} elseif ($status == 0) { // Not enough permissions\n\t\t\t$attr['title'] = dol_escape_htmltag($langs->transnoentitiesnoconv(\"NotEnoughPermissions\"));\n\t\t}\n\t}\n\n\tif (!empty($attr['title']) && $useclassfortooltip) {\n\t\t$attr['class'] .= ' classfortooltip';\n\t}\n\n\tif (!empty($id)) {\n\t\t$attr['id'] = $id;\n\t}\n\n\t// Override attr\n\tif (!empty($params['attr']) && is_array($params['attr'])) {\n\t\tforeach ($params['attr'] as $key => $value) {\n\t\t\tif ($key == 'class') {\n\t\t\t\t$attr['class'] .= ' '.$value;\n\t\t\t} elseif ($key == 'classOverride') {\n\t\t\t\t$attr['class'] = $value;\n\t\t\t} else {\n\t\t\t\t$attr[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset($attr['href']) && empty($attr['href'])) {\n\t\tunset($attr['href']);\n\t}\n\n\t// TODO : add a hook\n\n\t// escape all attribute\n\t$attr = array_map('dol_escape_htmltag', $attr);\n\n\t$TCompiledAttr = array();\n\tforeach ($attr as $key => $value) {\n\t\t$TCompiledAttr[] = $key.'=\"'.$value.'\"';\n\t}\n\n\t$compiledAttributes = (empty($TCompiledAttr) ? '' : implode(' ', $TCompiledAttr));\n\n\t$tag = (empty($attr['href']) ? 'span' : 'a');\n\n\t$button = '<'.$tag.' '.$compiledAttributes.'>';\n\t$button .= '<span class=\"'.$iconClass.' valignmiddle btnTitle-icon\"></span>';\n\tif (!empty($params['forcenohideoftext'])) {\n\t\t$button .= '<span class=\"valignmiddle text-plus-circle btnTitle-label'.(empty($params['forcenohideoftext']) ? ' hideonsmartphone' : '').'\">'.$label.'</span>';\n\t}\n\t$button .= '</'.$tag.'>';\n\n\treturn $button;\n}\n\n/**\n * Get an array with properties of an element.\n * Called by fetchObjectByElement.\n *\n * @param   string \t$element_type \tElement type (Value of $object->element). Example: 'action', 'facture', 'project_task' or 'object@mymodule'...\n * @return  array\t\t\t\t\t(module, classpath, element, subelement, classfile, classname)\n */\nfunction getElementProperties($element_type)\n{\n\t$regs = array();\n\n\t$classfile = $classname = $classpath = '';\n\n\t// Parse element/subelement (ex: project_task)\n\t$module = $element_type;\n\t$element = $element_type;\n\t$subelement = $element_type;\n\n\t// If we ask an resource form external module (instead of default path)\n\tif (preg_match('/^([^@]+)@([^@]+)$/i', $element_type, $regs)) {\n\t\t$element = $subelement = $regs[1];\n\t\t$module = $regs[2];\n\t}\n\n\t//print '<br>1. element : '.$element.' - module : '.$module .'<br>';\n\tif (preg_match('/^([^_]+)_([^_]+)/i', $element, $regs)) {\n\t\t$module = $element = $regs[1];\n\t\t$subelement = $regs[2];\n\t}\n\n\t// For compat\n\tif ($element_type == \"action\") {\n\t\t$classpath = 'comm/action/class';\n\t\t$subelement = 'Actioncomm';\n\t\t$module = 'agenda';\n\t}\n\n\t// To work with non standard path\n\tif ($element_type == 'facture' || $element_type == 'invoice') {\n\t\t$classpath = 'compta/facture/class';\n\t\t$module = 'facture';\n\t\t$subelement = 'facture';\n\t}\n\tif ($element_type == 'commande' || $element_type == 'order') {\n\t\t$classpath = 'commande/class';\n\t\t$module = 'commande';\n\t\t$subelement = 'commande';\n\t}\n\tif ($element_type == 'propal') {\n\t\t$classpath = 'comm/propal/class';\n\t}\n\tif ($element_type == 'supplier_proposal') {\n\t\t$classpath = 'supplier_proposal/class';\n\t}\n\tif ($element_type == 'shipping') {\n\t\t$classpath = 'expedition/class';\n\t\t$subelement = 'expedition';\n\t\t$module = 'expedition_bon';\n\t}\n\tif ($element_type == 'delivery') {\n\t\t$classpath = 'delivery/class';\n\t\t$subelement = 'delivery';\n\t\t$module = 'delivery_note';\n\t}\n\tif ($element_type == 'contract') {\n\t\t$classpath = 'contrat/class';\n\t\t$module = 'contrat';\n\t\t$subelement = 'contrat';\n\t}\n\tif ($element_type == 'member') {\n\t\t$classpath = 'adherents/class';\n\t\t$module = 'adherent';\n\t\t$subelement = 'adherent';\n\t}\n\tif ($element_type == 'cabinetmed_cons') {\n\t\t$classpath = 'cabinetmed/class';\n\t\t$module = 'cabinetmed';\n\t\t$subelement = 'cabinetmedcons';\n\t}\n\tif ($element_type == 'fichinter') {\n\t\t$classpath = 'fichinter/class';\n\t\t$module = 'ficheinter';\n\t\t$subelement = 'fichinter';\n\t}\n\tif ($element_type == 'dolresource' || $element_type == 'resource') {\n\t\t$classpath = 'resource/class';\n\t\t$module = 'resource';\n\t\t$subelement = 'dolresource';\n\t}\n\tif ($element_type == 'propaldet') {\n\t\t$classpath = 'comm/propal/class';\n\t\t$module = 'propal';\n\t\t$subelement = 'propaleligne';\n\t}\n\tif ($element_type == 'order_supplier') {\n\t\t$classpath = 'fourn/class';\n\t\t$module = 'fournisseur';\n\t\t$subelement = 'commandefournisseur';\n\t\t$classfile = 'fournisseur.commande';\n\t}\n\tif ($element_type == 'invoice_supplier') {\n\t\t$classpath = 'fourn/class';\n\t\t$module = 'fournisseur';\n\t\t$subelement = 'facturefournisseur';\n\t\t$classfile = 'fournisseur.facture';\n\t}\n\tif ($element_type == \"service\") {\n\t\t$classpath = 'product/class';\n\t\t$subelement = 'product';\n\t}\n\n\tif (empty($classfile)) {\n\t\t$classfile = strtolower($subelement);\n\t}\n\tif (empty($classname)) {\n\t\t$classname = ucfirst($subelement);\n\t}\n\tif (empty($classpath)) {\n\t\t$classpath = $module.'/class';\n\t}\n\n\t$element_properties = array(\n\t\t'module' => $module,\n\t\t'classpath' => $classpath,\n\t\t'element' => $element,\n\t\t'subelement' => $subelement,\n\t\t'classfile' => $classfile,\n\t\t'classname' => $classname\n\t);\n\treturn $element_properties;\n}\n\n/**\n * Fetch an object from its id and element_type\n * Inclusion of classes is automatic\n *\n * @param\tint     \t$element_id \tElement id\n * @param\tstring  \t$element_type \tElement type\n * @param\tstring     \t$element_ref \tElement ref (Use this or element_id but not both)\n * @return \tint|object \t\t\t\t\tobject || 0 || -1 if error\n */\nfunction fetchObjectByElement($element_id, $element_type, $element_ref = '')\n{\n\tglobal $conf, $db;\n\n\t$element_prop = getElementProperties($element_type);\n\tif (is_array($element_prop) && $conf->{$element_prop['module']}->enabled) {\n\t\tdol_include_once('/'.$element_prop['classpath'].'/'.$element_prop['classfile'].'.class.php');\n\n\t\t$objecttmp = new $element_prop['classname']($db);\n\t\t$ret = $objecttmp->fetch($element_id, $element_ref);\n\t\tif ($ret >= 0) {\n\t\t\treturn $objecttmp;\n\t\t}\n\t}\n\treturn 0;\n}\n\n/**\n * Return if a file can contains executable content\n *\n * @param   string  $filename       File name to test\n * @return  boolean                 True if yes, False if no\n */\nfunction isAFileWithExecutableContent($filename)\n{\n\tif (preg_match('/\\.(htm|html|js|phar|php|php\\d+|phtml|pht|pl|py|cgi|ksh|sh|shtml|bash|bat|cmd|wpk|exe|dmg)$/i', $filename)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Return the value of token currently saved into session with name 'newtoken'.\n * This token must be send by any POST as it will be used by next page for comparison with value in session.\n *\n * @return  string\n */\nfunction newToken()\n{\n\treturn $_SESSION['newtoken'];\n}\n\n/**\n * Return the value of token currently saved into session with name 'token'.\n *\n * @return  string\n */\nfunction currentToken()\n{\n\treturn $_SESSION['token'];\n}\n\n/**\n * Start a table with headers and a optinal clickable number (don't forget to use \"finishSimpleTable()\" after the last table row)\n *\n * @param string\t$header\t\tThe first left header of the table (automatic translated)\n * @param string\t$link\t\t(optional) The link to a internal dolibarr page, when click on the number (without the first \"/\")\n * @param string\t$arguments\t(optional) Additional arguments for the link (e.g. \"search_status=0\")\n * @param integer\t$emptyRows\t(optional) The count of empty rows after the first header\n * @param integer\t$number\t\t(optional) The number that is shown right after the first header, when not set the link is shown on the right side of the header as \"FullList\"\n * @return void\n *\n * @see finishSimpleTable()\n */\nfunction startSimpleTable($header, $link = \"\", $arguments = \"\", $emptyRows = 0, $number = -1)\n{\n\tglobal $langs;\n\n\tprint '<div class=\"div-table-responsive-no-min\">';\n\tprint '<table class=\"noborder centpercent\">';\n\tprint '<tr class=\"liste_titre\">';\n\n\tprint $emptyRows < 1 ? '<th>' : '<th colspan=\"'.($emptyRows + 1).'\">';\n\n\tprint $langs->trans($header);\n\n\t// extra space between the first header and the number\n\tif ($number > -1) {\n\t\tprint ' ';\n\t}\n\n\tif (!empty($link)) {\n\t\tif (!empty($arguments)) {\n\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/'.$link.'?'.$arguments.'\">';\n\t\t} else {\n\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/'.$link.'\">';\n\t\t}\n\t}\n\n\tif ($number > -1) {\n\t\tprint '<span class=\"badge\">'.$number.'</span>';\n\t}\n\n\tif (!empty($link)) {\n\t\tprint '</a>';\n\t}\n\n\tprint '</th>';\n\n\tif ($number < 0 && !empty($link)) {\n\t\tprint '<th class=\"right\">';\n\n\t\tif (!empty($arguments)) {\n\t\t\tprint '<a class=\"commonlink\" href=\"'.DOL_URL_ROOT.'/'.$link.'?'.$arguments.'\">';\n\t\t} else {\n\t\t\tprint '<a class=\"commonlink\" href=\"'.DOL_URL_ROOT.'/'.$link.'\">';\n\t\t}\n\n\t\tprint $langs->trans(\"FullList\");\n\t\tprint '</a>';\n\t\tprint '</th>';\n\t}\n\n\tprint '</tr>';\n}\n\n/**\n * Add the correct HTML close tags for \"startSimpleTable(...)\" (use after the last table line)\n *\n * @param \tbool \t$addLineBreak\t(optional) Add a extra line break after the complete table (\\<br\\>)\n * @return \tvoid\n *\n * @see startSimpleTable()\n */\nfunction finishSimpleTable($addLineBreak = false)\n{\n\tprint '</table>';\n\tprint '</div>';\n\n\tif ($addLineBreak) {\n\t\tprint '<br>';\n\t}\n}\n\n/**\n * Add a summary line to the current open table (\"None\", \"XMoreLines\" or \"Total xxx\")\n *\n * @param integer\t$tableColumnCount\t\tThe complete count columns of the table\n * @param integer\t$num\t\t\t\t\tThe count of the rows of the table, when it is zero (0) the \"$noneWord\" is shown instead\n * @param integer\t$nbofloop\t\t\t\t(optional)\tThe maximum count of rows thaht the table show (when it is zero (0) no summary line will show, expect \"$noneWord\" when $num === 0)\n * @param integer\t$total\t\t\t\t\t(optional)\tThe total value thaht is shown after when the table has minimum of one entire\n * @param string\t$noneWord\t\t\t\t(optional)\tThe word that is shown when the table has no entires ($num === 0)\n * @param boolean\t$extraRightColumn\t\t(optional)\tAdd a addtional column after the summary word and total number\n * @return void\n */\nfunction addSummaryTableLine($tableColumnCount, $num, $nbofloop = 0, $total = 0, $noneWord = \"None\", $extraRightColumn = false)\n{\n\tglobal $langs;\n\n\tif ($num === 0) {\n\t\tprint '<tr class=\"oddeven\">';\n\t\tprint '<td colspan=\"'.$tableColumnCount.'\" class=\"opacitymedium\">'.$langs->trans($noneWord).'</td>';\n\t\tprint '</tr>';\n\t\treturn;\n\t}\n\n\tif ($nbofloop === 0) {\n\t\t// don't show a summary line\n\t\treturn;\n\t}\n\n\tif ($num === 0) {\n\t\t$colspan = $tableColumnCount;\n\t} elseif ($num > $nbofloop) {\n\t\t$colspan = $tableColumnCount;\n\t} else {\n\t\t$colspan = $tableColumnCount - 1;\n\t}\n\n\tif ($extraRightColumn) {\n\t\t$colspan--;\n\t}\n\n\tprint '<tr class=\"liste_total\">';\n\n\tif ($nbofloop > 0 && $num > $nbofloop) {\n\t\tprint '<td colspan=\"'.$colspan.'\" class=\"right\">'.$langs->trans(\"XMoreLines\", ($num - $nbofloop)).'</td>';\n\t} else {\n\t\tprint '<td colspan=\"'.$colspan.'\" class=\"right\"> '.$langs->trans(\"Total\").'</td>';\n\t\tprint '<td class=\"right\" width=\"100\">'.price($total).'</td>';\n\t}\n\n\tif ($extraRightColumn) {\n\t\tprint '<td></td>';\n\t}\n\n\tprint '</tr>';\n}\n\n/**\n *  Return a file on output using a low memory. It can return very large files with no need of memory.\n *  WARNING: This close output buffers.\n *\n *  @param\tstring\t$fullpath_original_file_osencoded\t\tFull path of file to return.\n *  @param\tint\t\t$method\t\t\t\t\t\t\t\t\t-1 automatic, 0=readfile, 1=fread, 2=stream_copy_to_stream\n *  @return void\n */\nfunction readfileLowMemory($fullpath_original_file_osencoded, $method = -1)\n{\n\tglobal $conf;\n\n\tif ($method == -1) {\n\t\t$method = 0;\n\t\tif (!empty($conf->global->MAIN_FORCE_READFILE_WITH_FREAD)) {\n\t\t\t$method = 1;\n\t\t}\n\t\tif (!empty($conf->global->MAIN_FORCE_READFILE_WITH_STREAM_COPY)) {\n\t\t\t$method = 2;\n\t\t}\n\t}\n\n\t// Be sure we don't have output buffering enabled to have readfile working correctly\n\twhile (ob_get_level()) {\n\t\tob_end_flush();\n\t}\n\n\t// Solution 0\n\tif ($method == 0) {\n\t\treadfile($fullpath_original_file_osencoded);\n\t} elseif ($method == 1) {\n\t\t// Solution 1\n\t\t$handle = fopen($fullpath_original_file_osencoded, \"rb\");\n\t\twhile (!feof($handle)) {\n\t\t\tprint fread($handle, 8192);\n\t\t}\n\t\tfclose($handle);\n\t} elseif ($method == 2) {\n\t\t// Solution 2\n\t\t$handle1 = fopen($fullpath_original_file_osencoded, \"rb\");\n\t\t$handle2 = fopen(\"php://output\", \"wb\");\n\t\tstream_copy_to_stream($handle1, $handle2);\n\t\tfclose($handle1);\n\t\tfclose($handle2);\n\t}\n}\n\n/**\n * Create a button to copy $valuetocopy in the clipboard.\n * Code that handle the click is inside lib_foot.jsp.php\n *\n * @param \tstring \t$valuetocopy \t\tThe value to print\n * @param\tint\t\t$showonlyonhover\tShow the copy-paste button only on hover\n * @param\tstring\t$texttoshow\t\t\tReplace the value to show with this text\n * @return \tstring \t\t\t\t\t\tThe string to print for the button\n */\nfunction showValueWithClipboardCPButton($valuetocopy, $showonlyonhover = 1, $texttoshow = '')\n{\n\tglobal $conf;\n\n\t/*if (!empty($conf->dol_no_mouse_hover)) {\n\t\t$showonlyonhover = 0;\n\t}*/\n\n\tif ($texttoshow) {\n\t\t$result = '<span class=\"clipboardCP'.($showonlyonhover ? ' clipboardCPShowOnHover' : '').'\"><span class=\"clipboardCPValue hidewithsize\">'.$valuetocopy.'</span><span class=\"clipboardCPValueToPrint\">'.$texttoshow.'</span><span class=\"clipboardCPButton far fa-clipboard opacitymedium paddingleft paddingright\"></span><span class=\"clipboardCPText opacitymedium\"></span></span>';\n\t} else {\n\t\t$result = '<span class=\"clipboardCP'.($showonlyonhover ? ' clipboardCPShowOnHover' : '').'\"><span class=\"clipboardCPValue\">'.$valuetocopy.'</span><span class=\"clipboardCPButton far fa-clipboard opacitymedium paddingleft paddingright\"></span><span class=\"clipboardCPText opacitymedium\"></span></span>';\n\t}\n\n\treturn $result;\n}\n", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2021  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2021  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2020       Demarest Maxime         <maxime@indelog.fr>\n * Copyright (C) 2020       Charlene Benke          <charlie@patas-monkey.com>\n * Copyright (C) 2021       Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n * Copyright (C) 2021       Alexandre Spangaro      <aspangaro@open-dsi.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time = 0;\nif (!empty($_SERVER['MAIN_SHOW_TUNING_INFO'])) {\n\tlist($usec, $sec) = explode(\" \", microtime());\n\t$micro_start_time = ((float) $usec + (float) $sec);\n\t// Add Xdebug code coverage\n\t//define('XDEBUGCOVERAGE',1);\n\tif (defined('XDEBUGCOVERAGE')) {\n\t\txdebug_start_code_coverage();\n\t}\n}\n\n\n/**\n * Return the real char for a numeric entities.\n * This function is required by testSqlAndScriptInject().\n *\n * @param\tstring\t\t$matches\t\t\tString of numeric entity\n * @return\tstring\t\t\t\t\t\t\tNew value\n */\nfunction realCharForNumericEntities($matches)\n{\n\t$newstringnumentity = $matches[1];\n\n\tif (preg_match('/^x/i', $newstringnumentity)) {\n\t\t$newstringnumentity = hexdec(preg_replace('/^x/i', '', $newstringnumentity));\n\t}\n\n\t// The numeric value we don't want as entities\n\tif (($newstringnumentity >= 65 && $newstringnumentity <= 90) || ($newstringnumentity >= 97 && $newstringnumentity <= 122)) {\n\t\treturn chr((int) $newstringnumentity);\n\t}\n\n\treturn '&#'.$matches[1];\n}\n\n/**\n * Security: WAF layer for SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n * Warning: Such a protection can't be enough. It is not reliable as it will always be possible to bypass this. Good protection can\n * only be guaranted by escaping data during output.\n *\n * @param\t\tstring\t\t$val\t\tValue brut found int $_GET, $_POST or PHP_SELF\n * @param\t\tstring\t\t$type\t\t0=POST, 1=GET, 2=PHP_SELF, 3=GET without sql reserved keywords (the less tolerant test)\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection, 0 if none\n */\nfunction testSqlAndScriptInject($val, $type)\n{\n\t// Decode string first because a lot of things are obfuscated by encoding or multiple encoding.\n\t// So <svg o&#110;load='console.log(&quot;123&quot;)' become <svg onload='console.log(&quot;123&quot;)'\n\t// So \"&colon;&apos;\" become \":'\" (due to ENT_HTML5)\n\t// Loop to decode until no more thing to decode.\n\t//print \"before decoding $val\\n\";\n\tdo {\n\t\t$oldval = $val;\n\t\t$val = html_entity_decode($val, ENT_QUOTES | ENT_HTML5);\n\t\t$val = preg_replace_callback('/&#(x?[0-9][0-9a-f]+)/i', 'realCharForNumericEntities', $val);\t// Sometimes we have entities without the ; at end so html_entity_decode does not work but entities is still interpreted by browser.\n\t} while ($oldval != $val);\n\t//print \"after  decoding $val\\n\";\n\n\t// We clean string because some hacks try to obfuscate evil strings by inserting non printable chars. Example: 'java(ascci09)scr(ascii00)ipt' is processed like 'javascript' (whatever is place of evil ascii char)\n\t// We should use dol_string_nounprintableascii but function is not yet loaded/available\n\t$val = preg_replace('/[\\x00-\\x1F\\x7F]/u', '', $val); // /u operator makes UTF8 valid characters being ignored so are not included into the replace\n\t// We clean html comments because some hacks try to obfuscate evil strings by inserting HTML comments. Example: on<!-- -->error=alert(1)\n\t$val = preg_replace('/<!--[^>]*-->/', '', $val);\n\n\t$inj = 0;\n\t// For SQL Injection (only GET are used to scan for such injection strings)\n\tif ($type == 1 || $type == 3) {\n\t\t$inj += preg_match('/delete\\s+from/i', $val);\n\t\t$inj += preg_match('/create\\s+table/i', $val);\n\t\t$inj += preg_match('/insert\\s+into/i', $val);\n\t\t$inj += preg_match('/select\\s+from/i', $val);\n\t\t$inj += preg_match('/into\\s+(outfile|dumpfile)/i', $val);\n\t\t$inj += preg_match('/user\\s*\\(/i', $val); // avoid to use function user() or mysql_user() that return current database login\n\t\t$inj += preg_match('/information_schema/i', $val); // avoid to use request that read information_schema database\n\t\t$inj += preg_match('/<svg/i', $val); // <svg can be allowed in POST\n\t\t$inj += preg_match('/update.+set.+=/i', $val);\n\t\t$inj += preg_match('/union.+select/i', $val);\n\t}\n\tif ($type == 3) {\n\t\t$inj += preg_match('/select|update|delete|truncate|replace|group\\s+by|concat|count|from|union/i', $val);\n\t}\n\tif ($type != 2) {\t// Not common key strings, so we can check them both on GET and POST\n\t\t$inj += preg_match('/updatexml\\(/i', $val);\n\t\t$inj += preg_match('/(\\.\\.%2f)+/i', $val);\n\t\t$inj += preg_match('/\\s@@/', $val);\n\t}\n\t// For XSS Injection done by closing textarea to execute content into a textarea field\n\t$inj += preg_match('/<\\/textarea/i', $val);\n\t// For XSS Injection done by adding javascript with script\n\t// This is all cases a browser consider text is javascript:\n\t// When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n\t// All examples on page: http://ha.ckers.org/xss.html#XSScalc\n\t// More on https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t$inj += preg_match('/<audio/i', $val);\n\t$inj += preg_match('/<embed/i', $val);\n\t$inj += preg_match('/<iframe/i', $val);\n\t$inj += preg_match('/<object/i', $val);\n\t$inj += preg_match('/<script/i', $val);\n\t$inj += preg_match('/Set\\.constructor/i', $val); // ECMA script 6\n\tif (!defined('NOSTYLECHECK')) {\n\t\t$inj += preg_match('/<style/i', $val);\n\t}\n\t$inj += preg_match('/base\\s+href/si', $val);\n\t$inj += preg_match('/=data:/si', $val);\n\t// List of dom events is on https://www.w3schools.com/jsref/dom_obj_event.asp and https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers\n\t$inj += preg_match('/on(mouse|drag|key|load|touch|pointer|select|transition)([a-z]*)\\s*=/i', $val); // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n\t$inj += preg_match('/on(abort|afterprint|animation|auxclick|beforeprint|beforeunload|blur|cancel|canplay|canplaythrough|change|click|close|contextmenu|cuechange|copy|cut)\\s*=/i', $val);\n\t$inj += preg_match('/on(dblclick|drop|durationchange|emptied|ended|error|focus|focusin|focusout|formdata|gotpointercapture|hashchange|input|invalid)\\s*=/i', $val);\n\t$inj += preg_match('/on(lostpointercapture|offline|online|pagehide|pageshow)\\s*=/i', $val);\n\t$inj += preg_match('/on(paste|pause|play|playing|progress|ratechange|reset|resize|scroll|search|seeked|seeking|show|stalled|start|submit|suspend)\\s*=/i', $val);\n\t$inj += preg_match('/on(timeupdate|toggle|unload|volumechange|waiting|wheel)\\s*=/i', $val);\n\n\t// We refuse html into html because some hacks try to obfuscate evil strings by inserting HTML into HTML. Example: <img on<a>error=alert(1) to bypass test on onerror\n\t$tmpval = preg_replace('/<[^<]+>/', '', $val);\n\t// List of dom events is on https://www.w3schools.com/jsref/dom_obj_event.asp and https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers\n\t$inj += preg_match('/on(mouse|drag|key|load|touch|pointer|select|transition)([a-z]*)\\s*=/i', $val); // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n\t$inj += preg_match('/on(abort|afterprint|animation|auxclick|beforeprint|beforeunload|blur|cancel|canplay|canplaythrough|change|click|close|contextmenu|cuechange|copy|cut)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(dblclick|drop|durationchange|emptied|ended|error|focus|focusin|focusout|formdata|gotpointercapture|hashchange|input|invalid)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(lostpointercapture|offline|online|pagehide|pageshow)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(paste|pause|play|playing|progress|ratechange|reset|resize|scroll|search|seeked|seeking|show|stalled|start|submit|suspend)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(timeupdate|toggle|unload|volumechange|waiting|wheel)\\s*=/i', $tmpval);\n\n\t//$inj += preg_match('/on[A-Z][a-z]+\\*=/', $val);   // To lock event handlers onAbort(), ...\n\t$inj += preg_match('/&#58;|&#0000058|&#x3A/i', $val); // refused string ':' encoded (no reason to have it encoded) to lock 'javascript:...'\n\n\t$inj += preg_match('/javascript\\s*:/i', $val);\n\t$inj += preg_match('/vbscript\\s*:/i', $val);\n\t// For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n\tif ($type == 1) {\n\t\t$val = str_replace('enclosure=\"', 'enclosure=X', $val); // We accept enclosure=\" for the export/import module\n\t\t$inj += preg_match('/\"/i', $val); // We refused \" in GET parameters value.\n\t}\n\tif ($type == 2) {\n\t\t$inj += preg_match('/[:;\"\\'<>\\?\\(\\){}\\$%]/', $val); // PHP_SELF is a file system (or url path without parameters). It can contains spaces.\n\t}\n\n\treturn $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean|null\t\t\t\ttrue if there is no injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n\tif (is_array($var)) {\n\t\tforeach ($var as $key => $value) {\t// Warning, $key may also be used for attacks\n\t\t\tif (analyseVarsForSqlAndScriptsInjection($key, $type) && analyseVarsForSqlAndScriptsInjection($value, $type)) {\n\t\t\t\t//$var[$key] = $value;\t// This is useless\n\t\t\t} else {\n\t\t\t\t// Get remote IP: PS: We do not use getRemoteIP(), function is not yet loaded and we need a value that can't be spoofed\n\t\t\t\t$ip = (empty($_SERVER['REMOTE_ADDR']) ? 'unknown' : $_SERVER['REMOTE_ADDR']);\n\t\t\t\t$errormessage = 'Access refused to '.$ip.' by SQL or Script injection protection in main.inc.php - GETPOST type='.htmlentities($type).' paramkey='.htmlentities($key).' paramvalue='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]);\n\t\t\t\tprint $errormessage;\n\t\t\t\t// Add entry into error log\n\t\t\t\tif (function_exists('error_log')) {\n\t\t\t\t\terror_log($errormessage);\n\t\t\t\t}\n\t\t\t\t// TODO Add entry into security audit table\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn (testSqlAndScriptInject($var, $type) <= 0);\n\t}\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && !defined('NOREQUIREMENU')) {\n\tprint 'If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not set them.';\n\texit;\n}\nif (defined('NOREQUIREUSER') && !defined('NOREQUIREMENU')) {\n\tprint 'If define NOREQUIREUSER is set, you must also set NOREQUIREMENU or not set it.';\n\texit;\n}\n\n// Sanity check on URL\nif (!empty($_SERVER[\"PHP_SELF\"])) {\n\t$morevaltochecklikepost = array($_SERVER[\"PHP_SELF\"]);\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikepost, 2);\n}\n// Sanity check on GET parameters\nif (!defined('NOSCANGETFORINJECTION') && !empty($_SERVER[\"QUERY_STRING\"])) {\n\t// Note: QUERY_STRING is url encoded, but $_GET and $_POST are already decoded\n\t// Because the analyseVarsForSqlAndScriptsInjection is designed for already url decoded value, we must decode QUERY_STRING\n\t// Another solution is to provide $_GET as parameter\n\t$morevaltochecklikeget = array(urldecode($_SERVER[\"QUERY_STRING\"]));\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikeget, 1);\n}\n// Sanity check on POST\nif (!defined('NOSCANPOSTFORINJECTION')) {\n\tanalyseVarsForSqlAndScriptsInjection($_POST, 0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (!empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs') {\n\tset_include_path($_SERVER['DOCUMENT_ROOT'].'/htdocs');\n}\n\n// Include the conf.php and functions.lib.php. This defined the constants like DOL_DOCUMENT_ROOT, DOL_DATA_ROOT, DOL_URL_ROOT...\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it.\n// This is used for example by form of boxes to save personalization of some options.\n// DOL_AUTOSET_COOKIE=cookiename:val1,val2 and  cookiename_val1=aaa cookiename_val2=bbb will set cookie_name with value json_encode(array('val1'=> , ))\nif (!empty($_POST[\"DOL_AUTOSET_COOKIE\"])) {\n\t$tmpautoset = explode(':', $_POST[\"DOL_AUTOSET_COOKIE\"], 2);\n\t$tmplist = explode(',', $tmpautoset[1]);\n\t$cookiearrayvalue = array();\n\tforeach ($tmplist as $tmpkey) {\n\t\t$postkey = $tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (!empty($_POST[$postkey])) {\n\t\t\t$cookiearrayvalue[$tmpkey] = $_POST[$postkey];\n\t\t}\n\t}\n\t$cookiename = $tmpautoset[0];\n\t$cookievalue = json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue) ? '' : $cookievalue, empty($cookievalue) ? 0 : (time() + (86400 * 354)), '/', null, false, true); // keep cookie 1 year and add tag httponly\n\tif (empty($cookievalue)) {\n\t\tunset($_COOKIE[$cookiename]);\n\t}\n}\n\n\n// Set the handler of session\nif (ini_get('session.save_handler') == 'user') {\n\trequire_once 'core/lib/phpsessionindb.lib.php';\n}\n\n// Init session. Name of session is specific to Dolibarr instance.\n// Must be done after the include of filefunc.inc.php so global variables of conf file are defined (like $dolibarr_main_instance_unique_id or $dolibarr_main_force_https).\n// Note: the function dol_getprefix is defined into functions.lib.php but may have been defined to return a different key to manage another area to protect.\n$prefix = dol_getprefix('');\n$sessionname = 'DOLSESSID_'.$prefix;\n$sessiontimeout = 'DOLSESSTIMEOUT_'.$prefix;\nif (!empty($_COOKIE[$sessiontimeout])) {\n\tini_set('session.gc_maxlifetime', $_COOKIE[$sessiontimeout]);\n}\n// This create lock, released by session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can remove lock when finished.\nif (!defined('NOSESSION')) {\n\tsession_set_cookie_params(0, '/', null, (empty($dolibarr_main_force_https) ? false : true), true); // Add tag secure and httponly on session cookie (same as setting session.cookie_httponly into php.ini). Must be called before the session_start.\n\tsession_name($sessionname);\n\tsession_start();\n}\n\n\n// Init the 5 global objects, this include will make the 'new Xxx()' and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n\n// If software has been locked. Only login $conf->global->MAIN_ONLY_LOGIN_ALLOWED is allowed.\nif (!empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) {\n\t$ok = 0;\n\tif ((!session_id() || !isset($_SESSION[\"dol_login\"])) && !isset($_POST[\"username\"]) && !empty($_SERVER[\"GATEWAY_INTERFACE\"])) {\n\t\t$ok = 1; // We let working pages if not logged and inside a web browser (login form, to allow login by admin)\n\t} elseif (isset($_POST[\"username\"]) && $_POST[\"username\"] == $conf->global->MAIN_ONLY_LOGIN_ALLOWED) {\n\t\t$ok = 1; // We let working pages that is a login submission (login submit, to allow login by admin)\n\t} elseif (defined('NOREQUIREDB')) {\n\t\t$ok = 1; // We let working pages that don't need database access (xxx.css.php)\n\t} elseif (defined('EVEN_IF_ONLY_LOGIN_ALLOWED')) {\n\t\t$ok = 1; // We let working pages that ask to work even if only login enabled (logout.php)\n\t} elseif (session_id() && isset($_SESSION[\"dol_login\"]) && $_SESSION[\"dol_login\"] == $conf->global->MAIN_ONLY_LOGIN_ALLOWED) {\n\t\t$ok = 1; // We let working if user is allowed admin\n\t}\n\tif (!$ok) {\n\t\tif (session_id() && isset($_SESSION[\"dol_login\"]) && $_SESSION[\"dol_login\"] != $conf->global->MAIN_ONLY_LOGIN_ALLOWED) {\n\t\t\tprint 'Sorry, your application is offline.'.\"\\n\";\n\t\t\tprint 'You are logged with user \"'.$_SESSION[\"dol_login\"].'\" and only administrator user \"'.$conf->global->MAIN_ONLY_LOGIN_ALLOWED.'\" is allowed to connect for the moment.'.\"\\n\";\n\t\t\t$nexturl = DOL_URL_ROOT.'/user/logout.php';\n\t\t\tprint 'Please try later or <a href=\"'.$nexturl.'\">click here to disconnect and change login user</a>...'.\"\\n\";\n\t\t} else {\n\t\t\tprint 'Sorry, your application is offline. Only administrator user \"'.$conf->global->MAIN_ONLY_LOGIN_ALLOWED.'\" is allowed to connect for the moment.'.\"\\n\";\n\t\t\t$nexturl = DOL_URL_ROOT.'/';\n\t\t\tprint 'Please try later or <a href=\"'.$nexturl.'\">click here to change login user</a>...'.\"\\n\";\n\t\t}\n\t\texit;\n\t}\n}\n\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Load debugbar\nif (!empty($conf->debugbar->enabled) && !GETPOST('dol_use_jmobile') && empty($_SESSION['dol_use_jmobile'])) {\n\tglobal $debugbar;\n\tinclude_once DOL_DOCUMENT_ROOT.'/debugbar/class/DebugBar.php';\n\t$debugbar = new DolibarrDebugBar();\n\t$renderer = $debugbar->getRenderer();\n\tif (empty($conf->global->MAIN_HTML_HEADER)) {\n\t\t$conf->global->MAIN_HTML_HEADER = '';\n\t}\n\t$conf->global->MAIN_HTML_HEADER .= $renderer->renderHead();\n\n\t$debugbar['time']->startMeasure('pageaftermaster', 'Page generation (after environment init)');\n}\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"])) {\n\t$tmp = getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n\t$conf->browser->name = $tmp['browsername'];\n\t$conf->browser->os = $tmp['browseros'];\n\t$conf->browser->version = $tmp['browserversion'];\n\t$conf->browser->layout = $tmp['layout']; // 'classic', 'phone', 'tablet'\n\t//var_dump($conf->browser);\n\n\tif ($conf->browser->layout == 'phone') {\n\t\t$conf->dol_no_mouse_hover = 1;\n\t}\n}\n\n// Set global MAIN_OPTIMIZEFORTEXTBROWSER (must be before login part)\nif (GETPOST('textbrowser', 'int') || (!empty($conf->browser->name) && $conf->browser->name == 'lynxlinks')) {   // If we must enable text browser\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER = 1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or 'https dolibarr root url')\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (!empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on')) {\n\t$newurl = '';\n\tif (is_numeric($conf->file->main_force_https)) {\n\t\tif ($conf->file->main_force_https == '1' && !empty($_SERVER[\"SCRIPT_URI\"])) {\t// If SCRIPT_URI supported by server\n\t\t\tif (preg_match('/^http:/i', $_SERVER[\"SCRIPT_URI\"]) && !preg_match('/^https:/i', $_SERVER[\"SCRIPT_URI\"])) {\t// If link is http\n\t\t\t\t$newurl = preg_replace('/^http:/i', 'https:', $_SERVER[\"SCRIPT_URI\"]);\n\t\t\t}\n\t\t} else {\n\t\t\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t\t$newurl = preg_replace('/^http:/i', 'https:', DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n\t\t}\n\t} else {\n\t\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t$newurl = $conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n\t}\n\t// Start redirect\n\tif ($newurl) {\n\t\theader_remove(); // Clean header already set to be sure to remove any header like \"Set-Cookie: DOLSESSID_...\" from non HTTPS answers\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n\t\theader(\"Location: \".$newurl);\n\t\texit;\n\t} else {\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n\t}\n}\n\nif (!defined('NOLOGIN') && !defined('NOIPCHECK') && !empty($dolibarr_main_restrict_ip)) {\n\t$listofip = explode(',', $dolibarr_main_restrict_ip);\n\t$found = false;\n\tforeach ($listofip as $ip) {\n\t\t$ip = trim($ip);\n\t\tif ($ip == $_SERVER['REMOTE_ADDR']) {\n\t\t\t$found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!$found) {\n\t\tprint 'Access refused by IP protection. Your detected IP is '.$_SERVER['REMOTE_ADDR'];\n\t\texit;\n\t}\n}\n\n// Loading of additional presentation includes\nif (!defined('NOREQUIREHTML')) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php'; // Need 660ko memory (800ko in 2.2)\n}\nif (!defined('NOREQUIREAJAX')) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php'; // Need 22ko memory\n}\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (!empty($conf->global->MAIN_NOT_INSTALLED) || !empty($conf->global->MAIN_NOT_UPGRADED)) {\n\tdol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\texit;\n}\n// If an upgrade process is required, we call the install page.\nif ((!empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && !empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION))) {\n\t$versiontocompare = empty($conf->global->MAIN_VERSION_LAST_UPGRADE) ? $conf->global->MAIN_VERSION_LAST_INSTALL : $conf->global->MAIN_VERSION_LAST_UPGRADE;\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\n\t$dolibarrversionlastupgrade = preg_split('/[.-]/', $versiontocompare);\n\t$dolibarrversionprogram = preg_split('/[.-]/', DOL_VERSION);\n\t$rescomp = versioncompare($dolibarrversionprogram, $dolibarrversionlastupgrade);\n\tif ($rescomp > 0) {   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n\t\tdol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n\t\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\t\texit;\n\t}\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (!defined('NOTOKENRENEWAL')) {\n\t// No token renewal on .css.php, .js.php and .json.php\n\tif (!preg_match('/\\.(css|js|json)\\.php$/', $_SERVER[\"PHP_SELF\"])) {\n\t\t// Rolling token at each call ($_SESSION['token'] contains token of previous page)\n\t\tif (isset($_SESSION['newtoken'])) {\n\t\t\t$_SESSION['token'] = $_SESSION['newtoken'];\n\t\t}\n\n\t\t// Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n\t\t$token = dol_hash(uniqid(mt_rand(), true)); // Generates a hash of a random number\n\t\t$_SESSION['newtoken'] = $token;\n\t\tdol_syslog(\"NEW TOKEN generated by : \" . $_SERVER['PHP_SELF'], LOG_DEBUG);\n\t}\n}\n\n//dol_syslog(\"aaaa - \".defined('NOCSRFCHECK').\" - \".$dolibarr_nocsrfcheck.\" - \".$conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN.\" - \".$_SERVER['REQUEST_METHOD'].\" - \".GETPOST('token', 'alpha'));\n\n// Check validity of token, only if option MAIN_SECURITY_CSRF_WITH_TOKEN enabled or if constant CSRFCHECK_WITH_TOKEN is set into page\nif ((!defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && !empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN)) || defined('CSRFCHECK_WITH_TOKEN')) {\n\t// Array of action code where CSRFCHECK with token will be forced (so token must be provided on url request)\n\t$arrayofactiontoforcetokencheck = array(\n\t\t'activate', 'add', 'addtimespent', 'update', 'install',\n\t\t'confirm_create_user', 'confirm_create_thirdparty', 'confirm_purge', 'confirm_reject_check',\n\t\t'delete', 'deletefilter', 'deleteoperation', 'deleteprof', 'deletepayment', 'disable',\n\t\t'doprev', 'donext', 'dvprev', 'dvnext',\n\t\t'enable', 'setpricelevel'\n\t);\n\t$sensitiveget = false;\n\tif (in_array(GETPOST('action', 'aZ09'), $arrayofactiontoforcetokencheck)) {\n\t\t$sensitiveget = true;\n\t}\n\tif (preg_match('/^(disable_|enable_|setremise)/', GETPOST('action', 'aZ09'))) {\n\t\t$sensitiveget = true;\n\t}\n\n\t// Check a token is provided for all cases that need a mandatory token\n\t// (all POST actions + all login, actions and mass actions on pages with CSRFCHECK_WITH_TOKEN set + all sensitive GET actions)\n\tif (\n\t\t$_SERVER['REQUEST_METHOD'] == 'POST' ||\n\t\t$sensitiveget ||\n\t\t((GETPOSTISSET('actionlogin') || GETPOSTISSET('action') || GETPOSTISSET('massaction')) && defined('CSRFCHECK_WITH_TOKEN'))\n\t) {\n\t\t// If token is not provided or empty, error (we are in case it is mandatory)\n\t\tif (!GETPOST('token', 'alpha') || GETPOST('token', 'alpha') == 'notrequired') {\n\t\t\tif (GETPOST('uploadform', 'int')) {\n\t\t\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" refused. File size too large.\");\n\t\t\t\t$langs->loadLangs(array(\"errors\", \"install\"));\n\t\t\t\tprint $langs->trans(\"ErrorFileSizeTooLarge\").' ';\n\t\t\t\tprint $langs->trans(\"ErrorGoBackAndCorrectParameters\");\n\t\t\t\tdie;\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" refused by CSRFCHECK_WITH_TOKEN protection. Token not provided.\", LOG_WARNING);\n\t\t\t\tif (defined('CSRFCHECK_WITH_TOKEN')) {\n\t\t\t\t\tprint \"Access to a page that needs a token (constant CSRFCHECK_WITH_TOKEN is defined) is refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"Access to this page this way (POST method or GET with a sensible value for 'action' parameter) is refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n\t\t\t\t\tprint \"If you access your server behind a proxy using url rewriting and the parameter is provided by caller, you might check that all HTTP header are propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file or MAIN_SECURITY_CSRF_WITH_TOKEN to 0 into setup).\\n\";\n\t\t\t\t}\n\t\t\t\tdie;\n\t\t\t}\n\t\t}\n\t}\n\n\t$sessiontokenforthisurl = (empty($_SESSION['token']) ? '' : $_SESSION['token']);\n\t// TODO Get the sessiontokenforthisurl into the array of session token\n\tif (GETPOSTISSET('token') && GETPOST('token') != 'notrequired' && GETPOST('token', 'alpha') != $sessiontokenforthisurl) {\n\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" refused due to invalid token, so we disable POST and some GET parameters - referer=\".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action', 'aZ09').\", _GET|POST['token']=\".GETPOST('token', 'alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n\t\t//print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n\t\tsetEventMessages('SecurityTokenHasExpiredSoActionHasBeenCanceledPleaseRetry', null, 'warnings');\n\t\t//if ($conf->global->MAIN_FEATURES_LEVEL >= 1) setEventMessages('Unset POST and GET params by CSRF protection in main.inc.php (Token provided was not generated by the previous page).'.\"<br>\\n\".'$_SERVER[REQUEST_URI] = '.$_SERVER['REQUEST_URI'].' $_SERVER[REQUEST_METHOD] = '.$_SERVER['REQUEST_METHOD'].' GETPOST(token) = '.GETPOST('token', 'alpha').' $_SESSION[token] = '.$_SESSION['token'], null, 'warnings');\n\t\t$savid = ((int) $_POST['id']);\n\t\tunset($_POST);\n\t\t//unset($_POST['action']); unset($_POST['massaction']);\n\t\t//unset($_POST['confirm']); unset($_POST['confirmmassaction']);\n\t\tunset($_GET['confirm']);\n\t\tunset($_GET['action']);\n\t\tunset($_GET['confirmmassaction']);\n\t\tunset($_GET['massaction']);\n\t\t$_POST['id'] = ((int) $savid);\n\t}\n\n\t// Note: There is another CSRF protection into the filefunc.inc.php\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOSTISSET('disablemodules')) {\n\t$_SESSION[\"disablemodules\"] = GETPOST('disablemodules', 'alpha');\n}\nif (!empty($_SESSION[\"disablemodules\"])) {\n\t$modulepartkeys = array('css', 'js', 'tabs', 'triggers', 'login', 'substitutions', 'menus', 'theme', 'sms', 'tpl', 'barcode', 'models', 'societe', 'hooks', 'dir', 'syslog', 'tpllinkable', 'contactelement', 'moduleforexternal');\n\n\t$disabled_modules = explode(',', $_SESSION[\"disablemodules\"]);\n\tforeach ($disabled_modules as $module) {\n\t\tif ($module) {\n\t\t\tif (empty($conf->$module)) {\n\t\t\t\t$conf->$module = new stdClass(); // To avoid warnings\n\t\t\t}\n\t\t\t$conf->$module->enabled = false;\n\t\t\tforeach ($modulepartkeys as $modulepartkey) {\n\t\t\t\tunset($conf->modules_parts[$modulepartkey][$module]);\n\t\t\t}\n\t\t\tif ($module == 'fournisseur') {\t\t// Special case\n\t\t\t\t$conf->supplier_order->enabled = 0;\n\t\t\t\t$conf->supplier_invoice->enabled = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Set current modulepart\n$modulepart = explode(\"/\", $_SERVER[\"PHP_SELF\"]);\nif (is_array($modulepart) && count($modulepart) > 0) {\n\tforeach ($conf->modules as $module) {\n\t\tif (in_array($module, $modulepart)) {\n\t\t\t$conf->modulepart = $module;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/*\n * Phase authentication / login\n */\n$login = '';\nif (!defined('NOLOGIN')) {\n\t// $authmode lists the different method of identification to be tested in order of preference.\n\t// Example: 'http', 'dolibarr', 'ldap', 'http,forceuser', '...'\n\n\tif (defined('MAIN_AUTHENTICATION_MODE')) {\n\t\t$dolibarr_main_authentication = constant('MAIN_AUTHENTICATION_MODE');\n\t} else {\n\t\t// Authentication mode\n\t\tif (empty($dolibarr_main_authentication)) {\n\t\t\t$dolibarr_main_authentication = 'http,dolibarr';\n\t\t}\n\t\t// Authentication mode: forceuser\n\t\tif ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) {\n\t\t\t$dolibarr_auto_user = 'auto';\n\t\t}\n\t}\n\t// Set authmode\n\t$authmode = explode(',', $dolibarr_main_authentication);\n\n\t// No authentication mode\n\tif (!count($authmode)) {\n\t\t$langs->load('main');\n\t\tdol_print_error('', $langs->trans(\"ErrorConfigParameterNotDefined\", 'dolibarr_main_authentication'));\n\t\texit;\n\t}\n\n\t// If login request was already post, we retrieve login from the session\n\t// Call module if not realized that his request.\n\t// At the end of this phase, the variable $login is defined.\n\t$resultFetchUser = '';\n\t$test = true;\n\tif (!isset($_SESSION[\"dol_login\"])) {\n\t\t// It is not already authenticated and it requests the login / password\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n\t\t$dol_dst_observed = GETPOST(\"dst_observed\", 'int', 3);\n\t\t$dol_dst_first = GETPOST(\"dst_first\", 'int', 3);\n\t\t$dol_dst_second = GETPOST(\"dst_second\", 'int', 3);\n\t\t$dol_screenwidth = GETPOST(\"screenwidth\", 'int', 3);\n\t\t$dol_screenheight = GETPOST(\"screenheight\", 'int', 3);\n\t\t$dol_hide_topmenu = GETPOST('dol_hide_topmenu', 'int', 3);\n\t\t$dol_hide_leftmenu = GETPOST('dol_hide_leftmenu', 'int', 3);\n\t\t$dol_optimize_smallscreen = GETPOST('dol_optimize_smallscreen', 'int', 3);\n\t\t$dol_no_mouse_hover = GETPOST('dol_no_mouse_hover', 'int', 3);\n\t\t$dol_use_jmobile = GETPOST('dol_use_jmobile', 'int', 3); // 0=default, 1=to say we use app from a webview app, 2=to say we use app from a webview app and keep ajax\n\t\t//dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n\t\t// If in demo mode, we check we go to home page through the public/demo/index.php page\n\t\tif (!empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php') {  // We ask index page\n\t\t\tif (empty($_SERVER['HTTP_REFERER']) || !preg_match('/public/', $_SERVER['HTTP_REFERER'])) {\n\t\t\t\tdol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n\t\t\t\t$url = '';\n\t\t\t\t$url .= ($url ? '&' : '').($dol_hide_topmenu ? 'dol_hide_topmenu='.$dol_hide_topmenu : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_hide_leftmenu ? 'dol_hide_leftmenu='.$dol_hide_leftmenu : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_optimize_smallscreen ? 'dol_optimize_smallscreen='.$dol_optimize_smallscreen : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_no_mouse_hover ? 'dol_no_mouse_hover='.$dol_no_mouse_hover : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_use_jmobile ? 'dol_use_jmobile='.$dol_use_jmobile : '');\n\t\t\t\t$url = DOL_URL_ROOT.'/public/demo/index.php'.($url ? '?'.$url : '');\n\t\t\t\theader(\"Location: \".$url);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t// Hooks for security access\n\t\t$action = '';\n\t\t$hookmanager->initHooks(array('login'));\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('beforeLoginAuthentication', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook < 0) {\n\t\t\t$test = false;\n\t\t\t$error++;\n\t\t}\n\n\t\t// Verification security graphic code\n\t\tif ($test && GETPOST(\"username\", \"alpha\", 2) && !empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA) && !isset($_SESSION['dol_bypass_antispam'])) {\n\t\t\t$sessionkey = 'dol_antispam_value';\n\t\t\t$ok = (array_key_exists($sessionkey, $_SESSION) === true && (strtolower($_SESSION[$sessionkey]) === strtolower(GETPOST('code', 'none'))));\n\n\t\t\t// Check code\n\t\t\tif (!$ok) {\n\t\t\t\tdol_syslog('Bad value for code, connexion refused');\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorBadValueForCode\");\n\t\t\t\t$test = false;\n\n\t\t\t\t// Call trigger for the \"security events\" log\n\t\t\t\t$user->trigger_mesg = 'ErrorBadValueForCode - login='.GETPOST(\"username\", \"alpha\", 2);\n\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action = '';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters = array('dol_authmode'=>$authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Note: exit is done later\n\t\t\t}\n\t\t}\n\n\t\t$allowedmethodtopostusername = 2;\n\t\tif (defined('MAIN_AUTHENTICATION_POST_METHOD')) {\n\t\t\t$allowedmethodtopostusername = constant('MAIN_AUTHENTICATION_POST_METHOD');\n\t\t}\n\t\t$usertotest = (!empty($_COOKIE['login_dolibarr']) ? preg_replace('/[^a-zA-Z0-9_\\-]/', '', $_COOKIE['login_dolibarr']) : GETPOST(\"username\", \"alpha\", $allowedmethodtopostusername));\n\t\t$passwordtotest = GETPOST('password', 'none', $allowedmethodtopostusername);\n\t\t$entitytotest = (GETPOST('entity', 'int') ? GETPOST('entity', 'int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n\t\t// Define if we received data to test the login.\n\t\t$goontestloop = false;\n\t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http', $authmode)) {\n\t\t\t$goontestloop = true;\n\t\t}\n\t\tif ($dolibarr_main_authentication == 'forceuser' && !empty($dolibarr_auto_user)) {\n\t\t\t$goontestloop = true;\n\t\t}\n\t\tif (GETPOST(\"username\", \"alpha\", $allowedmethodtopostusername) || !empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode', 'alpha', 1)) {\n\t\t\t$goontestloop = true;\n\t\t}\n\n\t\tif (!is_object($langs)) { // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n\t\t\t$langs = new Translate(\"\", $conf);\n\t\t\t$langcode = (GETPOST('lang', 'aZ09', 1) ?GETPOST('lang', 'aZ09', 1) : (empty($conf->global->MAIN_LANG_DEFAULT) ? 'auto' : $conf->global->MAIN_LANG_DEFAULT));\n\t\t\tif (defined('MAIN_LANG_DEFAULT')) {\n\t\t\t\t$langcode = constant('MAIN_LANG_DEFAULT');\n\t\t\t}\n\t\t\t$langs->setDefaultLang($langcode);\n\t\t}\n\n\t\t// Validation of login/pass/entity\n\t\t// If ok, the variable login will be returned\n\t\t// If error, we will put error message in session under the name dol_loginmesg\n\t\tif ($test && $goontestloop && (GETPOST('actionlogin', 'aZ09') == 'login' || $dolibarr_main_authentication != 'dolibarr')) {\n\t\t\t$login = checkLoginPassEntity($usertotest, $passwordtotest, $entitytotest, $authmode);\n\t\t\tif ($login === '--bad-login-validity--') {\n\t\t\t\t$login = '';\n\t\t\t}\n\n\t\t\tif ($login) {\n\t\t\t\t$dol_authmode = $conf->authmode; // This properties is defined only when logged, to say what mode was successfully used\n\t\t\t\t$dol_tz = $_POST[\"tz\"];\n\t\t\t\t$dol_tz_string = $_POST[\"tz_string\"];\n\t\t\t\t$dol_tz_string = preg_replace('/\\s*\\(.+\\)$/', '', $dol_tz_string);\n\t\t\t\t$dol_tz_string = preg_replace('/,/', '/', $dol_tz_string);\n\t\t\t\t$dol_tz_string = preg_replace('/\\s/', '_', $dol_tz_string);\n\t\t\t\t$dol_dst = 0;\n\t\t\t\t// Keep $_POST here. Do not use GETPOSTISSET\n\t\t\t\tif (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"])) {\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\t\t\t$datenow = dol_now();\n\t\t\t\t\t$datefirst = dol_stringtotime($_POST[\"dst_first\"]);\n\t\t\t\t\t$datesecond = dol_stringtotime($_POST[\"dst_second\"]);\n\t\t\t\t\tif ($datenow >= $datefirst && $datenow < $datesecond) {\n\t\t\t\t\t\t$dol_dst = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n\t\t\t}\n\n\t\t\tif (!$login) {\n\t\t\t\tdol_syslog('Bad password, connexion refused', LOG_DEBUG);\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t// Bad password. No authmode has found a good password.\n\t\t\t\t// We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n\t\t\t\tif (empty($_SESSION[\"dol_loginmesg\"])) {\n\t\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorBadLoginPassword\");\n\t\t\t\t}\n\n\t\t\t\t// Call trigger for the \"security events\" log\n\t\t\t\t$user->trigger_mesg = $langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\", \"alpha\", 2);\n\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action = '';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Note: exit is done in next chapter\n\t\t\t}\n\t\t}\n\n\t\t// End test login / passwords\n\t\tif (!$login || (in_array('ldap', $authmode) && empty($passwordtotest))) {\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n\t\t\t// No data to test login, so we show the login page.\n\t\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" - action=\".GETPOST('action', 'aZ09').\" - actionlogin=\".GETPOST('actionlogin', 'aZ09').\" - showing the login form and exit\", LOG_INFO);\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) {\n\t\t\t\treturn 'ERROR_NOT_LOGGED';\n\t\t\t} else {\n\t\t\t\tif ($_SERVER[\"HTTP_USER_AGENT\"] == 'securitytest') {\n\t\t\t\t\thttp_response_code(401); // It makes easier to understand if session was broken during security tests\n\t\t\t\t}\n\t\t\t\tdol_loginfunction($langs, $conf, (!empty($mysoc) ? $mysoc : ''));\n\t\t\t}\n\t\t\texit;\n\t\t}\n\n\t\t$resultFetchUser = $user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1)); // login was retrieved previously when checking password.\n\t\tif ($resultFetchUser <= 0) {\n\t\t\tdol_syslog('User not found, connexion refused');\n\t\t\tsession_destroy();\n\t\t\tsession_set_cookie_params(0, '/', null, (empty($dolibarr_main_force_https) ? false : true), true); // Add tag secure and httponly on session cookie\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0) {\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\", $login);\n\n\t\t\t\t$user->trigger_mesg = 'ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0) {\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $user->error;\n\n\t\t\t\t$user->trigger_mesg = $user->error;\n\t\t\t}\n\n\t\t\t// Call trigger\n\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\n\t\t\t// Hooks on failed login\n\t\t\t$action = '';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\t$paramsurl = array();\n\t\t\tif (GETPOST('textbrowser', 'int')) {\n\t\t\t\t$paramsurl[] = 'textbrowser='.GETPOST('textbrowser', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('nojs', 'int')) {\n\t\t\t\t$paramsurl[] = 'nojs='.GETPOST('nojs', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('lang', 'aZ09')) {\n\t\t\t\t$paramsurl[] = 'lang='.GETPOST('lang', 'aZ09');\n\t\t\t}\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl) ? '?'.implode('&', $paramsurl) : ''));\n\t\t\texit;\n\t\t} else {\n\t\t\t// User is loaded, we may need to change language for him according to its choice\n\t\t\tif (!empty($user->conf->MAIN_LANG_DEFAULT)) {\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// We are already into an authenticated session\n\t\t$login = $_SESSION[\"dol_login\"];\n\t\t$entity = isset($_SESSION[\"dol_entity\"]) ? $_SESSION[\"dol_entity\"] : 0;\n\t\tdol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n\t\t$resultFetchUser = $user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n\t\tif ($resultFetchUser <= 0) {\n\t\t\t// Account has been removed after login\n\t\t\tdol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n\t\t\tsession_destroy();\n\t\t\tsession_set_cookie_params(0, '/', null, (empty($dolibarr_main_force_https) ? false : true), true); // Add tag secure and httponly on session cookie\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0) {\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\", $login);\n\n\t\t\t\t$user->trigger_mesg = 'ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0) {\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $user->error;\n\n\t\t\t\t$user->trigger_mesg = $user->error;\n\t\t\t}\n\n\t\t\t// Call trigger\n\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t// Hooks on failed login\n\t\t\t$action = '';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\t$paramsurl = array();\n\t\t\tif (GETPOST('textbrowser', 'int')) {\n\t\t\t\t$paramsurl[] = 'textbrowser='.GETPOST('textbrowser', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('nojs', 'int')) {\n\t\t\t\t$paramsurl[] = 'nojs='.GETPOST('nojs', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('lang', 'aZ09')) {\n\t\t\t\t$paramsurl[] = 'lang='.GETPOST('lang', 'aZ09');\n\t\t\t}\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl) ? '?'.implode('&', $paramsurl) : ''));\n\t\t\texit;\n\t\t} else {\n\t\t\t// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t\t\t$hookmanager->initHooks(array('main'));\n\n\t\t\t// Code for search criteria persistence.\n\t\t\tif (!empty($_GET['save_lastsearch_values'])) {    // We must use $_GET here\n\t\t\t\t$relativepathstring = preg_replace('/\\?.*$/', '', $_SERVER[\"HTTP_REFERER\"]);\n\t\t\t\t$relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/', '', $relativepathstring); // Get full path except host server\n\t\t\t\t// Clean $relativepathstring\n\t\t\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t\t\t}\n\t\t\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t\t\t//var_dump($relativepathstring);\n\n\t\t\t\t// We click on a link that leave a page we have to save search criteria, contextpage, limit and page. We save them from tmp to no tmp\n\t\t\t\tif (!empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring])) {\n\t\t\t\t\t$_SESSION['lastsearch_values_'.$relativepathstring] = $_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t\tif (!empty($_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring])) {\n\t\t\t\t\t$_SESSION['lastsearch_contextpage_'.$relativepathstring] = $_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t\tif (!empty($_SESSION['lastsearch_page_tmp_'.$relativepathstring]) && $_SESSION['lastsearch_page_tmp_'.$relativepathstring] > 0) {\n\t\t\t\t\t$_SESSION['lastsearch_page_'.$relativepathstring] = $_SESSION['lastsearch_page_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_page_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t\tif (!empty($_SESSION['lastsearch_limit_tmp_'.$relativepathstring]) && $_SESSION['lastsearch_limit_tmp_'.$relativepathstring] != $conf->liste_limit) {\n\t\t\t\t\t$_SESSION['lastsearch_limit_'.$relativepathstring] = $_SESSION['lastsearch_limit_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_limit_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$action = '';\n\t\t\t$reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t\t\tif ($reshook < 0) {\n\t\t\t\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Is it a new session that has started ?\n\t// If we are here, this means authentication was successfull.\n\tif (!isset($_SESSION[\"dol_login\"])) {\n\t\t// New session for this login has started.\n\t\t$error = 0;\n\n\t\t// Store value into session (values always stored)\n\t\t$_SESSION[\"dol_login\"] = $user->login;\n\t\t$_SESSION[\"dol_authmode\"] = isset($dol_authmode) ? $dol_authmode : '';\n\t\t$_SESSION[\"dol_tz\"] = isset($dol_tz) ? $dol_tz : '';\n\t\t$_SESSION[\"dol_tz_string\"] = isset($dol_tz_string) ? $dol_tz_string : '';\n\t\t$_SESSION[\"dol_dst\"] = isset($dol_dst) ? $dol_dst : '';\n\t\t$_SESSION[\"dol_dst_observed\"] = isset($dol_dst_observed) ? $dol_dst_observed : '';\n\t\t$_SESSION[\"dol_dst_first\"] = isset($dol_dst_first) ? $dol_dst_first : '';\n\t\t$_SESSION[\"dol_dst_second\"] = isset($dol_dst_second) ? $dol_dst_second : '';\n\t\t$_SESSION[\"dol_screenwidth\"] = isset($dol_screenwidth) ? $dol_screenwidth : '';\n\t\t$_SESSION[\"dol_screenheight\"] = isset($dol_screenheight) ? $dol_screenheight : '';\n\t\t$_SESSION[\"dol_company\"] = getDolGlobalString(\"MAIN_INFO_SOCIETE_NOM\");\n\t\t$_SESSION[\"dol_entity\"] = $conf->entity;\n\t\t// Store value into session (values stored only if defined)\n\t\tif (!empty($dol_hide_topmenu)) {\n\t\t\t$_SESSION['dol_hide_topmenu'] = $dol_hide_topmenu;\n\t\t}\n\t\tif (!empty($dol_hide_leftmenu)) {\n\t\t\t$_SESSION['dol_hide_leftmenu'] = $dol_hide_leftmenu;\n\t\t}\n\t\tif (!empty($dol_optimize_smallscreen)) {\n\t\t\t$_SESSION['dol_optimize_smallscreen'] = $dol_optimize_smallscreen;\n\t\t}\n\t\tif (!empty($dol_no_mouse_hover)) {\n\t\t\t$_SESSION['dol_no_mouse_hover'] = $dol_no_mouse_hover;\n\t\t}\n\t\tif (!empty($dol_use_jmobile)) {\n\t\t\t$_SESSION['dol_use_jmobile'] = $dol_use_jmobile;\n\t\t}\n\n\t\tdol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n\t\t$db->begin();\n\n\t\t$user->update_last_login_date();\n\n\t\t$loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n\t\t// Call triggers for the \"security events\" log\n\t\t$user->trigger_mesg = $loginfo;\n\n\t\t// Call trigger\n\t\t$result = $user->call_trigger('USER_LOGIN', $user);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t\t// End call triggers\n\n\t\t// Hooks on successfull login\n\t\t$action = '';\n\t\t$hookmanager->initHooks(array('login'));\n\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n\t\t$reshook = $hookmanager->executeHooks('afterLogin', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook < 0) {\n\t\t\t$error++;\n\t\t}\n\n\t\tif ($error) {\n\t\t\t$db->rollback();\n\t\t\tsession_destroy();\n\t\t\tdol_print_error($db, 'Error in some triggers USER_LOGIN or in some hooks afterLogin');\n\t\t\texit;\n\t\t} else {\n\t\t\t$db->commit();\n\t\t}\n\n\t\t// Change landing page if defined.\n\t\t$landingpage = (empty($user->conf->MAIN_LANDING_PAGE) ? (empty($conf->global->MAIN_LANDING_PAGE) ? '' : $conf->global->MAIN_LANDING_PAGE) : $user->conf->MAIN_LANDING_PAGE);\n\t\tif (!empty($landingpage)) {    // Example: /index.php\n\t\t\t$newpath = dol_buildpath($landingpage, 1);\n\t\t\tif ($_SERVER[\"PHP_SELF\"] != $newpath) {   // not already on landing page (avoid infinite loop)\n\t\t\t\theader('Location: '.$newpath);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If user admin, we force the rights-based modules\n\tif ($user->admin) {\n\t\t$user->rights->user->user->lire = 1;\n\t\t$user->rights->user->user->creer = 1;\n\t\t$user->rights->user->user->password = 1;\n\t\t$user->rights->user->user->supprimer = 1;\n\t\t$user->rights->user->self->creer = 1;\n\t\t$user->rights->user->self->password = 1;\n\t}\n\n\t/*\n\t * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n\t */\n\n\t// Set liste_limit\n\tif (isset($user->conf->MAIN_SIZE_LISTE_LIMIT)) {\n\t\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT; // Can be 0\n\t}\n\tif (isset($user->conf->PRODUIT_LIMIT_SIZE)) {\n\t\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE; // Can be 0\n\t}\n\n\t// Replace conf->css by personalized value if theme not forced\n\tif (empty($conf->global->MAIN_FORCETHEME) && !empty($user->conf->MAIN_THEME)) {\n\t\t$conf->theme = $user->conf->MAIN_THEME;\n\t\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php\";\n\t}\n}\n\n// Case forcing style from url\nif (GETPOST('theme', 'alpha')) {\n\t$conf->theme = GETPOST('theme', 'alpha', 1);\n\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n// Set javascript option\nif (GETPOST('nojs', 'int')) {  // If javascript was not disabled on URL\n\t$conf->use_javascript_ajax = 0;\n} else {\n\tif (!empty($user->conf->MAIN_DISABLE_JAVASCRIPT)) {\n\t\t$conf->use_javascript_ajax = !$user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\n\n// Set MAIN_OPTIMIZEFORTEXTBROWSER for user (must be after login part)\nif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && !empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER = $user->conf->MAIN_OPTIMIZEFORTEXTBROWSER;\n}\n\n// set MAIN_OPTIMIZEFORCOLORBLIND for user\n$conf->global->MAIN_OPTIMIZEFORCOLORBLIND = empty($user->conf->MAIN_OPTIMIZEFORCOLORBLIND) ? '' : $user->conf->MAIN_OPTIMIZEFORCOLORBLIND;\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu', 'int') || !empty($_SESSION['dol_hide_leftmenu'])) {\n\t$conf->dol_hide_leftmenu = 1;\n}\nif (GETPOST('dol_hide_topmenu', 'int') || !empty($_SESSION['dol_hide_topmenu'])) {\n\t$conf->dol_hide_topmenu = 1;\n}\nif (GETPOST('dol_optimize_smallscreen', 'int') || !empty($_SESSION['dol_optimize_smallscreen'])) {\n\t$conf->dol_optimize_smallscreen = 1;\n}\nif (GETPOST('dol_no_mouse_hover', 'int') || !empty($_SESSION['dol_no_mouse_hover'])) {\n\t$conf->dol_no_mouse_hover = 1;\n}\nif (GETPOST('dol_use_jmobile', 'int') || !empty($_SESSION['dol_use_jmobile'])) {\n\t$conf->dol_use_jmobile = 1;\n}\nif (!empty($conf->browser->layout) && $conf->browser->layout != 'classic') {\n\t$conf->dol_no_mouse_hover = 1;\n}\nif ((!empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (!empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (!empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n) {\n\t$conf->dol_optimize_smallscreen = 1;\n}\n// Replace themes bugged with jmobile with eldy\nif (!empty($conf->dol_use_jmobile) && in_array($conf->theme, array('bureau2crea', 'cameleo', 'amarok'))) {\n\t$conf->theme = 'eldy';\n\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\nif (!defined('NOREQUIRETRAN')) {\n\tif (!GETPOST('lang', 'aZ09')) {\t// If language was not forced on URL\n\t\t// If user has chosen its own language\n\t\tif (!empty($user->conf->MAIN_LANG_DEFAULT)) {\n\t\t\t// If different than current language\n\t\t\t//print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n\t\t\tif ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT) {\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (!defined('NOLOGIN')) {\n\t// If the login is not recovered, it is identified with an account that does not exist.\n\t// Hacking attempt?\n\tif (!$user->login) {\n\t\taccessforbidden();\n\t}\n\n\t// Check if user is active\n\tif ($user->statut < 1) {\n\t\t// If not active, we refuse the user\n\t\t$langs->load(\"other\");\n\t\tdol_syslog(\"Authentication KO as login is disabled\", LOG_NOTICE);\n\t\taccessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n\t\texit;\n\t}\n\n\t// Load permissions\n\t$user->getrights();\n}\n\ndol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action', 'aZ09').', massaction='.GETPOST('massaction', 'aZ09').(defined('NOTOKENRENEWAL') ? ' NOTOKENRENEWAL='.constant('NOTOKENRENEWAL') : ''), LOG_NOTICE);\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' '.$_SERVER[\"HTTP_REFERER\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (!defined('NOREQUIRETRAN')) {\n\t// Load translation files required by page\n\t$langs->loadLangs(array('main', 'dict'));\n}\n\n// Define some constants used for style of arrays\n$bc = array(0=>'class=\"impair\"', 1=>'class=\"pair\"');\n$bcdd = array(0=>'class=\"drag drop oddeven\"', 1=>'class=\"drag drop oddeven\"');\n$bcnd = array(0=>'class=\"nodrag nodrop nohover\"', 1=>'class=\"nodrag nodrop nohoverpair\"'); // Used for tr to add new lines\n$bctag = array(0=>'class=\"impair tagtr\"', 1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg = ''; $warning = ''; $error = 0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs = array(); $warnings = array(); $errors = array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox)) {\n\tdefine('ROWS_1', 1);\n\tdefine('ROWS_2', 2);\n\tdefine('ROWS_3', 3);\n\tdefine('ROWS_4', 4);\n\tdefine('ROWS_5', 5);\n\tdefine('ROWS_6', 6);\n\tdefine('ROWS_7', 7);\n\tdefine('ROWS_8', 8);\n\tdefine('ROWS_9', 9);\n} else {\n\tdefine('ROWS_1', 0);\n\tdefine('ROWS_2', 1);\n\tdefine('ROWS_3', 2);\n\tdefine('ROWS_4', 3);\n\tdefine('ROWS_5', 4);\n\tdefine('ROWS_6', 5);\n\tdefine('ROWS_7', 6);\n\tdefine('ROWS_8', 7);\n\tdefine('ROWS_9', 8);\n}\n\n$heightforframes = 50;\n\n// Init menu manager\nif (!defined('NOREQUIREMENU')) {\n\tif (empty($user->socid)) {    // If internal user or not defined\n\t\t$conf->standard_menu = (empty($conf->global->MAIN_MENU_STANDARD_FORCED) ? (empty($conf->global->MAIN_MENU_STANDARD) ? 'eldy_menu.php' : $conf->global->MAIN_MENU_STANDARD) : $conf->global->MAIN_MENU_STANDARD_FORCED);\n\t} else {\n\t\t// If external user\n\t\t$conf->standard_menu = (empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED) ? (empty($conf->global->MAIN_MENUFRONT_STANDARD) ? 'eldy_menu.php' : $conf->global->MAIN_MENUFRONT_STANDARD) : $conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu = $conf->standard_menu;\n\tif (GETPOST('menu', 'alpha')) {\n\t\t$file_menu = GETPOST('menu', 'alpha'); // example: menu=eldy_menu.php\n\t}\n\tif (!class_exists('MenuManager')) {\n\t\t$menufound = 0;\n\t\t$dirmenus = array_merge(array(\"/core/menus/\"), (array) $conf->modules_parts['menus']);\n\t\tforeach ($dirmenus as $dirmenu) {\n\t\t\t$menufound = dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!class_exists('MenuManager')) {\t// If failed to include, we try with standard eldy_menu.php\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu = 'eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->socid) ? 0 : 1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (!function_exists(\"llxHeader\")) {\n\t/**\n\t *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n\t *\n\t * @param \tstring \t\t\t$head\t\t\t\tOptionnal head lines\n\t * @param \tstring \t\t\t$title\t\t\t\tHTML title\n\t * @param\tstring\t\t\t$help_url\t\t\tUrl links to help page\n\t * \t\t                            \t\t\tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n\t *                                  \t\t\tFor other external page: http://server/url\n\t * @param\tstring\t\t\t$target\t\t\t\tTarget to use on links\n\t * @param \tint    \t\t\t$disablejs\t\t\tMore content into html header\n\t * @param \tint    \t\t\t$disablehead\t\tMore content into html header\n\t * @param \tarray|string  \t$arrayofjs\t\t\tArray of complementary js files\n\t * @param \tarray|string  \t$arrayofcss\t\t\tArray of complementary css files\n\t * @param\tstring\t\t\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n\t * @param   string  \t\t$morecssonbody      More CSS on body tag. For example 'classforhorizontalscrolloftabs'.\n\t * @param\tstring\t\t\t$replacemainareaby\tReplace call to main_area() by a print of this string\n\t * @param\tint\t\t\t\t$disablenofollow\tDisable the \"nofollow\" on page\n\t * @return\tvoid\n\t */\n\tfunction llxHeader($head = '', $title = '', $help_url = '', $target = '', $disablejs = 0, $disablehead = 0, $arrayofjs = '', $arrayofcss = '', $morequerystring = '', $morecssonbody = '', $replacemainareaby = '', $disablenofollow = 0)\n\t{\n\t\tglobal $conf;\n\n\t\t// html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss, 0, $disablenofollow);\n\n\t\t$tmpcsstouse = 'sidebar-collapse'.($morecssonbody ? ' '.$morecssonbody : '');\n\t\t// If theme MD and classic layer, we open the menulayer by default.\n\t\tif ($conf->theme == 'md' && !in_array($conf->browser->layout, array('phone', 'tablet')) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\tglobal $mainmenu;\n\t\t\tif ($mainmenu != 'website') {\n\t\t\t\t$tmpcsstouse = $morecssonbody; // We do not use sidebar-collpase by default to have menuhider open by default.\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORCOLORBLIND)) {\n\t\t\t$tmpcsstouse .= ' colorblind-'.strip_tags($conf->global->MAIN_OPTIMIZEFORCOLORBLIND);\n\t\t}\n\n\t\tprint '<body id=\"mainbody\" class=\"'.$tmpcsstouse.'\">'.\"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu) || GETPOST('dol_invisible_topmenu', 'int')) {\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu)) {\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1); // $menumanager is retrieved with a global $menumanager inside this function\n\t\t}\n\n\t\t// main area\n\t\tif ($replacemainareaby) {\n\t\t\tprint $replacemainareaby;\n\t\t\treturn;\n\t\t}\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header. Called by top_htmlhead().\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @param\tint\t\t$forcenocache\tForce disabling of cache for the page\n *  @return\tvoid\n */\nfunction top_httphead($contenttype = 'text/html', $forcenocache = 0)\n{\n\tglobal $db, $conf, $hookmanager;\n\n\tif ($contenttype == 'text/html') {\n\t\theader(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n\t} else {\n\t\theader(\"Content-Type: \".$contenttype);\n\t}\n\n\t// Security options\n\theader(\"X-Content-Type-Options: nosniff\"); // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n\tif (!defined('XFRAMEOPTIONS_ALLOWALL')) {\n\t\theader(\"X-Frame-Options: SAMEORIGIN\"); // Frames allowed only if on same domain (stop some XSS attacks)\n\t} else {\n\t\theader(\"X-Frame-Options: ALLOWALL\");\n\t}\n\t//header(\"X-XSS-Protection: 1\");      \t\t// XSS filtering protection of some browsers (note: use of Content-Security-Policy is more efficient). Disabled as deprecated.\n\tif (!defined('FORCECSP')) {\n\t\t//if (! isset($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n\t\t//{\n\t\t//\t// A default security policy that keep usage of js external component like ckeditor, stripe, google, working\n\t\t//\t$contentsecuritypolicy = \"font-src *; img-src *; style-src * 'unsafe-inline' 'unsafe-eval'; default-src 'self' *.stripe.com 'unsafe-inline' 'unsafe-eval'; script-src 'self' *.stripe.com 'unsafe-inline' 'unsafe-eval'; frame-src 'self' *.stripe.com; connect-src 'self';\";\n\t\t//}\n\t\t//else\n\t\t$contentsecuritypolicy = empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY) ? '' : $conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY;\n\n\t\tif (!is_object($hookmanager)) {\n\t\t\t$hookmanager = new HookManager($db);\n\t\t}\n\t\t$hookmanager->initHooks(array(\"main\"));\n\n\t\t$parameters = array('contentsecuritypolicy'=>$contentsecuritypolicy);\n\t\t$result = $hookmanager->executeHooks('setContentSecurityPolicy', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tif ($result > 0) {\n\t\t\t$contentsecuritypolicy = $hookmanager->resPrint; // Replace CSP\n\t\t} else {\n\t\t\t$contentsecuritypolicy .= $hookmanager->resPrint; // Concat CSP\n\t\t}\n\n\t\tif (!empty($contentsecuritypolicy)) {\n\t\t\t// For example, to restrict 'script', 'object', 'frames' or 'img' to some domains:\n\t\t\t// script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; frame-src https://youtube.com; img-src: https://static.example.com\n\t\t\t// For example, to restrict everything to one domain, except 'object', ...:\n\t\t\t// default-src https://cdn.example.net; object-src 'none'\n\t\t\t// For example, to restrict everything to itself except img that can be on other servers:\n\t\t\t// default-src 'self'; img-src *;\n\t\t\t// Pre-existing site that uses too much inline code to fix but wants to ensure resources are loaded only over https and disable plugins:\n\t\t\t// default-src http: https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'\n\t\t\theader(\"Content-Security-Policy: \".$contentsecuritypolicy);\n\t\t}\n\t} elseif (constant('FORCECSP')) {\n\t\theader(\"Content-Security-Policy: \".constant('FORCECSP'));\n\t}\n\tif ($forcenocache) {\n\t\theader(\"Cache-Control: no-cache, no-store, must-revalidate, max-age=0\");\n\t}\n}\n\n/**\n * Ouput html header of a page. It calls also top_httphead()\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title = '', $disablejs = 0, $disablehead = 0, $arrayofjs = '', $arrayofcss = '', $disablejmobile = 0, $disablenofollow = 0)\n{\n\tglobal $db, $conf, $langs, $user, $mysoc, $hookmanager;\n\n\ttop_httphead();\n\n\tif (empty($conf->css)) {\n\t\t$conf->css = '/theme/eldy/style.css.php'; // If not defined, eldy by default\n\t}\n\n\tprint '<!doctype html>'.\"\\n\";\n\n\tif (!empty($conf->global->MAIN_USE_CACHE_MANIFEST)) {\n\t\tprint '<html lang=\"'.substr($langs->defaultlang, 0, 2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n\t} else {\n\t\tprint '<html lang=\"'.substr($langs->defaultlang, 0, 2).'\">'.\"\\n\";\n\t}\n\t//print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n\tif (empty($disablehead)) {\n\t\tif (!is_object($hookmanager)) {\n\t\t\t$hookmanager = new HookManager($db);\n\t\t}\n\t\t$hookmanager->initHooks(array(\"main\"));\n\n\t\t$ext = 'layout='.$conf->browser->layout.'&amp;version='.urlencode(DOL_VERSION);\n\n\t\tprint \"<head>\\n\";\n\n\t\tif (GETPOST('dol_basehref', 'alpha')) {\n\t\t\tprint '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref', 'alpha')).'\">'.\"\\n\";\n\t\t}\n\n\t\t// Displays meta\n\t\tprint '<meta charset=\"utf-8\">'.\"\\n\";\n\t\tprint '<meta name=\"robots\" content=\"noindex'.($disablenofollow ? '' : ',nofollow').'\">'.\"\\n\"; // Do not index\n\t\tprint '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">'.\"\\n\"; // Scale for mobile device\n\t\tprint '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n\n\t\t// Favicon\n\t\t$favicon = DOL_URL_ROOT.'/theme/dolibarr_256x256_color.png';\n\t\tif (!empty($mysoc->logo_squarred_mini)) {\n\t\t\t$favicon = DOL_URL_ROOT.'/viewimage.php?cache=1&modulepart=mycompany&file='.urlencode('logos/thumbs/'.$mysoc->logo_squarred_mini);\n\t\t}\n\t\tif (!empty($conf->global->MAIN_FAVICON_URL)) {\n\t\t\t$favicon = $conf->global->MAIN_FAVICON_URL;\n\t\t}\n\t\tif (empty($conf->dol_use_jmobile)) {\n\t\t\tprint '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\"; // Not required into an Android webview\n\t\t}\n\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"https://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n\t\t// Mobile appli like icon\n\t\t$manifest = DOL_URL_ROOT.'/theme/'.$conf->theme.'/manifest.json.php';\n\t\tif (!empty($manifest)) {\n\t\t\tprint '<link rel=\"manifest\" href=\"'.$manifest.'\" />'.\"\\n\";\n\t\t}\n\n\t\tif (!empty($conf->global->THEME_ELDY_TOPMENU_BACK1)) {\n\t\t\t// TODO: use auto theme color switch\n\t\t\tprint '<meta name=\"theme-color\" content=\"rgb('.$conf->global->THEME_ELDY_TOPMENU_BACK1.')\">'.\"\\n\";\n\t\t}\n\n\t\t// Auto refresh page\n\t\tif (GETPOST('autorefresh', 'int') > 0) {\n\t\t\tprint '<meta http-equiv=\"refresh\" content=\"'.GETPOST('autorefresh', 'int').'\">';\n\t\t}\n\n\t\t// Displays title\n\t\t$appli = constant('DOL_APPLICATION_TITLE');\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE;\n\t\t}\n\n\t\tprint '<title>';\n\t\t$titletoshow = '';\n\t\tif ($title && !empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/', $conf->global->MAIN_HTML_TITLE)) {\n\t\t\t$titletoshow = dol_htmlentities($title);\n\t\t} elseif ($title) {\n\t\t\t$titletoshow = dol_htmlentities($appli.' - '.$title);\n\t\t} else {\n\t\t\t$titletoshow = dol_htmlentities($appli);\n\t\t}\n\n\t\t$parameters = array('title'=>$titletoshow);\n\t\t$result = $hookmanager->executeHooks('setHtmlTitle', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tif ($result > 0) {\n\t\t\t$titletoshow = $hookmanager->resPrint; // Replace Title to show\n\t\t} else {\n\t\t\t$titletoshow .= $hookmanager->resPrint; // Concat to Title to show\n\t\t}\n\n\t\tprint $titletoshow;\n\t\tprint '</title>';\n\n\t\tprint \"\\n\";\n\n\t\tif (GETPOST('version', 'int')) {\n\t\t\t$ext = 'version='.GETPOST('version', 'int'); // usefull to force no cache on css/js\n\t\t}\n\n\t\t$themeparam = '?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss', 'aZ09') ? '&amp;optioncss='.GETPOST('optioncss', 'aZ09', 1) : '').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n\t\t$themeparam .= ($ext ? '&amp;'.$ext : '').'&amp;revision='.getDolGlobalInt(\"MAIN_IHM_PARAMS_REV\");\n\t\tif (!empty($_SESSION['dol_resetcache'])) {\n\t\t\t$themeparam .= '&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n\t\t}\n\t\tif (GETPOSTISSET('dol_hide_topmenu')) {\n\t\t\t$themeparam .= '&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_hide_leftmenu')) {\n\t\t\t$themeparam .= '&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_optimize_smallscreen')) {\n\t\t\t$themeparam .= '&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_no_mouse_hover')) {\n\t\t\t$themeparam .= '&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_use_jmobile')) {\n\t\t\t$themeparam .= '&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile', 'int'); $conf->dol_use_jmobile = GETPOST('dol_use_jmobile', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('THEME_DARKMODEENABLED')) {\n\t\t\t$themeparam .= '&amp;THEME_DARKMODEENABLED='.GETPOST('THEME_DARKMODEENABLED', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('THEME_SATURATE_RATIO')) {\n\t\t\t$themeparam .= '&amp;THEME_SATURATE_RATIO='.GETPOST('THEME_SATURATE_RATIO', 'int');\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_ENABLE_FONT_ROBOTO)) {\n\t\t\tprint '<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">'.\"\\n\";\n\t\t\tprint '<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@200;300;400;500;600&display=swap\" rel=\"stylesheet\">'.\"\\n\";\n\t\t}\n\n\t\tif (!defined('DISABLE_JQUERY') && !$disablejs && $conf->use_javascript_ajax) {\n\t\t\tprint '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n\t\t\t$jquerytheme = 'base';\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_THEME)) {\n\t\t\t\t$jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n\t\t\t}\n\t\t\tif (constant('JS_JQUERY_UI')) {\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\"; // Forced JQuery\n\t\t\t} else {\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\"; // JQuery\n\t\t\t}\n\t\t\tif (!defined('DISABLE_JQUERY_JNOTIFY')) {\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\"; // JNotify\n\t\t\t}\n\t\t\tif (!defined('DISABLE_SELECT2') && (!empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT'))) {     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n\t\t\t\t$tmpplugin = empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) ?constant('REQUIRE_JQUERY_MULTISELECT') : $conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/css/'.$tmpplugin.'.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!defined('DISABLE_FONT_AWSOME')) {\n\t\t\tprint '<!-- Includes CSS for font awesome -->'.\"\\n\";\n\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome-5/css/all.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\";\n\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome-5/css/v4-shims.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\";\n\t\t}\n\n\t\tprint '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n\t\t// Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n\t\t$themepath = dol_buildpath($conf->css, 1);\n\t\t$themesubdir = '';\n\t\tif (!empty($conf->modules_parts['theme'])) {\t// This slow down\n\t\t\tforeach ($conf->modules_parts['theme'] as $reldir) {\n\t\t\t\tif (file_exists(dol_buildpath($reldir.$conf->css, 0))) {\n\t\t\t\t\t$themepath = dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir = $reldir;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t\tif (!empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) {\n\t\t\tprint '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\t\t}\n\n\t\t// CSS forced by modules (relative url starting with /)\n\t\tif (!empty($conf->modules_parts['css'])) {\n\t\t\t$arraycss = (array) $conf->modules_parts['css'];\n\t\t\tforeach ($arraycss as $modcss => $filescss) {\n\t\t\t\t$filescss = (array) $filescss; // To be sure filecss is an array\n\t\t\t\tforeach ($filescss as $cssfile) {\n\t\t\t\t\tif (empty($cssfile)) {\n\t\t\t\t\t\tdol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n\t\t\t\t\t}\n\t\t\t\t\t// cssfile is a relative path\n\t\t\t\t\tprint '<!-- Includes CSS added by module '.$modcss.' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile, 1);\n\t\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t\t\t\t\tif (!preg_match('/\\.css$/i', $cssfile)) {\n\t\t\t\t\t\tprint $themeparam;\n\t\t\t\t\t}\n\t\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// CSS forced by page in top_htmlhead call (relative url starting with /)\n\t\tif (is_array($arrayofcss)) {\n\t\t\tforeach ($arrayofcss as $cssfile) {\n\t\t\t\tif (preg_match('/^(http|\\/\\/)/i', $cssfile)) {\n\t\t\t\t\t$urltofile = $cssfile;\n\t\t\t\t} else {\n\t\t\t\t\t$urltofile = dol_buildpath($cssfile, 1);\n\t\t\t\t}\n\t\t\t\tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.$urltofile;\n\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i', $cssfile)) {\n\t\t\t\t\tprint $themeparam;\n\t\t\t\t}\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// Output standard javascript links\n\t\tif (!defined('DISABLE_JQUERY') && !$disablejs && !empty($conf->use_javascript_ajax)) {\n\t\t\t// JQuery. Must be before other includes\n\t\t\tprint '<!-- Includes JS for JQuery -->'.\"\\n\";\n\t\t\tif (defined('JS_JQUERY') && constant('JS_JQUERY')) {\n\t\t\t\tprint '<script src=\"'.JS_JQUERY.'jquery.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t/*if (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n\t\t\t{\n\t\t\t\tif (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\telse print '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}*/\n\t\t\tif (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) {\n\t\t\t\tprint '<script src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!defined('DISABLE_JQUERY_TABLEDND')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// jQuery jnotify\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && !defined('DISABLE_JQUERY_JNOTIFY')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// Chart\n\t\t\tif ((empty($conf->global->MAIN_JS_GRAPH) || $conf->global->MAIN_JS_GRAPH == 'chart') && !defined('DISABLE_JS_GRAPH')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/nnnick/chartjs/dist/Chart.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// jQuery jeditable for Edit In Place features\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && !defined('DISABLE_JQUERY_JEDITABLE')) {\n\t\t\t\tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script>'.\"\\n\";\n\t\t\t\tprint 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\"; // Added in title attribute of span\n\t\t\t\tprint 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\"; // If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n\t\t\t\tprint 'var cancelInPlace = \\''.$langs->trans(\"Cancel\").'\\';'.\"\\n\";\n\t\t\t\tprint 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n\t\t\t\tprint 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n\t\t\t\tprint 'var withInPlace = 300;'; // width in pixel for default string edit\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// jQuery Timepicker\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext ? '&amp;'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!defined('DISABLE_SELECT2') && (!empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT'))) {\n\t\t\t\t// jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n\t\t\t\t$tmpplugin = empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) ?constant('REQUIRE_JQUERY_MULTISELECT') : $conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/js/'.$tmpplugin.'.full.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\"; // We include full because we need the support of containerCssClass\n\t\t\t}\n\t\t\tif (!defined('DISABLE_MULTISELECT')) {     // jQuery plugin \"mutiselect\" to select with checkboxes. Can be removed once we have an enhanced search tool\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/multiselect/jquery.multi-select.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!$disablejs && !empty($conf->use_javascript_ajax)) {\n\t\t\t// CKEditor\n\t\t\tif ((!empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && !defined('DISABLE_CKEDITOR')) || defined('FORCE_CKEDITOR')) {\n\t\t\t\tprint '<!-- Includes JS for CKEditor -->'.\"\\n\";\n\t\t\t\t$pathckeditor = DOL_URL_ROOT.'/includes/ckeditor/ckeditor/';\n\t\t\t\t$jsckeditor = 'ckeditor.js';\n\t\t\t\tif (constant('JS_CKEDITOR')) {\n\t\t\t\t\t// To use external ckeditor 4 js lib\n\t\t\t\t\t$pathckeditor = constant('JS_CKEDITOR');\n\t\t\t\t}\n\t\t\t\tprint '<script>';\n\t\t\t\tprint '/* enable ckeditor by main.inc.php */';\n\t\t\t\tprint 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n\t\t\t\tprint 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext ? '?'.$ext : ''), 1).'\\';'.\"\\n\"; // $themesubdir='' in standard usage\n\t\t\t\tprint 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n\t\t\t\tprint 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.$pathckeditor.$jsckeditor.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script>';\n\t\t\t\tif (GETPOST('mode', 'aZ09') == 'Full_inline') {\n\t\t\t\t\tprint 'CKEDITOR.disableAutoInline = false;'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tprint 'CKEDITOR.disableAutoInline = true;'.\"\\n\";\n\t\t\t\t}\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Browser notifications (if NOREQUIREMENU is on, it is mostly a page for popup, so we do not enable notif too. We hide also for public pages).\n\t\t\tif (!defined('NOBROWSERNOTIF') && !defined('NOREQUIREMENU') && !defined('NOLOGIN')) {\n\t\t\t\t$enablebrowsernotif = false;\n\t\t\t\tif (!empty($conf->agenda->enabled) && !empty($conf->global->AGENDA_REMINDER_BROWSER)) {\n\t\t\t\t\t$enablebrowsernotif = true;\n\t\t\t\t}\n\t\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t\t$enablebrowsernotif = false;\n\t\t\t\t}\n\t\t\t\tif ($enablebrowsernotif) {\n\t\t\t\t\tprint '<!-- Includes JS of Dolibarr (browser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n\t\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Global js function\n\t\t\tprint '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php?lang='.$langs->defaultlang.($ext ? '&'.$ext : '').'\"></script>'.\"\\n\";\n\n\t\t\t// JS forced by modules (relative url starting with /)\n\t\t\tif (!empty($conf->modules_parts['js'])) {\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n\t\t\t\t$arrayjs = (array) $conf->modules_parts['js'];\n\t\t\t\tforeach ($arrayjs as $modjs => $filesjs) {\n\t\t\t\t\t$filesjs = (array) $filesjs; // To be sure filejs is an array\n\t\t\t\t\tforeach ($filesjs as $jsfile) {\n\t\t\t\t\t\t// jsfile is a relative path\n\t\t\t\t\t\tprint '<!-- Include JS added by module '.$modjs.'-->'.\"\\n\".'<script src=\"'.dol_buildpath($jsfile, 1).'\"></script>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// JS forced by page in top_htmlhead (relative url starting with /)\n\t\t\tif (is_array($arrayofjs)) {\n\t\t\t\tprint '<!-- Includes JS added by page -->'.\"\\n\";\n\t\t\t\tforeach ($arrayofjs as $jsfile) {\n\t\t\t\t\tif (preg_match('/^(http|\\/\\/)/i', $jsfile)) {\n\t\t\t\t\t\tprint '<script src=\"'.$jsfile.'\"></script>'.\"\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<script src=\"'.dol_buildpath($jsfile, 1).'\"></script>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($head)) {\n\t\t\tprint $head.\"\\n\";\n\t\t}\n\t\tif (!empty($conf->global->MAIN_HTML_HEADER)) {\n\t\t\tprint $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\t\t}\n\n\t\t$parameters = array();\n\t\t$result = $hookmanager->executeHooks('addHtmlHeader', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tprint $hookmanager->resPrint; // Replace Title to show\n\n\t\tprint \"</head>\\n\\n\";\n\t}\n\n\t$conf->headerdone = 1; // To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t                    For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title = '', $target = '', $disablejs = 0, $disablehead = 0, $arrayofjs = '', $arrayofcss = '', $morequerystring = '', $helppagename = '')\n{\n\tglobal $user, $conf, $langs, $db;\n\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\tglobal $hookmanager, $menumanager;\n\n\t$searchform = '';\n\t$bookmarks = '';\n\n\t// Instantiate hooks for external modules\n\t$hookmanager->initHooks(array('toprightmenu'));\n\n\t$toprightmenu = '';\n\n\t// For backward compatibility with old modules\n\tif (empty($conf->headerdone)) {\n\t\t$disablenofollow = 0;\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss, 0, $disablenofollow);\n\t\tprint '<body id=\"mainbody\">';\n\t}\n\n\t/*\n\t * Top menu\n\t */\n\tif ((empty($conf->dol_hide_topmenu) || GETPOST('dol_invisible_topmenu', 'int')) && (!defined('NOREQUIREMENU') || !constant('NOREQUIREMENU'))) {\n\t\tif (!isset($form) || !is_object($form)) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';\n\t\t\t$form = new Form($db);\n\t\t}\n\n\t\tprint \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n\t\tprint '<div class=\"side-nav-vert'.(GETPOST('dol_invisible_topmenu', 'int') ? ' hidden' : '').'\"><div id=\"id-top\">'; // dol_invisible_topmenu differs from dol_hide_topmenu: dol_invisible_topmenu means we output menu but we make it invisible.\n\n\t\t// Show menu entries\n\t\tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT) ? '' : 'invert').'\" class=\"tmenu\">'.\"\\n\";\n\t\t$menumanager->atarget = $target;\n\t\t$menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // This contains a \\n\n\t\tprint \"</div>\\n\";\n\n\t\t// Define link to login card\n\t\t$appli = constant('DOL_APPLICATION_TITLE');\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE;\n\t\t\tif (preg_match('/\\d\\.\\d/', $appli)) {\n\t\t\t\tif (!preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) {\n\t\t\t\t\t$appli .= \" (\".DOL_VERSION.\")\"; // If new title contains a version that is different than core\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t\t}\n\t\t} else {\n\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_FEATURES_LEVEL)) {\n\t\t\t$appli .= \"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\t\t}\n\n\t\t$logouttext = '';\n\t\t$logouthtmltext = '';\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t//$logouthtmltext=$appli.'<br>';\n\t\t\tif ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http') {\n\t\t\t\t$logouthtmltext .= $langs->trans(\"Logout\").'<br>';\n\n\t\t\t\t$logouttext .= '<a accesskey=\"l\" href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n\t\t\t\t$logouttext .= img_picto($langs->trans('Logout'), 'sign-out', '', false, 0, 0, '', 'atoplogin');\n\t\t\t\t$logouttext .= '</a>';\n\t\t\t} else {\n\t\t\t\t$logouthtmltext .= $langs->trans(\"NoLogoutProcessWithAuthMode\", $_SESSION[\"dol_authmode\"]);\n\t\t\t\t$logouttext .= img_picto($langs->trans('Logout'), 'sign-out', '', false, 0, 0, '', 'atoplogin opacitymedium');\n\t\t\t}\n\t\t}\n\n\t\tprint '<div class=\"login_block usedropdown\">'.\"\\n\";\n\n\t\t$toprightmenu .= '<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t\t$parameters = array();\n\t\t$result = $hookmanager->executeHooks('printTopRightMenu', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result)) {\n\t\t\tif ($result == 0) {\n\t\t\t\t$toprightmenu .= $hookmanager->resPrint; // add\n\t\t\t} else {\n\t\t\t\t$toprightmenu = $hookmanager->resPrint; // replace\n\t\t\t}\n\t\t} else {\n\t\t\t$toprightmenu .= $result; // For backward compatibility\n\t\t}\n\n\t\t// Link to module builder\n\t\tif (!empty($conf->modulebuilder->enabled)) {\n\t\t\t$text = '<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"modulebuilder\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text .= '<span class=\"fa fa-bug atoplogin valignmiddle\"></span>';\n\t\t\t$text .= '</a>';\n\t\t\t$toprightmenu .= $form->textwithtooltip('', $langs->trans(\"ModuleBuilder\"), 2, 1, $text, 'login_block_elem', 2);\n\t\t}\n\n\t\t// Link to print main content area\n\t\tif (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && $conf->browser->layout != 'phone') {\n\t\t\t$qs = dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t\t\tif (is_array($_POST)) {\n\t\t\t\tforeach ($_POST as $key => $value) {\n\t\t\t\t\tif ($key !== 'action' && $key !== 'password' && !is_array($value)) {\n\t\t\t\t\t\t$qs .= '&'.$key.'='.urlencode($value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$qs .= (($qs && $morequerystring) ? '&' : '').$morequerystring;\n\t\t\t$text = '<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs ? '&' : '').'optioncss=print\" target=\"_blank\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text .= '<span class=\"fa fa-print atoplogin valignmiddle\"></span>';\n\t\t\t$text .= '</a>';\n\t\t\t$toprightmenu .= $form->textwithtooltip('', $langs->trans(\"PrintContentArea\"), 2, 1, $text, 'login_block_elem', 2);\n\t\t}\n\n\t\t// Link to Dolibarr wiki pages\n\t\tif (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t$langs->load(\"help\");\n\n\t\t\t$helpbaseurl = '';\n\t\t\t$helppage = '';\n\t\t\t$mode = '';\n\t\t\t$helppresent = '';\n\n\t\t\tif (empty($helppagename)) {\n\t\t\t\t$helppagename = 'EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\t\t\t} else {\n\t\t\t\t$helppresent = 'helppresent';\n\t\t\t}\n\n\t\t\t// Get helpbaseurl, helppage and mode from helppagename and langs\n\t\t\t$arrayres = getHelpParamFor($helppagename, $langs);\n\t\t\t$helpbaseurl = $arrayres['helpbaseurl'];\n\t\t\t$helppage = $arrayres['helppage'];\n\t\t\t$mode = $arrayres['mode'];\n\n\t\t\t// Link to help pages\n\t\t\tif ($helpbaseurl && $helppage) {\n\t\t\t\t$text = '';\n\t\t\t\t$title = $langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage' : 'GoToHelpPage').'...';\n\t\t\t\tif ($mode == 'wiki') {\n\t\t\t\t\t$title .= '<br>'.$langs->trans(\"PageWiki\").' '.dol_escape_htmltag('\"'.strtr($helppage, '_', ' ').'\"');\n\t\t\t\t\tif ($helppresent) {\n\t\t\t\t\t\t$title .= ' <span class=\"opacitymedium\">('.$langs->trans(\"DedicatedPageAvailable\").')</span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$title .= ' <span class=\"opacitymedium\">('.$langs->trans(\"HomePage\").')</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$text .= '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"';\n\t\t\t\tif ($mode == 'wiki') {\n\t\t\t\t\t$text .= sprintf($helpbaseurl, urlencode(html_entity_decode($helppage)));\n\t\t\t\t} else {\n\t\t\t\t\t$text .= sprintf($helpbaseurl, $helppage);\n\t\t\t\t}\n\t\t\t\t$text .= '\">';\n\t\t\t\t$text .= '<span class=\"fa fa-question-circle atoplogin valignmiddle'.($helppresent ? ' '.$helppresent : '').'\"></span>';\n\t\t\t\t$text .= '<span class=\"fa fa-circle helppresentcircle'.($helppresent ? '' : ' unvisible').'\"></span>';\n\t\t\t\t$text .= '</a>';\n\t\t\t\t$toprightmenu .= $form->textwithtooltip('', $title, 2, 1, $text, 'login_block_elem', 2);\n\t\t\t}\n\n\t\t\t// Version\n\t\t\tif (!empty($conf->global->MAIN_SHOWDATABASENAMEINHELPPAGESLINK)) {\n\t\t\t\t$langs->load('admin');\n\t\t\t\t$appli .= '<br>'.$langs->trans(\"Database\").': '.$db->database_name;\n\t\t\t}\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t$text = '<span class=\"aversion\"><span class=\"hideonsmartphone small\">'.DOL_VERSION.'</span></span>';\n\t\t\t$toprightmenu .= $form->textwithtooltip('', $appli, 2, 1, $text, 'login_block_elem', 2);\n\t\t}\n\n\t\t// Logout link\n\t\t$toprightmenu .= $form->textwithtooltip('', $logouthtmltext, 2, 1, $logouttext, 'login_block_elem logout-btn', 2);\n\n\t\t$toprightmenu .= '</div>'; // end div class=\"login_block_other\"\n\n\n\t\t// Add login user link\n\t\t$toprightmenu .= '<div class=\"login_block_user\">';\n\n\t\t// Login name with photo and tooltip\n\t\t$mode = -1;\n\t\t$toprightmenu .= '<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n\n\t\tif (!empty($conf->global->MAIN_USE_TOP_MENU_SEARCH_DROPDOWN)) {\n\t\t\t// Add search dropdown\n\t\t\t$toprightmenu .= top_menu_search();\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_USE_TOP_MENU_QUICKADD_DROPDOWN)) {\n\t\t\t// Add search dropdown\n\t\t\t$toprightmenu .= top_menu_quickadd();\n\t\t}\n\n\t\t// Add bookmark dropdown\n\t\t$toprightmenu .= top_menu_bookmark();\n\n\t\t// Add user dropdown\n\t\t$toprightmenu .= top_menu_user();\n\n\t\t$toprightmenu .= '</div></div>';\n\n\t\t$toprightmenu .= '</div>'.\"\\n\";\n\n\n\t\tprint $toprightmenu;\n\n\t\tprint \"</div>\\n\"; // end div class=\"login_block\"\n\n\t\tprint '</div></div>';\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n\t\tprint \"<!-- End top horizontal menu -->\\n\\n\";\n\t}\n\n\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) {\n\t\tprint '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container\">';\n\t}\n}\n\n\n/**\n * Build the tooltip on user login\n *\n * @param\tint\t\t\t$hideloginname\t\tHide login name. Show only the image.\n * @param\tstring\t\t$urllogout\t\t\tURL for logout\n * @return  string                  \t\tHTML content\n */\nfunction top_menu_user($hideloginname = 0, $urllogout = '')\n{\n\tglobal $langs, $conf, $db, $hookmanager, $user, $mysoc;\n\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\tglobal $menumanager;\n\n\t$userImage = $userDropDownImage = '';\n\tif (!empty($user->photo)) {\n\t\t$userImage          = Form::showphoto('userphoto', $user, 0, 0, 0, 'photouserphoto userphoto', 'small', 0, 1);\n\t\t$userDropDownImage  = Form::showphoto('userphoto', $user, 0, 0, 0, 'dropdown-user-image', 'small', 0, 1);\n\t} else {\n\t\t$nophoto = '/public/theme/common/user_anonymous.png';\n\t\tif ($user->gender == 'man') {\n\t\t\t$nophoto = '/public/theme/common/user_man.png';\n\t\t}\n\t\tif ($user->gender == 'woman') {\n\t\t\t$nophoto = '/public/theme/common/user_woman.png';\n\t\t}\n\n\t\t$userImage = '<img class=\"photo photouserphoto userphoto\" alt=\"No photo\" src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t\t$userDropDownImage = '<img class=\"photo dropdown-user-image\" alt=\"No photo\" src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t}\n\n\t$dropdownBody = '';\n\t$dropdownBody .= '<span id=\"topmenulogincompanyinfo-btn\"><i class=\"fa fa-caret-right\"></i> '.$langs->trans(\"ShowCompanyInfos\").'</span>';\n\t$dropdownBody .= '<div id=\"topmenulogincompanyinfo\" >';\n\n\tif (!empty($conf->global->MAIN_INFO_SIREN)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId1Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_SIREN).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_SIRET)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId2Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_SIRET).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_APE)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId3Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_APE).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_RCS)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId4Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_RCS).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_PROFID5)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId5Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_PROFID5).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_PROFID6)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId6Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_PROFID6).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_TVAINTRA)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"VATIntraShort\").'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_TVAINTRA).'</span>';\n\t}\n\n\t$dropdownBody .= '</div>';\n\n\t$dropdownBody .= '<br>';\n\t$dropdownBody .= '<span id=\"topmenuloginmoreinfo-btn\"><i class=\"fa fa-caret-right\"></i> '.$langs->trans(\"ShowMoreInfos\").'</span>';\n\t$dropdownBody .= '<div id=\"topmenuloginmoreinfo\" >';\n\n\t// login infos\n\tif (!empty($user->admin)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"Administrator\").'</b>: '.yn($user->admin);\n\t}\n\tif (!empty($user->socid)) {\t// Add thirdparty for external users\n\t\t$thirdpartystatic = new Societe($db);\n\t\t$thirdpartystatic->fetch($user->socid);\n\t\t$companylink = ' '.$thirdpartystatic->getNomUrl(2); // picto only of company\n\t\t$company = ' ('.$langs->trans(\"Company\").': '.$thirdpartystatic->name.')';\n\t}\n\t$type = ($user->socid ? $langs->trans(\"External\").$company : $langs->trans(\"Internal\"));\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Type\").':</b> '.$type;\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Status\").'</b>: '.$user->getLibStatut(0);\n\t$dropdownBody .= '<br>';\n\n\t$dropdownBody .= '<br><u>'.$langs->trans(\"Session\").'</u>';\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"IPAddress\").'</b>: '.dol_escape_htmltag($_SERVER[\"REMOTE_ADDR\"]);\n\tif (!empty($conf->global->MAIN_MODULE_MULTICOMPANY)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"ConnectedOnMultiCompany\").':</b> '.$conf->entity.' (user entity '.$user->entity.')';\n\t}\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"AuthenticationMode\").':</b> '.$_SESSION[\"dol_authmode\"].(empty($dolibarr_main_demo) ? '' : ' (demo)');\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"ConnectedSince\").':</b> '.dol_print_date($user->datelastlogin, \"dayhour\", 'tzuser');\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"PreviousConnexion\").':</b> '.dol_print_date($user->datepreviouslogin, \"dayhour\", 'tzuser');\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"CurrentTheme\").':</b> '.$conf->theme;\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"CurrentMenuManager\").':</b> '.$menumanager->name;\n\t$langFlag = picto_from_langcode($langs->getDefaultLang());\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"CurrentUserLanguage\").':</b> '.($langFlag ? $langFlag.' ' : '').$langs->getDefaultLang();\n\n\t$tz = (int) $_SESSION['dol_tz'] + (int) $_SESSION['dol_dst'];\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"ClientTZ\").':</b> '.($tz ? ($tz >= 0 ? '+' : '').$tz : '');\n\t$dropdownBody .= ' ('.$_SESSION['dol_tz_string'].')';\n\t//$dropdownBody .= ' &nbsp; &nbsp; &nbsp; '.$langs->trans(\"DaylingSavingTime\").': ';\n\t//if ($_SESSION['dol_dst'] > 0) $dropdownBody .= yn(1);\n\t//else $dropdownBody .= yn(0);\n\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Browser\").':</b> '.$conf->browser->name.($conf->browser->version ? ' '.$conf->browser->version : '').' ('.dol_escape_htmltag($_SERVER['HTTP_USER_AGENT']).')';\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Layout\").':</b> '.$conf->browser->layout;\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Screen\").':</b> '.$_SESSION['dol_screenwidth'].' x '.$_SESSION['dol_screenheight'];\n\tif ($conf->browser->layout == 'phone') {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"Phone\").':</b> '.$langs->trans(\"Yes\");\n\t}\n\tif (!empty($_SESSION[\"disablemodules\"])) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"DisabledModules\").':</b> <br>'.join(', ', explode(',', $_SESSION[\"disablemodules\"]));\n\t}\n\t$dropdownBody .= '</div>';\n\n\t// Execute hook\n\t$parameters = array('user'=>$user, 'langs' => $langs);\n\t$result = $hookmanager->executeHooks('printTopRightMenuLoginDropdownBody', $parameters); // Note that $action and $object may have been modified by some hooks\n\tif (is_numeric($result)) {\n\t\tif ($result == 0) {\n\t\t\t$dropdownBody .= $hookmanager->resPrint; // add\n\t\t} else {\n\t\t\t$dropdownBody = $hookmanager->resPrint; // replace\n\t\t}\n\t}\n\n\tif (empty($urllogout)) {\n\t\t$urllogout = DOL_URL_ROOT.'/user/logout.php';\n\t}\n\t$logoutLink = '<a accesskey=\"l\" href=\"'.$urllogout.'\" class=\"button-top-menu-dropdown\" ><i class=\"fa fa-sign-out-alt\"></i> '.$langs->trans(\"Logout\").'</a>';\n\t$profilLink = '<a accesskey=\"l\" href=\"'.DOL_URL_ROOT.'/user/card.php?id='.$user->id.'\" class=\"button-top-menu-dropdown\" ><i class=\"fa fa-user\"></i>  '.$langs->trans(\"Card\").'</a>';\n\n\n\t$profilName = $user->getFullName($langs).' ('.$user->login.')';\n\n\tif (!empty($user->admin)) {\n\t\t$profilName = '<i class=\"far fa-star classfortooltip\" title=\"'.$langs->trans(\"Administrator\").'\" ></i> '.$profilName;\n\t}\n\n\t// Define version to show\n\t$appli = constant('DOL_APPLICATION_TITLE');\n\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE;\n\t\tif (preg_match('/\\d\\.\\d/', $appli)) {\n\t\t\tif (!preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) {\n\t\t\t\t$appli .= \" (\".DOL_VERSION.\")\"; // If new title contains a version that is different than core\n\t\t\t}\n\t\t} else {\n\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t}\n\t} else {\n\t\t$appli .= \" \".DOL_VERSION;\n\t}\n\n\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t$btnUser = '<!-- div for user link -->\n\t    <div id=\"topmenu-login-dropdown\" class=\"userimg atoplogin dropdown user user-menu inline-block\">\n\t        <a href=\"'.DOL_URL_ROOT.'/user/card.php?id='.$user->id.'\" class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\">\n\t            '.$userImage.'<span class=\"hidden-xs maxwidth200 atoploginusername hideonsmartphone paddingleft\">'.dol_trunc($user->firstname ? $user->firstname : $user->login, 10).'</span>\n\t        </a>\n\t        <div class=\"dropdown-menu\">\n\t            <!-- User image -->\n\t            <div class=\"user-header\">\n\t                '.$userDropDownImage.'\n\t                <p>\n\t                    '.$profilName.'<br>';\n\t\tif ($user->datelastlogin) {\n\t\t\t$title = $langs->trans(\"ConnectedSince\").' : '.dol_print_date($user->datelastlogin, \"dayhour\", 'tzuser');\n\t\t\tif ($user->datepreviouslogin) {\n\t\t\t\t$title .= '<br>'.$langs->trans(\"PreviousConnexion\").' : '.dol_print_date($user->datepreviouslogin, \"dayhour\", 'tzuser');\n\t\t\t}\n\t\t}\n\t\t$btnUser .= '<small class=\"classfortooltip\" title=\"'.dol_escape_htmltag($title).'\" ><i class=\"fa fa-user-clock\"></i> '.dol_print_date($user->datelastlogin, \"dayhour\", 'tzuser').'</small><br>';\n\t\tif ($user->datepreviouslogin) {\n\t\t\t$btnUser .= '<small class=\"classfortooltip\" title=\"'.dol_escape_htmltag($title).'\" ><i class=\"fa fa-user-clock opacitymedium\"></i> '.dol_print_date($user->datepreviouslogin, \"dayhour\", 'tzuser').'</small><br>';\n\t\t}\n\n\t\t//$btnUser .= '<small class=\"classfortooltip\"><i class=\"fa fa-cog\"></i> '.$langs->trans(\"Version\").' '.$appli.'</small>';\n\t\t$btnUser .= '\n\t                </p>\n\t            </div>\n\n\t            <!-- Menu Body -->\n\t            <div class=\"user-body\">'.$dropdownBody.'</div>\n\n\t            <!-- Menu Footer-->\n\t            <div class=\"user-footer\">\n\t                <div class=\"pull-left\">\n\t                    '.$profilLink.'\n\t                </div>\n\t                <div class=\"pull-right\">\n\t                    '.$logoutLink.'\n\t                </div>\n\t                <div style=\"clear:both;\"></div>\n\t            </div>\n\n\t        </div>\n\t    </div>';\n\t} else {\n\t\t$btnUser = '<!-- div for user link -->\n\t    <div id=\"topmenu-login-dropdown\" class=\"userimg atoplogin dropdown user user-menu  inline-block\">\n\t    \t<a href=\"'.DOL_URL_ROOT.'/user/card.php?id='.$user->id.'\">\n\t    \t'.$userImage.'\n\t    \t\t<span class=\"hidden-xs maxwidth200 atoploginusername hideonsmartphone\">'.dol_trunc($user->firstname ? $user->firstname : $user->login, 10).'</span>\n\t    \t\t</a>\n\t\t</div>';\n\t}\n\n\tif (!defined('JS_JQUERY_DISABLE_DROPDOWN') && !empty($conf->use_javascript_ajax)) {    // This may be set by some pages that use different jquery version to avoid errors\n\t\t$btnUser .= '\n        <!-- Code to show/hide the user drop-down -->\n        <script>\n        $( document ).ready(function() {\n            $(document).on(\"click\", function(event) {\n                if (!$(event.target).closest(\"#topmenu-login-dropdown\").length) {\n\t\t\t\t\t//console.log(\"close login dropdown\");\n\t\t\t\t\t// Hide the menus.\n                    $(\"#topmenu-login-dropdown\").removeClass(\"open\");\n                }\n            });\n\t\t\t';\n\n\t\tif ($conf->theme != 'md') {\n\t\t\t$btnUser .= '\n\t            $(\"#topmenu-login-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n\t\t\t\t\tconsole.log(\"toggle login dropdown\");\n\t\t\t\t\tevent.preventDefault();\n\t                $(\"#topmenu-login-dropdown\").toggleClass(\"open\");\n\t            });\n\n\t            $(\"#topmenulogincompanyinfo-btn\").on(\"click\", function() {\n\t                $(\"#topmenulogincompanyinfo\").slideToggle();\n\t            });\n\n\t            $(\"#topmenuloginmoreinfo-btn\").on(\"click\", function() {\n\t                $(\"#topmenuloginmoreinfo\").slideToggle();\n\t            });';\n\t\t}\n\n\t\t$btnUser .= '\n        });\n        </script>\n        ';\n\t}\n\n\treturn $btnUser;\n}\n\n/**\n * Build the tooltip on top menu quick add\n *\n * @return  string                  HTML content\n */\nfunction top_menu_quickadd()\n{\n\tglobal $langs, $conf, $db, $hookmanager, $user;\n\tglobal $menumanager;\n\n\t$html = '';\n\t// Define $dropDownQuickAddHtml\n\t$dropDownQuickAddHtml = '<div class=\"dropdown-header bookmark-header center\">';\n\t$dropDownQuickAddHtml .= $langs->trans('QuickAdd');\n\t$dropDownQuickAddHtml .= '</div>';\n\n\t$dropDownQuickAddHtml .= '<div class=\"quickadd-body dropdown-body\">';\n\t$dropDownQuickAddHtml .= '<div class=\"quickadd\">';\n\tif (!empty($conf->societe->enabled) && $user->rights->societe->creer) {\n\t\t$langs->load(\"companies\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Thirdparty link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/societe/card.php?action=create\" title=\"'.$langs->trans(\"MenuNewThirdParty\").'\">\n                    '. img_picto('', 'object_company') .'<br>'. $langs->trans(\"ThirdParty\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->societe->enabled) && $user->rights->societe->contact->creer) {\n\t\t$langs->load(\"companies\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Contact link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/contact/card.php?action=create\" title=\"'.$langs->trans(\"NewContactAddress\").'\">\n                    '. img_picto('', 'object_contact') .'<br>'. $langs->trans(\"Contact\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->propal->enabled) && $user->rights->propale->creer) {\n\t\t$langs->load(\"propal\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Propal link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/comm/propal/card.php?action=create\" title=\"'.$langs->trans(\"NewPropal\").'\">\n                    '. img_picto('', 'object_propal') .'<br>'. $langs->trans(\"Proposal\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->commande->enabled) && $user->rights->commande->creer) {\n\t\t$langs->load(\"orders\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Order link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/commande/card.php?action=create\" title=\"'.$langs->trans(\"NewOrder\").'\">\n                    '. img_picto('', 'object_order') .'<br>'. $langs->trans(\"Order\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->facture->enabled) && $user->rights->facture->creer) {\n\t\t$langs->load(\"bills\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Invoice link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/compta/facture/card.php?action=create\" title=\"'.$langs->trans(\"NewBill\").'\">\n                    '. img_picto('', 'object_bill') .'<br>'. $langs->trans(\"Bill\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->contrat->enabled) && $user->rights->contrat->creer) {\n\t\t$langs->load(\"contracts\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Contract link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/compta/facture/card.php?action=create\" title=\"'.$langs->trans(\"NewContractSubscription\").'\">\n                    '. img_picto('', 'object_contract') .'<br>'. $langs->trans(\"Contract\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->supplier_proposal->enabled) && $user->rights->supplier_proposal->creer) {\n\t\t$langs->load(\"supplier_proposal\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Supplier proposal link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/supplier_proposal/card.php?action=create\" title=\"'.$langs->trans(\"NewAskPrice\").'\">\n                    '. img_picto('', 'object_propal') .'<br>'. $langs->trans(\"AskPrice\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif ((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD) && $user->rights->fournisseur->commande->creer) || (!empty($conf->supplier_order->enabled) && $user->rights->supplier_order->creer)) {\n\t\t$langs->load(\"orders\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Supplier order link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/fourn/commande/card.php?action=create\" title=\"'.$langs->trans(\"NewSupplierOrderShort\").'\">\n                    '. img_picto('', 'object_order') .'<br>'. $langs->trans(\"SupplierOrder\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif ((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD) && $user->rights->fournisseur->facture->creer) || (!empty($conf->supplier_invoice->enabled) && $user->rights->supplier_invoice->creer)) {\n\t\t$langs->load(\"bills\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Supplier invoice link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/fourn/facture/card.php?action=create\" title=\"'.$langs->trans(\"NewBill\").'\">\n                    '. img_picto('', 'object_bill') .'<br>'. $langs->trans(\"SupplierBill\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->product->enabled) && $user->rights->produit->creer) {\n\t\t$langs->load(\"products\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Product link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/product/card.php?action=create&amp;type=0\" title=\"'.$langs->trans(\"NewProduct\").'\">\n                    '. img_picto('', 'object_product') .'<br>'. $langs->trans(\"Product\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->service->enabled) && $user->rights->service->creer) {\n\t\t$langs->load(\"products\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Service link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/product/card.php?action=create&amp;type=1\" title=\"'.$langs->trans(\"NewService\").'\">\n                    '. img_picto('', 'object_service') .'<br>'. $langs->trans(\"Service\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->expensereport->enabled) && $user->rights->expensereport->creer) {\n\t\t$langs->load(\"trips\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Expense report link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/expensereport/card.php?action=create&fk_user_author='.$user->id.'\" title=\"'.$langs->trans(\"AddTrip\").'\">\n                    '. img_picto('', 'object_trip') .'<br>'. $langs->trans(\"ExpenseReport\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->holiday->enabled) && $user->rights->holiday->write) {\n\t\t$langs->load(\"holiday\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Holiday link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/holiday/card.php?action=create&fuserid='.$user->id.'\" title=\"'.$langs->trans(\"AddCP\").'\">\n                    '. img_picto('', 'object_holiday') .'<br>'. $langs->trans(\"Holidays\") .'</a>\n                </div>\n                ';\n\t}\n\n\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t$parameters = array();\n\t$result = $hookmanager->executeHooks('printQuickAddBlock', $parameters); // Note that $action and $object may have been modified by some hooks\n\tif (is_numeric($result)) {\n\t\tif ($result == 0) {\n\t\t\t$dropDownQuickAddHtml .= $hookmanager->resPrint; // add\n\t\t} else {\n\t\t\t$dropDownQuickAddHtml = $hookmanager->resPrint; // replace\n\t\t}\n\t} else {\n\t\t$dropDownQuickAddHtml .= $result; // For backward compatibility\n\t}\n\n\t$dropDownQuickAddHtml .= '</div>';\n\t$dropDownQuickAddHtml .= '</div>';\n\n\t$html .= '<!-- div for quick add link -->\n    <div id=\"topmenu-quickadd-dropdown\" class=\"atoplogin dropdown inline-block\">\n        <a class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\" href=\"#\" title=\"'.$langs->trans('QuickAdd').' ('.$langs->trans('QuickAddMenuShortCut').')\">\n            <i class=\"fa fa-plus-circle\" ></i>\n        </a>\n\n        <div class=\"dropdown-menu\">\n            '.$dropDownQuickAddHtml.'\n        </div>\n    </div>';\n\t$html .= '\n        <!-- Code to show/hide the user drop-down -->\n        <script>\n        $( document ).ready(function() {\n            $(document).on(\"click\", function(event) {\n                if (!$(event.target).closest(\"#topmenu-quickadd-dropdown\").length) {\n                    // Hide the menus.\n                    $(\"#topmenu-quickadd-dropdown\").removeClass(\"open\");\n                }\n            });\n            $(\"#topmenu-quickadd-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n                openQuickAddDropDown();\n            });\n            // Key map shortcut\n            $(document).keydown(function(e){\n                  if( e.which === 76 && e.ctrlKey && e.shiftKey ){\n                     console.log(\\'control + shift + l : trigger open quick add dropdown\\');\n                     openQuickAddDropDown();\n                  }\n            });\n\n\n            var openQuickAddDropDown = function() {\n                event.preventDefault();\n                $(\"#topmenu-quickadd-dropdown\").toggleClass(\"open\");\n                //$(\"#top-quickadd-search-input\").focus();\n            }\n        });\n        </script>\n        ';\n\treturn $html;\n}\n\n/**\n * Build the tooltip on top menu bookmark\n *\n * @return  string                  HTML content\n */\nfunction top_menu_bookmark()\n{\n\tglobal $langs, $conf, $db, $user;\n\n\t$html = '';\n\n\t// Define $bookmarks\n\tif (empty($conf->bookmark->enabled) || empty($user->rights->bookmark->lire)) {\n\t\treturn $html;\n\t}\n\n\tif (!defined('JS_JQUERY_DISABLE_DROPDOWN') && !empty($conf->use_javascript_ajax)) {\t    // This may be set by some pages that use different jquery version to avoid errors\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php';\n\t\t$langs->load(\"bookmarks\");\n\n\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t$html .= '<div id=\"topmenu-bookmark-dropdown\" class=\"dropdown inline-block\">';\n\t\t\t$html .= printDropdownBookmarksList();\n\t\t\t$html .= '</div>';\n\t\t} else {\n\t\t\t$html .= '<!-- div for bookmark link -->\n\t        <div id=\"topmenu-bookmark-dropdown\" class=\"dropdown inline-block\">\n\t            <a class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\" href=\"#\" title=\"'.$langs->trans('Bookmarks').' ('.$langs->trans('BookmarksMenuShortCut').')\">\n\t                <i class=\"fa fa-star\" ></i>\n\t            </a>\n\t            <div class=\"dropdown-menu\">\n\t                '.printDropdownBookmarksList().'\n\t            </div>\n\t        </div>';\n\n\t\t\t$html .= '\n\t        <!-- Code to show/hide the bookmark drop-down -->\n\t        <script>\n\t        $( document ).ready(function() {\n\t            $(document).on(\"click\", function(event) {\n\t                if (!$(event.target).closest(\"#topmenu-bookmark-dropdown\").length) {\n\t\t\t\t\t\t//console.log(\"close bookmark dropdown - we click outside\");\n\t                    // Hide the menus.\n\t                    $(\"#topmenu-bookmark-dropdown\").removeClass(\"open\");\n\t                }\n\t            });\n\n\t            $(\"#topmenu-bookmark-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n\t\t\t\t\tconsole.log(\"toggle bookmark dropdown\");\n\t\t\t\t\topenBookMarkDropDown();\n\t            });\n\n\t            // Key map shortcut\n\t            $(document).keydown(function(e){\n\t                  if( e.which === 77 && e.ctrlKey && e.shiftKey ){\n\t                     console.log(\\'control + shift + m : trigger open bookmark dropdown\\');\n\t                     openBookMarkDropDown();\n\t                  }\n\t            });\n\n\n\t            var openBookMarkDropDown = function() {\n\t                event.preventDefault();\n\t                $(\"#topmenu-bookmark-dropdown\").toggleClass(\"open\");\n\t                $(\"#top-bookmark-search-input\").focus();\n\t            }\n\n\t        });\n\t        </script>\n\t        ';\n\t\t}\n\t}\n\treturn $html;\n}\n\n/**\n * Build the tooltip on top menu tsearch\n *\n * @return  string                  HTML content\n */\nfunction top_menu_search()\n{\n\tglobal $langs, $conf, $db, $user, $hookmanager;\n\n\t$html = '';\n\n\t$usedbyinclude = 1;\n\t$arrayresult = null;\n\tinclude DOL_DOCUMENT_ROOT.'/core/ajax/selectsearchbox.php'; // This set $arrayresult\n\n\t$defaultAction = '';\n\t$buttonList = '<div class=\"dropdown-global-search-button-list\" >';\n\t// Menu with all searchable items\n\tforeach ($arrayresult as $keyItem => $item) {\n\t\tif (empty($defaultAction)) {\n\t\t\t$defaultAction = $item['url'];\n\t\t}\n\t\t$buttonList .= '<button class=\"dropdown-item global-search-item\" data-target=\"'.dol_escape_htmltag($item['url']).'\" >';\n\t\t$buttonList .= $item['text'];\n\t\t$buttonList .= '</button>';\n\t}\n\t$buttonList .= '</div>';\n\n\n\t$searchInput = '<input name=\"sall\" id=\"top-global-search-input\" class=\"dropdown-search-input\" placeholder=\"'.$langs->trans('Search').'\" autocomplete=\"off\" >';\n\n\t$dropDownHtml = '<form id=\"top-menu-action-search\" name=\"actionsearch\" method=\"GET\" action=\"'.$defaultAction.'\" >';\n\n\t$dropDownHtml .= '\n        <!-- search input -->\n        <div class=\"dropdown-header search-dropdown-header\">\n            ' . $searchInput.'\n        </div>\n    ';\n\n\t$dropDownHtml .= '\n        <!-- Menu Body -->\n        <div class=\"dropdown-body search-dropdown-body\">\n        '.$buttonList.'\n        </div>\n        ';\n\n\t$dropDownHtml .= '</form>';\n\n\n\t$html .= '<!-- div for Global Search -->\n    <div id=\"topmenu-global-search-dropdown\" class=\"atoplogin dropdown inline-block\">\n        <a class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\" href=\"#\" title=\"'.$langs->trans('Search').' ('.$langs->trans('SearchMenuShortCut').')\">\n            <i class=\"fa fa-search\" ></i>\n        </a>\n        <div class=\"dropdown-menu dropdown-search\">\n            '.$dropDownHtml.'\n        </div>\n    </div>';\n\n\t$html .= '\n    <!-- Code to show/hide the user drop-down -->\n    <script>\n    $( document ).ready(function() {\n\n        // prevent submiting form on press ENTER\n        $(\"#top-global-search-input\").keydown(function (e) {\n            if (e.keyCode == 13) {\n                var inputs = $(this).parents(\"form\").eq(0).find(\":button\");\n                if (inputs[inputs.index(this) + 1] != null) {\n                    inputs[inputs.index(this) + 1].focus();\n                }\n                e.preventDefault();\n                return false;\n            }\n        });\n\n        // arrow key nav\n        $(document).keydown(function(e) {\n\t\t\t// Get the focused element:\n\t\t\tvar $focused = $(\":focus\");\n\t\t\tif($focused.length && $focused.hasClass(\"global-search-item\")){\n\n           \t\t// UP - move to the previous line\n\t\t\t\tif (e.keyCode == 38) {\n\t\t\t\t    e.preventDefault();\n\t\t\t\t\t$focused.prev().focus();\n\t\t\t\t}\n\n\t\t\t\t// DOWN - move to the next line\n\t\t\t\tif (e.keyCode == 40) {\n\t\t\t\t    e.preventDefault();\n\t\t\t\t\t$focused.next().focus();\n\t\t\t\t}\n\t\t\t}\n        });\n\n\n        // submit form action\n        $(\".dropdown-global-search-button-list .global-search-item\").on(\"click\", function(event) {\n            $(\"#top-menu-action-search\").attr(\"action\", $(this).data(\"target\"));\n            $(\"#top-menu-action-search\").submit();\n        });\n\n        // close drop down\n        $(document).on(\"click\", function(event) {\n\t\t\tif (!$(event.target).closest(\"#topmenu-global-search-dropdown\").length) {\n\t\t\t\tconsole.log(\"click close search - we click outside\");\n                // Hide the menus.\n                $(\"#topmenu-global-search-dropdown\").removeClass(\"open\");\n            }\n        });\n\n        // Open drop down\n        $(\"#topmenu-global-search-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n\t\t\tconsole.log(\"toggle search dropdown\");\n            openGlobalSearchDropDown();\n        });\n\n        // Key map shortcut\n        $(document).keydown(function(e){\n              if( e.which === 70 && e.ctrlKey && e.shiftKey ){\n                 console.log(\\'control + shift + f : trigger open global-search dropdown\\');\n                 openGlobalSearchDropDown();\n              }\n        });\n\n\n        var openGlobalSearchDropDown = function() {\n            $(\"#topmenu-global-search-dropdown\").toggleClass(\"open\");\n            $(\"#top-global-search-input\").focus();\n        }\n\n    });\n    </script>\n    ';\n\n\treturn $html;\n}\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \tFor other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename = '', $notused = '', $menu_array_after = '', $leftmenuwithoutmainarea = 0, $title = '', $acceptdelayedhtml = 0)\n{\n\tglobal $user, $conf, $langs, $db, $form;\n\tglobal $hookmanager, $menumanager;\n\n\t$searchform = '';\n\t$bookmarks = '';\n\n\tif (!empty($menu_array_before)) {\n\t\tdol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\t}\n\n\tif (empty($conf->dol_hide_leftmenu) && (!defined('NOREQUIREMENU') || !constant('NOREQUIREMENU'))) {\n\t\t// Instantiate hooks for external modules\n\t\t$hookmanager->initHooks(array('searchform', 'leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$conf->global->MAIN_USE_OLD_SEARCH_FORM = 1; // Select into select2 is awfull on smartphone. TODO Is this still true with select2 v4 ?\n\t\t}\n\n\t\tprint \"\\n\";\n\n\t\tif (!is_object($form)) {\n\t\t\t$form = new Form($db);\n\t\t}\n\t\t$selected = -1;\n\t\tif (empty($conf->global->MAIN_USE_TOP_MENU_SEARCH_DROPDOWN)) {\n\t\t\t$usedbyinclude = 1;\n\t\t\t$arrayresult = null;\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/ajax/selectsearchbox.php'; // This set $arrayresult\n\n\t\t\tif ($conf->use_javascript_ajax && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM)) {\n\t\t\t\t$searchform .= $form->selectArrayFilter('searchselectcombo', $arrayresult, $selected, '', 1, 0, (empty($conf->global->MAIN_SEARCHBOX_CONTENT_LOADED_BEFORE_KEY) ? 1 : 0), 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t\t\t} else {\n\t\t\t\tif (is_array($arrayresult)) {\n\t\t\t\t\tforeach ($arrayresult as $key => $val) {\n\t\t\t\t\t\t$searchform .= printSearchForm($val['url'], $val['url'], $val['label'], 'maxwidth125', 'sall', $val['shortcut'], 'searchleft'.$key, $val['img']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Execute hook printSearchForm\n\t\t\t$parameters = array('searchform' => $searchform);\n\t\t\t$reshook = $hookmanager->executeHooks('printSearchForm', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\t\tif (empty($reshook)) {\n\t\t\t\t$searchform .= $hookmanager->resPrint;\n\t\t\t} else {\n\t\t\t\t$searchform = $hookmanager->resPrint;\n\t\t\t}\n\n\t\t\t// Force special value for $searchform\n\t\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) || empty($conf->use_javascript_ajax)) {\n\t\t\t\t$urltosearch = DOL_URL_ROOT.'/core/search_page.php?showtitlebefore=1';\n\t\t\t\t$searchform = '<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"'.$urltosearch.'\" accesskey=\"s\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div></div>';\n\t\t\t} elseif ($conf->use_javascript_ajax && !empty($conf->global->MAIN_USE_OLD_SEARCH_FORM)) {\n\t\t\t\t$searchform = '<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t\t\t\t$searchform .= '<script>\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t\t\t\t$searchform .= '</div>';\n\t\t\t}\n\t\t}\n\n\t\t// Left column\n\t\tprint '<!-- Begin left menu -->'.\"\\n\";\n\n\t\tprint '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) ? '' : ' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n\t\t// Show left menu with other forms\n\t\t$menumanager->menu_array = $menu_array_before;\n\t\t$menumanager->menu_array_after = $menu_array_after;\n\t\t$menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n\t\t// Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin Help Block-->\\n\";\n\t\tprint '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n\t\t// Version\n\t\tif (!empty($conf->global->MAIN_SHOW_VERSION)) {    // Version is already on help picto and on login page.\n\t\t\t$doliurl = 'https://www.dolibarr.org';\n\t\t\t//local communities\n\t\t\tif (preg_match('/fr/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.fr';\n\t\t\t}\n\t\t\tif (preg_match('/es/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.es';\n\t\t\t}\n\t\t\tif (preg_match('/de/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.de';\n\t\t\t}\n\t\t\tif (preg_match('/it/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.it';\n\t\t\t}\n\t\t\tif (preg_match('/gr/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.gr';\n\t\t\t}\n\n\t\t\t$appli = constant('DOL_APPLICATION_TITLE');\n\t\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE; $doliurl = '';\n\t\t\t\tif (preg_match('/\\d\\.\\d/', $appli)) {\n\t\t\t\t\tif (!preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) {\n\t\t\t\t\t\t$appli .= \" (\".DOL_VERSION.\")\"; // If new title contains a version that is different than core\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t\t}\n\t\t\tprint '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n\t\t\tif ($doliurl) {\n\t\t\t\tprint '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$doliurl.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<span class=\"help\">';\n\t\t\t}\n\t\t\tprint $appli;\n\t\t\tif ($doliurl) {\n\t\t\t\tprint '</a>';\n\t\t\t} else {\n\t\t\t\tprint '</span>';\n\t\t\t}\n\t\t\tprint '</div>'.\"\\n\";\n\t\t}\n\n\t\t// Link to bugtrack\n\t\tif (!empty($conf->global->MAIN_BUGTRACK_ENABLELINK)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\tif ($conf->global->MAIN_BUGTRACK_ENABLELINK == 'github') {\n\t\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new?labels=Bug';\n\t\t\t\t$bugbaseurl .= '&title=';\n\t\t\t\t$bugbaseurl .= urlencode(\"Bug: \");\n\t\t\t\t$bugbaseurl .= '&body=';\n\t\t\t\t$bugbaseurl .= urlencode(\"# Instructions\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"*This is a template to help you report good issues. You may use [Github Markdown](https://help.github.com/articles/getting-started-with-writing-and-formatting-on-github/) syntax to format your issue report.*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"*Please:*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- *replace the bracket enclosed texts with meaningful information*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- *remove any unused sub-section*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Short description*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Environment\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **URL(s)**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Expected and actual behavior\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Verbose description*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Steps to reproduce the behavior\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Verbose description*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## [Attached files](https://help.github.com/articles/issue-attachments) (Screenshots, screencasts, dolibarr.log, debugging informations\u2026)\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Files*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Report\\n\");\n\t\t\t} elseif (!empty($conf->global->MAIN_BUGTRACK_ENABLELINK)) {\n\t\t\t\t$bugbaseurl = $conf->global->MAIN_BUGTRACK_ENABLELINK;\n\t\t\t} else {\n\t\t\t\t$bugbaseurl = \"\";\n\t\t\t}\n\n\t\t\t// Execute hook printBugtrackInfo\n\t\t\t$parameters = array('bugbaseurl' => $bugbaseurl);\n\t\t\t$reshook = $hookmanager->executeHooks('printBugtrackInfo', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\t\tif (empty($reshook)) {\n\t\t\t\t$bugbaseurl .= $hookmanager->resPrint;\n\t\t\t} else {\n\t\t\t\t$bugbaseurl = $hookmanager->resPrint;\n\t\t\t}\n\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End Help Block-->\\n\";\n\t\tprint \"\\n\";\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End left menu -->\\n\";\n\t\tprint \"\\n\";\n\n\t\t// Execute hook printLeftBlock\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('printLeftBlock', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tprint $hookmanager->resPrint;\n\n\t\tprint '</div></div> <!-- End side-nav id-left -->'; // End div id=\"side-nav\" div id=\"id-left\"\n\t}\n\n\tprint \"\\n\";\n\tprint '<!-- Begin right area -->'.\"\\n\";\n\n\tif (empty($leftmenuwithoutmainarea)) {\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title = '')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) {\n\t\tprint '<div id=\"id-right\">';\n\t}\n\n\tprint \"\\n\";\n\n\tprint '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n\tif (!empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) {\n\t\tprint info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\", $conf->global->MAIN_ONLY_LOGIN_ALLOWED), 0, 0, 1, 'warning maintenancemode');\n\t}\n\n\t// Permit to add user company information on each printed document by setting SHOW_SOCINFO_ON_PRINT\n\tif (!empty($conf->global->SHOW_SOCINFO_ON_PRINT) && GETPOST('optioncss', 'aZ09') == 'print' && empty(GETPOST('disable_show_socinfo_on_print', 'az09'))) {\n\t\tglobal $hookmanager;\n\t\t$hookmanager->initHooks(array('main'));\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('showSocinfoOnPrint', $parameters);\n\t\tif (empty($reshook)) {\n\t\t\tprint '<!-- Begin show mysoc info header -->'.\"\\n\";\n\t\t\tprint '<div id=\"mysoc-info-header\">'.\"\\n\";\n\t\t\tprint '<table class=\"centpercent div-table-responsive\">'.\"\\n\";\n\t\t\tprint '<tbody>';\n\t\t\tprint '<tr><td rowspan=\"0\" class=\"width20p\">';\n\t\t\tif ($conf->global->MAIN_SHOW_LOGO && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && !empty($conf->global->MAIN_INFO_SOCIETE_LOGO)) {\n\t\t\t\tprint '<img id=\"mysoc-info-header-logo\" style=\"max-width:100%\" alt=\"\" src=\"'.DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=mycompany&amp;file='.urlencode('logos/'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_LOGO)).'\">';\n\t\t\t}\n\t\t\tprint '</td><td  rowspan=\"0\" class=\"width50p\"></td></tr>'.\"\\n\";\n\t\t\tprint '<tr><td class=\"titre bold\">'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_NOM).'</td></tr>'.\"\\n\";\n\t\t\tprint '<tr><td>'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_ADDRESS).'<br>'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_ZIP).' '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_TOWN).'</td></tr>'.\"\\n\";\n\t\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_TEL)) {\n\t\t\t\tprint '<tr><td style=\"padding-left: 1em\" class=\"small\">'.$langs->trans(\"Phone\").' : '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_TEL).'</td></tr>';\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_MAIL)) {\n\t\t\t\tprint '<tr><td style=\"padding-left: 1em\" class=\"small\">'.$langs->trans(\"Email\").' : '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_MAIL).'</td></tr>';\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_WEB)) {\n\t\t\t\tprint '<tr><td style=\"padding-left: 1em\" class=\"small\">'.$langs->trans(\"Web\").' : '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_WEB).'</td></tr>';\n\t\t\t}\n\t\t\tprint '</tbody>';\n\t\t\tprint '</table>'.\"\\n\";\n\t\t\tprint '</div>'.\"\\n\";\n\t\t\tprint '<!-- End show mysoc info header -->'.\"\\n\";\n\t\t}\n\t}\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename, $langs)\n{\n\t$helpbaseurl = '';\n\t$helppage = '';\n\t$mode = '';\n\n\tif (preg_match('/^http/i', $helppagename)) {\n\t\t// If complete URL\n\t\t$helpbaseurl = '%s';\n\t\t$helppage = $helppagename;\n\t\t$mode = 'local';\n\t} else {\n\t\t// If WIKI URL\n\t\t$reg = array();\n\t\tif (preg_match('/^es/i', $langs->defaultlang)) {\n\t\t\t$helpbaseurl = 'http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/ES:([^|]+)/i', $helppagename, $reg)) {\n\t\t\t\t$helppage = $reg[1];\n\t\t\t}\n\t\t}\n\t\tif (preg_match('/^fr/i', $langs->defaultlang)) {\n\t\t\t$helpbaseurl = 'http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/FR:([^|]+)/i', $helppagename, $reg)) {\n\t\t\t\t$helppage = $reg[1];\n\t\t\t}\n\t\t}\n\t\tif (empty($helppage)) {\t// If help page not already found\n\t\t\t$helpbaseurl = 'http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/EN:([^|]+)/i', $helppagename, $reg)) {\n\t\t\t\t$helppage = $reg[1];\n\t\t\t}\n\t\t}\n\t\t$mode = 'wiki';\n\t}\n\treturn array('helpbaseurl'=>$helpbaseurl, 'helppage'=>$helppage, 'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area.\n *  Used when the javascript quick search is not used.\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @param\tstring\t$showtitlebefore\tShow title before input text instead of into placeholder. This can be set when output is dedicated for text browsers.\n *  @param\tstring\t$autofocus\t\t\tSet autofocus on field\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey = '', $prefhtmlinputname = '', $img = '', $showtitlebefore = 0, $autofocus = 0)\n{\n\tglobal $conf, $langs, $user;\n\n\t$ret = '';\n\t$ret .= '<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform nowraponall tagtr\">';\n\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t$ret .= '<input type=\"hidden\" name=\"mode\" value=\"search\">';\n\t$ret .= '<input type=\"hidden\" name=\"savelogin\" value=\"'.dol_escape_htmltag($user->login).'\">';\n\tif ($showtitlebefore) {\n\t\t$ret .= '<div class=\"tagtd left\">'.$title.'</div> ';\n\t}\n\t$ret .= '<div class=\"tagtd\">';\n\t$ret .= img_picto('', $img, '', false, 0, 0, '', 'paddingright width20');\n\t$ret .= '<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n\t$ret .= ' style=\"background-repeat: no-repeat; background-position: 3px;\"';\n\t$ret .= ($accesskey ? ' accesskey=\"'.$accesskey.'\"' : '');\n\t$ret .= ' placeholder=\"'.strip_tags($title).'\"';\n\t$ret .= ($autofocus ? ' autofocus' : '');\n\t$ret .= ' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n\t$ret .= '<button type=\"submit\" class=\"button bordertransp\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\">';\n\t$ret .= '<span class=\"fa fa-search\"></span>';\n\t$ret .= '</button>';\n\t$ret .= '</div>';\n\t$ret .= \"</form>\\n\";\n\treturn $ret;\n}\n\n\nif (!function_exists(\"llxFooter\")) {\n\t/**\n\t * Show HTML footer\n\t * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n\t * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n\t *\n\t * @param\tstring\t$comment    \t\t\t\tA text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t\t\t\t\t'private' (for private pages) or 'public' (for public pages)\n\t * @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n\t * @return\tvoid\n\t */\n\tfunction llxFooter($comment = '', $zone = 'private', $disabledoutputofmessages = 0)\n\t{\n\t\tglobal $conf, $db, $langs, $user, $mysoc, $object;\n\t\tglobal $delayedhtmlcontent;\n\t\tglobal $contextpage, $page, $limit;\n\t\tglobal $dolibarr_distrib;\n\n\t\t$ext = 'layout='.$conf->browser->layout.'&version='.urlencode(DOL_VERSION);\n\n\t\t// Global html output events ($mesgs, $errors, $warnings)\n\t\tdol_htmloutput_events($disabledoutputofmessages);\n\n\t\t// Code for search criteria persistence.\n\t\t// $user->lastsearch_values was set by the GETPOST when form field search_xxx exists\n\t\tif (is_object($user) && !empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp)) {\n\t\t\t// Clean and save data\n\t\t\tforeach ($user->lastsearch_values_tmp as $key => $val) {\n\t\t\t\tunset($_SESSION['lastsearch_values_tmp_'.$key]); // Clean array to rebuild it just after\n\t\t\t\tif (count($val) && empty($_POST['button_removefilter'])) {\t// If there is search criteria to save and we did not click on 'Clear filter' button\n\t\t\t\t\tif (empty($val['sortfield'])) {\n\t\t\t\t\t\tunset($val['sortfield']);\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($val['sortorder'])) {\n\t\t\t\t\t\tunset($val['sortorder']);\n\t\t\t\t\t}\n\t\t\t\t\tdol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criterias)\");\n\t\t\t\t\t$_SESSION['lastsearch_values_tmp_'.$key] = json_encode($val);\n\t\t\t\t\tunset($_SESSION['lastsearch_values_'.$key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t// Clean $relativepathstring\n\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t}\n\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\tif (preg_match('/list\\.php$/', $relativepathstring)) {\n\t\t\tunset($_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_page_tmp_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_limit_tmp_'.$relativepathstring]);\n\n\t\t\tif (!empty($contextpage)) {\n\t\t\t\t$_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring] = $contextpage;\n\t\t\t}\n\t\t\tif (!empty($page) && $page > 0) {\n\t\t\t\t$_SESSION['lastsearch_page_tmp_'.$relativepathstring] = $page;\n\t\t\t}\n\t\t\tif (!empty($limit) && $limit != $conf->liste_limit) {\n\t\t\t\t$_SESSION['lastsearch_limit_tmp_'.$relativepathstring] = $limit;\n\t\t\t}\n\n\t\t\tunset($_SESSION['lastsearch_contextpage_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_page_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_limit_'.$relativepathstring]);\n\t\t}\n\n\t\t// Core error message\n\t\tif (!empty($conf->global->MAIN_CORE_ERROR)) {\n\t\t\t// Ajax version\n\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t$title = img_warning().' '.$langs->trans('CoreErrorTitle');\n\t\t\t\tprint ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n\t\t\t} else {\n\t\t\t\t// html version\n\t\t\t\t$msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n\t\t\t\tprint '<div class=\"error\">'.$msg.'</div>';\n\t\t\t}\n\n\t\t\t//define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n\t\t}\n\n\t\tprint \"\\n\\n\";\n\n\t\tprint '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) {\n\t\t\tprint '</div> <!-- End div id-right -->'.\"\\n\"; // End div id-right\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) {\n\t\t\tprint '</div> <!-- End div id-container -->'.\"\\n\"; // End div container\n\t\t}\n\n\t\tprint \"\\n\";\n\t\tif ($comment) {\n\t\t\tprint '<!-- '.$comment.' -->'.\"\\n\";\n\t\t}\n\n\t\tprintCommonFooter($zone);\n\n\t\tif (!empty($delayedhtmlcontent)) {\n\t\t\tprint $delayedhtmlcontent;\n\t\t}\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint \"\\n\".'<!-- Includes JS Footer of Dolibarr -->'.\"\\n\";\n\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/lib_foot.js.php?lang='.$langs->defaultlang.($ext ? '&'.$ext : '').'\"></script>'.\"\\n\";\n\t\t}\n\n\t\t// Wrapper to add log when clicking on download or preview\n\t\tif (!empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0) {\n\t\t\tif (in_array($object->element, array('facture'))) {       // Restrict for the moment to element 'facture'\n\t\t\t\tprint \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n\t\t\t\t?>\n\t\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\t$('a.documentpreview').click(function() {\n\t\t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n\t\t\t\t\t\t\t\t, {\n\t\t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n\t\t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n\t\t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\t$('a.documentdownload').click(function() {\n\t\t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n\t\t\t\t\t\t\t\t, {\n\t\t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n\t\t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n\t\t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<?php\n\t\t\t}\n\t\t}\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n\t\t// Add code for the asynchronous anonymous first ping (for telemetry)\n\t\t// You can use &forceping=1 in parameters to force the ping if the ping was already sent.\n\t\t$forceping = GETPOST('forceping', 'alpha');\n\t\tif (($_SERVER[\"PHP_SELF\"] == DOL_URL_ROOT.'/index.php') || $forceping) {\n\t\t\t//print '<!-- instance_unique_id='.$conf->file->instance_unique_id.' MAIN_FIRST_PING_OK_ID='.$conf->global->MAIN_FIRST_PING_OK_ID.' -->';\n\t\t\t$hash_unique_id = md5('dolibarr'.$conf->file->instance_unique_id);\n\t\t\tif (empty($conf->global->MAIN_FIRST_PING_OK_DATE)\n\t\t\t\t|| (!empty($conf->file->instance_unique_id) && ($hash_unique_id != $conf->global->MAIN_FIRST_PING_OK_ID) && ($conf->global->MAIN_FIRST_PING_OK_ID != 'disabled'))\n\t\t\t|| $forceping) {\n\t\t\t\t// No ping done if we are into an alpha version\n\t\t\t\tif (strpos('alpha', DOL_VERSION) > 0 && !$forceping) {\n\t\t\t\t\tprint \"\\n<!-- NO JS CODE TO ENABLE the anonymous Ping. It is an alpha version -->\\n\";\n\t\t\t\t} elseif (empty($_COOKIE['DOLINSTALLNOPING_'.$hash_unique_id]) || $forceping) {\t// Cookie is set when we uncheck the checkbox in the installation wizard.\n\t\t\t\t\t// MAIN_LAST_PING_KO_DATE\n\t\t\t\t\t// Disable ping if MAIN_LAST_PING_KO_DATE is set and is recent\n\t\t\t\t\tif (!empty($conf->global->MAIN_LAST_PING_KO_DATE) && substr($conf->global->MAIN_LAST_PING_KO_DATE, 0, 6) == dol_print_date(dol_now(), '%Y%m') && !$forceping) {\n\t\t\t\t\t\tprint \"\\n<!-- NO JS CODE TO ENABLE the anonymous Ping. An error already occured this month, we will try later. -->\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t\t\t\tprint \"\\n\".'<!-- Includes JS for Ping of Dolibarr forceping='.$forceping.' MAIN_FIRST_PING_OK_DATE='.getDolGlobalString(\"MAIN_FIRST_PING_OK_DATE\").' MAIN_FIRST_PING_OK_ID='.getDolGlobalString(\"MAIN_FIRST_PING_OK_ID\").' MAIN_LAST_PING_KO_DATE='.getDolGlobalString(\"MAIN_LAST_PING_KO_DATE\").' -->'.\"\\n\";\n\t\t\t\t\t\tprint \"\\n<!-- JS CODE TO ENABLE the anonymous Ping -->\\n\";\n\t\t\t\t\t\t$url_for_ping = (empty($conf->global->MAIN_URL_FOR_PING) ? \"https://ping.dolibarr.org/\" : $conf->global->MAIN_URL_FOR_PING);\n\t\t\t\t\t\t// Try to guess the distrib used\n\t\t\t\t\t\t$distrib = 'standard';\n\t\t\t\t\t\tif ($_SERVER[\"SERVER_ADMIN\"] == 'doliwamp@localhost') {\n\t\t\t\t\t\t\t$distrib = 'doliwamp';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!empty($dolibarr_distrib)) {\n\t\t\t\t\t\t\t$distrib = $dolibarr_distrib;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<script>\n\t\t\t\t\t\t\tjQuery(document).ready(function (tmp) {\n\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t  method: \"POST\",\n\t\t\t\t\t\t\t\t\t  url: \"<?php echo $url_for_ping ?>\",\n\t\t\t\t\t\t\t\t\t  timeout: 500,     // timeout milliseconds\n\t\t\t\t\t\t\t\t\t  cache: false,\n\t\t\t\t\t\t\t\t\t  data: {\n\t\t\t\t\t\t\t\t\t\t  hash_algo: 'md5',\n\t\t\t\t\t\t\t\t\t\t  hash_unique_id: '<?php echo dol_escape_js($hash_unique_id); ?>',\n\t\t\t\t\t\t\t\t\t\t  action: 'dolibarrping',\n\t\t\t\t\t\t\t\t\t\t  version: '<?php echo (float) DOL_VERSION; ?>',\n\t\t\t\t\t\t\t\t\t\t  entity: '<?php echo (int) $conf->entity; ?>',\n\t\t\t\t\t\t\t\t\t\t  dbtype: '<?php echo dol_escape_js($db->type); ?>',\n\t\t\t\t\t\t\t\t\t\t  country_code: '<?php echo $mysoc->country_code ? dol_escape_js($mysoc->country_code) : 'unknown'; ?>',\n\t\t\t\t\t\t\t\t\t\t  php_version: '<?php echo dol_escape_js(phpversion()); ?>',\n\t\t\t\t\t\t\t\t\t\t  os_version: '<?php echo dol_escape_js(version_os('smr')); ?>',\n\t\t\t\t\t\t\t\t\t\t  distrib: '<?php echo $distrib ? dol_escape_js($distrib) : 'unknown'; ?>',\n\t\t\t\t\t\t\t\t\t\t  token: 'notrequired'\n\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t  success: function (data, status, xhr) {   // success callback function (data contains body of response)\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Ping ok\");\n\t\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\t\t\t\turl: '<?php echo DOL_URL_ROOT.'/core/ajax/pingresult.php'; ?>',\n\t\t\t\t\t\t\t\t\t\t\t\ttimeout: 500,     // timeout milliseconds\n\t\t\t\t\t\t\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\t\t\t\t\t\t\tdata: { hash_algo: 'md5', hash_unique_id: '<?php echo dol_escape_js($hash_unique_id); ?>', action: 'firstpingok', token: 'notrequired' },\t// for update\n\t\t\t\t\t\t\t\t\t\t\t  });\n\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t  error: function (data,status,xhr) {   // error callback function\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Ping ko: \" + data);\n\t\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\t\t  method: 'GET',\n\t\t\t\t\t\t\t\t\t\t\t\t  url: '<?php echo DOL_URL_ROOT.'/core/ajax/pingresult.php'; ?>',\n\t\t\t\t\t\t\t\t\t\t\t\t  timeout: 500,     // timeout milliseconds\n\t\t\t\t\t\t\t\t\t\t\t\t  cache: false,\n\t\t\t\t\t\t\t\t\t\t\t\t  data: { hash_algo: 'md5', hash_unique_id: '<?php echo dol_escape_js($hash_unique_id); ?>', action: 'firstpingko', token: 'notrequired' },\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t</script>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$now = dol_now();\n\t\t\t\t\tprint \"\\n<!-- NO JS CODE TO ENABLE the anonymous Ping. It was disabled -->\\n\";\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\n\t\t\t\t\tdolibarr_set_const($db, 'MAIN_FIRST_PING_OK_DATE', dol_print_date($now, 'dayhourlog', 'gmt'), 'chaine', 0, '', $conf->entity);\n\t\t\t\t\tdolibarr_set_const($db, 'MAIN_FIRST_PING_OK_ID', 'disabled', 'chaine', 0, '', $conf->entity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprint \"</body>\\n\";\n\t\tprint \"</html>\\n\";\n\t}\n}\n", "<?php\n/* Copyright (C) 2010 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n * or see https://www.gnu.org/\n */\n\n/**\n *      \\file       test/phpunit/SecurityTest.php\n *\t\t\\ingroup    test\n *      \\brief      PHPUnit test\n *\t\t\\remarks\tTo run this script as CLI:  phpunit filename.php\n */\n\nglobal $conf,$user,$langs,$db;\n//define('TEST_DB_FORCE_TYPE','mysql');\t// This is to force using mysql driver\n//require_once 'PHPUnit/Autoload.php';\n\nif (! defined('NOREQUIRESOC')) {\n\tdefine('NOREQUIRESOC', '1');\n}\nif (! defined('NOCSRFCHECK')) {\n\tdefine('NOCSRFCHECK', '1');\n}\nif (! defined('NOTOKENRENEWAL')) {\n\tdefine('NOTOKENRENEWAL', '1');\n}\nif (! defined('NOREQUIREMENU')) {\n\tdefine('NOREQUIREMENU', '1'); // If there is no menu to show\n}\nif (! defined('NOREQUIREHTML')) {\n\tdefine('NOREQUIREHTML', '1'); // If we don't need to load the html.form.class.php\n}\nif (! defined('NOREQUIREAJAX')) {\n\tdefine('NOREQUIREAJAX', '1');\n}\nif (! defined(\"NOLOGIN\")) {\n\tdefine(\"NOLOGIN\", '1');       // If this page is public (can be called outside logged session)\n}\nif (! defined(\"NOSESSION\")) {\n\tdefine(\"NOSESSION\", '1');\n}\n\nrequire_once dirname(__FILE__).'/../../htdocs/main.inc.php';\nrequire_once dirname(__FILE__).'/../../htdocs/core/lib/security.lib.php';\nrequire_once dirname(__FILE__).'/../../htdocs/core/lib/security2.lib.php';\n\n\nif (empty($user->id)) {\n\tprint \"Load permissions for admin user nb 1\\n\";\n\t$user->fetch(1);\n\t$user->getrights();\n}\n$conf->global->MAIN_DISABLE_ALL_MAILS=1;\n\n\n/**\n * Class for PHPUnit tests\n *\n * @backupGlobals disabled\n * @backupStaticAttributes enabled\n * @remarks\tbackupGlobals must be disabled to have db,conf,user and lang not erased.\n */\nclass SecurityTest extends PHPUnit\\Framework\\TestCase\n{\n\tprotected $savconf;\n\tprotected $savuser;\n\tprotected $savlangs;\n\tprotected $savdb;\n\n\t/**\n\t * Constructor\n\t * We save global variables into local variables\n\t *\n\t * @return SecurityTest\n\t */\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\n\t\t//$this->sharedFixture\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$this->savconf=$conf;\n\t\t$this->savuser=$user;\n\t\t$this->savlangs=$langs;\n\t\t$this->savdb=$db;\n\n\t\tprint __METHOD__.\" db->type=\".$db->type.\" user->id=\".$user->id;\n\t\t//print \" - db \".$db->db;\n\t\tprint \"\\n\";\n\t}\n\n\t/**\n\t * setUpBeforeClass\n\t *\n\t * @return void\n\t */\n\tpublic static function setUpBeforeClass()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$db->begin();\t// This is to have all actions inside a transaction even if test launched without suite.\n\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * tearDownAfterClass\n\t *\n\t * @return\tvoid\n\t */\n\tpublic static function tearDownAfterClass()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$db->rollback();\n\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * Init phpunit tests\n\t *\n\t * @return\tvoid\n\t */\n\tprotected function setUp()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * End phpunit tests\n\t *\n\t * @return\tvoid\n\t */\n\tprotected function tearDown()\n\t{\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * testSetLang\n\t *\n\t * @return string\n\t */\n\tpublic function testSetLang()\n\t{\n\t\tglobal $conf;\n\t\t$conf=$this->savconf;\n\n\t\t$tmplangs = new Translate('', $conf);\n\n\t\t$_SERVER['HTTP_ACCEPT_LANGUAGE'] = \"' malicious text with quote\";\n\t\t$tmplangs->setDefaultLang('auto');\n\t\tprint __METHOD__.' $tmplangs->defaultlang='.$tmplangs->defaultlang.\"\\n\";\n\t\t$this->assertEquals($tmplangs->defaultlang, 'malicioustextwithquote_MALICIOUSTEXTWITHQUOTE');\n\t}\n\n\t/**\n\t * testSqlAndScriptInjectWithPHPUnit\n\t *\n\t * @return  void\n\t */\n\tpublic function testSqlAndScriptInjectWithPHPUnit()\n\t{\n\t\t// Run tests\n\t\t// More on https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\n\t\t// Should be OK\n\t\t$expectedresult=0;\n\n\t\t/*\n\t\t$test = '';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual(0, $result, 'Error on testSqlAndScriptInject kkk');\n\t\t*/\n\n\t\t$_SERVER[\"PHP_SELF\"]='/DIR WITH SPACE/htdocs/admin/index.php';\n\t\t$result=testSqlAndScriptInject($_SERVER[\"PHP_SELF\"], 2);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for PHP_SELF that should be ok');\n\n\t\t$test = 'This is a < inside string with < and > also and tag like <a> before the >';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject expected 0b');\n\n\t\t$test = 'This is the union of all for the selection of the best';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject expected 0c');\n\n\t\t// Should detect attack\n\t\t$expectedresult=1;\n\n\t\t$_SERVER[\"PHP_SELF\"]='/DIR WITH SPACE/htdocs/admin/index.php/<svg>';\n\t\t$result=testSqlAndScriptInject($_SERVER[\"PHP_SELF\"], 2);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject for PHP_SELF that should detect XSS');\n\n\t\t$test = 'select @@version';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for SQL1a. Should find an attack on POST param and did not.');\n\n\t\t$test = 'select @@version';\n\t\t$result=testSqlAndScriptInject($test, 1);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for SQL1b. Should find an attack on GET param and did not.');\n\n\t\t$test = '... union ... selection ';\n\t\t$result=testSqlAndScriptInject($test, 1);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for SQL2. Should find an attack on GET param and did not.');\n\n\t\t$test = 'j&#x61;vascript:';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for javascript1. Should find an attack and did not.');\n\n\t\t$test = 'j&#x61vascript:';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for javascript2. Should find an attack and did not.');\n\n\t\t$test = 'javascript&colon&#x3B;alert(1)';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for javascript2');\n\n\t\t$test=\"<img src='1.jpg' onerror =javascript:alert('XSS')>\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa1');\n\n\t\t$test=\"<img src='1.jpg' onerror =javascript:alert('XSS')>\";\n\t\t$result=testSqlAndScriptInject($test, 2);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa2');\n\n\t\t$test='<IMG SRC=# onmouseover=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa3');\n\t\t$test='<IMG SRC onmouseover=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa4');\n\t\t$test='<IMG onmouseover=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa5');\n\t\t$test='<IMG SRC=/ onerror=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa6');\n\t\t$test='<IMG SRC=\" &#14;  javascript:alert(1);\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa7');\n\n\t\t$test='<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject bbb');\n\n\t\t$test='<SCRIPT SRC=http://xss.rocks/xss.js></SCRIPT>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject ccc');\n\n\t\t$test='<IMG SRC=\"javascript:alert(\\'XSS\\');\">';\n\t\t$result=testSqlAndScriptInject($test, 1);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject ddd');\n\n\t\t$test='<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject eee');\n\n\t\t$test='<!-- Google analytics -->\n\t\t\t<script>\n\t\t\t  (function(i,s,o,g,r,a,m){i[\\'GoogleAnalyticsObject\\']=r;i[r]=i[r]||function(){\n\t\t\t  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\t\t\t  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n\t\t\t  })(window,document,\\'script\\',\\'https://www.google-analytics.com/analytics.js\\',\\'ga\\');\n\n\t\t\t  ga(\\'create\\',\\'UA-99999999-9\\', \\'auto\\');\n\t\t\t  ga(\\'send\\', \\'pageview\\');\n\n\t\t\t</script>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject eee');\n\n\t\t$test=\"<IMG SRC=\\\"jav\\tascript:alert('XSS');\\\">\";\t\t// Is locked by some browser like chrome because the default directive no-referrer-when-downgrade is sent when requesting the SRC and then refused because of browser protection on img src load without referrer.\n\t\t$test=\"<IMG SRC=\\\"jav&#x0D;ascript:alert('XSS');\\\">\";\t// Same\n\n\t\t$test='<SCRIPT/XSS SRC=\"http://xss.rocks/xss.js\"></SCRIPT>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject fff1');\n\t\t$test='<SCRIPT/SRC=\"http://xss.rocks/xss.js\"></SCRIPT>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject fff2');\n\n\t\t// This case seems to be filtered by browsers now.\n\t\t$test='<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(1)>';\n\t\t//$result=testSqlAndScriptInject($test, 0);\n\t\t//$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject ggg');\n\n\t\t$test='<iframe src=http://xss.rocks/scriptlet.html <';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject hhh');\n\n\t\t$test='Set.constructor`alert\\x281\\x29```';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject iii');\n\n\t\t$test=\"on<!-- ab\\nc -->error=alert(1)\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject jjj');\n\n\t\t$test=\"<img src=x one<a>rror=alert(document.location)\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject kkk');\n\n\t\t$test=\"<a onpointerdown=alert(document.domain)>XSS</a>\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject lll');\n\t}\n\n\t/**\n\t * testGETPOST\n\t *\n\t * @return string\n\t */\n\tpublic function testGETPOST()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t$_COOKIE[\"id\"]=111;\n\t\t$_GET[\"param1\"]=\"222\";\n\t\t$_POST[\"param1\"]=\"333\";\n\t\t$_GET[\"param2\"]='a/b#e(pr)qq-rr\\cc';\n\t\t$_GET[\"param3\"]='\"&#110;a/b#e(pr)qq-rr\\cc';    // Same than param2 + \" and &#110;\n\t\t$_GET[\"param4\"]='../dir';\n\t\t$_GET[\"param5\"]=\"a_1-b\";\n\t\t$_POST[\"param6\"]=\"&quot;&gt;<svg o&#110;load='console.log(&quot;123&quot;)'&gt;\";\n\t\t$_POST[\"param6b\"]='<<<../>../>../svg><<<../>../>../animate =alert(1)>abc';\n\t\t$_GET[\"param7\"]='\"c:\\this is a path~1\\aaa&#110;\" abc<bad>def</bad>';\n\t\t$_POST[\"param8a\"]=\"Hacker<svg o&#110;load='console.log(&quot;123&quot;)'\";\t// html tag is not closed so it is not detected as html tag but is still harmfull\n\t\t$_POST['param8b']='<img src=x onerror=alert(document.location) t=';\t\t// this is html obfuscated by non closing tag\n\t\t$_POST['param8c']='< with space after is ok';\n\t\t$_POST['param8d']='<abc123 is html to clean';\n\t\t$_POST['param8e']='<123abc is not html to clean';\n\t\t$_POST['param8f']='abc<<svg <><<animate onbegin=alert(document.domain) a';\n\t\t$_POST[\"param9\"]='is_object($object) ? ($object->id < 10 ? round($object->id / 2, 2) : (2 * $user->id) * (int) substr($mysoc->zip, 1, 2)) : \\'objnotdefined\\'';\n\t\t$_POST[\"param10\"]='is_object($object) ? ($object->id < 10 ? round($object->id / 2, 2) : (2 * $user->id) * (int) substr($mysoc->zip, 1, 2)) : \\'<abc>objnotdefined\\'';\n\t\t$_POST[\"param11\"]=' Name <email@email.com> ';\n\t\t$_POST[\"param12\"]='<!DOCTYPE html><html>aaa</html>';\n\t\t$_POST[\"param13\"]='&#110; &#x6E; &gt; &lt; &quot; <a href=\\\"j&#x61;vascript:alert(document.domain)\\\">XSS</a>';\n\t\t$_POST[\"param13b\"]='&#110; &#x6E; &gt; &lt; &quot; <a href=\\\"j&#x61vascript:alert(document.domain)\\\">XSS</a>';\n\t\t//$_POST[\"param13\"]='javascript%26colon%26%23x3B%3Balert(1)';\n\t\t//$_POST[\"param14\"]='javascripT&javascript#x3a alert(1)';\n\n\n\t\t$result=GETPOST('id', 'int');              // Must return nothing\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, '');\n\n\t\t$result=GETPOST(\"param1\", 'int');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 222, 'Test on param1 with no 3rd param');\n\n\t\t$result=GETPOST(\"param1\", 'int', 2);\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 333, 'Test on param1 with 3rd param = 2');\n\n\t\t// Test with alpha\n\n\t\t$result=GETPOST(\"param2\", 'alpha');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, $_GET[\"param2\"], 'Test on param2');\n\n\t\t$result=GETPOST(\"param3\", 'alpha');  // Must return string sanitized from char \"\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 'na/b#e(pr)qq-rr\\cc', 'Test on param3');\n\n\t\t$result=GETPOST(\"param4\", 'alpha');  // Must return string sanitized from ../\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 'dir');\n\n\t\t// Test with aZ09\n\n\t\t$result=GETPOST(\"param1\", 'aZ09');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, $_GET[\"param1\"]);\n\n\t\t$result=GETPOST(\"param2\", 'aZ09');  // Must return '' as string contains car not in aZ09 definition\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, '');\n\n\t\t$result=GETPOST(\"param3\", 'aZ09');  // Must return '' as string contains car not in aZ09 definition\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, '');\n\n\t\t$result=GETPOST(\"param4\", 'aZ09');  // Must return '' as string contains car not in aZ09 definition\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('', $result);\n\n\t\t$result=GETPOST(\"param5\", 'aZ09');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_GET[\"param5\"], $result);\n\n\t\t// Test with nohtml\n\n\t\t$result=GETPOST(\"param6\", 'nohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('\">', $result);\n\n\t\t// Test with alpha = alphanohtml. We must convert the html entities like &#110; and disable all entities\n\n\t\t$result=GETPOST(\"param6\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('>', $result);\n\n\t\t$result=GETPOST(\"param6b\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('abc', $result);\n\n\t\t$result=GETPOST(\"param8a\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(\"Hackersvg onload='console.log(123)'\", $result);\n\n\t\t$result=GETPOST(\"param8b\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('img src=x onerror=alert(document.location) t=', $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8c\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST['param8c'], $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8d\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('abc123 is html to clean', $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8e\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST['param8e'], $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8f\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('abcsvg animate onbegin=alert(document.domain) a', $result, 'Test a string with html tag open with several <');\n\n\t\t$result=GETPOST(\"param9\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST[\"param9\"], $result);\n\n\t\t$result=GETPOST(\"param10\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST[\"param9\"], $result, 'We should get param9 after processing param10');\n\n\t\t$result=GETPOST(\"param11\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(\"Name\", $result, 'Test an email string with alphanohtml');\n\n\t\t$result=GETPOST(\"param13\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('n n > <  XSS', $result, 'Test that html entities are decoded with alpha');\n\n\t\t// Test with alphawithlgt\n\n\t\t$result=GETPOST(\"param11\", 'alphawithlgt');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(trim($_POST[\"param11\"]), $result, 'Test an email string with alphawithlgt');\n\n\t\t// Test with restricthtml we must remove html open/close tag and content but not htmlentities (we can decode html entities for ascii chars like &#110;)\n\n\t\t$result=GETPOST(\"param6\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('&quot;&gt;', $result);\n\n\t\t$result=GETPOST(\"param7\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('\"c:\\this is a path~1\\aaan\" abcdef', $result);\n\n\t\t$result=GETPOST(\"param12\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(trim($_POST[\"param12\"]), $result, 'Test a string with DOCTYPE and restricthtml');\n\n\t\t$result=GETPOST(\"param13\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('n n &gt; &lt; &quot; <a href=\\\"alert(document.domain)\\\">XSS</a>', $result, 'Test that HTML entities are decoded with restricthtml, but only for common alpha chars');\n\n\t\t$result=GETPOST(\"param13b\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('n n &gt; &lt; &quot; <a href=\\\"jvascript:alert(document.domain)\\\">XSS</a>', $result, 'Test that HTML entities are decoded with restricthtml, but only for common alpha chars');\n\n\t\t// Special test for GETPOST of backtopage, backtolist or backtourl parameter\n\n\t\t$_POST[\"backtopage\"]='//www.google.com';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('www.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='https:https://www.google.com';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('www.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtolist\"]='::HTTPS://www.google.com';\n\t\t$result=GETPOST(\"backtolist\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('www.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='http:www.google.com';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('httpwww.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='/mydir/mypage.php?aa=a%10a';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('/mydir/mypage.php?aa=a%10a', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='javascripT&javascript#javascriptxjavascript3a alert(1)';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('x3a alert(1)', $result, 'Test for backtopage param');\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t * testCheckLoginPassEntity\n\t *\n\t * @return\tvoid\n\t */\n\tpublic function testCheckLoginPassEntity()\n\t{\n\t\t$login=checkLoginPassEntity('loginbidon', 'passwordbidon', 1, array('dolibarr'));\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, '');\n\n\t\t$login=checkLoginPassEntity('admin', 'passwordbidon', 1, array('dolibarr'));\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, '');\n\n\t\t$login=checkLoginPassEntity('admin', 'admin', 1, array('dolibarr'));            // Should works because admin/admin exists\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, 'admin', 'The test to check if pass of user \"admin\" is \"admin\" has failed');\n\n\t\t$login=checkLoginPassEntity('admin', 'admin', 1, array('http','dolibarr'));    // Should work because of second authetntication method\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, 'admin');\n\n\t\t$login=checkLoginPassEntity('admin', 'admin', 1, array('forceuser'));\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, '');    // Expected '' because should failed because login 'auto' does not exists\n\t}\n\n\t/**\n\t * testEncodeDecode\n\t *\n\t * @return number\n\t */\n\tpublic function testEncodeDecode()\n\t{\n\t\t$stringtotest=\"This is a string to test encode/decode. This is a string to test encode/decode. This is a string to test encode/decode.\";\n\n\t\t$encodedstring=dol_encode($stringtotest);\n\t\t$decodedstring=dol_decode($encodedstring);\n\t\tprint __METHOD__.\" encodedstring=\".$encodedstring.\" \".base64_encode($stringtotest).\"\\n\";\n\t\t$this->assertEquals($stringtotest, $decodedstring, 'Use dol_encode/decode with no parameter');\n\n\t\t$encodedstring=dol_encode($stringtotest, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\t\t$decodedstring=dol_decode($encodedstring, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\t\tprint __METHOD__.\" encodedstring=\".$encodedstring.\" \".base64_encode($stringtotest).\"\\n\";\n\t\t$this->assertEquals($stringtotest, $decodedstring, 'Use dol_encode/decode with a key parameter');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolStringOnlyTheseHtmlTags\n\t *\n\t * @return number\n\t */\n\tpublic function testDolHTMLEntityDecode()\n\t{\n\t\t$stringtotest = 'a &colon; b &quot; c &#039; d &apos; e &eacute;';\n\t\t$decodedstring = dol_html_entity_decode($stringtotest, ENT_QUOTES);\n\t\t$this->assertEquals('a &colon; b \" c \\' d &apos; e \u00e9', $decodedstring, 'Function did not sanitize correclty');\n\n\t\t$stringtotest = 'a &colon; b &quot; c &#039; d &apos; e &eacute;';\n\t\t$decodedstring = dol_html_entity_decode($stringtotest, ENT_QUOTES|ENT_HTML5);\n\t\t$this->assertEquals('a : b \" c \\' d \\' e \u00e9', $decodedstring, 'Function did not sanitize correclty');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolStringOnlyTheseHtmlTags\n\t *\n\t * @return number\n\t */\n\tpublic function testDolStringOnlyTheseHtmlTags()\n\t{\n\t\t$stringtotest = '<a href=\"javascript:aaa\">bbb\u06b4';\n\t\t$decodedstring = dol_string_onlythesehtmltags($stringtotest, 1, 1, 1);\n\t\t$this->assertEquals('<a href=\"aaa\">bbb\u06b4', $decodedstring, 'Function did not sanitize correclty with test 1');\n\n\t\t$stringtotest = '<a href=\"java'.chr(0).'script:aaa\">bbb\u06b4';\n\t\t$decodedstring = dol_string_onlythesehtmltags($stringtotest, 1, 1, 1);\n\t\t$this->assertEquals('<a href=\"aaa\">bbb\u06b4', $decodedstring, 'Function did not sanitize correclty with test 2');\n\n\t\t$stringtotest = '<a href=\"javascript&colon;aaa\">bbb\u06b4';\n\t\t$decodedstring = dol_string_onlythesehtmltags($stringtotest, 1, 1, 1);\n\t\t$this->assertEquals('<a href=\"aaa\">bbb\u06b4', $decodedstring, 'Function did not sanitize correclty with test 3');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolStringOnlyTheseHtmlAttributes\n\t *\n\t * @return number\n\t */\n\tpublic function testDolStringOnlyTheseHtmlAttributes()\n\t{\n\t\t$stringtotest = '<div onload=\"ee\"><a href=\"123\"><span class=\"abc\">abc</span></a></div>';\n\t\t$decodedstring = dol_string_onlythesehtmlattributes($stringtotest);\n\t\t$decodedstring = preg_replace(\"/\\n$/\", \"\", $decodedstring);\n\t\t$this->assertEquals('<div><a href=\"123\"><span class=\"abc\">abc</span></a></div>', $decodedstring, 'Function did not sanitize correclty with test 1');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testGetRandomPassword\n\t *\n\t * @return number\n\t */\n\tpublic function testGetRandomPassword()\n\t{\n\t\tglobal $conf;\n\n\t\t$genpass1=getRandomPassword(true);\t\t\t\t// Should be a string return by dol_hash (if no option set, will be md5)\n\t\tprint __METHOD__.\" genpass1=\".$genpass1.\"\\n\";\n\t\t$this->assertEquals(strlen($genpass1), 32);\n\n\t\t$genpass1=getRandomPassword(true, array('I'));\t// Should be a string return by dol_hash (if no option set, will be md5)\n\t\tprint __METHOD__.\" genpass1=\".$genpass1.\"\\n\";\n\t\t$this->assertEquals(strlen($genpass1), 32);\n\n\t\t$conf->global->USER_PASSWORD_GENERATED='None';\n\t\t$genpass2=getRandomPassword(false);\t\t\t\t// Should return an empty string\n\t\tprint __METHOD__.\" genpass2=\".$genpass2.\"\\n\";\n\t\t$this->assertEquals($genpass2, '');\n\n\t\t$conf->global->USER_PASSWORD_GENERATED='Standard';\n\t\t$genpass3=getRandomPassword(false);\t\t\t\t// Should return a password of 12 chars\n\t\tprint __METHOD__.\" genpass3=\".$genpass3.\"\\n\";\n\t\t$this->assertEquals(strlen($genpass3), 12);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testRestrictedArea\n\t *\n\t * @return void\n\t */\n\tpublic function testRestrictedArea()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t//$dummyuser=new User($db);\n\t\t//$result=restrictedArea($dummyuser,'societe');\n\n\t\t$result=restrictedArea($user, 'societe');\n\t\t$this->assertEquals(1, $result);\n\t}\n\n\n\t/**\n\t * testGetRandomPassword\n\t *\n\t * @return number\n\t */\n\tpublic function testGetURLContent()\n\t{\n\t\tglobal $conf;\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/geturl.lib.php';\n\n\t\t$url = 'ftp://mydomain.com';\n\t\t$tmp = getURLContent($url);\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertGreaterThan(0, strpos($tmp['curl_error_msg'], 'not supported'));\t// Test error if return does not contains 'not supported'\n\n\t\t$url = 'https://www.dolibarr.fr';\t// This is a redirect 301 page\n\t\t$tmp = getURLContent($url, 'GET', '', 0);\t// We do NOT follow\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(301, $tmp['http_code'], 'GET url 301 without following -> 301');\n\n\t\t$url = 'https://www.dolibarr.fr';\t// This is a redirect 301 page\n\t\t$tmp = getURLContent($url);\t\t// We DO follow\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(200, $tmp['http_code'], 'GET url 301 with following -> 200');\t// Test error if return does not contains 'not supported'\n\n\t\t$url = 'http://localhost';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that resolves to a local URL');\t// Test we receive an error because localtest.me is not an external URL\n\n\t\t$url = 'http://127.0.0.1';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because 127.0.0.1 is not an external URL\n\n\t\t$url = 'http://127.0.2.1';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because 127.0.2.1 is not an external URL\n\n\t\t$url = 'https://169.254.0.1';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because 169.254.0.1 is not an external URL\n\n\t\t$url = 'http://[::1]';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because [::1] is not an external URL\n\n\t\t/*$url = 'localtest.me';\n\t\t $tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\t print __METHOD__.\" url=\".$url.\"\\n\";\n\t\t $this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that resolves to a local URL');\t// Test we receive an error because localtest.me is not an external URL\n\t\t */\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolSanitizeUrl\n\t *\n\t * @return void\n\t */\n\tpublic function testDolSanitizeUrl()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t$test = 'javascripT&javascript#x3a alert(1)';\n\t\t$result=dol_sanitizeUrl($test);\n\t\t$this->assertEquals('x3a alert(1)', $result, 'Test on dol_sanitizeUrl A');\n\n\t\t$test = 'javajavascriptscript&cjavascriptolon;alert(1)';\n\t\t$result=dol_sanitizeUrl($test);\n\t\t$this->assertEquals('alert(1)', $result, 'Test on dol_sanitizeUrl B');\n\n\t\t$test = '/javas:cript/google.com';\n\t\t$result=dol_sanitizeUrl($test);\n\t\t$this->assertEquals('google.com', $result, 'Test on dol_sanitizeUrl C');\n\t}\n\n\t/**\n\t * testDolSanitizeFileName\n\t *\n\t * @return void\n\t */\n\tpublic function testDolSanitizeFileName()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t//$dummyuser=new User($db);\n\t\t//$result=restrictedArea($dummyuser,'societe');\n\n\t\t$result=dol_sanitizeFileName('bad file | evilaction');\n\t\t$this->assertEquals('bad file _ evilaction', $result);\n\n\t\t$result=dol_sanitizeFileName('bad file --evilparam');\n\t\t$this->assertEquals('bad file _evilparam', $result);\n\t}\n\n\t/**\n\t * testDolEval\n\t *\n\t * @return void\n\t */\n\tpublic function testDolEval()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t$result=dol_eval('1==1', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertTrue($result);\n\n\t\t$result=dol_eval('1==2', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertFalse($result);\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/task.class.php';\n\t\t$result=dol_eval('(($reloadedobj = new Task($db)) && ($reloadedobj->fetchNoCompute($object->id) > 0) && ($secondloadedobj = new Project($db)) && ($secondloadedobj->fetchNoCompute($reloadedobj->fk_project) > 0)) ? $secondloadedobj->ref: \"Parent project not found\"', 1, 1);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertEquals('Parent project not found', $result);\n\n\t\t$result=dol_eval('$a=function() { }; $a;', 1, 1);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\n\t\t$result=dol_eval('$a=exec(\"ls\");', 1, 1);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\n\t\t$result=dol_eval('$a=\"test\"; $$a;', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\n\t\t$result=dol_eval('`ls`', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\t}\n}\n"], "fixing_code": ["<?php\n/* Copyright (C) 2000-2007\tRodolphe Quiedeville\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2018\tLaurent Destailleur\t\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tSebastien Di Cintio\t\t\t<sdicintio@ressource-toi.org>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2004\t\tChristophe Combelles\t\t<ccomb@free.fr>\n * Copyright (C) 2005-2019\tRegis Houssin\t\t\t\t<regis.houssin@inodbox.com>\n * Copyright (C) 2008\t\tRaphael Bertrand (Resultic)\t<raphael.bertrand@resultic.fr>\n * Copyright (C) 2010-2018\tJuanjo Menent\t\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013\t\tC\u00e9dric Salvador\t\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2013-2021\tAlexandre Spangaro\t\t\t<aspangaro@open-dsi.fr>\n * Copyright (C) 2014\t\tC\u00e9dric GROSS\t\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tMarcos Garc\u00eda\t\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t\t<jfefe@aternatik.fr>\n * Copyright (C) 2018-2021  Fr\u00e9d\u00e9ric France             <frederic.france@netlogic.fr>\n * Copyright (C) 2019       Thibault Foucart            <support@ptibogxiv.net>\n * Copyright (C) 2020       Open-Dsi         \t\t\t<support@open-dsi.fr>\n * Copyright (C) 2021       Gauthier VERDOL         \t<gauthier.verdol@atm-consulting.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n * or see https://www.gnu.org/\n */\n\n/**\n *\t\\file\t\t\thtdocs/core/lib/functions.lib.php\n *\t\\brief\t\t\tA set of functions for Dolibarr\n *\t\t\t\t\tThis file contains all frequently used functions.\n */\n\ninclude_once DOL_DOCUMENT_ROOT.'/core/lib/json.lib.php';\n\n/**\n * Return dolibarr global constant string value\n * @param string $key key to return value, return '' if not set\n * @return string\n */\nfunction getDolGlobalString($key)\n{\n\tglobal $conf;\n\t// return $conf->global->$key ?? '';\n\treturn (string) (empty($conf->global->$key) ? '' : $conf->global->$key);\n}\n\n/**\n * Return dolibarr global constant int value\n * @param string $key key to return value, return 0 if not set\n * @return int\n */\nfunction getDolGlobalInt($key)\n{\n\tglobal $conf;\n\t// return $conf->global->$key ?? 0;\n\treturn (int) (empty($conf->global->$key) ? 0 : $conf->global->$key);\n}\n\n/**\n * Return a DoliDB instance (database handler).\n *\n * @param   string\t$type\t\tType of database (mysql, pgsql...)\n * @param\tstring\t$host\t\tAddress of database server\n * @param\tstring\t$user\t\tAuthorized username\n * @param\tstring\t$pass\t\tPassword\n * @param\tstring\t$name\t\tName of database\n * @param\tint\t\t$port\t\tPort of database server\n * @return\tDoliDB\t\t\t\tA DoliDB instance\n */\nfunction getDoliDBInstance($type, $host, $user, $pass, $name, $port)\n{\n\trequire_once DOL_DOCUMENT_ROOT.\"/core/db/\".$type.'.class.php';\n\n\t$class = 'DoliDB'.ucfirst($type);\n\t$dolidb = new $class($type, $host, $user, $pass, $name, $port);\n\treturn $dolidb;\n}\n\n/**\n * \tGet list of entity id to use.\n *\n * \t@param\tstring\t$element\t\tCurrent element\n *\t\t\t\t\t\t\t\t\t'societe', 'socpeople', 'actioncomm', 'agenda', 'resource',\n *\t\t\t\t\t\t\t\t\t'product', 'productprice', 'stock', 'bom', 'mo',\n *\t\t\t\t\t\t\t\t\t'propal', 'supplier_proposal', 'invoice', 'supplier_invoice', 'payment_various',\n *\t\t\t\t\t\t\t\t\t'categorie', 'bank_account', 'bank_account', 'adherent', 'user',\n *\t\t\t\t\t\t\t\t\t'commande', 'supplier_order', 'expedition', 'intervention', 'survey',\n *\t\t\t\t\t\t\t\t\t'contract', 'tax', 'expensereport', 'holiday', 'multicurrency', 'project',\n *\t\t\t\t\t\t\t\t\t'email_template', 'event', 'donation'\n *\t\t\t\t\t\t\t\t\t'c_paiement', 'c_payment_term', ...\n * \t@param\tint\t\t$shared\t\t\t0=Return id of current entity only,\n * \t\t\t\t\t\t\t\t\t1=Return id of current entity + shared entities (default)\n *  @param\tobject\t$currentobject\tCurrent object if needed\n * \t@return\tmixed\t\t\t\t\tEntity id(s) to use ( eg. entity IN ('.getEntity(elementname).')' )\n */\nfunction getEntity($element, $shared = 1, $currentobject = null)\n{\n\tglobal $conf, $mc;\n\n\t// fix different element names (France to English)\n\tswitch ($element) {\n\t\tcase 'contrat':\n\t\t\t$element = 'contract';\n\t\t\tbreak; // \"/contrat/class/contrat.class.php\"\n\t\tcase 'order_supplier':\n\t\t\t$element = 'supplier_order';\n\t\t\tbreak; // \"/fourn/class/fournisseur.commande.class.php\"\n\t}\n\n\tif (is_object($mc)) {\n\t\treturn $mc->getEntity($element, $shared, $currentobject);\n\t} else {\n\t\t$out = '';\n\t\t$addzero = array('user', 'usergroup', 'c_email_templates', 'email_template', 'default_values');\n\t\tif (in_array($element, $addzero)) {\n\t\t\t$out .= '0,';\n\t\t}\n\t\t$out .= ((int) $conf->entity);\n\t\treturn $out;\n\t}\n}\n\n/**\n * \tSet entity id to use when to create an object\n *\n * \t@param\tobject\t$currentobject\tCurrent object\n * \t@return\tmixed\t\t\t\t\tEntity id to use ( eg. entity = '.setEntity($object) )\n */\nfunction setEntity($currentobject)\n{\n\tglobal $conf, $mc;\n\n\tif (is_object($mc) && method_exists($mc, 'setEntity')) {\n\t\treturn $mc->setEntity($currentobject);\n\t} else {\n\t\treturn ((is_object($currentobject) && $currentobject->id > 0 && $currentobject->entity > 0) ? $currentobject->entity : $conf->entity);\n\t}\n}\n\n/**\n * \tReturn if string has a name dedicated to store a secret\n *\n * \t@param\tstring\t$keyname\tName of key to test\n * \t@return\tboolean\t\t\t\tTrue if key is used to store a secret\n */\nfunction isASecretKey($keyname)\n{\n\treturn preg_match('/(_pass|password|_pw|_key|securekey|serverkey|secret\\d?|p12key|exportkey|_PW_[a-z]+|token)$/i', $keyname);\n}\n\n/**\n * Return information about user browser\n *\n * Returns array with the following format:\n * array(\n *  'browsername' => Browser name (firefox|chrome|iceweasel|epiphany|safari|opera|ie|unknown)\n *  'browserversion' => Browser version. Empty if unknown\n *  'browseros' => Set with mobile OS (android|blackberry|ios|palm|symbian|webos|maemo|windows|unknown)\n *  'layout' => (tablet|phone|classic)\n *  'phone' => empty if not mobile, (android|blackberry|ios|palm|unknown) if mobile\n *  'tablet' => true/false\n * )\n *\n * @param string $user_agent Content of $_SERVER[\"HTTP_USER_AGENT\"] variable\n * @return\tarray Check function documentation\n */\nfunction getBrowserInfo($user_agent)\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/includes/mobiledetect/mobiledetectlib/Mobile_Detect.php';\n\n\t$name = 'unknown';\n\t$version = '';\n\t$os = 'unknown';\n\t$phone = '';\n\n\t$user_agent = substr($user_agent, 0, 512);\t// Avoid to process too large user agent\n\n\t$detectmobile = new Mobile_Detect(null, $user_agent);\n\t$tablet = $detectmobile->isTablet();\n\n\tif ($detectmobile->isMobile()) {\n\t\t$phone = 'unknown';\n\n\t\t// If phone/smartphone, we set phone os name.\n\t\tif ($detectmobile->is('AndroidOS')) {\n\t\t\t$os = $phone = 'android';\n\t\t} elseif ($detectmobile->is('BlackBerryOS')) {\n\t\t\t$os = $phone = 'blackberry';\n\t\t} elseif ($detectmobile->is('iOS')) {\n\t\t\t$os = 'ios';\n\t\t\t$phone = 'iphone';\n\t\t} elseif ($detectmobile->is('PalmOS')) {\n\t\t\t$os = $phone = 'palm';\n\t\t} elseif ($detectmobile->is('SymbianOS')) {\n\t\t\t$os = 'symbian';\n\t\t} elseif ($detectmobile->is('webOS')) {\n\t\t\t$os = 'webos';\n\t\t} elseif ($detectmobile->is('MaemoOS')) {\n\t\t\t$os = 'maemo';\n\t\t} elseif ($detectmobile->is('WindowsMobileOS') || $detectmobile->is('WindowsPhoneOS')) {\n\t\t\t$os = 'windows';\n\t\t}\n\t}\n\n\t// OS\n\tif (preg_match('/linux/i', $user_agent)) {\n\t\t$os = 'linux';\n\t} elseif (preg_match('/macintosh/i', $user_agent)) {\n\t\t$os = 'macintosh';\n\t} elseif (preg_match('/windows/i', $user_agent)) {\n\t\t$os = 'windows';\n\t}\n\n\t// Name\n\t$reg = array();\n\tif (preg_match('/firefox(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t$name = 'firefox';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/edge(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t$name = 'edge';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/chrome(\\/|\\s)([\\d\\.]+)/i', $user_agent, $reg)) {\n\t\t$name = 'chrome';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/chrome/i', $user_agent, $reg)) {\n\t\t// we can have 'chrome (Mozilla...) chrome x.y' in one string\n\t\t$name = 'chrome';\n\t} elseif (preg_match('/iceweasel/i', $user_agent)) {\n\t\t$name = 'iceweasel';\n\t} elseif (preg_match('/epiphany/i', $user_agent)) {\n\t\t$name = 'epiphany';\n\t} elseif (preg_match('/safari(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t$name = 'safari';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/opera(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg)) {\n\t\t// Safari is often present in string for mobile but its not.\n\t\t$name = 'opera';\n\t\t$version = $reg[2];\n\t} elseif (preg_match('/(MSIE\\s([0-9]+\\.[0-9]))|.*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg)) {\n\t\t$name = 'ie';\n\t\t$version = end($reg);\n\t} elseif (preg_match('/(Windows NT\\s([0-9]+\\.[0-9])).*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg)) {\n\t\t// MS products at end\n\t\t$name = 'ie';\n\t\t$version = end($reg);\n\t} elseif (preg_match('/l(i|y)n(x|ks)(\\(|\\/|\\s)*([\\d\\.]+)/i', $user_agent, $reg)) {\n\t\t// MS products at end\n\t\t$name = 'lynxlinks';\n\t\t$version = $reg[4];\n\t}\n\n\tif ($tablet) {\n\t\t$layout = 'tablet';\n\t} elseif ($phone) {\n\t\t$layout = 'phone';\n\t} else {\n\t\t$layout = 'classic';\n\t}\n\n\treturn array(\n\t\t'browsername' => $name,\n\t\t'browserversion' => $version,\n\t\t'browseros' => $os,\n\t\t'layout' => $layout,\n\t\t'phone' => $phone,\n\t\t'tablet' => $tablet\n\t);\n}\n\n/**\n *  Function called at end of web php process\n *\n *  @return\tvoid\n */\nfunction dol_shutdown()\n{\n\tglobal $conf, $user, $langs, $db;\n\t$disconnectdone = false;\n\t$depth = 0;\n\tif (is_object($db) && !empty($db->connected)) {\n\t\t$depth = $db->transaction_opened;\n\t\t$disconnectdone = $db->close();\n\t}\n\tdol_syslog(\"--- End access to \".$_SERVER[\"PHP_SELF\"].(($disconnectdone && $depth) ? ' (Warn: db disconnection forced, transaction depth was '.$depth.')' : ''), (($disconnectdone && $depth) ?LOG_WARNING:LOG_INFO));\n}\n\n/**\n * Return true if we are in a context of submitting the parameter $paramname from a POST of a form.\n *\n * @param \tstring\t$paramname\t\tName or parameter to test\n * @return \tboolean\t\t\t\t\tTrue if we have just submit a POST or GET request with the parameter provided (even if param is empty)\n */\nfunction GETPOSTISSET($paramname)\n{\n\t$isset = false;\n\n\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t// Clean $relativepathstring\n\tif (constant('DOL_URL_ROOT')) {\n\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t}\n\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t//var_dump($relativepathstring);\n\t//var_dump($user->default_values);\n\n\t// Code for search criteria persistence.\n\t// Retrieve values if restore_lastsearch_values\n\tif (!empty($_GET['restore_lastsearch_values'])) {        // Use $_GET here and not GETPOST\n\t\tif (!empty($_SESSION['lastsearch_values_'.$relativepathstring])) {\t// If there is saved values\n\t\t\t$tmp = json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t\t\tif (is_array($tmp)) {\n\t\t\t\tforeach ($tmp as $key => $val) {\n\t\t\t\t\tif ($key == $paramname) {\t// We are on the requested parameter\n\t\t\t\t\t\t$isset = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If there is saved contextpage, page or limit\n\t\tif ($paramname == 'contextpage' && !empty($_SESSION['lastsearch_contextpage_'.$relativepathstring])) {\n\t\t\t$isset = true;\n\t\t} elseif ($paramname == 'page' && !empty($_SESSION['lastsearch_page_'.$relativepathstring])) {\n\t\t\t$isset = true;\n\t\t} elseif ($paramname == 'limit' && !empty($_SESSION['lastsearch_limit_'.$relativepathstring])) {\n\t\t\t$isset = true;\n\t\t}\n\t} else {\n\t\t$isset = (isset($_POST[$paramname]) || isset($_GET[$paramname])); // We must keep $_POST and $_GET here\n\t}\n\n\treturn $isset;\n}\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['createform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param  string  $paramname   Name of parameter to found\n *  @param  string  $check\t     Type of check\n *                               ''=no check (deprecated)\n *                               'none'=no check (only for param that should have very rich content)\n *                               'array', 'array:restricthtml' or 'array:aZ09' to check it's an array\n *                               'int'=check it's numeric (integer or float)\n *                               'intcomma'=check it's integer+comma ('1,2,3,4...')\n *                               'alpha'=Same than alphanohtml since v13\n *                               'alphawithlgt'=alpha with lgt\n *                               'alphanohtml'=check there is no html content and no \" and no ../\n *                               'aZ'=check it's a-z only\n *                               'aZ09'=check it's simple alpha string (recommended for keys)\n *                               'san_alpha'=Use filter_var with FILTER_SANITIZE_STRING (do not use this for free text string)\n *                               'nohtml'=check there is no html content and no \" and no ../\n *                               'restricthtml'=check html content is restricted to some tags only\n *                               'custom'= custom filter specify $filter and $options)\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @param\tstring\t$noreplace\t Force disable of replacement of __xxx__ strings.\n *  @return string|array         Value found (string or array), or '' if check fails\n */\nfunction GETPOST($paramname, $check = 'alphanohtml', $method = 0, $filter = null, $options = null, $noreplace = 0)\n{\n\tglobal $mysoc, $user, $conf;\n\n\tif (empty($paramname)) {\n\t\treturn 'BadFirstParameterForGETPOST';\n\t}\n\tif (empty($check)) {\n\t\tdol_syslog(\"Deprecated use of GETPOST, called with 1st param = \".$paramname.\" and 2nd param is '', when calling page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t// Enable this line to know who call the GETPOST with '' $check parameter.\n\t\t//var_dump(debug_backtrace()[0]);\n\t}\n\n\tif (empty($method)) {\n\t\t$out = isset($_GET[$paramname]) ? $_GET[$paramname] : (isset($_POST[$paramname]) ? $_POST[$paramname] : '');\n\t} elseif ($method == 1) {\n\t\t$out = isset($_GET[$paramname]) ? $_GET[$paramname] : '';\n\t} elseif ($method == 2) {\n\t\t$out = isset($_POST[$paramname]) ? $_POST[$paramname] : '';\n\t} elseif ($method == 3) {\n\t\t$out = isset($_POST[$paramname]) ? $_POST[$paramname] : (isset($_GET[$paramname]) ? $_GET[$paramname] : '');\n\t} else {\n\t\treturn 'BadThirdParameterForGETPOST';\n\t}\n\n\tif (empty($method) || $method == 3 || $method == 4) {\n\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t// Clean $relativepathstring\n\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t}\n\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t//var_dump($relativepathstring);\n\t\t//var_dump($user->default_values);\n\n\t\t// Code for search criteria persistence.\n\t\t// Retrieve values if restore_lastsearch_values\n\t\tif (!empty($_GET['restore_lastsearch_values'])) {        // Use $_GET here and not GETPOST\n\t\t\tif (!empty($_SESSION['lastsearch_values_'.$relativepathstring])) {\t// If there is saved values\n\t\t\t\t$tmp = json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t\t\t\tif (is_array($tmp)) {\n\t\t\t\t\tforeach ($tmp as $key => $val) {\n\t\t\t\t\t\tif ($key == $paramname) {\t// We are on the requested parameter\n\t\t\t\t\t\t\t$out = $val;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If there is saved contextpage, page or limit\n\t\t\tif ($paramname == 'contextpage' && !empty($_SESSION['lastsearch_contextpage_'.$relativepathstring])) {\n\t\t\t\t$out = $_SESSION['lastsearch_contextpage_'.$relativepathstring];\n\t\t\t} elseif ($paramname == 'page' && !empty($_SESSION['lastsearch_page_'.$relativepathstring])) {\n\t\t\t\t$out = $_SESSION['lastsearch_page_'.$relativepathstring];\n\t\t\t} elseif ($paramname == 'limit' && !empty($_SESSION['lastsearch_limit_'.$relativepathstring])) {\n\t\t\t\t$out = $_SESSION['lastsearch_limit_'.$relativepathstring];\n\t\t\t}\n\t\t} elseif (!isset($_GET['sortfield'])) {\n\t\t\t// Else, retrieve default values if we are not doing a sort\n\t\t\t// If we did a click on a field to sort, we do no apply default values. Same if option MAIN_ENABLE_DEFAULT_VALUES is not set\n\t\t\tif (!empty($_GET['action']) && $_GET['action'] == 'create' && !isset($_GET[$paramname]) && !isset($_POST[$paramname])) {\n\t\t\t\t// Search default value from $object->field\n\t\t\t\tglobal $object;\n\t\t\t\tif (is_object($object) && isset($object->fields[$paramname]['default'])) {\n\t\t\t\t\t$out = $object->fields[$paramname]['default'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_ENABLE_DEFAULT_VALUES)) {\n\t\t\t\tif (!empty($_GET['action']) && (preg_match('/^create/', $_GET['action']) || preg_match('/^presend/', $_GET['action'])) && !isset($_GET[$paramname]) && !isset($_POST[$paramname])) {\n\t\t\t\t\t// Now search in setup to overwrite default values\n\t\t\t\t\tif (!empty($user->default_values)) {\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform'])) {\n\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['createform'] as $defkey => $defval) {\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t\t\tif (!in_array($tmpquerytohave, $tmpqueryarraywehave)) {\n\t\t\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform'][$defkey][$paramname])) {\n\t\t\t\t\t\t\t\t\t\t$out = $user->default_values[$relativepathstring]['createform'][$defkey][$paramname];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (!empty($paramname) && !isset($_GET[$paramname]) && !isset($_POST[$paramname])) {\n\t\t\t\t\t// Management of default search_filters and sort order\n\t\t\t\t\tif (!empty($user->default_values)) {\n\t\t\t\t\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t\t//var_dump($user->default_values[$relativepathstring]);\n\t\t\t\t\t\tif ($paramname == 'sortfield' || $paramname == 'sortorder') {\n\t\t\t\t\t\t\t// Sorted on which fields ? ASC or DESC ?\n\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['sortorder'])) {\n\t\t\t\t\t\t\t\t// Even if paramname is sortfield, data are stored into ['sortorder...']\n\t\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['sortorder'] as $defkey => $defval) {\n\t\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t\t\t\tif (!in_array($tmpquerytohave, $tmpqueryarraywehave)) {\n\t\t\t\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \";\", \"=\"); // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['sortorder'][$defkey] as $key => $val) {\n\t\t\t\t\t\t\t\t\t\t\tif ($out) {\n\t\t\t\t\t\t\t\t\t\t\t\t$out .= ', ';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortfield') {\n\t\t\t\t\t\t\t\t\t\t\t\t$out .= dol_string_nospecial($key, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortorder') {\n\t\t\t\t\t\t\t\t\t\t\t\t$out .= dol_string_nospecial($val, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//break;\t// No break for sortfield and sortorder so we can cumulate fields (is it realy usefull ?)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} elseif (isset($user->default_values[$relativepathstring]['filters'])) {\n\t\t\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['filters'] as $defkey => $defval) {\t// $defkey is a querystring like 'a=b&c=d', $defval is key of user\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t\t\tif (!in_array($tmpquerytohave, $tmpqueryarraywehave)) {\n\t\t\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\t\t\t// We must keep $_POST and $_GET here\n\t\t\t\t\t\t\t\t\tif (isset($_POST['sall']) || isset($_POST['search_all']) || isset($_GET['sall']) || isset($_GET['search_all'])) {\n\t\t\t\t\t\t\t\t\t\t// We made a search from quick search menu, do we still use default filter ?\n\t\t\t\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_DEFAULT_FILTER_FOR_QUICK_SEARCH)) {\n\t\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \";\", \"=\"); // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \";\", \"=\"); // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Substitution variables for GETPOST (used to get final url with variable parameters or final default value with variable parameters)\n\t// Example of variables: __DAY__, __MONTH__, __YEAR__, __MYCOMPANY_COUNTRY_ID__, __USER_ID__, ...\n\t// We do this only if var is a GET. If it is a POST, may be we want to post the text with vars as the setup text.\n\tif (!is_array($out) && empty($_POST[$paramname]) && empty($noreplace)) {\n\t\t$reg = array();\n\t\t$maxloop = 20;\n\t\t$loopnb = 0; // Protection against infinite loop\n\t\twhile (preg_match('/__([A-Z0-9]+_?[A-Z0-9]+)__/i', $out, $reg) && ($loopnb < $maxloop)) {    // Detect '__ABCDEF__' as key 'ABCDEF' and '__ABC_DEF__' as key 'ABC_DEF'. Detection is also correct when 2 vars are side by side.\n\t\t\t$loopnb++;\n\t\t\t$newout = '';\n\n\t\t\tif ($reg[1] == 'DAY') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = $tmp['mday'];\n\t\t\t} elseif ($reg[1] == 'MONTH') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = $tmp['mon'];\n\t\t\t} elseif ($reg[1] == 'YEAR') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = $tmp['year'];\n\t\t\t} elseif ($reg[1] == 'PREVIOUS_DAY') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['day'];\n\t\t\t} elseif ($reg[1] == 'PREVIOUS_MONTH') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_prev_month($tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['month'];\n\t\t\t} elseif ($reg[1] == 'PREVIOUS_YEAR') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = ($tmp['year'] - 1);\n\t\t\t} elseif ($reg[1] == 'NEXT_DAY') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['day'];\n\t\t\t} elseif ($reg[1] == 'NEXT_MONTH') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$tmp2 = dol_get_next_month($tmp['mon'], $tmp['year']);\n\t\t\t\t$newout = $tmp2['month'];\n\t\t\t} elseif ($reg[1] == 'NEXT_YEAR') {\n\t\t\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t\t\t$newout = ($tmp['year'] + 1);\n\t\t\t} elseif ($reg[1] == 'MYCOMPANY_COUNTRY_ID' || $reg[1] == 'MYCOUNTRY_ID' || $reg[1] == 'MYCOUNTRYID') {\n\t\t\t\t$newout = $mysoc->country_id;\n\t\t\t} elseif ($reg[1] == 'USER_ID' || $reg[1] == 'USERID') {\n\t\t\t\t$newout = $user->id;\n\t\t\t} elseif ($reg[1] == 'USER_SUPERVISOR_ID' || $reg[1] == 'SUPERVISOR_ID' || $reg[1] == 'SUPERVISORID') {\n\t\t\t\t$newout = $user->fk_user;\n\t\t\t} elseif ($reg[1] == 'ENTITY_ID' || $reg[1] == 'ENTITYID') {\n\t\t\t\t$newout = $conf->entity;\n\t\t\t} else {\n\t\t\t\t$newout = ''; // Key not found, we replace with empty string\n\t\t\t}\n\t\t\t//var_dump('__'.$reg[1].'__ -> '.$newout);\n\t\t\t$out = preg_replace('/__'.preg_quote($reg[1], '/').'__/', $newout, $out);\n\t\t}\n\t}\n\n\t// Check rule\n\tif (preg_match('/^array/', $check)) {\t// If 'array' or 'array:restricthtml' or 'array:aZ09'\n\t\tif (!is_array($out) || empty($out)) {\n\t\t\t$out = array();\n\t\t} else {\n\t\t\t$tmparray = explode(':', $check);\n\t\t\tif (!empty($tmparray[1])) {\n\t\t\t\t$tmpcheck = $tmparray[1];\n\t\t\t} else {\n\t\t\t\t$tmpcheck = 'alphanohtml';\n\t\t\t}\n\t\t\tforeach ($out as $outkey => $outval) {\n\t\t\t\t$out[$outkey] = checkVal($outval, $tmpcheck, $filter, $options);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$out = checkVal($out, $check, $filter, $options);\n\t}\n\n\t// Sanitizing for special parameters.\n\t// Note: There is no reason to allow the backtopage, backtolist or backtourl parameter to contains an external URL.\n\tif ($paramname == 'backtopage' || $paramname == 'backtolist' || $paramname == 'backtourl') {\n\t\t$out = str_replace('\\\\', '/', $out);\t\t\t\t\t// Can be before the loop because only 1 char is replaced. No risk to get it after other replacements.\n\t\t$out = str_replace(array(':', ';', '@'), '', $out);\t\t// Can be before the loop because only 1 char is replaced. No risk to get it after other replacements.\n\t\tdo {\n\t\t\t$oldstringtoclean = $out;\n\t\t\t$out = str_ireplace(array('javascript', 'vbscript', '&colon', '&#'), '', $out);\n\t\t} while ($oldstringtoclean != $out);\n\n\t\t$out = preg_replace(array('/^[a-z]*\\/\\/+/i'), '', $out);\t// We remove schema*// to remove external URL\n\t}\n\n\t// Code for search criteria persistence.\n\t// Save data into session if key start with 'search_' or is 'smonth', 'syear', 'month', 'year'\n\tif (empty($method) || $method == 3 || $method == 4) {\n\t\tif (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder', 'sortfield'))) {\n\t\t\t//var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n\n\t\t\t// We save search key only if $out not empty that means:\n\t\t\t// - posted value not empty, or\n\t\t\t// - if posted value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n\n\t\t\tif ($out != '') {\t\t// $out = '0' or 'abc', it is a search criteria to keep\n\t\t\t\t$user->lastsearch_values_tmp[$relativepathstring][$paramname] = $out;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['creatform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param  string  $paramname   Name of parameter to found\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @param\tstring\t$noreplace   Force disable of replacement of __xxx__ strings.\n *  @return int                  Value found (int)\n */\nfunction GETPOSTINT($paramname, $method = 0, $filter = null, $options = null, $noreplace = 0)\n{\n\treturn (int) GETPOST($paramname, 'int', $method, $filter, $options, $noreplace);\n}\n\n/**\n *  Return a value after checking on a rule. A sanitization may also have been done.\n *\n *  @param  string  $out\t     Value to check/clear.\n *  @param  string  $check\t     Type of check/sanitizing\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @return string|array         Value sanitized (string or array). It may be '' if format check fails.\n */\nfunction checkVal($out = '', $check = 'alphanohtml', $filter = null, $options = null)\n{\n\tglobal $conf;\n\n\t// Check is done after replacement\n\tswitch ($check) {\n\t\tcase 'none':\n\t\t\tbreak;\n\t\tcase 'int':    // Check param is a numeric value (integer but also float or hexadecimal)\n\t\t\tif (!is_numeric($out)) {\n\t\t\t\t$out = '';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'intcomma':\n\t\t\tif (preg_match('/[^0-9,-]+/i', $out)) {\n\t\t\t\t$out = '';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'san_alpha':\n\t\t\t$out = filter_var($out, FILTER_SANITIZE_STRING);\n\t\t\tbreak;\n\t\tcase 'email':\n\t\t\t$out = filter_var($out, FILTER_SANITIZE_EMAIL);\n\t\t\tbreak;\n\t\tcase 'aZ':\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tif (preg_match('/[^a-z]+/i', $out)) {\n\t\t\t\t\t$out = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'aZ09':\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tif (preg_match('/[^a-z0-9_\\-\\.]+/i', $out)) {\n\t\t\t\t\t$out = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'aZ09comma':\t\t// great to sanitize sortfield or sortorder params that can be t.abc,t.def_gh\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tif (preg_match('/[^a-z0-9_\\-\\.,]+/i', $out)) {\n\t\t\t\t\t$out = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'nohtml':\t\t// No html\n\t\t\t$out = dol_string_nohtmltag($out, 0);\n\t\t\tbreak;\n\t\tcase 'alpha':\t\t// No html and no ../ and \"\n\t\tcase 'alphanohtml':\t// Recommended for most scalar parameters and search parameters\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tdo {\n\t\t\t\t\t$oldstringtoclean = $out;\n\t\t\t\t\t// Remove html tags\n\t\t\t\t\t$out = dol_string_nohtmltag($out, 0);\n\t\t\t\t\t// Remove also other dangerous string sequences\n\t\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\t\t// Note &#38, '&#0000038', '&#x26'... is a simple char like '&' alone but there is no reason to accept such way to encode input data.\n\t\t\t\t\t$out = str_ireplace(array('&#38', '&#0000038', '&#x26', '&quot', '&#34', '&#0000034', '&#x22', '\"', '&#47', '&#0000047', '&#x2F', '../'), '', $out);\n\t\t\t\t} while ($oldstringtoclean != $out);\n\t\t\t\t// keep lines feed\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'alphawithlgt':\t\t// No \" and no ../ but we keep balanced < > tags with no special chars inside. Can be used for email string like \"Name <email>\"\n\t\t\tif (!is_array($out)) {\n\t\t\t\t$out = trim($out);\n\t\t\t\tdo {\n\t\t\t\t\t$oldstringtoclean = $out;\n\t\t\t\t\t// Remove html tags\n\t\t\t\t\t$out = dol_html_entity_decode($out, ENT_COMPAT | ENT_HTML5, 'UTF-8');\n\t\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\t\t// Note &#38, '&#0000038', '&#x26'... is a simple char like '&' alone but there is no reason to accept such way to encode input data.\n\t\t\t\t\t$out = str_ireplace(array('&#38', '&#0000038', '&#x26', '&quot', '&#34', '&#0000034', '&#x22', '\"', '&#47', '&#0000047', '&#x2F', '../'), '', $out);\n\t\t\t\t} while ($oldstringtoclean != $out);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'restricthtml':\t\t// Recommended for most html textarea\n\t\t\tdo {\n\t\t\t\t$oldstringtoclean = $out;\n\n\t\t\t\t// We replace chars from a/A to z/Z encoded with numeric HTML entities with the real char so we won't loose the chars at the next step.\n\t\t\t\t// No need to use a loop here, this step is not to sanitize (this is done at next step, this is to try to save chars, even if they are\n\t\t\t\t// using a non coventionnel way to be encoded, to not have them sanitized just after)\n\t\t\t\t$out = preg_replace_callback('/&#(x?[0-9][0-9a-f]+;?)/i', 'realCharForNumericEntities', $out);\n\n\t\t\t\t// Now we remove all remaining HTML entities staring with a number. We don't want such entities.\n\t\t\t\t$out = preg_replace('/&#x?[0-9]+/i', '', $out);\t// For example if we have j&#x61vascript with an entities without the ; to hide the 'a' of 'javascript'.\n\n\t\t\t\t$out = dol_string_onlythesehtmltags($out, 0, 1, 1);\n\n\t\t\t\t// We should also exclude non expected attributes\n\t\t\t\tif (!empty($conf->global->MAIN_RESTRICTHTML_REMOVE_ALSO_BAD_ATTRIBUTES)) {\n\t\t\t\t\t$out = dol_string_onlythesehtmlattributes($out);\n\t\t\t\t}\n\t\t\t} while ($oldstringtoclean != $out);\n\t\t\tbreak;\n\t\tcase 'custom':\n\t\t\tif (empty($filter)) {\n\t\t\t\treturn 'BadFourthParameterForGETPOST';\n\t\t\t}\n\t\t\t$out = filter_var($out, $filter, $options);\n\t\t\tbreak;\n\t}\n\n\treturn $out;\n}\n\n\nif (!function_exists('dol_getprefix')) {\n\t/**\n\t *  Return a prefix to use for this Dolibarr instance, for session/cookie names or email id.\n\t *  The prefix is unique for instance and avoid conflict between multi-instances, even when having two instances with same root dir\n\t *  or two instances in same virtual servers.\n\t *\n\t *  @param  string  $mode                   '' (prefix for session name) or 'email' (prefix for email id)\n\t *  @return\tstring                          A calculated prefix\n\t */\n\tfunction dol_getprefix($mode = '')\n\t{\n\t\t// If prefix is for email (we need to have $conf alreayd loaded for this case)\n\t\tif ($mode == 'email') {\n\t\t\tglobal $conf;\n\n\t\t\tif (!empty($conf->global->MAIL_PREFIX_FOR_EMAIL_ID)) {\t// If MAIL_PREFIX_FOR_EMAIL_ID is set (a value initialized with a random value is recommended)\n\t\t\t\tif ($conf->global->MAIL_PREFIX_FOR_EMAIL_ID != 'SERVER_NAME') {\n\t\t\t\t\treturn $conf->global->MAIL_PREFIX_FOR_EMAIL_ID;\n\t\t\t\t} elseif (isset($_SERVER[\"SERVER_NAME\"])) {\n\t\t\t\t\treturn $_SERVER[\"SERVER_NAME\"];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The recommended value (may be not defined for old versions)\n\t\t\tif (!empty($conf->file->instance_unique_id)) {\n\t\t\t\treturn $conf->file->instance_unique_id;\n\t\t\t}\n\n\t\t\t// For backward compatibility\n\t\t\treturn dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT, '3');\n\t\t}\n\n\t\t// If prefix is for session (no need to have $conf loaded)\n\t\tglobal $dolibarr_main_instance_unique_id, $dolibarr_main_cookie_cryptkey;\t// This is loaded by filefunc.inc.php\n\t\t$tmp_instance_unique_id = empty($dolibarr_main_instance_unique_id) ? (empty($dolibarr_main_cookie_cryptkey) ? '' : $dolibarr_main_cookie_cryptkey) : $dolibarr_main_instance_unique_id; // Unique id of instance\n\n\t\t// The recommended value (may be not defined for old versions)\n\t\tif (!empty($tmp_instance_unique_id)) {\n\t\t\treturn $tmp_instance_unique_id;\n\t\t}\n\n\t\t// For backward compatibility\n\t\tif (isset($_SERVER[\"SERVER_NAME\"]) && isset($_SERVER[\"DOCUMENT_ROOT\"])) {\n\t\t\treturn dol_hash($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT, '3');\n\t\t}\n\n\t\treturn dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT, '3');\n\t}\n}\n\n/**\n *\tMake an include_once using default root and alternate root if it fails.\n *  To link to a core file, use include(DOL_DOCUMENT_ROOT.'/pathtofile')\n *  To link to a module file from a module file, use include './mymodulefile';\n *  To link to a module file from a core file, then this function can be used (call by hook / trigger / speciales pages)\n *\n * \t@param\tstring\t$relpath\tRelative path to file (Ie: mydir/myfile, ../myfile, ...)\n * \t@param\tstring\t$classname\tClass name (deprecated)\n *  @return bool                True if load is a success, False if it fails\n */\nfunction dol_include_once($relpath, $classname = '')\n{\n\tglobal $conf, $langs, $user, $mysoc; // Do not remove this. They must be defined for files we include. Other globals var must be retrieved with $GLOBALS['var']\n\n\t$fullpath = dol_buildpath($relpath);\n\n\tif (!file_exists($fullpath)) {\n\t\tdol_syslog('functions::dol_include_once Tried to load unexisting file: '.$relpath, LOG_WARNING);\n\t\treturn false;\n\t}\n\n\tif (!empty($classname) && !class_exists($classname)) {\n\t\treturn include $fullpath;\n\t} else {\n\t\treturn include_once $fullpath;\n\t}\n}\n\n\n/**\n *\tReturn path of url or filesystem. Can check into alternate dir or alternate dir + main dir depending on value of $returnemptyifnotfound.\n *\n * \t@param\tstring\t$path\t\t\t\t\t\tRelative path to file (if mode=0) or relative url (if mode=1). Ie: mydir/myfile, ../myfile\n *  @param\tint\t\t$type\t\t\t\t\t\t0=Used for a Filesystem path, 1=Used for an URL path (output relative), 2=Used for an URL path (output full path using same host that current url), 3=Used for an URL path (output full path using host defined into $dolibarr_main_url_root of conf file)\n *  @param\tint\t\t$returnemptyifnotfound\t\t0:If $type==0 and if file was not found into alternate dir, return default path into main dir (no test on it)\n *  \t\t\t\t\t\t\t\t\t\t\t1:If $type==0 and if file was not found into alternate dir, return empty string\n *  \t\t\t\t\t\t\t\t\t\t\t2:If $type==0 and if file was not found into alternate dir, test into main dir, return default path if found, empty string if not found\n *  @return string\t\t\t\t\t\t\t\tFull filesystem path (if path=0) or '' if file not found, Full url path (if mode=1)\n */\nfunction dol_buildpath($path, $type = 0, $returnemptyifnotfound = 0)\n{\n\tglobal $conf;\n\n\t$path = preg_replace('/^\\//', '', $path);\n\n\tif (empty($type)) {\t// For a filesystem path\n\t\t$res = DOL_DOCUMENT_ROOT.'/'.$path; // Standard default path\n\t\tif (is_array($conf->file->dol_document_root)) {\n\t\t\tforeach ($conf->file->dol_document_root as $key => $dirroot) {\t// ex: array(\"main\"=>\"/home/main/htdocs\", \"alt0\"=>\"/home/dirmod/htdocs\", ...)\n\t\t\t\tif ($key == 'main') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (file_exists($dirroot.'/'.$path)) {\n\t\t\t\t\t$res = $dirroot.'/'.$path;\n\t\t\t\t\treturn $res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($returnemptyifnotfound) {\n\t\t\t// Not found into alternate dir\n\t\t\tif ($returnemptyifnotfound == 1 || !file_exists($res)) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// For an url path\n\t\t// We try to get local path of file on filesystem from url\n\t\t// Note that trying to know if a file on disk exist by forging path on disk from url\n\t\t// works only for some web server and some setup. This is bugged when\n\t\t// using proxy, rewriting, virtual path, etc...\n\t\t$res = '';\n\t\tif ($type == 1) {\n\t\t\t$res = DOL_URL_ROOT.'/'.$path; // Standard value\n\t\t}\n\t\tif ($type == 2) {\n\t\t\t$res = DOL_MAIN_URL_ROOT.'/'.$path; // Standard value\n\t\t}\n\t\tif ($type == 3) {\n\t\t\t$res = DOL_URL_ROOT.'/'.$path;\n\t\t}\n\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot) {\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t\tif ($key == 'main') {\n\t\t\t\tif ($type == 3) {\n\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t$urlwithouturlroot = preg_replace('/'.preg_quote(DOL_URL_ROOT, '/').'$/i', '', trim($dolibarr_main_url_root));\n\t\t\t\t\t$urlwithroot = $urlwithouturlroot.DOL_URL_ROOT; // This is to use external domain name found into config file\n\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : $urlwithroot).'/'.$path; // Test on start with http is for old conf syntax\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreg_match('/^([^\\?]+(\\.css\\.php|\\.css|\\.js\\.php|\\.js|\\.png|\\.jpg|\\.php)?)/i', $path, $regs); // Take part before '?'\n\t\t\tif (!empty($regs[1])) {\n\t\t\t\t//print $key.'-'.$dirroot.'/'.$path.'-'.$conf->file->dol_url_root[$type].'<br>'.\"\\n\";\n\t\t\t\tif (file_exists($dirroot.'/'.$regs[1])) {\n\t\t\t\t\tif ($type == 1) {\n\t\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : DOL_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 2) {\n\t\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : DOL_MAIN_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 3) {\n\t\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t\t$urlwithouturlroot = preg_replace('/'.preg_quote(DOL_URL_ROOT, '/').'$/i', '', trim($dolibarr_main_url_root));\n\t\t\t\t\t\t$urlwithroot = $urlwithouturlroot.DOL_URL_ROOT; // This is to use external domain name found into config file\n\t\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t\t$res = (preg_match('/^http/i', $conf->file->dol_url_root[$key]) ? '' : $urlwithroot).$conf->file->dol_url_root[$key].'/'.$path; // Test on start with http is for old conf syntax\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $res;\n}\n\n/**\n *\tCreate a clone of instance of object (new instance with same value for properties)\n *  With native = 0: Property that are reference are also new object (full isolation clone). This means $this->db of new object is not valid.\n *  With native = 1: Use PHP clone. Property that are reference are same pointer. This means $this->db of new object is still valid but point to same this->db than original object.\n *\n * \t@param\tobject\t$object\t\tObject to clone\n *  @param\tint\t\t$native\t\t0=Full isolation method, 1=Native PHP method\n *\t@return object\t\t\t\tClone object\n *  @see https://php.net/manual/language.oop5.cloning.php\n */\nfunction dol_clone($object, $native = 0)\n{\n\tif (empty($native)) {\n\t\t$myclone = unserialize(serialize($object));\n\t} else {\n\t\t$myclone = clone $object; // PHP clone is a shallow copy only, not a real clone, so properties of references will keep the reference (refering to the same target/variable)\n\t}\n\n\treturn $myclone;\n}\n\n/**\n *\tOptimize a size for some browsers (phone, smarphone, ...)\n *\n * \t@param\tint\t\t$size\t\tSize we want\n * \t@param\tstring\t$type\t\tType of optimizing:\n * \t\t\t\t\t\t\t\t'' = function used to define a size for truncation\n * \t\t\t\t\t\t\t\t'width' = function is used to define a width\n *\t@return int\t\t\t\t\tNew size after optimizing\n */\nfunction dol_size($size, $type = '')\n{\n\tglobal $conf;\n\tif (empty($conf->dol_optimize_smallscreen)) {\n\t\treturn $size;\n\t}\n\tif ($type == 'width' && $size > 250) {\n\t\treturn 250;\n\t} else {\n\t\treturn 10;\n\t}\n}\n\n\n/**\n *\tClean a string to use it as a file name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial(), dol_string_unaccent(), dol_sanitizePathName()\n */\nfunction dol_sanitizeFileName($str, $newstr = '_', $unaccent = 1)\n{\n\t// List of special chars for filenames in windows are defined on page https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file\n\t// Char '>' '<' '|' '$' and ';' are special chars for shells.\n\t// Char '/' and '\\' are file delimiters.\n\t// -- car can be used into filename to inject special paramaters like --use-compress-program to make command with file as parameter making remote execution of command\n\t$filesystem_forbidden_chars = array('<', '>', '/', '\\\\', '?', '*', '|', '\"', ':', '\u00b0', '$', ';', '--');\n\treturn dol_string_nospecial($unaccent ? dol_string_unaccent($str) : $str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string to use it as a path name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial(), dol_string_unaccent(), dol_sanitizeFileName()\n */\nfunction dol_sanitizePathName($str, $newstr = '_', $unaccent = 1)\n{\n\t$filesystem_forbidden_chars = array('<', '>', '?', '*', '|', '\"', '\u00b0');\n\treturn dol_string_nospecial($unaccent ? dol_string_unaccent($str) : $str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *  Clean a string to use it as an URL (into a href or src attribute)\n *\n *  @param      string\t\t$stringtoclean\t\tString to clean\n *  @param\t\tint\t\t\t$type\t\t\t\t0=Accept all Url, 1=Clean external Url (keep only relative Url)\n *  @return     string     \t\t \t\t\t\tEscaped string.\n */\nfunction dol_sanitizeUrl($stringtoclean, $type = 1)\n{\n\t// We clean string because some hacks try to obfuscate evil strings by inserting non printable chars. Example: 'java(ascci09)scr(ascii00)ipt' is processed like 'javascript' (whatever is place of evil ascii char)\n\t// We should use dol_string_nounprintableascii but function may not be yet loaded/available\n\t$stringtoclean = preg_replace('/[\\x00-\\x1F\\x7F]/u', '', $stringtoclean); // /u operator makes UTF8 valid characters being ignored so are not included into the replace\n\t// We clean html comments because some hacks try to obfuscate evil strings by inserting HTML comments. Example: on<!-- -->error=alert(1)\n\t$stringtoclean = preg_replace('/<!--[^>]*-->/', '', $stringtoclean);\n\n\t$stringtoclean = str_replace('\\\\', '/', $stringtoclean);\n\tif ($type == 1) {\n\t\t// removing : should disable links to external url like http:aaa)\n\t\t// removing ';' should disable \"named\" html entities encode into an url (we should not have this into an url)\n\t\t$stringtoclean = str_replace(array(':', ';', '@'), '', $stringtoclean);\n\t}\n\n\tdo {\n\t\t$oldstringtoclean = $stringtoclean;\n\t\t// removing '&colon' should disable links to external url like http:aaa)\n\t\t// removing '&#' should disable \"numeric\" html entities encode into an url (we should not have this into an url)\n\t\t$stringtoclean = str_ireplace(array('javascript', 'vbscript', '&colon', '&#'), '', $stringtoclean);\n\t} while ($oldstringtoclean != $stringtoclean);\n\n\tif ($type == 1) {\n\t\t// removing '//' should disable links to external url like //aaa or http//)\n\t\t$stringtoclean = preg_replace(array('/^[a-z]*\\/\\/+/i'), '', $stringtoclean);\n\t}\n\n\treturn $stringtoclean;\n}\n\n/**\n *\tClean a string from all accent characters to be used as ref, login or by dol_sanitizeFileName\n *\n *\t@param\tstring\t$str\t\t\tString to clean\n *\t@return string   \t       \t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename(), dol_string_nospecial()\n */\nfunction dol_string_unaccent($str)\n{\n\tif (utf8_check($str)) {\n\t\t// See http://www.utf8-chartable.de/\n\t\t$string = rawurlencode($str);\n\t\t$replacements = array(\n\t\t'%C3%80' => 'A', '%C3%81' => 'A', '%C3%82' => 'A', '%C3%83' => 'A', '%C3%84' => 'A', '%C3%85' => 'A',\n\t\t'%C3%88' => 'E', '%C3%89' => 'E', '%C3%8A' => 'E', '%C3%8B' => 'E',\n\t\t'%C3%8C' => 'I', '%C3%8D' => 'I', '%C3%8E' => 'I', '%C3%8F' => 'I',\n\t\t'%C3%92' => 'O', '%C3%93' => 'O', '%C3%94' => 'O', '%C3%95' => 'O', '%C3%96' => 'O',\n\t\t'%C3%99' => 'U', '%C3%9A' => 'U', '%C3%9B' => 'U', '%C3%9C' => 'U',\n\t\t'%C3%A0' => 'a', '%C3%A1' => 'a', '%C3%A2' => 'a', '%C3%A3' => 'a', '%C3%A4' => 'a', '%C3%A5' => 'a',\n\t\t'%C3%A7' => 'c',\n\t\t'%C3%A8' => 'e', '%C3%A9' => 'e', '%C3%AA' => 'e', '%C3%AB' => 'e',\n\t\t'%C3%AC' => 'i', '%C3%AD' => 'i', '%C3%AE' => 'i', '%C3%AF' => 'i',\n\t\t'%C3%B1' => 'n',\n\t\t'%C3%B2' => 'o', '%C3%B3' => 'o', '%C3%B4' => 'o', '%C3%B5' => 'o', '%C3%B6' => 'o',\n\t\t'%C3%B9' => 'u', '%C3%BA' => 'u', '%C3%BB' => 'u', '%C3%BC' => 'u',\n\t\t'%C3%BF' => 'y'\n\t\t);\n\t\t$string = strtr($string, $replacements);\n\t\treturn rawurldecode($string);\n\t} else {\n\t\t// See http://www.ascii-code.com/\n\t\t$string = strtr(\n\t\t\t$str,\n\t\t\t\"\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC7\n\t\t\t\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\n\t\t\t\\xD2\\xD3\\xD4\\xD5\\xD8\\xD9\\xDA\\xDB\\xDD\n\t\t\t\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE7\\xE8\\xE9\\xEA\\xEB\n\t\t\t\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF8\n\t\t\t\\xF9\\xFA\\xFB\\xFC\\xFD\\xFF\",\n\t\t\t\"AAAAAAC\n\t\t\tEEEEIIIIDN\n\t\t\tOOOOOUUUY\n\t\t\taaaaaaceeee\n\t\t\tiiiidnooooo\n\t\t\tuuuuyy\"\n\t\t);\n\t\t$string = strtr($string, array(\"\\xC4\"=>\"Ae\", \"\\xC6\"=>\"AE\", \"\\xD6\"=>\"Oe\", \"\\xDC\"=>\"Ue\", \"\\xDE\"=>\"TH\", \"\\xDF\"=>\"ss\", \"\\xE4\"=>\"ae\", \"\\xE6\"=>\"ae\", \"\\xF6\"=>\"oe\", \"\\xFC\"=>\"ue\", \"\\xFE\"=>\"th\"));\n\t\treturn $string;\n\t}\n}\n\n/**\n *\tClean a string from all punctuation characters to use it as a ref or login.\n *  This is a more complete function than dol_sanitizeFileName.\n *\n *\t@param\tstring\t$str            \tString to clean\n * \t@param\tstring\t$newstr\t\t\t\tString to replace forbidden chars with\n *  @param  array\t$badcharstoreplace  List of forbidden characters\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename(), dol_string_unaccent(), dol_string_nounprintableascii()\n */\nfunction dol_string_nospecial($str, $newstr = '_', $badcharstoreplace = '')\n{\n\t$forbidden_chars_to_replace = array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \",\", \";\", \"=\", '\u00b0'); // more complete than dol_sanitizeFileName\n\t$forbidden_chars_to_remove = array();\n\tif (is_array($badcharstoreplace)) {\n\t\t$forbidden_chars_to_replace = $badcharstoreplace;\n\t}\n\t//$forbidden_chars_to_remove=array(\"(\",\")\");\n\n\treturn str_replace($forbidden_chars_to_replace, $newstr, str_replace($forbidden_chars_to_remove, \"\", $str));\n}\n\n\n/**\n *\tClean a string from all non printable ASCII chars (0x00-0x1F and 0x7F). It can also removes also Tab-CR-LF. UTF8 chars remains.\n *  This can be used to sanitize a string and view its real content. Some hacks try to obfuscate attacks by inserting non printable chars.\n *  Note, for information: UTF8 on 1 byte are: \\x00-\\7F\n *                                 2 bytes are: byte 1 \\xc0-\\xdf, byte 2 = \\x80-\\xbf\n *                                 3 bytes are: byte 1 \\xe0-\\xef, byte 2 = \\x80-\\xbf, byte 3 = \\x80-\\xbf\n *                                 4 bytes are: byte 1 \\xf0-\\xf7, byte 2 = \\x80-\\xbf, byte 3 = \\x80-\\xbf, byte 4 = \\x80-\\xbf\n *\t@param\tstring\t$str            \tString to clean\n *  @param\tint\t\t$removetabcrlf\t\tRemove also CR-LF\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename(), dol_string_unaccent(), dol_string_nospecial()\n */\nfunction dol_string_nounprintableascii($str, $removetabcrlf = 1)\n{\n\tif ($removetabcrlf) {\n\t\treturn preg_replace('/[\\x00-\\x1F\\x7F]/u', '', $str); // /u operator makes UTF8 valid characters being ignored so are not included into the replace\n\t} else {\n\t\treturn preg_replace('/[\\x00-\\x08\\x11-\\x12\\x14-\\x1F\\x7F]/u', '', $str); // /u operator should make UTF8 valid characters being ignored so are not included into the replace\n\t}\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t$mode\t\t\t\t0=Escape also ' and \" into ', 1=Escape ' but not \" for usage into 'string', 2=Escape \" but not ' for usage into \"string\", 3=Escape ' and \" with \\\n *  @param\t\tint\t\t$noescapebackslashn\t0=Escape also \\n. 1=Do not escape \\n.\n *  @return     string     \t\t \t\t\t\tEscaped string. Both ' and \" are escaped into ' if they are escaped.\n */\nfunction dol_escape_js($stringtoescape, $mode = 0, $noescapebackslashn = 0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$substitjs = array(\"&#039;\"=>\"\\\\'\", \"\\r\"=>'\\\\r');\n\t//$substitjs['</']='<\\/';\t// We removed this. Should be useless.\n\tif (empty($noescapebackslashn)) {\n\t\t$substitjs[\"\\n\"] = '\\\\n';\n\t\t$substitjs['\\\\'] = '\\\\\\\\';\n\t}\n\tif (empty($mode)) {\n\t\t$substitjs[\"'\"] = \"\\\\'\";\n\t\t$substitjs['\"'] = \"\\\\'\";\n\t} elseif ($mode == 1) {\n\t\t$substitjs[\"'\"] = \"\\\\'\";\n\t} elseif ($mode == 2) {\n\t\t$substitjs['\"'] = '\\\\\"';\n\t} elseif ($mode == 3) {\n\t\t$substitjs[\"'\"] = \"\\\\'\";\n\t\t$substitjs['\"'] = \"\\\\\\\"\";\n\t}\n\treturn strtr($stringtoescape, $substitjs);\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @return     string     \t\t \t\t\t\tEscaped string for json content.\n */\nfunction dol_escape_json($stringtoescape)\n{\n\treturn str_replace('\"', '\\\"', $stringtoescape);\n}\n\n/**\n *  Returns text escaped for inclusion in HTML alt or title tags, or into values of HTML input fields.\n *\n *  @param      string\t\t$stringtoescape\t\t\tString to escape\n *  @param\t\tint\t\t\t$keepb\t\t\t\t\t1=Keep b tags and escape them, 0=remove them\n *  @param      int         $keepn              \t1=Preserve \\r\\n strings (otherwise, replace them with escaped value). Set to 1 when escaping for a <textarea>.\n *  @param\t\tstring\t\t$keepmoretags\t\t\t'' or 'common' or list of tags\n *  @param\t\tint\t\t\t$escapeonlyhtmltags\t\t1=Escape only html tags, not the special chars like accents.\n *  @return     string     \t\t\t\t \t\t\tEscaped string\n *  @see\t\tdol_string_nohtmltag(), dol_string_nospecial(), dol_string_unaccent()\n */\nfunction dol_escape_htmltag($stringtoescape, $keepb = 0, $keepn = 0, $keepmoretags = '', $escapeonlyhtmltags = 0)\n{\n\tif ($keepmoretags == 'common') {\n\t\t$keepmoretags = 'html,body,a,b,em,i,u,ul,li,br,div,img,font,p,span,strong,table,tr,td,th,tbody';\n\t}\n\t// TODO Implement $keepmoretags\n\n\t// escape quotes and backslashes, newlines, etc.\n\tif ($escapeonlyhtmltags) {\n\t\t$tmp = htmlspecialchars_decode($stringtoescape, ENT_COMPAT);\n\t} else {\n\t\t$tmp = html_entity_decode($stringtoescape, ENT_COMPAT, 'UTF-8');\n\t}\n\tif (!$keepb) {\n\t\t$tmp = strtr($tmp, array(\"<b>\"=>'', '</b>'=>''));\n\t}\n\tif (!$keepn) {\n\t\t$tmp = strtr($tmp, array(\"\\r\"=>'\\\\r', \"\\n\"=>'\\\\n'));\n\t}\n\tif ($escapeonlyhtmltags) {\n\t\treturn htmlspecialchars($tmp, ENT_COMPAT, 'UTF-8');\n\t} else {\n\t\treturn htmlentities($tmp, ENT_COMPAT, 'UTF-8');\n\t}\n}\n\n/**\n * Convert a string to lower. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$string\t\t        String to encode\n * @param   string      $encoding           Character set encoding\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtolower($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_strtolower')) {\n\t\treturn mb_strtolower($string, $encoding);\n\t} else {\n\t\treturn strtolower($string);\n\t}\n}\n\n/**\n * Convert a string to upper. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$string\t\t        String to encode\n * @param   string      $encoding           Character set encoding\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtoupper($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_strtoupper')) {\n\t\treturn mb_strtoupper($string, $encoding);\n\t} else {\n\t\treturn strtoupper($string);\n\t}\n}\n\n/**\n * Convert first character of the first word of a string to upper. Never use ucfirst because it does not works with UTF8 strings.\n *\n * @param   string      $string         String to encode\n * @param   string      $encoding       Character set encodign\n * @return  string                      String converted\n */\nfunction dol_ucfirst($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_substr')) {\n\t\treturn mb_strtoupper(mb_substr($string, 0, 1, $encoding), $encoding).mb_substr($string, 1, null, $encoding);\n\t} else {\n\t\treturn ucfirst($string);\n\t}\n}\n\n/**\n * Convert first character of all the words of a string to upper. Never use ucfirst because it does not works with UTF8 strings.\n *\n * @param   string      $string         String to encode\n * @param   string      $encoding       Character set encodign\n * @return  string                      String converted\n */\nfunction dol_ucwords($string, $encoding = \"UTF-8\")\n{\n\tif (function_exists('mb_convert_case')) {\n\t\treturn mb_convert_case($string, MB_CASE_TITLE, $encoding);\n\t} else {\n\t\treturn ucwords($string);\n\t}\n}\n\n/**\n *\tWrite log message into outputs. Possible outputs can be:\n *\tSYSLOG_HANDLERS = [\"mod_syslog_file\"]  \t\tfile name is then defined by SYSLOG_FILE\n *\tSYSLOG_HANDLERS = [\"mod_syslog_syslog\"]  \tfacility is then defined by SYSLOG_FACILITY\n *  Warning, syslog functions are bugged on Windows, generating memory protection faults. To solve\n *  this, use logging to files instead of syslog (see setup of module).\n *  Note: If constant 'SYSLOG_FILE_NO_ERROR' defined, we never output any error message when writing to log fails.\n *  Note: You can get log message into html sources by adding parameter &logtohtml=1 (constant MAIN_LOGTOHTML must be set)\n *  This function works only if syslog module is enabled.\n * \tThis must not use any call to other function calling dol_syslog (avoid infinite loop).\n *\n * \t@param  string\t\t$message\t\t\t\tLine to log. ''=Show nothing\n *  @param  int\t\t\t$level\t\t\t\t\tLog level\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Windows LOG_ERR=4, LOG_WARNING=5, LOG_NOTICE=LOG_INFO=6, LOG_DEBUG=6 si define_syslog_variables ou PHP 5.3+, 7 si dolibarr\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Linux   LOG_ERR=3, LOG_WARNING=4, LOG_NOTICE=5, LOG_INFO=6, LOG_DEBUG=7\n *  @param\tint\t\t\t$ident\t\t\t\t\t1=Increase ident of 1, -1=Decrease ident of 1\n *  @param\tstring\t\t$suffixinfilename\t\tWhen output is a file, append this suffix into default log filename.\n *  @param\tstring\t\t$restricttologhandler\tForce output of log only to this log handler\n *  @param\tarray|null\t$logcontext\t\t\t\tIf defined, an array with extra informations (can be used by some log handlers)\n *  @return\tvoid\n */\nfunction dol_syslog($message, $level = LOG_INFO, $ident = 0, $suffixinfilename = '', $restricttologhandler = '', $logcontext = null)\n{\n\tglobal $conf, $user, $debugbar;\n\n\t// If syslog module enabled\n\tif (empty($conf->syslog->enabled)) {\n\t\treturn;\n\t}\n\n\t// Check if we are into execution of code of a website\n\tif (defined('USEEXTERNALSERVER') && !defined('USEDOLIBARRSERVER') && !defined('USEDOLIBARREDITOR')) {\n\t\tglobal $website, $websitekey;\n\t\tif (is_object($website) && !empty($website->ref)) {\n\t\t\t$suffixinfilename .= '_website_'.$website->ref;\n\t\t} elseif (!empty($websitekey)) {\n\t\t\t$suffixinfilename .= '_website_'.$websitekey;\n\t\t}\n\t}\n\n\tif ($ident < 0) {\n\t\tforeach ($conf->loghandlers as $loghandlerinstance) {\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n\n\tif (!empty($message)) {\n\t\t// Test log level\n\t\t$logLevels = array(LOG_EMERG=>'EMERG', LOG_ALERT=>'ALERT', LOG_CRIT=>'CRITICAL', LOG_ERR=>'ERR', LOG_WARNING=>'WARN', LOG_NOTICE=>'NOTICE', LOG_INFO=>'INFO', LOG_DEBUG=>'DEBUG');\n\t\tif (!array_key_exists($level, $logLevels)) {\n\t\t\tthrow new Exception('Incorrect log level');\n\t\t}\n\t\tif ($level > $conf->global->SYSLOG_LEVEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_SHOW_PASSWORD_INTO_LOG)) {\n\t\t\t$message = preg_replace('/password=\\'[^\\']*\\'/', 'password=\\'hidden\\'', $message); // protection to avoid to have value of password in log\n\t\t}\n\n\t\t// If adding log inside HTML page is required\n\t\tif ((!empty($_REQUEST['logtohtml']) && !empty($conf->global->MAIN_ENABLE_LOG_TO_HTML))\n\t\t\t|| (!empty($user->rights->debugbar->read) && is_object($debugbar))) {\n\t\t\t$conf->logbuffer[] = dol_print_date(time(), \"%Y-%m-%d %H:%M:%S\").\" \".$logLevels[$level].\" \".$message;\n\t\t}\n\n\t\t//TODO: Remove this. MAIN_ENABLE_LOG_INLINE_HTML should be deprecated and use a log handler dedicated to HTML output\n\t\t// If html log tag enabled and url parameter log defined, we show output log on HTML comments\n\t\tif (!empty($conf->global->MAIN_ENABLE_LOG_INLINE_HTML) && !empty($_GET[\"log\"])) {\n\t\t\tprint \"\\n\\n<!-- Log start\\n\";\n\t\t\tprint dol_escape_htmltag($message).\"\\n\";\n\t\t\tprint \"Log end -->\\n\";\n\t\t}\n\n\t\t$data = array(\n\t\t\t'message' => $message,\n\t\t\t'script' => (isset($_SERVER['PHP_SELF']) ? basename($_SERVER['PHP_SELF'], '.php') : false),\n\t\t\t'level' => $level,\n\t\t\t'user' => ((is_object($user) && $user->id) ? $user->login : false),\n\t\t\t'ip' => false\n\t\t);\n\n\t\t$remoteip = getUserRemoteIP(); // Get ip when page run on a web server\n\t\tif (!empty($remoteip)) {\n\t\t\t$data['ip'] = $remoteip;\n\t\t\t// This is when server run behind a reverse proxy\n\t\t\tif (!empty($_SERVER['HTTP_X_FORWARDED_FOR']) && $_SERVER['HTTP_X_FORWARDED_FOR'] != $remoteip) {\n\t\t\t\t$data['ip'] = $_SERVER['HTTP_X_FORWARDED_FOR'].' -> '.$data['ip'];\n\t\t\t} elseif (!empty($_SERVER['HTTP_CLIENT_IP']) && $_SERVER['HTTP_CLIENT_IP'] != $remoteip) {\n\t\t\t\t$data['ip'] = $_SERVER['HTTP_CLIENT_IP'].' -> '.$data['ip'];\n\t\t\t}\n\t\t} elseif (!empty($_SERVER['SERVER_ADDR'])) {\n\t\t\t// This is when PHP session is ran inside a web server but not inside a client request (example: init code of apache)\n\t\t\t$data['ip'] = $_SERVER['SERVER_ADDR'];\n\t\t} elseif (!empty($_SERVER['COMPUTERNAME'])) {\n\t\t\t// This is when PHP session is ran outside a web server, like from Windows command line (Not always defined, but useful if OS defined it).\n\t\t\t$data['ip'] = $_SERVER['COMPUTERNAME'].(empty($_SERVER['USERNAME']) ? '' : '@'.$_SERVER['USERNAME']);\n\t\t} elseif (!empty($_SERVER['LOGNAME'])) {\n\t\t\t// This is when PHP session is ran outside a web server, like from Linux command line (Not always defined, but usefull if OS defined it).\n\t\t\t$data['ip'] = '???@'.$_SERVER['LOGNAME'];\n\t\t}\n\t\t// Loop on each log handler and send output\n\t\tforeach ($conf->loghandlers as $loghandlerinstance) {\n\t\t\tif ($restricttologhandler && $loghandlerinstance->code != $restricttologhandler) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$loghandlerinstance->export($data, $suffixinfilename);\n\t\t}\n\t\tunset($data);\n\t}\n\n\tif ($ident > 0) {\n\t\tforeach ($conf->loghandlers as $loghandlerinstance) {\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n}\n\n/**\n *\tReturn HTML code to output a button to open a dialog popup box.\n *  Such buttons must be included inside a HTML form.\n *\n *\t@param\tstring\t$name\t\t\t\tA name for the html component\n *\t@param\tstring\t$label \t    \t\tLabel of button\n *\t@param  string\t$buttonstring  \t\tbutton string\n *\t@param  string\t$url\t\t\t\tUrl to open\n *  @param\tstring\t$disabled\t\t\tDisabled text\n * \t@return\tstring\t\t\t\t\t\tHTML component with button\n */\nfunction dolButtonToOpenUrlInDialogPopup($name, $label, $buttonstring, $url, $disabled = '')\n{\n\tif (strpos($url, '?') > 0) {\n\t\t$url .= '&dol_hide_topmenu=1&dol_hide_leftmenu=1&dol_openinpopup=1';\n\t} else {\n\t\t$url .= '?dol_hide_menuinpopup=1&dol_hide_leftmenu=1&dol_openinpopup=1';\n\t}\n\n\t//print '<input type=\"submit\" class=\"button bordertransp\"'.$disabled.' value=\"'.dol_escape_htmltag($langs->trans(\"MediaFiles\")).'\" name=\"file_manager\">';\n\t$out = '<a class=\"button bordertransp button_'.$name.'\"'.$disabled.' title=\"'.dol_escape_htmltag($label).'\">'.$buttonstring.'</a>';\n\t$out .= '<!-- Add js code to open dialog popup on dialog -->';\n\t$out .= '<script language=\"javascript\">\n\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\tjQuery(\".button_'.$name.'\").click(function () {\n\t\t\t\t\t\tconsole.log(\"Open popup with jQuery(...).dialog() on URL '.dol_escape_js(DOL_URL_ROOT.$url).'\")\n\t\t\t\t\t\tvar $dialog = $(\\'<div></div>\\').html(\\'<iframe class=\"iframedialog\" style=\"border: 0px;\" src=\"'.DOL_URL_ROOT.$url.'\" width=\"100%\" height=\"98%\"></iframe>\\')\n\t\t\t\t\t\t\t.dialog({\n\t\t\t\t\t\t\t\tautoOpen: false,\n\t\t\t\t\t\t\t \tmodal: true,\n\t\t\t\t\t\t\t \theight: (window.innerHeight - 150),\n\t\t\t\t\t\t\t \twidth: \\'80%\\',\n\t\t\t\t\t\t\t \ttitle: \"'.dol_escape_js($label).'\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t$dialog.dialog(\\'open\\');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t</script>';\n\treturn $out;\n}\n\n/**\n *\tShow tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs. Currently initialized by calling a function xxx_admin_prepare_head\n *\t@param\tstring\t$active     \t\tActive tab name (document', 'info', 'ldap', ....)\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header (if you set this to 1, using print dol_get_fiche_end() to close tab is not required), -2=Add tab header with no seaparation under tab (to start a tab just after)\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n *  @param\tint\t\t$limittoshow\t\tLimit number of tabs to show. Use 0 to use automatic default value.\n *  @param\tstring\t$moretabssuffix\t\tA suffix to use when you have several dol_get_fiche_head() in same page\n * \t@return\tvoid\n *  @deprecated Use print dol_get_fiche_head() instead\n */\nfunction dol_fiche_head($links = array(), $active = '0', $title = '', $notab = 0, $picto = '', $pictoisfullpath = 0, $morehtmlright = '', $morecss = '', $limittoshow = 0, $moretabssuffix = '')\n{\n\tprint dol_get_fiche_head($links, $active, $title, $notab, $picto, $pictoisfullpath, $morehtmlright, $morecss, $limittoshow, $moretabssuffix);\n}\n\n/**\n *  Show tabs of a record\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs\n *\t@param\tstring\t$active     \t\tActive tab name\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header (if you set this to 1, using print dol_get_fiche_end() to close tab is not required), -2=Add tab header with no seaparation under tab (to start a tab just after)\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n *  @param\tint\t\t$limittoshow\t\tLimit number of tabs to show. Use 0 to use automatic default value.\n *  @param\tstring\t$moretabssuffix\t\tA suffix to use when you have several dol_get_fiche_head() in same page\n * \t@return\tstring\n */\nfunction dol_get_fiche_head($links = array(), $active = '', $title = '', $notab = 0, $picto = '', $pictoisfullpath = 0, $morehtmlright = '', $morecss = '', $limittoshow = 0, $moretabssuffix = '')\n{\n\tglobal $conf, $langs, $hookmanager;\n\n\t// Show title\n\t$showtitle = 1;\n\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t$showtitle = 0;\n\t}\n\n\t$out = \"\\n\".'<!-- dol_fiche_head - dol_get_fiche_head -->';\n\n\tif ((!empty($title) && $showtitle) || $morehtmlright || !empty($links)) {\n\t\t$out .= '<div class=\"tabs'.($picto ? '' : ' nopaddingleft').'\" data-role=\"controlgroup\" data-type=\"horizontal\">'.\"\\n\";\n\t}\n\n\t// Show right part\n\tif ($morehtmlright) {\n\t\t$out .= '<div class=\"inline-block floatright tabsElem\">'.$morehtmlright.'</div>'; // Output right area first so when space is missing, text is in front of tabs and not under.\n\t}\n\n\t// Show title\n\tif (!empty($title) && $showtitle && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t$limittitle = 30;\n\t\t$out .= '<a class=\"tabTitle\">';\n\t\tif ($picto) {\n\t\t\t$out .= img_picto($title, ($pictoisfullpath ? '' : 'object_').$picto, '', $pictoisfullpath, 0, 0, '', 'imgTabTitle').' ';\n\t\t}\n\t\t$out .= '<span class=\"tabTitleText\">'.dol_escape_htmltag(dol_trunc($title, $limittitle)).'</span>';\n\t\t$out .= '</a>';\n\t}\n\n\t// Show tabs\n\n\t// Define max of key (max may be higher than sizeof because of hole due to module disabling some tabs).\n\t$maxkey = -1;\n\tif (is_array($links) && !empty($links)) {\n\t\t$keys = array_keys($links);\n\t\tif (count($keys)) {\n\t\t\t$maxkey = max($keys);\n\t\t}\n\t}\n\n\t// Show tabs\n\t// if =0 we don't use the feature\n\tif (empty($limittoshow)) {\n\t\t$limittoshow = (empty($conf->global->MAIN_MAXTABS_IN_CARD) ? 99 : $conf->global->MAIN_MAXTABS_IN_CARD);\n\t}\n\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t$limittoshow = 2;\n\t}\n\n\t$displaytab = 0;\n\t$nbintab = 0;\n\t$popuptab = 0;\n\t$outmore = '';\n\tfor ($i = 0; $i <= $maxkey; $i++) {\n\t\tif ((is_numeric($active) && $i == $active) || (!empty($links[$i][2]) && !is_numeric($active) && $active == $links[$i][2])) {\n\t\t\t// If active tab is already present\n\t\t\tif ($i >= $limittoshow) {\n\t\t\t\t$limittoshow--;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor ($i = 0; $i <= $maxkey; $i++) {\n\t\tif ((is_numeric($active) && $i == $active) || (!empty($links[$i][2]) && !is_numeric($active) && $active == $links[$i][2])) {\n\t\t\t$isactive = true;\n\t\t} else {\n\t\t\t$isactive = false;\n\t\t}\n\n\t\tif ($i < $limittoshow || $isactive) {\n\t\t\t// Add a new entry\n\t\t\t$out .= '<div class=\"inline-block tabsElem'.($isactive ? ' tabsElemActive' : '').((!$isactive && !empty($conf->global->MAIN_HIDE_INACTIVETAB_ON_PRINT)) ? ' hideonprint' : '').'\"><!-- id tab = '.(empty($links[$i][2]) ? '' : $links[$i][2]).' -->';\n\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image') {\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$out .= '<a class=\"tabimage'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$out .= '<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t} elseif (!empty($links[$i][1])) {\n\t\t\t\t//print \"x $i $active \".$links[$i][2].\" z\";\n\t\t\t\t$out .= '<div class=\"tab tab'.($isactive?'active':'unactive').'\" style=\"margin: 0 !important\">';\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$out .= '<a'.(!empty($links[$i][2]) ? ' id=\"'.$links[$i][2].'\"' : '').' class=\"tab inline-block'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t}\n\t\t\t\t$out .= $links[$i][1];\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$out .= '</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\t$out .= empty($links[$i][4]) ? '' : $links[$i][4];\n\t\t\t\t$out .= '</div>';\n\t\t\t}\n\n\t\t\t$out .= '</div>';\n\t\t} else {\n\t\t\t// The popup with the other tabs\n\t\t\tif (!$popuptab) {\n\t\t\t\t$popuptab = 1;\n\t\t\t\t$outmore .= '<div class=\"popuptabset wordwrap\">'; // The css used to hide/show popup\n\t\t\t}\n\t\t\t$outmore .= '<div class=\"popuptab wordwrap\" style=\"display:inherit;\">';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image') {\n\t\t\t\tif (!empty($links[$i][0])) {\n\t\t\t\t\t$outmore .= '<a class=\"tabimage'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\t$outmore .= '<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t} elseif (!empty($links[$i][1])) {\n\t\t\t\t$outmore .= '<a'.(!empty($links[$i][2]) ? ' id=\"'.$links[$i][2].'\"' : '').' class=\"wordwrap inline-block'.($morecss ? ' '.$morecss : '').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t$outmore .= preg_replace('/([a-z])\\/([a-z])/i', '\\\\1 / \\\\2', $links[$i][1]); // Replace x/y with x / y to allow wrap on long composed texts.\n\t\t\t\t$outmore .= '</a>'.\"\\n\";\n\t\t\t}\n\t\t\t$outmore .= '</div>';\n\n\t\t\t$nbintab++;\n\t\t}\n\t\t$displaytab = $i;\n\t}\n\tif ($popuptab) {\n\t\t$outmore .= '</div>';\n\t}\n\n\tif ($popuptab) {\t// If there is some tabs not shown\n\t\t$left = ($langs->trans(\"DIRECTION\") == 'rtl' ? 'right' : 'left');\n\t\t$right = ($langs->trans(\"DIRECTION\") == 'rtl' ? 'left' : 'right');\n\t\t$widthofpopup = 200;\n\n\t\t$tabsname = $moretabssuffix;\n\t\tif (empty($tabsname)) {\n\t\t\t$tabsname = str_replace(\"@\", \"\", $picto);\n\t\t}\n\t\t$out .= '<div id=\"moretabs'.$tabsname.'\" class=\"inline-block tabsElem\">';\n\t\t$out .= '<a href=\"#\" class=\"tab moretab inline-block tabunactive\"><span class=\"hideonsmartphone\">'.$langs->trans(\"More\").'</span>... ('.$nbintab.')</a>'; // Do not use \"reposition\" class in the \"More\".\n\t\t$out .= '<div id=\"moretabsList'.$tabsname.'\" style=\"width: '.$widthofpopup.'px; position: absolute; '.$left.': -999em; text-align: '.$left.'; margin:0px; padding:2px; z-index:10;\">';\n\t\t$out .= $outmore;\n\t\t$out .= '</div>';\n\t\t$out .= '<div></div>';\n\t\t$out .= \"</div>\\n\";\n\n\t\t$out .= \"<script>\";\n\t\t$out .= \"$('#moretabs\".$tabsname.\"').mouseenter( function() {\n\t\t\tvar x = this.offsetLeft, y = this.offsetTop;\n\t\t\tconsole.log('mouseenter \".$left.\" x='+x+' y='+y+' window.innerWidth='+window.innerWidth);\n\t\t\tif ((window.innerWidth - x) < \".($widthofpopup + 10).\") {\n\t\t\t\t$('#moretabsList\".$tabsname.\"').css('\".$right.\"','8px');\n\t\t\t}\n\t\t\t$('#moretabsList\".$tabsname.\"').css('\".$left.\"','auto');\n\t\t\t});\n\t\t\";\n\t\t$out .= \"$('#moretabs\".$tabsname.\"').mouseleave( function() { console.log('mouseleave \".$left.\"'); $('#moretabsList\".$tabsname.\"').css('\".$left.\"','-999em');});\";\n\t\t$out .= \"</script>\";\n\t}\n\n\tif ((!empty($title) && $showtitle) || $morehtmlright || !empty($links)) {\n\t\t$out .= \"</div>\\n\";\n\t}\n\n\tif (!$notab || $notab == -1 || $notab == -2) {\n\t\t$out .= \"\\n\".'<div class=\"tabBar'.($notab == -1 ? '' : ($notab == -2 ? ' tabBarNoTop' : ' tabBarWithBottom')).'\">'.\"\\n\";\n\t}\n\n\t$parameters = array('tabname' => $active, 'out' => $out);\n\t$reshook = $hookmanager->executeHooks('printTabsHead', $parameters); // This hook usage is called just before output the head of tabs. Take also a look at \"completeTabsHead\"\n\tif ($reshook > 0) {\n\t\t$out = $hookmanager->resPrint;\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Show tab footer of a card\n *\n *  @param\tint\t\t$notab       -1 or 0=Add tab footer, 1=no tab footer\n *  @return\tvoid\n *  @deprecated Use print dol_get_fiche_end() instead\n */\nfunction dol_fiche_end($notab = 0)\n{\n\tprint dol_get_fiche_end($notab);\n}\n\n/**\n *\tReturn tab footer of a card\n *\n *\t@param  int\t\t$notab\t\t-1 or 0=Add tab footer, 1=no tab footer\n *  @return\tstring\n */\nfunction dol_get_fiche_end($notab = 0)\n{\n\tif (!$notab || $notab == -1) {\n\t\treturn \"\\n</div>\\n\";\n\t} else {\n\t\treturn '';\n\t}\n}\n\n/**\n *  Show tab footer of a card.\n *  Note: $object->next_prev_filter can be set to restrict select to find next or previous record by $form->showrefnav.\n *\n *  @param\tObject\t$object\t\t\tObject to show\n *  @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link\n *  @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar\n *  @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1)\n *  @param\tstring\t$fieldid   \t\tNom du champ en base a utiliser pour select next et previous (we make the select max and min on this field). Use 'none' for no prev/next search.\n *  @param\tstring\t$fieldref   \tNom du champ objet ref (object->ref) a utiliser pour select next et previous\n *  @param\tstring\t$morehtmlref  \tMore html to show after the ref (see $morehtmlleft for before)\n *  @param\tstring\t$moreparam  \tMore param to add in nav link url.\n *\t@param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name\n *\t@param\tstring\t$morehtmlleft\tMore html code to show before the ref (see $morehtmlref for after)\n *\t@param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows\n *  @param  int     $onlybanner     Put this to 1, if the card will contains only a banner (this add css 'arearefnobottom' on div)\n *\t@param\tstring\t$morehtmlright\tMore html code to show before navigation arrows\n *  @return\tvoid\n */\nfunction dol_banner_tab($object, $paramid, $morehtml = '', $shownav = 1, $fieldid = 'rowid', $fieldref = 'ref', $morehtmlref = '', $moreparam = '', $nodbprefix = 0, $morehtmlleft = '', $morehtmlstatus = '', $onlybanner = 0, $morehtmlright = '')\n{\n\tglobal $conf, $form, $user, $langs;\n\n\t$error = 0;\n\n\t$maxvisiblephotos = 1;\n\t$showimage = 1;\n\t$entity = (empty($object->entity) ? $conf->entity : $object->entity);\n\t$showbarcode = empty($conf->barcode->enabled) ? 0 : (empty($object->barcode) ? 0 : 1);\n\tif (!empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) {\n\t\t$showbarcode = 0;\n\t}\n\t$modulepart = 'unknown';\n\n\tif ($object->element == 'societe' || $object->element == 'contact' || $object->element == 'product' || $object->element == 'ticket') {\n\t\t$modulepart = $object->element;\n\t} elseif ($object->element == 'member') {\n\t\t$modulepart = 'memberphoto';\n\t} elseif ($object->element == 'user') {\n\t\t$modulepart = 'userphoto';\n\t}\n\n\tif (class_exists(\"Imagick\")) {\n\t\tif ($object->element == 'expensereport' || $object->element == 'propal' || $object->element == 'commande' || $object->element == 'facture' || $object->element == 'supplier_proposal') {\n\t\t\t$modulepart = $object->element;\n\t\t} elseif ($object->element == 'fichinter') {\n\t\t\t$modulepart = 'ficheinter';\n\t\t} elseif ($object->element == 'contrat') {\n\t\t\t$modulepart = 'contract';\n\t\t} elseif ($object->element == 'order_supplier') {\n\t\t\t$modulepart = 'supplier_order';\n\t\t} elseif ($object->element == 'invoice_supplier') {\n\t\t\t$modulepart = 'supplier_invoice';\n\t\t}\n\t}\n\n\tif ($object->element == 'product') {\n\t\t$width = 80;\n\t\t$cssclass = 'photoref';\n\t\t$showimage = $object->is_photo_available($conf->product->multidir_output[$entity]);\n\t\t$maxvisiblephotos = (isset($conf->global->PRODUCT_MAX_VISIBLE_PHOTO) ? $conf->global->PRODUCT_MAX_VISIBLE_PHOTO : 5);\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$maxvisiblephotos = 1;\n\t\t}\n\t\tif ($showimage) {\n\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$object->show_photos('product', $conf->product->multidir_output[$entity], 'small', $maxvisiblephotos, 0, 0, 0, $width, 0).'</div>';\n\t\t} else {\n\t\t\tif (!empty($conf->global->PRODUCT_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto = '';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t} else {    // Show no photo link\n\t\t\t\t$nophoto = '/public/theme/common/nophoto.png';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"><img class=\"photo'.$modulepart.($cssclass ? ' '.$cssclass : '').'\" alt=\"No photo\"'.($width ? ' style=\"width: '.$width.'px\"' : '').' src=\"'.DOL_URL_ROOT.$nophoto.'\"></div>';\n\t\t\t}\n\t\t}\n\t} elseif ($object->element == 'ticket') {\n\t\t$width = 80;\n\t\t$cssclass = 'photoref';\n\t\t$showimage = $object->is_photo_available($conf->ticket->multidir_output[$entity].'/'.$object->ref);\n\t\t$maxvisiblephotos = (isset($conf->global->TICKET_MAX_VISIBLE_PHOTO) ? $conf->global->TICKET_MAX_VISIBLE_PHOTO : 2);\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$maxvisiblephotos = 1;\n\t\t}\n\n\t\tif ($showimage) {\n\t\t\t$showphoto = $object->show_photos('ticket', $conf->ticket->multidir_output[$entity], 'small', $maxvisiblephotos, 0, 0, 0, $width, 0);\n\t\t\tif ($object->nbphoto > 0) {\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$showphoto.'</div>';\n\t\t\t} else {\n\t\t\t\t$showimage = 0;\n\t\t\t}\n\t\t}\n\t\tif (!$showimage) {\n\t\t\tif (!empty($conf->global->TICKET_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto = '';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t} else {    // Show no photo link\n\t\t\t\t$nophoto = img_picto('No photo', 'object_ticket');\n\t\t\t\t$morehtmlleft .= '<!-- No photo to show -->';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t$morehtmlleft .= $nophoto;\n\t\t\t\t$morehtmlleft .= '</div></div>';\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($showimage) {\n\t\t\tif ($modulepart != 'unknown') {\n\t\t\t\t$phototoshow = '';\n\t\t\t\t// Check if a preview file is available\n\t\t\t\tif (in_array($modulepart, array('propal', 'commande', 'facture', 'ficheinter', 'contract', 'supplier_order', 'supplier_proposal', 'supplier_invoice', 'expensereport')) && class_exists(\"Imagick\")) {\n\t\t\t\t\t$objectref = dol_sanitizeFileName($object->ref);\n\t\t\t\t\t$dir_output = (empty($conf->$modulepart->multidir_output[$entity]) ? $conf->$modulepart->dir_output : $conf->$modulepart->multidir_output[$entity]).\"/\";\n\t\t\t\t\tif (in_array($modulepart, array('invoice_supplier', 'supplier_invoice'))) {\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 2, 0, 1, $object, $modulepart);\n\t\t\t\t\t\t$subdir .= ((!empty($subdir) && !preg_match('/\\/$/', $subdir)) ? '/' : '').$objectref; // the objectref dir is not included into get_exdir when used with level=2, so we add it at end\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 0, 0, 1, $object, $modulepart);\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($subdir)) {\n\t\t\t\t\t\t$subdir = 'errorgettingsubdirofobject'; // Protection to avoid to return empty path\n\t\t\t\t\t}\n\n\t\t\t\t\t$filepath = $dir_output.$subdir.\"/\";\n\n\t\t\t\t\t$filepdf = $filepath.$objectref.\".pdf\";\n\t\t\t\t\t$relativepath = $subdir.'/'.$objectref.'.pdf';\n\n\t\t\t\t\t// Define path to preview pdf file (preview precompiled \"file.ext\" are \"file.ext_preview.png\")\n\t\t\t\t\t$fileimage = $filepdf.'_preview.png';\n\t\t\t\t\t$relativepathimage = $relativepath.'_preview.png';\n\n\t\t\t\t\t$pdfexists = file_exists($filepdf);\n\n\t\t\t\t\t// If PDF file exists\n\t\t\t\t\tif ($pdfexists) {\n\t\t\t\t\t\t// Conversion du PDF en image png si fichier png non existant\n\t\t\t\t\t\tif (!file_exists($fileimage) || (filemtime($fileimage) < filemtime($filepdf))) {\n\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_PDF_THUMBS)) {\t\t// If you experience trouble with pdf thumb generation and imagick, you can disable here.\n\t\t\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\t\t\t\t\t\t\t\t$ret = dol_convert_file($filepdf, 'png', $fileimage, '0'); // Convert first page of PDF into a file _preview.png\n\t\t\t\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\t\t\t\t$error++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($pdfexists && !$error) {\n\t\t\t\t\t\t$heightforphotref = 80;\n\t\t\t\t\t\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t\t\t\t\t\t$heightforphotref = 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If the preview file is found\n\t\t\t\t\t\tif (file_exists($fileimage)) {\n\t\t\t\t\t\t\t$phototoshow = '<div class=\"photoref\">';\n\t\t\t\t\t\t\t$phototoshow .= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT.'/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($relativepathimage).'\">';\n\t\t\t\t\t\t\t$phototoshow .= '</div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} elseif (!$phototoshow) { // example if modulepart = 'societe' or 'photo'\n\t\t\t\t\t$phototoshow .= $form->showphoto($modulepart, $object, 0, 0, 0, 'photoref', 'small', 1, 0, $maxvisiblephotos);\n\t\t\t\t}\n\n\t\t\t\tif ($phototoshow) {\n\t\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\t\t$morehtmlleft .= $phototoshow;\n\t\t\t\t\t$morehtmlleft .= '</div>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (empty($phototoshow)) {      // Show No photo link (picto of object)\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\tif ($object->element == 'action') {\n\t\t\t\t\t$width = 80;\n\t\t\t\t\t$cssclass = 'photorefcenter';\n\t\t\t\t\t$nophoto = img_picto('No photo', 'title_agenda');\n\t\t\t\t} else {\n\t\t\t\t\t$width = 14;\n\t\t\t\t\t$cssclass = 'photorefcenter';\n\t\t\t\t\t$picto = $object->picto;\n\t\t\t\t\tif ($object->element == 'project' && !$object->public) {\n\t\t\t\t\t\t$picto = 'project'; // instead of projectpub\n\t\t\t\t\t}\n\t\t\t\t\t$nophoto = img_picto('No photo', 'object_'.$picto);\n\t\t\t\t}\n\t\t\t\t$morehtmlleft .= '<!-- No photo to show -->';\n\t\t\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t$morehtmlleft .= $nophoto;\n\t\t\t\t$morehtmlleft .= '</div></div>';\n\n\t\t\t\t$morehtmlleft .= '</div>';\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($showbarcode) {\n\t\t$morehtmlleft .= '<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$form->showbarcode($object, 100, 'photoref').'</div>';\n\t}\n\n\tif ($object->element == 'societe') {\n\t\tif (!empty($conf->use_javascript_ajax) && $user->rights->societe->creer && !empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus .= ajax_object_onoff($object, 'status', 'status', 'InActivity', 'ActivityCeased');\n\t\t} else {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(6);\n\t\t}\n\t} elseif ($object->element == 'product') {\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").') ';\n\t\tif (!empty($conf->use_javascript_ajax) && $user->rights->produit->creer && !empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus .= ajax_object_onoff($object, 'status', 'tosell', 'ProductStatusOnSell', 'ProductStatusNotOnSell');\n\t\t} else {\n\t\t\t$morehtmlstatus .= '<span class=\"statusrefsell\">'.$object->getLibStatut(6, 0).'</span>';\n\t\t}\n\t\t$morehtmlstatus .= ' &nbsp; ';\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").') ';\n\t\tif (!empty($conf->use_javascript_ajax) && $user->rights->produit->creer && !empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus .= ajax_object_onoff($object, 'status_buy', 'tobuy', 'ProductStatusOnBuy', 'ProductStatusNotOnBuy');\n\t\t} else {\n\t\t\t$morehtmlstatus .= '<span class=\"statusrefbuy\">'.$object->getLibStatut(6, 1).'</span>';\n\t\t}\n\t} elseif (in_array($object->element, array('facture', 'invoice', 'invoice_supplier', 'chargesociales', 'loan', 'tva', 'salary'))) {\n\t\t$tmptxt = $object->getLibStatut(6, $object->totalpaye);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3)) {\n\t\t\t$tmptxt = $object->getLibStatut(5, $object->totalpaye);\n\t\t}\n\t\t$morehtmlstatus .= $tmptxt;\n\t} elseif ($object->element == 'contrat' || $object->element == 'contract') {\n\t\tif ($object->statut == 0) {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(5);\n\t\t} else {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(4);\n\t\t}\n\t} elseif ($object->element == 'facturerec') {\n\t\tif ($object->frequency == 0) {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(2);\n\t\t} else {\n\t\t\t$morehtmlstatus .= $object->getLibStatut(5);\n\t\t}\n\t} elseif ($object->element == 'project_task') {\n\t\t$object->fk_statut = 1;\n\t\tif ($object->progress > 0) {\n\t\t\t$object->fk_statut = 2;\n\t\t}\n\t\tif ($object->progress >= 100) {\n\t\t\t$object->fk_statut = 3;\n\t\t}\n\t\t$tmptxt = $object->getLibStatut(5);\n\t\t$morehtmlstatus .= $tmptxt; // No status on task\n\t} else { // Generic case\n\t\t$tmptxt = $object->getLibStatut(6);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3)) {\n\t\t\t$tmptxt = $object->getLibStatut(5);\n\t\t}\n\t\t$morehtmlstatus .= $tmptxt;\n\t}\n\n\t// Add if object was dispatched \"into accountancy\"\n\tif (!empty($conf->accounting->enabled) && in_array($object->element, array('bank', 'paiementcharge', 'facture', 'invoice', 'invoice_supplier', 'expensereport', 'payment_various'))) {\n\t\t// Note: For 'chargesociales', 'salaries'... this is the payments that are dispatched (so element = 'bank')\n\t\tif (method_exists($object, 'getVentilExportCompta')) {\n\t\t\t$accounted = $object->getVentilExportCompta();\n\t\t\t$langs->load(\"accountancy\");\n\t\t\t$morehtmlstatus .= '</div><div class=\"statusref statusrefbis\"><span class=\"opacitymedium\">'.($accounted > 0 ? $langs->trans(\"Accounted\") : $langs->trans(\"NotYetAccounted\")).'</span>';\n\t\t}\n\t}\n\n\t// Add alias for thirdparty\n\tif (!empty($object->name_alias)) {\n\t\t$morehtmlref .= '<div class=\"refidno\">'.$object->name_alias.'</div>';\n\t}\n\n\t// Add label\n\tif (in_array($object->element, array('product', 'bank_account', 'project_task'))) {\n\t\tif (!empty($object->label)) {\n\t\t\t$morehtmlref .= '<div class=\"refidno\">'.$object->label.'</div>';\n\t\t}\n\t}\n\n\tif (method_exists($object, 'getBannerAddress') && !in_array($object->element, array('product', 'bookmark', 'ecm_directories', 'ecm_files'))) {\n\t\t$moreaddress = $object->getBannerAddress('refaddress', $object);\n\t\tif ($moreaddress) {\n\t\t\t$morehtmlref .= '<div class=\"refidno\">';\n\t\t\t$morehtmlref .= $moreaddress;\n\t\t\t$morehtmlref .= '</div>';\n\t\t}\n\t}\n\tif (!empty($conf->global->MAIN_SHOW_TECHNICAL_ID) && ($conf->global->MAIN_SHOW_TECHNICAL_ID == '1' || preg_match('/'.preg_quote($object->element, '/').'/i', $conf->global->MAIN_SHOW_TECHNICAL_ID)) && !empty($object->id)) {\n\t\t$morehtmlref .= '<div style=\"clear: both;\"></div>';\n\t\t$morehtmlref .= '<div class=\"refidno\">';\n\t\t$morehtmlref .= $langs->trans(\"TechnicalID\").': '.$object->id;\n\t\t$morehtmlref .= '</div>';\n\t}\n\n\tprint '<div class=\"'.($onlybanner ? 'arearefnobottom ' : 'arearef ').'heightref valignmiddle centpercent\">';\n\tprint $form->showrefnav($object, $paramid, $morehtml, $shownav, $fieldid, $fieldref, $morehtmlref, $moreparam, $nodbprefix, $morehtmlleft, $morehtmlstatus, $morehtmlright);\n\tprint '</div>';\n\tprint '<div class=\"underrefbanner clearboth\"></div>';\n}\n\n/**\n * Show a string with the label tag dedicated to the HTML edit field.\n *\n * @param\tstring\t$langkey\t\tTranslation key\n * @param \tstring\t$fieldkey\t\tKey of the html select field the text refers to\n * @param\tint\t\t$fieldrequired\t1=Field is mandatory\n * @return string\n * @deprecated Form::editfieldkey\n */\nfunction fieldLabel($langkey, $fieldkey, $fieldrequired = 0)\n{\n\tglobal $langs;\n\t$ret = '';\n\tif ($fieldrequired) {\n\t\t$ret .= '<span class=\"fieldrequired\">';\n\t}\n\t$ret .= '<label for=\"'.$fieldkey.'\">';\n\t$ret .= $langs->trans($langkey);\n\t$ret .= '</label>';\n\tif ($fieldrequired) {\n\t\t$ret .= '</span>';\n\t}\n\treturn $ret;\n}\n\n/**\n * Return string to add class property on html element with pair/impair.\n *\n * @param\tstring\t$var\t\t\t0 or 1\n * @param\tstring\t$moreclass\t\tMore class to add\n * @return\tstring\t\t\t\t\tString to add class onto HTML element\n */\nfunction dol_bc($var, $moreclass = '')\n{\n\tglobal $bc;\n\t$ret = ' '.$bc[$var];\n\tif ($moreclass) {\n\t\t$ret = preg_replace('/class=\\\"/', 'class=\"'.$moreclass.' ', $ret);\n\t}\n\treturn $ret;\n}\n\n/**\n *      Return a formated address (part address/zip/town/state) according to country rules.\n *      See https://en.wikipedia.org/wiki/Address\n *\n *      @param  Object\t\t$object\t\t\tA company or contact object\n * \t    @param\tint\t\t\t$withcountry\t1=Add country into address string\n *      @param\tstring\t\t$sep\t\t\tSeparator to use to build string\n *      @param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *      @param\tint\t\t\t$mode\t\t\t0=Standard output, 1=Remove address\n *  \t@param\tstring\t\t$extralangcode\tUser extralanguage $langcode as values for address, town\n *      @return string\t\t\t\t\t\tFormated string\n *      @see dol_print_address()\n */\nfunction dol_format_address($object, $withcountry = 0, $sep = \"\\n\", $outputlangs = '', $mode = 0, $extralangcode = '')\n{\n\tglobal $conf, $langs;\n\n\t$ret = '';\n\t$countriesusingstate = array('AU', 'CA', 'US', 'IN', 'GB', 'ES', 'UK', 'TR'); // See also MAIN_FORCE_STATE_INTO_ADDRESS\n\n\t// See format of addresses on https://en.wikipedia.org/wiki/Address\n\t// Address\n\tif (empty($mode)) {\n\t\t$ret .= ($extralangcode ? $object->array_languages['address'][$extralangcode] : (empty($object->address) ? '' : $object->address));\n\t}\n\t// Zip/Town/State\n\tif (isset($object->country_code) && in_array($object->country_code, array('AU', 'CA', 'US')) || !empty($conf->global->MAIN_FORCE_STATE_INTO_ADDRESS)) {\n\t\t// US: title firstname name \\n address lines \\n town, state, zip \\n country\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($ret ? $sep : '').$town;\n\t\tif (!empty($object->state))\t{\n\t\t\t$ret .= ($ret ? \", \" : '').$object->state;\n\t\t}\n\t\tif (!empty($object->zip)) {\n\t\t\t$ret .= ($ret ? \", \" : '').$object->zip;\n\t\t}\n\t} elseif (isset($object->country_code) && in_array($object->country_code, array('GB', 'UK'))) {\n\t\t// UK: title firstname name \\n address lines \\n town state \\n zip \\n country\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($ret ? $sep : '').$town;\n\t\tif (!empty($object->state)) {\n\t\t\t$ret .= ($ret ? \", \" : '').$object->state;\n\t\t}\n\t\tif (!empty($object->zip)) {\n\t\t\t$ret .= ($ret ? $sep : '').$object->zip;\n\t\t}\n\t} elseif (isset($object->country_code) && in_array($object->country_code, array('ES', 'TR'))) {\n\t\t// ES: title firstname name \\n address lines \\n zip town \\n state \\n country\n\t\t$ret .= ($ret ? $sep : '').$object->zip;\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($town ? (($object->zip ? ' ' : '').$town) : '');\n\t\tif (!empty($object->state)) {\n\t\t\t$ret .= \"\\n\".$object->state;\n\t\t}\n\t} elseif (isset($object->country_code) && in_array($object->country_code, array('IT'))) {\n\t\t// IT: tile firstname name\\n address lines \\n zip (Code Departement) \\n country\n\t\t$ret .= ($ret ? $sep : '').$object->zip;\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= ($town ? (($object->zip ? ' ' : '').$town) : '');\n\t\t$ret .= (empty($object->state_code) ? '' : (' '.$object->state_code));\n\t} else { // Other: title firstname name \\n address lines \\n zip town \\n country\n\t\t$town = ($extralangcode ? $object->array_languages['town'][$extralangcode] : (empty($object->town) ? '' : $object->town));\n\t\t$ret .= !empty($object->zip) ? (($ret ? $sep : '').$object->zip) : '';\n\t\t$ret .= ($town ? (($object->zip ? ' ' : ($ret ? $sep : '')).$town) : '');\n\t\tif (!empty($object->state) && in_array($object->country_code, $countriesusingstate)) {\n\t\t\t$ret .= ($ret ? \", \" : '').$object->state;\n\t\t}\n\t}\n\tif (!is_object($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\tif ($withcountry) {\n\t\t$langs->load(\"dict\");\n\t\t$ret .= (empty($object->country_code) ? '' : ($ret ? $sep : '').$outputlangs->convToOutputCharset($outputlangs->transnoentitiesnoconv(\"Country\".$object->country_code)));\n\t}\n\n\treturn $ret;\n}\n\n\n\n/**\n *\tFormat a string.\n *\n *\t@param\tstring\t$fmt\t\tFormat of strftime function (http://php.net/manual/fr/function.strftime.php)\n *  @param\tint\t\t$ts\t\t\tTimesamp (If is_gmt is true, timestamp is already includes timezone and daylight saving offset, if is_gmt is false, timestamp is a GMT timestamp and we must compensate with server PHP TZ)\n *  @param\tint\t\t$is_gmt\t\tSee comment of timestamp parameter\n *\t@return\tstring\t\t\t\tA formatted string\n */\nfunction dol_strftime($fmt, $ts = false, $is_gmt = false)\n{\n\tif ((abs($ts) <= 0x7FFFFFFF)) { // check if number in 32-bit signed range\n\t\treturn ($is_gmt) ? @gmstrftime($fmt, $ts) : @strftime($fmt, $ts);\n\t} else {\n\t\treturn 'Error date into a not supported range';\n\t}\n}\n\n/**\n *\tOutput date in a string format according to outputlangs (or langs if not defined).\n * \tReturn charset is always UTF-8, except if encodetoouput is defined. In this case charset is output charset\n *\n *\t@param\tint\t\t\t$time\t\t\tGM Timestamps date\n *\t@param\tstring\t\t$format      \tOutput date format (tag of strftime function)\n *\t\t\t\t\t\t\t\t\t\t\"%d %b %Y\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M:%S\",\n *                                      \"%B\"=Long text of month, \"%A\"=Long text of day, \"%b\"=Short text of month, \"%a\"=Short text of day\n *\t\t\t\t\t\t\t\t\t\t\"day\", \"daytext\", \"dayhour\", \"dayhourldap\", \"dayhourtext\", \"dayrfc\", \"dayhourrfc\", \"...inputnoreduce\", \"...reduceformat\"\n * \t@param\tstring\t\t$tzoutput\t\ttrue or 'gmt' => string is for Greenwich location\n * \t\t\t\t\t\t\t\t\t\tfalse or 'tzserver' => output string is for local PHP server TZ usage\n * \t\t\t\t\t\t\t\t\t\t'tzuser' => output string is for user TZ (current browser TZ with current dst) => In a future, we should have same behaviour than 'tzuserrel'\n *                                      'tzuserrel' => output string is for user TZ (current browser TZ with dst or not, depending on date position) (TODO not implemented yet)\n *\t@param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *  @param  boolean\t\t$encodetooutput false=no convert into output pagecode\n * \t@return string      \t\t\t\tFormated date or '' if time is null\n *\n *  @see        dol_mktime(), dol_stringtotime(), dol_getdate()\n */\nfunction dol_print_date($time, $format = '', $tzoutput = 'auto', $outputlangs = '', $encodetooutput = false)\n{\n\tglobal $conf, $langs;\n\n\tif ($tzoutput === 'auto') {\n\t\t$tzoutput = (empty($conf) ? 'tzserver' : (isset($conf->tzuserinputkey) ? $conf->tzuserinputkey : 'tzserver'));\n\t}\n\n\t// Clean parameters\n\t$to_gmt = false;\n\t$offsettz = $offsetdst = 0;\n\tif ($tzoutput) {\n\t\t$to_gmt = true; // For backward compatibility\n\t\tif (is_string($tzoutput)) {\n\t\t\tif ($tzoutput == 'tzserver') {\n\t\t\t\t$to_gmt = false;\n\t\t\t\t$offsettzstring = @date_default_timezone_get(); // Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz = 0;\t// Timezone offset with server timezone, so 0\n\t\t\t\t$offsetdst = 0;\t// Dst offset with server timezone, so 0\n\t\t\t} elseif ($tzoutput == 'tzuser' || $tzoutput == 'tzuserrel') {\n\t\t\t\t$to_gmt = true;\n\t\t\t\t$offsettzstring = (empty($_SESSION['dol_tz_string']) ? 'UTC' : $_SESSION['dol_tz_string']); // Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz = (empty($_SESSION['dol_tz']) ? 0 : $_SESSION['dol_tz']) * 60 * 60; // Will not be used anymore\n\t\t\t\t$offsetdst = (empty($_SESSION['dol_dst']) ? 0 : $_SESSION['dol_dst']) * 60 * 60; // Will not be used anymore\n\t\t\t}\n\t\t}\n\t}\n\tif (!is_object($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\tif (!$format) {\n\t\t$format = 'daytextshort';\n\t}\n\n\t// Do we have to reduce the length of date (year on 2 chars) to save space.\n\t// Note: dayinputnoreduce is same than day but no reduction of year length will be done\n\t$reduceformat = (!empty($conf->dol_optimize_smallscreen) && in_array($format, array('day', 'dayhour'))) ? 1 : 0;\t// Test on original $format param.\n\t$format = preg_replace('/inputnoreduce/', '', $format);\t// so format 'dayinputnoreduce' is processed like day\n\t$formatwithoutreduce = preg_replace('/reduceformat/', '', $format);\n\tif ($formatwithoutreduce != $format) {\n\t\t$format = $formatwithoutreduce;\n\t\t$reduceformat = 1;\n\t}  // so format 'dayreduceformat' is processed like day\n\n\t// Change predefined format into computer format. If found translation in lang file we use it, otherwise we use default.\n\t// TODO Add format daysmallyear and dayhoursmallyear\n\tif ($format == 'day') {\n\t\t$format = ($outputlangs->trans(\"FormatDateShort\") != \"FormatDateShort\" ? $outputlangs->trans(\"FormatDateShort\") : $conf->format_date_short);\n\t} elseif ($format == 'hour') {\n\t\t$format = ($outputlangs->trans(\"FormatHourShort\") != \"FormatHourShort\" ? $outputlangs->trans(\"FormatHourShort\") : $conf->format_hour_short);\n\t} elseif ($format == 'hourduration') {\n\t\t$format = ($outputlangs->trans(\"FormatHourShortDuration\") != \"FormatHourShortDuration\" ? $outputlangs->trans(\"FormatHourShortDuration\") : $conf->format_hour_short_duration);\n\t} elseif ($format == 'daytext') {\n\t\t$format = ($outputlangs->trans(\"FormatDateText\") != \"FormatDateText\" ? $outputlangs->trans(\"FormatDateText\") : $conf->format_date_text);\n\t} elseif ($format == 'daytextshort') {\n\t\t$format = ($outputlangs->trans(\"FormatDateTextShort\") != \"FormatDateTextShort\" ? $outputlangs->trans(\"FormatDateTextShort\") : $conf->format_date_text_short);\n\t} elseif ($format == 'dayhour') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourShort\") != \"FormatDateHourShort\" ? $outputlangs->trans(\"FormatDateHourShort\") : $conf->format_date_hour_short);\n\t} elseif ($format == 'dayhoursec') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourSecShort\") != \"FormatDateHourSecShort\" ? $outputlangs->trans(\"FormatDateHourSecShort\") : $conf->format_date_hour_sec_short);\n\t} elseif ($format == 'dayhourtext') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourText\") != \"FormatDateHourText\" ? $outputlangs->trans(\"FormatDateHourText\") : $conf->format_date_hour_text);\n\t} elseif ($format == 'dayhourtextshort') {\n\t\t$format = ($outputlangs->trans(\"FormatDateHourTextShort\") != \"FormatDateHourTextShort\" ? $outputlangs->trans(\"FormatDateHourTextShort\") : $conf->format_date_hour_text_short);\n\t} elseif ($format == 'dayhourlog') {\n\t\t// Format not sensitive to language\n\t\t$format = '%Y%m%d%H%M%S';\n\t} elseif ($format == 'dayhourldap') {\n\t\t$format = '%Y%m%d%H%M%SZ';\n\t} elseif ($format == 'dayhourxcard') {\n\t\t$format = '%Y%m%dT%H%M%SZ';\n\t} elseif ($format == 'dayxcard') {\n\t\t$format = '%Y%m%d';\n\t} elseif ($format == 'dayrfc') {\n\t\t$format = '%Y-%m-%d'; // DATE_RFC3339\n\t} elseif ($format == 'dayhourrfc') {\n\t\t$format = '%Y-%m-%dT%H:%M:%SZ'; // DATETIME RFC3339\n\t} elseif ($format == 'standard') {\n\t\t$format = '%Y-%m-%d %H:%M:%S';\n\t}\n\n\tif ($reduceformat) {\n\t\t$format = str_replace('%Y', '%y', $format);\n\t\t$format = str_replace('yyyy', 'yy', $format);\n\t}\n\n\t// If date undefined or \"\", we return \"\"\n\tif (dol_strlen($time) == 0) {\n\t\treturn ''; // $time=0 allowed (it means 01/01/1970 00:00:00)\n\t}\n\n\t// Clean format\n\tif (preg_match('/%b/i', $format)) {\t\t// There is some text to translate\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format = str_replace('%b', '__b__', $format);\n\t\t$format = str_replace('%B', '__B__', $format);\n\t}\n\tif (preg_match('/%a/i', $format)) {\t\t// There is some text to translate\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format = str_replace('%a', '__a__', $format);\n\t\t$format = str_replace('%A', '__A__', $format);\n\t}\n\n\n\t// Analyze date\n\t$reg = array();\n\tif (preg_match('/^([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])$/i', $time, $reg)) {\t// Deprecated. Ex: 1970-01-01, 1970-01-01 01:00:00, 19700101010000\n\t\tdol_print_error(\"Functions.lib::dol_print_date function called with a bad value from page \".$_SERVER[\"PHP_SELF\"]);\n\t\treturn '';\n\t} elseif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+) ?([0-9]+)?:?([0-9]+)?:?([0-9]+)?/i', $time, $reg)) {    // Still available to solve problems in extrafields of type date\n\t\t// This part of code should not be used anymore.\n\t\tdol_syslog(\"Functions.lib::dol_print_date function called with a bad value from page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t//if (function_exists('debug_print_backtrace')) debug_print_backtrace();\n\t\t// Date has format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS'\n\t\t$syear\t= (!empty($reg[1]) ? $reg[1] : '');\n\t\t$smonth = (!empty($reg[2]) ? $reg[2] : '');\n\t\t$sday\t= (!empty($reg[3]) ? $reg[3] : '');\n\t\t$shour\t= (!empty($reg[4]) ? $reg[4] : '');\n\t\t$smin\t= (!empty($reg[5]) ? $reg[5] : '');\n\t\t$ssec\t= (!empty($reg[6]) ? $reg[6] : '');\n\n\t\t$time = dol_mktime($shour, $smin, $ssec, $smonth, $sday, $syear, true);\n\t\t$ret = adodb_strftime($format, $time + $offsettz + $offsetdst, $to_gmt);\n\t} else {\n\t\t// Date is a timestamps\n\t\tif ($time < 100000000000) {\t// Protection against bad date values\n\t\t\t$timetouse = $time + $offsettz + $offsetdst; // TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t\t$ret = adodb_strftime($format, $timetouse, $to_gmt);\t// If to_gmt = false then adodb_strftime use TZ of server\n\t\t} else {\n\t\t\t$ret = 'Bad value '.$time.' for date';\n\t\t}\n\t}\n\n\tif (preg_match('/__b__/i', $format)) {\n\t\t$timetouse = $time + $offsettz + $offsetdst; // TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t// Here ret is string in PHP setup language (strftime was used). Now we convert to $outputlangs.\n\t\t$month = adodb_strftime('%m', $timetouse, $to_gmt);\t\t// If to_gmt = false then adodb_strftime use TZ of server\n\t\t$month = sprintf(\"%02d\", $month); // $month may be return with format '06' on some installation and '6' on other, so we force it to '06'.\n\t\tif ($encodetooutput) {\n\t\t\t$monthtext = $outputlangs->transnoentities('Month'.$month);\n\t\t\t$monthtextshort = $outputlangs->transnoentities('MonthShort'.$month);\n\t\t} else {\n\t\t\t$monthtext = $outputlangs->transnoentitiesnoconv('Month'.$month);\n\t\t\t$monthtextshort = $outputlangs->transnoentitiesnoconv('MonthShort'.$month);\n\t\t}\n\t\t//print 'monthtext='.$monthtext.' monthtextshort='.$monthtextshort;\n\t\t$ret = str_replace('__b__', $monthtextshort, $ret);\n\t\t$ret = str_replace('__B__', $monthtext, $ret);\n\t\t//print 'x'.$outputlangs->charset_output.'-'.$ret.'x';\n\t\t//return $ret;\n\t}\n\tif (preg_match('/__a__/i', $format)) {\n\t\t//print \"time=$time offsettz=$offsettz offsetdst=$offsetdst offsettzstring=$offsettzstring\";\n\t\t$timetouse = $time + $offsettz + $offsetdst; // TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t$w = adodb_strftime('%w', $timetouse, $to_gmt);\t\t// If to_gmt = false then adodb_strftime use TZ of server\n\t\t$dayweek = $outputlangs->transnoentitiesnoconv('Day'.$w);\n\t\t$ret = str_replace('__A__', $dayweek, $ret);\n\t\t$ret = str_replace('__a__', dol_substr($dayweek, 0, 3), $ret);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n *  Return an array with locale date info.\n *  WARNING: This function use PHP server timezone by default to return locale informations.\n *  Be aware to add the third parameter to \"UTC\" if you need to work on UTC.\n *\n *\t@param\tint\t\t\t$timestamp      Timestamp\n *\t@param\tboolean\t\t$fast           Fast mode. deprecated.\n *  @param\tstring\t\t$forcetimezone\t'' to use the PHP server timezone. Or use a form like 'gmt', 'Europe/Paris' or '+0200' to force timezone.\n *\t@return\tarray\t\t\t\t\t\tArray of informations\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'wday' => $dow,\t\t0=sunday, 6=saturday\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power)\n *\t\t\t\t\t\t\t\t\t\t'0' => original timestamp\n * \t@see \t\t\t\t\t\t\t\tdol_print_date(), dol_stringtotime(), dol_mktime()\n */\nfunction dol_getdate($timestamp, $fast = false, $forcetimezone = '')\n{\n\t//$datetimeobj = new DateTime('@'.$timestamp);\n\t$datetimeobj = new DateTime();\n\t$datetimeobj->setTimestamp($timestamp); // Use local PHP server timezone\n\tif ($forcetimezone) {\n\t\t$datetimeobj->setTimezone(new DateTimeZone($forcetimezone == 'gmt' ? 'UTC' : $forcetimezone)); //  (add timezone relative to the date entered)\n\t}\n\t$arrayinfo = array(\n\t\t'year'=>((int) date_format($datetimeobj, 'Y')),\n\t\t'mon'=>((int) date_format($datetimeobj, 'm')),\n\t\t'mday'=>((int) date_format($datetimeobj, 'd')),\n\t\t'wday'=>((int) date_format($datetimeobj, 'w')),\n\t\t'yday'=>((int) date_format($datetimeobj, 'z')),\n\t\t'hours'=>((int) date_format($datetimeobj, 'H')),\n\t\t'minutes'=>((int) date_format($datetimeobj, 'i')),\n\t\t'seconds'=>((int) date_format($datetimeobj, 's')),\n\t\t'0'=>$timestamp\n\t);\n\n\treturn $arrayinfo;\n}\n\n/**\n *\tReturn a timestamp date built from detailed informations (by default a local PHP server timestamp)\n * \tReplace function mktime not available under Windows if year < 1970\n *\tPHP mktime is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *\n * \t@param\tint\t\t\t$hour\t\t\tHour\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$minute\t\t\tMinute\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$second\t\t\tSecond\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$month\t\t\tMonth (1 to 12)\n *\t@param\tint\t\t\t$day\t\t\tDay (1 to 31)\n *\t@param\tint\t\t\t$year\t\t\tYear\n *\t@param\tmixed\t\t$gm\t\t\t\tTrue or 1 or 'gmt'=Input informations are GMT values\n *\t\t\t\t\t\t\t\t\t\tFalse or 0 or 'tzserver' = local to server TZ\n *\t\t\t\t\t\t\t\t\t\t'auto'\n *\t\t\t\t\t\t\t\t\t\t'tzuser' = local to user TZ taking dst into account at the current date. Not yet implemented.\n *\t\t\t\t\t\t\t\t\t\t'tzuserrel' = local to user TZ taking dst into account at the given date. Use this one to convert date input from user.\n *\t\t\t\t\t\t\t\t\t\t'tz,TimeZone' = use specified timezone\n *\t@param\tint\t\t\t$check\t\t\t0=No check on parameters (Can use day 32, etc...)\n *\t@return\tint|string\t\t\t\t\tDate as a timestamp, '' or false if error\n * \t@see \t\t\t\t\t\t\t\tdol_print_date(), dol_stringtotime(), dol_getdate()\n */\nfunction dol_mktime($hour, $minute, $second, $month, $day, $year, $gm = 'auto', $check = 1)\n{\n\tglobal $conf;\n\t//print \"- \".$hour.\",\".$minute.\",\".$second.\",\".$month.\",\".$day.\",\".$year.\",\".$_SERVER[\"WINDIR\"].\" -\";\n\t//print 'gm:'.$gm.' gm==auto:'.($gm == 'auto').'<br>';\n\n\tif ($gm === 'auto') {\n\t\t$gm = (empty($conf) ? 'tzserver' : $conf->tzuserinputkey);\n\t}\n\n\t// Clean parameters\n\tif ($hour == -1 || empty($hour)) {\n\t\t$hour = 0;\n\t}\n\tif ($minute == -1 || empty($minute)) {\n\t\t$minute = 0;\n\t}\n\tif ($second == -1 || empty($second)) {\n\t\t$second = 0;\n\t}\n\n\t// Check parameters\n\tif ($check) {\n\t\tif (!$month || !$day) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($day > 31) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($month > 12) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($hour < 0 || $hour > 24) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($minute < 0 || $minute > 60) {\n\t\t\treturn '';\n\t\t}\n\t\tif ($second < 0 || $second > 60) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tif (empty($gm) || ($gm === 'server' || $gm === 'tzserver')) {\n\t\t$default_timezone = @date_default_timezone_get(); // Example 'Europe/Berlin'\n\t\t$localtz = new DateTimeZone($default_timezone);\n\t} elseif ($gm === 'user' || $gm === 'tzuser' || $gm === 'tzuserrel') {\n\t\t// We use dol_tz_string first because it is more reliable.\n\t\t$default_timezone = (empty($_SESSION[\"dol_tz_string\"]) ? @date_default_timezone_get() : $_SESSION[\"dol_tz_string\"]); // Example 'Europe/Berlin'\n\t\ttry {\n\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t} catch (Exception $e) {\n\t\t\tdol_syslog(\"Warning dol_tz_string contains an invalid value \".$_SESSION[\"dol_tz_string\"], LOG_WARNING);\n\t\t\t$default_timezone = @date_default_timezone_get();\n\t\t}\n\t} elseif (strrpos($gm, \"tz,\") !== false) {\n\t\t$timezone = str_replace(\"tz,\", \"\", $gm); // Example 'tz,Europe/Berlin'\n\t\ttry {\n\t\t\t$localtz = new DateTimeZone($timezone);\n\t\t} catch (Exception $e) {\n\t\t\tdol_syslog(\"Warning passed timezone contains an invalid value \".$timezone, LOG_WARNING);\n\t\t}\n\t}\n\n\tif (empty($localtz)) {\n\t\t$localtz = new DateTimeZone('UTC');\n\t}\n\t//var_dump($localtz);\n\t//var_dump($year.'-'.$month.'-'.$day.'-'.$hour.'-'.$minute);\n\t$dt = new DateTime(null, $localtz);\n\t$dt->setDate((int) $year, (int) $month, (int) $day);\n\t$dt->setTime((int) $hour, (int) $minute, (int) $second);\n\t$date = $dt->getTimestamp(); // should include daylight saving time\n\t//var_dump($date);\n\treturn $date;\n}\n\n\n/**\n *  Return date for now. In most cases, we use this function without parameters (that means GMT time).\n *\n *  @param\tstring\t\t$mode\t'auto' => for backward compatibility (avoid this),\n *  \t\t\t\t\t\t\t'gmt' => we return GMT timestamp,\n * \t\t\t\t\t\t\t\t'tzserver' => we add the PHP server timezone\n *  \t\t\t\t\t\t\t'tzref' => we add the company timezone. Not implemented.\n * \t\t\t\t\t\t\t\t'tzuser' or 'tzuserrel' => we add the user timezone\n *\t@return int   $date\tTimestamp\n */\nfunction dol_now($mode = 'auto')\n{\n\t$ret = 0;\n\n\tif ($mode === 'auto') {\n\t\t$mode = 'gmt';\n\t}\n\n\tif ($mode == 'gmt') {\n\t\t$ret = time(); // Time for now at greenwich.\n\t} elseif ($mode == 'tzserver') {\t\t// Time for now with PHP server timezone added\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond = getServerTimeZoneInt('now'); // Contains tz+dayling saving time\n\t\t$ret = (int) (dol_now('gmt') + ($tzsecond * 3600));\n\t\t//} elseif ($mode == 'tzref') {// Time for now with parent company timezone is added\n\t\t//\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t//\t$tzsecond=getParentCompanyTimeZoneInt();    // Contains tz+dayling saving time\n\t\t//\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t\t//}\n\t} elseif ($mode == 'tzuser' || $mode == 'tzuserrel') {\n\t\t// Time for now with user timezone added\n\t\t//print 'time: '.time();\n\t\t$offsettz = (empty($_SESSION['dol_tz']) ? 0 : $_SESSION['dol_tz']) * 60 * 60;\n\t\t$offsetdst = (empty($_SESSION['dol_dst']) ? 0 : $_SESSION['dol_dst']) * 60 * 60;\n\t\t$ret = (int) (dol_now('gmt') + ($offsettz + $offsetdst));\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n * Return string with formated size\n *\n * @param\tint\t\t$size\t\tSize to print\n * @param\tint\t\t$shortvalue\tTell if we want long value to use another unit (Ex: 1.5Kb instead of 1500b)\n * @param\tint\t\t$shortunit\tUse short label of size unit (for example 'b' instead of 'bytes')\n * @return\tstring\t\t\t\tLink\n */\nfunction dol_print_size($size, $shortvalue = 0, $shortunit = 0)\n{\n\tglobal $conf, $langs;\n\t$level = 1024;\n\n\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t$shortunit = 1;\n\t}\n\n\t// Set value text\n\tif (empty($shortvalue) || $size < ($level * 10)) {\n\t\t$ret = $size;\n\t\t$textunitshort = $langs->trans(\"b\");\n\t\t$textunitlong = $langs->trans(\"Bytes\");\n\t} else {\n\t\t$ret = round($size / $level, 0);\n\t\t$textunitshort = $langs->trans(\"Kb\");\n\t\t$textunitlong = $langs->trans(\"KiloBytes\");\n\t}\n\t// Use long or short text unit\n\tif (empty($shortunit)) {\n\t\t$ret .= ' '.$textunitlong;\n\t} else {\n\t\t$ret .= ' '.$textunitshort;\n\t}\n\n\treturn $ret;\n}\n\n/**\n * Show Url link\n *\n * @param\tstring\t\t$url\t\tUrl to show\n * @param\tstring\t\t$target\t\tTarget for link\n * @param\tint\t\t\t$max\t\tMax number of characters to show\n * @param\tint\t\t\t$withpicto\tWith picto\n * @return\tstring\t\t\t\t\tHTML Link\n */\nfunction dol_print_url($url, $target = '_blank', $max = 32, $withpicto = 0)\n{\n\tglobal $langs;\n\n\tif (empty($url)) {\n\t\treturn '';\n\t}\n\n\t$link = '<a href=\"';\n\tif (!preg_match('/^http/i', $url)) {\n\t\t$link .= 'http://';\n\t}\n\t$link .= $url;\n\t$link .= '\"';\n\tif ($target) {\n\t\t$link .= ' target=\"'.$target.'\"';\n\t}\n\t$link .= '>';\n\tif (!preg_match('/^http/i', $url)) {\n\t\t$link .= 'http://';\n\t}\n\t$link .= dol_trunc($url, $max);\n\t$link .= '</a>';\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto ?img_picto($langs->trans(\"Url\"), 'globe').' ' : '').$link.'</div>';\n}\n\n/**\n * Show EMail link formatted for HTML output.\n *\n * @param\tstring\t\t$email\t\t\tEMail to show (only email, without 'Name of recipient' before)\n * @param \tint\t\t\t$cid \t\t\tId of contact if known\n * @param \tint\t\t\t$socid \t\t\tId of third party if known\n * @param \tint\t\t\t$addlink\t\t0=no link, 1=email has a html email link (+ link to create action if constant AGENDA_ADDACTIONFOREMAIL is on)\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @param\tint\t\t\t$showinvalid\t1=Show warning if syntax email is wrong\n * @param\tint\t\t\t$withpicto\t\tShow picto\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_email($email, $cid = 0, $socid = 0, $addlink = 0, $max = 64, $showinvalid = 1, $withpicto = 0)\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$newemail = dol_escape_htmltag($email);\n\n\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && $withpicto) {\n\t\t$withpicto = 0;\n\t}\n\n\tif (empty($email)) {\n\t\treturn '&nbsp;';\n\t}\n\n\tif (!empty($addlink)) {\n\t\t$newemail = '<a style=\"text-overflow: ellipsis;\" href=\"';\n\t\tif (!preg_match('/^mailto:/i', $email)) {\n\t\t\t$newemail .= 'mailto:';\n\t\t}\n\t\t$newemail .= $email;\n\t\t$newemail .= '\">';\n\t\t$newemail .= dol_trunc($email, $max);\n\t\t$newemail .= '</a>';\n\t\tif ($showinvalid && !isValidEmail($email)) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail .= img_warning($langs->trans(\"ErrorBadEMail\", $email));\n\t\t}\n\n\t\tif (($cid || $socid) && !empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create) {\n\t\t\t$type = 'AC_EMAIL';\n\t\t\t$link = '';\n\t\t\tif (!empty($conf->global->AGENDA_ADDACTIONFOREMAIL)) {\n\t\t\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"), \"calendar\").'</a>';\n\t\t\t}\n\t\t\tif ($link) {\n\t\t\t\t$newemail = '<div>'.$newemail.' '.$link.'</div>';\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($showinvalid && !isValidEmail($email)) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail .= img_warning($langs->trans(\"ErrorBadEMail\", $email));\n\t\t}\n\t}\n\n\t//$rep = '<div class=\"nospan\" style=\"margin-right: 10px\">';\n\t$rep = ($withpicto ? img_picto($langs->trans(\"EMail\").' : '.$email, 'object_email.png').' ' : '').$newemail;\n\t//$rep .= '</div>';\n\tif ($hookmanager) {\n\t\t$parameters = array('cid' => $cid, 'socid' => $socid, 'addlink' => $addlink, 'picto' => $withpicto);\n\t\t$reshook = $hookmanager->executeHooks('printEmail', $parameters, $email);\n\t\tif ($reshook > 0) {\n\t\t\t$rep = '';\n\t\t}\n\t\t$rep .= $hookmanager->resPrint;\n\t}\n\n\treturn $rep;\n}\n\n/**\n * Get array of social network dictionary\n *\n * @return  array       Array of Social Networks Dictionary\n */\nfunction getArrayOfSocialNetworks()\n{\n\tglobal $conf, $db;\n\n\t$socialnetworks = array();\n\t// Enable caching of array\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/memory.lib.php';\n\t$cachekey = 'socialnetworks_' . $conf->entity;\n\t$dataretrieved = dol_getcache($cachekey);\n\tif (!is_null($dataretrieved)) {\n\t\t$socialnetworks = $dataretrieved;\n\t} else {\n\t\t$sql = \"SELECT rowid, code, label, url, icon, active FROM \".MAIN_DB_PREFIX.\"c_socialnetworks\";\n\t\t$sql .= \" WHERE entity=\".$conf->entity;\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t$socialnetworks[$obj->code] = array(\n\t\t\t\t\t'rowid' => $obj->rowid,\n\t\t\t\t\t'label' => $obj->label,\n\t\t\t\t\t'url' => $obj->url,\n\t\t\t\t\t'icon' => $obj->icon,\n\t\t\t\t\t'active' => $obj->active,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tdol_setcache($cachekey, $socialnetworks); // If setting cache fails, this is not a problem, so we do not test result.\n\t}\n\n\treturn $socialnetworks;\n}\n\n/**\n * Show social network link\n *\n * @param\tstring\t\t$value\t\t\t\tSkype to show (only skype, without 'Name of recipient' before)\n * @param\tint \t\t$cid \t\t\t\tId of contact if known\n * @param\tint \t\t$socid \t\t\t\tId of third party if known\n * @param\tstring \t\t$type\t\t\t\t'skype','facebook',...\n * @param\tarray\t\t$dictsocialnetworks socialnetworks availables\n * @return\tstring\t\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_socialnetworks($value, $cid, $socid, $type, $dictsocialnetworks = array())\n{\n\tglobal $conf, $user, $langs;\n\n\t$htmllink = $value;\n\n\tif (empty($value)) {\n\t\treturn '&nbsp;';\n\t}\n\n\tif (!empty($type)) {\n\t\t$htmllink = '<div class=\"divsocialnetwork inline-block valignmiddle\">';\n\t\t// Use dictionary definition for picto $dictsocialnetworks[$type]['icon']\n\t\t$htmllink .= '<span class=\"fa paddingright '.($dictsocialnetworks[$type]['icon'] ? $dictsocialnetworks[$type]['icon'] : 'fa-link').'\"></span>';\n\t\tif ($type == 'skype') {\n\t\t\t$htmllink .= $value;\n\t\t\t$htmllink .= '&nbsp;';\n\t\t\t$htmllink .= '<a href=\"skype:';\n\t\t\t$htmllink .= $value;\n\t\t\t$htmllink .= '?call\" alt=\"'.$langs->trans(\"Call\").'&nbsp;'.$value.'\" title=\"'.$langs->trans(\"Call\").'&nbsp;'.$value.'\">';\n\t\t\t$htmllink .= '<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_callbutton.png\" border=\"0\">';\n\t\t\t$htmllink .= '</a><a href=\"skype:';\n\t\t\t$htmllink .= $value;\n\t\t\t$htmllink .= '?chat\" alt=\"'.$langs->trans(\"Chat\").'&nbsp;'.$value.'\" title=\"'.$langs->trans(\"Chat\").'&nbsp;'.$value.'\">';\n\t\t\t$htmllink .= '<img class=\"paddingleft\" src=\"'.DOL_URL_ROOT.'/theme/common/skype_chatbutton.png\" border=\"0\">';\n\t\t\t$htmllink .= '</a>';\n\t\t\tif (($cid || $socid) && !empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create) {\n\t\t\t\t$addlink = 'AC_SKYPE';\n\t\t\t\t$link = '';\n\t\t\t\tif (!empty($conf->global->AGENDA_ADDACTIONFORSKYPE)) {\n\t\t\t\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$addlink.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"), \"calendar\").'</a>';\n\t\t\t\t}\n\t\t\t\t$htmllink .= ($link ? ' '.$link : '');\n\t\t\t}\n\t\t} else {\n\t\t\tif (!empty($dictsocialnetworks[$type]['url'])) {\n\t\t\t\t$link = str_replace('{socialid}', $value, $dictsocialnetworks[$type]['url']);\n\t\t\t\t$htmllink .= '&nbsp;<a href=\"'.$link.'\" target=\"_blank\">'.$value.'</a>';\n\t\t\t} else {\n\t\t\t\t$htmllink .= $value;\n\t\t\t}\n\t\t}\n\t\t$htmllink .= '</div>';\n\t} else {\n\t\t$langs->load(\"errors\");\n\t\t$htmllink .= img_warning($langs->trans(\"ErrorBadSocialNetworkValue\", $value));\n\t}\n\treturn $htmllink;\n}\n\n/**\n * \tFormat phone numbers according to country\n *\n * \t@param  string  $phone          Phone number to format\n * \t@param  string  $countrycode    Country code to use for formatting\n * \t@param \tint\t\t$cid \t\t    Id of contact if known\n * \t@param \tint\t\t$socid          Id of third party if known\n * \t@param \tstring\t$addlink\t    ''=no link to create action, 'AC_TEL'=add link to clicktodial (if module enabled) and add link to create event (if conf->global->AGENDA_ADDACTIONFORPHONE set)\n * \t@param \tstring\t$separ \t\t    Separation between numbers for a better visibility example : xx.xx.xx.xx.xx\n *  @param\tstring  $withpicto      Show picto\n *  @param\tstring\t$titlealt\t    Text to show on alt\n *  @param  int     $adddivfloat    Add div float around phone.\n * \t@return string \t\t\t\t    Formated phone number\n */\nfunction dol_print_phone($phone, $countrycode = '', $cid = 0, $socid = 0, $addlink = '', $separ = \"&nbsp;\", $withpicto = '', $titlealt = '', $adddivfloat = 0)\n{\n\tglobal $conf, $user, $langs, $mysoc, $hookmanager;\n\n\t// Clean phone parameter\n\t$phone = preg_replace(\"/[\\s.-]/\", \"\", trim($phone));\n\tif (empty($phone)) {\n\t\treturn '';\n\t}\n\tif (!empty($conf->global->MAIN_PHONE_SEPAR)) {\n\t\t$separ = $conf->global->MAIN_PHONE_SEPAR;\n\t}\n\tif (empty($countrycode)) {\n\t\t$countrycode = $mysoc->country_code;\n\t}\n\n\t// Short format for small screens\n\tif ($conf->dol_optimize_smallscreen) {\n\t\t$separ = '';\n\t}\n\n\t$newphone = $phone;\n\tif (strtoupper($countrycode) == \"FR\") {\n\t\t// France\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone = substr($newphone, 0, 2).$separ.substr($newphone, 2, 2).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2);\n\t\t} elseif (dol_strlen($phone) == 7) {\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 2);\n\t\t} elseif (dol_strlen($phone) == 9) {\n\t\t\t$newphone = substr($newphone, 0, 2).$separ.substr($newphone, 2, 3).$separ.substr($newphone, 5, 2).$separ.substr($newphone, 7, 2);\n\t\t} elseif (dol_strlen($phone) == 11) {\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 2).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t} elseif (dol_strlen($phone) == 12) {\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"CA\") {\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone = ($separ != '' ? '(' : '').substr($newphone, 0, 3).($separ != '' ? ')' : '').$separ.substr($newphone, 3, 3).($separ != '' ? '-' : '').substr($newphone, 6, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"PT\") {//Portugal\n\t\tif (dol_strlen($phone) == 13) {//ex: +351_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"SR\") {//Suriname\n\t\tif (dol_strlen($phone) == 10) {//ex: +597_ABC_DEF\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3);\n\t\t} elseif (dol_strlen($phone) == 11) {//ex: +597_ABC_DEFG\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"DE\") {//Allemagne\n\t\tif (dol_strlen($phone) == 14) {//ex:  +49_ABCD_EFGH_IJK\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 4).$separ.substr($newphone, 7, 4).$separ.substr($newphone, 11, 3);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +49_ABC_DEFG_HIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 4).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"ES\") {//Espagne\n\t\tif (dol_strlen($phone) == 12) {//ex:  +34_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"BF\") {// Burkina Faso\n\t\tif (dol_strlen($phone) == 12) {//ex :  +22 A BC_DE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"RO\") {// Roumanie\n\t\tif (dol_strlen($phone) == 12) {//ex :  +40 AB_CDE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"TR\") {//Turquie\n\t\tif (dol_strlen($phone) == 13) {//ex :  +90 ABC_DEF_GHIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"US\") {//Etat-Unis\n\t\tif (dol_strlen($phone) == 12) {//ex: +1 ABC_DEF_GHIJ\n\t\t\t$newphone = substr($newphone, 0, 2).$separ.substr($newphone, 2, 3).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MX\") {//Mexique\n\t\tif (dol_strlen($phone) == 12) {//ex: +52 ABCD_EFG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 4).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 11) {//ex: +52 AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 2).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +52 ABC_DEF_GHIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"ML\") {//Mali\n\t\tif (dol_strlen($phone) == 12) {//ex: +223 AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"TH\") {//Tha\u00eflande\n\t\tif (dol_strlen($phone) == 11) {//ex: +66_ABC_DE_FGH\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 3);\n\t\t} elseif (dol_strlen($phone) == 12) {//ex: +66_A_BCD_EF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MU\") {\n\t\t//Maurice\n\t\tif (dol_strlen($phone) == 11) {//ex: +230_ABC_DE_FG\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t} elseif (dol_strlen($phone) == 12) {//ex: +230_ABCD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 4).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"ZA\") {//Afrique du sud\n\t\tif (dol_strlen($phone) == 12) {//ex: +27_AB_CDE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"SY\") {//Syrie\n\t\tif (dol_strlen($phone) == 12) {//ex: +963_AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +963_AB_CD_EF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"AE\") {//Emirats Arabes Unis\n\t\tif (dol_strlen($phone) == 12) {//ex: +971_ABC_DEF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +971_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t} elseif (dol_strlen($phone) == 14) {//ex: +971_ABC_DEF_GHIK\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"DZ\") {//Alg\u00e9rie\n\t\tif (dol_strlen($phone) == 13) {//ex: +213_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"BE\") {//Belgique\n\t\tif (dol_strlen($phone) == 11) {//ex: +32_ABC_DE_FGH\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 3);\n\t\t} elseif (dol_strlen($phone) == 12) {//ex: +32_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"PF\") {//Polyn\u00e9sie fran\u00e7aise\n\t\tif (dol_strlen($phone) == 12) {//ex: +689_AB_CD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"CO\") {//Colombie\n\t\tif (dol_strlen($phone) == 13) {//ex: +57_ABC_DEF_GH_IJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"JO\") {//Jordanie\n\t\tif (dol_strlen($phone) == 12) {//ex: +962_A_BCD_EF_GH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 1).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"JM\") {//Jama\u00efque\n\t\tif (dol_strlen($newphone) == 12) {//ex: +1867_ABC_DEFG\n\t\t\t$newphone = substr($newphone, 0, 5).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MG\") {//Madagascar\n\t\tif (dol_strlen($phone) == 13) {//ex: +261_AB_CD_EF_GHI\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 2).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"GB\") {//Royaume uni\n\t\tif (dol_strlen($phone) == 13) {//ex: +44_ABCD_EFG_HIJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 4).$separ.substr($newphone, 7, 3).$separ.substr($newphone, 10, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"CH\") {//Suisse\n\t\tif (dol_strlen($phone) == 12) {//ex: +41_AB_CDE_FG_HI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 2).$separ.substr($newphone, 10, 2);\n\t\t} elseif (dol_strlen($phone) == 15) {// +41_AB_CDE_FGH_IJKL\n\t\t\t$newphone = $newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 2).$separ.substr($newphone, 5, 3).$separ.substr($newphone, 8, 3).$separ.substr($newphone, 11, 4);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"TN\") {//Tunisie\n\t\tif (dol_strlen($phone) == 12) {//ex: +216_AB_CDE_FGH\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 2).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"GF\") {//Guyane francaise\n\t\tif (dol_strlen($phone) == 13) {//ex: +594_ABC_DE_FG_HI  (ABC=594 de nouveau)\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"GP\") {//Guadeloupe\n\t\tif (dol_strlen($phone) == 13) {//ex: +590_ABC_DE_FG_HI  (ABC=590 de nouveau)\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"MQ\") {//Martinique\n\t\tif (dol_strlen($phone) == 13) {//ex: +596_ABC_DE_FG_HI  (ABC=596 de nouveau)\n\t\t\t$newphone = substr($newphone, 0, 4).$separ.substr($newphone, 4, 3).$separ.substr($newphone, 7, 2).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"IT\") {//Italie\n\t\tif (dol_strlen($phone) == 12) {//ex: +39_ABC_DEF_GHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 3);\n\t\t} elseif (dol_strlen($phone) == 13) {//ex: +39_ABC_DEF_GH_IJ\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 3).$separ.substr($newphone, 6, 3).$separ.substr($newphone, 9, 2).$separ.substr($newphone, 11, 2);\n\t\t}\n\t} elseif (strtoupper($countrycode) == \"AU\") {\n\t\t//Australie\n\t\tif (dol_strlen($phone) == 12) {\n\t\t\t//ex: +61_A_BCDE_FGHI\n\t\t\t$newphone = substr($newphone, 0, 3).$separ.substr($newphone, 3, 1).$separ.substr($newphone, 4, 4).$separ.substr($newphone, 8, 4);\n\t\t}\n\t}\n\tif (!empty($addlink)) {\t// Link on phone number (+ link to add action if conf->global->AGENDA_ADDACTIONFORPHONE set)\n\t\tif ($conf->browser->layout == 'phone' || (!empty($conf->clicktodial->enabled) && !empty($conf->global->CLICKTODIAL_USE_TEL_LINK_ON_PHONE_NUMBERS))) {\t// If phone or option for, we use link of phone\n\t\t\t$newphoneform = $newphone;\n\t\t\t$newphone = '<a href=\"tel:'.$phone.'\"';\n\t\t\t$newphone .= '>'.$newphoneform.'</a>';\n\t\t} elseif (!empty($conf->clicktodial->enabled) && $addlink == 'AC_TEL') {\t\t// If click to dial, we use click to dial url\n\t\t\tif (empty($user->clicktodial_loaded)) {\n\t\t\t\t$user->fetch_clicktodial();\n\t\t\t}\n\n\t\t\t// Define urlmask\n\t\t\t$urlmask = 'ErrorClickToDialModuleNotConfigured';\n\t\t\tif (!empty($conf->global->CLICKTODIAL_URL)) {\n\t\t\t\t$urlmask = $conf->global->CLICKTODIAL_URL;\n\t\t\t}\n\t\t\tif (!empty($user->clicktodial_url)) {\n\t\t\t\t$urlmask = $user->clicktodial_url;\n\t\t\t}\n\n\t\t\t$clicktodial_poste = (!empty($user->clicktodial_poste) ?urlencode($user->clicktodial_poste) : '');\n\t\t\t$clicktodial_login = (!empty($user->clicktodial_login) ?urlencode($user->clicktodial_login) : '');\n\t\t\t$clicktodial_password = (!empty($user->clicktodial_password) ?urlencode($user->clicktodial_password) : '');\n\t\t\t// This line is for backward compatibility\n\t\t\t$url = sprintf($urlmask, urlencode($phone), $clicktodial_poste, $clicktodial_login, $clicktodial_password);\n\t\t\t// Thoose lines are for substitution\n\t\t\t$substitarray = array('__PHONEFROM__'=>$clicktodial_poste,\n\t\t\t\t\t\t\t\t'__PHONETO__'=>urlencode($phone),\n\t\t\t\t\t\t\t\t'__LOGIN__'=>$clicktodial_login,\n\t\t\t\t\t\t\t\t'__PASS__'=>$clicktodial_password);\n\t\t\t$url = make_substitutions($url, $substitarray);\n\t\t\t$newphonesav = $newphone;\n\t\t\t$newphone = '<a href=\"'.$url.'\"';\n\t\t\tif (!empty($conf->global->CLICKTODIAL_FORCENEWTARGET)) {\n\t\t\t\t$newphone .= ' target=\"_blank\"';\n\t\t\t}\n\t\t\t$newphone .= '>'.$newphonesav.'</a>';\n\t\t}\n\n\t\t//if (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\tif (!empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create) {\n\t\t\t$type = 'AC_TEL';\n\t\t\t$link = '';\n\t\t\tif ($addlink == 'AC_FAX') {\n\t\t\t\t$type = 'AC_FAX';\n\t\t\t}\n\t\t\tif (!empty($conf->global->AGENDA_ADDACTIONFORPHONE)) {\n\t\t\t\t$link = '<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.($cid ? '&amp;contactid='.$cid : '').($socid ? '&amp;socid='.$socid : '').'\">'.img_object($langs->trans(\"AddAction\"), \"calendar\").'</a>';\n\t\t\t}\n\t\t\tif ($link) {\n\t\t\t\t$newphone = '<div>'.$newphone.' '.$link.'</div>';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (empty($titlealt)) {\n\t\t$titlealt = ($withpicto == 'fax' ? $langs->trans(\"Fax\") : $langs->trans(\"Phone\"));\n\t}\n\t$rep = '';\n\n\tif ($hookmanager) {\n\t\t$parameters = array('countrycode' => $countrycode, 'cid' => $cid, 'socid' => $socid, 'titlealt' => $titlealt, 'picto' => $withpicto);\n\t\t$reshook = $hookmanager->executeHooks('printPhone', $parameters, $phone);\n\t\t$rep .= $hookmanager->resPrint;\n\t}\n\tif (empty($reshook)) {\n\t\t$picto = '';\n\t\tif ($withpicto) {\n\t\t\tif ($withpicto == 'fax') {\n\t\t\t\t$picto = 'phoning_fax';\n\t\t\t} elseif ($withpicto == 'phone') {\n\t\t\t\t$picto = 'phoning';\n\t\t\t} elseif ($withpicto == 'mobile') {\n\t\t\t\t$picto = 'phoning_mobile';\n\t\t\t} else {\n\t\t\t\t$picto = '';\n\t\t\t}\n\t\t}\n\t\tif ($adddivfloat) {\n\t\t\t$rep .= '<div class=\"nospan float\" style=\"margin-right: 10px\">';\n\t\t} else {\n\t\t\t$rep .= '<span style=\"margin-right: 10px;\">';\n\t\t}\n\t\t$rep .= ($withpicto ?img_picto($titlealt, 'object_'.$picto.'.png').' ' : '').$newphone;\n\t\tif ($adddivfloat) {\n\t\t\t$rep .= '</div>';\n\t\t} else {\n\t\t\t$rep .= '</span>';\n\t\t}\n\t}\n\n\treturn $rep;\n}\n\n/**\n * \tReturn an IP formated to be shown on screen\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@param\tint\t\t$mode\t\t0=return IP + country/flag, 1=return only country/flag, 2=return only IP\n * \t@return string \t\t\t\tFormated IP, with country if GeoIP module is enabled\n */\nfunction dol_print_ip($ip, $mode = 0)\n{\n\tglobal $conf, $langs;\n\n\t$ret = '';\n\n\tif (empty($mode)) {\n\t\t$ret .= $ip;\n\t}\n\n\tif ($mode != 2) {\n\t\t$countrycode = dolGetCountryCodeFromIp($ip);\n\t\tif ($countrycode) {\t// If success, countrycode is us, fr, ...\n\t\t\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/common/flags/'.$countrycode.'.png')) {\n\t\t\t\t$ret .= ' '.img_picto($countrycode.' '.$langs->trans(\"AccordingToGeoIPDatabase\"), DOL_URL_ROOT.'/theme/common/flags/'.$countrycode.'.png', '', 1);\n\t\t\t} else {\n\t\t\t\t$ret .= ' ('.$countrycode.')';\n\t\t\t}\n\t\t} else {\n\t\t\t// Nothing\n\t\t}\n\t}\n\n\treturn $ret;\n}\n\n/**\n * Return the IP of remote user.\n * Take HTTP_X_FORWARDED_FOR (defined when using proxy)\n * Then HTTP_CLIENT_IP if defined (rare)\n * Then REMOTE_ADDR (no way to be modified by user but may be wrong if user is using a proxy)\n *\n * @return\tstring\t\tIp of remote user.\n */\nfunction getUserRemoteIP()\n{\n\tif (empty($_SERVER['HTTP_X_FORWARDED_FOR']) || preg_match('/[^0-9\\.\\:,\\[\\]]/', $_SERVER['HTTP_X_FORWARDED_FOR'])) {\n\t\tif (empty($_SERVER['HTTP_CLIENT_IP']) || preg_match('/[^0-9\\.\\:,\\[\\]]/', $_SERVER['HTTP_CLIENT_IP'])) {\n\t\t\tif (empty($_SERVER[\"HTTP_CF_CONNECTING_IP\"])) {\n\t\t\t\t$ip = (empty($_SERVER['REMOTE_ADDR']) ? '' : $_SERVER['REMOTE_ADDR']);\t// value may have been the IP of the proxy and not the client\n\t\t\t} else {\n\t\t\t\t$ip = $_SERVER[\"HTTP_CF_CONNECTING_IP\"];\t// value here may have been forged by client\n\t\t\t}\n\t\t} else {\n\t\t\t$ip = $_SERVER['HTTP_CLIENT_IP']; // value is clean here but may have been forged by proxy\n\t\t}\n\t} else {\n\t\t$ip = $_SERVER['HTTP_X_FORWARDED_FOR']; // value is clean here but may have been forged by proxy\n\t}\n\treturn $ip;\n}\n\n/**\n * Return if we are using a HTTPS connexion\n * Check HTTPS (no way to be modified by user but may be empty or wrong if user is using a proxy)\n * Take HTTP_X_FORWARDED_PROTO (defined when using proxy)\n * Then HTTP_X_FORWARDED_SSL\n *\n * @return\tboolean\t\tTrue if user is using HTTPS\n */\nfunction isHTTPS()\n{\n\t$isSecure = false;\n\tif (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') {\n\t\t$isSecure = true;\n\t} elseif (!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https' || !empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on') {\n\t\t$isSecure = true;\n\t}\n\treturn $isSecure;\n}\n\n/**\n * \tReturn a country code from IP. Empty string if not found.\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@return string \t\t\t\tCountry code ('us', 'fr', ...)\n */\nfunction dolGetCountryCodeFromIp($ip)\n{\n\tglobal $conf;\n\n\t$countrycode = '';\n\n\tif (!empty($conf->geoipmaxmind->enabled)) {\n\t\t$datafile = $conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='/usr/share/GeoIP/GeoIP.dat';    Note that this must be downloaded datafile (not same than datafile provided with ubuntu packages)\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip = new DolGeoIP('country', $datafile);\n\t\t//print 'ip='.$ip.' databaseType='.$geoip->gi->databaseType.\" GEOIP_CITY_EDITION_REV1=\".GEOIP_CITY_EDITION_REV1.\"\\n\";\n\t\t$countrycode = $geoip->getCountryCodeFromIP($ip);\n\t}\n\n\treturn $countrycode;\n}\n\n\n/**\n *  Return country code for current user.\n *  If software is used inside a local network, detection may fails (we need a public ip)\n *\n *  @return     string      Country code (fr, es, it, us, ...)\n */\nfunction dol_user_country()\n{\n\tglobal $conf, $langs, $user;\n\n\t//$ret=$user->xxx;\n\t$ret = '';\n\tif (!empty($conf->geoipmaxmind->enabled)) {\n\t\t$ip = getUserRemoteIP();\n\t\t$datafile = $conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip = new DolGeoIP('country', $datafile);\n\t\t$countrycode = $geoip->getCountryCodeFromIP($ip);\n\t\t$ret = $countrycode;\n\t}\n\treturn $ret;\n}\n\n/**\n *  Format address string\n *\n *  @param\tstring\t$address    Address string, already formatted with dol_format_address()\n *  @param  int\t\t$htmlid     Html ID (for example 'gmap')\n *  @param  int\t\t$element    'thirdparty'|'contact'|'member'|'other'\n *  @param  int\t\t$id         Id of object\n *  @param\tint\t\t$noprint\tNo output. Result is the function return\n *  @param  string  $charfornl  Char to use instead of nl2br. '' means we use a standad nl2br.\n *  @return string|void\t\t\tNothing if noprint is 0, formatted address if noprint is 1\n *  @see dol_format_address()\n */\nfunction dol_print_address($address, $htmlid, $element, $id, $noprint = 0, $charfornl = '')\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$out = '';\n\n\tif ($address) {\n\t\tif ($hookmanager) {\n\t\t\t$parameters = array('element' => $element, 'id' => $id);\n\t\t\t$reshook = $hookmanager->executeHooks('printAddress', $parameters, $address);\n\t\t\t$out .= $hookmanager->resPrint;\n\t\t}\n\t\tif (empty($reshook)) {\n\t\t\tif (empty($charfornl)) {\n\t\t\t\t$out .= nl2br($address);\n\t\t\t} else {\n\t\t\t\t$out .= preg_replace('/[\\r\\n]+/', $charfornl, $address);\n\t\t\t}\n\n\t\t\t// TODO Remove this block, we can add this using the hook now\n\t\t\t$showgmap = $showomap = 0;\n\t\t\tif (($element == 'thirdparty' || $element == 'societe') && !empty($conf->google->enabled) && !empty($conf->global->GOOGLE_ENABLE_GMAPS)) {\n\t\t\t\t$showgmap = 1;\n\t\t\t}\n\t\t\tif ($element == 'contact' && !empty($conf->google->enabled) && !empty($conf->global->GOOGLE_ENABLE_GMAPS_CONTACTS)) {\n\t\t\t\t$showgmap = 1;\n\t\t\t}\n\t\t\tif ($element == 'member' && !empty($conf->google->enabled) && !empty($conf->global->GOOGLE_ENABLE_GMAPS_MEMBERS)) {\n\t\t\t\t$showgmap = 1;\n\t\t\t}\n\t\t\tif (($element == 'thirdparty' || $element == 'societe') && !empty($conf->openstreetmap->enabled) && !empty($conf->global->OPENSTREETMAP_ENABLE_MAPS)) {\n\t\t\t\t$showomap = 1;\n\t\t\t}\n\t\t\tif ($element == 'contact' && !empty($conf->openstreetmap->enabled) && !empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_CONTACTS)) {\n\t\t\t\t$showomap = 1;\n\t\t\t}\n\t\t\tif ($element == 'member' && !empty($conf->openstreetmap->enabled) && !empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_MEMBERS)) {\n\t\t\t\t$showomap = 1;\n\t\t\t}\n\t\t\tif ($showgmap) {\n\t\t\t\t$url = dol_buildpath('/google/gmaps.php?mode='.$element.'&id='.$id, 1);\n\t\t\t\t$out .= ' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t\tif ($showomap) {\n\t\t\t\t$url = dol_buildpath('/openstreetmap/maps.php?mode='.$element.'&id='.$id, 1);\n\t\t\t\t$out .= ' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'_openstreetmap\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t}\n\t}\n\tif ($noprint) {\n\t\treturn $out;\n\t} else {\n\t\tprint $out;\n\t}\n}\n\n\n/**\n *\tReturn true if email syntax is ok.\n *\n *\t@param\t    string\t\t$address    \t\t\temail (Ex: \"toto@examle.com\". Long form \"John Do <johndo@example.com>\" will be false)\n *  @param\t\tint\t\t\t$acceptsupervisorkey\tIf 1, the special string '__SUPERVISOREMAIL__' is also accepted as valid\n *\t@return     boolean     \t\t\t\t\t\ttrue if email syntax is OK, false if KO or empty string\n *  @see isValidMXRecord()\n */\nfunction isValidEmail($address, $acceptsupervisorkey = 0)\n{\n\tif ($acceptsupervisorkey && $address == '__SUPERVISOREMAIL__') {\n\t\treturn true;\n\t}\n\tif (filter_var($address, FILTER_VALIDATE_EMAIL)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *\tReturn if the domain name has a valid MX record.\n *  WARNING: This need function idn_to_ascii, checkdnsrr and getmxrr\n *\n *\t@param\t    string\t\t$domain\t    \t\t\tDomain name (Ex: \"yahoo.com\", \"yhaoo.com\", \"dolibarr.fr\")\n *\t@return     int     \t\t\t\t\t\t\t-1 if error (function not available), 0=Not valid, 1=Valid\n *  @see isValidEmail()\n */\nfunction isValidMXRecord($domain)\n{\n\tif (function_exists('idn_to_ascii') && function_exists('checkdnsrr')) {\n\t\tif (!checkdnsrr(idn_to_ascii($domain), 'MX')) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (function_exists('getmxrr')) {\n\t\t\t$mxhosts = array();\n\t\t\t$weight = array();\n\t\t\tgetmxrr(idn_to_ascii($domain), $mxhosts, $weight);\n\t\t\tif (count($mxhosts) > 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (count($mxhosts) == 1 && !empty($mxhosts[0])) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n *  Return true if phone number syntax is ok\n *  TODO Decide what to do with this\n *\n *  @param\tstring\t\t$phone\t\tphone (Ex: \"0601010101\")\n *  @return boolean     \t\t\ttrue if phone syntax is OK, false if KO or empty string\n */\nfunction isValidPhone($phone)\n{\n\treturn true;\n}\n\n\n/**\n * Make a strlen call. Works even if mbstring module not enabled\n *\n * @param   string\t\t$string\t\t\t\tString to calculate length\n * @param   string\t\t$stringencoding\t\tEncoding of string\n * @return  int\t\t\t\t\t\t\t\tLength of string\n */\nfunction dol_strlen($string, $stringencoding = 'UTF-8')\n{\n\tif (function_exists('mb_strlen')) {\n\t\treturn mb_strlen($string, $stringencoding);\n\t} else {\n\t\treturn strlen($string);\n\t}\n}\n\n/**\n * Make a substring. Works even if mbstring module is not enabled for better compatibility.\n *\n * @param\tstring\t$string\t\t\t\tString to scan\n * @param\tstring\t$start\t\t\t\tStart position\n * @param\tint\t\t$length\t\t\t\tLength (in nb of characters or nb of bytes depending on trunconbytes param)\n * @param   string\t$stringencoding\t\tPage code used for input string encoding\n * @param\tint\t\t$trunconbytes\t\t1=Length is max of bytes instead of max of characters\n * @return  string\t\t\t\t\t\tsubstring\n */\nfunction dol_substr($string, $start, $length, $stringencoding = '', $trunconbytes = 0)\n{\n\tglobal $langs;\n\n\tif (empty($stringencoding)) {\n\t\t$stringencoding = $langs->charset_output;\n\t}\n\n\t$ret = '';\n\tif (empty($trunconbytes)) {\n\t\tif (function_exists('mb_substr')) {\n\t\t\t$ret = mb_substr($string, $start, $length, $stringencoding);\n\t\t} else {\n\t\t\t$ret = substr($string, $start, $length);\n\t\t}\n\t} else {\n\t\tif (function_exists('mb_strcut')) {\n\t\t\t$ret = mb_strcut($string, $start, $length, $stringencoding);\n\t\t} else {\n\t\t\t$ret = substr($string, $start, $length);\n\t\t}\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tTruncate a string to a particular length adding '\u2026' if string larger than length.\n * \tIf length = max length+1, we do no truncate to avoid having just 1 char replaced with '\u2026'.\n *  MAIN_DISABLE_TRUNC=1 can disable all truncings\n *\n *\t@param\tstring\t$string\t\t\t\tString to truncate\n *\t@param  int\t\t$size\t\t\t\tMax string size visible (excluding \u2026). 0 for no limit. WARNING: Final string size can have 3 more chars (if we added \u2026, or if size was max+1 so it does not worse to replace with ...)\n *\t@param\tstring\t$trunc\t\t\t\tWhere to trunc: 'right', 'left', 'middle' (size must be a 2 power), 'wrap'\n * \t@param\tstring\t$stringencoding\t\tTell what is source string encoding\n *  @param\tint\t\t$nodot\t\t\t\tTruncation do not add \u2026 after truncation. So it's an exact truncation.\n *  @param  int     $display            Trunc is used to display data and can be changed for small screen. TODO Remove this param (must be dealt with CSS)\n *\t@return string\t\t\t\t\t\tTruncated string. WARNING: length is never higher than $size if $nodot is set, but can be 3 chars higher otherwise.\n */\nfunction dol_trunc($string, $size = 40, $trunc = 'right', $stringencoding = 'UTF-8', $nodot = 0, $display = 0)\n{\n\tglobal $conf;\n\n\tif (empty($size) || !empty($conf->global->MAIN_DISABLE_TRUNC)) {\n\t\treturn $string;\n\t}\n\n\tif (empty($stringencoding)) {\n\t\t$stringencoding = 'UTF-8';\n\t}\n\t// reduce for small screen\n\tif ($conf->dol_optimize_smallscreen == 1 && $display == 1) {\n\t\t$size = round($size / 3);\n\t}\n\n\t// We go always here\n\tif ($trunc == 'right') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > ($size + ($nodot ? 0 : 1))) {\n\t\t\t// If nodot is 0 and size is 1 chars more, we don't trunc and don't add \u2026\n\t\t\treturn dol_substr($newstring, 0, $size, $stringencoding).($nodot ? '' : '\u2026');\n\t\t} else {\n\t\t\t//return 'u'.$size.'-'.$newstring.'-'.dol_strlen($newstring,$stringencoding).'-'.$string;\n\t\t\treturn $string;\n\t\t}\n\t} elseif ($trunc == 'middle') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > 2 && dol_strlen($newstring, $stringencoding) > ($size + 1)) {\n\t\t\t$size1 = round($size / 2);\n\t\t\t$size2 = round($size / 2);\n\t\t\treturn dol_substr($newstring, 0, $size1, $stringencoding).'\u2026'.dol_substr($newstring, dol_strlen($newstring, $stringencoding) - $size2, $size2, $stringencoding);\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t} elseif ($trunc == 'left') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > ($size + ($nodot ? 0 : 1))) {\n\t\t\t// If nodot is 0 and size is 1 chars more, we don't trunc and don't add \u2026\n\t\t\treturn '\u2026'.dol_substr($newstring, dol_strlen($newstring, $stringencoding) - $size, $size, $stringencoding);\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t} elseif ($trunc == 'wrap') {\n\t\t$newstring = dol_textishtml($string) ? dol_string_nohtmltag($string, 1) : $string;\n\t\tif (dol_strlen($newstring, $stringencoding) > ($size + 1)) {\n\t\t\treturn dol_substr($newstring, 0, $size, $stringencoding).\"\\n\".dol_trunc(dol_substr($newstring, $size, dol_strlen($newstring, $stringencoding) - $size, $stringencoding), $size, $trunc);\n\t\t} else {\n\t\t\treturn $string;\n\t\t}\n\t} else {\n\t\treturn 'BadParam3CallingDolTrunc';\n\t}\n}\n\n/**\n *\tShow picto whatever it's its name (generic function)\n *\n *\t@param      string\t\t$titlealt         \t\tText on title tag for tooltip. Not used if param notitle is set to 1.\n *\t@param      string\t\t$picto       \t\t\tName of image file to show ('filenew', ...)\n *\t\t\t\t\t\t\t\t\t\t\t\t\tIf no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                  \t\t\t\tExample: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                  \t\t\t\tExample: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                  \t\t\t\tExample: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@param\t\tstring\t\t$moreatt\t\t\t\tAdd more attribute on img tag (For example 'class=\"pictofixedwidth\"')\n *\t@param\t\tboolean|int\t$pictoisfullpath\t\tIf true or 1, image path is a full path\n *\t@param\t\tint\t\t\t$srconly\t\t\t\tReturn only content of the src attribute of img.\n *  @param\t\tint\t\t\t$notitle\t\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *  @param\t\tstring\t\t$alt\t\t\t\t\tForce alt for bind people\n *  @param\t\tstring\t\t$morecss\t\t\t\tAdd more class css on img tag (For example 'myclascss').\n *  @param\t\tstring\t\t$marginleftonlyshort\t1 = Add a short left margin on picto, 2 = Add a larger left margin on picto, 0 = No margin left. Works for fontawesome picto only.\n *  @return     string       \t\t\t\t    \tReturn img tag\n *  @see        img_object(), img_picto_common()\n */\nfunction img_picto($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly = 0, $notitle = 0, $alt = '', $morecss = '', $marginleftonlyshort = 2)\n{\n\tglobal $conf, $langs;\n\t// We forge fullpathpicto for image to $path/img/$picto. By default, we take DOL_URL_ROOT/theme/$conf->theme/img/$picto\n\t$url = DOL_URL_ROOT;\n\t$theme = isset($conf->theme) ? $conf->theme : null;\n\t$path = 'theme/'.$theme;\n\t// Define fullpathpicto to use into src\n\tif ($pictoisfullpath) {\n\t\t// Clean parameters\n\t\tif (!preg_match('/(\\.png|\\.gif|\\.svg)$/i', $picto)) {\n\t\t\t$picto .= '.png';\n\t\t}\n\t\t$fullpathpicto = $picto;\n\t\t$reg = array();\n\t\tif (preg_match('/class=\"([^\"]+)\"/', $moreatt, $reg)) {\n\t\t\t$morecss .= ($morecss ? ' ' : '').$reg[1];\n\t\t\t$moreatt = str_replace('class=\"'.$reg[1].'\"', '', $moreatt);\n\t\t}\n\t} else {\n\t\t$pictowithouttext = preg_replace('/(\\.png|\\.gif|\\.svg)$/', '', $picto);\n\t\t$pictowithouttext = str_replace('object_', '', $pictowithouttext);\n\t\tif (empty($srconly) && in_array($pictowithouttext, array(\n\t\t\t\t'1downarrow', '1uparrow', '1leftarrow', '1rightarrow', '1uparrow_selected', '1downarrow_selected', '1leftarrow_selected', '1rightarrow_selected',\n\t\t\t\t'accountancy', 'account', 'accountline', 'action', 'add', 'address', 'angle-double-down', 'angle-double-up', 'asset',\n\t\t\t\t'bank_account', 'barcode', 'bank', 'bill', 'billa', 'billr', 'billd', 'bookmark', 'bom', 'bug', 'building',\n\t\t\t\t'calendar', 'calendarmonth', 'calendarweek', 'calendarday', 'calendarperuser', 'calendarpertype',\n\t\t\t\t'cash-register', 'category', 'chart', 'check', 'clock', 'close_title', 'cog', 'collab', 'company', 'contact', 'country', 'contract', 'conversation', 'cron', 'cubes',\n\t\t\t\t'multicurrency',\n\t\t\t\t'delete', 'dolly', 'dollyrevert', 'donation', 'download', 'dynamicprice',\n\t\t\t\t'edit', 'ellipsis-h', 'email', 'eraser', 'establishment', 'expensereport', 'external-link-alt', 'external-link-square-alt',\n\t\t\t\t'filter', 'file-code', 'file-export', 'file-import', 'file-upload', 'autofill', 'folder', 'folder-open', 'folder-plus',\n\t\t\t\t'generate', 'globe', 'globe-americas', 'graph', 'grip', 'grip_title', 'group',\n\t\t\t\t'help', 'holiday',\n\t\t\t\t'images', 'incoterm', 'info', 'intervention', 'inventory', 'intracommreport', 'knowledgemanagement',\n\t\t\t\t'label', 'language', 'link', 'list', 'list-alt', 'listlight', 'loan', 'lot', 'long-arrow-alt-right',\n\t\t\t\t'margin', 'map-marker-alt', 'member', 'meeting', 'money-bill-alt', 'movement', 'mrp', 'note', 'next',\n\t\t\t\t'off', 'on', 'order',\n\t\t\t\t'paiment', 'paragraph', 'play', 'pdf', 'phone', 'phoning', 'phoning_mobile', 'phoning_fax', 'playdisabled', 'previous', 'poll', 'pos', 'printer', 'product', 'propal', 'stock', 'resize', 'service', 'stats', 'trip',\n\t\t\t\t'security', 'setup', 'share-alt', 'sign-out', 'split', 'stripe', 'stripe-s', 'switch_off', 'switch_on', 'tools', 'unlink', 'uparrow', 'user', 'vcard', 'wrench',\n\t\t\t\t'github', 'jabber', 'skype', 'twitter', 'facebook', 'linkedin', 'instagram', 'snapchat', 'youtube', 'google-plus-g', 'whatsapp',\n\t\t\t\t'chevron-left', 'chevron-right', 'chevron-down', 'chevron-top', 'commercial', 'companies',\n\t\t\t\t'generic', 'home', 'hrm', 'members', 'products', 'invoicing',\n\t\t\t\t'partnership', 'payment', 'pencil-ruler', 'preview', 'project', 'projectpub', 'projecttask', 'question', 'refresh', 'salary', 'shipment',\n\t\t\t\t'supplier_invoice', 'supplier_invoicea', 'supplier_invoicer', 'supplier_invoiced',\n\t\t\t\t'technic', 'ticket',\n\t\t\t\t'error', 'warning',\n\t\t\t\t'recent', 'reception', 'recruitmentcandidature', 'recruitmentjobposition', 'resource',\n\t\t\t\t'shapes', 'supplier', 'supplier_proposal', 'supplier_order', 'supplier_invoice',\n\t\t\t\t'timespent', 'title_setup', 'title_accountancy', 'title_bank', 'title_hrm', 'title_agenda',\n\t\t\t\t'uncheck', 'user-cog', 'website', 'workstation',\n\t\t\t\t'conferenceorbooth', 'eventorganization'\n\t\t\t))) {\n\t\t\t$fakey = $pictowithouttext;\n\t\t\t$facolor = '';\n\t\t\t$fasize = '';\n\t\t\t$fa = 'fas';\n\t\t\tif (in_array($pictowithouttext, array('clock', 'establishment', 'generic', 'minus-square', 'object_generic', 'pdf', 'plus-square', 'timespent', 'note', 'off', 'on', 'object_bookmark', 'bookmark', 'vcard'))) {\n\t\t\t\t$fa = 'far';\n\t\t\t}\n\t\t\tif (in_array($pictowithouttext, array('black-tie', 'github', 'skype', 'twitter', 'facebook', 'linkedin', 'instagram', 'snapchat', 'stripe', 'stripe-s', 'youtube', 'google-plus-g', 'whatsapp'))) {\n\t\t\t\t$fa = 'fab';\n\t\t\t}\n\n\t\t\t$arrayconvpictotofa = array(\n\t\t\t\t'account'=>'university', 'accountline'=>'receipt', 'accountancy'=>'search-dollar', 'action'=>'calendar-alt', 'add'=>'plus-circle', 'address'=> 'address-book', 'asset'=>'money-check-alt', 'autofill'=>'fill',\n\t\t\t\t'bank_account'=>'university',\n\t\t\t\t'bill'=>'file-invoice-dollar', 'billa'=>'file-excel', 'billr'=>'file-invoice-dollar', 'billd'=>'file-medical',\n\t\t\t\t'supplier_invoice'=>'file-invoice-dollar', 'supplier_invoicea'=>'file-excel', 'supplier_invoicer'=>'file-invoice-dollar', 'supplier_invoiced'=>'file-medical',\n\t\t\t\t'bom'=>'shapes',\n\t\t\t\t'chart'=>'chart-line', 'company'=>'building', 'contact'=>'address-book', 'contract'=>'suitcase', 'collab'=>'people-arrows', 'conversation'=>'comments', 'country'=>'globe-americas', 'cron'=>'business-time',\n\t\t\t\t'donation'=>'file-alt', 'dynamicprice'=>'hand-holding-usd',\n\t\t\t\t'setup'=>'cog', 'companies'=>'building', 'products'=>'cube', 'commercial'=>'suitcase', 'invoicing'=>'coins',\n\t\t\t\t'accounting'=>'search-dollar', 'category'=>'tag', 'dollyrevert'=>'dolly',\n\t\t\t\t'generate'=>'plus-square', 'hrm'=>'user-tie', 'incoterm'=>'truck-loading',\n\t\t\t\t'margin'=>'calculator', 'members'=>'user-friends', 'ticket'=>'ticket-alt', 'globe'=>'external-link-alt', 'lot'=>'barcode',\n\t\t\t\t'email'=>'at', 'establishment'=>'building',\n\t\t\t\t'edit'=>'pencil-alt', 'graph'=>'chart-line', 'grip_title'=>'arrows-alt', 'grip'=>'arrows-alt', 'help'=>'question-circle',\n\t\t\t\t'generic'=>'file', 'holiday'=>'umbrella-beach',\n\t\t\t\t'info'=>'info-circle', 'inventory'=>'boxes', 'intracommreport'=>'globe-europe', 'knowledgemanagement'=>'ticket-alt', 'label'=>'layer-group', 'loan'=>'money-bill-alt',\n\t\t\t\t'member'=>'user-alt', 'meeting'=>'chalkboard-teacher', 'mrp'=>'cubes', 'next'=>'arrow-alt-circle-right',\n\t\t\t\t'trip'=>'wallet', 'expensereport'=>'wallet', 'group'=>'users', 'movement'=>'people-carry',\n\t\t\t\t'sign-out'=>'sign-out-alt',\n\t\t\t\t'switch_off'=>'toggle-off', 'switch_on'=>'toggle-on', 'check'=>'check', 'bookmark'=>'star', 'bookmark'=>'star',\n\t\t\t\t'bank'=>'university', 'close_title'=>'times', 'delete'=>'trash', 'edit'=>'pencil-alt', 'filter'=>'filter',\n\t\t\t\t'list-alt'=>'list-alt', 'calendar'=>'calendar-alt', 'calendarmonth'=>'calendar-alt', 'calendarweek'=>'calendar-week', 'calendarmonth'=>'calendar-alt', 'calendarday'=>'calendar-day', 'calendarperuser'=>'table',\n\t\t\t\t'intervention'=>'ambulance', 'invoice'=>'file-invoice-dollar', 'multicurrency'=>'dollar-sign', 'order'=>'file-invoice',\n\t\t\t\t'error'=>'exclamation-triangle', 'warning'=>'exclamation-triangle',\n\t\t\t\t'other'=>'square',\n\t\t\t\t'playdisabled'=>'play', 'pdf'=>'file-pdf',  'poll'=>'check-double', 'pos'=>'cash-register', 'preview'=>'binoculars', 'project'=>'project-diagram', 'projectpub'=>'project-diagram', 'projecttask'=>'tasks', 'propal'=>'file-signature',\n\t\t\t\t'partnership'=>'handshake', 'payment'=>'money-check-alt', 'phoning'=>'phone', 'phoning_mobile'=>'mobile-alt', 'phoning_fax'=>'fax', 'previous'=>'arrow-alt-circle-left', 'printer'=>'print', 'product'=>'cube', 'service'=>'concierge-bell',\n\t\t\t\t'recent' => 'question', 'reception'=>'dolly', 'recruitmentjobposition'=>'id-card-alt', 'recruitmentcandidature'=>'id-badge',\n\t\t\t\t'resize'=>'crop', 'supplier_order'=>'dol-order_supplier', 'supplier_proposal'=>'file-signature',\n\t\t\t\t'refresh'=>'redo', 'resource'=>'laptop-house',\n\t\t\t\t'security'=>'key', 'salary'=>'wallet', 'shipment'=>'dolly', 'stock'=>'box-open', 'stats' => 'chart-bar', 'split'=>'code-branch', 'stripe'=>'stripe-s',\n\t\t\t\t'supplier'=>'building', 'supplier_invoice'=>'file-invoice-dollar', 'technic'=>'cogs', 'ticket'=>'ticket-alt',\n\t\t\t\t'timespent'=>'clock', 'title_setup'=>'tools', 'title_accountancy'=>'money-check-alt', 'title_bank'=>'university', 'title_hrm'=>'umbrella-beach',\n\t\t\t\t'title_agenda'=>'calendar-alt',\n\t\t\t\t'uncheck'=>'times', 'uparrow'=>'share', 'vcard'=>'address-card',\n\t\t\t\t'jabber'=>'comment-o',\n\t\t\t\t'website'=>'globe-americas', 'workstation'=>'pallet',\n\t\t\t\t'conferenceorbooth'=>'chalkboard-teacher', 'eventorganization'=>'project-diagram'\n\t\t\t);\n\t\t\tif ($pictowithouttext == 'off') {\n\t\t\t\t$fakey = 'fa-square';\n\t\t\t\t$fasize = '1.3em';\n\t\t\t} elseif ($pictowithouttext == 'on') {\n\t\t\t\t$fakey = 'fa-check-square';\n\t\t\t\t$fasize = '1.3em';\n\t\t\t} elseif ($pictowithouttext == 'listlight') {\n\t\t\t\t$fakey = 'fa-download';\n\t\t\t\t$marginleftonlyshort = 1;\n\t\t\t} elseif ($pictowithouttext == 'printer') {\n\t\t\t\t$fakey = 'fa-print';\n\t\t\t\t$fasize = '1.2em';\n\t\t\t} elseif ($pictowithouttext == 'note') {\n\t\t\t\t$fakey = 'fa-sticky-note';\n\t\t\t\t$marginleftonlyshort = 1;\n\t\t\t} elseif (in_array($pictowithouttext, array('1uparrow', '1downarrow', '1leftarrow', '1rightarrow', '1uparrow_selected', '1downarrow_selected', '1leftarrow_selected', '1rightarrow_selected'))) {\n\t\t\t\t$convertarray = array('1uparrow'=>'caret-up', '1downarrow'=>'caret-down', '1leftarrow'=>'caret-left', '1rightarrow'=>'caret-right', '1uparrow_selected'=>'caret-up', '1downarrow_selected'=>'caret-down', '1leftarrow_selected'=>'caret-left', '1rightarrow_selected'=>'caret-right');\n\t\t\t\t$fakey = 'fa-'.$convertarray[$pictowithouttext];\n\t\t\t\tif (preg_match('/selected/', $pictowithouttext)) {\n\t\t\t\t\t$facolor = '#888';\n\t\t\t\t}\n\t\t\t\t$marginleftonlyshort = 1;\n\t\t\t} elseif (!empty($arrayconvpictotofa[$pictowithouttext])) {\n\t\t\t\t$fakey = 'fa-'.$arrayconvpictotofa[$pictowithouttext];\n\t\t\t} else {\n\t\t\t\t$fakey = 'fa-'.$pictowithouttext;\n\t\t\t}\n\n\t\t\tif (in_array($pictowithouttext, array('dollyrevert', 'member', 'members', 'contract', 'group', 'resource', 'shipment'))) {\n\t\t\t\t$morecss = 'em092';\n\t\t\t}\n\t\t\tif (in_array($pictowithouttext, array('conferenceorbooth', 'collab', 'eventorganization', 'holiday', 'info', 'project', 'workstation'))) {\n\t\t\t\t$morecss = 'em088';\n\t\t\t}\n\t\t\tif (in_array($pictowithouttext, array('asset', 'intervention', 'payment', 'loan', 'partnership', 'stock', 'technic'))) {\n\t\t\t\t$morecss = 'em080';\n\t\t\t}\n\n\t\t\t// Define $marginleftonlyshort\n\t\t\t$arrayconvpictotomarginleftonly = array(\n\t\t\t\t'bank', 'check', 'delete', 'generic', 'grip', 'grip_title', 'jabber',\n\t\t\t\t'grip_title', 'grip', 'listlight', 'note', 'on', 'off', 'playdisabled', 'printer', 'resize', 'sign-out', 'stats', 'switch_on', 'switch_off',\n\t\t\t\t'uparrow', '1uparrow', '1downarrow', '1leftarrow', '1rightarrow', '1uparrow_selected', '1downarrow_selected', '1leftarrow_selected', '1rightarrow_selected'\n\t\t\t);\n\t\t\tif (!isset($arrayconvpictotomarginleftonly[$pictowithouttext])) {\n\t\t\t\t$marginleftonlyshort = 0;\n\t\t\t}\n\n\t\t\t// Add CSS\n\t\t\t$arrayconvpictotomorcess = array(\n\t\t\t\t'action'=>'infobox-action', 'account'=>'infobox-bank_account', 'accountline'=>'infobox-bank_account', 'accountancy'=>'infobox-bank_account', 'asset'=>'infobox-bank_account',\n\t\t\t\t'bank_account'=>'bg-infobox-bank_account',\n\t\t\t\t'bill'=>'infobox-commande', 'billa'=>'infobox-commande', 'billr'=>'infobox-commande', 'billd'=>'infobox-commande',\n\t\t\t\t'conferenceorbooth'=>'infobox-project',\n\t\t\t\t'cash-register'=>'infobox-bank_account', 'contract'=>'infobox-contrat', 'check'=>'font-status4', 'collab'=>'infobox-action', 'conversation'=>'infobox-contrat',\n\t\t\t\t'donation'=>'infobox-commande', 'dolly'=>'infobox-commande',  'dollyrevert'=>'flip infobox-order_supplier',\n\t\t\t\t'ecm'=>'infobox-action', 'eventorganization'=>'infobox-project',\n\t\t\t\t'hrm'=>'infobox-adherent', 'group'=>'infobox-adherent', 'intervention'=>'infobox-contrat',\n\t\t\t\t'incoterm'=>'infobox-supplier_proposal',\n\t\t\t\t'multicurrency'=>'infobox-bank_account',\n\t\t\t\t'members'=>'infobox-adherent', 'member'=>'infobox-adherent', 'money-bill-alt'=>'infobox-bank_account',\n\t\t\t\t'order'=>'infobox-commande',\n\t\t\t\t'user'=>'infobox-adherent', 'users'=>'infobox-adherent',\n\t\t\t\t'error'=>'pictoerror', 'warning'=>'pictowarning', 'switch_on'=>'font-status4',\n\t\t\t\t'holiday'=>'infobox-holiday', 'info'=>'opacityhigh', 'invoice'=>'infobox-commande',\n\t\t\t\t'knowledgemanagement'=>'infobox-contrat rotate90', 'loan'=>'infobox-bank_account',\n\t\t\t\t'payment'=>'infobox-bank_account', 'poll'=>'infobox-adherent', 'pos'=>'infobox-bank_account', 'project'=>'infobox-project', 'projecttask'=>'infobox-project', 'propal'=>'infobox-propal',\n\t\t\t\t'reception'=>'flip', 'recruitmentjobposition'=>'infobox-adherent', 'recruitmentcandidature'=>'infobox-adherent',\n\t\t\t\t'resource'=>'infobox-action',\n\t\t\t\t'salary'=>'infobox-bank_account', 'shipment'=>'infobox-commande', 'supplier_invoice'=>'infobox-order_supplier', 'supplier_invoicea'=>'infobox-order_supplier', 'supplier_invoiced'=>'infobox-order_supplier',\n\t\t\t\t'supplier'=>'infobox-order_supplier', 'supplier_order'=>'infobox-order_supplier', 'supplier_proposal'=>'infobox-supplier_proposal',\n\t\t\t\t'ticket'=>'infobox-contrat', 'title_accountancy'=>'infobox-bank_account', 'title_hrm'=>'infobox-holiday', 'expensereport'=>'infobox-expensereport', 'trip'=>'infobox-expensereport', 'title_agenda'=>'infobox-action',\n\t\t\t\t//'title_setup'=>'infobox-action', 'tools'=>'infobox-action',\n\t\t\t\t'list-alt'=>'imgforviewmode', 'calendar'=>'imgforviewmode', 'calendarweek'=>'imgforviewmode', 'calendarmonth'=>'imgforviewmode', 'calendarday'=>'imgforviewmode', 'calendarperuser'=>'imgforviewmode'\n\t\t\t);\n\t\t\tif (!empty($arrayconvpictotomorcess[$pictowithouttext])) {\n\t\t\t\t$morecss .= ($morecss ? ' ' : '').$arrayconvpictotomorcess[$pictowithouttext];\n\t\t\t}\n\n\t\t\t// Define $color\n\t\t\t$arrayconvpictotocolor = array(\n\t\t\t\t'address'=>'#6c6aa8', 'building'=>'#6c6aa8', 'bom'=>'#a69944',\n\t\t\t\t'cog'=>'#999', 'companies'=>'#6c6aa8', 'company'=>'#6c6aa8', 'contact'=>'#6c6aa8', 'cron'=>'#555',\n\t\t\t\t'dynamicprice'=>'#a69944',\n\t\t\t\t'edit'=>'#444', 'note'=>'#999', 'error'=>'', 'help'=>'#bbb', 'listlight'=>'#999', 'language'=>'#555',\n\t\t\t\t//'dolly'=>'#a69944', 'dollyrevert'=>'#a69944',\n\t\t\t\t'lot'=>'#a69944',\n\t\t\t\t'map-marker-alt'=>'#aaa', 'mrp'=>'#a69944', 'product'=>'#a69944', 'service'=>'#a69944', 'inventory'=>'#a69944', 'stock'=>'#a69944', 'movement'=>'#a69944',\n\t\t\t\t'other'=>'#ddd',\n\t\t\t\t'partnership'=>'#6c6aa8', 'playdisabled'=>'#ccc', 'printer'=>'#444', 'projectpub'=>'#986c6a', 'reception'=>'#a69944', 'resize'=>'#444', 'rss'=>'#cba',\n\t\t\t\t//'shipment'=>'#a69944',\n\t\t\t\t'security'=>'#999', 'stats'=>'#444', 'switch_off'=>'#999', 'technic'=>'#999', 'timespent'=>'#555',\n\t\t\t\t'uncheck'=>'#800', 'uparrow'=>'#555', 'user-cog'=>'#999', 'country'=>'#aaa', 'globe-americas'=>'#aaa',\n\t\t\t\t'website'=>'#304', 'workstation'=>'#a69944'\n\t\t\t);\n\t\t\tif (isset($arrayconvpictotocolor[$pictowithouttext])) {\n\t\t\t\t$facolor = $arrayconvpictotocolor[$pictowithouttext];\n\t\t\t}\n\n\t\t\t// This snippet only needed since function img_edit accepts only one additional parameter: no separate one for css only.\n\t\t\t// class/style need to be extracted to avoid duplicate class/style validation errors when $moreatt is added to the end of the attributes.\n\t\t\t$morestyle = '';\n\t\t\t$reg = array();\n\t\t\tif (preg_match('/class=\"([^\"]+)\"/', $moreatt, $reg)) {\n\t\t\t\t$morecss .= ($morecss ? ' ' : '').$reg[1];\n\t\t\t\t$moreatt = str_replace('class=\"'.$reg[1].'\"', '', $moreatt);\n\t\t\t}\n\t\t\tif (preg_match('/style=\"([^\"]+)\"/', $moreatt, $reg)) {\n\t\t\t\t$morestyle = $reg[1];\n\t\t\t\t$moreatt = str_replace('style=\"'.$reg[1].'\"', '', $moreatt);\n\t\t\t}\n\t\t\t$moreatt = trim($moreatt);\n\n\t\t\t$enabledisablehtml = '<span class=\"'.$fa.' '.$fakey.($marginleftonlyshort ? ($marginleftonlyshort == 1 ? ' marginleftonlyshort' : ' marginleftonly') : '');\n\t\t\t$enabledisablehtml .= ($morecss ? ' '.$morecss : '').'\" style=\"'.($fasize ? ('font-size: '.$fasize.';') : '').($facolor ? (' color: '.$facolor.';') : '').($morestyle ? ' '.$morestyle : '').'\"'.(($notitle || empty($titlealt)) ? '' : ' title=\"'.dol_escape_htmltag($titlealt).'\"').($moreatt ? ' '.$moreatt : '').'>';\n\t\t\t/*if (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t\t$enabledisablehtml .= $titlealt;\n\t\t\t}*/\n\t\t\t$enabledisablehtml .= '</span>';\n\n\t\t\treturn $enabledisablehtml;\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_OVERWRITE_THEME_PATH)) {\n\t\t\t$path = $conf->global->MAIN_OVERWRITE_THEME_PATH.'/theme/'.$theme; // If the theme does not have the same name as the module\n\t\t} elseif (!empty($conf->global->MAIN_OVERWRITE_THEME_RES)) {\n\t\t\t$path = $conf->global->MAIN_OVERWRITE_THEME_RES.'/theme/'.$conf->global->MAIN_OVERWRITE_THEME_RES; // To allow an external module to overwrite image resources whatever is activated theme\n\t\t} elseif (!empty($conf->modules_parts['theme']) && array_key_exists($theme, $conf->modules_parts['theme'])) {\n\t\t\t$path = $theme.'/theme/'.$theme; // If the theme have the same name as the module\n\t\t}\n\n\t\t// If we ask an image into $url/$mymodule/img (instead of default path)\n\t\t$regs = array();\n\t\tif (preg_match('/^([^@]+)@([^@]+)$/i', $picto, $regs)) {\n\t\t\t$picto = $regs[1];\n\t\t\t$path = $regs[2]; // $path is $mymodule\n\t\t}\n\n\t\t// Clean parameters\n\t\tif (!preg_match('/(\\.png|\\.gif|\\.svg)$/i', $picto)) {\n\t\t\t$picto .= '.png';\n\t\t}\n\t\t// If alt path are defined, define url where img file is, according to physical path\n\t\t// ex: array([\"main\"]=>\"/home/maindir/htdocs\", [\"alt0\"]=>\"/home/moddir0/htdocs\", ...)\n\t\tforeach ($conf->file->dol_document_root as $type => $dirroot) {\n\t\t\tif ($type == 'main') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// This need a lot of time, that's why enabling alternative dir like \"custom\" dir is not recommanded\n\t\t\tif (file_exists($dirroot.'/'.$path.'/img/'.$picto)) {\n\t\t\t\t$url = DOL_URL_ROOT.$conf->file->dol_url_root[$type];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// $url is '' or '/custom', $path is current theme or\n\t\t$fullpathpicto = $url.'/'.$path.'/img/'.$picto;\n\t}\n\n\tif ($srconly) {\n\t\treturn $fullpathpicto;\n\t}\n\t\t// tag title is used for tooltip on <a>, tag alt can be used with very simple text on image for blind people\n\treturn '<img src=\"'.$fullpathpicto.'\" alt=\"'.dol_escape_htmltag($alt).'\"'.(($notitle || empty($titlealt)) ? '' : ' title=\"'.dol_escape_htmltag($titlealt).'\"').($moreatt ? ' '.$moreatt.($morecss ? ' class=\"'.$morecss.'\"' : '') : ' class=\"inline-block'.($morecss ? ' '.$morecss : '').'\"').'>'; // Alt is used for accessibility, title for popup\n}\n\n/**\n *\tShow a picto called object_picto (generic function)\n *\n *\t@param\tstring\t$titlealt\t\t\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$picto\t\t\t\tName of image to show object_picto (example: user, group, action, bill, contract, propal, product, ...)\n *\t\t\t\t\t\t\t\t\t\tFor external modules use imagename@mymodule to search into directory \"img\" of module.\n *\t@param\tstring\t$moreatt\t\t\tAdd more attribute on img tag (ie: class=\"datecallink\")\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\tint\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\tint\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *\t@return\tstring\t\t\t\t\t\tReturn img tag\n *\t@see\timg_picto(), img_picto_common()\n */\nfunction img_object($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly = 0, $notitle = 0)\n{\n\tif (strpos($picto, '^') === 0) {\n\t\treturn img_picto($titlealt, str_replace('^', '', $picto), $moreatt, $pictoisfullpath, $srconly, $notitle);\n\t} else {\n\t\treturn img_picto($titlealt, 'object_'.$picto, $moreatt, $pictoisfullpath, $srconly, $notitle);\n\t}\n}\n\n/**\n *\tShow weather picto\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string|int\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory. Or level of meteo image (0-4).\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *  @param      string      $morecss            More CSS\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        img_object(), img_picto()\n */\nfunction img_weather($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0, $morecss = '')\n{\n\tglobal $conf;\n\n\tif (is_numeric($picto)) {\n\t\t//$leveltopicto = array(0=>'weather-clear.png', 1=>'weather-few-clouds.png', 2=>'weather-clouds.png', 3=>'weather-many-clouds.png', 4=>'weather-storm.png');\n\t\t//$picto = $leveltopicto[$picto];\n\t\treturn '<i class=\"fa fa-weather-level'.$picto.'\"></i>';\n\t} elseif (!preg_match('/(\\.png|\\.gif)$/i', $picto)) {\n\t\t$picto .= '.png';\n\t}\n\n\t$path = DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/weather/'.$picto;\n\n\treturn img_picto($titlealt, $path, $moreatt, 1, 0, 0, '', $morecss);\n}\n\n/**\n *\tShow picto (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        img_object(), img_picto()\n */\nfunction img_picto_common($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (!preg_match('/(\\.png|\\.gif)$/i', $picto)) {\n\t\t$picto .= '.png';\n\t}\n\n\tif ($pictoisfullpath) {\n\t\t$path = $picto;\n\t} else {\n\t\t$path = DOL_URL_ROOT.'/theme/common/'.$picto;\n\n\t\tif (!empty($conf->global->MAIN_MODULE_CAN_OVERWRITE_COMMONICONS)) {\n\t\t\t$themepath = DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/'.$picto;\n\n\t\t\tif (file_exists($themepath)) {\n\t\t\t\t$path = $themepath;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow logo action\n *\n *\t@param\tstring\t\t$titlealt       Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t\t$numaction   \tAction id or code to show\n *\t@param \tstring\t\t$picto      \tName of image file to show ('filenew', ...)\n *                                      If no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                      Example: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                      Example: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                      Example: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@return string      \t\t\t\tReturn an img tag\n */\nfunction img_action($titlealt, $numaction, $picto = '')\n{\n\tglobal $langs;\n\n\tif (empty($titlealt) || $titlealt == 'default') {\n\t\tif ($numaction == '-1' || $numaction == 'ST_NO') {\n\t\t\t$numaction = -1;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeDoNotContact');\n\t\t} elseif ($numaction == '0' || $numaction == 'ST_NEVER') {\n\t\t\t$numaction = 0;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeNeverContacted');\n\t\t} elseif ($numaction == '1' || $numaction == 'ST_TODO') {\n\t\t\t$numaction = 1;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeToContact');\n\t\t} elseif ($numaction == '2' || $numaction == 'ST_PEND') {\n\t\t\t$numaction = 2;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeContactInProcess');\n\t\t} elseif ($numaction == '3' || $numaction == 'ST_DONE') {\n\t\t\t$numaction = 3;\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeContactDone');\n\t\t} else {\n\t\t\t$titlealt = $langs->transnoentitiesnoconv('ChangeStatus '.$numaction);\n\t\t\t$numaction = 0;\n\t\t}\n\t}\n\tif (!is_numeric($numaction)) {\n\t\t$numaction = 0;\n\t}\n\n\treturn img_picto($titlealt, !empty($picto) ? $picto : 'stcomm'.$numaction.'.png');\n}\n\n/**\n *  Show pdf logo\n *\n *  @param\tstring\t\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  int\t\t    $size       Taille de l'icone : 3 = 16x16px , 2 = 14x14px\n *  @return string      \t\t\tRetourne tag img\n */\nfunction img_pdf($titlealt = 'default', $size = 3)\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Show');\n\t}\n\n\treturn img_picto($titlealt, 'pdf'.$size.'.png');\n}\n\n/**\n *\tShow logo +\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_add($titlealt = 'default', $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Add');\n\t}\n\n\treturn img_picto($titlealt, 'edit_add.png', $other);\n}\n/**\n *\tShow logo -\n *\n *\t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_remove($titlealt = 'default', $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Remove');\n\t}\n\n\treturn img_picto($titlealt, 'edit_remove.png', $other);\n}\n\n/**\n *\tShow logo editer/modifier fiche\n *\n *\t@param  string\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      If you have to put the style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Modify');\n\t}\n\n\treturn img_picto($titlealt, 'edit.png', ($float ? 'style=\"float: '.($langs->tab_translate[\"DIRECTION\"] == 'rtl' ? 'left' : 'right').'\"' : \"\").($other ? ' '.$other : ''));\n}\n\n/**\n *\tShow logo view card\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      If you have to put the style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_view($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('View');\n\t}\n\n\t$moreatt = ($float ? 'style=\"float: right\" ' : '').$other;\n\n\treturn img_picto($titlealt, 'view.png', $moreatt);\n}\n\n/**\n *  Show delete logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @param\tstring\t$morecss\tMore CSS\n *  @return string      \t\tRetourne tag img\n */\nfunction img_delete($titlealt = 'default', $other = 'class=\"pictodelete\"', $morecss = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Delete');\n\t}\n\n\treturn img_picto($titlealt, 'delete.png', $other, false, 0, 0, '', $morecss);\n}\n\n/**\n *  Show printer logo\n *\n *  @param  string  $titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  string  $other      Add more attributes on img\n *  @return string              Retourne tag img\n */\nfunction img_printer($titlealt = \"default\", $other = '')\n{\n\tglobal $langs;\n\tif ($titlealt == \"default\") {\n\t\t$titlealt = $langs->trans(\"Print\");\n\t}\n\treturn img_picto($titlealt, 'printer.png', $other);\n}\n\n/**\n *  Show split logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_split($titlealt = 'default', $other = 'class=\"pictosplit\"')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Split');\n\t}\n\n\treturn img_picto($titlealt, 'split.png', $other);\n}\n\n/**\n *\tShow help logo with cursor \"?\"\n *\n * \t@param\tint              \t$usehelpcursor\t\t1=Use help cursor, 2=Use click pointer cursor, 0=No specific cursor\n * \t@param\tint|string\t        $usealttitle\t\tText to use as alt title\n * \t@return string            \t           \t\t\tReturn tag img\n */\nfunction img_help($usehelpcursor = 1, $usealttitle = 1)\n{\n\tglobal $langs;\n\n\tif ($usealttitle) {\n\t\tif (is_string($usealttitle)) {\n\t\t\t$usealttitle = dol_escape_htmltag($usealttitle);\n\t\t} else {\n\t\t\t$usealttitle = $langs->trans('Info');\n\t\t}\n\t}\n\n\treturn img_picto($usealttitle, 'info.png', 'style=\"vertical-align: middle;'.($usehelpcursor == 1 ? ' cursor: help' : ($usehelpcursor == 2 ? ' cursor: pointer' : '')).'\"');\n}\n\n/**\n *\tShow info logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_info($titlealt = 'default')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Informations');\n\t}\n\n\treturn img_picto($titlealt, 'info.png', 'style=\"vertical-align: middle;\"');\n}\n\n/**\n *\tShow warning logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"'). If 1, add float: right. Can't be \"class\" attribute.\n *  @param\tstring  $morecss\tAdd more CSS\n *\t@return string      \t\tReturn img tag\n */\nfunction img_warning($titlealt = 'default', $moreatt = '', $morecss = 'pictowarning')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Warning');\n\t}\n\n\t//return '<div class=\"imglatecoin\">'.img_picto($titlealt, 'warning_white.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): '')).'</div>';\n\treturn img_picto($titlealt, 'warning.png', 'class=\"'.$morecss.'\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt) : ''));\n}\n\n/**\n *  Show error logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_error($titlealt = 'default')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Error');\n\t}\n\n\treturn img_picto($titlealt, 'error.png');\n}\n\n/**\n *\tShow next logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n*\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_next($titlealt = 'default', $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Next');\n\t}\n\n\t//return img_picto($titlealt, 'next.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-right paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow previous logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_previous($titlealt = 'default', $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Previous');\n\t}\n\n\t//return img_picto($titlealt, 'previous.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-left paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow down arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected   Selected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_down($titlealt = 'default', $selected = 0, $moreclass = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Down');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1downarrow_selected.png' : '1downarrow.png'), 'class=\"imgdown'.($moreclass ? \" \".$moreclass : \"\").'\"');\n}\n\n/**\n *\tShow top arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_up($titlealt = 'default', $selected = 0, $moreclass = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Up');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1uparrow_selected.png' : '1uparrow.png'), 'class=\"imgup'.($moreclass ? \" \".$moreclass : \"\").'\"');\n}\n\n/**\n *\tShow left arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_left($titlealt = 'default', $selected = 0, $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Left');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1leftarrow_selected.png' : '1leftarrow.png'), $moreatt);\n}\n\n/**\n *\tShow right arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_right($titlealt = 'default', $selected = 0, $moreatt = '')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Right');\n\t}\n\n\treturn img_picto($titlealt, ($selected ? '1rightarrow_selected.png' : '1rightarrow.png'), $moreatt);\n}\n\n/**\n *\tShow tick logo if allowed\n *\n *\t@param\tstring\t$allow\t\tAllow\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_allow($allow, $titlealt = 'default')\n{\n\tglobal $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Active');\n\t}\n\n\tif ($allow == 1) {\n\t\treturn img_picto($titlealt, 'tick.png');\n\t}\n\n\treturn '-';\n}\n\n/**\n *\tReturn image of a credit card according to its brand name\n *\n *\t@param  string\t$brand\t\tBrand name of credit card\n *  @param  string\t$morecss\tMore CSS\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_credit_card($brand, $morecss = null)\n{\n\tif (is_null($morecss)) {\n\t\t$morecss = 'fa-2x';\n\t}\n\n\tif ($brand == 'visa' || $brand == 'Visa') {\n\t\t$brand = 'cc-visa';\n\t} elseif ($brand == 'mastercard' || $brand == 'MasterCard') {\n\t\t$brand = 'cc-mastercard';\n\t} elseif ($brand == 'amex' || $brand == 'American Express') {\n\t\t$brand = 'cc-amex';\n\t} elseif ($brand == 'discover' || $brand == 'Discover') {\n\t\t$brand = 'cc-discover';\n\t} elseif ($brand == 'jcb' || $brand == 'JCB') {\n\t\t$brand = 'cc-jcb';\n\t} elseif ($brand == 'diners' || $brand == 'Diners club') {\n\t\t$brand = 'cc-diners-club';\n\t} elseif (!in_array($brand, array('cc-visa', 'cc-mastercard', 'cc-amex', 'cc-discover', 'cc-jcb', 'cc-diners-club'))) {\n\t\t$brand = 'credit-card';\n\t}\n\n\treturn '<span class=\"fa fa-'.$brand.' fa-fw'.($morecss ? ' '.$morecss : '').'\"></span>';\n}\n\n/**\n *\tShow MIME img of a file\n *\n *\t@param\tstring\t$file\t\tFilename\n * \t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param\tstring\t$morecss\tMore css\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_mime($file, $titlealt = '', $morecss = '')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$mimetype = dol_mimetype($file, '', 1);\n\t$mimeimg = dol_mimetype($file, '', 2);\n\t$mimefa = dol_mimetype($file, '', 4);\n\n\tif (empty($titlealt)) {\n\t\t$titlealt = 'Mime type: '.$mimetype;\n\t}\n\n\t//return img_picto_common($titlealt, 'mime/'.$mimeimg, 'class=\"'.$morecss.'\"');\n\treturn '<i class=\"fa fa-'.$mimefa.' paddingright\"'.($titlealt ? ' title=\"'.$titlealt.'\"' : '').'></i>';\n}\n\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_search($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Search');\n\t}\n\n\t$img = img_picto($titlealt, 'search.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.$img.'\" ';\n\t$input .= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_searchclear($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') {\n\t\t$titlealt = $langs->trans('Search');\n\t}\n\n\t$img = img_picto($titlealt, 'searchclear.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.$img.'\" ';\n\t$input .= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *\tShow information for admin users or standard users\n *\n *\t@param\tstring\t$text\t\t\t\tText info\n *\t@param  integer\t$infoonimgalt\t\tInfo is shown only on alt of star picto, otherwise it is show on output after the star picto\n *\t@param\tint\t\t$nodiv\t\t\t\tNo div\n *  @param  string  $admin      \t    '1'=Info for admin users. '0'=Info for standard users (change only the look), 'error', 'warning', 'xxx'=Other\n *  @param\tstring\t$morecss\t\t\tMore CSS ('', 'warning', 'error')\n *  @param\tstring\t$textfordropdown\tShow a text to click to dropdown the info box.\n *\t@return\tstring\t\t\t\t\t\tString with info text\n */\nfunction info_admin($text, $infoonimgalt = 0, $nodiv = 0, $admin = '1', $morecss = '', $textfordropdown = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($infoonimgalt) {\n\t\t$result = img_picto($text, 'info', 'class=\"hideonsmartphone'.($morecss ? ' '.$morecss : '').'\"');\n\t} else {\n\t\tif (empty($conf->use_javascript_ajax)) {\n\t\t\t$textfordropdown = '';\n\t\t}\n\n\t\t$class = (empty($admin) ? 'undefined' : ($admin == '1' ? 'info' : $admin));\n\t\t$result = ($nodiv ? '' : '<div class=\"'.$class.' hideonsmartphone'.($morecss ? ' '.$morecss : '').($textfordropdown ? ' hidden' : '').'\">').'<span class=\"fa fa-info-circle\" title=\"'.dol_escape_htmltag($admin ? $langs->trans('InfoAdmin') : $langs->trans('Note')).'\"></span> '.$text.($nodiv ? '' : '</div>');\n\n\t\tif ($textfordropdown) {\n\t\t\t$tmpresult .= '<span class=\"'.$class.'text opacitymedium cursorpointer\">'.$langs->trans($textfordropdown).' '.img_picto($langs->trans($textfordropdown), '1downarrow').'</span>';\n\t\t\t$tmpresult .= '<script type=\"text/javascript\" language=\"javascript\">\n\t\t\t\tjQuery(document).ready(function() {\n\t\t\t\t\tjQuery(\".'.$class.'text\").click(function() {\n\t\t\t\t\t\tconsole.log(\"toggle text\");\n\t\t\t\t\t\tjQuery(\".'.$class.'\").toggle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>';\n\n\t\t\t$result = $tmpresult.$result;\n\t\t}\n\t}\n\n\treturn $result;\n}\n\n\n/**\n *  Displays error message system with all the information to facilitate the diagnosis and the escalation of the bugs.\n *  This function must be called when a blocking technical error is encountered.\n *  However, one must try to call it only within php pages, classes must return their error through their property \"error\".\n *\n *\t@param\t \tDoliDB          $db      \tDatabase handler\n *\t@param  \tstring|string[] $error\t\tString or array of errors strings to show\n *  @param\t\tarray           $errors\t\tArray of errors\n *\t@return \tvoid\n *  @see    \tdol_htmloutput_errors()\n */\nfunction dol_print_error($db = '', $error = '', $errors = null)\n{\n\tglobal $conf, $langs, $argv;\n\tglobal $dolibarr_main_prod;\n\n\t$out = '';\n\t$syslog = '';\n\n\t// If error occurs before the $lang object was loaded\n\tif (!$langs) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n\t\t$langs = new Translate('', $conf);\n\t\t$langs->load(\"main\");\n\t}\n\n\t// Load translation files required by the error messages\n\t$langs->loadLangs(array('main', 'errors'));\n\n\tif ($_SERVER['DOCUMENT_ROOT']) {    // Mode web\n\t\t$out .= $langs->trans(\"DolibarrHasDetectedError\").\".<br>\\n\";\n\t\tif (!empty($conf->global->MAIN_FEATURES_LEVEL)) {\n\t\t\t$out .= \"You use an experimental or develop level of features, so please do NOT report any bugs or vulnerability, except if problem is confirmed after moving option MAIN_FEATURES_LEVEL back to 0.<br>\\n\";\n\t\t}\n\t\t$out .= $langs->trans(\"InformationToHelpDiagnose\").\":<br>\\n\";\n\n\t\t$out .= \"<b>\".$langs->trans(\"Date\").\":</b> \".dol_print_date(time(), 'dayhourlog').\"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"Dolibarr\").\":</b> \".DOL_VERSION.\" - https://www.dolibarr.org<br>\\n\";\n\t\tif (isset($conf->global->MAIN_FEATURES_LEVEL)) {\n\t\t\t$out .= \"<b>\".$langs->trans(\"LevelOfFeature\").\":</b> \".dol_htmlentities($conf->global->MAIN_FEATURES_LEVEL, ENT_COMPAT).\"<br>\\n\";\n\t\t}\n\t\tif (function_exists(\"phpversion\")) {\n\t\t\t$out .= \"<b>\".$langs->trans(\"PHP\").\":</b> \".phpversion().\"<br>\\n\";\n\t\t}\n\t\t$out .= \"<b>\".$langs->trans(\"Server\").\":</b> \".(isset($_SERVER[\"SERVER_SOFTWARE\"]) ? dol_htmlentities($_SERVER[\"SERVER_SOFTWARE\"], ENT_COMPAT) : '').\"<br>\\n\";\n\t\tif (function_exists(\"php_uname\")) {\n\t\t\t$out .= \"<b>\".$langs->trans(\"OS\").\":</b> \".php_uname().\"<br>\\n\";\n\t\t}\n\t\t$out .= \"<b>\".$langs->trans(\"UserAgent\").\":</b> \".(isset($_SERVER[\"HTTP_USER_AGENT\"]) ? dol_htmlentities($_SERVER[\"HTTP_USER_AGENT\"], ENT_COMPAT) : '').\"<br>\\n\";\n\t\t$out .= \"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"RequestedUrl\").\":</b> \".dol_htmlentities($_SERVER[\"REQUEST_URI\"], ENT_COMPAT).\"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"Referer\").\":</b> \".(isset($_SERVER[\"HTTP_REFERER\"]) ? dol_htmlentities($_SERVER[\"HTTP_REFERER\"], ENT_COMPAT) : '').\"<br>\\n\";\n\t\t$out .= \"<b>\".$langs->trans(\"MenuManager\").\":</b> \".(isset($conf->standard_menu) ? dol_htmlentities($conf->standard_menu, ENT_COMPAT) : '').\"<br>\\n\";\n\t\t$out .= \"<br>\\n\";\n\t\t$syslog .= \"url=\".dol_escape_htmltag($_SERVER[\"REQUEST_URI\"]);\n\t\t$syslog .= \", query_string=\".dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\t} else // Mode CLI\n\t{\n\t\t$out .= '> '.$langs->transnoentities(\"ErrorInternalErrorDetected\").\":\\n\".$argv[0].\"\\n\";\n\t\t$syslog .= \"pid=\".dol_getmypid();\n\t}\n\n\tif (!empty($conf->modules)) {\n\t\t$out .= \"<b>\".$langs->trans(\"Modules\").\":</b> \".join(', ', $conf->modules).\"<br>\\n\";\n\t}\n\n\tif (is_object($db)) {\n\t\tif ($_SERVER['DOCUMENT_ROOT']) {  // Mode web\n\t\t\t$out .= \"<b>\".$langs->trans(\"DatabaseTypeManager\").\":</b> \".$db->type.\"<br>\\n\";\n\t\t\t$out .= \"<b>\".$langs->trans(\"RequestLastAccessInError\").\":</b> \".($db->lastqueryerror() ? dol_escape_htmltag($db->lastqueryerror()) : $langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out .= \"<b>\".$langs->trans(\"ReturnCodeLastAccessInError\").\":</b> \".($db->lasterrno() ? dol_escape_htmltag($db->lasterrno()) : $langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out .= \"<b>\".$langs->trans(\"InformationLastAccessInError\").\":</b> \".($db->lasterror() ? dol_escape_htmltag($db->lasterror()) : $langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out .= \"<br>\\n\";\n\t\t} else // Mode CLI\n\t\t{\n\t\t\t// No dol_escape_htmltag for output, we are in CLI mode\n\t\t\t$out .= '> '.$langs->transnoentities(\"DatabaseTypeManager\").\":\\n\".$db->type.\"\\n\";\n\t\t\t$out .= '> '.$langs->transnoentities(\"RequestLastAccessInError\").\":\\n\".($db->lastqueryerror() ? $db->lastqueryerror() : $langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out .= '> '.$langs->transnoentities(\"ReturnCodeLastAccessInError\").\":\\n\".($db->lasterrno() ? $db->lasterrno() : $langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out .= '> '.$langs->transnoentities(\"InformationLastAccessInError\").\":\\n\".($db->lasterror() ? $db->lasterror() : $langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t}\n\t\t$syslog .= \", sql=\".$db->lastquery();\n\t\t$syslog .= \", db_error=\".$db->lasterror();\n\t}\n\n\tif ($error || $errors) {\n\t\t$langs->load(\"errors\");\n\n\t\t// Merge all into $errors array\n\t\tif (is_array($error) && is_array($errors)) {\n\t\t\t$errors = array_merge($error, $errors);\n\t\t} elseif (is_array($error)) {\n\t\t\t$errors = $error;\n\t\t} elseif (is_array($errors)) {\n\t\t\t$errors = array_merge(array($error), $errors);\n\t\t} else {\n\t\t\t$errors = array_merge(array($error));\n\t\t}\n\n\t\tforeach ($errors as $msg) {\n\t\t\tif (empty($msg)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($_SERVER['DOCUMENT_ROOT']) {  // Mode web\n\t\t\t\t$out .= \"<b>\".$langs->trans(\"Message\").\":</b> \".dol_escape_htmltag($msg).\"<br>\\n\";\n\t\t\t} else // Mode CLI\n\t\t\t{\n\t\t\t\t$out .= '> '.$langs->transnoentities(\"Message\").\":\\n\".$msg.\"\\n\";\n\t\t\t}\n\t\t\t$syslog .= \", msg=\".$msg;\n\t\t}\n\t}\n\tif (empty($dolibarr_main_prod) && $_SERVER['DOCUMENT_ROOT'] && function_exists('xdebug_print_function_stack') && function_exists('xdebug_call_file')) {\n\t\txdebug_print_function_stack();\n\t\t$out .= '<b>XDebug informations:</b>'.\"<br>\\n\";\n\t\t$out .= 'File: '.xdebug_call_file().\"<br>\\n\";\n\t\t$out .= 'Line: '.xdebug_call_line().\"<br>\\n\";\n\t\t$out .= 'Function: '.xdebug_call_function().\"<br>\\n\";\n\t\t$out .= \"<br>\\n\";\n\t}\n\n\t// Return a http error code if possible\n\tif (!headers_sent()) {\n\t\thttp_response_code(500);\n\t}\n\n\tif (empty($dolibarr_main_prod)) {\n\t\tprint $out;\n\t} else {\n\t\tif (empty($langs->defaultlang)) {\n\t\t\t$langs->setDefaultLang();\n\t\t}\n\t\t$langs->loadLangs(array(\"main\", \"errors\")); // Reload main because language may have been set only on previous line so we have to reload files we need.\n\t\t// This should not happen, except if there is a bug somewhere. Enabled and check log in such case.\n\t\tprint 'This website or feature is currently temporarly not available or failed after a technical error.<br><br>This may be due to a maintenance operation. Current status of operation ('.dol_print_date(dol_now(), 'dayhourrfc').') are on next line...<br><br>'.\"\\n\";\n\t\tprint $langs->trans(\"DolibarrHasDetectedError\").'. ';\n\t\tprint $langs->trans(\"YouCanSetOptionDolibarrMainProdToZero\");\n\t\tdefine(\"MAIN_CORE_ERROR\", 1);\n\t}\n\n\tdol_syslog(\"Error \".$syslog, LOG_ERR);\n}\n\n/**\n * Show a public email and error code to contact if technical error\n *\n * @param\tstring\t$prefixcode\t\tPrefix of public error code\n * @param   string  $errormessage   Complete error message\n * @param\tarray\t$errormessages\tArray of error messages\n * @param\tstring\t$morecss\t\tMore css\n * @param\tstring\t$email\t\t\tEmail\n * @return\tvoid\n */\nfunction dol_print_error_email($prefixcode, $errormessage = '', $errormessages = array(), $morecss = 'error', $email = '')\n{\n\tglobal $langs, $conf;\n\n\tif (empty($email)) {\n\t\t$email = $conf->global->MAIN_INFO_SOCIETE_MAIL;\n\t}\n\n\t$langs->load(\"errors\");\n\t$now = dol_now();\n\n\tprint '<br><div class=\"center login_main_message\"><div class=\"'.$morecss.'\">';\n\tprint $langs->trans(\"ErrorContactEMail\", $email, $prefixcode.dol_print_date($now, '%Y%m%d%H%M%S'));\n\tif ($errormessage) {\n\t\tprint '<br><br>'.$errormessage;\n\t}\n\tif (is_array($errormessages) && count($errormessages)) {\n\t\tforeach ($errormessages as $mesgtoshow) {\n\t\t\tprint '<br><br>'.$mesgtoshow;\n\t\t}\n\t}\n\tprint '</div></div>';\n}\n\n/**\n *\tShow title line of an array\n *\n *\t@param\tstring\t$name        Label of field\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  Options of attribute td (\"\" by defaut, example: 'align=\"center\"')\n *\t@param  string\t$sortfield   Current field used to sort\n *\t@param  string\t$sortorder   Current sort order\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *  @param\tstring\t$tooltip\t Tooltip\n *  @param\tstring\t$forcenowrapcolumntitle\t\tNo need for use 'wrapcolumntitle' css style\n *\t@return\tvoid\n */\nfunction print_liste_field_titre($name, $file = \"\", $field = \"\", $begin = \"\", $moreparam = \"\", $moreattrib = \"\", $sortfield = \"\", $sortorder = \"\", $prefix = \"\", $tooltip = \"\", $forcenowrapcolumntitle = 0)\n{\n\tprint getTitleFieldOfList($name, 0, $file, $field, $begin, $moreparam, $moreattrib, $sortfield, $sortorder, $prefix, 0, $tooltip, $forcenowrapcolumntitle);\n}\n\n/**\n *\tGet title line of an array\n *\n *\t@param\tstring\t$name        \t\tTranslation key of field to show or complete HTML string to show\n *\t@param\tint\t\t$thead\t\t \t\t0=To use with standard table format, 1=To use inside <thead><tr>, 2=To use with <div>\n *\t@param\tstring\t$file        \t\tUrl used when we click on sort picto\n *\t@param\tstring\t$field       \t\tField to use for new sorting. Empty if this field is not sortable. Example \"t.abc\" or \"t.abc,t.def\"\n *\t@param\tstring\t$begin       \t\t(\"\" by defaut)\n *\t@param\tstring\t$moreparam   \t\tAdd more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  \t\tAdd more attributes on th (\"\" by defaut, example: 'align=\"center\"'). To add more css class, use param $prefix.\n *\t@param  string\t$sortfield   \t\tCurrent field used to sort (Ex: 'd.datep,d.id')\n *\t@param  string\t$sortorder   \t\tCurrent sort order (Ex: 'asc,desc')\n *  @param\tstring\t$prefix\t\t \t\tPrefix for css. Use space after prefix to add your own CSS tag, for example 'mycss '.\n *  @param\tstring\t$disablesortlink\t1=Disable sort link\n *  @param\tstring\t$tooltip\t \t\tTooltip\n *  @param\tstring\t$forcenowrapcolumntitle\t\tNo need for use 'wrapcolumntitle' css style\n *\t@return\tstring\n */\nfunction getTitleFieldOfList($name, $thead = 0, $file = \"\", $field = \"\", $begin = \"\", $moreparam = \"\", $moreattrib = \"\", $sortfield = \"\", $sortorder = \"\", $prefix = \"\", $disablesortlink = 0, $tooltip = '', $forcenowrapcolumntitle = 0)\n{\n\tglobal $conf, $langs, $form;\n\t//print \"$name, $file, $field, $begin, $options, $moreattrib, $sortfield, $sortorder<br>\\n\";\n\n\tif ($moreattrib == 'class=\"right\"') {\n\t\t$prefix .= 'right '; // For backward compatibility\n\t}\n\n\t$sortorder = strtoupper($sortorder);\n\t$out = '';\n\t$sortimg = '';\n\n\t$tag = 'th';\n\tif ($thead == 2) {\n\t\t$tag = 'div';\n\t}\n\n\t$tmpsortfield = explode(',', $sortfield);\n\t$sortfield1 = trim($tmpsortfield[0]); // If $sortfield is 'd.datep,d.id', it becomes 'd.datep'\n\t$tmpfield = explode(',', $field);\n\t$field1 = trim($tmpfield[0]); // If $field is 'd.datep,d.id', it becomes 'd.datep'\n\n\tif (empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) && empty($forcenowrapcolumntitle)) {\n\t\t$prefix = 'wrapcolumntitle '.$prefix;\n\t}\n\n\t//var_dump('field='.$field.' field1='.$field1.' sortfield='.$sortfield.' sortfield1='.$sortfield1);\n\t// If field is used as sort criteria we use a specific css class liste_titre_sel\n\t// Example if (sortfield,field)=(\"nom\",\"xxx.nom\") or (sortfield,field)=(\"nom\",\"nom\")\n\t$liste_titre = 'liste_titre';\n\tif ($field1 && ($sortfield1 == $field1 || $sortfield1 == preg_replace(\"/^[^\\.]+\\./\", \"\", $field1))) {\n\t\t$liste_titre = 'liste_titre_sel';\n\t}\n\t$out .= '<'.$tag.' class=\"'.$prefix.$liste_titre.'\" '.$moreattrib;\n\t//$out .= (($field && empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) && preg_match('/^[a-zA-Z_0-9\\s\\.\\-:&;]*$/', $name)) ? ' title=\"'.dol_escape_htmltag($langs->trans($name)).'\"' : '');\n\t$out .= ($name && empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) && empty($forcenowrapcolumntitle) && !dol_textishtml($name)) ? ' title=\"'.dol_escape_htmltag($langs->trans($name)).'\"' : '';\n\t$out .= '>';\n\n\tif (empty($thead) && $field && empty($disablesortlink)) {    // If this is a sort field\n\t\t$options = preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i', '', (is_scalar($moreparam) ? $moreparam : ''));\n\t\t$options = preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i', '', $options);\n\t\t$options = preg_replace('/&+/i', '&', $options);\n\t\tif (!preg_match('/^&/', $options)) {\n\t\t\t$options = '&'.$options;\n\t\t}\n\n\t\t$sortordertouseinlink = '';\n\t\tif ($field1 != $sortfield1) { // We are on another field than current sorted field\n\t\t\tif (preg_match('/^DESC/i', $sortorder)) {\n\t\t\t\t$sortordertouseinlink .= str_repeat('desc,', count(explode(',', $field)));\n\t\t\t} else // We reverse the var $sortordertouseinlink\n\t\t\t{\n\t\t\t\t$sortordertouseinlink .= str_repeat('asc,', count(explode(',', $field)));\n\t\t\t}\n\t\t} else // We are on field that is the first current sorting criteria\n\t\t{\n\t\t\tif (preg_match('/^ASC/i', $sortorder)) {\t// We reverse the var $sortordertouseinlink\n\t\t\t\t$sortordertouseinlink .= str_repeat('desc,', count(explode(',', $field)));\n\t\t\t} else {\n\t\t\t\t$sortordertouseinlink .= str_repeat('asc,', count(explode(',', $field)));\n\t\t\t}\n\t\t}\n\t\t$sortordertouseinlink = preg_replace('/,$/', '', $sortordertouseinlink);\n\t\t$out .= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$field.'&sortorder='.$sortordertouseinlink.'&begin='.$begin.$options.'\"';\n\t\t//$out .= (empty($conf->global->MAIN_DISABLE_WRAPPING_ON_COLUMN_TITLE) ? ' title=\"'.dol_escape_htmltag($langs->trans($name)).'\"' : '');\n\t\t$out .= '>';\n\t}\n\n\tif ($tooltip) {\n\t\t// You can also use 'TranslationString:keyfortooltiponlick' for a tooltip on click.\n\t\t$tmptooltip = explode(':', $tooltip);\n\t\t$out .= $form->textwithpicto($langs->trans($name), $langs->trans($tmptooltip[0]), 1, 'help', '', 0, 3, (empty($tmptooltip[1]) ? '' : 'extra_'.str_replace('.', '_', $field).'_'.$tmptooltip[1]));\n\t} else {\n\t\t$out .= $langs->trans($name);\n\t}\n\n\tif (empty($thead) && $field && empty($disablesortlink)) {    // If this is a sort field\n\t\t$out .= '</a>';\n\t}\n\n\tif (empty($thead) && $field) {    // If this is a sort field\n\t\t$options = preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i', '', (is_scalar($moreparam) ? $moreparam : ''));\n\t\t$options = preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i', '', $options);\n\t\t$options = preg_replace('/&+/i', '&', $options);\n\t\tif (!preg_match('/^&/', $options)) {\n\t\t\t$options = '&'.$options;\n\t\t}\n\n\t\tif (!$sortorder || $field1 != $sortfield1) {\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t} else {\n\t\t\tif (preg_match('/^DESC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",1).'</a>';\n\t\t\t\t$sortimg .= '<span class=\"nowrap\">'.img_up(\"Z-A\", 0, 'paddingleft').'</span>';\n\t\t\t}\n\t\t\tif (preg_match('/^ASC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",1).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t\t\t$sortimg .= '<span class=\"nowrap\">'.img_down(\"A-Z\", 0, 'paddingleft').'</span>';\n\t\t\t}\n\t\t}\n\t}\n\n\t$out .= $sortimg;\n\n\t$out .= '</'.$tag.'>';\n\n\treturn $out;\n}\n\n/**\n *\tShow a title.\n *\n *\t@param\tstring\t$title\t\t\tTitle to show\n *\t@return\tstring\t\t\t\t\tTitle to show\n *  @deprecated\t\t\t\t\t\tUse load_fiche_titre instead\n *  @see load_fiche_titre()\n */\nfunction print_titre($title)\n{\n\tdol_syslog(__FUNCTION__.\" is deprecated\", LOG_WARNING);\n\n\tprint '<div class=\"titre\">'.$title.'</div>';\n}\n\n/**\n *\tShow a title with picto\n *\n *\t@param\tstring\t$title\t\t\t\tTitle to show\n *\t@param\tstring\t$mesg\t\t\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n * \t@return\tvoid\n *  @deprecated Use print load_fiche_titre instead\n */\nfunction print_fiche_titre($title, $mesg = '', $picto = 'generic', $pictoisfullpath = 0, $id = '')\n{\n\tprint load_fiche_titre($title, $mesg, $picto, $pictoisfullpath, $id);\n}\n\n/**\n *\tLoad a title with picto\n *\n *\t@param\tstring\t$titre\t\t\t\tTitle to show\n *\t@param\tstring\t$morehtmlright\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tstring\t$id\t\t\t\t\tTo force an id on html objects\n *  @param  string  $morecssontable     More css on table\n *\t@param\tstring\t$morehtmlcenter\t\tAdded message to show on center\n * \t@return\tstring\n *  @see print_barre_liste()\n */\nfunction load_fiche_titre($titre, $morehtmlright = '', $picto = 'generic', $pictoisfullpath = 0, $id = '', $morecssontable = '', $morehtmlcenter = '')\n{\n\tglobal $conf;\n\n\t$return = '';\n\n\tif ($picto == 'setup') {\n\t\t$picto = 'generic';\n\t}\n\n\t$return .= \"\\n\";\n\t$return .= '<table '.($id ? 'id=\"'.$id.'\" ' : '').'class=\"centpercent notopnoleftnoright table-fiche-title'.($morecssontable ? ' '.$morecssontable : '').'\">'; // maring bottom must be same than into print_barre_list\n\t$return .= '<tr class=\"titre\">';\n\tif ($picto) {\n\t\t$return .= '<td class=\"nobordernopadding widthpictotitle valignmiddle col-picto\">'.img_picto('', $picto, 'class=\"valignmiddle widthpictotitle pictotitle\"', $pictoisfullpath).'</td>';\n\t}\n\t$return .= '<td class=\"nobordernopadding valignmiddle col-title\">';\n\t$return .= '<div class=\"titre inline-block\">'.$titre.'</div>';\n\t$return .= '</td>';\n\tif (dol_strlen($morehtmlcenter)) {\n\t\t$return .= '<td class=\"nobordernopadding center valignmiddle\">'.$morehtmlcenter.'</td>';\n\t}\n\tif (dol_strlen($morehtmlright)) {\n\t\t$return .= '<td class=\"nobordernopadding titre_right wordbreakimp right valignmiddle\">'.$morehtmlright.'</td>';\n\t}\n\t$return .= '</tr></table>'.\"\\n\";\n\n\treturn $return;\n}\n\n/**\n *\tPrint a title with navigation controls for pagination\n *\n *\t@param\tstring\t    $titre\t\t\t\tTitle to show (required)\n *\t@param\tint   \t    $page\t\t\t\tNumero of page to show in navigation links (required)\n *\t@param\tstring\t    $file\t\t\t\tUrl of page (required)\n *\t@param\tstring\t    $options         \tMore parameters for links ('' by default, does not include sortfield neither sortorder). Value must be 'urlencoded' before calling function.\n *\t@param\tstring    \t$sortfield       \tField to sort on ('' by default)\n *\t@param\tstring\t    $sortorder       \tOrder to sort ('' by default)\n *\t@param\tstring\t    $morehtmlcenter     String in the middle ('' by default). We often find here string $massaction comming from $form->selectMassAction()\n *\t@param\tint\t\t    $num\t\t\t\tNumber of records found by select with limit+1\n *\t@param\tint|string  $totalnboflines\t\tTotal number of records/lines for all pages (if known). Use a negative value of number to not show number. Use '' if unknown.\n *\t@param\tstring\t    $picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t    $pictoisfullpath\t1=Icon name is a full absolute url of image\n *  @param\tstring\t    $morehtmlright\t\tMore html to show (after arrows)\n *  @param  string      $morecss            More css to the table\n *  @param  int         $limit              Max number of lines (-1 = use default, 0 = no limit, > 0 = limit).\n *  @param  int         $hideselectlimit    Force to hide select limit\n *  @param  int         $hidenavigation     Force to hide all navigation tools\n *  @param  int\t\t\t$pagenavastextinput 1=Do not suggest list of pages to navigate but suggest the page number into an input field.\n *  @param\tstring\t\t$morehtmlrightbeforearrow\tMore html to show (before arrows)\n *\t@return\tvoid\n */\nfunction print_barre_liste($titre, $page, $file, $options = '', $sortfield = '', $sortorder = '', $morehtmlcenter = '', $num = -1, $totalnboflines = '', $picto = 'generic', $pictoisfullpath = 0, $morehtmlright = '', $morecss = '', $limit = -1, $hideselectlimit = 0, $hidenavigation = 0, $pagenavastextinput = 0, $morehtmlrightbeforearrow = '')\n{\n\tglobal $conf, $langs;\n\n\t$savlimit = $limit;\n\t$savtotalnboflines = $totalnboflines;\n\t$totalnboflines = abs((int) $totalnboflines);\n\n\tif ($picto == 'setup') {\n\t\t$picto = 'title_setup.png';\n\t}\n\tif (($conf->browser->name == 'ie') && $picto == 'generic') {\n\t\t$picto = 'title.gif';\n\t}\n\tif ($limit < 0) {\n\t\t$limit = $conf->liste_limit;\n\t}\n\tif ($savlimit != 0 && (($num > $limit) || ($num == -1) || ($limit == 0))) {\n\t\t$nextpage = 1;\n\t} else {\n\t\t$nextpage = 0;\n\t}\n\t//print 'totalnboflines='.$totalnboflines.'-savlimit='.$savlimit.'-limit='.$limit.'-num='.$num.'-nextpage='.$nextpage;\n\n\tprint \"\\n\";\n\tprint \"<!-- Begin title -->\\n\";\n\tprint '<table class=\"centpercent notopnoleftnoright table-fiche-title'.($morecss ? ' '.$morecss : '').'\"><tr>'; // maring bottom must be same than into load_fiche_tire\n\n\t// Left\n\n\tif ($picto && $titre) {\n\t\tprint '<td class=\"nobordernopadding widthpictotitle valignmiddle col-picto\">'.img_picto('', $picto, 'class=\"valignmiddle pictotitle widthpictotitle\"', $pictoisfullpath).'</td>';\n\t}\n\tprint '<td class=\"nobordernopadding valignmiddle col-title\">';\n\tprint '<div class=\"titre inline-block\">'.$titre;\n\tif (!empty($titre) && $savtotalnboflines >= 0 && (string) $savtotalnboflines != '') {\n\t\tprint '<span class=\"opacitymedium colorblack paddingleft\">('.$totalnboflines.')</span>';\n\t}\n\tprint '</div></td>';\n\n\t// Center\n\tif ($morehtmlcenter) {\n\t\tprint '<td class=\"nobordernopadding center valignmiddle\">'.$morehtmlcenter.'</td>';\n\t}\n\n\t// Right\n\tprint '<td class=\"nobordernopadding valignmiddle right\">';\n\tprint '<input type=\"hidden\" name=\"pageplusoneold\" value=\"'.((int) $page + 1).'\">';\n\tif ($sortfield) {\n\t\t$options .= \"&sortfield=\".urlencode($sortfield);\n\t}\n\tif ($sortorder) {\n\t\t$options .= \"&sortorder=\".urlencode($sortorder);\n\t}\n\t// Show navigation bar\n\t$pagelist = '';\n\tif ($savlimit != 0 && ($page > 0 || $num > $limit)) {\n\t\tif ($totalnboflines) {\t// If we know total nb of lines\n\t\t\t// Define nb of extra page links before and after selected page + ... + first or last\n\t\t\t$maxnbofpage = (empty($conf->dol_optimize_smallscreen) ? 4 : 0);\n\n\t\t\tif ($limit > 0) {\n\t\t\t\t$nbpages = ceil($totalnboflines / $limit);\n\t\t\t} else {\n\t\t\t\t$nbpages = 1;\n\t\t\t}\n\t\t\t$cpt = ($page - $maxnbofpage);\n\t\t\tif ($cpt < 0) {\n\t\t\t\t$cpt = 0;\n\t\t\t}\n\n\t\t\tif ($cpt >= 1) {\n\t\t\t\tif (empty($pagenavastextinput)) {\n\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page=0'.$options.'\">1</a></li>';\n\t\t\t\t\tif ($cpt > 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"inactive\">...</span></li>';\n\t\t\t\t\t} elseif ($cpt == 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page=1'.$options.'\">2</a></li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tif ($pagenavastextinput) {\n\t\t\t\t\tif ($cpt == $page) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><input type=\"text\" class=\"width25 center pageplusone\" name=\"pageplusone\" value=\"'.($page + 1).'\"></li>';\n\t\t\t\t\t\t$pagelist .= '/';\n\t\t\t\t\t\t//if (($cpt + 1) < $nbpages) $pagelist .= '/';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ($cpt == $page) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"active\">'.($page + 1).'</span></li>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.$cpt.$options.'\">'.($cpt + 1).'</a></li>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$cpt++;\n\t\t\t} while ($cpt < $nbpages && $cpt <= ($page + $maxnbofpage));\n\n\t\t\tif (empty($pagenavastextinput)) {\n\t\t\t\tif ($cpt < $nbpages) {\n\t\t\t\t\tif ($cpt < $nbpages - 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"inactive\">...</span></li>';\n\t\t\t\t\t} elseif ($cpt == $nbpages - 2) {\n\t\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.($nbpages - 2).$options.'\">'.($nbpages - 1).'</a></li>';\n\t\t\t\t\t}\n\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.($nbpages - 1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//var_dump($page.' '.$cpt.' '.$nbpages);\n\t\t\t\t//if (($page + 1) < $nbpages) {\n\t\t\t\t\t$pagelist .= '<li class=\"pagination\"><a href=\"'.$file.'?page='.($nbpages - 1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t\t//}\n\t\t\t}\n\t\t} else {\n\t\t\t$pagelist .= '<li class=\"pagination\"><span class=\"active\">'.($page + 1).\"</li>\";\n\t\t}\n\t}\n\n\tif ($savlimit || $morehtmlright || $morehtmlrightbeforearrow) {\n\t\tprint_fleche_navigation($page, $file, $options, $nextpage, $pagelist, $morehtmlright, $savlimit, $totalnboflines, $hideselectlimit, $morehtmlrightbeforearrow); // output the div and ul for previous/last completed with page numbers into $pagelist\n\t}\n\n\t// js to autoselect page field on focus\n\tif ($pagenavastextinput) {\n\t\tprint ajax_autoselect('.pageplusone');\n\t}\n\n\tprint '</td>';\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"<!-- End title -->\\n\\n\";\n}\n\n/**\n *\tFunction to show navigation arrows into lists\n *\n *\t@param\tint\t\t\t\t$page\t\t\t\tNumber of page\n *\t@param\tstring\t\t\t$file\t\t\t\tPage URL (in most cases provided with $_SERVER[\"PHP_SELF\"])\n *\t@param\tstring\t\t\t$options         \tOther url parameters to propagate (\"\" by default, may include sortfield and sortorder)\n *\t@param\tinteger\t\t\t$nextpage\t    \tDo we show a next page button\n *\t@param\tstring\t\t\t$betweenarrows\t\tHTML content to show between arrows. MUST contains '<li> </li>' tags or '<li><span> </span></li>'.\n *  @param\tstring\t\t\t$afterarrows\t\tHTML content to show after arrows. Must NOT contains '<li> </li>' tags.\n *  @param  int             $limit              Max nb of record to show  (-1 = no combo with limit, 0 = no limit, > 0 = limit)\n *\t@param\tint\t\t        $totalnboflines\t\tTotal number of records/lines for all pages (if known)\n *  @param  int             $hideselectlimit    Force to hide select limit\n *  @param\tstring\t\t\t$beforearrows\t\tHTML content to show before arrows. Must NOT contains '<li> </li>' tags.\n *\t@return\tvoid\n */\nfunction print_fleche_navigation($page, $file, $options = '', $nextpage = 0, $betweenarrows = '', $afterarrows = '', $limit = -1, $totalnboflines = 0, $hideselectlimit = 0, $beforearrows = '')\n{\n\tglobal $conf, $langs;\n\n\tprint '<div class=\"pagination\"><ul>';\n\tif ($beforearrows) {\n\t\tprint '<li class=\"paginationbeforearrows\">';\n\t\tprint $beforearrows;\n\t\tprint '</li>';\n\t}\n\tif ((int) $limit > 0 && empty($hideselectlimit)) {\n\t\t$pagesizechoices = '10:10,15:15,20:20,30:30,40:40,50:50,100:100,250:250,500:500,1000:1000,5000:5000,25000:25000';\n\t\t//$pagesizechoices.=',0:'.$langs->trans(\"All\");     // Not yet supported\n\t\t//$pagesizechoices.=',2:2';\n\t\tif (!empty($conf->global->MAIN_PAGESIZE_CHOICES)) {\n\t\t\t$pagesizechoices = $conf->global->MAIN_PAGESIZE_CHOICES;\n\t\t}\n\n\t\tprint '<li class=\"pagination\">';\n\t\tprint '<select class=\"flat selectlimit\" name=\"limit\" title=\"'.dol_escape_htmltag($langs->trans(\"MaxNbOfRecordPerPage\")).'\">';\n\t\t$tmpchoice = explode(',', $pagesizechoices);\n\t\t$tmpkey = $limit.':'.$limit;\n\t\tif (!in_array($tmpkey, $tmpchoice)) {\n\t\t\t$tmpchoice[] = $tmpkey;\n\t\t}\n\t\t$tmpkey = $conf->liste_limit.':'.$conf->liste_limit;\n\t\tif (!in_array($tmpkey, $tmpchoice)) {\n\t\t\t$tmpchoice[] = $tmpkey;\n\t\t}\n\t\tasort($tmpchoice, SORT_NUMERIC);\n\t\tforeach ($tmpchoice as $val) {\n\t\t\t$selected = '';\n\t\t\t$tmp = explode(':', $val);\n\t\t\t$key = $tmp[0];\n\t\t\t$val = $tmp[1];\n\t\t\tif ($key != '' && $val != '') {\n\t\t\t\tif ((int) $key == (int) $limit) {\n\t\t\t\t\t$selected = ' selected=\"selected\"';\n\t\t\t\t}\n\t\t\t\tprint '<option name=\"'.$key.'\"'.$selected.'>'.dol_escape_htmltag($val).'</option>'.\"\\n\";\n\t\t\t}\n\t\t}\n\t\tprint '</select>';\n\t\tif ($conf->use_javascript_ajax) {\n\t\t\tprint '<!-- JS CODE TO ENABLE select limit to launch submit of page -->\n            \t\t<script>\n                \tjQuery(document).ready(function () {\n            \t  \t\tjQuery(\".selectlimit\").change(function() {\n                            console.log(\"Change limit. Send submit\");\n                            $(this).parents(\\'form:first\\').submit();\n            \t  \t\t});\n                \t});\n            \t\t</script>\n                ';\n\t\t}\n\t\tprint '</li>';\n\t}\n\tif ($page > 0) {\n\t\tprint '<li class=\"pagination paginationpage paginationpageleft\"><a class=\"paginationprevious\" href=\"'.$file.'?page='.($page - 1).$options.'\"><i class=\"fa fa-chevron-left\" title=\"'.dol_escape_htmltag($langs->trans(\"Previous\")).'\"></i></a></li>';\n\t}\n\tif ($betweenarrows) {\n\t\tprint '<!--<div class=\"betweenarrows nowraponall inline-block\">-->';\n\t\tprint $betweenarrows;\n\t\tprint '<!--</div>-->';\n\t}\n\tif ($nextpage > 0) {\n\t\tprint '<li class=\"pagination paginationpage paginationpageright\"><a class=\"paginationnext\" href=\"'.$file.'?page='.($page + 1).$options.'\"><i class=\"fa fa-chevron-right\" title=\"'.dol_escape_htmltag($langs->trans(\"Next\")).'\"></i></a></li>';\n\t}\n\tif ($afterarrows) {\n\t\tprint '<li class=\"paginationafterarrows\">';\n\t\tprint $afterarrows;\n\t\tprint '</li>';\n\t}\n\tprint '</ul></div>'.\"\\n\";\n}\n\n\n/**\n *\tReturn a string with VAT rate label formated for view output\n *\tUsed into pdf and HTML pages\n *\n *\t@param\tstring\t$rate\t\t\tRate value to format ('19.6', '19,6', '19.6%', '19,6%', '19.6 (CODEX)', ...)\n *  @param\tboolean\t$addpercent\t\tAdd a percent % sign in output\n *\t@param\tint\t\t$info_bits\t\tMiscellaneous information on vat (0=Default, 1=French NPR vat)\n *\t@param\tint\t\t$usestarfornpr\t-1=Never show, 0 or 1=Use '*' for NPR vat rates\n *  @return\tstring\t\t\t\t\tString with formated amounts ('19,6' or '19,6%' or '8.5% (NPR)' or '8.5% *' or '19,6 (CODEX)')\n */\nfunction vatrate($rate, $addpercent = false, $info_bits = 0, $usestarfornpr = 0)\n{\n\t$morelabel = '';\n\n\tif (preg_match('/%/', $rate)) {\n\t\t$rate = str_replace('%', '', $rate);\n\t\t$addpercent = true;\n\t}\n\tif (preg_match('/\\((.*)\\)/', $rate, $reg)) {\n\t\t$morelabel = ' ('.$reg[1].')';\n\t\t$rate = preg_replace('/\\s*'.preg_quote($morelabel, '/').'/', '', $rate);\n\t}\n\tif (preg_match('/\\*/', $rate)) {\n\t\t$rate = str_replace('*', '', $rate);\n\t\t$info_bits |= 1;\n\t}\n\n\t// If rate is '9/9/9' we don't change it.  If rate is '9.000' we apply price()\n\tif (!preg_match('/\\//', $rate)) {\n\t\t$ret = price($rate, 0, '', 0, 0).($addpercent ? '%' : '');\n\t} else {\n\t\t// TODO Split on / and output with a price2num to have clean numbers without ton of 000.\n\t\t$ret = $rate.($addpercent ? '%' : '');\n\t}\n\tif (($info_bits & 1) && $usestarfornpr >= 0) {\n\t\t$ret .= ' *';\n\t}\n\t$ret .= $morelabel;\n\treturn $ret;\n}\n\n\n/**\n *\t\tFunction to format a value into an amount for visual output\n *\t\tFunction used into PDF and HTML pages\n *\n *\t\t@param\tfloat\t\t$amount\t\t\tAmount to format\n *\t\t@param\tinteger\t\t$form\t\t\tType of format, HTML or not (not by default)\n *\t\t@param\tTranslate\t$outlangs\t\tObject langs for output\n *\t\t@param\tint\t\t\t$trunc\t\t\t1=Truncate if there is more decimals than MAIN_MAX_DECIMALS_SHOWN (default), 0=Does not truncate. Deprecated because amount are rounded (to unit or total amount accurancy) before beeing inserted into database or after a computation, so this parameter should be useless.\n *\t\t@param\tint\t\t\t$rounding\t\tMinimum number of decimal to show. If 0, no change, if -1, we use min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOT)\n *\t\t@param\tint\t\t\t$forcerounding\tForce the number of decimal to forcerounding decimal (-1=do not force)\n *\t\t@param\tstring\t\t$currency_code\tTo add currency symbol (''=add nothing, 'auto'=Use default currency, 'XXX'=add currency symbols for XXX currency)\n *\t\t@return\tstring\t\t\t\t\t\tChaine avec montant formate\n *\n *\t\t@see\tprice2num()\t\t\t\t\tRevert function of price\n */\nfunction price($amount, $form = 0, $outlangs = '', $trunc = 1, $rounding = -1, $forcerounding = -1, $currency_code = '')\n{\n\tglobal $langs, $conf;\n\n\t// Clean parameters\n\tif (empty($amount)) {\n\t\t$amount = 0; // To have a numeric value if amount not defined or = ''\n\t}\n\t$amount = (is_numeric($amount) ? $amount : 0); // Check if amount is numeric, for example, an error occured when amount value = o (letter) instead 0 (number)\n\tif ($rounding < 0) {\n\t\t$rounding = min($conf->global->MAIN_MAX_DECIMALS_UNIT, $conf->global->MAIN_MAX_DECIMALS_TOT);\n\t}\n\t$nbdecimal = $rounding;\n\n\t// Output separators by default (french)\n\t$dec = ',';\n\t$thousand = ' ';\n\n\t// If $outlangs not forced, we use use language\n\tif (!is_object($outlangs)) {\n\t\t$outlangs = $langs;\n\t}\n\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\") {\n\t\t$dec = $outlangs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\t}\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorThousand\") != \"SeparatorThousand\") {\n\t\t$thousand = $outlangs->transnoentitiesnoconv(\"SeparatorThousand\");\n\t}\n\tif ($thousand == 'None') {\n\t\t$thousand = '';\n\t} elseif ($thousand == 'Space') {\n\t\t$thousand = ' ';\n\t}\n\t//print \"outlangs=\".$outlangs->defaultlang.\" amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t//print \"amount=\".$amount.\"-\";\n\t$amount = str_replace(',', '.', $amount); // should be useless\n\t//print $amount.\"-\";\n\t$datas = explode('.', $amount);\n\t$decpart = isset($datas[1]) ? $datas[1] : '';\n\t$decpart = preg_replace('/0+$/i', '', $decpart); // Supprime les 0 de fin de partie decimale\n\t//print \"decpart=\".$decpart.\"<br>\";\n\t$end = '';\n\n\t// We increase nbdecimal if there is more decimal than asked (to not loose information)\n\tif (dol_strlen($decpart) > $nbdecimal) {\n\t\t$nbdecimal = dol_strlen($decpart);\n\t}\n\t// Si on depasse max\n\tif ($trunc && $nbdecimal > $conf->global->MAIN_MAX_DECIMALS_SHOWN) {\n\t\t$nbdecimal = $conf->global->MAIN_MAX_DECIMALS_SHOWN;\n\t\tif (preg_match('/\\.\\.\\./i', $conf->global->MAIN_MAX_DECIMALS_SHOWN)) {\n\t\t\t// Si un affichage est tronque, on montre des ...\n\t\t\t$end = '...';\n\t\t}\n\t}\n\n\t// If force rounding\n\tif ($forcerounding >= 0) {\n\t\t$nbdecimal = $forcerounding;\n\t}\n\n\t// Format number\n\t$output = number_format($amount, $nbdecimal, $dec, $thousand);\n\tif ($form) {\n\t\t$output = preg_replace('/\\s/', '&nbsp;', $output);\n\t\t$output = preg_replace('/\\'/', '&#039;', $output);\n\t}\n\t// Add symbol of currency if requested\n\t$cursymbolbefore = $cursymbolafter = '';\n\tif ($currency_code) {\n\t\tif ($currency_code == 'auto') {\n\t\t\t$currency_code = $conf->currency;\n\t\t}\n\n\t\t$listofcurrenciesbefore = array('AUD', 'CAD', 'CNY', 'COP', 'CLP', 'GBP', 'HKD', 'MXN', 'PEN', 'USD');\n\t\t$listoflanguagesbefore = array('nl_NL');\n\t\tif (in_array($currency_code, $listofcurrenciesbefore) || in_array($outlangs->defaultlang, $listoflanguagesbefore)) {\n\t\t\t$cursymbolbefore .= $outlangs->getCurrencySymbol($currency_code);\n\t\t} else {\n\t\t\t$tmpcur = $outlangs->getCurrencySymbol($currency_code);\n\t\t\t$cursymbolafter .= ($tmpcur == $currency_code ? ' '.$tmpcur : $tmpcur);\n\t\t}\n\t}\n\t$output = $cursymbolbefore.$output.$end.($cursymbolafter ? ' ' : '').$cursymbolafter;\n\n\treturn $output;\n}\n\n/**\n *\tFunction that return a number with universal decimal format (decimal separator is '.') from an amount typed by a user.\n *\tFunction to use on each input amount before any numeric test or database insert. A better name for this function\n *  should be roundtext2num().\n *\n *\t@param\tstring|float\t$amount\t\t\tAmount to convert/clean or round\n *\t@param\tstring|int\t\t$rounding\t\t''=No rounding\n * \t\t\t\t\t\t\t\t\t\t\t'MU'=Round to Max unit price (MAIN_MAX_DECIMALS_UNIT)\n *\t\t\t\t\t\t\t\t\t\t\t'MT'=Round to Max for totals with Tax (MAIN_MAX_DECIMALS_TOT)\n *\t\t\t\t\t\t\t\t\t\t\t'MS'=Round to Max for stock quantity (MAIN_MAX_DECIMALS_STOCK)\n *      \t\t                            'CU'=Round to Max unit price of foreign currency accuracy\n *      \t\t                            'CT'=Round to Max for totals with Tax of foreign currency accuracy\n *\t\t\t\t\t\t\t\t\t\t\tNumeric = Nb of digits for rounding (For example 2 for a percentage)\n * \t@param\tint\t\t\t\t$option\t\t\tPut 1 if you know that content is already universal format number (so no correction on decimal will be done)\n * \t\t\t\t\t\t\t\t\t\t\tPut 2 if you know that number is a user input (so we know we don't have to fix decimal separator).\n *\t@return\tstring\t\t\t\t\t\t\tAmount with universal numeric format (Example: '99.99999').\n *\t\t\t\t\t\t\t\t\t\t\tIf conversion fails, it return text unchanged if ($rounding = '' and $option = 1) or '0' if ($rounding is defined and $option = 1).\n *\t\t\t\t\t\t\t\t\t\t\tIf amount is null or '', it returns '' if $rounding = '' or '0' if $rounding is defined..\n *\n *\t@see    price()\t\t\t\t\t\t\tOpposite function of price2num\n */\nfunction price2num($amount, $rounding = '', $option = 0)\n{\n\tglobal $langs, $conf;\n\n\t// Round PHP function does not allow number like '1,234.56' nor '1.234,56' nor '1 234,56'\n\t// Numbers must be '1234.56'\n\t// Decimal delimiter for PHP and database SQL requests must be '.'\n\t$dec = ',';\n\t$thousand = ' ';\n\tif ($langs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\") {\n\t\t$dec = $langs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\t}\n\tif ($langs->transnoentitiesnoconv(\"SeparatorThousand\") != \"SeparatorThousand\") {\n\t\t$thousand = $langs->transnoentitiesnoconv(\"SeparatorThousand\");\n\t}\n\tif ($thousand == 'None') {\n\t\t$thousand = '';\n\t} elseif ($thousand == 'Space') {\n\t\t$thousand = ' ';\n\t}\n\t//print \"amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t// Convert value to universal number format (no thousand separator, '.' as decimal separator)\n\tif ($option != 1) {\t// If not a PHP number or unknown, we change or clean format\n\t\t//print \"\\n\".'PP'.$amount.' - '.$dec.' - '.$thousand.' - '.intval($amount).'<br>';\n\t\tif (!is_numeric($amount)) {\n\t\t\t$amount = preg_replace('/[a-zA-Z\\/\\\\\\*\\(\\)\\<\\>\\_]/', '', $amount);\n\t\t}\n\n\t\tif ($option == 2 && $thousand == '.' && preg_match('/\\.(\\d\\d\\d)$/', (string) $amount)) {\t// It means the . is used as a thousand separator and string come from input data, so 1.123 is 1123\n\t\t\t$amount = str_replace($thousand, '', $amount);\n\t\t}\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be like defined by Dolibarr setup.\n\t\t// So if number was already a good number, it is converted into local Dolibarr setup.\n\t\tif (is_numeric($amount)) {\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps = sprintf(\"%0.10F\", $amount - intval($amount)); // temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps = preg_replace('/([\\.1-9])0+$/', '\\\\1', $temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec = max(0, dol_strlen($temps) - 2); // -2 to remove \"0.\"\n\t\t\t$amount = number_format($amount, $nbofdec, $dec, $thousand);\n\t\t}\n\t\t//print \"QQ\".$amount.\"<br>\\n\";\n\n\t\t// Now make replace (the main goal of function)\n\t\tif ($thousand != ',' && $thousand != '.') {\n\t\t\t$amount = str_replace(',', '.', $amount); // To accept 2 notations for french users\n\t\t}\n\t\t$amount = str_replace(' ', '', $amount); // To avoid spaces\n\t\t$amount = str_replace($thousand, '', $amount); // Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount = str_replace($dec, '.', $amount);\n\t}\n\t//print ' XX'.$amount.' '.$rounding;\n\n\t// Now, make a rounding if required\n\tif ($rounding) {\n\t\t$nbofdectoround = '';\n\t\tif ($rounding == 'MU') {\n\t\t\t$nbofdectoround = $conf->global->MAIN_MAX_DECIMALS_UNIT;\n\t\t} elseif ($rounding == 'MT') {\n\t\t\t$nbofdectoround = $conf->global->MAIN_MAX_DECIMALS_TOT;\n\t\t} elseif ($rounding == 'MS') {\n\t\t\t$nbofdectoround = empty($conf->global->MAIN_MAX_DECIMALS_STOCK) ? 5 : $conf->global->MAIN_MAX_DECIMALS_STOCK;\n\t\t} elseif ($rounding == 'CU') {\n\t\t\t$nbofdectoround = max($conf->global->MAIN_MAX_DECIMALS_UNIT, 8);\t// TODO Use param of currency\n\t\t} elseif ($rounding == 'CT') {\n\t\t\t$nbofdectoround = max($conf->global->MAIN_MAX_DECIMALS_TOT, 8);\t\t// TODO Use param of currency\n\t\t} elseif (is_numeric($rounding)) {\n\t\t\t$nbofdectoround = (int) $rounding;\n\t\t}\n\t\t//print \" RR\".$amount.' - '.$nbofdectoround.'<br>';\n\t\tif (dol_strlen($nbofdectoround)) {\n\t\t\t$amount = round(is_string($amount) ? (float) $amount : $amount, $nbofdectoround); // $nbofdectoround can be 0.\n\t\t} else {\n\t\t\treturn 'ErrorBadParameterProvidedToFunction';\n\t\t}\n\t\t//print ' SS'.$amount.' - '.$nbofdec.' - '.$dec.' - '.$thousand.' - '.$nbofdectoround.'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be defined by Dolibarr setup.\n\t\tif (is_numeric($amount)) {\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps = sprintf(\"%0.10F\", $amount - intval($amount)); // temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps = preg_replace('/([\\.1-9])0+$/', '\\\\1', $temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec = max(0, dol_strlen($temps) - 2); // -2 to remove \"0.\"\n\t\t\t$amount = number_format($amount, min($nbofdec, $nbofdectoround), $dec, $thousand); // Convert amount to format with dolibarr dec and thousand\n\t\t}\n\t\t//print \"TT\".$amount.'<br>';\n\n\t\t// Always make replace because each math function (like round) replace\n\t\t// with local values and we want a number that has a SQL string format x.y\n\t\tif ($thousand != ',' && $thousand != '.') {\n\t\t\t$amount = str_replace(',', '.', $amount); // To accept 2 notations for french users\n\t\t}\n\t\t$amount = str_replace(' ', '', $amount); // To avoid spaces\n\t\t$amount = str_replace($thousand, '', $amount); // Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount = str_replace($dec, '.', $amount);\n\t}\n\n\treturn $amount;\n}\n\n/**\n * Output a dimension with best unit\n *\n * @param   float       $dimension      Dimension\n * @param   int         $unit           Unit scale of dimension (Example: 0=kg, -3=g, -6=mg, 98=ounce, 99=pound, ...)\n * @param   string      $type           'weight', 'volume', ...\n * @param   Translate   $outputlangs    Translate language object\n * @param   int         $round          -1 = non rounding, x = number of decimal\n * @param   string      $forceunitoutput    'no' or numeric (-3, -6, ...) compared to $unit (In most case, this value is value defined into $conf->global->MAIN_WEIGHT_DEFAULT_UNIT)\n * @return  string                      String to show dimensions\n */\nfunction showDimensionInBestUnit($dimension, $unit, $type, $outputlangs, $round = -1, $forceunitoutput = 'no')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\tif (($forceunitoutput == 'no' && $dimension < 1 / 10000 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == -6)) {\n\t\t$dimension = $dimension * 1000000;\n\t\t$unit = $unit - 6;\n\t} elseif (($forceunitoutput == 'no' && $dimension < 1 / 10 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == -3)) {\n\t\t$dimension = $dimension * 1000;\n\t\t$unit = $unit - 3;\n\t} elseif (($forceunitoutput == 'no' && $dimension > 100000000 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == 6)) {\n\t\t$dimension = $dimension / 1000000;\n\t\t$unit = $unit + 6;\n\t} elseif (($forceunitoutput == 'no' && $dimension > 100000 && $unit < 90) || (is_numeric($forceunitoutput) && $forceunitoutput == 3)) {\n\t\t$dimension = $dimension / 1000;\n\t\t$unit = $unit + 3;\n\t}\n\t// Special case when we want output unit into pound or ounce\n\t/* TODO\n\tif ($unit < 90 && $type == 'weight' && is_numeric($forceunitoutput) && (($forceunitoutput == 98) || ($forceunitoutput == 99))\n\t{\n\t\t$dimension = // convert dimension from standard unit into ounce or pound\n\t\t$unit = $forceunitoutput;\n\t}\n\tif ($unit > 90 && $type == 'weight' && is_numeric($forceunitoutput) && $forceunitoutput < 90)\n\t{\n\t\t$dimension = // convert dimension from standard unit into ounce or pound\n\t\t$unit = $forceunitoutput;\n\t}*/\n\n\t$ret = price($dimension, 0, $outputlangs, 0, 0, $round).' '.measuringUnitString(0, $type, $unit);\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn localtax rate for a particular vat, when selling a product with vat $vatrate, from a $thirdparty_buyer to a $thirdparty_seller\n *  Note: This function applies same rules than get_default_tva\n *\n * \t@param\tfloat\t\t$vatrate\t\t        Vat rate. Can be '8.5' or '8.5 (VATCODEX)' for example\n * \t@param  int\t\t\t$local\t\t         \tLocal tax to search and return (1 or 2 return only tax rate 1 or tax rate 2)\n *  @param  Societe\t\t$thirdparty_buyer    \tObject of buying third party\n *  @param\tSociete\t\t$thirdparty_seller\t\tObject of selling third party ($mysoc if not defined)\n *  @param\tint\t\t\t$vatnpr\t\t\t\t\tIf vat rate is NPR or not\n * \t@return\tmixed\t\t\t   \t\t\t\t\t0 if not found, localtax rate if found\n *  @see get_default_tva()\n */\nfunction get_localtax($vatrate, $local, $thirdparty_buyer = \"\", $thirdparty_seller = \"\", $vatnpr = 0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\tif (empty($thirdparty_seller) || !is_object($thirdparty_seller)) {\n\t\t$thirdparty_seller = $mysoc;\n\t}\n\n\tdol_syslog(\"get_localtax tva=\".$vatrate.\" local=\".$local.\" thirdparty_buyer id=\".(is_object($thirdparty_buyer) ? $thirdparty_buyer->id : '').\"/country_code=\".(is_object($thirdparty_buyer) ? $thirdparty_buyer->country_code : '').\" thirdparty_seller id=\".$thirdparty_seller->id.\"/country_code=\".$thirdparty_seller->country_code.\" thirdparty_seller localtax1_assuj=\".$thirdparty_seller->localtax1_assuj.\"  thirdparty_seller localtax2_assuj=\".$thirdparty_seller->localtax2_assuj);\n\n\t$vatratecleaned = $vatrate;\n\t$reg = array();\n\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg)) {     // If vat is \"xx (yy)\"\n\t\t$vatratecleaned = trim($reg[1]);\n\t\t$vatratecode = $reg[2];\n\t}\n\n\t/*if ($thirdparty_buyer->country_code != $thirdparty_seller->country_code)\n\t{\n\t\treturn 0;\n\t}*/\n\n\t// Some test to guess with no need to make database access\n\tif ($mysoc->country_code == 'ES') { // For spain localtaxes 1 and 2, tax is qualified if buyer use local tax\n\t\tif ($local == 1) {\n\t\t\tif (!$mysoc->localtax1_assuj || (string) $vatratecleaned == \"0\") {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ($thirdparty_seller->id == $mysoc->id) {\n\t\t\t\tif (!$thirdparty_buyer->localtax1_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!$thirdparty_seller->localtax1_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($local == 2) {\n\t\t\t//if (! $mysoc->localtax2_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif (!$mysoc->localtax2_assuj) {\n\t\t\t\treturn 0; // If main vat is 0, IRPF may be different than 0.\n\t\t\t}\n\t\t\tif ($thirdparty_seller->id == $mysoc->id) {\n\t\t\t\tif (!$thirdparty_buyer->localtax2_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!$thirdparty_seller->localtax2_assuj) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ($local == 1 && !$thirdparty_seller->localtax1_assuj) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ($local == 2 && !$thirdparty_seller->localtax2_assuj) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// For some country MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY is forced to on.\n\tif (in_array($mysoc->country_code, array('ES'))) {\n\t\t$conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY = 1;\n\t}\n\n\t// Search local taxes\n\tif (!empty($conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY)) {\n\t\tif ($local == 1) {\n\t\t\tif ($thirdparty_seller != $mysoc) {\n\t\t\t\tif (!isOnlyOneLocalTax($local)) {  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t\treturn $thirdparty_seller->localtax1_value;\n\t\t\t\t}\n\t\t\t} else { // i am the seller\n\t\t\t\tif (!isOnlyOneLocalTax($local)) { // TODO If seller is me, why not always returning this, even if there is only one locatax vat.\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($local == 2) {\n\t\t\tif ($thirdparty_seller != $mysoc) {\n\t\t\t\tif (!isOnlyOneLocalTax($local)) {  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t\t// TODO We should also return value defined on thirdparty only if defined\n\t\t\t\t\treturn $thirdparty_seller->localtax2_value;\n\t\t\t\t}\n\t\t\t} else { // i am the seller\n\t\t\t\tif (in_array($mysoc->country_code, array('ES'))) {\n\t\t\t\t\treturn $thirdparty_buyer->localtax2_value;\n\t\t\t\t} else {\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// By default, search value of local tax on line of common tax\n\t$sql = \"SELECT t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($thirdparty_seller->country_code).\"'\";\n\t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\tif (!empty($vatratecode)) {\n\t\t$sql .= \" AND t.code ='\".$db->escape($vatratecode).\"'\"; // If we have the code, we use it in priority\n\t} else {\n\t\t$sql .= \" AND t.recuperableonly = '\".$db->escape($vatnpr).\"'\";\n\t}\n\tdol_syslog(\"get_localtax\", LOG_DEBUG);\n\t$resql = $db->query($sql);\n\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) {\n\t\t\tif ($local == 1) {\n\t\t\t\treturn $obj->localtax1;\n\t\t\t} elseif ($local == 2) {\n\t\t\t\treturn $obj->localtax2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n\n/**\n * Return true if LocalTax (1 or 2) is unique.\n * Example: If localtax1 is 5 on line with highest common vat rate, return true\n * Example: If localtax1 is 5:8:15 on line with highest common vat rate, return false\n *\n * @param   int \t$local\tLocal tax to test (1 or 2)\n * @return  boolean \t\tTrue if LocalTax have multiple values, False if not\n */\nfunction isOnlyOneLocalTax($local)\n{\n\t$tax = get_localtax_by_third($local);\n\n\t$valors = explode(\":\", $tax);\n\n\tif (count($valors) > 1) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\n/**\n * Get values of localtaxes (1 or 2) for company country for the common vat with the highest value\n *\n * @param\tint\t\t$local \tLocalTax to get\n * @return\tnumber\t\t\tValues of localtax\n */\nfunction get_localtax_by_third($local)\n{\n\tglobal $db, $mysoc;\n\t$sql = \"SELECT t.localtax1, t.localtax2 \";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=t.fk_pays\";\n\t$sql .= \" WHERE c.code = '\".$db->escape($mysoc->country_code).\"' AND t.active = 1 AND t.taux=(\";\n\t$sql .= \"  SELECT max(tt.taux) FROM \".MAIN_DB_PREFIX.\"c_tva as tt inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=tt.fk_pays\";\n\t$sql .= \"  WHERE c.code = '\".$db->escape($mysoc->country_code).\"' AND tt.active = 1\";\n\t$sql .= \"  )\";\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local == 1) {\n\t\t\treturn $obj->localtax1;\n\t\t} elseif ($local == 2) {\n\t\t\treturn $obj->localtax2;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n\n/**\n *  Get tax (VAT) main information from Id.\n *  You can also call getLocalTaxesFromRate() after to get only localtax fields.\n *\n *  @param\tint|string  $vatrate\t\t    VAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray       \t  \t\t\t\tarray('rowid'=> , 'code'=> ...)\n *  @see getLocalTaxesFromRate()\n */\nfunction getTaxesFromId($vatrate, $buyer = null, $seller = null, $firstparamisid = 1)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getTaxesFromId vat id or rate = \".$vatrate);\n\n\t// Search local taxes\n\t$sql = \"SELECT t.rowid, t.code, t.taux as rate, t.recuperableonly as npr, t.accountancy_code_sell, t.accountancy_code_buy,\";\n\t$sql .= \" t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) {\n\t\t$sql .= \" WHERE t.rowid = \".(int) $vatrate;\n\t} else {\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\t$reg = array();\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg)) {      // If vat is \"xx (yy)\"\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql .= \", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t/*if ($mysoc->country_code == 'ES') $sql.= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($buyer->country_code).\"'\";    // vat in spain use the buyer country ??\n\t\telse $sql.= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($seller->country_code).\"'\";*/\n\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($seller->country_code).\"'\";\n\t\t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) {\n\t\t\t$sql .= \" AND t.code = '\".$db->escape($vatratecode).\"'\";\n\t\t}\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) {\n\t\t\treturn array(\n\t\t\t'rowid'=>$obj->rowid,\n\t\t\t'code'=>$obj->code,\n\t\t\t'rate'=>$obj->rate,\n\t\t\t'localtax1'=>$obj->localtax1,\n\t\t\t'localtax1_type'=>$obj->localtax1_type,\n\t\t\t'localtax2'=>$obj->localtax2,\n\t\t\t'localtax2_type'=>$obj->localtax2_type,\n\t\t\t'npr'=>$obj->npr,\n\t\t\t'accountancy_code_sell'=>$obj->accountancy_code_sell,\n\t\t\t'accountancy_code_buy'=>$obj->accountancy_code_buy\n\t\t\t);\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t} else {\n\t\tdol_print_error($db);\n\t}\n\n\treturn array();\n}\n\n/**\n *  Get type and rate of localtaxes for a particular vat rate/country of a thirdparty.\n *  This does not take into account the seller setup if subject to vat or not, only country.\n *\n *  TODO This function is ALSO called to retrieve type for building PDF. Such call of function must be removed.\n *  Instead this function must be called when adding a line to get the array of possible values for localtax and type, and then\n *  provide the selected value to the function calcul_price_total.\n *\n *  @param\tint|string  $vatrate\t\t\tVAT ID or Rate+Code. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tint\t\t    $local              Number of localtax (1 or 2, or 0 to return 1 & 2)\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is ID into table instead of Rate+code (use this if you can)\n *  @return\tarray    \t    \t\t\t\tarray(localtax_type1(1-6 or 0 if not found), rate localtax1, localtax_type2, rate localtax2, accountancycodecust, accountancycodesupp)\n *  @see getTaxesFromId()\n */\nfunction getLocalTaxesFromRate($vatrate, $local, $buyer, $seller, $firstparamisid = 0)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getLocalTaxesFromRate vatrate=\".$vatrate.\" local=\".$local);\n\n\t// Search local taxes\n\t$sql  = \"SELECT t.taux as rate, t.code, t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) {\n\t\t$sql .= \" WHERE t.rowid = \".(int) $vatrate;\n\t} else {\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\t$reg = array();\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg)) {     // If vat is \"x.x (yy)\"\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql .= \", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\tif ($mysoc->country_code == 'ES') {\n\t\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape($buyer->country_code).\"'\"; // local tax in spain use the buyer country ??\n\t\t} else {\n\t\t\t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$db->escape(empty($seller->country_code) ? $mysoc->country_code : $seller->country_code).\"'\";\n\t\t}\n\t\t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) {\n\t\t\t$sql .= \" AND t.code = '\".$db->escape($vatratecode).\"'\";\n\t\t}\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\n\t\tif ($obj) {\n\t\t\t$vateratestring = $obj->rate.($obj->code ? ' ('.$obj->code.')' : '');\n\n\t\t\tif ($local == 1) {\n\t\t\t\treturn array($obj->localtax1_type, get_localtax($vateratestring, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t} elseif ($local == 2) {\n\t\t\t\treturn array($obj->localtax2_type, get_localtax($vateratestring, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t} else {\n\t\t\t\treturn array($obj->localtax1_type, get_localtax($vateratestring, 1, $buyer, $seller), $obj->localtax2_type, get_localtax($vateratestring, 2, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn array();\n}\n\n/**\n *\tReturn vat rate of a product in a particular country, or default country vat if product is unknown.\n *  Function called by get_default_tva().\n *\n *  @param\tint\t\t\t$idprod          \tId of product or 0 if not a predefined product\n *  @param  Societe\t\t$thirdpartytouse  \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *\t@param\tint\t\t\t$idprodfournprice\tId product_fournisseur_price (for \"supplier\" proposal/order/invoice)\n *  @return float|string   \t\t\t\t    Vat rate to use with format 5.0 or '5.0 (XXX)'\n *  @see get_product_localtax_for_country()\n */\nfunction get_product_vat_for_country($idprod, $thirdpartytouse, $idprodfournprice = 0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\n\t$ret = 0;\n\t$found = 0;\n\n\tif ($idprod > 0) {\n\t\t// Load product\n\t\t$product = new Product($db);\n\t\t$result = $product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdpartytouse->country_code) { // If country to consider is ours\n\t\t\tif ($idprodfournprice > 0) {     // We want vat for product for a \"supplier\" object\n\t\t\t\t$product->get_buyprice($idprodfournprice, 0, 0, 0);\n\t\t\t\t$ret = $product->vatrate_supplier;\n\t\t\t\tif ($product->default_vat_code) {\n\t\t\t\t\t$ret .= ' ('.$product->default_vat_code.')';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$ret = $product->tva_tx; // Default vat of product we defined\n\t\t\t\tif ($product->default_vat_code) {\n\t\t\t\t\t$ret .= ' ('.$product->default_vat_code.')';\n\t\t\t\t}\n\t\t\t}\n\t\t\t$found = 1;\n\t\t} else {\n\t\t\t// TODO Read default product vat according to product and another countrycode.\n\t\t\t// Vat for couple anothercountrycode/product is data that is not managed and store yet, so we will fallback on next rule.\n\t\t}\n\t}\n\n\tif (!$found) {\n\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS)) {\n\t\t\t// If vat of product for the country not found or not defined, we return the first higher vat of country.\n\t\t\t$sql = \"SELECT t.taux as vat_rate, t.code as default_vat_code\";\n\t\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t\t$sql .= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$db->escape($thirdpartytouse->country_code).\"'\";\n\t\t\t$sql .= \" ORDER BY t.taux DESC, t.code ASC, t.recuperableonly ASC\";\n\t\t\t$sql .= $db->plimit(1);\n\n\t\t\t$resql = $db->query($sql);\n\t\t\tif ($resql) {\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\tif ($obj) {\n\t\t\t\t\t$ret = $obj->vat_rate;\n\t\t\t\t\tif ($obj->default_vat_code) {\n\t\t\t\t\t\t$ret .= ' ('.$obj->default_vat_code.')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$db->free($sql);\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t} else {\n\t\t\t$ret = $conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS; // Forced value if autodetect fails\n\t\t}\n\t}\n\n\tdol_syslog(\"get_product_vat_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tReturn localtax vat rate of a product in a particular country or default country vat if product is unknown\n *\n *  @param\tint\t\t$idprod         \t\tId of product\n *  @param  int\t\t$local          \t\t1 for localtax1, 2 for localtax 2\n *  @param  Societe\t$thirdpartytouse    \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *  @return int             \t\t\t\t<0 if KO, Vat rate if OK\n *  @see get_product_vat_for_country()\n */\nfunction get_product_localtax_for_country($idprod, $local, $thirdpartytouse)\n{\n\tglobal $db, $mysoc;\n\n\tif (!class_exists('Product')) {\n\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t}\n\n\t$ret = 0;\n\t$found = 0;\n\n\tif ($idprod > 0) {\n\t\t// Load product\n\t\t$product = new Product($db);\n\t\t$result = $product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdpartytouse->country_code) { // If selling country is ours\n\t\t\t/* Not defined yet, so we don't use this\n\t\t\tif ($local==1) $ret=$product->localtax1_tx;\n\t\t\telseif ($local==2) $ret=$product->localtax2_tx;\n\t\t\t$found=1;\n\t\t\t*/\n\t\t} else {\n\t\t\t// TODO Read default product vat according to product and another countrycode.\n\t\t\t// Vat for couple anothercountrycode/product is data that is not managed and store yet, so we will fallback on next rule.\n\t\t}\n\t}\n\n\tif (!$found) {\n\t\t// If vat of product for the country not found or not defined, we return higher vat of country.\n\t\t$sql = \"SELECT taux as vat_rate, localtax1, localtax2\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql .= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$db->escape($thirdpartytouse->country_code).\"'\";\n\t\t$sql .= \" ORDER BY t.taux DESC, t.recuperableonly ASC\";\n\t\t$sql .= $db->plimit(1);\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$obj = $db->fetch_object($resql);\n\t\t\tif ($obj) {\n\t\t\t\tif ($local == 1) {\n\t\t\t\t\t$ret = $obj->localtax1;\n\t\t\t\t} elseif ($local == 2) {\n\t\t\t\t\t$ret = $obj->localtax2;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tdol_syslog(\"get_product_localtax_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tFunction that return vat rate of a product line (according to seller, buyer and product vat rate)\n *   VATRULE 1: Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t VATRULE 2: Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t VATRULE 3: Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n *\t VATRULE 4: Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n *\t VATRULE 5: Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n *\t VATRULE 6: Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tObjet societe vendeuse\n *\t@param  Societe\t\t$thirdparty_buyer   \tObjet societe acheteuse\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@param\tint\t\t\t$idprodfournprice\t\tId product_fournisseur_price (for supplier order/invoice)\n *\t@return float|string   \t\t\t\t      \tVat rate to use with format 5.0 or '5.0 (XXX)', -1 if we can't guess it\n *  @see get_default_npr(), get_default_localtax()\n */\nfunction get_default_tva(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod = 0, $idprodfournprice = 0)\n{\n\tglobal $conf;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\n\t// Note: possible values for tva_assuj are 0/1 or franchise/reel\n\t$seller_use_vat = ((is_numeric($thirdparty_seller->tva_assuj) && !$thirdparty_seller->tva_assuj) || (!is_numeric($thirdparty_seller->tva_assuj) && $thirdparty_seller->tva_assuj == 'franchise')) ? 0 : 1;\n\n\t$seller_country_code = $thirdparty_seller->country_code;\n\t$seller_in_cee = isInEEC($thirdparty_seller);\n\n\t$buyer_country_code = $thirdparty_buyer->country_code;\n\t$buyer_in_cee = isInEEC($thirdparty_buyer);\n\n\tdol_syslog(\"get_default_tva: seller use vat=\".$seller_use_vat.\", seller country=\".$seller_country_code.\", seller in cee=\".$seller_in_cee.\", buyer vat number=\".$thirdparty_buyer->tva_intra.\" buyer country=\".$buyer_country_code.\", buyer in cee=\".$buyer_in_cee.\", idprod=\".$idprod.\", idprodfournprice=\".$idprodfournprice.\", SERVICE_ARE_ECOMMERCE_200238EC=\".(!empty($conf->global->SERVICES_ARE_ECOMMERCE_200238EC) ? $conf->global->SERVICES_ARE_ECOMMERCE_200238EC : ''));\n\n\t// If services are eServices according to EU Council Directive 2002/38/EC (http://ec.europa.eu/taxation_customs/taxation/vat/traders/e-commerce/article_1610_en.htm)\n\t// we use the buyer VAT.\n\tif (!empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC)) {\n\t\tif ($seller_in_cee && $buyer_in_cee) {\n\t\t\t$isacompany = $thirdparty_buyer->isACompany();\n\t\t\tif ($isacompany && !empty($conf->global->MAIN_USE_VAT_COMPANIES_IN_EEC_WITH_INVALID_VAT_ID_ARE_INDIVIDUAL)) {\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\t\tif (!isValidVATID($thirdparty_buyer)) {\n\t\t\t\t\t$isacompany = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$isacompany) {\n\t\t\t\t//print 'VATRULE 0';\n\t\t\t\treturn get_product_vat_for_country($idprod, $thirdparty_buyer, $idprodfournprice);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If seller does not use VAT\n\tif (!$seller_use_vat) {\n\t\t//print 'VATRULE 1';\n\t\treturn 0;\n\t}\n\n\t// Le test ci-dessus ne devrait pas etre necessaire. Me signaler l'exemple du cas juridique concerne si le test suivant n'est pas suffisant.\n\n\t// Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\tif (($seller_country_code == $buyer_country_code)\n\t|| (in_array($seller_country_code, array('FR,MC')) && in_array($buyer_country_code, array('FR', 'MC')))) { // Warning ->country_code not always defined\n\t\t//print 'VATRULE 2';\n\t\treturn get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice);\n\t}\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t// 'VATRULE 3' - Not supported\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\tif (($seller_in_cee && $buyer_in_cee)) {\n\t\t$isacompany = $thirdparty_buyer->isACompany();\n\t\tif ($isacompany && !empty($conf->global->MAIN_USE_VAT_COMPANIES_IN_EEC_WITH_INVALID_VAT_ID_ARE_INDIVIDUAL)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\t\t\tif (!isValidVATID($thirdparty_buyer)) {\n\t\t\t\t$isacompany = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (!$isacompany) {\n\t\t\t//print 'VATRULE 4';\n\t\t\treturn get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice);\n\t\t} else {\n\t\t\t//print 'VATRULE 5';\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// Si (vendeur dans Communaute europeene et acheteur hors Communaute europeenne et acheteur particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\t// I don't see any use case that need this rule.\n\tif (!empty($conf->global->MAIN_USE_VAT_OF_PRODUCT_FOR_INDIVIDUAL_CUSTOMER_OUT_OF_EEC) && empty($buyer_in_cee)) {\n\t\t$isacompany = $thirdparty_buyer->isACompany();\n\t\tif (!$isacompany) {\n\t\t\treturn get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice);\n\t\t\t//print 'VATRULE extra';\n\t\t}\n\t}\n\n\t// Sinon la TVA proposee par defaut=0. Fin de regle.\n\t// Rem: Cela signifie qu'au moins un des 2 est hors Communaute europeenne et que le pays differe\n\t//print 'VATRULE 6';\n\treturn 0;\n}\n\n\n/**\n *\tFonction qui renvoie si tva doit etre tva percue recuperable\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param  int\t\t\t$idprod                 Id product\n *  @param\tint\t\t\t$idprodfournprice\t\tId supplier price for product\n *\t@return float       \t\t\t        \t0 or 1\n *  @see get_default_tva(), get_default_localtax()\n */\nfunction get_default_npr(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod = 0, $idprodfournprice = 0)\n{\n\tglobal $db;\n\n\tif ($idprodfournprice > 0) {\n\t\tif (!class_exists('ProductFournisseur')) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/fourn/class/fournisseur.product.class.php';\n\t\t}\n\t\t$prodprice = new ProductFournisseur($db);\n\t\t$prodprice->fetch_product_fournisseur_price($idprodfournprice);\n\t\treturn $prodprice->fourn_tva_npr;\n\t} elseif ($idprod > 0) {\n\t\tif (!class_exists('Product')) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/product/class/product.class.php';\n\t\t}\n\t\t$prod = new Product($db);\n\t\t$prod->fetch($idprod);\n\t\treturn $prod->tva_npr;\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tFunction that return localtax of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param\tint\t\t\t$local\t\t\t\t\tLocaltax to process (1 or 2)\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@return integer        \t\t\t\t       \tlocaltax, -1 si ne peut etre determine\n *  @see get_default_tva(), get_default_npr()\n */\nfunction get_default_localtax($thirdparty_seller, $thirdparty_buyer, $local, $idprod = 0)\n{\n\tglobal $mysoc;\n\n\tif (!is_object($thirdparty_seller)) {\n\t\treturn -1;\n\t}\n\tif (!is_object($thirdparty_buyer)) {\n\t\treturn -1;\n\t}\n\n\tif ($local == 1) { // Localtax 1\n\t\tif ($mysoc->country_code == 'ES') {\n\t\t\tif (is_numeric($thirdparty_buyer->localtax1_assuj) && !$thirdparty_buyer->localtax1_assuj) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// Si vendeur non assujeti a Localtax1, localtax1 par default=0\n\t\t\tif (is_numeric($thirdparty_seller->localtax1_assuj) && !$thirdparty_seller->localtax1_assuj) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!is_numeric($thirdparty_seller->localtax1_assuj) && $thirdparty_seller->localtax1_assuj == 'localtax1off') {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} elseif ($local == 2) { //I Localtax 2\n\t\t// Si vendeur non assujeti a Localtax2, localtax2 par default=0\n\t\tif (is_numeric($thirdparty_seller->localtax2_assuj) && !$thirdparty_seller->localtax2_assuj) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (!is_numeric($thirdparty_seller->localtax2_assuj) && $thirdparty_seller->localtax2_assuj == 'localtax2off') {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tif ($thirdparty_seller->country_code == $thirdparty_buyer->country_code) {\n\t\treturn get_product_localtax_for_country($idprod, $local, $thirdparty_seller);\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn yes or no in current language\n *\n *\t@param\tstring|int\t$yesno\t\t\tValue to test (1, 'yes', 'true' or 0, 'no', 'false')\n *\t@param\tinteger\t\t$case\t\t\t1=Yes/No, 0=yes/no, 2=Disabled checkbox, 3=Disabled checkbox + Yes/No\n *\t@param\tint\t\t\t$color\t\t\t0=texte only, 1=Text is formated with a color font style ('ok' or 'error'), 2=Text is formated with 'ok' color.\n *\t@return\tstring\t\t\t\t\t\tHTML string\n */\nfunction yn($yesno, $case = 1, $color = 0)\n{\n\tglobal $langs;\n\t$result = 'unknown';\n\t$classname = '';\n\tif ($yesno == 1 || strtolower($yesno) == 'yes' || strtolower($yesno) == 'true') { \t// A mettre avant test sur no a cause du == 0\n\t\t$result = $langs->trans('yes');\n\t\tif ($case == 1 || $case == 3) {\n\t\t\t$result = $langs->trans(\"Yes\");\n\t\t}\n\t\tif ($case == 2) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"1\" checked disabled>';\n\t\t}\n\t\tif ($case == 3) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"1\" checked disabled> '.$result;\n\t\t}\n\n\t\t$classname = 'ok';\n\t} elseif ($yesno == 0 || strtolower($yesno) == 'no' || strtolower($yesno) == 'false') {\n\t\t$result = $langs->trans(\"no\");\n\t\tif ($case == 1 || $case == 3) {\n\t\t\t$result = $langs->trans(\"No\");\n\t\t}\n\t\tif ($case == 2) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"0\" disabled>';\n\t\t}\n\t\tif ($case == 3) {\n\t\t\t$result = '<input type=\"checkbox\" value=\"0\" disabled> '.$result;\n\t\t}\n\n\t\tif ($color == 2) {\n\t\t\t$classname = 'ok';\n\t\t} else {\n\t\t\t$classname = 'error';\n\t\t}\n\t}\n\tif ($color) {\n\t\treturn '<font class=\"'.$classname.'\">'.$result.'</font>';\n\t}\n\treturn $result;\n}\n\n/**\n *\tReturn a path to have a the directory according to object where files are stored.\n *  New usage:       $conf->module->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 1, $object, '').'/'\n *         or:       $conf->module->dir_output.'/'.get_exdir(0, 0, 0, 0, $object, '')     if multidir_output not defined.\n *  Example out with new usage:       $object is invoice -> 'INYYMM-ABCD'\n *  Example out with old usage:       '015' with level 3->\"0/1/5/\", '015' with level 1->\"5/\", 'ABC-1' with level 3 ->\"0/0/1/\"\n *\n *\t@param\tstring|int\t$num            Id of object (deprecated, $object will be used in future)\n *\t@param  int\t\t\t$level\t\t    Level of subdirs to return (1, 2 or 3 levels). (deprecated, global option will be used in future)\n * \t@param\tint\t\t\t$alpha\t\t    0=Keep number only to forge path, 1=Use alpha part afer the - (By default, use 0). (deprecated, global option will be used in future)\n *  @param  int\t\t\t$withoutslash   0=With slash at end (except if '/', we return ''), 1=without slash at end\n *  @param\tObject\t\t$object\t\t\tObject to use to get ref to forge the path.\n *  @param\tstring\t\t$modulepart\t\tType of object ('invoice_supplier, 'donation', 'invoice', ...'). Use '' for autodetect from $object.\n *  @return\tstring\t\t\t\t\t\tDir to use ending. Example '' or '1/' or '1/2/'\n */\nfunction get_exdir($num, $level, $alpha, $withoutslash, $object, $modulepart = '')\n{\n\tglobal $conf;\n\n\tif (empty($modulepart) && !empty($object->module)) {\n\t\t$modulepart = $object->module;\n\t}\n\n\t$path = '';\n\n\t$arrayforoldpath = array('cheque', 'category', 'holiday', 'supplier_invoice', 'invoice_supplier', 'mailing', 'supplier_payment');\n\tif (!empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) {\n\t\t$arrayforoldpath[] = 'product';\n\t}\n\tif (!empty($level) && in_array($modulepart, $arrayforoldpath)) {\n\t\t// This part should be removed once all code is using \"get_exdir\" to forge path, with parameter $object and $modulepart provided.\n\t\tif (empty($alpha)) {\n\t\t\t$num = preg_replace('/([^0-9])/i', '', $num);\n\t\t} else {\n\t\t\t$num = preg_replace('/^.*\\-/i', '', $num);\n\t\t}\n\t\t$num = substr(\"000\".$num, -$level);\n\t\tif ($level == 1) {\n\t\t\t$path = substr($num, 0, 1);\n\t\t}\n\t\tif ($level == 2) {\n\t\t\t$path = substr($num, 1, 1).'/'.substr($num, 0, 1);\n\t\t}\n\t\tif ($level == 3) {\n\t\t\t$path = substr($num, 2, 1).'/'.substr($num, 1, 1).'/'.substr($num, 0, 1);\n\t\t}\n\t} else {\n\t\t// We will enhance here a common way of forging path for document storage.\n\t\t// In a future, we may distribute directories on several levels depending on setup and object.\n\t\t// Here, $object->id, $object->ref and $modulepart are required.\n\t\t//var_dump($modulepart);\n\t\t$path = dol_sanitizeFileName(empty($object->ref) ? (string) $object->id : $object->ref);\n\t}\n\n\tif (empty($withoutslash) && !empty($path)) {\n\t\t$path .= '/';\n\t}\n\n\treturn $path;\n}\n\n/**\n *\tCreation of a directory (this can create recursive subdir)\n *\n *\t@param\tstring\t\t$dir\t\tDirectory to create (Separator must be '/'. Example: '/mydir/mysubdir')\n *\t@param\tstring\t\t$dataroot\tData root directory (To avoid having the data root in the loop. Using this will also lost the warning on first dir PHP has no permission when open_basedir is used)\n *  @param\tstring|null\t$newmask\tMask for new file (Defaults to $conf->global->MAIN_UMASK or 0755 if unavailable). Example: '0444'\n *\t@return int         \t\t\t< 0 if KO, 0 = already exists, > 0 if OK\n */\nfunction dol_mkdir($dir, $dataroot = '', $newmask = null)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"functions.lib::dol_mkdir: dir=\".$dir, LOG_INFO);\n\n\t$dir_osencoded = dol_osencode($dir);\n\tif (@is_dir($dir_osencoded)) {\n\t\treturn 0;\n\t}\n\n\t$nberr = 0;\n\t$nbcreated = 0;\n\n\t$ccdir = '';\n\tif (!empty($dataroot)) {\n\t\t// Remove data root from loop\n\t\t$dir = str_replace($dataroot.'/', '', $dir);\n\t\t$ccdir = $dataroot.'/';\n\t}\n\n\t$cdir = explode(\"/\", $dir);\n\t$num = count($cdir);\n\tfor ($i = 0; $i < $num; $i++) {\n\t\tif ($i > 0) {\n\t\t\t$ccdir .= '/'.$cdir[$i];\n\t\t} else {\n\t\t\t$ccdir .= $cdir[$i];\n\t\t}\n\t\tif (preg_match(\"/^.:$/\", $ccdir, $regs)) {\n\t\t\tcontinue; // Si chemin Windows incomplet, on poursuit par rep suivant\n\t\t}\n\n\t\t// Attention, le is_dir() peut echouer bien que le rep existe.\n\t\t// (ex selon config de open_basedir)\n\t\tif ($ccdir) {\n\t\t\t$ccdir_osencoded = dol_osencode($ccdir);\n\t\t\tif (!@is_dir($ccdir_osencoded)) {\n\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' does not exists or is outside open_basedir PHP setting.\", LOG_DEBUG);\n\n\t\t\t\tumask(0);\n\t\t\t\t$dirmaskdec = octdec($newmask);\n\t\t\t\tif (empty($newmask)) {\n\t\t\t\t\t$dirmaskdec = empty($conf->global->MAIN_UMASK) ? octdec('0755') : octdec($conf->global->MAIN_UMASK);\n\t\t\t\t}\n\t\t\t\t$dirmaskdec |= octdec('0111'); // Set x bit required for directories\n\t\t\t\tif (!@mkdir($ccdir_osencoded, $dirmaskdec)) {\n\t\t\t\t\t// Si le is_dir a renvoye une fausse info, alors on passe ici.\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Fails to create directory '\".$ccdir.\"' or directory already exists.\", LOG_WARNING);\n\t\t\t\t\t$nberr++;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' created\", LOG_DEBUG);\n\t\t\t\t\t$nberr = 0; // On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignore\n\t\t\t\t\t$nbcreated++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$nberr = 0; // On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignores\n\t\t\t}\n\t\t}\n\t}\n\treturn ($nberr ? -$nberr : $nbcreated);\n}\n\n\n/**\n *\tReturn picto saying a field is required\n *\n *\t@return  string\t\tChaine avec picto obligatoire\n */\nfunction picto_required()\n{\n\treturn '<span class=\"fieldrequired\">*</span>';\n}\n\n\n/**\n *\tClean a string from all HTML tags and entities.\n *  This function differs from strip_tags because:\n *  - <br> are replaced with \\n if removelinefeed=0 or 1\n *  - if entities are found, they are decoded BEFORE the strip\n *  - you can decide to convert line feed into a space\n *\n *\t@param\tstring\t$stringtoclean\t\tString to clean\n *\t@param\tinteger\t$removelinefeed\t\t1=Replace all new lines by 1 space, 0=Only ending new lines are removed others are replaced with \\n, 2=Ending new lines are removed but others are kept with a same number of \\n than nb of <br> when there is both \"...<br>\\n...\"\n *  @param  string\t$pagecodeto      \tEncoding of input/output string\n *  @param\tinteger\t$strip_tags\t\t\t0=Use internal strip, 1=Use strip_tags() php function (bugged when text contains a < char that is not for a html tag or when tags is not closed like '<img onload=aaa')\n *  @param\tinteger\t$removedoublespaces\tReplace double space into one space\n *\t@return string\t    \t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_onlythesehtmltags() dol_string_neverthesehtmltags(), dolStripPhpCode()\n */\nfunction dol_string_nohtmltag($stringtoclean, $removelinefeed = 1, $pagecodeto = 'UTF-8', $strip_tags = 0, $removedoublespaces = 1)\n{\n\tif ($removelinefeed == 2) {\n\t\t$stringtoclean = preg_replace('/<br[^>]*>(\\n|\\r)+/ims', '<br>', $stringtoclean);\n\t}\n\t$temp = preg_replace('/<br[^>]*>/i', \"\\n\", $stringtoclean);\n\n\t// We remove entities BEFORE stripping (in case of an open separator char that is entity encoded and not the closing other, the strip will fails)\n\t$temp = dol_html_entity_decode($temp, ENT_COMPAT | ENT_HTML5, $pagecodeto);\n\n\t$temp = str_replace('< ', '__ltspace__', $temp);\n\n\tif ($strip_tags) {\n\t\t$temp = strip_tags($temp);\n\t} else {\n\t\t$temp = str_replace('<>', '', $temp);\t// No reason to have this into a text, except if value is to try bypass the next html cleaning\n\t\t$pattern = \"/<[^<>]+>/\";\n\t\t// Example of $temp: <a href=\"/myurl\" title=\"<u>A title</u>\">0000-021</a>\n\t\t$temp = preg_replace($pattern, \"\", $temp); // pass 1 - $temp after pass 1: <a href=\"/myurl\" title=\"A title\">0000-021\n\t\t$temp = preg_replace($pattern, \"\", $temp); // pass 2 - $temp after pass 2: 0000-021\n\t\t// Remove '<' into remainging, so remove non closing html tags like '<abc' or '<<abc'. Note: '<123abc' is not a html tag (can be kept), but '<abc123' is (must be removed).\n\t\t$temp = preg_replace('/<+([a-z]+)/i', '\\1', $temp);\n\t}\n\n\t$temp = dol_html_entity_decode($temp, ENT_COMPAT, $pagecodeto);\n\n\t// Remove also carriage returns\n\tif ($removelinefeed == 1) {\n\t\t$temp = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), \" \", $temp);\n\t}\n\n\t// And double quotes\n\tif ($removedoublespaces) {\n\t\twhile (strpos($temp, \"  \")) {\n\t\t\t$temp = str_replace(\"  \", \" \", $temp);\n\t\t}\n\t}\n\n\t$temp = str_replace('__ltspace__', '< ', $temp);\n\n\treturn trim($temp);\n}\n\n/**\n *\tClean a string to keep only desirable HTML tags.\n *  WARNING: This also clean HTML comments (used to obfuscate tag name).\n *\n *\t@param\tstring\t$stringtoclean\t\t\tString to clean\n *  @param\tint\t\t$cleanalsosomestyles\tRemove absolute/fixed positioning from inline styles\n *  @param\tint\t\t$removeclassattribute\t1=Remove the class attribute from tags\n *  @param\tint\t\t$cleanalsojavascript\tRemove also occurence of 'javascript:'.\n *  @param\tint\t\t$allowiframe\t\t\tAllow iframe tags.\n *\t@return string\t    \t\t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_nohtmltag() dol_string_neverthesehtmltags()\n */\nfunction dol_string_onlythesehtmltags($stringtoclean, $cleanalsosomestyles = 1, $removeclassattribute = 1, $cleanalsojavascript = 0, $allowiframe = 0)\n{\n\t$allowed_tags = array(\n\t\t\"html\", \"head\", \"meta\", \"body\", \"article\", \"a\", \"abbr\", \"b\", \"blockquote\", \"br\", \"cite\", \"div\", \"dl\", \"dd\", \"dt\", \"em\", \"font\", \"img\", \"ins\", \"hr\", \"i\", \"li\", \"link\",\n\t\t\"ol\", \"p\", \"q\", \"s\", \"section\", \"span\", \"strike\", \"strong\", \"title\", \"table\", \"tr\", \"th\", \"td\", \"u\", \"ul\", \"sup\", \"sub\", \"blockquote\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"\n\t);\n\tif ($allowiframe) {\n\t\t$allowed_tags[] = \"iframe\";\n\t}\n\n\t$allowed_tags_string = join(\"><\", $allowed_tags);\n\t$allowed_tags_string = '<'.$allowed_tags_string.'>';\n\n\t$stringtoclean = str_replace('<!DOCTYPE html>', '__!DOCTYPE_HTML__', $stringtoclean);\t// Replace DOCTYPE to avoid to have it removed by the strip_tags\n\n\t$stringtoclean = dol_string_nounprintableascii($stringtoclean, 0);\n\n\t$stringtoclean = preg_replace('/<!--[^>]*-->/', '', $stringtoclean);\n\n\t$stringtoclean = preg_replace('/&colon;/i', ':', $stringtoclean);\n\t$stringtoclean = preg_replace('/&#58;|&#0+58|&#x3A/i', '', $stringtoclean); // refused string ':' encoded (no reason to have a : encoded like this) to disable 'javascript:...'\n\t$stringtoclean = preg_replace('/javascript\\s*:/i', '', $stringtoclean);\n\n\t$temp = strip_tags($stringtoclean, $allowed_tags_string);\n\n\tif ($cleanalsosomestyles) {\t// Clean for remaining html tags\n\t\t$temp = preg_replace('/position\\s*:\\s*(absolute|fixed)\\s*!\\s*important/i', '', $temp); // Note: If hacker try to introduce css comment into string to bypass this regex, the string must also be encoded by the dol_htmlentitiesbr during output so it become harmless\n\t}\n\tif ($removeclassattribute) {\t// Clean for remaining html tags\n\t\t$temp = preg_replace('/(<[^>]+)\\s+class=(([\"\\']).*?\\\\3|\\\\w*)/i', '\\\\1', $temp);\n\t}\n\n\t// Remove 'javascript:' that we should not find into a text with\n\t// Warning: This is not reliable to fight against obfuscated javascript, there is a lot of other solution to include js into a common html tag (only filtered by a GETPOST(.., powerfullfilter)).\n\tif ($cleanalsojavascript) {\n\t\t$temp = preg_replace('/javascript\\s*:/i', '', $temp);\n\t}\n\n\t$temp = str_replace('__!DOCTYPE_HTML__', '<!DOCTYPE html>', $temp);\t// Restore the DOCTYPE\n\n\treturn $temp;\n}\n\n\n/**\n *\tClean a string from some undesirable HTML tags.\n *  Note. Not as secured as dol_string_onlythesehtmltags().\n *\n *\t@param\tstring\t$stringtoclean\t\t\tString to clean\n *  @param\tarray\t$allowed_attributes\t\tArray of tags not allowed\n *\t@return string\t    \t\t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_nohtmltag() dol_string_onlythesehtmltags() dol_string_neverthesehtmltags()\n */\nfunction dol_string_onlythesehtmlattributes($stringtoclean, $allowed_attributes = array(\"allow\", \"allowfullscreen\", \"alt\", \"class\", \"contenteditable\", \"data-html\", \"frameborder\", \"height\", \"href\", \"id\", \"name\", \"src\", \"style\", \"target\", \"title\", \"width\"))\n{\n\tif (class_exists('DOMDocument') && !empty($stringtoclean)) {\n\t\t$stringtoclean = '<html><body>'.$stringtoclean.'</body></html>';\n\n\t\t$dom = new DOMDocument();\n\t\t$dom->loadHTML($stringtoclean, LIBXML_ERR_NONE|LIBXML_HTML_NOIMPLIED|LIBXML_HTML_NODEFDTD|LIBXML_NONET|LIBXML_NOWARNING|LIBXML_NOXMLDECL);\n\t\tif (is_object($dom)) {\n\t\t\tfor ($els = $dom->getElementsByTagname('*'), $i = $els->length - 1; $i >= 0; $i--) {\n\t\t\t\tfor ($attrs = $els->item($i)->attributes, $ii = $attrs->length - 1; $ii >= 0; $ii--) {\n\t\t\t\t\t// Delete attribute if not into allowed_attributes\n\t\t\t\t\tif (! empty($attrs->item($ii)->name) && ! in_array($attrs->item($ii)->name, $allowed_attributes)) {\n\t\t\t\t\t\t$els->item($i)->removeAttribute($attrs->item($ii)->name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$return = $dom->saveHTML();\n\n\t\t//$return = '<html><body>aaaa</p>bb<p>ssdd</p>'.\"\\n<p>aaa</p>aa<p>bb</p>\";\n\t\t$return = preg_replace('/^<html><body>/', '', $return);\n\t\t$return = preg_replace('/<\\/body><\\/html>$/', '', $return);\n\t\treturn $return;\n\t} else {\n\t\treturn $stringtoclean;\n\t}\n}\n\n/**\n *\tClean a string from some undesirable HTML tags.\n *  Note. Not as secured as dol_string_onlythesehtmltags().\n *\n *\t@param\tstring\t$stringtoclean\t\t\tString to clean\n *  @param\tarray\t$disallowed_tags\t\tArray of tags not allowed\n *  @param\tstring\t$cleanalsosomestyles\tClean also some tags\n *\t@return string\t    \t\t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag() strip_tags() dol_string_nohtmltag() dol_string_onlythesehtmltags() dol_string_onlythesehtmlattributes()\n */\nfunction dol_string_neverthesehtmltags($stringtoclean, $disallowed_tags = array('textarea'), $cleanalsosomestyles = 0)\n{\n\t$temp = $stringtoclean;\n\tforeach ($disallowed_tags as $tagtoremove) {\n\t\t$temp = preg_replace('/<\\/?'.$tagtoremove.'>/', '', $temp);\n\t\t$temp = preg_replace('/<\\/?'.$tagtoremove.'\\s+[^>]*>/', '', $temp);\n\t}\n\n\tif ($cleanalsosomestyles) {\n\t\t$temp = preg_replace('/position\\s*:\\s*(absolute|fixed)\\s*!\\s*important/', '', $temp); // Note: If hacker try to introduce css comment into string to avoid this, string should be encoded by the dol_htmlentitiesbr so be harmless\n\t}\n\n\treturn $temp;\n}\n\n\n/**\n * Return first line of text. Cut will depends if content is HTML or not.\n *\n * @param \tstring\t$text\t\tInput text\n * @param\tint\t\t$nboflines  Nb of lines to get (default is 1 = first line only)\n * @param   string  $charset    Charset of $text string (UTF-8 by default)\n * @return\tstring\t\t\t\tOutput text\n * @see dol_nboflines_bis(), dol_string_nohtmltag(), dol_escape_htmltag()\n */\nfunction dolGetFirstLineOfText($text, $nboflines = 1, $charset = 'UTF-8')\n{\n\tif ($nboflines == 1) {\n\t\tif (dol_textishtml($text)) {\n\t\t\t$firstline = preg_replace('/<br[^>]*>.*$/s', '', $text); // The s pattern modifier means the . can match newline characters\n\t\t\t$firstline = preg_replace('/<div[^>]*>.*$/s', '', $firstline); // The s pattern modifier means the . can match newline characters\n\t\t} else {\n\t\t\t$firstline = preg_replace('/[\\n\\r].*/', '', $text);\n\t\t}\n\t\treturn $firstline.((strlen($firstline) != strlen($text)) ? '...' : '');\n\t} else {\n\t\t$ishtml = 0;\n\t\tif (dol_textishtml($text)) {\n\t\t\t$text = preg_replace('/\\n/', '', $text);\n\t\t\t$ishtml = 1;\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t} else {\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\n\t\t$text = strtr($text, $repTable);\n\t\tif ($charset == 'UTF-8') {\n\t\t\t$pattern = '/(<br[^>]*>)/Uu';\n\t\t} else {\n\t\t\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\t\t$pattern = '/(<br[^>]*>)/U'; // /U is to have UNGREEDY regex to limit to one html tag.\n\t\t}\n\t\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t$firstline = '';\n\t\t$i = 0;\n\t\t$nba = count($a); // 2x nb of lines in $a because $a contains also a line for each new line separator\n\t\twhile (($i < $nba) && ($i < ($nboflines * 2))) {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$firstline .= $a[$i];\n\t\t\t} elseif (($i < (($nboflines * 2) - 1)) && ($i < ($nba - 1))) {\n\t\t\t\t$firstline .= ($ishtml ? \"<br>\\n\" : \"\\n\");\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tunset($a);\n\t\treturn $firstline.(($i < $nba) ? '...' : '');\n\t}\n}\n\n\n/**\n * Replace CRLF in string with a HTML BR tag.\n * WARNING: The content after operation contains some HTML tags (the <br>) so be sure to also have encode the special chars of stringtoencode into HTML before.\n *\n * @param\tstring\t$stringtoencode\t\tString to encode\n * @param\tint     $nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br\n * @param   bool\t$forxml             false=Use <br>, true=Use <br />\n * @return\tstring\t\t\t\t\t\tString encoded\n * @see dol_nboflines(), dolGetFirstLineOfText()\n */\nfunction dol_nl2br($stringtoencode, $nl2brmode = 0, $forxml = false)\n{\n\tif (!$nl2brmode) {\n\t\treturn nl2br($stringtoencode, $forxml);\n\t} else {\n\t\t$ret = preg_replace('/(\\r\\n|\\r|\\n)/i', ($forxml ? '<br />' : '<br>'), $stringtoencode);\n\t\treturn $ret;\n\t}\n}\n\n\n/**\n *\tThis function is called to encode a string into a HTML string but differs from htmlentities because\n * \ta detection is done before to see if text is already HTML or not. Also, all entities but &,<,>,\" are converted.\n *  This permits to encode special chars to entities with no double encoding for already encoded HTML strings.\n * \tThis function also remove last EOL or BR if $removelasteolbr=1 (default).\n *  For PDF usage, you can show text by 2 ways:\n *              - writeHTMLCell -> param must be encoded into HTML.\n *              - MultiCell -> param must not be encoded into HTML.\n *              Because writeHTMLCell convert also \\n into <br>, if function\n *              is used to build PDF, nl2brmode must be 1.\n *\n *\t@param\tstring\t$stringtoencode\t\tString to encode\n *\t@param\tint\t\t$nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br (for use with FPDF writeHTMLCell function for example)\n *  @param  string\t$pagecodefrom       Pagecode stringtoencode is encoded\n *  @param\tint\t\t$removelasteolbr\t1=Remove last br or lasts \\n (default), 0=Do nothing\n *  @return\tstring\t\t\t\t\t\tString encoded\n */\nfunction dol_htmlentitiesbr($stringtoencode, $nl2brmode = 0, $pagecodefrom = 'UTF-8', $removelasteolbr = 1)\n{\n\t$newstring = $stringtoencode;\n\tif (dol_textishtml($stringtoencode)) {\t// Check if text is already HTML or not\n\t\t$newstring = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i', '<br>', $newstring); // Replace \"<br type=\"_moz\" />\" by \"<br>\". It's same and avoid pb with FPDF.\n\t\tif ($removelasteolbr) {\n\t\t\t$newstring = preg_replace('/<br>$/i', '', $newstring); // Remove last <br> (remove only last one)\n\t\t}\n\t\t$newstring = strtr($newstring, array('&'=>'__and__', '<'=>'__lt__', '>'=>'__gt__', '\"'=>'__dquot__'));\n\t\t$newstring = dol_htmlentities($newstring, ENT_COMPAT, $pagecodefrom); // Make entity encoding\n\t\t$newstring = strtr($newstring, array('__and__'=>'&', '__lt__'=>'<', '__gt__'=>'>', '__dquot__'=>'\"'));\n\t} else {\n\t\tif ($removelasteolbr) {\n\t\t\t$newstring = preg_replace('/(\\r\\n|\\r|\\n)$/i', '', $newstring); // Remove last \\n (may remove several)\n\t\t}\n\t\t$newstring = dol_nl2br(dol_htmlentities($newstring, ENT_COMPAT, $pagecodefrom), $nl2brmode);\n\t}\n\t// Other substitutions that htmlentities does not do\n\t//$newstring=str_replace(chr(128),'&euro;',$newstring);\t// 128 = 0x80. Not in html entity table.     // Seems useles with TCPDF. Make bug with UTF8 languages\n\treturn $newstring;\n}\n\n/**\n *\tThis function is called to decode a HTML string (it decodes entities and br tags)\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@param\tstring\t$pagecodeto\t\t\tPage code for result\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlentitiesbr_decode($stringtodecode, $pagecodeto = 'UTF-8')\n{\n\t$ret = dol_html_entity_decode($stringtodecode, ENT_COMPAT | ENT_HTML5, $pagecodeto);\n\t$ret = preg_replace('/'.\"\\r\\n\".'<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i', \"<br>\", $ret);\n\t$ret = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\r\\n\".'/i', \"\\r\\n\", $ret);\n\t$ret = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\n\".'/i', \"\\n\", $ret);\n\t$ret = preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i', \"\\n\", $ret);\n\treturn $ret;\n}\n\n/**\n *\tThis function remove all ending \\n and br at end\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlcleanlastbr($stringtodecode)\n{\n\t$ret = preg_replace('/(<br>|<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>|'.\"\\n\".'|'.\"\\r\".')+$/i', \"\", $stringtodecode);\n\treturn $ret;\n}\n\n/**\n * Replace html_entity_decode functions to manage errors\n *\n * @param   string\t$a\t\t\t\t\tOperand a\n * @param   string\t$b\t\t\t\t\tOperand b (ENT_QUOTES|ENT_HTML5=convert simple, double quotes, colon, e accent, ...)\n * @param   string\t$c\t\t\t\t\tOperand c\n * @param\tstring\t$keepsomeentities\tEntities but &, <, >, \" are not converted.\n * @return  string\t\t\t\t\t\tString decoded\n */\nfunction dol_html_entity_decode($a, $b, $c = 'UTF-8', $keepsomeentities = 0)\n{\n\t$newstring = $a;\n\tif ($keepsomeentities) {\n\t\t$newstring = strtr($newstring, array('&amp;'=>'__andamp__', '&lt;'=>'__andlt__', '&gt;'=>'__andgt__', '\"'=>'__dquot__'));\n\t}\n\t$newstring = html_entity_decode($newstring, $b, $c);\n\tif ($keepsomeentities) {\n\t\t$newstring = strtr($newstring, array('__andamp__'=>'&amp;', '__andlt__'=>'&lt;', '__andgt__'=>'&gt;', '__dquot__'=>'\"'));\n\t}\n\treturn $newstring;\n}\n\n/**\n * Replace htmlentities functions.\n * Goal of this function is to be sure to have default values of htmlentities that match what we need.\n *\n * @param   string  $string         The input string to encode\n * @param   int     $flags          Flags (see PHP doc above)\n * @param   string  $encoding       Encoding page code\n * @param   bool    $double_encode  When double_encode is turned off, PHP will not encode existing html entities\n * @return  string  $ret            Encoded string\n */\nfunction dol_htmlentities($string, $flags = null, $encoding = 'UTF-8', $double_encode = false)\n{\n\treturn htmlentities($string, $flags, $encoding, $double_encode);\n}\n\n/**\n *\tCheck if a string is a correct iso string\n *\tIf not, it will we considered not HTML encoded even if it is by FPDF.\n *\tExample, if string contains euro symbol that has ascii code 128\n *\n *\t@param\tstring\t\t$s      \tString to check\n *  @param\tstring\t\t$clean\t\tClean if it is not an ISO. Warning, if file is utf8, you will get a bad formated file.\n *\t@return\tint|string  \t   \t\t0 if bad iso, 1 if good iso, Or the clean string if $clean is 1\n */\nfunction dol_string_is_good_iso($s, $clean = 0)\n{\n\t$len = dol_strlen($s);\n\t$out = '';\n\t$ok = 1;\n\tfor ($scursor = 0; $scursor < $len; $scursor++) {\n\t\t$ordchar = ord($s[$scursor]);\n\t\t//print $scursor.'-'.$ordchar.'<br>';\n\t\tif ($ordchar < 32 && $ordchar != 13 && $ordchar != 10) {\n\t\t\t$ok = 0;\n\t\t\tbreak;\n\t\t} elseif ($ordchar > 126 && $ordchar < 160) {\n\t\t\t$ok = 0;\n\t\t\tbreak;\n\t\t} elseif ($clean) {\n\t\t\t$out .= $s[$scursor];\n\t\t}\n\t}\n\tif ($clean) {\n\t\treturn $out;\n\t}\n\treturn $ok;\n}\n\n/**\n *\tReturn nb of lines of a clear text\n *\n *\t@param\tstring\t$s\t\t\tString to check\n * \t@param\tint     $maxchar\tNot yet used\n *\t@return\tint\t\t\t\t\tNumber of lines\n *  @see\tdol_nboflines_bis(), dolGetFirstLineOfText()\n */\nfunction dol_nboflines($s, $maxchar = 0)\n{\n\tif ($s == '') {\n\t\treturn 0;\n\t}\n\t$arraystring = explode(\"\\n\", $s);\n\t$nb = count($arraystring);\n\n\treturn $nb;\n}\n\n\n/**\n *\tReturn nb of lines of a formated text with \\n and <br> (WARNING: string must not have mixed \\n and br separators)\n *\n *\t@param\tstring\t$text      \t\tText\n *\t@param\tint\t\t$maxlinesize  \tLargeur de ligne en caracteres (ou 0 si pas de limite - defaut)\n * \t@param\tstring\t$charset\t\tGive the charset used to encode the $text variable in memory.\n *\t@return int\t\t\t\t\t\tNumber of lines\n *\t@see\tdol_nboflines(), dolGetFirstLineOfText()\n */\nfunction dol_nboflines_bis($text, $maxlinesize = 0, $charset = 'UTF-8')\n{\n\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\tif (dol_textishtml($text)) {\n\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t}\n\n\t$text = strtr($text, $repTable);\n\tif ($charset == 'UTF-8') {\n\t\t$pattern = '/(<br[^>]*>)/Uu';\n\t} else {\n\t\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\t$pattern = '/(<br[^>]*>)/U'; // /U is to have UNGREEDY regex to limit to one html tag.\n\t}\n\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t$nblines = (int) floor((count($a) + 1) / 2);\n\t// count possible auto line breaks\n\tif ($maxlinesize) {\n\t\tforeach ($a as $line) {\n\t\t\tif (dol_strlen($line) > $maxlinesize) {\n\t\t\t\t//$line_dec = html_entity_decode(strip_tags($line));\n\t\t\t\t$line_dec = html_entity_decode($line);\n\t\t\t\tif (dol_strlen($line_dec) > $maxlinesize) {\n\t\t\t\t\t$line_dec = wordwrap($line_dec, $maxlinesize, '\\n', true);\n\t\t\t\t\t$nblines += substr_count($line_dec, '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunset($a);\n\treturn $nblines;\n}\n\n/**\n *\tReturn if a text is a html content\n *\n *\t@param\tstring\t$msg\t\tContent to check\n *\t@param\tint\t\t$option\t\t0=Full detection, 1=Fast check\n *\t@return\tboolean\t\t\t\ttrue/false\n *\t@see\tdol_concatdesc()\n */\nfunction dol_textishtml($msg, $option = 0)\n{\n\tif ($option == 1) {\n\t\tif (preg_match('/<html/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<body/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<\\/textarea/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(b|em|i|u)>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<br/i', $msg)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else {\n\t\tif (preg_match('/<html/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<body/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<\\/textarea/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(b|em|i|u)>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<br\\/>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(br|div|font|li|p|span|strong|table)>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*\\/?>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/<img\\s+[^<>]*src[^<>]*>/i', $msg)) {\n\t\t\treturn true; // must accept <img src=\"http://example.com/aaa.png\" />\n\t\t} elseif (preg_match('/<a\\s+[^<>]*href[^<>]*>/i', $msg)) {\n\t\t\treturn true; // must accept <a href=\"http://example.com/aaa.png\" />\n\t\t} elseif (preg_match('/<h[0-9]>/i', $msg)) {\n\t\t\treturn true;\n\t\t} elseif (preg_match('/&[A-Z0-9]{1,6};/i', $msg)) {\n\t\t\treturn true; // Html entities names (http://www.w3schools.com/tags/ref_entities.asp)\n\t\t} elseif (preg_match('/&#[0-9]{2,3};/i', $msg)) {\n\t\t\treturn true; // Html entities numbers (http://www.w3schools.com/tags/ref_entities.asp)\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n/**\n *  Concat 2 descriptions with a new line between them (second operand after first one with appropriate new line separator)\n *  text1 html + text2 html => text1 + '<br>' + text2\n *  text1 html + text2 txt  => text1 + '<br>' + dol_nl2br(text2)\n *  text1 txt  + text2 html => dol_nl2br(text1) + '<br>' + text2\n *  text1 txt  + text2 txt  => text1 + '\\n' + text2\n *\n *  @param  string  $text1          Text 1\n *  @param  string  $text2          Text 2\n *  @param  bool    $forxml         true=Use <br /> instead of <br> if we have to add a br tag\n *  @param  bool    $invert         invert order of description lines (we often use config MAIN_CHANGE_ORDER_CONCAT_DESCRIPTION in this parameter)\n *  @return string                  Text 1 + new line + Text2\n *  @see    dol_textishtml()\n */\nfunction dol_concatdesc($text1, $text2, $forxml = false, $invert = false)\n{\n\tif (!empty($invert)) {\n\t\t\t$tmp = $text1;\n\t\t\t$text1 = $text2;\n\t\t\t$text2 = $tmp;\n\t}\n\n\t$ret = '';\n\t$ret .= (!dol_textishtml($text1) && dol_textishtml($text2)) ? dol_nl2br(dol_escape_htmltag($text1, 0, 1, '', 1), 0, $forxml) : $text1;\n\t$ret .= (!empty($text1) && !empty($text2)) ? ((dol_textishtml($text1) || dol_textishtml($text2)) ? ($forxml ? \"<br \\>\\n\" : \"<br>\\n\") : \"\\n\") : \"\";\n\t$ret .= (dol_textishtml($text1) && !dol_textishtml($text2)) ? dol_nl2br(dol_escape_htmltag($text2, 0, 1, '', 1), 0, $forxml) : $text2;\n\treturn $ret;\n}\n\n\n\n/**\n * Return array of possible common substitutions. This includes several families like: 'system', 'mycompany', 'object', 'objectamount', 'date', 'user'\n *\n * @param\tTranslate\t$outputlangs\tOutput language\n * @param   int         $onlykey        1=Do not calculate some heavy values of keys (performance enhancement when we need only the keys), 2=Values are trunc and html sanitized (to use for help tooltip)\n * @param   array       $exclude        Array of family keys we want to exclude. For example array('system', 'mycompany', 'object', 'objectamount', 'date', 'user', ...)\n * @param   Object      $object         Object for keys on object\n * @return\tarray\t\t\t\t\t\tArray of substitutions\n * @see setSubstitFromObject()\n */\nfunction getCommonSubstitutionArray($outputlangs, $onlykey = 0, $exclude = null, $object = null)\n{\n\tglobal $db, $conf, $mysoc, $user, $extrafields;\n\n\t$substitutionarray = array();\n\n\tif (empty($exclude) || !in_array('user', $exclude)) {\n\t\t// Add SIGNATURE into substitutionarray first, so, when we will make the substitution,\n\t\t// this will include signature content first and then replace var found into content of signature\n\t\t$signature = $user->signature;\n\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t'__USER_SIGNATURE__' => (string) (($signature && empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN)) ? ($onlykey == 2 ? dol_trunc(dol_string_nohtmltag($signature), 30) : $signature) : '')\n\t\t));\n\n\t\tif (is_object($user)) {\n\t\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t\t'__USER_ID__' => (string) $user->id,\n\t\t\t\t'__USER_LOGIN__' => (string) $user->login,\n\t\t\t\t'__USER_EMAIL__' => (string) $user->email,\n\t\t\t\t'__USER_LASTNAME__' => (string) $user->lastname,\n\t\t\t\t'__USER_FIRSTNAME__' => (string) $user->firstname,\n\t\t\t\t'__USER_FULLNAME__' => (string) $user->getFullName($outputlangs),\n\t\t\t\t'__USER_SUPERVISOR_ID__' => (string) ($user->fk_user ? $user->fk_user : '0'),\n\t\t\t\t'__USER_REMOTE_IP__' => (string) getUserRemoteIP()\n\t\t\t\t));\n\t\t}\n\t}\n\tif ((empty($exclude) || !in_array('mycompany', $exclude)) && is_object($mysoc)) {\n\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t'__MYCOMPANY_NAME__'    => $mysoc->name,\n\t\t\t'__MYCOMPANY_EMAIL__'   => $mysoc->email,\n\t\t\t'__MYCOMPANY_PROFID1__' => $mysoc->idprof1,\n\t\t\t'__MYCOMPANY_PROFID2__' => $mysoc->idprof2,\n\t\t\t'__MYCOMPANY_PROFID3__' => $mysoc->idprof3,\n\t\t\t'__MYCOMPANY_PROFID4__' => $mysoc->idprof4,\n\t\t\t'__MYCOMPANY_PROFID5__' => $mysoc->idprof5,\n\t\t\t'__MYCOMPANY_PROFID6__' => $mysoc->idprof6,\n\t\t\t'__MYCOMPANY_CAPITAL__' => $mysoc->capital,\n\t\t\t'__MYCOMPANY_FULLADDRESS__' => (method_exists($mysoc, 'getFullAddress') ? $mysoc->getFullAddress(1, ', ') : ''),\t// $mysoc may be stdClass\n\t\t\t'__MYCOMPANY_ADDRESS__' => $mysoc->address,\n\t\t\t'__MYCOMPANY_ZIP__'     => $mysoc->zip,\n\t\t\t'__MYCOMPANY_TOWN__'    => $mysoc->town,\n\t\t\t'__MYCOMPANY_COUNTRY__'    => $mysoc->country,\n\t\t\t'__MYCOMPANY_COUNTRY_ID__' => $mysoc->country_id,\n\t\t\t'__MYCOMPANY_COUNTRY_CODE__' => $mysoc->country_code,\n\t\t\t'__MYCOMPANY_CURRENCY_CODE__' => $conf->currency\n\t\t));\n\t}\n\n\tif (($onlykey || is_object($object)) && (empty($exclude) || !in_array('object', $exclude))) {\n\t\tif ($onlykey) {\n\t\t\t$substitutionarray['__ID__'] = '__ID__';\n\t\t\t$substitutionarray['__REF__'] = '__REF__';\n\t\t\t$substitutionarray['__REF_CLIENT__'] = '__REF_CLIENT__';\n\t\t\t$substitutionarray['__REF_SUPPLIER__'] = '__REF_SUPPLIER__';\n\t\t\t$substitutionarray['__NOTE_PUBLIC__'] = '__NOTE_PUBLIC__';\n\t\t\t$substitutionarray['__NOTE_PRIVATE__'] = '__NOTE_PRIVATE__';\n\t\t\t$substitutionarray['__EXTRAFIELD_XXX__'] = '__EXTRAFIELD_XXX__';\n\n\t\t\tif (!empty($conf->societe->enabled)) {\t// Most objects are concerned\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = '__THIRDPARTY_ID__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = '__THIRDPARTY_NAME__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = '__THIRDPARTY_NAME_ALIAS__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_CLIENT__'] = '__THIRDPARTY_CODE_CLIENT__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_FOURNISSEUR__'] = '__THIRDPARTY_CODE_FOURNISSEUR__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = '__THIRDPARTY_EMAIL__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_PHONE__'] = '__THIRDPARTY_PHONE__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_FAX__'] = '__THIRDPARTY_FAX__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_ADDRESS__'] = '__THIRDPARTY_ADDRESS__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_ZIP__'] = '__THIRDPARTY_ZIP__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_TOWN__'] = '__THIRDPARTY_TOWN__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF1__'] = '__THIRDPARTY_IDPROF1__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF2__'] = '__THIRDPARTY_IDPROF2__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF3__'] = '__THIRDPARTY_IDPROF3__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF4__'] = '__THIRDPARTY_IDPROF4__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF5__'] = '__THIRDPARTY_IDPROF5__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF6__'] = '__THIRDPARTY_IDPROF6__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_TVAINTRA__'] = '__THIRDPARTY_TVAINTRA__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PUBLIC__'] = '__THIRDPARTY_NOTE_PUBLIC__';\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PRIVATE__'] = '__THIRDPARTY_NOTE_PRIVATE__';\n\t\t\t}\n\t\t\tif (!empty($conf->adherent->enabled) && (!is_object($object) || $object->element == 'adherent')) {\n\t\t\t\t$substitutionarray['__MEMBER_ID__'] = '__MEMBER_ID__';\n\t\t\t\t$substitutionarray['__MEMBER_CIVILITY__'] = '__MEMBER_CIVILITY__';\n\t\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__'] = '__MEMBER_FIRSTNAME__';\n\t\t\t\t$substitutionarray['__MEMBER_LASTNAME__'] = '__MEMBER_LASTNAME__';\n\t\t\t\t$substitutionarray['__MEMBER_USER_LOGIN_INFORMATION__'] = 'Login and pass of the external user account';\n\t\t\t\t/*$substitutionarray['__MEMBER_NOTE_PUBLIC__'] = '__MEMBER_NOTE_PUBLIC__';\n\t\t\t\t$substitutionarray['__MEMBER_NOTE_PRIVATE__'] = '__MEMBER_NOTE_PRIVATE__';*/\n\t\t\t}\n\t\t\tif (!empty($conf->recruitment->enabled) && (!is_object($object) || $object->element == 'candidature')) {\n\t\t\t\t$substitutionarray['__CANDIDATE_FULLNAME__'] = '__CANDIDATE_FULLNAME__';\n\t\t\t\t$substitutionarray['__CANDIDATE_FIRSTNAME__'] = '__CANDIDATE_FIRSTNAME__';\n\t\t\t\t$substitutionarray['__CANDIDATE_LASTNAME__'] = '__CANDIDATE_LASTNAME__';\n\t\t\t}\n\t\t\tif (!empty($conf->projet->enabled)) {\t\t// Most objects\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = '__PROJECT_ID__';\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = '__PROJECT_REF__';\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = '__PROJECT_NAME__';\n\t\t\t\t/*$substitutionarray['__PROJECT_NOTE_PUBLIC__'] = '__PROJECT_NOTE_PUBLIC__';\n\t\t\t\t$substitutionarray['__PROJECT_NOTE_PRIVATE__'] = '__PROJECT_NOTE_PRIVATE__';*/\n\t\t\t}\n\t\t\tif (!empty($conf->contrat->enabled) && (!is_object($object) || $object->element == 'contract')) {\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = 'Highest date planned for a service start';\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = 'Highest date and hour planned for service start';\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = 'Lowest data for planned expiration of service';\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = 'Lowest date and hour for planned expiration of service';\n\t\t\t}\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = 'UrlToPayOnlineIfApplicable';\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_TEXT_AND_URL__'] = 'TextAndUrlToPayOnlineIfApplicable';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT__'] = 'Security key (if key is not unique per record)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_MEMBER__'] = 'Security key for payment on a member subscription (one key per member)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_ORDER__'] = 'Security key for payment on an order';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_INVOICE__'] = 'Security key for payment on an invoice';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_CONTRACTLINE__'] = 'Security key for payment on a a service';\n\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_PROPOSAL__'] = 'Direct download url of a proposal';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_ORDER__'] = 'Direct download url of an order';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_INVOICE__'] = 'Direct download url of an invoice';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_CONTRACT__'] = 'Direct download url of a contract';\n\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_SUPPLIER_PROPOSAL__'] = 'Direct download url of a supplier proposal';\n\n\t\t\tif (!empty($conf->expedition->enabled) && (!is_object($object) || $object->element == 'shipping')) {\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__'] = 'Shipping tracking number';\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__'] = 'Shipping tracking url';\n\t\t\t}\n\t\t\tif (!empty($conf->reception->enabled) && (!is_object($object) || $object->element == 'reception')) {\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUM__'] = 'Shippin tracking number of shipment';\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUMURL__'] = 'Shipping tracking url';\n\t\t\t}\n\t\t} else {\n\t\t\t$substitutionarray['__ID__'] = $object->id;\n\t\t\t$substitutionarray['__REF__'] = $object->ref;\n\t\t\t$substitutionarray['__REF_CLIENT__'] = (isset($object->ref_client) ? $object->ref_client : (isset($object->ref_customer) ? $object->ref_customer : null));\n\t\t\t$substitutionarray['__REF_SUPPLIER__'] = (isset($object->ref_supplier) ? $object->ref_supplier : null);\n\t\t\t$substitutionarray['__NOTE_PUBLIC__'] = (isset($object->note_public) ? $object->note_public : null);\n\t\t\t$substitutionarray['__NOTE_PRIVATE__'] = (isset($object->note_private) ? $object->note_private : null);\n\t\t\t$substitutionarray['__DATE_DELIVERY__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, 'day', 0, $outputlangs) : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_DAY__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%d\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_DAY_TEXT__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%A\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_MON__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%m\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_MON_TEXT__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%b\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_YEAR__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%Y\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_HH__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%H\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_MM__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%M\") : '');\n\t\t\t$substitutionarray['__DATE_DELIVERY_SS__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, \"%S\") : '');\n\n\t\t\t// For backward compatibility\n\t\t\t$substitutionarray['__REFCLIENT__'] = (isset($object->ref_client) ? $object->ref_client : (isset($object->ref_customer) ? $object->ref_customer : null));\n\t\t\t$substitutionarray['__REFSUPPLIER__'] = (isset($object->ref_supplier) ? $object->ref_supplier : null);\n\t\t\t$substitutionarray['__SUPPLIER_ORDER_DATE_DELIVERY__'] = (isset($object->date_livraison) ? dol_print_date($object->date_livraison, 'day', 0, $outputlangs) : '');\n\t\t\t$substitutionarray['__SUPPLIER_ORDER_DELAY_DELIVERY__'] = (isset($object->availability_code) ? ($outputlangs->transnoentities(\"AvailabilityType\".$object->availability_code) != ('AvailabilityType'.$object->availability_code) ? $outputlangs->transnoentities(\"AvailabilityType\".$object->availability_code) : $outputlangs->convToOutputCharset(isset($object->availability) ? $object->availability : '')) : '');\n\n\t\t\tif (is_object($object) && ($object->element == 'adherent' || $object->element == 'member') && $object->id > 0) {\n\t\t\t\t$birthday = (empty($object->birth) ? '' : dol_print_date($object->birth, 'day'));\n\n\t\t\t\t$substitutionarray['__MEMBER_ID__'] = (isset($object->id) ? $object->id : '');\n\t\t\t\tif (method_exists($object, 'getCivilityLabel')) {\n\t\t\t\t\t$substitutionarray['__MEMBER_CIVILITY__'] = $object->getCivilityLabel();\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__'] = (isset($object->firstname) ? $object->firstname : '');\n\t\t\t\t$substitutionarray['__MEMBER_LASTNAME__'] = (isset($object->lastname) ? $object->lastname : '');\n\t\t\t\t$substitutionarray['__MEMBER_USER_LOGIN_INFORMATION__'] = '';\n\t\t\t\tif (method_exists($object, 'getFullName')) {\n\t\t\t\t\t$substitutionarray['__MEMBER_FULLNAME__'] = $object->getFullName($outputlangs);\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__MEMBER_COMPANY__'] = (isset($object->societe) ? $object->societe : '');\n\t\t\t\t$substitutionarray['__MEMBER_ADDRESS__'] = (isset($object->address) ? $object->address : '');\n\t\t\t\t$substitutionarray['__MEMBER_ZIP__'] = (isset($object->zip) ? $object->zip : '');\n\t\t\t\t$substitutionarray['__MEMBER_TOWN__'] = (isset($object->town) ? $object->town : '');\n\t\t\t\t$substitutionarray['__MEMBER_COUNTRY__'] = (isset($object->country) ? $object->country : '');\n\t\t\t\t$substitutionarray['__MEMBER_EMAIL__'] = (isset($object->email) ? $object->email : '');\n\t\t\t\t$substitutionarray['__MEMBER_BIRTH__'] = (isset($birthday) ? $birthday : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHOTO__'] = (isset($object->photo) ? $object->photo : '');\n\t\t\t\t$substitutionarray['__MEMBER_LOGIN__'] = (isset($object->login) ? $object->login : '');\n\t\t\t\t$substitutionarray['__MEMBER_PASSWORD__'] = (isset($object->pass) ? $object->pass : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHONE__'] = (isset($object->phone) ? $object->phone : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHONEPRO__'] = (isset($object->phone_perso) ? $object->phone_perso : '');\n\t\t\t\t$substitutionarray['__MEMBER_PHONEMOBILE__'] = (isset($object->phone_mobile) ? $object->phone_mobile : '');\n\t\t\t\t$substitutionarray['__MEMBER_TYPE__'] = (isset($object->type) ? $object->type : '');\n\t\t\t\t$substitutionarray['__MEMBER_FIRST_SUBSCRIPTION_DATE__']       = dol_print_date($object->first_subscription_date, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_FIRST_SUBSCRIPTION_DATE_START__'] = dol_print_date($object->first_subscription_date_start, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_FIRST_SUBSCRIPTION_DATE_END__']   = dol_print_date($object->first_subscription_date_end, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_LAST_SUBSCRIPTION_DATE__']        = dol_print_date($object->last_subscription_date, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_LAST_SUBSCRIPTION_DATE_START__']  = dol_print_date($object->last_subscription_date_start, 'dayrfc');\n\t\t\t\t$substitutionarray['__MEMBER_LAST_SUBSCRIPTION_DATE_END__']    = dol_print_date($object->last_subscription_date_end, 'dayrfc');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'societe') {\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object) ? $object->id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object) ? $object->name : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object) ? $object->name_alias : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_CLIENT__'] = (is_object($object) ? $object->code_client : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_FOURNISSEUR__'] = (is_object($object) ? $object->code_fournisseur : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object) ? $object->email : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_PHONE__'] = (is_object($object) ? $object->phone : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_FAX__'] = (is_object($object) ? $object->fax : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ADDRESS__'] = (is_object($object) ? $object->address : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ZIP__'] = (is_object($object) ? $object->zip : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TOWN__'] = (is_object($object) ? $object->town : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_ID__'] = (is_object($object) ? $object->country_id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_CODE__'] = (is_object($object) ? $object->country_code : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF1__'] = (is_object($object) ? $object->idprof1 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF2__'] = (is_object($object) ? $object->idprof2 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF3__'] = (is_object($object) ? $object->idprof3 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF4__'] = (is_object($object) ? $object->idprof4 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF5__'] = (is_object($object) ? $object->idprof5 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF6__'] = (is_object($object) ? $object->idprof6 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TVAINTRA__'] = (is_object($object) ? $object->tva_intra : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PUBLIC__'] = (is_object($object) ? dol_htmlentitiesbr($object->note_public) : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PRIVATE__'] = (is_object($object) ? dol_htmlentitiesbr($object->note_private) : '');\n\t\t\t} elseif (is_object($object->thirdparty)) {\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object->thirdparty) ? $object->thirdparty->id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object->thirdparty) ? $object->thirdparty->name : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object->thirdparty) ? $object->thirdparty->name_alias : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_CLIENT__'] = (is_object($object->thirdparty) ? $object->thirdparty->code_client : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_CODE_FOURNISSEUR__'] = (is_object($object->thirdparty) ? $object->thirdparty->code_fournisseur : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object->thirdparty) ? $object->thirdparty->email : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_PHONE__'] = (is_object($object->thirdparty) ? $object->thirdparty->phone : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_FAX__'] = (is_object($object->thirdparty) ? $object->thirdparty->fax : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ADDRESS__'] = (is_object($object->thirdparty) ? $object->thirdparty->address : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_ZIP__'] = (is_object($object->thirdparty) ? $object->thirdparty->zip : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TOWN__'] = (is_object($object->thirdparty) ? $object->thirdparty->town : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_ID__'] = (is_object($object->thirdparty) ? $object->thirdparty->country_id : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_COUNTRY_CODE__'] = (is_object($object->thirdparty) ? $object->thirdparty->country_code : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF1__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof1 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF2__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof2 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF3__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof3 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF4__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof4 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF5__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof5 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_IDPROF6__'] = (is_object($object->thirdparty) ? $object->thirdparty->idprof6 : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_TVAINTRA__'] = (is_object($object->thirdparty) ? $object->thirdparty->tva_intra : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PUBLIC__'] = (is_object($object->thirdparty) ? dol_htmlentitiesbr($object->thirdparty->note_public) : '');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NOTE_PRIVATE__'] = (is_object($object->thirdparty) ? dol_htmlentitiesbr($object->thirdparty->note_private) : '');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'recruitmentcandidature') {\n\t\t\t\t$substitutionarray['__CANDIDATE_FULLNAME__'] = $object->getFullName($outputlangs);\n\t\t\t\t$substitutionarray['__CANDIDATE_FIRSTNAME__'] = $object->firstname;\n\t\t\t\t$substitutionarray['__CANDIDATE_LASTNAME__'] = $object->lastname;\n\t\t\t}\n\n\t\t\tif (is_object($object->project)) {\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = (is_object($object->project) ? $object->project->id : '');\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = (is_object($object->project) ? $object->project->ref : '');\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = (is_object($object->project) ? $object->project->title : '');\n\t\t\t}\n\t\t\tif (is_object($object->projet)) {\t// Deprecated, for backward compatibility\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = (is_object($object->projet) ? $object->projet->id : '');\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = (is_object($object->projet) ? $object->projet->ref : '');\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = (is_object($object->projet) ? $object->projet->title : '');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'shipping') {\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__'] = $object->tracking_number;\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__'] = $object->tracking_url;\n\t\t\t}\n\t\t\tif (is_object($object) && $object->element == 'reception') {\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUM__'] = $object->tracking_number;\n\t\t\t\t$substitutionarray['__RECEPTIONTRACKNUMURL__'] = $object->tracking_url;\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'contrat' && $object->id > 0 && is_array($object->lines)) {\n\t\t\t\t$dateplannedstart = '';\n\t\t\t\t$datenextexpiration = '';\n\t\t\t\tforeach ($object->lines as $line) {\n\t\t\t\t\tif ($line->date_ouverture_prevue > $dateplannedstart) {\n\t\t\t\t\t\t$dateplannedstart = $line->date_ouverture_prevue;\n\t\t\t\t\t}\n\t\t\t\t\tif ($line->statut == 4 && $line->date_fin_prevue && (!$datenextexpiration || $line->date_fin_prevue < $datenextexpiration)) {\n\t\t\t\t\t\t$datenextexpiration = $line->date_fin_prevue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = dol_print_date($dateplannedstart, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = dol_print_date($dateplannedstart, 'standard');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = dol_print_date($datenextexpiration, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = dol_print_date($datenextexpiration, 'standard');\n\t\t\t}\n\n\t\t\t// Create dynamic tags for __EXTRAFIELD_FIELD__\n\t\t\tif ($object->table_element && $object->id > 0) {\n\t\t\t\tif (!is_object($extrafields)) {\n\t\t\t\t\t$extrafields = new ExtraFields($db);\n\t\t\t\t}\n\t\t\t\t$extrafields->fetch_name_optionals_label($object->table_element, true);\n\n\t\t\t\tif ($object->fetch_optionals() > 0) {\n\t\t\t\t\tif (is_array($extrafields->attributes[$object->table_element]['label']) && count($extrafields->attributes[$object->table_element]['label']) > 0) {\n\t\t\t\t\t\tforeach ($extrafields->attributes[$object->table_element]['label'] as $key => $label) {\n\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'__'] = $object->array_options['options_'.$key];\n\t\t\t\t\t\t\tif ($extrafields->attributes[$object->table_element]['type'][$key] == 'date') {\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'__'] = dol_print_date($object->array_options['options_'.$key], 'day');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_LOCALE__'] = dol_print_date($object->array_options['options_'.$key], 'day', 'tzserver', $outputlangs);\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_RFC__'] = dol_print_date($object->array_options['options_'.$key], 'dayrfc');\n\t\t\t\t\t\t\t} elseif ($extrafields->attributes[$object->table_element]['type'][$key] == 'datetime') {\n\t\t\t\t\t\t\t\t$datetime = $object->array_options['options_'.$key];\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'dayhour') : '');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_LOCALE__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'dayhour', 'tzserver', $outputlangs) : '');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_DAY_LOCALE__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'day', 'tzserver', $outputlangs) : '');\n\t\t\t\t\t\t\t\t$substitutionarray['__EXTRAFIELD_'.strtoupper($key).'_RFC__'] = ($datetime != \"0000-00-00 00:00:00\" ? dol_print_date($datetime, 'dayhourrfc') : '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Complete substitution array with the url to make online payment\n\t\t\t$paymenturl = '';\n\t\t\tif (empty($substitutionarray['__REF__'])) {\n\t\t\t\t$paymenturl = '';\n\t\t\t} else {\n\t\t\t\t// Set the online payment url link into __ONLINE_PAYMENT_URL__ key\n\t\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/payments.lib.php';\n\t\t\t\t$outputlangs->loadLangs(array('paypal', 'other'));\n\t\t\t\t$typeforonlinepayment = 'free';\n\t\t\t\tif (is_object($object) && $object->element == 'commande') {\n\t\t\t\t\t$typeforonlinepayment = 'order';\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'facture') {\n\t\t\t\t\t$typeforonlinepayment = 'invoice';\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'member') {\n\t\t\t\t\t$typeforonlinepayment = 'member';\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'contrat') {\n\t\t\t\t\t$typeforonlinepayment = 'contract';\n\t\t\t\t}\n\t\t\t\t$url = getOnlinePaymentUrl(0, $typeforonlinepayment, $substitutionarray['__REF__']);\n\t\t\t\t$paymenturl = $url;\n\t\t\t}\n\n\t\t\tif ($object->id > 0) {\n\t\t\t\t$substitutionarray['__ONLINE_PAYMENT_TEXT_AND_URL__'] = ($paymenturl ?str_replace('\\n', \"\\n\", $outputlangs->trans(\"PredefinedMailContentLink\", $paymenturl)) : '');\n\t\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = $paymenturl;\n\n\t\t\t\tif (!empty($conf->global->PROPOSAL_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'propal') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_PROPOSAL__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_PROPOSAL__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->ORDER_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'commande') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_ORDER__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_ORDER__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->INVOICE_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'facture') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_INVOICE__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_INVOICE__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->CONTRACT_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'contrat') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_CONTRACT__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_CONTRACT__'] = '';\n\t\t\t\t}\n\t\t\t\tif (!empty($conf->global->SUPPLIER_PROPOSAL_ALLOW_EXTERNAL_DOWNLOAD) && is_object($object) && $object->element == 'supplier_proposal') {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_SUPPLIER_PROPOSAL__'] = $object->getLastMainDocLink($object->element);\n\t\t\t\t} else {\n\t\t\t\t\t$substitutionarray['__DIRECTDOWNLOAD_URL_SUPPLIER_PROPOSAL__'] = '';\n\t\t\t\t}\n\n\t\t\t\tif (is_object($object) && $object->element == 'propal') {\n\t\t\t\t\t$substitutionarray['__URL_PROPOSAL__'] = DOL_MAIN_URL_ROOT.\"/comm/propal/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'commande') {\n\t\t\t\t\t$substitutionarray['__URL_ORDER__'] = DOL_MAIN_URL_ROOT.\"/commande/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'facture') {\n\t\t\t\t\t$substitutionarray['__URL_INVOICE__'] = DOL_MAIN_URL_ROOT.\"/compta/facture/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'contrat') {\n\t\t\t\t\t$substitutionarray['__URL_CONTRACT__'] = DOL_MAIN_URL_ROOT.\"/contrat/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t\tif (is_object($object) && $object->element == 'supplier_proposal') {\n\t\t\t\t\t$substitutionarray['__URL_SUPPLIER_PROPOSAL__'] = DOL_MAIN_URL_ROOT.\"/supplier_proposal/card.php?id=\".$object->id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'action') {\n\t\t\t\t$substitutionarray['__EVENT_LABEL__'] = $object->label;\n\t\t\t\t$substitutionarray['__EVENT_DATE__'] = dol_print_date($object->datep, '%A %d %b %Y');\n\t\t\t\t$substitutionarray['__EVENT_TIME__'] = dol_print_date($object->datep, '%H:%M:%S');\n\t\t\t}\n\t\t}\n\t}\n\tif (empty($exclude) || !in_array('objectamount', $exclude)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/functionsnumtoword.lib.php';\n\n\t\t$substitutionarray['__DATE_YMD__']        = is_object($object) ? (isset($object->date) ? dol_print_date($object->date, 'day', 0, $outputlangs) : null) : '';\n\t\t$substitutionarray['__DATE_DUE_YMD__']    = is_object($object) ? (isset($object->date_lim_reglement) ? dol_print_date($object->date_lim_reglement, 'day', 0, $outputlangs) : null) : '';\n\n\t\t$substitutionarray['__AMOUNT__']          = is_object($object) ? $object->total_ttc : '';\n\t\t$substitutionarray['__AMOUNT_TEXT__']     = is_object($object) ? dol_convertToWord($object->total_ttc, $outputlangs, '', true) : '';\n\t\t$substitutionarray['__AMOUNT_TEXTCURRENCY__'] = is_object($object) ? dol_convertToWord($object->total_ttc, $outputlangs, $conf->currency, true) : '';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX__'] = is_object($object) ? $object->total_ht : '';\n\t\t$substitutionarray['__AMOUNT_VAT__']      = is_object($object) ? (isset($object->total_vat) ? $object->total_vat : $object->total_tva) : '';\n\t\t$substitutionarray['__AMOUNT_VAT_TEXT__']      = is_object($object) ? (isset($object->total_vat) ? dol_convertToWord($object->total_vat, $outputlangs, '', true) : dol_convertToWord($object->total_tva, $outputlangs, '', true)) : '';\n\t\t$substitutionarray['__AMOUNT_VAT_TEXTCURRENCY__']      = is_object($object) ? (isset($object->total_vat) ? dol_convertToWord($object->total_vat, $outputlangs, $conf->currency, true) : dol_convertToWord($object->total_tva, $outputlangs, $conf->currency, true)) : '';\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(1)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX2__']     = is_object($object) ? $object->total_localtax1 : '';\n\t\t}\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(2)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX3__']     = is_object($object) ? $object->total_localtax2 : '';\n\t\t}\n\n\t\t$substitutionarray['__AMOUNT_FORMATED__']          = is_object($object) ? ($object->total_ttc ? price($object->total_ttc, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX_FORMATED__'] = is_object($object) ? ($object->total_ht ? price($object->total_ht, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t$substitutionarray['__AMOUNT_VAT_FORMATED__']      = is_object($object) ? (isset($object->total_vat) ? price($object->total_vat, 0, $outputlangs, 0, -1, -1, $conf->currency) : ($object->total_tva ? price($object->total_tva, 0, $outputlangs, 0, -1, -1, $conf->currency) : null)) : '';\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(1)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX2_FORMATED__']     = is_object($object) ? ($object->total_localtax1 ? price($object->total_localtax1, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t}\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(2)) {\n\t\t\t$substitutionarray['__AMOUNT_TAX3_FORMATED__']     = is_object($object) ? ($object->total_localtax2 ? price($object->total_localtax2, 0, $outputlangs, 0, -1, -1, $conf->currency) : null) : '';\n\t\t}\n\n\t\t$substitutionarray['__AMOUNT_MULTICURRENCY__']          = (is_object($object) && isset($object->multicurrency_total_ttc)) ? $object->multicurrency_total_ttc : '';\n\t\t$substitutionarray['__AMOUNT_MULTICURRENCY_TEXT__']     = (is_object($object) && isset($object->multicurrency_total_ttc)) ? dol_convertToWord($object->multicurrency_total_ttc, $outputlangs, '', true) : '';\n\t\t$substitutionarray['__AMOUNT_MULTICURRENCY_TEXTCURRENCY__'] = (is_object($object) && isset($object->multicurrency_total_ttc)) ? dol_convertToWord($object->multicurrency_total_ttc, $outputlangs, $object->multicurrency_code, true) : '';\n\t\t// TODO Add other keys for foreign multicurrency\n\n\t\t// For backward compatibility\n\t\tif ($onlykey != 2) {\n\t\t\t$substitutionarray['__TOTAL_TTC__']    = is_object($object) ? $object->total_ttc : '';\n\t\t\t$substitutionarray['__TOTAL_HT__']     = is_object($object) ? $object->total_ht : '';\n\t\t\t$substitutionarray['__TOTAL_VAT__']    = is_object($object) ? (isset($object->total_vat) ? $object->total_vat : $object->total_tva) : '';\n\t\t}\n\t}\n\n\t//var_dump($substitutionarray['__AMOUNT_FORMATED__']);\n\tif (empty($exclude) || !in_array('date', $exclude)) {\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t$tmp = dol_getdate(dol_now(), true);\n\t\t$tmp2 = dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp3 = dol_get_prev_month($tmp['mon'], $tmp['year']);\n\t\t$tmp4 = dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp5 = dol_get_next_month($tmp['mon'], $tmp['year']);\n\n\t\t$daytext = $outputlangs->trans('Day'.$tmp['wday']);\n\n\t\t$substitutionarray = array_merge($substitutionarray, array(\n\t\t\t'__DAY__' => (string) $tmp['mday'],\n\t\t\t'__DAY_TEXT__' => $daytext, // Monday\n\t\t\t'__DAY_TEXT_SHORT__' => dol_trunc($daytext, 3, 'right', 'UTF-8', 1), // Mon\n\t\t\t'__DAY_TEXT_MIN__' => dol_trunc($daytext, 1, 'right', 'UTF-8', 1), // M\n\t\t\t'__MONTH__' => (string) $tmp['mon'],\n\t\t\t'__MONTH_TEXT__' => $outputlangs->trans('Month'.sprintf(\"%02d\", $tmp['mon'])),\n\t\t\t'__MONTH_TEXT_SHORT__' => $outputlangs->trans('MonthShort'.sprintf(\"%02d\", $tmp['mon'])),\n\t\t\t'__MONTH_TEXT_MIN__' => $outputlangs->trans('MonthVeryShort'.sprintf(\"%02d\", $tmp['mon'])),\n\t\t\t'__YEAR__' => (string) $tmp['year'],\n\t\t\t'__PREVIOUS_DAY__' => (string) $tmp2['day'],\n\t\t\t'__PREVIOUS_MONTH__' => (string) $tmp3['month'],\n\t\t\t'__PREVIOUS_YEAR__' => (string) ($tmp['year'] - 1),\n\t\t\t'__NEXT_DAY__' => (string) $tmp4['day'],\n\t\t\t'__NEXT_MONTH__' => (string) $tmp5['month'],\n\t\t\t'__NEXT_YEAR__' => (string) ($tmp['year'] + 1),\n\t\t));\n\t}\n\n\tif (!empty($conf->multicompany->enabled)) {\n\t\t$substitutionarray = array_merge($substitutionarray, array('__ENTITY_ID__' => $conf->entity));\n\t}\n\tif (empty($exclude) || !in_array('system', $exclude)) {\n\t\t$substitutionarray['__DOL_MAIN_URL_ROOT__'] = DOL_MAIN_URL_ROOT;\n\t\t$substitutionarray['__(AnyTranslationKey)__'] = $outputlangs->trans('TranslationOfKey');\n\t\t$substitutionarray['__(AnyTranslationKey|langfile)__'] = $outputlangs->trans('TranslationOfKey').' (load also language file before)';\n\t\t$substitutionarray['__[AnyConstantKey]__'] = $outputlangs->trans('ValueOfConstantKey');\n\t}\n\n\treturn $substitutionarray;\n}\n\n/**\n *  Make substitution into a text string, replacing keys with vals from $substitutionarray (oldval=>newval),\n *  and texts like __(TranslationKey|langfile)__ and __[ConstantKey]__ are also replaced.\n *  Example of usage:\n *  $substitutionarray = getCommonSubstitutionArray($langs, 0, null, $thirdparty);\n *  complete_substitutions_array($substitutionarray, $langs, $thirdparty);\n *  $mesg = make_substitutions($mesg, $substitutionarray, $langs);\n *\n *  @param\tstring\t\t$text\t      \t\t\t\t\tSource string in which we must do substitution\n *  @param  array\t\t$substitutionarray\t\t\t\tArray with key->val to substitute. Example: array('__MYKEY__' => 'MyVal', ...)\n *  @param\tTranslate\t$outputlangs\t\t\t\t\tOutput language\n *  @param\tint\t\t\t$converttextinhtmlifnecessary\t0=Convert only value into HTML if text is already in HTML\n *  \t\t\t\t\t\t\t\t\t\t\t\t\t1=Will also convert initial $text into HTML if we try to insert one value that is HTML\n * \t@return string  \t\t    \t\t\t\t\t\tOutput string after substitutions\n *  @see\tcomplete_substitutions_array(), getCommonSubstitutionArray()\n */\nfunction make_substitutions($text, $substitutionarray, $outputlangs = null, $converttextinhtmlifnecessary = 0)\n{\n\tglobal $conf, $langs;\n\n\tif (!is_array($substitutionarray)) {\n\t\treturn 'ErrorBadParameterSubstitutionArrayWhenCalling_make_substitutions';\n\t}\n\n\tif (empty($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\n\t// Is initial text HTML or simple text ?\n\t$msgishtml = 0;\n\tif (dol_textishtml($text, 1)) {\n\t\t$msgishtml = 1;\n\t}\n\n\t// Make substitution for language keys: __(AnyTranslationKey)__ or __(AnyTranslationKey|langfile)__\n\tif (is_object($outputlangs)) {\n\t\t$reg = array();\n\t\twhile (preg_match('/__\\(([^\\)]+)\\)__/', $text, $reg)) {\n\t\t\t// If key is __(TranslationKey|langfile)__, then force load of langfile.lang\n\t\t\t$tmp = explode('|', $reg[1]);\n\t\t\tif (!empty($tmp[1])) {\n\t\t\t\t$outputlangs->load($tmp[1]);\n\t\t\t}\n\n\t\t\t$value = $outputlangs->transnoentitiesnoconv($reg[1]);\n\n\t\t\tif (empty($converttextinhtmlifnecessary)) {\n\t\t\t\t// convert $newval into HTML is necessary\n\t\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $msgishtml ? dol_htmlentitiesbr($value) : $value, $text);\n\t\t\t} else {\n\t\t\t\tif (! $msgishtml) {\n\t\t\t\t\t$valueishtml = dol_textishtml($value, 1);\n\n\t\t\t\t\tif ($valueishtml) {\n\t\t\t\t\t\t$text = dol_htmlentitiesbr($text);\n\t\t\t\t\t\t$msgishtml = 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$value = dol_nl2br(\"$value\");\n\t\t\t\t}\n\n\t\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $value, $text);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Make substitution for constant keys.\n\t// Must be after the substitution of translation, so if the text of translation contains a string __[xxx]__, it is also converted.\n\t$reg = array();\n\twhile (preg_match('/__\\[([^\\]]+)\\]__/', $text, $reg)) {\n\t\t$keyfound = $reg[1];\n\t\tif (isASecretKey($keyfound)) {\n\t\t\t$value = '*****forbidden*****';\n\t\t} else {\n\t\t\t$value = empty($conf->global->$keyfound) ? '' : $conf->global->$keyfound;\n\t\t}\n\n\t\tif (empty($converttextinhtmlifnecessary)) {\n\t\t\t// convert $newval into HTML is necessary\n\t\t\t$text = preg_replace('/__\\['.preg_quote($keyfound, '/').'\\]__/', $msgishtml ? dol_htmlentitiesbr($value) : $value, $text);\n\t\t} else {\n\t\t\tif (! $msgishtml) {\n\t\t\t\t$valueishtml = dol_textishtml($value, 1);\n\n\t\t\t\tif ($valueishtml) {\n\t\t\t\t\t$text = dol_htmlentitiesbr($text);\n\t\t\t\t\t$msgishtml = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$value = dol_nl2br(\"$value\");\n\t\t\t}\n\n\t\t\t$text = preg_replace('/__\\['.preg_quote($keyfound, '/').'\\]__/', $value, $text);\n\t\t}\n\t}\n\n\t// Make substitition for array $substitutionarray\n\tforeach ($substitutionarray as $key => $value) {\n\t\tif (!isset($value)) {\n\t\t\tcontinue; // If value is null, it same than not having substitution key at all into array, we do not replace.\n\t\t}\n\n\t\tif ($key == '__USER_SIGNATURE__' && (!empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) {\n\t\t\t$value = ''; // Protection\n\t\t}\n\n\t\tif (empty($converttextinhtmlifnecessary)) {\n\t\t\t$text = str_replace(\"$key\", \"$value\", $text); // We must keep the \" to work when value is 123.5 for example\n\t\t} else {\n\t\t\tif (! $msgishtml) {\n\t\t\t\t$valueishtml = dol_textishtml($value, 1);\n\n\t\t\t\tif ($valueishtml) {\n\t\t\t\t\t$text = dol_htmlentitiesbr($text);\n\t\t\t\t\t$msgishtml = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$value = dol_nl2br(\"$value\");\n\t\t\t}\n\t\t\t$text = str_replace(\"$key\", \"$value\", $text); // We must keep the \" to work when value is 123.5 for example\n\t\t}\n\t}\n\n\treturn $text;\n}\n\n/**\n *  Complete the $substitutionarray with more entries coming from external module that had set the \"substitutions=1\" into module_part array.\n *  In this case, method completesubstitutionarray provided by module is called.\n *\n *  @param  array\t\t$substitutionarray\t\tArray substitution old value => new value value\n *  @param  Translate\t$outputlangs            Output language\n *  @param  Object\t\t$object                 Source object\n *  @param  mixed\t\t$parameters       \t\tAdd more parameters (useful to pass product lines)\n *  @param  string      $callfunc               What is the name of the custom function that will be called? (default: completesubstitutionarray)\n *  @return\tvoid\n *  @see \tmake_substitutions()\n */\nfunction complete_substitutions_array(&$substitutionarray, $outputlangs, $object = null, $parameters = null, $callfunc = \"completesubstitutionarray\")\n{\n\tglobal $conf, $user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t// Note: substitution key for each extrafields, using key __EXTRA_XXX__ is already available into the getCommonSubstitutionArray used to build the substitution array.\n\n\t// Check if there is external substitution to do, requested by plugins\n\t$dirsubstitutions = array_merge(array(), (array) $conf->modules_parts['substitutions']);\n\n\tforeach ($dirsubstitutions as $reldir) {\n\t\t$dir = dol_buildpath($reldir, 0);\n\n\t\t// Check if directory exists\n\t\tif (!dol_is_dir($dir)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$substitfiles = dol_dir_list($dir, 'files', 0, 'functions_');\n\t\tforeach ($substitfiles as $substitfile) {\n\t\t\t$reg = array();\n\t\t\tif (preg_match('/functions_(.*)\\.lib\\.php/i', $substitfile['name'], $reg)) {\n\t\t\t\t$module = $reg[1];\n\n\t\t\t\tdol_syslog(\"Library \".$substitfile['name'].\" found into \".$dir);\n\t\t\t\t// Include the user's functions file\n\t\t\t\trequire_once $dir.$substitfile['name'];\n\t\t\t\t// Call the user's function, and only if it is defined\n\t\t\t\t$function_name = $module.\"_\".$callfunc;\n\t\t\t\tif (function_exists($function_name)) {\n\t\t\t\t\t$function_name($substitutionarray, $outputlangs, $object, $parameters);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (!empty($conf->global->ODT_ENABLE_ALL_TAGS_IN_SUBSTITUTIONS)) {\n\t\t// to list all tags in odt template\n\t\t$tags = '';\n\t\tforeach ($substitutionarray as $key => $value) {\n\t\t\t$tags .= '{'.$key.'} => '.$value.\"\\n\";\n\t\t}\n\t\t$substitutionarray = array_merge($substitutionarray, array('__ALL_TAGS__' => $tags));\n\t}\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t$date_start    Start date\n *    @param    int\t$date_end      End date\n *    @param    string\t\t$format        Output format\n *    @param\tTranslate\t$outputlangs   Output language\n *    @return\tvoid\n */\nfunction print_date_range($date_start, $date_end, $format = '', $outputlangs = '')\n{\n\tprint get_date_range($date_start, $date_end, $format, $outputlangs);\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t\t\t$date_start    \t\tStart date\n *    @param    int\t\t\t$date_end      \t\tEnd date\n *    @param    string\t\t$format        \t\tOutput format\n *    @param\tTranslate\t$outputlangs   \t\tOutput language\n *    @param\tinteger\t\t$withparenthesis\t1=Add parenthesis, 0=non parenthesis\n *    @return\tstring\t\t\t\t\t\t\tString\n */\nfunction get_date_range($date_start, $date_end, $format = '', $outputlangs = '', $withparenthesis = 1)\n{\n\tglobal $langs;\n\n\t$out = '';\n\n\tif (!is_object($outputlangs)) {\n\t\t$outputlangs = $langs;\n\t}\n\n\tif ($date_start && $date_end) {\n\t\t$out .= ($withparenthesis ? ' (' : '').$outputlangs->transnoentitiesnoconv('DateFromTo', dol_print_date($date_start, $format, false, $outputlangs), dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis ? ')' : '');\n\t}\n\tif ($date_start && !$date_end) {\n\t\t$out .= ($withparenthesis ? ' (' : '').$outputlangs->transnoentitiesnoconv('DateFrom', dol_print_date($date_start, $format, false, $outputlangs)).($withparenthesis ? ')' : '');\n\t}\n\tif (!$date_start && $date_end) {\n\t\t$out .= ($withparenthesis ? ' (' : '').$outputlangs->transnoentitiesnoconv('DateUntil', dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis ? ')' : '');\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return firstname and lastname in correct order\n *\n * @param\tstring\t$firstname\t\tFirstname\n * @param\tstring\t$lastname\t\tLastname\n * @param\tint\t\t$nameorder\t\t-1=Auto, 0=Lastname+Firstname, 1=Firstname+Lastname, 2=Firstname, 3=Firstname if defined else lastname, 4=Lastname, 5=Lastname if defined else firstname\n * @return\tstring\t\t\t\t\tFirstname + lastname or Lastname + firstname\n */\nfunction dolGetFirstLastname($firstname, $lastname, $nameorder = -1)\n{\n\tglobal $conf;\n\n\t$ret = '';\n\t// If order not defined, we use the setup\n\tif ($nameorder < 0) {\n\t\t$nameorder = (empty($conf->global->MAIN_FIRSTNAME_NAME_POSITION) ? 1 : 0);\n\t}\n\tif ($nameorder == 1) {\n\t\t$ret .= $firstname;\n\t\tif ($firstname && $lastname) {\n\t\t\t$ret .= ' ';\n\t\t}\n\t\t$ret .= $lastname;\n\t} elseif ($nameorder == 2 || $nameorder == 3) {\n\t\t$ret .= $firstname;\n\t\tif (empty($ret) && $nameorder == 3) {\n\t\t\t$ret .= $lastname;\n\t\t}\n\t} else {\t// 0, 4 or 5\n\t\t$ret .= $lastname;\n\t\tif (empty($ret) && $nameorder == 5) {\n\t\t\t$ret .= $firstname;\n\t\t}\n\t\tif ($nameorder == 0) {\n\t\t\tif ($firstname && $lastname) {\n\t\t\t\t$ret .= ' ';\n\t\t\t}\n\t\t\t$ret .= $firstname;\n\t\t}\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tSet event message in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *  Note: Prefer to use setEventMessages instead.\n *\n *\t@param\tstring|string[] $mesgs\t\t\tMessage string or array\n *  @param  string          $style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events()\n */\nfunction setEventMessage($mesgs, $style = 'mesgs')\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\t\tThis is not deprecated, it is used by setEventMessages function\n\tif (!is_array($mesgs)) {\n\t\t// If mesgs is a string\n\t\tif ($mesgs) {\n\t\t\t$_SESSION['dol_events'][$style][] = $mesgs;\n\t\t}\n\t} else {\n\t\t// If mesgs is an array\n\t\tforeach ($mesgs as $mesg) {\n\t\t\tif ($mesg) {\n\t\t\t\t$_SESSION['dol_events'][$style][] = $mesg;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\tSet event messages in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *\n *\t@param\tstring\t$mesg\t\t\tMessage string\n *\t@param\tarray\t$mesgs\t\t\tMessage array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @param\tstring\t$messagekey\t\tA key to be used to allow the feature \"Never show this message again\"\n *  @return\tvoid\n *  @see\tdol_htmloutput_events()\n */\nfunction setEventMessages($mesg, $mesgs, $style = 'mesgs', $messagekey = '')\n{\n\tif (empty($mesg) && empty($mesgs)) {\n\t\tdol_syslog(\"Try to add a message in stack with empty message\", LOG_WARNING);\n\t} else {\n\t\tif ($messagekey) {\n\t\t\t// Complete message with a js link to set a cookie \"DOLHIDEMESSAGE\".$messagekey;\n\t\t\t// TODO\n\t\t\t$mesg .= '';\n\t\t}\n\t\tif (empty($messagekey) || empty($_COOKIE[\"DOLHIDEMESSAGE\".$messagekey])) {\n\t\t\tif (!in_array((string) $style, array('mesgs', 'warnings', 'errors'))) {\n\t\t\t\tdol_print_error('', 'Bad parameter style='.$style.' for setEventMessages');\n\t\t\t}\n\t\t\tif (empty($mesgs)) {\n\t\t\t\tsetEventMessage($mesg, $style);\n\t\t\t} else {\n\t\t\t\tif (!empty($mesg) && !in_array($mesg, $mesgs)) {\n\t\t\t\t\tsetEventMessage($mesg, $style); // Add message string if not already into array\n\t\t\t\t}\n\t\t\t\tsetEventMessage($mesgs, $style);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function, so there is\n *  no need to call it explicitely.\n *\n *  @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n *  @return\tvoid\n *  @see    \t\t\t\t\t\t\t\t\tdol_htmloutput_mesg()\n */\nfunction dol_htmloutput_events($disabledoutputofmessages = 0)\n{\n\t// Show mesgs\n\tif (isset($_SESSION['dol_events']['mesgs'])) {\n\t\tif (empty($disabledoutputofmessages)) {\n\t\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['mesgs']);\n\t\t}\n\t\tunset($_SESSION['dol_events']['mesgs']);\n\t}\n\n\t// Show errors\n\tif (isset($_SESSION['dol_events']['errors'])) {\n\t\tif (empty($disabledoutputofmessages)) {\n\t\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['errors'], 'error');\n\t\t}\n\t\tunset($_SESSION['dol_events']['errors']);\n\t}\n\n\t// Show warnings\n\tif (isset($_SESSION['dol_events']['warnings'])) {\n\t\tif (empty($disabledoutputofmessages)) {\n\t\t\tdol_htmloutput_mesg('', $_SESSION['dol_events']['warnings'], 'warning');\n\t\t}\n\t\tunset($_SESSION['dol_events']['warnings']);\n\t}\n}\n\n/**\n *\tGet formated messages to output (Used to show messages on html output).\n *  This include also the translation of the message key.\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string\t\t$style          Style of message output ('ok' or 'error')\n *  @param  int\t\t\t$keepembedded   Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tstring\t\t\t\t\t\tReturn html output\n *\n *  @see    dol_print_error()\n *  @see    dol_htmloutput_errors()\n *  @see    setEventMessages()\n */\nfunction get_htmloutput_mesg($mesgstring = '', $mesgarray = '', $style = 'ok', $keepembedded = 0)\n{\n\tglobal $conf, $langs;\n\n\t$ret = 0;\n\t$return = '';\n\t$out = '';\n\t$divstart = $divend = '';\n\n\t// If inline message with no format, we add it.\n\tif ((empty($conf->use_javascript_ajax) || !empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) || $keepembedded) && !preg_match('/<div class=\".*\">/i', $out)) {\n\t\t$divstart = '<div class=\"'.$style.' clearboth\">';\n\t\t$divend = '</div>';\n\t}\n\n\tif ((is_array($mesgarray) && count($mesgarray)) || $mesgstring) {\n\t\t$langs->load(\"errors\");\n\t\t$out .= $divstart;\n\t\tif (is_array($mesgarray) && count($mesgarray)) {\n\t\t\tforeach ($mesgarray as $message) {\n\t\t\t\t$ret++;\n\t\t\t\t$out .= $langs->trans($message);\n\t\t\t\tif ($ret < count($mesgarray)) {\n\t\t\t\t\t$out .= \"<br>\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($mesgstring) {\n\t\t\t$langs->load(\"errors\");\n\t\t\t$ret++;\n\t\t\t$out .= $langs->trans($mesgstring);\n\t\t}\n\t\t$out .= $divend;\n\t}\n\n\tif ($out) {\n\t\tif (!empty($conf->use_javascript_ajax) && empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && empty($keepembedded)) {\n\t\t\t$return = '<script>\n\t\t\t\t\t$(document).ready(function() {\n\t\t\t\t\t\tvar block = '.(!empty($conf->global->MAIN_USE_JQUERY_BLOCKUI) ? \"true\" : \"false\").'\n\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t$.dolEventValid(\"\",\"'.dol_escape_js($out).'\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* jnotify(message, preset of message type, keepmessage) */\n\t\t\t\t\t\t\t$.jnotify(\"'.dol_escape_js($out).'\",\n\t\t\t\t\t\t\t\"'.($style == \"ok\" ? 3000 : $style).'\",\n\t\t\t\t\t\t\t'.($style == \"ok\" ? \"false\" : \"true\").',\n\t\t\t\t\t\t\t{ remove: function (){} } );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t</script>';\n\t\t} else {\n\t\t\t$return = $out;\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n *  Get formated error messages to output (Used to show messages on html output).\n *\n *  @param  string\t$mesgstring         Error message\n *  @param  array\t$mesgarray          Error messages array\n *  @param  int\t\t$keepembedded       Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return string                \t\tReturn html output\n *\n *  @see    dol_print_error()\n *  @see    dol_htmloutput_mesg()\n */\nfunction get_htmloutput_errors($mesgstring = '', $mesgarray = array(), $keepembedded = 0)\n{\n\treturn get_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *\t@param  string      $style          Which style to use ('ok', 'warning', 'error')\n *\t@param  int         $keepembedded   Set to 1 if message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tvoid\n *\n *\t@see    dol_print_error()\n *\t@see    dol_htmloutput_errors()\n *\t@see    setEventMessages()\n */\nfunction dol_htmloutput_mesg($mesgstring = '', $mesgarray = array(), $style = 'ok', $keepembedded = 0)\n{\n\tif (empty($mesgstring) && (!is_array($mesgarray) || count($mesgarray) == 0)) {\n\t\treturn;\n\t}\n\n\t$iserror = 0;\n\t$iswarning = 0;\n\tif (is_array($mesgarray)) {\n\t\tforeach ($mesgarray as $val) {\n\t\t\tif ($val && preg_match('/class=\"error\"/i', $val)) {\n\t\t\t\t$iserror++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ($val && preg_match('/class=\"warning\"/i', $val)) {\n\t\t\t\t$iswarning++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} elseif ($mesgstring && preg_match('/class=\"error\"/i', $mesgstring)) {\n\t\t$iserror++;\n\t} elseif ($mesgstring && preg_match('/class=\"warning\"/i', $mesgstring)) {\n\t\t$iswarning++;\n\t}\n\tif ($style == 'error') {\n\t\t$iserror++;\n\t}\n\tif ($style == 'warning') {\n\t\t$iswarning++;\n\t}\n\n\tif ($iserror || $iswarning) {\n\t\t// Remove div from texts\n\t\t$mesgstring = preg_replace('/<\\/div><div class=\"(error|warning)\">/', '<br>', $mesgstring);\n\t\t$mesgstring = preg_replace('/<div class=\"(error|warning)\">/', '', $mesgstring);\n\t\t$mesgstring = preg_replace('/<\\/div>/', '', $mesgstring);\n\t\t// Remove div from texts array\n\t\tif (is_array($mesgarray)) {\n\t\t\t$newmesgarray = array();\n\t\t\tforeach ($mesgarray as $val) {\n\t\t\t\tif (is_string($val)) {\n\t\t\t\t\t$tmpmesgstring = preg_replace('/<\\/div><div class=\"(error|warning)\">/', '<br>', $val);\n\t\t\t\t\t$tmpmesgstring = preg_replace('/<div class=\"(error|warning)\">/', '', $tmpmesgstring);\n\t\t\t\t\t$tmpmesgstring = preg_replace('/<\\/div>/', '', $tmpmesgstring);\n\t\t\t\t\t$newmesgarray[] = $tmpmesgstring;\n\t\t\t\t} else {\n\t\t\t\t\tdol_syslog(\"Error call of dol_htmloutput_mesg with an array with a value that is not a string\", LOG_WARNING);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$mesgarray = $newmesgarray;\n\t\t}\n\t\tprint get_htmloutput_mesg($mesgstring, $mesgarray, ($iserror ? 'error' : 'warning'), $keepembedded);\n\t} else {\n\t\tprint get_htmloutput_mesg($mesgstring, $mesgarray, 'ok', $keepembedded);\n\t}\n}\n\n/**\n *  Print formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring          Error message\n *  @param  array\t$mesgarray           Error messages array\n *  @param  int\t\t$keepembedded        Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error()\n *  @see    dol_htmloutput_mesg()\n */\nfunction dol_htmloutput_errors($mesgstring = '', $mesgarray = array(), $keepembedded = 0)\n{\n\tdol_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n * \tAdvanced sort array by second index function, which produces ascending (default)\n *  or descending output and uses optionally natural case insensitive sorting (which\n *  can be optionally case sensitive as well).\n *\n *  @param      array\t\t$array      \t\tArray to sort (array of array('key1'=>val1,'key2'=>val2,'key3'...) or array of objects)\n *  @param      string\t\t$index\t\t\t\tKey in array to use for sorting criteria\n *  @param      int\t\t\t$order\t\t\t\tSort order ('asc' or 'desc')\n *  @param      int\t\t\t$natsort\t\t\t1=use \"natural\" sort (natsort) for a search criteria thats is strings or unknown, 0=use \"standard\" sort (asort) for numbers\n *  @param      int\t\t\t$case_sensitive\t\t1=sort is case sensitive, 0=not case sensitive\n *  @param\t\tint\t\t\t$keepindex\t\t\tIf 0 and index key of array to sort is a numeric, than index will be rewrote. If 1 or index key is not numeric, key for index is kept after sorting.\n *  @return     array\t\t\t\t\t\t\tSorted array\n */\nfunction dol_sort_array(&$array, $index, $order = 'asc', $natsort = 0, $case_sensitive = 0, $keepindex = 0)\n{\n\t// Clean parameters\n\t$order = strtolower($order);\n\n\tif (is_array($array)) {\n\t\t$sizearray = count($array);\n\t\tif ($sizearray > 0) {\n\t\t\t$temp = array();\n\t\t\tforeach (array_keys($array) as $key) {\n\t\t\t\tif (is_object($array[$key])) {\n\t\t\t\t\t$temp[$key] = empty($array[$key]->$index) ? 0 : $array[$key]->$index;\n\t\t\t\t} else {\n\t\t\t\t\t$temp[$key] = empty($array[$key][$index]) ? 0 : $array[$key][$index];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$natsort) {\n\t\t\t\tif ($order == 'asc') {\n\t\t\t\t\tasort($temp);\n\t\t\t\t} else {\n\t\t\t\t\tarsort($temp);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($case_sensitive) {\n\t\t\t\t\tnatsort($temp);\n\t\t\t\t} else {\n\t\t\t\t\tnatcasesort($temp);\t// natecasesort is not sensible to case\n\t\t\t\t}\n\t\t\t\tif ($order != 'asc') {\n\t\t\t\t\t$temp = array_reverse($temp, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sorted = array();\n\n\t\t\tforeach (array_keys($temp) as $key) {\n\t\t\t\t(is_numeric($key) && empty($keepindex)) ? $sorted[] = $array[$key] : $sorted[$key] = $array[$key];\n\t\t\t}\n\n\t\t\treturn $sorted;\n\t\t}\n\t}\n\treturn $array;\n}\n\n\n/**\n *      Check if a string is in UTF8\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is UTF8 or ISO compatible with UTF8, False if not (ISO with special char or Binary)\n */\nfunction utf8_check($str)\n{\n\t$str = (string) $str;\t// Sometimes string is an int.\n\n\t// We must use here a binary strlen function (so not dol_strlen)\n\t$strLength = dol_strlen($str);\n\tfor ($i = 0; $i < $strLength; $i++) {\n\t\tif (ord($str[$i]) < 0x80) {\n\t\t\tcontinue; // 0bbbbbbb\n\t\t} elseif ((ord($str[$i]) & 0xE0) == 0xC0) {\n\t\t\t$n = 1; // 110bbbbb\n\t\t} elseif ((ord($str[$i]) & 0xF0) == 0xE0) {\n\t\t\t$n = 2; // 1110bbbb\n\t\t} elseif ((ord($str[$i]) & 0xF8) == 0xF0) {\n\t\t\t$n = 3; // 11110bbb\n\t\t} elseif ((ord($str[$i]) & 0xFC) == 0xF8) {\n\t\t\t$n = 4; // 111110bb\n\t\t} elseif ((ord($str[$i]) & 0xFE) == 0xFC) {\n\t\t\t$n = 5; // 1111110b\n\t\t} else {\n\t\t\treturn false; // Does not match any model\n\t\t}\n\t\tfor ($j = 0; $j < $n; $j++) { // n bytes matching 10bbbbbb follow ?\n\t\t\tif ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n *      Check if a string is in ASCII\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is ASCII, False if not (byte value > 0x7F)\n */\nfunction ascii_check($str)\n{\n\tif (function_exists('mb_check_encoding')) {\n\t\t//if (mb_detect_encoding($str, 'ASCII', true) return false;\n\t\tif (!mb_check_encoding($str, 'ASCII')) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tif (preg_match('/[^\\x00-\\x7f]/', $str)) {\n\t\t\treturn false; // Contains a byte > 7f\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n/**\n *      Return a string encoded into OS filesystem encoding. This function is used to define\n * \t    value to pass to filesystem PHP functions.\n *\n *      @param\tstring\t$str        String to encode (UTF-8)\n * \t\t@return\tstring\t\t\t\tEncoded string (UTF-8, ISO-8859-1)\n */\nfunction dol_osencode($str)\n{\n\tglobal $conf;\n\n\t$tmp = ini_get(\"unicode.filesystem_encoding\"); // Disponible avec PHP 6.0\n\tif (empty($tmp) && !empty($_SERVER[\"WINDIR\"])) {\n\t\t$tmp = 'iso-8859-1'; // By default for windows\n\t}\n\tif (empty($tmp)) {\n\t\t$tmp = 'utf-8'; // By default for other\n\t}\n\tif (!empty($conf->global->MAIN_FILESYSTEM_ENCODING)) {\n\t\t$tmp = $conf->global->MAIN_FILESYSTEM_ENCODING;\n\t}\n\n\tif ($tmp == 'iso-8859-1') {\n\t\treturn utf8_decode($str);\n\t}\n\treturn $str;\n}\n\n\n/**\n *      Return an id or code from a code or id.\n *      Store also Code-Id into a cache to speed up next request on same key.\n *\n * \t\t@param\tDoliDB\t$db\t\t\t\tDatabase handler\n * \t\t@param\tstring\t$key\t\t\tCode or Id to get Id or Code\n * \t\t@param\tstring\t$tablename\t\tTable name without prefix\n * \t\t@param\tstring\t$fieldkey\t\tField to search the key into\n * \t\t@param\tstring\t$fieldid\t\tField to get\n *      @param  int\t\t$entityfilter\tFilter by entity\n *      @return int\t\t\t\t\t\t<0 if KO, Id of code if OK\n *      @see $langs->getLabelFromKey\n */\nfunction dol_getIdFromCode($db, $key, $tablename, $fieldkey = 'code', $fieldid = 'id', $entityfilter = 0)\n{\n\tglobal $cache_codes;\n\n\t// If key empty\n\tif ($key == '') {\n\t\treturn '';\n\t}\n\n\t// Check in cache\n\tif (isset($cache_codes[$tablename][$key][$fieldid])) {\t// Can be defined to 0 or ''\n\t\treturn $cache_codes[$tablename][$key][$fieldid]; // Found in cache\n\t}\n\n\tdol_syslog('dol_getIdFromCode (value for field '.$fieldid.' from key '.$key.' not found into cache)', LOG_DEBUG);\n\n\t$sql = \"SELECT \".$fieldid.\" as valuetoget\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.$tablename;\n\t$sql .= \" WHERE \".$fieldkey.\" = '\".$db->escape($key).\"'\";\n\tif (!empty($entityfilter)) {\n\t\t$sql .= \" AND entity IN (\".getEntity($tablename).\")\";\n\t}\n\n\t$resql = $db->query($sql);\n\tif ($resql) {\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) {\n\t\t\t$cache_codes[$tablename][$key][$fieldid] = $obj->valuetoget;\n\t\t} else {\n\t\t\t$cache_codes[$tablename][$key][$fieldid] = '';\n\t\t}\n\t\t$db->free($resql);\n\t\treturn $cache_codes[$tablename][$key][$fieldid];\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/**\n * Verify if condition in string is ok or not\n *\n * @param \tstring\t\t$strRights\t\tString with condition to check\n * @return \tboolean\t\t\t\t\t\tTrue or False. Return True if strRights is ''\n */\nfunction verifCond($strRights)\n{\n\tglobal $user, $conf, $langs;\n\tglobal $leftmenu;\n\tglobal $rights; // To export to dol_eval function\n\n\t//print $strRights.\"<br>\\n\";\n\t$rights = true;\n\tif ($strRights != '') {\n\t\t$str = 'if(!('.$strRights.')) { $rights = false; }';\n\t\tdol_eval($str); // The dol_eval must contains all the global $xxx used into a condition\n\t}\n\treturn $rights;\n}\n\n/**\n * Replace eval function to add more security.\n * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n *\n * @param \tstring\t$s\t\t\t\tString to evaluate\n * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n * @param   int     $hideerrors     1=Hide errors\n * @return\tmixed\t\t\t\t\tNothing or return result of eval\n */\nfunction dol_eval($s, $returnvalue = 0, $hideerrors = 1)\n{\n\t// Only global variables can be changed by eval function and returned to caller\n\tglobal $db, $langs, $user, $conf, $website, $websitepage;\n\tglobal $action, $mainmenu, $leftmenu;\n\tglobal $rights;\n\tglobal $object;\n\tglobal $mysoc;\n\n\tglobal $obj; // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n\tglobal $soc; // For backward compatibility\n\n\t// Replace dangerous char (used for RCE), we allow only PHP variable testing.\n\tif (strpos($s, '`') !== false) {\n\t\treturn 'Bad string syntax to evaluate: '.$s;\n\t}\n\n\t// We block using of php exec or php file functions\n\t$forbiddenphpstrings = array(\"exec(\", \"passthru(\", \"shell_exec(\", \"system(\", \"proc_open(\", \"popen(\", \"eval(\", \"dol_eval(\", \"executeCLI(\");\n\t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array(\"fopen(\", \"file_put_contents(\", \"fputs(\", \"fputscsv(\", \"fwrite(\", \"fpassthru(\", \"unlink(\", \"mkdir(\", \"rmdir(\", \"symlink(\", \"touch(\", \"umask(\"));\n\t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array('function(', '$$', 'call_user_func('));\n\t$forbiddenphpstrings = array_merge($forbiddenphpstrings, array('_ENV', '_SESSION', '_COOKIE', '_GET', '_POST', '_REQUEST'));\n\t$forbiddenphpregex = 'global\\s+\\$';\n\tdo {\n\t\t$oldstringtoclean = $s;\n\t\t$s = str_ireplace($forbiddenphpstrings, '__forbiddenstring__', $s);\n\t\t$s = preg_replace('/'.$forbiddenphpregex.'/', '__forbiddenstring__', $s);\n\t\t//$s = preg_replace('/\\$[a-zA-Z0-9_\\->\\$]+\\(/i', '', $s);\t// Remove $function( call and $mycall->mymethod(\n\t} while ($oldstringtoclean != $s);\n\n\tif (strpos($s, '__forbiddenstring__') !== false) {\n\t\tdol_syslog('Bad string syntax to evaluate: '.$s, LOG_WARNING);\n\t\treturn 'Bad string syntax to evaluate: '.$s;\n\t}\n\n\t//print $s.\"<br>\\n\";\n\tif ($returnvalue) {\n\t\tif ($hideerrors) {\n\t\t\treturn @eval('return '.$s.';');\n\t\t} else {\n\t\t\treturn eval('return '.$s.';');\n\t\t}\n\t} else {\n\t\tif ($hideerrors) {\n\t\t\t@eval($s);\n\t\t} else {\n\t\t\teval($s);\n\t\t}\n\t}\n}\n\n/**\n * Return if var element is ok\n *\n * @param   string      $element    Variable to check\n * @return  boolean                 Return true of variable is not empty\n */\nfunction dol_validElement($element)\n{\n\treturn (trim($element) != '');\n}\n\n/**\n * \tReturn img flag of country for a language code or country code.\n *\n * \t@param\tstring\t$codelang\tLanguage code ('en_IN', 'fr_CA', ...) or ISO Country code on 2 characters in uppercase ('IN', 'FR')\n *  @param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"' or 'class=\"saturatemedium\"')\n * \t@return\tstring\t\t\t\tHTML img string with flag.\n */\nfunction picto_from_langcode($codelang, $moreatt = '')\n{\n\tif (empty($codelang)) {\n\t\treturn '';\n\t}\n\n\tif ($codelang == 'auto') {\n\t\treturn '<span class=\"fa fa-globe\"></span>';\n\t}\n\n\t$langtocountryflag = array(\n\t\t'ar_AR' => '',\n\t\t'ca_ES' => 'catalonia',\n\t\t'da_DA' => 'dk',\n\t\t'fr_CA' => 'mq',\n\t\t'sv_SV' => 'se',\n\t\t'sw_SW' => 'unknown',\n\t\t'AQ' => 'unknown',\n\t\t'CW' => 'unknown',\n\t\t'IM' => 'unknown',\n\t\t'JE' => 'unknown',\n\t\t'MF' => 'unknown',\n\t\t'BL' => 'unknown',\n\t\t'SX' => 'unknown'\n\t);\n\n\tif (isset($langtocountryflag[$codelang])) {\n\t\t$flagImage = $langtocountryflag[$codelang];\n\t} else {\n\t\t$tmparray = explode('_', $codelang);\n\t\t$flagImage = empty($tmparray[1]) ? $tmparray[0] : $tmparray[1];\n\t}\n\n\treturn img_picto_common($codelang, 'flags/'.strtolower($flagImage).'.png', $moreatt);\n}\n\n/**\n * Return default language from country code.\n * Return null if not found.\n *\n * @param \tstring \t$countrycode\tCountry code like 'US', 'FR', 'CA', 'ES', 'MX', ...\n * @return\tstring\t\t\t\t\tValue of locale like 'en_US', 'fr_FR', ...\n */\nfunction getLanguageCodeFromCountryCode($countrycode)\n{\n\tglobal $mysoc;\n\n\tif (empty($countrycode)) {\n\t\treturn null;\n\t}\n\n\tif (strtoupper($countrycode) == 'MQ') {\n\t\treturn 'fr_CA';\n\t}\n\tif (strtoupper($countrycode) == 'SE') {\n\t\treturn 'sv_SE'; // se_SE is Sami/Sweden, and we want in priority sv_SE for SE country\n\t}\n\tif (strtoupper($countrycode) == 'CH') {\n\t\tif ($mysoc->country_code == 'FR') {\n\t\t\treturn 'fr_CH';\n\t\t}\n\t\tif ($mysoc->country_code == 'DE') {\n\t\t\treturn 'de_CH';\n\t\t}\n\t\tif ($mysoc->country_code == 'IT') {\n\t\t\treturn 'it_CH';\n\t\t}\n\t}\n\n\t// Locale list taken from:\n\t// http://stackoverflow.com/questions/3191664/\n\t// list-of-all-locales-and-their-short-codes\n\t$locales = array(\n\t\t'af-ZA',\n\t\t'am-ET',\n\t\t'ar-AE',\n\t\t'ar-BH',\n\t\t'ar-DZ',\n\t\t'ar-EG',\n\t\t'ar-IQ',\n\t\t'ar-JO',\n\t\t'ar-KW',\n\t\t'ar-LB',\n\t\t'ar-LY',\n\t\t'ar-MA',\n\t\t'ar-OM',\n\t\t'ar-QA',\n\t\t'ar-SA',\n\t\t'ar-SY',\n\t\t'ar-TN',\n\t\t'ar-YE',\n\t\t'as-IN',\n\t\t'ba-RU',\n\t\t'be-BY',\n\t\t'bg-BG',\n\t\t'bn-BD',\n\t\t'bn-IN',\n\t\t'bo-CN',\n\t\t'br-FR',\n\t\t'ca-ES',\n\t\t'co-FR',\n\t\t'cs-CZ',\n\t\t'cy-GB',\n\t\t'da-DK',\n\t\t'de-AT',\n\t\t'de-CH',\n\t\t'de-DE',\n\t\t'de-LI',\n\t\t'de-LU',\n\t\t'dv-MV',\n\t\t'el-GR',\n\t\t'en-AU',\n\t\t'en-BZ',\n\t\t'en-CA',\n\t\t'en-GB',\n\t\t'en-IE',\n\t\t'en-IN',\n\t\t'en-JM',\n\t\t'en-MY',\n\t\t'en-NZ',\n\t\t'en-PH',\n\t\t'en-SG',\n\t\t'en-TT',\n\t\t'en-US',\n\t\t'en-ZA',\n\t\t'en-ZW',\n\t\t'es-AR',\n\t\t'es-BO',\n\t\t'es-CL',\n\t\t'es-CO',\n\t\t'es-CR',\n\t\t'es-DO',\n\t\t'es-EC',\n\t\t'es-ES',\n\t\t'es-GT',\n\t\t'es-HN',\n\t\t'es-MX',\n\t\t'es-NI',\n\t\t'es-PA',\n\t\t'es-PE',\n\t\t'es-PR',\n\t\t'es-PY',\n\t\t'es-SV',\n\t\t'es-US',\n\t\t'es-UY',\n\t\t'es-VE',\n\t\t'et-EE',\n\t\t'eu-ES',\n\t\t'fa-IR',\n\t\t'fi-FI',\n\t\t'fo-FO',\n\t\t'fr-BE',\n\t\t'fr-CA',\n\t\t'fr-CH',\n\t\t'fr-FR',\n\t\t'fr-LU',\n\t\t'fr-MC',\n\t\t'fy-NL',\n\t\t'ga-IE',\n\t\t'gd-GB',\n\t\t'gl-ES',\n\t\t'gu-IN',\n\t\t'he-IL',\n\t\t'hi-IN',\n\t\t'hr-BA',\n\t\t'hr-HR',\n\t\t'hu-HU',\n\t\t'hy-AM',\n\t\t'id-ID',\n\t\t'ig-NG',\n\t\t'ii-CN',\n\t\t'is-IS',\n\t\t'it-CH',\n\t\t'it-IT',\n\t\t'ja-JP',\n\t\t'ka-GE',\n\t\t'kk-KZ',\n\t\t'kl-GL',\n\t\t'km-KH',\n\t\t'kn-IN',\n\t\t'ko-KR',\n\t\t'ky-KG',\n\t\t'lb-LU',\n\t\t'lo-LA',\n\t\t'lt-LT',\n\t\t'lv-LV',\n\t\t'mi-NZ',\n\t\t'mk-MK',\n\t\t'ml-IN',\n\t\t'mn-MN',\n\t\t'mr-IN',\n\t\t'ms-BN',\n\t\t'ms-MY',\n\t\t'mt-MT',\n\t\t'nb-NO',\n\t\t'ne-NP',\n\t\t'nl-BE',\n\t\t'nl-NL',\n\t\t'nn-NO',\n\t\t'oc-FR',\n\t\t'or-IN',\n\t\t'pa-IN',\n\t\t'pl-PL',\n\t\t'ps-AF',\n\t\t'pt-BR',\n\t\t'pt-PT',\n\t\t'rm-CH',\n\t\t'ro-MD',\n\t\t'ro-RO',\n\t\t'ru-RU',\n\t\t'rw-RW',\n\t\t'sa-IN',\n\t\t'se-FI',\n\t\t'se-NO',\n\t\t'se-SE',\n\t\t'si-LK',\n\t\t'sk-SK',\n\t\t'sl-SI',\n\t\t'sq-AL',\n\t\t'sv-FI',\n\t\t'sv-SE',\n\t\t'sw-KE',\n\t\t'ta-IN',\n\t\t'te-IN',\n\t\t'th-TH',\n\t\t'tk-TM',\n\t\t'tn-ZA',\n\t\t'tr-TR',\n\t\t'tt-RU',\n\t\t'ug-CN',\n\t\t'uk-UA',\n\t\t'ur-PK',\n\t\t'vi-VN',\n\t\t'wo-SN',\n\t\t'xh-ZA',\n\t\t'yo-NG',\n\t\t'zh-CN',\n\t\t'zh-HK',\n\t\t'zh-MO',\n\t\t'zh-SG',\n\t\t'zh-TW',\n\t\t'zu-ZA',\n\t);\n\n\t$buildprimarykeytotest = strtolower($countrycode).'-'.strtoupper($countrycode);\n\tif (in_array($buildprimarykeytotest, $locales)) {\n\t\treturn strtolower($countrycode).'_'.strtoupper($countrycode);\n\t}\n\n\tif (function_exists('locale_get_primary_language') && function_exists('locale_get_region')) {    // Need extension php-intl\n\t\tforeach ($locales as $locale) {\n\t\t\t$locale_language = locale_get_primary_language($locale);\n\t\t\t$locale_region = locale_get_region($locale);\n\t\t\tif (strtoupper($countrycode) == $locale_region) {\n\t\t\t\t//var_dump($locale.'-'.$locale_language.'-'.$locale_region);\n\t\t\t\treturn strtolower($locale_language).'_'.strtoupper($locale_region);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tdol_syslog(\"Warning Exention php-intl is not available\", LOG_WARNING);\n\t}\n\n\treturn null;\n}\n\n/**\n *  Complete or removed entries into a head array (used to build tabs).\n *  For example, with value added by external modules. Such values are declared into $conf->modules_parts['tab'].\n *  Or by change using hook completeTabsHead\n *\n *  @param\tConf\t\t\t$conf           Object conf\n *  @param  Translate\t\t$langs          Object langs\n *  @param  object|null\t\t$object         Object object\n *  @param  array\t\t\t$head          \tObject head\n *  @param  int\t\t\t\t$h\t\t\t\tNew position to fill\n *  @param  string\t\t\t$type           Value for object where objectvalue can be\n *                              \t\t\t'thirdparty'       to add a tab in third party view\n *\t\t                        \t      \t'intervention'     to add a tab in intervention view\n *     \t\t                    \t     \t'supplier_order'   to add a tab in supplier order view\n *          \t\t            \t        'supplier_invoice' to add a tab in supplier invoice view\n *                  \t\t    \t        'invoice'          to add a tab in customer invoice view\n *                          \t\t\t    'order'            to add a tab in customer order view\n *                          \t\t\t\t'contract'\t\t   to add a tabl in contract view\n *                      \t\t\t        'product'          to add a tab in product view\n *                              \t\t\t'propal'           to add a tab in propal view\n *                              \t\t\t'user'             to add a tab in user view\n *                              \t\t\t'group'            to add a tab in group view\n * \t\t        \t               \t     \t'member'           to add a tab in fundation member view\n *      \t\t                        \t'categories_x'\t   to add a tab in category view ('x': type of category (0=product, 1=supplier, 2=customer, 3=member)\n *      \t\t\t\t\t\t\t\t\t'ecm'\t\t\t   to add a tab for another ecm view\n *                                          'stock'            to add a tab for warehouse view\n *  @param  string\t\t$mode  \t        \t'add' to complete head, 'remove' to remove entries\n *\t@return\tvoid\n */\nfunction complete_head_from_modules($conf, $langs, $object, &$head, &$h, $type, $mode = 'add')\n{\n\tglobal $hookmanager;\n\n\tif (isset($conf->modules_parts['tabs'][$type]) && is_array($conf->modules_parts['tabs'][$type])) {\n\t\tforeach ($conf->modules_parts['tabs'][$type] as $value) {\n\t\t\t$values = explode(':', $value);\n\n\t\t\tif ($mode == 'add' && !preg_match('/^\\-/', $values[1])) {\n\t\t\t\tif (count($values) == 6) {       // new declaration with permissions:  $value='objecttype:+tabname1:Title1:langfile@mymodule:$user->rights->mymodule->read:/mymodule/mynewtab1.php?id=__ID__'\n\t\t\t\t\tif ($values[0] != $type) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (verifCond($values[4])) {\n\t\t\t\t\t\tif ($values[3]) {\n\t\t\t\t\t\t\t$langs->load($values[3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i', $values[2], $reg)) {\n\t\t\t\t\t\t\t$substitutionarray = array();\n\t\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray, $langs, $object, array('needforkey'=>$values[2]));\n\t\t\t\t\t\t\t$label = make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$label = $langs->trans($values[2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && !empty($object->id)) ? $object->id : ''), $values[5]), 1);\n\t\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t\t$head[$h][2] = str_replace('+', '', $values[1]);\n\t\t\t\t\t\t$h++;\n\t\t\t\t\t}\n\t\t\t\t} elseif (count($values) == 5) {       // deprecated\n\t\t\t\t\tdol_syslog('Passing 5 values in tabs module_parts is deprecated. Please update to 6 with permissions.', LOG_WARNING);\n\n\t\t\t\t\tif ($values[0] != $type) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif ($values[3]) {\n\t\t\t\t\t\t$langs->load($values[3]);\n\t\t\t\t\t}\n\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i', $values[2], $reg)) {\n\t\t\t\t\t\t$substitutionarray = array();\n\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray, $langs, $object, array('needforkey'=>$values[2]));\n\t\t\t\t\t\t$label = make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$label = $langs->trans($values[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && !empty($object->id)) ? $object->id : ''), $values[4]), 1);\n\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t$head[$h][2] = str_replace('+', '', $values[1]);\n\t\t\t\t\t$h++;\n\t\t\t\t}\n\t\t\t} elseif ($mode == 'remove' && preg_match('/^\\-/', $values[1])) {\n\t\t\t\tif ($values[0] != $type) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$tabname = str_replace('-', '', $values[1]);\n\t\t\t\tforeach ($head as $key => $val) {\n\t\t\t\t\t$condition = (!empty($values[3]) ? verifCond($values[3]) : 1);\n\t\t\t\t\t//var_dump($key.' - '.$tabname.' - '.$head[$key][2].' - '.$values[3].' - '.$condition);\n\t\t\t\t\tif ($head[$key][2] == $tabname && $condition) {\n\t\t\t\t\t\tunset($head[$key]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// No need to make a return $head. Var is modified as a reference\n\tif (!empty($hookmanager)) {\n\t\t$parameters = array('object' => $object, 'mode' => $mode, 'head' => &$head);\n\t\t$reshook = $hookmanager->executeHooks('completeTabsHead', $parameters);\n\t\tif ($reshook > 0) {\n\t\t\t$head = $hookmanager->resArray;\n\t\t}\n\t\t$h = count($head);\n\t}\n}\n\n/**\n * Print common footer :\n * \t\tconf->global->MAIN_HTML_FOOTER\n *      js for switch of menu hider\n * \t\tjs for conf->global->MAIN_GOOGLE_AN_ID\n * \t\tjs for conf->global->MAIN_SHOW_TUNING_INFO or $_SERVER[\"MAIN_SHOW_TUNING_INFO\"]\n * \t\tjs for conf->logbuffer\n *\n * @param\tstring\t$zone\t'private' (for private pages) or 'public' (for public pages)\n * @return\tvoid\n */\nfunction printCommonFooter($zone = 'private')\n{\n\tglobal $conf, $hookmanager, $user, $debugbar;\n\tglobal $action;\n\tglobal $micro_start_time;\n\n\tif ($zone == 'private') {\n\t\tprint \"\\n\".'<!-- Common footer for private page -->'.\"\\n\";\n\t} else {\n\t\tprint \"\\n\".'<!-- Common footer for public page -->'.\"\\n\";\n\t}\n\n\t// A div to store page_y POST parameter so we can read it using javascript\n\tprint \"\\n<!-- A div to store page_y POST parameter -->\\n\";\n\tprint '<div id=\"page_y\" style=\"display: none;\">'.(empty($_POST['page_y']) ? '' : $_POST['page_y']).'</div>'.\"\\n\";\n\n\t$parameters = array();\n\t$reshook = $hookmanager->executeHooks('printCommonFooter', $parameters); // Note that $action and $object may have been modified by some hooks\n\tif (empty($reshook)) {\n\t\tif (!empty($conf->global->MAIN_HTML_FOOTER)) {\n\t\t\tprint $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\t\t}\n\n\t\tprint \"\\n\";\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint '<script>'.\"\\n\";\n\t\t\tprint 'jQuery(document).ready(function() {'.\"\\n\";\n\n\t\t\tif ($zone == 'private' && empty($conf->dol_use_jmobile)) {\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '/* JS CODE TO ENABLE to manage handler to switch left menu page (menuhider) */'.\"\\n\";\n\t\t\t\tprint 'jQuery(\"li.menuhider\").click(function(event) {';\n\t\t\t\tprint '  if (!$( \"body\" ).hasClass( \"sidebar-collapse\" )){ event.preventDefault(); }'.\"\\n\";\n\t\t\t\tprint '  console.log(\"We click on .menuhider\");'.\"\\n\";\n\t\t\t\tprint '  $(\"body\").toggleClass(\"sidebar-collapse\")'.\"\\n\";\n\t\t\t\tprint '});'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Management of focus and mandatory for fields\n\t\t\tif ($action == 'create' || $action == 'edit' || (empty($action) && (preg_match('/new\\.php/', $_SERVER[\"PHP_SELF\"])))) {\n\t\t\t\tprint '/* JS CODE TO ENABLE to manage focus and mandatory form fields */'.\"\\n\";\n\t\t\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t\t\t// Clean $relativepathstring\n\t\t\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t\t\t}\n\t\t\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t\t\t//$tmpqueryarraywehave = explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\tif (!empty($user->default_values[$relativepathstring]['focus'])) {\n\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['focus'] as $defkey => $defval) {\n\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t$tmpquerytohaveparam = explode('=', $tmpquerytohave);\n\t\t\t\t\t\t\t\t//print \"console.log('\".$tmpquerytohaveparam[0].\" \".$tmpquerytohaveparam[1].\" \".GETPOST($tmpquerytohaveparam[0]).\"');\";\n\t\t\t\t\t\t\t\tif (!GETPOSTISSET($tmpquerytohaveparam[0]) || ($tmpquerytohaveparam[1] != GETPOST($tmpquerytohaveparam[0]))) {\n\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\tforeach ($defval as $paramkey => $paramval) {\n\t\t\t\t\t\t\t\t// Set focus on field\n\t\t\t\t\t\t\t\tprint 'jQuery(\"input[name=\\''.$paramkey.'\\']\").focus();'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"textarea[name=\\''.$paramkey.'\\']\").focus();'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\']\").focus();'.\"\\n\"; // Not really usefull, but we keep it in case of.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!empty($user->default_values[$relativepathstring]['mandatory'])) {\n\t\t\t\t\tforeach ($user->default_values[$relativepathstring]['mandatory'] as $defkey => $defval) {\n\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\tif ($defkey != '_noquery_') {\n\t\t\t\t\t\t\t$tmpqueryarraytohave = explode('&', $defkey);\n\t\t\t\t\t\t\t$foundintru = 0;\n\t\t\t\t\t\t\tforeach ($tmpqueryarraytohave as $tmpquerytohave) {\n\t\t\t\t\t\t\t\t$tmpquerytohaveparam = explode('=', $tmpquerytohave);\n\t\t\t\t\t\t\t\t//print \"console.log('\".$tmpquerytohaveparam[0].\" \".$tmpquerytohaveparam[1].\" \".GETPOST($tmpquerytohaveparam[0]).\"');\";\n\t\t\t\t\t\t\t\tif (!GETPOSTISSET($tmpquerytohaveparam[0]) || ($tmpquerytohaveparam[1] != GETPOST($tmpquerytohaveparam[0]))) {\n\t\t\t\t\t\t\t\t\t$foundintru = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!$foundintru) {\n\t\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$qualified = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($qualified) {\n\t\t\t\t\t\t\tforeach ($defval as $paramkey => $paramval) {\n\t\t\t\t\t\t\t\t// Add property 'required' on input\n\t\t\t\t\t\t\t\tprint 'jQuery(\"input[name=\\''.$paramkey.'\\']\").prop(\\'required\\',true);'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"textarea[name=\\''.$paramkey.'\\']\").prop(\\'required\\',true);'.\"\\n\";\n\t\t\t\t\t\t\t\tprint '// required on a select works only if key is \"\", so we add the required attributes but also we reset the key -1 or 0 to an empty string'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\']\").prop(\\'required\\',true);'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\'] option[value=\\'-1\\']\").prop(\\'value\\', \\'\\');'.\"\\n\";\n\t\t\t\t\t\t\t\tprint 'jQuery(\"select[name=\\''.$paramkey.'\\'] option[value=\\'0\\']\").prop(\\'value\\', \\'\\');'.\"\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprint '});'.\"\\n\";\n\n\t\t\t// End of tuning\n\t\t\tif (!empty($_SERVER['MAIN_SHOW_TUNING_INFO']) || !empty($conf->global->MAIN_SHOW_TUNING_INFO)) {\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint \"/* JS CODE TO ENABLE to add memory info */\\n\";\n\t\t\t\tprint 'window.console && console.log(\"';\n\t\t\t\tif (!empty($conf->global->MEMCACHED_SERVER)) {\n\t\t\t\t\tprint 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n\t\t\t\t}\n\t\t\t\tprint 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED) ? $conf->global->MAIN_OPTIMIZE_SPEED : 'off');\n\t\t\t\tif (!empty($micro_start_time)) {   // Works only if MAIN_SHOW_TUNING_INFO is defined at $_SERVER level. Not in global variable.\n\t\t\t\t\t$micro_end_time = microtime(true);\n\t\t\t\t\tprint ' - Build time: '.ceil(1000 * ($micro_end_time - $micro_start_time)).' ms';\n\t\t\t\t}\n\n\t\t\t\tif (function_exists(\"memory_get_usage\")) {\n\t\t\t\t\tprint ' - Mem: '.memory_get_usage(); // Do not use true here, it seems it takes the peak amount\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"memory_get_peak_usage\")) {\n\t\t\t\t\tprint ' - Real mem peak: '.memory_get_peak_usage(true);\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"zend_loader_file_encoded\")) {\n\t\t\t\t\tprint ' - Zend encoded file: '.(zend_loader_file_encoded() ? 'yes' : 'no');\n\t\t\t\t}\n\t\t\t\tprint '\");'.\"\\n\";\n\t\t\t}\n\n\t\t\tprint \"\\n\".'</script>'.\"\\n\";\n\n\t\t\t// Google Analytics\n\t\t\t// TODO Add a hook here\n\t\t\tif (!empty($conf->google->enabled) && !empty($conf->global->MAIN_GOOGLE_AN_ID)) {\n\t\t\t\t$tmptagarray = explode(',', $conf->global->MAIN_GOOGLE_AN_ID);\n\t\t\t\tforeach ($tmptagarray as $tmptag) {\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint \"<!-- JS CODE TO ENABLE for google analtics tag -->\\n\";\n\t\t\t\t\tprint \"\n\t\t\t\t\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t\t\t\t\t<script async src=\\\"https://www.googletagmanager.com/gtag/js?id=\".trim($tmptag).\"\\\"></script>\n\t\t\t\t\t<script>\n\t\t\t\t\twindow.dataLayer = window.dataLayer || [];\n\t\t\t\t\tfunction gtag(){dataLayer.push(arguments);}\n\t\t\t\t\tgtag('js', new Date());\n\n\t\t\t\t\tgtag('config', '\".trim($tmptag).\"');\n\t\t\t\t\t</script>\";\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add Xdebug coverage of code\n\t\tif (defined('XDEBUGCOVERAGE')) {\n\t\t\tprint_r(xdebug_get_code_coverage());\n\t\t}\n\n\t\t// Add DebugBar data\n\t\tif (!empty($user->rights->debugbar->read) && is_object($debugbar)) {\n\t\t\t$debugbar['time']->stopMeasure('pageaftermaster');\n\t\t\tprint '<!-- Output debugbar data -->'.\"\\n\";\n\t\t\t$renderer = $debugbar->getRenderer();\n\t\t\tprint $debugbar->getRenderer()->render();\n\t\t} elseif (count($conf->logbuffer)) {    // If there is some logs in buffer to show\n\t\t\tprint \"\\n\";\n\t\t\tprint \"<!-- Start of log output\\n\";\n\t\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\t\tforeach ($conf->logbuffer as $logline) {\n\t\t\t\tprint $logline.\"<br>\\n\";\n\t\t\t}\n\t\t\t//print '</div>'.\"\\n\";\n\t\t\tprint \"End of log output -->\\n\";\n\t\t}\n\t}\n}\n\n/**\n * Split a string with 2 keys into key array.\n * For example: \"A=1;B=2;C=2\" is exploded into array('A'=>1,'B'=>2,'C'=>3)\n *\n * @param \tstring\t$string\t\tString to explode\n * @param \tstring\t$delimiter\tDelimiter between each couple of data\n * @param \tstring\t$kv\t\t\tDelimiter between key and value\n * @return\tarray\t\t\t\tArray of data exploded\n */\nfunction dolExplodeIntoArray($string, $delimiter = ';', $kv = '=')\n{\n\tif ($a = explode($delimiter, $string)) {\n\t\t$ka = array();\n\t\tforeach ($a as $s) { // each part\n\t\t\tif ($s) {\n\t\t\t\tif ($pos = strpos($s, $kv)) { // key/value delimiter\n\t\t\t\t\t$ka[trim(substr($s, 0, $pos))] = trim(substr($s, $pos + strlen($kv)));\n\t\t\t\t} else { // key delimiter not found\n\t\t\t\t\t$ka[] = trim($s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ka;\n\t}\n\treturn array();\n}\n\n\n/**\n * Set focus onto field with selector (similar behaviour of 'autofocus' HTML5 tag)\n *\n * @param \tstring\t$selector\tSelector ('#id' or 'input[name=\"ref\"]') to use to find the HTML input field that must get the autofocus. You must use a CSS selector, so unique id preceding with the '#' char.\n * @return\tstring\t\t\t\tHTML code to set focus\n */\nfunction dol_set_focus($selector)\n{\n\tprint \"\\n\".'<!-- Set focus onto a specific field -->'.\"\\n\";\n\tprint '<script>jQuery(document).ready(function() { jQuery(\"'.dol_escape_js($selector).'\").focus(); });</script>'.\"\\n\";\n}\n\n\n/**\n * Return getmypid() or random PID when function is disabled\n * Some web hosts disable this php function for security reasons\n * and sometimes we can't redeclare function\n *\n * @return\tint\n */\nfunction dol_getmypid()\n{\n\tif (!function_exists('getmypid')) {\n\t\treturn mt_rand(1, 32768);\n\t} else {\n\t\treturn getmypid();\n\t}\n}\n\n\n/**\n * Generate natural SQL search string for a criteria (this criteria can be tested on one or several fields)\n *\n * @param   string|string[]\t$fields \tString or array of strings, filled with the name of all fields in the SQL query we must check (combined with a OR). Example: array(\"p.field1\",\"p.field2\")\n * @param   string \t\t\t$value \t\tThe value to look for.\n *                          \t\t    If param $mode is 0, can contains several keywords separated with a space or |\n *                                      like \"keyword1 keyword2\" = We want record field like keyword1 AND field like keyword2\n *                                      or like \"keyword1|keyword2\" = We want record field like keyword1 OR field like keyword2\n *                             \t\t\tIf param $mode is 1, can contains an operator <, > or = like \"<10\" or \">=100.5 < 1000\"\n *                             \t\t\tIf param $mode is 2, can contains a list of int id separated by comma like \"1,3,4\"\n *                             \t\t\tIf param $mode is 3, can contains a list of string separated by comma like \"a,b,c\"\n * @param\tinteger\t\t\t$mode\t\t0=value is list of keyword strings, 1=value is a numeric test (Example \">5.5 <10\"), 2=value is a list of ID separated with comma (Example '1,3,4')\n * \t\t\t\t\t\t\t\t\t\t3=value is list of string separated with comma (Example 'text 1,text 2'), 4=value is a list of ID separated with comma (Example '2,7') to be used to search into a multiselect string '1,2,3,4'\n * @param\tinteger\t\t\t$nofirstand\t1=Do not output the first 'AND'\n * @return \tstring \t\t\t$res \t\tThe statement to append to the SQL query\n */\nfunction natural_search($fields, $value, $mode = 0, $nofirstand = 0)\n{\n\tglobal $db, $langs;\n\n\t$value = trim($value);\n\n\tif ($mode == 0) {\n\t\t$value = preg_replace('/\\*/', '%', $value); // Replace * with %\n\t}\n\tif ($mode == 1) {\n\t\t$value = preg_replace('/([<>=]+)\\s+([0-9'.preg_quote($langs->trans(\"DecimalSeparator\"), '/').'\\-])/', '\\1\\2', $value); // Clean string '< 10' into '<10' so we can the explode on space to get all tests to do\n\t}\n\n\t$value = preg_replace('/\\s*\\|\\s*/', '|', $value);\n\n\t$crits = explode(' ', $value);\n\t$res = '';\n\tif (!is_array($fields)) {\n\t\t$fields = array($fields);\n\t}\n\n\t$j = 0;\n\tforeach ($crits as $crit) {\n\t\t$crit = trim($crit);\n\t\t$i = 0;\n\t\t$i2 = 0;\n\t\t$newres = '';\n\t\tforeach ($fields as $field) {\n\t\t\tif ($mode == 1) {\n\t\t\t\t$operator = '=';\n\t\t\t\t$newcrit = preg_replace('/([<>=]+)/', '', $crit);\n\n\t\t\t\t$reg = array();\n\t\t\t\tpreg_match('/([<>=]+)/', $crit, $reg);\n\t\t\t\tif ($reg[1]) {\n\t\t\t\t\t$operator = $reg[1];\n\t\t\t\t}\n\t\t\t\tif ($newcrit != '') {\n\t\t\t\t\t$numnewcrit = price2num($newcrit);\n\t\t\t\t\tif (is_numeric($numnewcrit)) {\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').$field.' '.$operator.' '.$db->sanitize($numnewcrit); // should be a numeric\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').'1 = 2'; // force false\n\t\t\t\t\t}\n\t\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t\t}\n\t\t\t} elseif ($mode == 2 || $mode == -2) {\n\t\t\t\t$crit = preg_replace('/[^0-9,]/', '', $crit); // ID are always integer\n\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').$field.\" \".($mode == -2 ? 'NOT ' : '');\n\t\t\t\t$newres .= $crit ? \"IN (\".$db->sanitize($db->escape($crit)).\")\" : \"IN (0)\";\n\t\t\t\tif ($mode == -2) {\n\t\t\t\t\t$newres .= ' OR '.$field.' IS NULL';\n\t\t\t\t}\n\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t} elseif ($mode == 3 || $mode == -3) {\n\t\t\t\t$tmparray = explode(',', $crit);\n\t\t\t\tif (count($tmparray)) {\n\t\t\t\t\t$listofcodes = '';\n\t\t\t\t\tforeach ($tmparray as $val) {\n\t\t\t\t\t\t$val = trim($val);\n\t\t\t\t\t\tif ($val) {\n\t\t\t\t\t\t\t$listofcodes .= ($listofcodes ? ',' : '');\n\t\t\t\t\t\t\t$listofcodes .= \"'\".$db->escape($val).\"'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '').$field.\" \".($mode == -3 ? 'NOT ' : '').\"IN (\".$db->sanitize($listofcodes, 1).\")\";\n\t\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t\t}\n\t\t\t\tif ($mode == -3) {\n\t\t\t\t\t$newres .= ' OR '.$field.' IS NULL';\n\t\t\t\t}\n\t\t\t} elseif ($mode == 4) {\n\t\t\t\t$tmparray = explode(',', $crit);\n\t\t\t\tif (count($tmparray)) {\n\t\t\t\t\t$listofcodes = '';\n\t\t\t\t\tforeach ($tmparray as $val) {\n\t\t\t\t\t\t$val = trim($val);\n\t\t\t\t\t\tif ($val) {\n\t\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR (' : '(').$field.' LIKE \\''.$db->escape($val).',%\\'';\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.' = \\''.$db->escape($val).'\\'';\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.' LIKE \\'%,'.$db->escape($val).'\\'';\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.' LIKE \\'%,'.$db->escape($val).',%\\'';\n\t\t\t\t\t\t\t$newres .= ')';\n\t\t\t\t\t\t\t$i2++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else // $mode=0\n\t\t\t{\n\t\t\t\t$tmpcrits = explode('|', $crit);\n\t\t\t\t$i3 = 0;\n\t\t\t\tforeach ($tmpcrits as $tmpcrit) {\n\t\t\t\t\tif ($tmpcrit !== '0' && empty($tmpcrit)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$newres .= (($i2 > 0 || $i3 > 0) ? ' OR ' : '');\n\n\t\t\t\t\tif (preg_match('/\\.(id|rowid)$/', $field)) {\t// Special case for rowid that is sometimes a ref so used as a search field\n\t\t\t\t\t\t$newres .= $field.\" = \".(is_numeric(trim($tmpcrit)) ?trim($tmpcrit) : '0');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$newres .= $field.\" LIKE '\";\n\n\t\t\t\t\t\t$tmpcrit = trim($tmpcrit);\n\t\t\t\t\t\t$tmpcrit2 = $tmpcrit;\n\t\t\t\t\t\t$tmpbefore = '%';\n\t\t\t\t\t\t$tmpafter = '%';\n\t\t\t\t\t\tif (preg_match('/^[\\^\\$]/', $tmpcrit)) {\n\t\t\t\t\t\t\t$tmpbefore = '';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/^[\\^\\$]/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (preg_match('/[\\^\\$]$/', $tmpcrit)) {\n\t\t\t\t\t\t\t$tmpafter = '';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/[\\^\\$]$/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$newres .= $tmpbefore;\n\t\t\t\t\t\t$newres .= $db->escape($tmpcrit2);\n\t\t\t\t\t\t$newres .= $tmpafter;\n\t\t\t\t\t\t$newres .= \"'\";\n\t\t\t\t\t\tif ($tmpcrit2 == '') {\n\t\t\t\t\t\t\t$newres .= ' OR '.$field.\" IS NULL\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$i3++;\n\t\t\t\t}\n\t\t\t\t$i2++; // a criteria was added to string\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tif ($newres) {\n\t\t\t$res = $res.($res ? ' AND ' : '').($i2 > 1 ? '(' : '').$newres.($i2 > 1 ? ')' : '');\n\t\t}\n\t\t$j++;\n\t}\n\t$res = ($nofirstand ? \"\" : \" AND \").\"(\".$res.\")\";\n\t//print 'xx'.$res.'yy';\n\treturn $res;\n}\n\n/**\n * Return string with full Url. The file qualified is the one defined by relative path in $object->last_main_doc\n *\n * @param   Object\t$object\t\t\t\tObject\n * @return\tstring\t\t\t\t\t\tUrl string\n */\nfunction showDirectDownloadLink($object)\n{\n\tglobal $conf, $langs;\n\n\t$out = '';\n\t$url = $object->getLastMainDocLink($object->element);\n\n\t$out .= img_picto($langs->trans(\"PublicDownloadLinkDesc\"), 'globe').' <span class=\"opacitymedium\">'.$langs->trans(\"DirectDownloadLink\").'</span><br>';\n\tif ($url) {\n\t\t$out .= '<div class=\"urllink\"><input type=\"text\" id=\"directdownloadlink\" class=\"quatrevingtpercent\" value=\"'.$url.'\"></div>';\n\t\t$out .= ajax_autoselect(\"directdownloadlink\", 0);\n\t} else {\n\t\t$out .= '<div class=\"urllink\">'.$langs->trans(\"FileNotShared\").'</div>';\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return the filename of file to get the thumbs\n *\n * @param   string  $file           Original filename (full or relative path)\n * @param   string  $extName        Extension to differenciate thumb file name ('', '_small', '_mini')\n * @param   string  $extImgTarget   Force image extension for thumbs. Use '' to keep same extension than original image (default).\n * @return  string                  New file name (full or relative path, including the thumbs/)\n */\nfunction getImageFileNameForSize($file, $extName, $extImgTarget = '')\n{\n\t$dirName = dirname($file);\n\tif ($dirName == '.') {\n\t\t$dirName = '';\n\t}\n\n\t$fileName = preg_replace('/(\\.gif|\\.jpeg|\\.jpg|\\.png|\\.bmp|\\.webp)$/i', '', $file); // We remove extension, whatever is its case\n\t$fileName = basename($fileName);\n\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.jpg$/i', $file) ? '.jpg' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.jpeg$/i', $file) ? '.jpeg' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.gif$/i', $file) ? '.gif' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.png$/i', $file) ? '.png' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.bmp$/i', $file) ? '.bmp' : '');\n\t}\n\tif (empty($extImgTarget)) {\n\t\t$extImgTarget = (preg_match('/\\.webp$/i', $file) ? '.webp' : '');\n\t}\n\n\tif (!$extImgTarget) {\n\t\treturn $file;\n\t}\n\n\t$subdir = '';\n\tif ($extName) {\n\t\t$subdir = 'thumbs/';\n\t}\n\n\treturn ($dirName ? $dirName.'/' : '').$subdir.$fileName.$extName.$extImgTarget; // New filename for thumb\n}\n\n\n/**\n * Return URL we can use for advanced preview links\n *\n * @param   string    $modulepart     propal, facture, facture_fourn, ...\n * @param   string    $relativepath   Relative path of docs.\n * @param\tint\t\t  $alldata\t\t  Return array with all components (1 is recommended, then use a simple a href link with the class, target and mime attribute added. 'documentpreview' css class is handled by jquery code into main.inc.php)\n * @param\tstring\t  $param\t\t  More param on http links\n * @return  string|array              Output string with href link or array with all components of link\n */\nfunction getAdvancedPreviewUrl($modulepart, $relativepath, $alldata = 0, $param = '')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->use_javascript_ajax)) {\n\t\treturn '';\n\t}\n\n\t$isAllowedForPreview = dolIsAllowedForPreview($relativepath);\n\n\tif ($alldata == 1) {\n\t\tif ($isAllowedForPreview) {\n\t\t\treturn array('target'=>'_blank', 'css'=>'documentpreview', 'url'=>DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param ? '&'.$param : ''), 'mime'=>dol_mimetype($relativepath));\n\t\t} else {\n\t\t\treturn array();\n\t\t}\n\t}\n\n\t// old behavior, return a string\n\tif ($isAllowedForPreview) {\n\t\treturn 'javascript:document_preview(\\''.dol_escape_js(DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param ? '&'.$param : '')).'\\', \\''.dol_mimetype($relativepath).'\\', \\''.dol_escape_js($langs->trans('Preview')).'\\')';\n\t} else {\n\t\treturn '';\n\t}\n}\n\n\n/**\n * Make content of an input box selected when we click into input field.\n *\n * @param string\t$htmlname\tId of html object ('#idvalue' or '.classvalue')\n * @param string\t$addlink\tAdd a 'link to' after\n * @return string\n */\nfunction ajax_autoselect($htmlname, $addlink = '')\n{\n\tglobal $langs;\n\t$out = '<script>\n               jQuery(document).ready(function () {\n\t\t\t\t    jQuery(\"'.((strpos($htmlname, '.') === 0 ? '' : '#').$htmlname).'\").click(function() { jQuery(this).select(); } );\n\t\t\t\t});\n\t\t    </script>';\n\tif ($addlink) {\n\t\t$out .= ' <a href=\"'.$addlink.'\" target=\"_blank\">'.$langs->trans(\"Link\").'</a>';\n\t}\n\treturn $out;\n}\n\n/**\n *\tReturn if a file is qualified for preview\n *\n *\t@param\tstring\t$file\t\tFilename we looking for information\n *\t@return int\t\t\t\t\t1 If allowed, 0 otherwise\n *  @see    dol_mimetype(), image_format_supported() from images.lib.php\n */\nfunction dolIsAllowedForPreview($file)\n{\n\tglobal $conf;\n\n\t// Check .noexe extension in filename\n\tif (preg_match('/\\.noexe$/i', $file)) {\n\t\treturn 0;\n\t}\n\n\t// Check mime types\n\t$mime_preview = array('bmp', 'jpeg', 'png', 'gif', 'tiff', 'pdf', 'plain', 'css', 'webp');\n\tif (!empty($conf->global->MAIN_ALLOW_SVG_FILES_AS_IMAGES)) {\n\t\t$mime_preview[] = 'svg+xml';\n\t}\n\t//$mime_preview[]='vnd.oasis.opendocument.presentation';\n\t//$mime_preview[]='archive';\n\t$num_mime = array_search(dol_mimetype($file, '', 1), $mime_preview);\n\tif ($num_mime !== false) {\n\t\treturn 1;\n\t}\n\n\t// By default, not allowed for preview\n\treturn 0;\n}\n\n\n/**\n *\tReturn mime type of a file\n *\n *\t@param\tstring\t$file\t\tFilename we looking for MIME type\n *  @param  string\t$default    Default mime type if extension not found in known list\n * \t@param\tint\t\t$mode    \t0=Return full mime, 1=otherwise short mime string, 2=image for mime type, 3=source language, 4=css of font fa\n *\t@return string \t\t    \tReturn a mime type family (text/xxx, application/xxx, image/xxx, audio, video, archive)\n *  @see    dolIsAllowedForPreview(), image_format_supported() from images.lib.php\n */\nfunction dol_mimetype($file, $default = 'application/octet-stream', $mode = 0)\n{\n\t$mime = $default;\n\t$imgmime = 'other.png';\n\t$famime = 'file-o';\n\t$srclang = '';\n\n\t$tmpfile = preg_replace('/\\.noexe$/', '', $file);\n\n\t// Plain text files\n\tif (preg_match('/\\.txt$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.rtx$/i', $tmpfile)) {\n\t\t$mime = 'text/richtext';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.csv$/i', $tmpfile)) {\n\t\t$mime = 'text/csv';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.tsv$/i', $tmpfile)) {\n\t\t$mime = 'text/tab-separated-values';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.(cf|conf|log)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.ini$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'ini';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.md$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'md';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.css$/i', $tmpfile)) {\n\t\t$mime = 'text/css';\n\t\t$imgmime = 'css.png';\n\t\t$srclang = 'css';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.lang$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'lang';\n\t\t$famime = 'file-text-o';\n\t}\n\t// Certificate files\n\tif (preg_match('/\\.(crt|cer|key|pub)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$famime = 'file-text-o';\n\t}\n\t// XML based (HTML/XML/XAML)\n\tif (preg_match('/\\.(html|htm|shtml)$/i', $tmpfile)) {\n\t\t$mime = 'text/html';\n\t\t$imgmime = 'html.png';\n\t\t$srclang = 'html';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.(xml|xhtml)$/i', $tmpfile)) {\n\t\t$mime = 'text/xml';\n\t\t$imgmime = 'other.png';\n\t\t$srclang = 'xml';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.xaml$/i', $tmpfile)) {\n\t\t$mime = 'text/xml';\n\t\t$imgmime = 'other.png';\n\t\t$srclang = 'xaml';\n\t\t$famime = 'file-text-o';\n\t}\n\t// Languages\n\tif (preg_match('/\\.bas$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'bas';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(c)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'c';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(cpp)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'cpp';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.cs$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'cs';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(h)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'h';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(java|jsp)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'java';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.php([0-9]{1})?$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'php.png';\n\t\t$srclang = 'php';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.phtml$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'php.png';\n\t\t$srclang = 'php';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.(pl|pm)$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'pl.png';\n\t\t$srclang = 'perl';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.sql$/i', $tmpfile)) {\n\t\t$mime = 'text/plain';\n\t\t$imgmime = 'text.png';\n\t\t$srclang = 'sql';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.js$/i', $tmpfile)) {\n\t\t$mime = 'text/x-javascript';\n\t\t$imgmime = 'jscript.png';\n\t\t$srclang = 'js';\n\t\t$famime = 'file-code-o';\n\t}\n\t// Open office\n\tif (preg_match('/\\.odp$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.oasis.opendocument.presentation';\n\t\t$imgmime = 'ooffice.png';\n\t\t$famime = 'file-powerpoint-o';\n\t}\n\tif (preg_match('/\\.ods$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.oasis.opendocument.spreadsheet';\n\t\t$imgmime = 'ooffice.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.odt$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.oasis.opendocument.text';\n\t\t$imgmime = 'ooffice.png';\n\t\t$famime = 'file-word-o';\n\t}\n\t// MS Office\n\tif (preg_match('/\\.mdb$/i', $tmpfile)) {\n\t\t$mime = 'application/msaccess';\n\t\t$imgmime = 'mdb.png';\n\t\t$famime = 'file-o';\n\t}\n\tif (preg_match('/\\.doc(x|m)?$/i', $tmpfile)) {\n\t\t$mime = 'application/msword';\n\t\t$imgmime = 'doc.png';\n\t\t$famime = 'file-word-o';\n\t}\n\tif (preg_match('/\\.dot(x|m)?$/i', $tmpfile)) {\n\t\t$mime = 'application/msword';\n\t\t$imgmime = 'doc.png';\n\t\t$famime = 'file-word-o';\n\t}\n\tif (preg_match('/\\.xlt(x)?$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-excel';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.xla(m)?$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-excel';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.xls$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-excel';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.xls(b|m|x)$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n\t\t$imgmime = 'xls.png';\n\t\t$famime = 'file-excel-o';\n\t}\n\tif (preg_match('/\\.pps(m|x)?$/i', $tmpfile)) {\n\t\t$mime = 'application/vnd.ms-powerpoint';\n\t\t$imgmime = 'ppt.png';\n\t\t$famime = 'file-powerpoint-o';\n\t}\n\tif (preg_match('/\\.ppt(m|x)?$/i', $tmpfile)) {\n\t\t$mime = 'application/x-mspowerpoint';\n\t\t$imgmime = 'ppt.png';\n\t\t$famime = 'file-powerpoint-o';\n\t}\n\t// Other\n\tif (preg_match('/\\.pdf$/i', $tmpfile)) {\n\t\t$mime = 'application/pdf';\n\t\t$imgmime = 'pdf.png';\n\t\t$famime = 'file-pdf-o';\n\t}\n\t// Scripts\n\tif (preg_match('/\\.bat$/i', $tmpfile)) {\n\t\t$mime = 'text/x-bat';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'dos';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.sh$/i', $tmpfile)) {\n\t\t$mime = 'text/x-sh';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'bash';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.ksh$/i', $tmpfile)) {\n\t\t$mime = 'text/x-ksh';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'bash';\n\t\t$famime = 'file-code-o';\n\t}\n\tif (preg_match('/\\.bash$/i', $tmpfile)) {\n\t\t$mime = 'text/x-bash';\n\t\t$imgmime = 'script.png';\n\t\t$srclang = 'bash';\n\t\t$famime = 'file-code-o';\n\t}\n\t// Images\n\tif (preg_match('/\\.ico$/i', $tmpfile)) {\n\t\t$mime = 'image/x-icon';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.(jpg|jpeg)$/i', $tmpfile)) {\n\t\t$mime = 'image/jpeg';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.png$/i', $tmpfile)) {\n\t\t$mime = 'image/png';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.gif$/i', $tmpfile)) {\n\t\t$mime = 'image/gif';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.bmp$/i', $tmpfile)) {\n\t\t$mime = 'image/bmp';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.(tif|tiff)$/i', $tmpfile)) {\n\t\t$mime = 'image/tiff';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.svg$/i', $tmpfile)) {\n\t\t$mime = 'image/svg+xml';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\tif (preg_match('/\\.webp$/i', $tmpfile)) {\n\t\t$mime = 'image/webp';\n\t\t$imgmime = 'image.png';\n\t\t$famime = 'file-image-o';\n\t}\n\t// Calendar\n\tif (preg_match('/\\.vcs$/i', $tmpfile)) {\n\t\t$mime = 'text/calendar';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-text-o';\n\t}\n\tif (preg_match('/\\.ics$/i', $tmpfile)) {\n\t\t$mime = 'text/calendar';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-text-o';\n\t}\n\t// Other\n\tif (preg_match('/\\.torrent$/i', $tmpfile)) {\n\t\t$mime = 'application/x-bittorrent';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-o';\n\t}\n\t// Audio\n\tif (preg_match('/\\.(mp3|ogg|au|wav|wma|mid)$/i', $tmpfile)) {\n\t\t$mime = 'audio';\n\t\t$imgmime = 'audio.png';\n\t\t$famime = 'file-audio-o';\n\t}\n\t// Video\n\tif (preg_match('/\\.mp4$/i', $tmpfile)) {\n\t\t$mime = 'video/mp4';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.ogv$/i', $tmpfile)) {\n\t\t$mime = 'video/ogg';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.webm$/i', $tmpfile)) {\n\t\t$mime = 'video/webm';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.avi$/i', $tmpfile)) {\n\t\t$mime = 'video/x-msvideo';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.divx$/i', $tmpfile)) {\n\t\t$mime = 'video/divx';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.xvid$/i', $tmpfile)) {\n\t\t$mime = 'video/xvid';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\tif (preg_match('/\\.(wmv|mpg|mpeg)$/i', $tmpfile)) {\n\t\t$mime = 'video';\n\t\t$imgmime = 'video.png';\n\t\t$famime = 'file-video-o';\n\t}\n\t// Archive\n\tif (preg_match('/\\.(zip|rar|gz|tgz|z|cab|bz2|7z|tar|lzh|zst)$/i', $tmpfile)) {\n\t\t$mime = 'archive';\n\t\t$imgmime = 'archive.png';\n\t\t$famime = 'file-archive-o';\n\t}    // application/xxx where zzz is zip, ...\n\t// Exe\n\tif (preg_match('/\\.(exe|com)$/i', $tmpfile)) {\n\t\t$mime = 'application/octet-stream';\n\t\t$imgmime = 'other.png';\n\t\t$famime = 'file-o';\n\t}\n\t// Lib\n\tif (preg_match('/\\.(dll|lib|o|so|a)$/i', $tmpfile)) {\n\t\t$mime = 'library';\n\t\t$imgmime = 'library.png';\n\t\t$famime = 'file-o';\n\t}\n\t// Err\n\tif (preg_match('/\\.err$/i', $tmpfile)) {\n\t\t$mime = 'error';\n\t\t$imgmime = 'error.png';\n\t\t$famime = 'file-text-o';\n\t}\n\n\t// Return string\n\tif ($mode == 1) {\n\t\t$tmp = explode('/', $mime);\n\t\treturn (!empty($tmp[1]) ? $tmp[1] : $tmp[0]);\n\t}\n\tif ($mode == 2) {\n\t\treturn $imgmime;\n\t}\n\tif ($mode == 3) {\n\t\treturn $srclang;\n\t}\n\tif ($mode == 4) {\n\t\treturn $famime;\n\t}\n\treturn $mime;\n}\n\n/**\n * Return value from dictionary\n *\n * @param string\t$tablename\t\tname of dictionary\n * @param string\t$field\t\t\tthe value to return\n * @param int\t\t$id\t\t\t\tid of line\n * @param bool\t\t$checkentity\tadd filter on entity\n * @param string\t$rowidfield\t\tname of the column rowid\n * @return string\n */\nfunction getDictvalue($tablename, $field, $id, $checkentity = false, $rowidfield = 'rowid')\n{\n\tglobal $dictvalues, $db, $langs;\n\n\tif (!isset($dictvalues[$tablename])) {\n\t\t$dictvalues[$tablename] = array();\n\n\t\t$sql = 'SELECT * FROM '.$tablename.' WHERE 1 = 1'; // Here select * is allowed as it is generic code and we don't have list of fields\n\t\tif ($checkentity) {\n\t\t\t$sql .= ' AND entity IN (0,'.getEntity($tablename).')';\n\t\t}\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\twhile ($obj = $db->fetch_object($resql)) {\n\t\t\t\t$dictvalues[$tablename][$obj->{$rowidfield}] = $obj;\n\t\t\t}\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tif (!empty($dictvalues[$tablename][$id])) {\n\t\treturn $dictvalues[$tablename][$id]->{$field}; // Found\n\t} else // Not found\n\t{\n\t\tif ($id > 0) {\n\t\t\treturn $id;\n\t\t}\n\t\treturn '';\n\t}\n}\n\n/**\n *\tReturn true if the color is light\n *\n *  @param\tstring\t$stringcolor\t\tString with hex (FFFFFF) or comma RGB ('255,255,255')\n *  @return\tint\t\t\t\t\t\t\t-1 : Error with argument passed |0 : color is dark | 1 : color is light\n */\nfunction colorIsLight($stringcolor)\n{\n\t$stringcolor = str_replace('#', '', $stringcolor);\n\t$res = -1;\n\tif (!empty($stringcolor)) {\n\t\t$res = 0;\n\t\t$tmp = explode(',', $stringcolor);\n\t\tif (count($tmp) > 1) {   // This is a comma RGB ('255','255','255')\n\t\t\t$r = $tmp[0];\n\t\t\t$g = $tmp[1];\n\t\t\t$b = $tmp[2];\n\t\t} else {\n\t\t\t$hexr = $stringcolor[0].$stringcolor[1];\n\t\t\t$hexg = $stringcolor[2].$stringcolor[3];\n\t\t\t$hexb = $stringcolor[4].$stringcolor[5];\n\t\t\t$r = hexdec($hexr);\n\t\t\t$g = hexdec($hexg);\n\t\t\t$b = hexdec($hexb);\n\t\t}\n\t\t$bright = (max($r, $g, $b) + min($r, $g, $b)) / 510.0; // HSL algorithm\n\t\tif ($bright > 0.6) {\n\t\t\t$res = 1;\n\t\t}\n\t}\n\treturn $res;\n}\n\n/**\n * Function to test if an entry is enabled or not\n *\n * @param\tstring\t\t$type_user\t\t\t\t\t0=We test for internal user, 1=We test for external user\n * @param\tarray\t\t$menuentry\t\t\t\t\tArray for feature entry to test\n * @param\tarray\t\t$listofmodulesforexternal\tArray with list of modules allowed to external users\n * @return\tint\t\t\t\t\t\t\t\t\t\t0=Hide, 1=Show, 2=Show gray\n */\nfunction isVisibleToUserType($type_user, &$menuentry, &$listofmodulesforexternal)\n{\n\tglobal $conf;\n\n\t//print 'type_user='.$type_user.' module='.$menuentry['module'].' enabled='.$menuentry['enabled'].' perms='.$menuentry['perms'];\n\t//print 'ok='.in_array($menuentry['module'], $listofmodulesforexternal);\n\tif (empty($menuentry['enabled'])) {\n\t\treturn 0; // Entry disabled by condition\n\t}\n\tif ($type_user && $menuentry['module']) {\n\t\t$tmploops = explode('|', $menuentry['module']);\n\t\t$found = 0;\n\t\tforeach ($tmploops as $tmploop) {\n\t\t\tif (in_array($tmploop, $listofmodulesforexternal)) {\n\t\t\t\t$found++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$found) {\n\t\t\treturn 0; // Entry is for menus all excluded to external users\n\t\t}\n\t}\n\tif (!$menuentry['perms'] && $type_user) {\n\t\treturn 0; // No permissions and user is external\n\t}\n\tif (!$menuentry['perms'] && !empty($conf->global->MAIN_MENU_HIDE_UNAUTHORIZED)) {\n\t\treturn 0; // No permissions and option to hide when not allowed, even for internal user, is on\n\t}\n\tif (!$menuentry['perms']) {\n\t\treturn 2; // No permissions and user is external\n\t}\n\treturn 1;\n}\n\n/**\n * Round to next multiple.\n *\n * @param \tdouble\t\t$n\t\tNumber to round up\n * @param \tinteger\t\t$x\t\tMultiple. For example 60 to round up to nearest exact minute for a date with seconds.\n * @return \tinteger\t\t\t\tValue rounded.\n */\nfunction roundUpToNextMultiple($n, $x = 5)\n{\n\treturn (ceil($n) % $x === 0) ? ceil($n) : round(($n + $x / 2) / $x) * $x;\n}\n\n/**\n * Function dolGetBadge\n *\n * @param   string  $label      label of badge no html : use in alt attribute for accessibility\n * @param   string  $html       optional : label of badge with html\n * @param   string  $type       type of badge : Primary Secondary Success Danger Warning Info Light Dark status0 status1 status2 status3 status4 status5 status6 status7 status8 status9\n * @param   string  $mode       default '' , 'pill', 'dot'\n * @param   string  $url        the url for link\n * @param   array   $params     various params for future : recommended rather than adding more fuction arguments. array('attr'=>array('title'=>'abc'))\n * @return  string              Html badge\n */\nfunction dolGetBadge($label, $html = '', $type = 'primary', $mode = '', $url = '', $params = array())\n{\n\t$attr = array(\n\t\t'class'=>'badge '.(!empty($mode) ? ' badge-'.$mode : '').(!empty($type) ? ' badge-'.$type : '').(empty($params['css']) ? '' : ' '.$params['css'])\n\t);\n\n\tif (empty($html)) {\n\t\t$html = $label;\n\t}\n\n\tif (!empty($url)) {\n\t\t$attr['href'] = $url;\n\t}\n\n\tif ($mode === 'dot') {\n\t\t$attr['class'] .= ' classfortooltip';\n\t\t$attr['title'] = $html;\n\t\t$attr['aria-label'] = $label;\n\t\t$html = '';\n\t}\n\n\t// Override attr\n\tif (!empty($params['attr']) && is_array($params['attr'])) {\n\t\tforeach ($params['attr'] as $key => $value) {\n\t\t\tif ($key == 'class') {\n\t\t\t\t$attr['class'] .= ' '.$value;\n\t\t\t} elseif ($key == 'classOverride') {\n\t\t\t\t$attr['class'] = $value;\n\t\t\t} else {\n\t\t\t\t$attr[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO: add hook\n\n\t// escape all attribute\n\t$attr = array_map('dol_escape_htmltag', $attr);\n\n\t$TCompiledAttr = array();\n\tforeach ($attr as $key => $value) {\n\t\t$TCompiledAttr[] = $key.'=\"'.$value.'\"';\n\t}\n\n\t$compiledAttributes = !empty($TCompiledAttr) ?implode(' ', $TCompiledAttr) : '';\n\n\t$tag = !empty($url) ? 'a' : 'span';\n\n\treturn '<'.$tag.' '.$compiledAttributes.'>'.$html.'</'.$tag.'>';\n}\n\n\n/**\n * Output the badge of a status.\n *\n * @param   string  $statusLabel       Label of badge no html : use in alt attribute for accessibility\n * @param   string  $statusLabelShort  Short label of badge no html\n * @param   string  $html              Optional : label of badge with html\n * @param   string  $statusType        status0 status1 status2 status3 status4 status5 status6 status7 status8 status9 : image name or badge name\n * @param   int\t    $displayMode       0=Long label, 1=Short label, 2=Picto + Short label, 3=Picto, 4=Picto + Long label, 5=Short label + Picto, 6=Long label + Picto\n * @param   string  $url               The url for link\n * @param   array   $params            Various params. Example: array('tooltip'=>'no|...', 'badgeParams'=>...)\n * @return  string                     Html status string\n */\nfunction dolGetStatus($statusLabel = '', $statusLabelShort = '', $html = '', $statusType = 'status0', $displayMode = 0, $url = '', $params = array())\n{\n\tglobal $conf;\n\n\t$return = '';\n\t$dolGetBadgeParams = array();\n\n\tif (!empty($params['badgeParams'])) {\n\t\t$dolGetBadgeParams = $params['badgeParams'];\n\t}\n\n\t// TODO : add a hook\n\tif ($displayMode == 0) {\n\t\t$return = !empty($html) ? $html : (empty($conf->dol_optimize_smallscreen) ? $statusLabel : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort));\n\t} elseif ($displayMode == 1) {\n\t\t$return = !empty($html) ? $html : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort);\n\t} elseif (!empty($conf->global->MAIN_STATUS_USES_IMAGES)) {\n\t\t// Use status with images (for backward compatibility)\n\t\t$return = '';\n\t\t$htmlLabel      = (in_array($displayMode, array(1, 2, 5)) ? '<span class=\"hideonsmartphone\">' : '').(!empty($html) ? $html : $statusLabel).(in_array($displayMode, array(1, 2, 5)) ? '</span>' : '');\n\t\t$htmlLabelShort = (in_array($displayMode, array(1, 2, 5)) ? '<span class=\"hideonsmartphone\">' : '').(!empty($html) ? $html : (!empty($statusLabelShort) ? $statusLabelShort : $statusLabel)).(in_array($displayMode, array(1, 2, 5)) ? '</span>' : '');\n\n\t\t// For small screen, we always use the short label instead of long label.\n\t\tif (!empty($conf->dol_optimize_smallscreen)) {\n\t\t\tif ($displayMode == 0) {\n\t\t\t\t$displayMode = 1;\n\t\t\t} elseif ($displayMode == 4) {\n\t\t\t\t$displayMode = 2;\n\t\t\t} elseif ($displayMode == 6) {\n\t\t\t\t$displayMode = 5;\n\t\t\t}\n\t\t}\n\n\t\t// For backward compatibility. Image's filename are still in French, so we use this array to convert\n\t\t$statusImg = array(\n\t\t\t'status0' => 'statut0',\n\t\t\t'status1' => 'statut1',\n\t\t\t'status2' => 'statut2',\n\t\t\t'status3' => 'statut3',\n\t\t\t'status4' => 'statut4',\n\t\t\t'status5' => 'statut5',\n\t\t\t'status6' => 'statut6',\n\t\t\t'status7' => 'statut7',\n\t\t\t'status8' => 'statut8',\n\t\t\t'status9' => 'statut9'\n\t\t);\n\n\t\tif (!empty($statusImg[$statusType])) {\n\t\t\t$htmlImg = img_picto($statusLabel, $statusImg[$statusType]);\n\t\t} else {\n\t\t\t$htmlImg = img_picto($statusLabel, $statusType);\n\t\t}\n\n\t\tif ($displayMode === 2) {\n\t\t\t$return = $htmlImg.' '.$htmlLabelShort;\n\t\t} elseif ($displayMode === 3) {\n\t\t\t$return = $htmlImg;\n\t\t} elseif ($displayMode === 4) {\n\t\t\t$return = $htmlImg.' '.$htmlLabel;\n\t\t} elseif ($displayMode === 5) {\n\t\t\t$return = $htmlLabelShort.' '.$htmlImg;\n\t\t} else { // $displayMode >= 6\n\t\t\t$return = $htmlLabel.' '.$htmlImg;\n\t\t}\n\t} elseif (empty($conf->global->MAIN_STATUS_USES_IMAGES) && !empty($displayMode)) {\n\t\t// Use new badge\n\t\t$statusLabelShort = (empty($statusLabelShort) ? $statusLabel : $statusLabelShort);\n\n\t\t$dolGetBadgeParams['attr']['class'] = 'badge-status';\n\t\t$dolGetBadgeParams['attr']['title'] = empty($params['tooltip']) ? $statusLabel : ($params['tooltip'] != 'no' ? $params['tooltip'] : '');\n\n\t\tif ($displayMode == 3) {\n\t\t\t$return = dolGetBadge((empty($conf->dol_optimize_smallscreen) ? $statusLabel : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort)), '', $statusType, 'dot', $url, $dolGetBadgeParams);\n\t\t} elseif ($displayMode === 5) {\n\t\t\t$return = dolGetBadge($statusLabelShort, $html, $statusType, '', $url, $dolGetBadgeParams);\n\t\t} else {\n\t\t\t$return = dolGetBadge((empty($conf->dol_optimize_smallscreen) ? $statusLabel : (empty($statusLabelShort) ? $statusLabel : $statusLabelShort)), $html, $statusType, '', $url, $dolGetBadgeParams);\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n\n/**\n * Function dolGetButtonAction\n *\n * @param string    $label      label of button without HTML : use in alt attribute for accessibility $html is not empty\n * @param string    $html       optional : content with html\n * @param string    $actionType default, delete, danger\n * @param string    $url        the url for link\n * @param string    $id         attribute id of button\n * @param int       $userRight  user action right\n * @param array     $params     various params for future : recommended rather than adding more function arguments\n * @return string               html button\n */\nfunction dolGetButtonAction($label, $html = '', $actionType = 'default', $url = '', $id = '', $userRight = 1, $params = array())\n{\n\t$class = 'butAction';\n\tif ($actionType == 'danger' || $actionType == 'delete') {\n\t\t$class = 'butActionDelete';\n\t\tif (strpos($url, 'token=') === false) $url .= '&token='.newToken();\n\t}\n\n\t$attr = array(\n\t\t'class' => $class,\n\t\t'href' => empty($url) ? '' : $url,\n\t\t'title' => $label\n\t);\n\n\tif (empty($html)) {\n\t\t$html = $label;\n\t} else {\n\t\t$attr['aria-label'] = $label;\n\t}\n\n\tif (empty($userRight)) {\n\t\t$attr['class'] = 'butActionRefused';\n\t\t$attr['href'] = '';\n\t}\n\n\tif (!empty($id)) {\n\t\t$attr['id'] = $id;\n\t}\n\n\t// Override attr\n\tif (!empty($params['attr']) && is_array($params['attr'])) {\n\t\tforeach ($params['attr'] as $key => $value) {\n\t\t\tif ($key == 'class') {\n\t\t\t\t$attr['class'] .= ' '.$value;\n\t\t\t} elseif ($key == 'classOverride') {\n\t\t\t\t$attr['class'] = $value;\n\t\t\t} else {\n\t\t\t\t$attr[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset($attr['href']) && empty($attr['href'])) {\n\t\tunset($attr['href']);\n\t}\n\n\t// TODO : add a hook\n\n\t// escape all attribute\n\t$attr = array_map('dol_escape_htmltag', $attr);\n\n\t$TCompiledAttr = array();\n\tforeach ($attr as $key => $value) {\n\t\t$TCompiledAttr[] = $key.'=\"'.$value.'\"';\n\t}\n\n\t$compiledAttributes = !empty($TCompiledAttr) ?implode(' ', $TCompiledAttr) : '';\n\n\t$tag = !empty($attr['href']) ? 'a' : 'span';\n\n\treturn '<'.$tag.' '.$compiledAttributes.'>'.$html.'</'.$tag.'>';\n}\n\n/**\n * Add space between dolGetButtonTitle\n *\n * @param  string $moreClass \tmore css class label\n * @return string \t\t\t\thtml of title separator\n */\nfunction dolGetButtonTitleSeparator($moreClass = \"\")\n{\n\treturn '<span class=\"button-title-separator '.$moreClass.'\" ></span>';\n}\n\n/**\n * Function dolGetButtonTitle : this kind of buttons are used in title in list\n *\n * @param string    $label      label of button\n * @param string    $helpText   optional : content for help tooltip\n * @param string    $iconClass  class for icon element (Example: 'fa fa-file')\n * @param string    $url        the url for link\n * @param string    $id         attribute id of button\n * @param int       $status     0 no user rights, 1 active, 2 current action or selected, -1 Feature Disabled, -2 disable Other reason use helpText as tooltip\n * @param array     $params     various params for future : recommended rather than adding more function arguments\n * @return string               html button\n */\nfunction dolGetButtonTitle($label, $helpText = '', $iconClass = 'fa fa-file', $url = '', $id = '', $status = 1, $params = array())\n{\n\tglobal $langs, $conf, $user;\n\n\t// Actually this conf is used in css too for external module compatibility and smooth transition to this function\n\tif (!empty($conf->global->MAIN_BUTTON_HIDE_UNAUTHORIZED) && (!$user->admin) && $status <= 0) {\n\t\treturn '';\n\t}\n\n\t$class = 'btnTitle';\n\tif (in_array($iconClass, array('fa fa-plus-circle', 'fa fa-comment-dots'))) {\n\t\t$class .= ' btnTitlePlus';\n\t}\n\t$useclassfortooltip = 1;\n\n\tif (!empty($params['morecss'])) {\n\t\t$class .= ' '.$params['morecss'];\n\t}\n\n\t$attr = array(\n\t\t'class' => $class,\n\t\t'href' => empty($url) ? '' : $url\n\t);\n\n\tif (!empty($helpText)) {\n\t\t$attr['title'] = dol_escape_htmltag($helpText);\n\t} elseif (empty($attr['title']) && $label) {\n\t\t$attr['title'] = $label;\n\t\t$useclassfortooltip = 0;\n\t}\n\n\tif ($status == 2) {\n\t\t$attr['class'] .= ' btnTitleSelected';\n\t} elseif ($status <= 0) {\n\t\t$attr['class'] .= ' refused';\n\n\t\t$attr['href'] = '';\n\n\t\tif ($status == -1) { // disable\n\t\t\t$attr['title'] = dol_escape_htmltag($langs->transnoentitiesnoconv(\"FeatureDisabled\"));\n\t\t} elseif ($status == 0) { // Not enough permissions\n\t\t\t$attr['title'] = dol_escape_htmltag($langs->transnoentitiesnoconv(\"NotEnoughPermissions\"));\n\t\t}\n\t}\n\n\tif (!empty($attr['title']) && $useclassfortooltip) {\n\t\t$attr['class'] .= ' classfortooltip';\n\t}\n\n\tif (!empty($id)) {\n\t\t$attr['id'] = $id;\n\t}\n\n\t// Override attr\n\tif (!empty($params['attr']) && is_array($params['attr'])) {\n\t\tforeach ($params['attr'] as $key => $value) {\n\t\t\tif ($key == 'class') {\n\t\t\t\t$attr['class'] .= ' '.$value;\n\t\t\t} elseif ($key == 'classOverride') {\n\t\t\t\t$attr['class'] = $value;\n\t\t\t} else {\n\t\t\t\t$attr[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (isset($attr['href']) && empty($attr['href'])) {\n\t\tunset($attr['href']);\n\t}\n\n\t// TODO : add a hook\n\n\t// escape all attribute\n\t$attr = array_map('dol_escape_htmltag', $attr);\n\n\t$TCompiledAttr = array();\n\tforeach ($attr as $key => $value) {\n\t\t$TCompiledAttr[] = $key.'=\"'.$value.'\"';\n\t}\n\n\t$compiledAttributes = (empty($TCompiledAttr) ? '' : implode(' ', $TCompiledAttr));\n\n\t$tag = (empty($attr['href']) ? 'span' : 'a');\n\n\t$button = '<'.$tag.' '.$compiledAttributes.'>';\n\t$button .= '<span class=\"'.$iconClass.' valignmiddle btnTitle-icon\"></span>';\n\tif (!empty($params['forcenohideoftext'])) {\n\t\t$button .= '<span class=\"valignmiddle text-plus-circle btnTitle-label'.(empty($params['forcenohideoftext']) ? ' hideonsmartphone' : '').'\">'.$label.'</span>';\n\t}\n\t$button .= '</'.$tag.'>';\n\n\treturn $button;\n}\n\n/**\n * Get an array with properties of an element.\n * Called by fetchObjectByElement.\n *\n * @param   string \t$element_type \tElement type (Value of $object->element). Example: 'action', 'facture', 'project_task' or 'object@mymodule'...\n * @return  array\t\t\t\t\t(module, classpath, element, subelement, classfile, classname)\n */\nfunction getElementProperties($element_type)\n{\n\t$regs = array();\n\n\t$classfile = $classname = $classpath = '';\n\n\t// Parse element/subelement (ex: project_task)\n\t$module = $element_type;\n\t$element = $element_type;\n\t$subelement = $element_type;\n\n\t// If we ask an resource form external module (instead of default path)\n\tif (preg_match('/^([^@]+)@([^@]+)$/i', $element_type, $regs)) {\n\t\t$element = $subelement = $regs[1];\n\t\t$module = $regs[2];\n\t}\n\n\t//print '<br>1. element : '.$element.' - module : '.$module .'<br>';\n\tif (preg_match('/^([^_]+)_([^_]+)/i', $element, $regs)) {\n\t\t$module = $element = $regs[1];\n\t\t$subelement = $regs[2];\n\t}\n\n\t// For compat\n\tif ($element_type == \"action\") {\n\t\t$classpath = 'comm/action/class';\n\t\t$subelement = 'Actioncomm';\n\t\t$module = 'agenda';\n\t}\n\n\t// To work with non standard path\n\tif ($element_type == 'facture' || $element_type == 'invoice') {\n\t\t$classpath = 'compta/facture/class';\n\t\t$module = 'facture';\n\t\t$subelement = 'facture';\n\t}\n\tif ($element_type == 'commande' || $element_type == 'order') {\n\t\t$classpath = 'commande/class';\n\t\t$module = 'commande';\n\t\t$subelement = 'commande';\n\t}\n\tif ($element_type == 'propal') {\n\t\t$classpath = 'comm/propal/class';\n\t}\n\tif ($element_type == 'supplier_proposal') {\n\t\t$classpath = 'supplier_proposal/class';\n\t}\n\tif ($element_type == 'shipping') {\n\t\t$classpath = 'expedition/class';\n\t\t$subelement = 'expedition';\n\t\t$module = 'expedition_bon';\n\t}\n\tif ($element_type == 'delivery') {\n\t\t$classpath = 'delivery/class';\n\t\t$subelement = 'delivery';\n\t\t$module = 'delivery_note';\n\t}\n\tif ($element_type == 'contract') {\n\t\t$classpath = 'contrat/class';\n\t\t$module = 'contrat';\n\t\t$subelement = 'contrat';\n\t}\n\tif ($element_type == 'member') {\n\t\t$classpath = 'adherents/class';\n\t\t$module = 'adherent';\n\t\t$subelement = 'adherent';\n\t}\n\tif ($element_type == 'cabinetmed_cons') {\n\t\t$classpath = 'cabinetmed/class';\n\t\t$module = 'cabinetmed';\n\t\t$subelement = 'cabinetmedcons';\n\t}\n\tif ($element_type == 'fichinter') {\n\t\t$classpath = 'fichinter/class';\n\t\t$module = 'ficheinter';\n\t\t$subelement = 'fichinter';\n\t}\n\tif ($element_type == 'dolresource' || $element_type == 'resource') {\n\t\t$classpath = 'resource/class';\n\t\t$module = 'resource';\n\t\t$subelement = 'dolresource';\n\t}\n\tif ($element_type == 'propaldet') {\n\t\t$classpath = 'comm/propal/class';\n\t\t$module = 'propal';\n\t\t$subelement = 'propaleligne';\n\t}\n\tif ($element_type == 'order_supplier') {\n\t\t$classpath = 'fourn/class';\n\t\t$module = 'fournisseur';\n\t\t$subelement = 'commandefournisseur';\n\t\t$classfile = 'fournisseur.commande';\n\t}\n\tif ($element_type == 'invoice_supplier') {\n\t\t$classpath = 'fourn/class';\n\t\t$module = 'fournisseur';\n\t\t$subelement = 'facturefournisseur';\n\t\t$classfile = 'fournisseur.facture';\n\t}\n\tif ($element_type == \"service\") {\n\t\t$classpath = 'product/class';\n\t\t$subelement = 'product';\n\t}\n\n\tif (empty($classfile)) {\n\t\t$classfile = strtolower($subelement);\n\t}\n\tif (empty($classname)) {\n\t\t$classname = ucfirst($subelement);\n\t}\n\tif (empty($classpath)) {\n\t\t$classpath = $module.'/class';\n\t}\n\n\t$element_properties = array(\n\t\t'module' => $module,\n\t\t'classpath' => $classpath,\n\t\t'element' => $element,\n\t\t'subelement' => $subelement,\n\t\t'classfile' => $classfile,\n\t\t'classname' => $classname\n\t);\n\treturn $element_properties;\n}\n\n/**\n * Fetch an object from its id and element_type\n * Inclusion of classes is automatic\n *\n * @param\tint     \t$element_id \tElement id\n * @param\tstring  \t$element_type \tElement type\n * @param\tstring     \t$element_ref \tElement ref (Use this or element_id but not both)\n * @return \tint|object \t\t\t\t\tobject || 0 || -1 if error\n */\nfunction fetchObjectByElement($element_id, $element_type, $element_ref = '')\n{\n\tglobal $conf, $db;\n\n\t$element_prop = getElementProperties($element_type);\n\tif (is_array($element_prop) && $conf->{$element_prop['module']}->enabled) {\n\t\tdol_include_once('/'.$element_prop['classpath'].'/'.$element_prop['classfile'].'.class.php');\n\n\t\t$objecttmp = new $element_prop['classname']($db);\n\t\t$ret = $objecttmp->fetch($element_id, $element_ref);\n\t\tif ($ret >= 0) {\n\t\t\treturn $objecttmp;\n\t\t}\n\t}\n\treturn 0;\n}\n\n/**\n * Return if a file can contains executable content\n *\n * @param   string  $filename       File name to test\n * @return  boolean                 True if yes, False if no\n */\nfunction isAFileWithExecutableContent($filename)\n{\n\tif (preg_match('/\\.(htm|html|js|phar|php|php\\d+|phtml|pht|pl|py|cgi|ksh|sh|shtml|bash|bat|cmd|wpk|exe|dmg)$/i', $filename)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Return the value of token currently saved into session with name 'newtoken'.\n * This token must be send by any POST as it will be used by next page for comparison with value in session.\n *\n * @return  string\n */\nfunction newToken()\n{\n\treturn $_SESSION['newtoken'];\n}\n\n/**\n * Return the value of token currently saved into session with name 'token'.\n *\n * @return  string\n */\nfunction currentToken()\n{\n\treturn $_SESSION['token'];\n}\n\n/**\n * Start a table with headers and a optinal clickable number (don't forget to use \"finishSimpleTable()\" after the last table row)\n *\n * @param string\t$header\t\tThe first left header of the table (automatic translated)\n * @param string\t$link\t\t(optional) The link to a internal dolibarr page, when click on the number (without the first \"/\")\n * @param string\t$arguments\t(optional) Additional arguments for the link (e.g. \"search_status=0\")\n * @param integer\t$emptyRows\t(optional) The count of empty rows after the first header\n * @param integer\t$number\t\t(optional) The number that is shown right after the first header, when not set the link is shown on the right side of the header as \"FullList\"\n * @return void\n *\n * @see finishSimpleTable()\n */\nfunction startSimpleTable($header, $link = \"\", $arguments = \"\", $emptyRows = 0, $number = -1)\n{\n\tglobal $langs;\n\n\tprint '<div class=\"div-table-responsive-no-min\">';\n\tprint '<table class=\"noborder centpercent\">';\n\tprint '<tr class=\"liste_titre\">';\n\n\tprint $emptyRows < 1 ? '<th>' : '<th colspan=\"'.($emptyRows + 1).'\">';\n\n\tprint $langs->trans($header);\n\n\t// extra space between the first header and the number\n\tif ($number > -1) {\n\t\tprint ' ';\n\t}\n\n\tif (!empty($link)) {\n\t\tif (!empty($arguments)) {\n\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/'.$link.'?'.$arguments.'\">';\n\t\t} else {\n\t\t\tprint '<a href=\"'.DOL_URL_ROOT.'/'.$link.'\">';\n\t\t}\n\t}\n\n\tif ($number > -1) {\n\t\tprint '<span class=\"badge\">'.$number.'</span>';\n\t}\n\n\tif (!empty($link)) {\n\t\tprint '</a>';\n\t}\n\n\tprint '</th>';\n\n\tif ($number < 0 && !empty($link)) {\n\t\tprint '<th class=\"right\">';\n\n\t\tif (!empty($arguments)) {\n\t\t\tprint '<a class=\"commonlink\" href=\"'.DOL_URL_ROOT.'/'.$link.'?'.$arguments.'\">';\n\t\t} else {\n\t\t\tprint '<a class=\"commonlink\" href=\"'.DOL_URL_ROOT.'/'.$link.'\">';\n\t\t}\n\n\t\tprint $langs->trans(\"FullList\");\n\t\tprint '</a>';\n\t\tprint '</th>';\n\t}\n\n\tprint '</tr>';\n}\n\n/**\n * Add the correct HTML close tags for \"startSimpleTable(...)\" (use after the last table line)\n *\n * @param \tbool \t$addLineBreak\t(optional) Add a extra line break after the complete table (\\<br\\>)\n * @return \tvoid\n *\n * @see startSimpleTable()\n */\nfunction finishSimpleTable($addLineBreak = false)\n{\n\tprint '</table>';\n\tprint '</div>';\n\n\tif ($addLineBreak) {\n\t\tprint '<br>';\n\t}\n}\n\n/**\n * Add a summary line to the current open table (\"None\", \"XMoreLines\" or \"Total xxx\")\n *\n * @param integer\t$tableColumnCount\t\tThe complete count columns of the table\n * @param integer\t$num\t\t\t\t\tThe count of the rows of the table, when it is zero (0) the \"$noneWord\" is shown instead\n * @param integer\t$nbofloop\t\t\t\t(optional)\tThe maximum count of rows thaht the table show (when it is zero (0) no summary line will show, expect \"$noneWord\" when $num === 0)\n * @param integer\t$total\t\t\t\t\t(optional)\tThe total value thaht is shown after when the table has minimum of one entire\n * @param string\t$noneWord\t\t\t\t(optional)\tThe word that is shown when the table has no entires ($num === 0)\n * @param boolean\t$extraRightColumn\t\t(optional)\tAdd a addtional column after the summary word and total number\n * @return void\n */\nfunction addSummaryTableLine($tableColumnCount, $num, $nbofloop = 0, $total = 0, $noneWord = \"None\", $extraRightColumn = false)\n{\n\tglobal $langs;\n\n\tif ($num === 0) {\n\t\tprint '<tr class=\"oddeven\">';\n\t\tprint '<td colspan=\"'.$tableColumnCount.'\" class=\"opacitymedium\">'.$langs->trans($noneWord).'</td>';\n\t\tprint '</tr>';\n\t\treturn;\n\t}\n\n\tif ($nbofloop === 0) {\n\t\t// don't show a summary line\n\t\treturn;\n\t}\n\n\tif ($num === 0) {\n\t\t$colspan = $tableColumnCount;\n\t} elseif ($num > $nbofloop) {\n\t\t$colspan = $tableColumnCount;\n\t} else {\n\t\t$colspan = $tableColumnCount - 1;\n\t}\n\n\tif ($extraRightColumn) {\n\t\t$colspan--;\n\t}\n\n\tprint '<tr class=\"liste_total\">';\n\n\tif ($nbofloop > 0 && $num > $nbofloop) {\n\t\tprint '<td colspan=\"'.$colspan.'\" class=\"right\">'.$langs->trans(\"XMoreLines\", ($num - $nbofloop)).'</td>';\n\t} else {\n\t\tprint '<td colspan=\"'.$colspan.'\" class=\"right\"> '.$langs->trans(\"Total\").'</td>';\n\t\tprint '<td class=\"right\" width=\"100\">'.price($total).'</td>';\n\t}\n\n\tif ($extraRightColumn) {\n\t\tprint '<td></td>';\n\t}\n\n\tprint '</tr>';\n}\n\n/**\n *  Return a file on output using a low memory. It can return very large files with no need of memory.\n *  WARNING: This close output buffers.\n *\n *  @param\tstring\t$fullpath_original_file_osencoded\t\tFull path of file to return.\n *  @param\tint\t\t$method\t\t\t\t\t\t\t\t\t-1 automatic, 0=readfile, 1=fread, 2=stream_copy_to_stream\n *  @return void\n */\nfunction readfileLowMemory($fullpath_original_file_osencoded, $method = -1)\n{\n\tglobal $conf;\n\n\tif ($method == -1) {\n\t\t$method = 0;\n\t\tif (!empty($conf->global->MAIN_FORCE_READFILE_WITH_FREAD)) {\n\t\t\t$method = 1;\n\t\t}\n\t\tif (!empty($conf->global->MAIN_FORCE_READFILE_WITH_STREAM_COPY)) {\n\t\t\t$method = 2;\n\t\t}\n\t}\n\n\t// Be sure we don't have output buffering enabled to have readfile working correctly\n\twhile (ob_get_level()) {\n\t\tob_end_flush();\n\t}\n\n\t// Solution 0\n\tif ($method == 0) {\n\t\treadfile($fullpath_original_file_osencoded);\n\t} elseif ($method == 1) {\n\t\t// Solution 1\n\t\t$handle = fopen($fullpath_original_file_osencoded, \"rb\");\n\t\twhile (!feof($handle)) {\n\t\t\tprint fread($handle, 8192);\n\t\t}\n\t\tfclose($handle);\n\t} elseif ($method == 2) {\n\t\t// Solution 2\n\t\t$handle1 = fopen($fullpath_original_file_osencoded, \"rb\");\n\t\t$handle2 = fopen(\"php://output\", \"wb\");\n\t\tstream_copy_to_stream($handle1, $handle2);\n\t\tfclose($handle1);\n\t\tfclose($handle2);\n\t}\n}\n\n/**\n * Create a button to copy $valuetocopy in the clipboard.\n * Code that handle the click is inside lib_foot.jsp.php\n *\n * @param \tstring \t$valuetocopy \t\tThe value to print\n * @param\tint\t\t$showonlyonhover\tShow the copy-paste button only on hover\n * @param\tstring\t$texttoshow\t\t\tReplace the value to show with this text\n * @return \tstring \t\t\t\t\t\tThe string to print for the button\n */\nfunction showValueWithClipboardCPButton($valuetocopy, $showonlyonhover = 1, $texttoshow = '')\n{\n\tglobal $conf;\n\n\t/*if (!empty($conf->dol_no_mouse_hover)) {\n\t\t$showonlyonhover = 0;\n\t}*/\n\n\tif ($texttoshow) {\n\t\t$result = '<span class=\"clipboardCP'.($showonlyonhover ? ' clipboardCPShowOnHover' : '').'\"><span class=\"clipboardCPValue hidewithsize\">'.$valuetocopy.'</span><span class=\"clipboardCPValueToPrint\">'.$texttoshow.'</span><span class=\"clipboardCPButton far fa-clipboard opacitymedium paddingleft paddingright\"></span><span class=\"clipboardCPText opacitymedium\"></span></span>';\n\t} else {\n\t\t$result = '<span class=\"clipboardCP'.($showonlyonhover ? ' clipboardCPShowOnHover' : '').'\"><span class=\"clipboardCPValue\">'.$valuetocopy.'</span><span class=\"clipboardCPButton far fa-clipboard opacitymedium paddingleft paddingright\"></span><span class=\"clipboardCPText opacitymedium\"></span></span>';\n\t}\n\n\treturn $result;\n}\n", "<?php\n/* Copyright (C) 2002-2007  Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Xavier Dutoit           <doli@sydesy.com>\n * Copyright (C) 2004-2021  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Sebastien Di Cintio     <sdicintio@ressource-toi.org>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2021  Regis Houssin           <regis.houssin@inodbox.com>\n * Copyright (C) 2011-2014  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2008       Matteli\n * Copyright (C) 2011-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@altairis.fr>\n * Copyright (C) 2014-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2015       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n * Copyright (C) 2020       Demarest Maxime         <maxime@indelog.fr>\n * Copyright (C) 2020       Charlene Benke          <charlie@patas-monkey.com>\n * Copyright (C) 2021       Fr\u00e9d\u00e9ric France         <frederic.france@netlogic.fr>\n * Copyright (C) 2021       Alexandre Spangaro      <aspangaro@open-dsi.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t\\file       htdocs/main.inc.php\n *\t\\ingroup\tcore\n *\t\\brief      File that defines environment for Dolibarr GUI pages only (file not required by scripts)\n */\n\n//@ini_set('memory_limit', '128M');\t// This may be useless if memory is hard limited by your PHP\n\n// For optional tuning. Enabled if environment variable MAIN_SHOW_TUNING_INFO is defined.\n$micro_start_time = 0;\nif (!empty($_SERVER['MAIN_SHOW_TUNING_INFO'])) {\n\tlist($usec, $sec) = explode(\" \", microtime());\n\t$micro_start_time = ((float) $usec + (float) $sec);\n\t// Add Xdebug code coverage\n\t//define('XDEBUGCOVERAGE',1);\n\tif (defined('XDEBUGCOVERAGE')) {\n\t\txdebug_start_code_coverage();\n\t}\n}\n\n\n/**\n * Return the real char for a numeric entities.\n * WARNING: This function is required by testSqlAndScriptInject() and the GETPOST 'restricthtml'. Regex calling must be similar.\n *\n * @param\tstring\t\t$matches\t\t\tString of numeric entity\n * @return\tstring\t\t\t\t\t\t\tNew value\n */\nfunction realCharForNumericEntities($matches)\n{\n\t$newstringnumentity = $matches[1];\n\t//print  '$newstringnumentity='.$newstringnumentity;\n\n\tif (preg_match('/^x/i', $newstringnumentity)) {\n\t\t$newstringnumentity = hexdec(preg_replace('/;$/', '', preg_replace('/^x/i', '', $newstringnumentity)));\n\t}\n\n\t// The numeric value we don't want as entities because they encode ascii char, and why using html entities on ascii except for haking ?\n\tif (($newstringnumentity >= 65 && $newstringnumentity <= 90) || ($newstringnumentity >= 97 && $newstringnumentity <= 122)) {\n\t\treturn chr((int) $newstringnumentity);\n\t}\n\n\treturn '&#'.$matches[1];\t// Value will be unchanged because regex was /&#(  )/\n}\n\n/**\n * Security: WAF layer for SQL Injection and XSS Injection (scripts) protection (Filters on GET, POST, PHP_SELF).\n * Warning: Such a protection can't be enough. It is not reliable as it will always be possible to bypass this. Good protection can\n * only be guaranted by escaping data during output.\n *\n * @param\t\tstring\t\t$val\t\tValue brut found int $_GET, $_POST or PHP_SELF\n * @param\t\tstring\t\t$type\t\t0=POST, 1=GET, 2=PHP_SELF, 3=GET without sql reserved keywords (the less tolerant test)\n * @return\t\tint\t\t\t\t\t\t>0 if there is an injection, 0 if none\n */\nfunction testSqlAndScriptInject($val, $type)\n{\n\t// Decode string first because a lot of things are obfuscated by encoding or multiple encoding.\n\t// So <svg o&#110;load='console.log(&quot;123&quot;)' become <svg onload='console.log(&quot;123&quot;)'\n\t// So \"&colon;&apos;\" become \":'\" (due to ENT_HTML5)\n\t// Loop to decode until no more thing to decode.\n\t//print \"before decoding $val\\n\";\n\tdo {\n\t\t$oldval = $val;\n\t\t$val = html_entity_decode($val, ENT_QUOTES | ENT_HTML5);\n\t\t$val = preg_replace_callback('/&#(x?[0-9][0-9a-f]+)/i', 'realCharForNumericEntities', $val);\t// Sometimes we have entities without the ; at end so html_entity_decode does not work but entities is still interpreted by browser.\n\t} while ($oldval != $val);\n\t//print \"after  decoding $val\\n\";\n\n\t// We clean string because some hacks try to obfuscate evil strings by inserting non printable chars. Example: 'java(ascci09)scr(ascii00)ipt' is processed like 'javascript' (whatever is place of evil ascii char)\n\t// We should use dol_string_nounprintableascii but function is not yet loaded/available\n\t$val = preg_replace('/[\\x00-\\x1F\\x7F]/u', '', $val); // /u operator makes UTF8 valid characters being ignored so are not included into the replace\n\t// We clean html comments because some hacks try to obfuscate evil strings by inserting HTML comments. Example: on<!-- -->error=alert(1)\n\t$val = preg_replace('/<!--[^>]*-->/', '', $val);\n\n\t$inj = 0;\n\t// For SQL Injection (only GET are used to scan for such injection strings)\n\tif ($type == 1 || $type == 3) {\n\t\t$inj += preg_match('/delete\\s+from/i', $val);\n\t\t$inj += preg_match('/create\\s+table/i', $val);\n\t\t$inj += preg_match('/insert\\s+into/i', $val);\n\t\t$inj += preg_match('/select\\s+from/i', $val);\n\t\t$inj += preg_match('/into\\s+(outfile|dumpfile)/i', $val);\n\t\t$inj += preg_match('/user\\s*\\(/i', $val); // avoid to use function user() or mysql_user() that return current database login\n\t\t$inj += preg_match('/information_schema/i', $val); // avoid to use request that read information_schema database\n\t\t$inj += preg_match('/<svg/i', $val); // <svg can be allowed in POST\n\t\t$inj += preg_match('/update.+set.+=/i', $val);\n\t\t$inj += preg_match('/union.+select/i', $val);\n\t}\n\tif ($type == 3) {\n\t\t$inj += preg_match('/select|update|delete|truncate|replace|group\\s+by|concat|count|from|union/i', $val);\n\t}\n\tif ($type != 2) {\t// Not common key strings, so we can check them both on GET and POST\n\t\t$inj += preg_match('/updatexml\\(/i', $val);\n\t\t$inj += preg_match('/(\\.\\.%2f)+/i', $val);\n\t\t$inj += preg_match('/\\s@@/', $val);\n\t}\n\t// For XSS Injection done by closing textarea to execute content into a textarea field\n\t$inj += preg_match('/<\\/textarea/i', $val);\n\t// For XSS Injection done by adding javascript with script\n\t// This is all cases a browser consider text is javascript:\n\t// When it found '<script', 'javascript:', '<style', 'onload\\s=' on body tag, '=\"&' on a tag size with old browsers\n\t// All examples on page: http://ha.ckers.org/xss.html#XSScalc\n\t// More on https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t$inj += preg_match('/<audio/i', $val);\n\t$inj += preg_match('/<embed/i', $val);\n\t$inj += preg_match('/<iframe/i', $val);\n\t$inj += preg_match('/<object/i', $val);\n\t$inj += preg_match('/<script/i', $val);\n\t$inj += preg_match('/Set\\.constructor/i', $val); // ECMA script 6\n\tif (!defined('NOSTYLECHECK')) {\n\t\t$inj += preg_match('/<style/i', $val);\n\t}\n\t$inj += preg_match('/base\\s+href/si', $val);\n\t$inj += preg_match('/=data:/si', $val);\n\t// List of dom events is on https://www.w3schools.com/jsref/dom_obj_event.asp and https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers\n\t$inj += preg_match('/on(mouse|drag|key|load|touch|pointer|select|transition)([a-z]*)\\s*=/i', $val); // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n\t$inj += preg_match('/on(abort|afterprint|animation|auxclick|beforeprint|beforeunload|blur|cancel|canplay|canplaythrough|change|click|close|contextmenu|cuechange|copy|cut)\\s*=/i', $val);\n\t$inj += preg_match('/on(dblclick|drop|durationchange|emptied|ended|error|focus|focusin|focusout|formdata|gotpointercapture|hashchange|input|invalid)\\s*=/i', $val);\n\t$inj += preg_match('/on(lostpointercapture|offline|online|pagehide|pageshow)\\s*=/i', $val);\n\t$inj += preg_match('/on(paste|pause|play|playing|progress|ratechange|reset|resize|scroll|search|seeked|seeking|show|stalled|start|submit|suspend)\\s*=/i', $val);\n\t$inj += preg_match('/on(timeupdate|toggle|unload|volumechange|waiting|wheel)\\s*=/i', $val);\n\n\t// We refuse html into html because some hacks try to obfuscate evil strings by inserting HTML into HTML. Example: <img on<a>error=alert(1) to bypass test on onerror\n\t$tmpval = preg_replace('/<[^<]+>/', '', $val);\n\t// List of dom events is on https://www.w3schools.com/jsref/dom_obj_event.asp and https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers\n\t$inj += preg_match('/on(mouse|drag|key|load|touch|pointer|select|transition)([a-z]*)\\s*=/i', $val); // onmousexxx can be set on img or any html tag like <img title='...' onmouseover=alert(1)>\n\t$inj += preg_match('/on(abort|afterprint|animation|auxclick|beforeprint|beforeunload|blur|cancel|canplay|canplaythrough|change|click|close|contextmenu|cuechange|copy|cut)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(dblclick|drop|durationchange|emptied|ended|error|focus|focusin|focusout|formdata|gotpointercapture|hashchange|input|invalid)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(lostpointercapture|offline|online|pagehide|pageshow)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(paste|pause|play|playing|progress|ratechange|reset|resize|scroll|search|seeked|seeking|show|stalled|start|submit|suspend)\\s*=/i', $tmpval);\n\t$inj += preg_match('/on(timeupdate|toggle|unload|volumechange|waiting|wheel)\\s*=/i', $tmpval);\n\n\t//$inj += preg_match('/on[A-Z][a-z]+\\*=/', $val);   // To lock event handlers onAbort(), ...\n\t$inj += preg_match('/&#58;|&#0000058|&#x3A/i', $val); // refused string ':' encoded (no reason to have it encoded) to lock 'javascript:...'\n\n\t$inj += preg_match('/javascript\\s*:/i', $val);\n\t$inj += preg_match('/vbscript\\s*:/i', $val);\n\t// For XSS Injection done by adding javascript closing html tags like with onmousemove, etc... (closing a src or href tag with not cleaned param)\n\tif ($type == 1) {\n\t\t$val = str_replace('enclosure=\"', 'enclosure=X', $val); // We accept enclosure=\" for the export/import module\n\t\t$inj += preg_match('/\"/i', $val); // We refused \" in GET parameters value.\n\t}\n\tif ($type == 2) {\n\t\t$inj += preg_match('/[:;\"\\'<>\\?\\(\\){}\\$%]/', $val); // PHP_SELF is a file system (or url path without parameters). It can contains spaces.\n\t}\n\n\treturn $inj;\n}\n\n/**\n * Return true if security check on parameters are OK, false otherwise.\n *\n * @param\t\tstring\t\t\t$var\t\tVariable name\n * @param\t\tstring\t\t\t$type\t\t1=GET, 0=POST, 2=PHP_SELF\n * @return\t\tboolean|null\t\t\t\ttrue if there is no injection. Stop code if injection found.\n */\nfunction analyseVarsForSqlAndScriptsInjection(&$var, $type)\n{\n\tif (is_array($var)) {\n\t\tforeach ($var as $key => $value) {\t// Warning, $key may also be used for attacks\n\t\t\tif (analyseVarsForSqlAndScriptsInjection($key, $type) && analyseVarsForSqlAndScriptsInjection($value, $type)) {\n\t\t\t\t//$var[$key] = $value;\t// This is useless\n\t\t\t} else {\n\t\t\t\t// Get remote IP: PS: We do not use getRemoteIP(), function is not yet loaded and we need a value that can't be spoofed\n\t\t\t\t$ip = (empty($_SERVER['REMOTE_ADDR']) ? 'unknown' : $_SERVER['REMOTE_ADDR']);\n\t\t\t\t$errormessage = 'Access refused to '.$ip.' by SQL or Script injection protection in main.inc.php - GETPOST type='.htmlentities($type).' paramkey='.htmlentities($key).' paramvalue='.htmlentities($value).' page='.htmlentities($_SERVER[\"REQUEST_URI\"]);\n\t\t\t\tprint $errormessage;\n\t\t\t\t// Add entry into error log\n\t\t\t\tif (function_exists('error_log')) {\n\t\t\t\t\terror_log($errormessage);\n\t\t\t\t}\n\t\t\t\t// TODO Add entry into security audit table\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn (testSqlAndScriptInject($var, $type) <= 0);\n\t}\n}\n\n\n// Check consistency of NOREQUIREXXX DEFINES\nif ((defined('NOREQUIREDB') || defined('NOREQUIRETRAN')) && !defined('NOREQUIREMENU')) {\n\tprint 'If define NOREQUIREDB or NOREQUIRETRAN are set, you must also set NOREQUIREMENU or not set them.';\n\texit;\n}\nif (defined('NOREQUIREUSER') && !defined('NOREQUIREMENU')) {\n\tprint 'If define NOREQUIREUSER is set, you must also set NOREQUIREMENU or not set it.';\n\texit;\n}\n\n// Sanity check on URL\nif (!empty($_SERVER[\"PHP_SELF\"])) {\n\t$morevaltochecklikepost = array($_SERVER[\"PHP_SELF\"]);\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikepost, 2);\n}\n// Sanity check on GET parameters\nif (!defined('NOSCANGETFORINJECTION') && !empty($_SERVER[\"QUERY_STRING\"])) {\n\t// Note: QUERY_STRING is url encoded, but $_GET and $_POST are already decoded\n\t// Because the analyseVarsForSqlAndScriptsInjection is designed for already url decoded value, we must decode QUERY_STRING\n\t// Another solution is to provide $_GET as parameter\n\t$morevaltochecklikeget = array(urldecode($_SERVER[\"QUERY_STRING\"]));\n\tanalyseVarsForSqlAndScriptsInjection($morevaltochecklikeget, 1);\n}\n// Sanity check on POST\nif (!defined('NOSCANPOSTFORINJECTION')) {\n\tanalyseVarsForSqlAndScriptsInjection($_POST, 0);\n}\n\n// This is to make Dolibarr working with Plesk\nif (!empty($_SERVER['DOCUMENT_ROOT']) && substr($_SERVER['DOCUMENT_ROOT'], -6) !== 'htdocs') {\n\tset_include_path($_SERVER['DOCUMENT_ROOT'].'/htdocs');\n}\n\n// Include the conf.php and functions.lib.php. This defined the constants like DOL_DOCUMENT_ROOT, DOL_DATA_ROOT, DOL_URL_ROOT...\nrequire_once 'filefunc.inc.php';\n\n// If there is a POST parameter to tell to save automatically some POST parameters into cookies, we do it.\n// This is used for example by form of boxes to save personalization of some options.\n// DOL_AUTOSET_COOKIE=cookiename:val1,val2 and  cookiename_val1=aaa cookiename_val2=bbb will set cookie_name with value json_encode(array('val1'=> , ))\nif (!empty($_POST[\"DOL_AUTOSET_COOKIE\"])) {\n\t$tmpautoset = explode(':', $_POST[\"DOL_AUTOSET_COOKIE\"], 2);\n\t$tmplist = explode(',', $tmpautoset[1]);\n\t$cookiearrayvalue = array();\n\tforeach ($tmplist as $tmpkey) {\n\t\t$postkey = $tmpautoset[0].'_'.$tmpkey;\n\t\t//var_dump('tmpkey='.$tmpkey.' postkey='.$postkey.' value='.$_POST[$postkey]);\n\t\tif (!empty($_POST[$postkey])) {\n\t\t\t$cookiearrayvalue[$tmpkey] = $_POST[$postkey];\n\t\t}\n\t}\n\t$cookiename = $tmpautoset[0];\n\t$cookievalue = json_encode($cookiearrayvalue);\n\t//var_dump('setcookie cookiename='.$cookiename.' cookievalue='.$cookievalue);\n\tsetcookie($cookiename, empty($cookievalue) ? '' : $cookievalue, empty($cookievalue) ? 0 : (time() + (86400 * 354)), '/', null, false, true); // keep cookie 1 year and add tag httponly\n\tif (empty($cookievalue)) {\n\t\tunset($_COOKIE[$cookiename]);\n\t}\n}\n\n\n// Set the handler of session\nif (ini_get('session.save_handler') == 'user') {\n\trequire_once 'core/lib/phpsessionindb.lib.php';\n}\n\n// Init session. Name of session is specific to Dolibarr instance.\n// Must be done after the include of filefunc.inc.php so global variables of conf file are defined (like $dolibarr_main_instance_unique_id or $dolibarr_main_force_https).\n// Note: the function dol_getprefix is defined into functions.lib.php but may have been defined to return a different key to manage another area to protect.\n$prefix = dol_getprefix('');\n$sessionname = 'DOLSESSID_'.$prefix;\n$sessiontimeout = 'DOLSESSTIMEOUT_'.$prefix;\nif (!empty($_COOKIE[$sessiontimeout])) {\n\tini_set('session.gc_maxlifetime', $_COOKIE[$sessiontimeout]);\n}\n// This create lock, released by session_write_close() or end of page.\n// We need this lock as long as we read/write $_SESSION ['vars']. We can remove lock when finished.\nif (!defined('NOSESSION')) {\n\tsession_set_cookie_params(0, '/', null, (empty($dolibarr_main_force_https) ? false : true), true); // Add tag secure and httponly on session cookie (same as setting session.cookie_httponly into php.ini). Must be called before the session_start.\n\tsession_name($sessionname);\n\tsession_start();\n}\n\n\n// Init the 5 global objects, this include will make the 'new Xxx()' and set properties for: $conf, $db, $langs, $user, $mysoc\nrequire_once 'master.inc.php';\n\n\n// If software has been locked. Only login $conf->global->MAIN_ONLY_LOGIN_ALLOWED is allowed.\nif (!empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) {\n\t$ok = 0;\n\tif ((!session_id() || !isset($_SESSION[\"dol_login\"])) && !isset($_POST[\"username\"]) && !empty($_SERVER[\"GATEWAY_INTERFACE\"])) {\n\t\t$ok = 1; // We let working pages if not logged and inside a web browser (login form, to allow login by admin)\n\t} elseif (isset($_POST[\"username\"]) && $_POST[\"username\"] == $conf->global->MAIN_ONLY_LOGIN_ALLOWED) {\n\t\t$ok = 1; // We let working pages that is a login submission (login submit, to allow login by admin)\n\t} elseif (defined('NOREQUIREDB')) {\n\t\t$ok = 1; // We let working pages that don't need database access (xxx.css.php)\n\t} elseif (defined('EVEN_IF_ONLY_LOGIN_ALLOWED')) {\n\t\t$ok = 1; // We let working pages that ask to work even if only login enabled (logout.php)\n\t} elseif (session_id() && isset($_SESSION[\"dol_login\"]) && $_SESSION[\"dol_login\"] == $conf->global->MAIN_ONLY_LOGIN_ALLOWED) {\n\t\t$ok = 1; // We let working if user is allowed admin\n\t}\n\tif (!$ok) {\n\t\tif (session_id() && isset($_SESSION[\"dol_login\"]) && $_SESSION[\"dol_login\"] != $conf->global->MAIN_ONLY_LOGIN_ALLOWED) {\n\t\t\tprint 'Sorry, your application is offline.'.\"\\n\";\n\t\t\tprint 'You are logged with user \"'.$_SESSION[\"dol_login\"].'\" and only administrator user \"'.$conf->global->MAIN_ONLY_LOGIN_ALLOWED.'\" is allowed to connect for the moment.'.\"\\n\";\n\t\t\t$nexturl = DOL_URL_ROOT.'/user/logout.php';\n\t\t\tprint 'Please try later or <a href=\"'.$nexturl.'\">click here to disconnect and change login user</a>...'.\"\\n\";\n\t\t} else {\n\t\t\tprint 'Sorry, your application is offline. Only administrator user \"'.$conf->global->MAIN_ONLY_LOGIN_ALLOWED.'\" is allowed to connect for the moment.'.\"\\n\";\n\t\t\t$nexturl = DOL_URL_ROOT.'/';\n\t\t\tprint 'Please try later or <a href=\"'.$nexturl.'\">click here to change login user</a>...'.\"\\n\";\n\t\t}\n\t\texit;\n\t}\n}\n\n\n// Activate end of page function\nregister_shutdown_function('dol_shutdown');\n\n// Load debugbar\nif (!empty($conf->debugbar->enabled) && !GETPOST('dol_use_jmobile') && empty($_SESSION['dol_use_jmobile'])) {\n\tglobal $debugbar;\n\tinclude_once DOL_DOCUMENT_ROOT.'/debugbar/class/DebugBar.php';\n\t$debugbar = new DolibarrDebugBar();\n\t$renderer = $debugbar->getRenderer();\n\tif (empty($conf->global->MAIN_HTML_HEADER)) {\n\t\t$conf->global->MAIN_HTML_HEADER = '';\n\t}\n\t$conf->global->MAIN_HTML_HEADER .= $renderer->renderHead();\n\n\t$debugbar['time']->startMeasure('pageaftermaster', 'Page generation (after environment init)');\n}\n\n// Detection browser\nif (isset($_SERVER[\"HTTP_USER_AGENT\"])) {\n\t$tmp = getBrowserInfo($_SERVER[\"HTTP_USER_AGENT\"]);\n\t$conf->browser->name = $tmp['browsername'];\n\t$conf->browser->os = $tmp['browseros'];\n\t$conf->browser->version = $tmp['browserversion'];\n\t$conf->browser->layout = $tmp['layout']; // 'classic', 'phone', 'tablet'\n\t//var_dump($conf->browser);\n\n\tif ($conf->browser->layout == 'phone') {\n\t\t$conf->dol_no_mouse_hover = 1;\n\t}\n}\n\n// Set global MAIN_OPTIMIZEFORTEXTBROWSER (must be before login part)\nif (GETPOST('textbrowser', 'int') || (!empty($conf->browser->name) && $conf->browser->name == 'lynxlinks')) {   // If we must enable text browser\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER = 1;\n}\n\n// Force HTTPS if required ($conf->file->main_force_https is 0/1 or 'https dolibarr root url')\n// $_SERVER[\"HTTPS\"] is 'on' when link is https, otherwise $_SERVER[\"HTTPS\"] is empty or 'off'\nif (!empty($conf->file->main_force_https) && (empty($_SERVER[\"HTTPS\"]) || $_SERVER[\"HTTPS\"] != 'on')) {\n\t$newurl = '';\n\tif (is_numeric($conf->file->main_force_https)) {\n\t\tif ($conf->file->main_force_https == '1' && !empty($_SERVER[\"SCRIPT_URI\"])) {\t// If SCRIPT_URI supported by server\n\t\t\tif (preg_match('/^http:/i', $_SERVER[\"SCRIPT_URI\"]) && !preg_match('/^https:/i', $_SERVER[\"SCRIPT_URI\"])) {\t// If link is http\n\t\t\t\t$newurl = preg_replace('/^http:/i', 'https:', $_SERVER[\"SCRIPT_URI\"]);\n\t\t\t}\n\t\t} else {\n\t\t\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t\t$newurl = preg_replace('/^http:/i', 'https:', DOL_MAIN_URL_ROOT).$_SERVER[\"REQUEST_URI\"];\n\t\t}\n\t} else {\n\t\t// Check HTTPS environment variable (Apache/mod_ssl only)\n\t\t$newurl = $conf->file->main_force_https.$_SERVER[\"REQUEST_URI\"];\n\t}\n\t// Start redirect\n\tif ($newurl) {\n\t\theader_remove(); // Clean header already set to be sure to remove any header like \"Set-Cookie: DOLSESSID_...\" from non HTTPS answers\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on, we make a redirect to \".$newurl);\n\t\theader(\"Location: \".$newurl);\n\t\texit;\n\t} else {\n\t\tdol_syslog(\"main.inc: dolibarr_main_force_https is on but we failed to forge new https url so no redirect is done\", LOG_WARNING);\n\t}\n}\n\nif (!defined('NOLOGIN') && !defined('NOIPCHECK') && !empty($dolibarr_main_restrict_ip)) {\n\t$listofip = explode(',', $dolibarr_main_restrict_ip);\n\t$found = false;\n\tforeach ($listofip as $ip) {\n\t\t$ip = trim($ip);\n\t\tif ($ip == $_SERVER['REMOTE_ADDR']) {\n\t\t\t$found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!$found) {\n\t\tprint 'Access refused by IP protection. Your detected IP is '.$_SERVER['REMOTE_ADDR'];\n\t\texit;\n\t}\n}\n\n// Loading of additional presentation includes\nif (!defined('NOREQUIREHTML')) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php'; // Need 660ko memory (800ko in 2.2)\n}\nif (!defined('NOREQUIREAJAX')) {\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/ajax.lib.php'; // Need 22ko memory\n}\n\n// If install or upgrade process not done or not completely finished, we call the install page.\nif (!empty($conf->global->MAIN_NOT_INSTALLED) || !empty($conf->global->MAIN_NOT_UPGRADED)) {\n\tdol_syslog(\"main.inc: A previous install or upgrade was not complete. Redirect to install page.\", LOG_WARNING);\n\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\texit;\n}\n// If an upgrade process is required, we call the install page.\nif ((!empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && ($conf->global->MAIN_VERSION_LAST_UPGRADE != DOL_VERSION))\n|| (empty($conf->global->MAIN_VERSION_LAST_UPGRADE) && !empty($conf->global->MAIN_VERSION_LAST_INSTALL) && ($conf->global->MAIN_VERSION_LAST_INSTALL != DOL_VERSION))) {\n\t$versiontocompare = empty($conf->global->MAIN_VERSION_LAST_UPGRADE) ? $conf->global->MAIN_VERSION_LAST_INSTALL : $conf->global->MAIN_VERSION_LAST_UPGRADE;\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\n\t$dolibarrversionlastupgrade = preg_split('/[.-]/', $versiontocompare);\n\t$dolibarrversionprogram = preg_split('/[.-]/', DOL_VERSION);\n\t$rescomp = versioncompare($dolibarrversionprogram, $dolibarrversionlastupgrade);\n\tif ($rescomp > 0) {   // Programs have a version higher than database. We did not add \"&& $rescomp < 3\" because we want upgrade process for build upgrades\n\t\tdol_syslog(\"main.inc: database version \".$versiontocompare.\" is lower than programs version \".DOL_VERSION.\". Redirect to install page.\", LOG_WARNING);\n\t\theader(\"Location: \".DOL_URL_ROOT.\"/install/index.php\");\n\t\texit;\n\t}\n}\n\n// Creation of a token against CSRF vulnerabilities\nif (!defined('NOTOKENRENEWAL')) {\n\t// No token renewal on .css.php, .js.php and .json.php\n\tif (!preg_match('/\\.(css|js|json)\\.php$/', $_SERVER[\"PHP_SELF\"])) {\n\t\t// Rolling token at each call ($_SESSION['token'] contains token of previous page)\n\t\tif (isset($_SESSION['newtoken'])) {\n\t\t\t$_SESSION['token'] = $_SESSION['newtoken'];\n\t\t}\n\n\t\t// Save in $_SESSION['newtoken'] what will be next token. Into forms, we will add param token = $_SESSION['newtoken']\n\t\t$token = dol_hash(uniqid(mt_rand(), true)); // Generates a hash of a random number\n\t\t$_SESSION['newtoken'] = $token;\n\t\tdol_syslog(\"NEW TOKEN generated by : \" . $_SERVER['PHP_SELF'], LOG_DEBUG);\n\t}\n}\n\n//dol_syslog(\"aaaa - \".defined('NOCSRFCHECK').\" - \".$dolibarr_nocsrfcheck.\" - \".$conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN.\" - \".$_SERVER['REQUEST_METHOD'].\" - \".GETPOST('token', 'alpha'));\n\n// Check validity of token, only if option MAIN_SECURITY_CSRF_WITH_TOKEN enabled or if constant CSRFCHECK_WITH_TOKEN is set into page\nif ((!defined('NOCSRFCHECK') && empty($dolibarr_nocsrfcheck) && !empty($conf->global->MAIN_SECURITY_CSRF_WITH_TOKEN)) || defined('CSRFCHECK_WITH_TOKEN')) {\n\t// Array of action code where CSRFCHECK with token will be forced (so token must be provided on url request)\n\t$arrayofactiontoforcetokencheck = array(\n\t\t'activate', 'add', 'addtimespent', 'update', 'install',\n\t\t'confirm_create_user', 'confirm_create_thirdparty', 'confirm_purge', 'confirm_reject_check',\n\t\t'delete', 'deletefilter', 'deleteoperation', 'deleteprof', 'deletepayment', 'disable',\n\t\t'doprev', 'donext', 'dvprev', 'dvnext',\n\t\t'enable', 'setpricelevel'\n\t);\n\t$sensitiveget = false;\n\tif (in_array(GETPOST('action', 'aZ09'), $arrayofactiontoforcetokencheck)) {\n\t\t$sensitiveget = true;\n\t}\n\tif (preg_match('/^(disable_|enable_|setremise)/', GETPOST('action', 'aZ09'))) {\n\t\t$sensitiveget = true;\n\t}\n\n\t// Check a token is provided for all cases that need a mandatory token\n\t// (all POST actions + all login, actions and mass actions on pages with CSRFCHECK_WITH_TOKEN set + all sensitive GET actions)\n\tif (\n\t\t$_SERVER['REQUEST_METHOD'] == 'POST' ||\n\t\t$sensitiveget ||\n\t\t((GETPOSTISSET('actionlogin') || GETPOSTISSET('action') || GETPOSTISSET('massaction')) && defined('CSRFCHECK_WITH_TOKEN'))\n\t) {\n\t\t// If token is not provided or empty, error (we are in case it is mandatory)\n\t\tif (!GETPOST('token', 'alpha') || GETPOST('token', 'alpha') == 'notrequired') {\n\t\t\tif (GETPOST('uploadform', 'int')) {\n\t\t\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" refused. File size too large.\");\n\t\t\t\t$langs->loadLangs(array(\"errors\", \"install\"));\n\t\t\t\tprint $langs->trans(\"ErrorFileSizeTooLarge\").' ';\n\t\t\t\tprint $langs->trans(\"ErrorGoBackAndCorrectParameters\");\n\t\t\t\tdie;\n\t\t\t} else {\n\t\t\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" refused by CSRFCHECK_WITH_TOKEN protection. Token not provided.\", LOG_WARNING);\n\t\t\t\tif (defined('CSRFCHECK_WITH_TOKEN')) {\n\t\t\t\t\tprint \"Access to a page that needs a token (constant CSRFCHECK_WITH_TOKEN is defined) is refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tprint \"Access to this page this way (POST method or GET with a sensible value for 'action' parameter) is refused by CSRF protection in main.inc.php. Token not provided.\\n\";\n\t\t\t\t\tprint \"If you access your server behind a proxy using url rewriting and the parameter is provided by caller, you might check that all HTTP header are propagated (or add the line \\$dolibarr_nocsrfcheck=1 into your conf.php file or MAIN_SECURITY_CSRF_WITH_TOKEN to 0 into setup).\\n\";\n\t\t\t\t}\n\t\t\t\tdie;\n\t\t\t}\n\t\t}\n\t}\n\n\t$sessiontokenforthisurl = (empty($_SESSION['token']) ? '' : $_SESSION['token']);\n\t// TODO Get the sessiontokenforthisurl into the array of session token\n\tif (GETPOSTISSET('token') && GETPOST('token') != 'notrequired' && GETPOST('token', 'alpha') != $sessiontokenforthisurl) {\n\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" refused due to invalid token, so we disable POST and some GET parameters - referer=\".$_SERVER['HTTP_REFERER'].\", action=\".GETPOST('action', 'aZ09').\", _GET|POST['token']=\".GETPOST('token', 'alpha').\", _SESSION['token']=\".$_SESSION['token'], LOG_WARNING);\n\t\t//print 'Unset POST by CSRF protection in main.inc.php.';\t// Do not output anything because this create problems when using the BACK button on browsers.\n\t\tsetEventMessages('SecurityTokenHasExpiredSoActionHasBeenCanceledPleaseRetry', null, 'warnings');\n\t\t//if ($conf->global->MAIN_FEATURES_LEVEL >= 1) setEventMessages('Unset POST and GET params by CSRF protection in main.inc.php (Token provided was not generated by the previous page).'.\"<br>\\n\".'$_SERVER[REQUEST_URI] = '.$_SERVER['REQUEST_URI'].' $_SERVER[REQUEST_METHOD] = '.$_SERVER['REQUEST_METHOD'].' GETPOST(token) = '.GETPOST('token', 'alpha').' $_SESSION[token] = '.$_SESSION['token'], null, 'warnings');\n\t\t$savid = ((int) $_POST['id']);\n\t\tunset($_POST);\n\t\t//unset($_POST['action']); unset($_POST['massaction']);\n\t\t//unset($_POST['confirm']); unset($_POST['confirmmassaction']);\n\t\tunset($_GET['confirm']);\n\t\tunset($_GET['action']);\n\t\tunset($_GET['confirmmassaction']);\n\t\tunset($_GET['massaction']);\n\t\t$_POST['id'] = ((int) $savid);\n\t}\n\n\t// Note: There is another CSRF protection into the filefunc.inc.php\n}\n\n// Disable modules (this must be after session_start and after conf has been loaded)\nif (GETPOSTISSET('disablemodules')) {\n\t$_SESSION[\"disablemodules\"] = GETPOST('disablemodules', 'alpha');\n}\nif (!empty($_SESSION[\"disablemodules\"])) {\n\t$modulepartkeys = array('css', 'js', 'tabs', 'triggers', 'login', 'substitutions', 'menus', 'theme', 'sms', 'tpl', 'barcode', 'models', 'societe', 'hooks', 'dir', 'syslog', 'tpllinkable', 'contactelement', 'moduleforexternal');\n\n\t$disabled_modules = explode(',', $_SESSION[\"disablemodules\"]);\n\tforeach ($disabled_modules as $module) {\n\t\tif ($module) {\n\t\t\tif (empty($conf->$module)) {\n\t\t\t\t$conf->$module = new stdClass(); // To avoid warnings\n\t\t\t}\n\t\t\t$conf->$module->enabled = false;\n\t\t\tforeach ($modulepartkeys as $modulepartkey) {\n\t\t\t\tunset($conf->modules_parts[$modulepartkey][$module]);\n\t\t\t}\n\t\t\tif ($module == 'fournisseur') {\t\t// Special case\n\t\t\t\t$conf->supplier_order->enabled = 0;\n\t\t\t\t$conf->supplier_invoice->enabled = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Set current modulepart\n$modulepart = explode(\"/\", $_SERVER[\"PHP_SELF\"]);\nif (is_array($modulepart) && count($modulepart) > 0) {\n\tforeach ($conf->modules as $module) {\n\t\tif (in_array($module, $modulepart)) {\n\t\t\t$conf->modulepart = $module;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/*\n * Phase authentication / login\n */\n$login = '';\nif (!defined('NOLOGIN')) {\n\t// $authmode lists the different method of identification to be tested in order of preference.\n\t// Example: 'http', 'dolibarr', 'ldap', 'http,forceuser', '...'\n\n\tif (defined('MAIN_AUTHENTICATION_MODE')) {\n\t\t$dolibarr_main_authentication = constant('MAIN_AUTHENTICATION_MODE');\n\t} else {\n\t\t// Authentication mode\n\t\tif (empty($dolibarr_main_authentication)) {\n\t\t\t$dolibarr_main_authentication = 'http,dolibarr';\n\t\t}\n\t\t// Authentication mode: forceuser\n\t\tif ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) {\n\t\t\t$dolibarr_auto_user = 'auto';\n\t\t}\n\t}\n\t// Set authmode\n\t$authmode = explode(',', $dolibarr_main_authentication);\n\n\t// No authentication mode\n\tif (!count($authmode)) {\n\t\t$langs->load('main');\n\t\tdol_print_error('', $langs->trans(\"ErrorConfigParameterNotDefined\", 'dolibarr_main_authentication'));\n\t\texit;\n\t}\n\n\t// If login request was already post, we retrieve login from the session\n\t// Call module if not realized that his request.\n\t// At the end of this phase, the variable $login is defined.\n\t$resultFetchUser = '';\n\t$test = true;\n\tif (!isset($_SESSION[\"dol_login\"])) {\n\t\t// It is not already authenticated and it requests the login / password\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/security2.lib.php';\n\n\t\t$dol_dst_observed = GETPOST(\"dst_observed\", 'int', 3);\n\t\t$dol_dst_first = GETPOST(\"dst_first\", 'int', 3);\n\t\t$dol_dst_second = GETPOST(\"dst_second\", 'int', 3);\n\t\t$dol_screenwidth = GETPOST(\"screenwidth\", 'int', 3);\n\t\t$dol_screenheight = GETPOST(\"screenheight\", 'int', 3);\n\t\t$dol_hide_topmenu = GETPOST('dol_hide_topmenu', 'int', 3);\n\t\t$dol_hide_leftmenu = GETPOST('dol_hide_leftmenu', 'int', 3);\n\t\t$dol_optimize_smallscreen = GETPOST('dol_optimize_smallscreen', 'int', 3);\n\t\t$dol_no_mouse_hover = GETPOST('dol_no_mouse_hover', 'int', 3);\n\t\t$dol_use_jmobile = GETPOST('dol_use_jmobile', 'int', 3); // 0=default, 1=to say we use app from a webview app, 2=to say we use app from a webview app and keep ajax\n\t\t//dol_syslog(\"POST key=\".join(array_keys($_POST),',').' value='.join($_POST,','));\n\n\t\t// If in demo mode, we check we go to home page through the public/demo/index.php page\n\t\tif (!empty($dolibarr_main_demo) && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php') {  // We ask index page\n\t\t\tif (empty($_SERVER['HTTP_REFERER']) || !preg_match('/public/', $_SERVER['HTTP_REFERER'])) {\n\t\t\t\tdol_syslog(\"Call index page from another url than demo page (call is done from page \".$_SERVER['HTTP_REFERER'].\")\");\n\t\t\t\t$url = '';\n\t\t\t\t$url .= ($url ? '&' : '').($dol_hide_topmenu ? 'dol_hide_topmenu='.$dol_hide_topmenu : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_hide_leftmenu ? 'dol_hide_leftmenu='.$dol_hide_leftmenu : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_optimize_smallscreen ? 'dol_optimize_smallscreen='.$dol_optimize_smallscreen : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_no_mouse_hover ? 'dol_no_mouse_hover='.$dol_no_mouse_hover : '');\n\t\t\t\t$url .= ($url ? '&' : '').($dol_use_jmobile ? 'dol_use_jmobile='.$dol_use_jmobile : '');\n\t\t\t\t$url = DOL_URL_ROOT.'/public/demo/index.php'.($url ? '?'.$url : '');\n\t\t\t\theader(\"Location: \".$url);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t// Hooks for security access\n\t\t$action = '';\n\t\t$hookmanager->initHooks(array('login'));\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('beforeLoginAuthentication', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook < 0) {\n\t\t\t$test = false;\n\t\t\t$error++;\n\t\t}\n\n\t\t// Verification security graphic code\n\t\tif ($test && GETPOST(\"username\", \"alpha\", 2) && !empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA) && !isset($_SESSION['dol_bypass_antispam'])) {\n\t\t\t$sessionkey = 'dol_antispam_value';\n\t\t\t$ok = (array_key_exists($sessionkey, $_SESSION) === true && (strtolower($_SESSION[$sessionkey]) === strtolower(GETPOST('code', 'none'))));\n\n\t\t\t// Check code\n\t\t\tif (!$ok) {\n\t\t\t\tdol_syslog('Bad value for code, connexion refused');\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorBadValueForCode\");\n\t\t\t\t$test = false;\n\n\t\t\t\t// Call trigger for the \"security events\" log\n\t\t\t\t$user->trigger_mesg = 'ErrorBadValueForCode - login='.GETPOST(\"username\", \"alpha\", 2);\n\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action = '';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters = array('dol_authmode'=>$authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Note: exit is done later\n\t\t\t}\n\t\t}\n\n\t\t$allowedmethodtopostusername = 2;\n\t\tif (defined('MAIN_AUTHENTICATION_POST_METHOD')) {\n\t\t\t$allowedmethodtopostusername = constant('MAIN_AUTHENTICATION_POST_METHOD');\n\t\t}\n\t\t$usertotest = (!empty($_COOKIE['login_dolibarr']) ? preg_replace('/[^a-zA-Z0-9_\\-]/', '', $_COOKIE['login_dolibarr']) : GETPOST(\"username\", \"alpha\", $allowedmethodtopostusername));\n\t\t$passwordtotest = GETPOST('password', 'none', $allowedmethodtopostusername);\n\t\t$entitytotest = (GETPOST('entity', 'int') ? GETPOST('entity', 'int') : (!empty($conf->entity) ? $conf->entity : 1));\n\n\t\t// Define if we received data to test the login.\n\t\t$goontestloop = false;\n\t\tif (isset($_SERVER[\"REMOTE_USER\"]) && in_array('http', $authmode)) {\n\t\t\t$goontestloop = true;\n\t\t}\n\t\tif ($dolibarr_main_authentication == 'forceuser' && !empty($dolibarr_auto_user)) {\n\t\t\t$goontestloop = true;\n\t\t}\n\t\tif (GETPOST(\"username\", \"alpha\", $allowedmethodtopostusername) || !empty($_COOKIE['login_dolibarr']) || GETPOST('openid_mode', 'alpha', 1)) {\n\t\t\t$goontestloop = true;\n\t\t}\n\n\t\tif (!is_object($langs)) { // This can occurs when calling page with NOREQUIRETRAN defined, however we need langs for error messages.\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/translate.class.php';\n\t\t\t$langs = new Translate(\"\", $conf);\n\t\t\t$langcode = (GETPOST('lang', 'aZ09', 1) ?GETPOST('lang', 'aZ09', 1) : (empty($conf->global->MAIN_LANG_DEFAULT) ? 'auto' : $conf->global->MAIN_LANG_DEFAULT));\n\t\t\tif (defined('MAIN_LANG_DEFAULT')) {\n\t\t\t\t$langcode = constant('MAIN_LANG_DEFAULT');\n\t\t\t}\n\t\t\t$langs->setDefaultLang($langcode);\n\t\t}\n\n\t\t// Validation of login/pass/entity\n\t\t// If ok, the variable login will be returned\n\t\t// If error, we will put error message in session under the name dol_loginmesg\n\t\tif ($test && $goontestloop && (GETPOST('actionlogin', 'aZ09') == 'login' || $dolibarr_main_authentication != 'dolibarr')) {\n\t\t\t$login = checkLoginPassEntity($usertotest, $passwordtotest, $entitytotest, $authmode);\n\t\t\tif ($login === '--bad-login-validity--') {\n\t\t\t\t$login = '';\n\t\t\t}\n\n\t\t\tif ($login) {\n\t\t\t\t$dol_authmode = $conf->authmode; // This properties is defined only when logged, to say what mode was successfully used\n\t\t\t\t$dol_tz = $_POST[\"tz\"];\n\t\t\t\t$dol_tz_string = $_POST[\"tz_string\"];\n\t\t\t\t$dol_tz_string = preg_replace('/\\s*\\(.+\\)$/', '', $dol_tz_string);\n\t\t\t\t$dol_tz_string = preg_replace('/,/', '/', $dol_tz_string);\n\t\t\t\t$dol_tz_string = preg_replace('/\\s/', '_', $dol_tz_string);\n\t\t\t\t$dol_dst = 0;\n\t\t\t\t// Keep $_POST here. Do not use GETPOSTISSET\n\t\t\t\tif (isset($_POST[\"dst_first\"]) && isset($_POST[\"dst_second\"])) {\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t\t\t\t$datenow = dol_now();\n\t\t\t\t\t$datefirst = dol_stringtotime($_POST[\"dst_first\"]);\n\t\t\t\t\t$datesecond = dol_stringtotime($_POST[\"dst_second\"]);\n\t\t\t\t\tif ($datenow >= $datefirst && $datenow < $datesecond) {\n\t\t\t\t\t\t$dol_dst = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//print $datefirst.'-'.$datesecond.'-'.$datenow.'-'.$dol_tz.'-'.$dol_tzstring.'-'.$dol_dst; exit;\n\t\t\t}\n\n\t\t\tif (!$login) {\n\t\t\t\tdol_syslog('Bad password, connexion refused', LOG_DEBUG);\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t// Bad password. No authmode has found a good password.\n\t\t\t\t// We set a generic message if not defined inside function checkLoginPassEntity or subfunctions\n\t\t\t\tif (empty($_SESSION[\"dol_loginmesg\"])) {\n\t\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorBadLoginPassword\");\n\t\t\t\t}\n\n\t\t\t\t// Call trigger for the \"security events\" log\n\t\t\t\t$user->trigger_mesg = $langs->trans(\"ErrorBadLoginPassword\").' - login='.GETPOST(\"username\", \"alpha\", 2);\n\n\t\t\t\t// Call trigger\n\t\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\t\tif ($result < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\t\t\t\t// End call triggers\n\n\t\t\t\t// Hooks on failed login\n\t\t\t\t$action = '';\n\t\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\t\tif ($reshook < 0) {\n\t\t\t\t\t$error++;\n\t\t\t\t}\n\n\t\t\t\t// Note: exit is done in next chapter\n\t\t\t}\n\t\t}\n\n\t\t// End test login / passwords\n\t\tif (!$login || (in_array('ldap', $authmode) && empty($passwordtotest))) {\t// With LDAP we refused empty password because some LDAP are \"opened\" for anonymous access so connexion is a success.\n\t\t\t// No data to test login, so we show the login page.\n\t\t\tdol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].\" - action=\".GETPOST('action', 'aZ09').\" - actionlogin=\".GETPOST('actionlogin', 'aZ09').\" - showing the login form and exit\", LOG_INFO);\n\t\t\tif (defined('NOREDIRECTBYMAINTOLOGIN')) {\n\t\t\t\treturn 'ERROR_NOT_LOGGED';\n\t\t\t} else {\n\t\t\t\tif ($_SERVER[\"HTTP_USER_AGENT\"] == 'securitytest') {\n\t\t\t\t\thttp_response_code(401); // It makes easier to understand if session was broken during security tests\n\t\t\t\t}\n\t\t\t\tdol_loginfunction($langs, $conf, (!empty($mysoc) ? $mysoc : ''));\n\t\t\t}\n\t\t\texit;\n\t\t}\n\n\t\t$resultFetchUser = $user->fetch('', $login, '', 1, ($entitytotest > 0 ? $entitytotest : -1)); // login was retrieved previously when checking password.\n\t\tif ($resultFetchUser <= 0) {\n\t\t\tdol_syslog('User not found, connexion refused');\n\t\t\tsession_destroy();\n\t\t\tsession_set_cookie_params(0, '/', null, (empty($dolibarr_main_force_https) ? false : true), true); // Add tag secure and httponly on session cookie\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0) {\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\", $login);\n\n\t\t\t\t$user->trigger_mesg = 'ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0) {\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $user->error;\n\n\t\t\t\t$user->trigger_mesg = $user->error;\n\t\t\t}\n\n\t\t\t// Call trigger\n\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\n\t\t\t// Hooks on failed login\n\t\t\t$action = '';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\t$paramsurl = array();\n\t\t\tif (GETPOST('textbrowser', 'int')) {\n\t\t\t\t$paramsurl[] = 'textbrowser='.GETPOST('textbrowser', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('nojs', 'int')) {\n\t\t\t\t$paramsurl[] = 'nojs='.GETPOST('nojs', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('lang', 'aZ09')) {\n\t\t\t\t$paramsurl[] = 'lang='.GETPOST('lang', 'aZ09');\n\t\t\t}\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl) ? '?'.implode('&', $paramsurl) : ''));\n\t\t\texit;\n\t\t} else {\n\t\t\t// User is loaded, we may need to change language for him according to its choice\n\t\t\tif (!empty($user->conf->MAIN_LANG_DEFAULT)) {\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// We are already into an authenticated session\n\t\t$login = $_SESSION[\"dol_login\"];\n\t\t$entity = isset($_SESSION[\"dol_entity\"]) ? $_SESSION[\"dol_entity\"] : 0;\n\t\tdol_syslog(\"- This is an already logged session. _SESSION['dol_login']=\".$login.\" _SESSION['dol_entity']=\".$entity, LOG_DEBUG);\n\n\t\t$resultFetchUser = $user->fetch('', $login, '', 1, ($entity > 0 ? $entity : -1));\n\t\tif ($resultFetchUser <= 0) {\n\t\t\t// Account has been removed after login\n\t\t\tdol_syslog(\"Can't load user even if session logged. _SESSION['dol_login']=\".$login, LOG_WARNING);\n\t\t\tsession_destroy();\n\t\t\tsession_set_cookie_params(0, '/', null, (empty($dolibarr_main_force_https) ? false : true), true); // Add tag secure and httponly on session cookie\n\t\t\tsession_name($sessionname);\n\t\t\tsession_start();\n\n\t\t\tif ($resultFetchUser == 0) {\n\t\t\t\t// Load translation files required by page\n\t\t\t\t$langs->loadLangs(array('main', 'errors'));\n\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $langs->trans(\"ErrorCantLoadUserFromDolibarrDatabase\", $login);\n\n\t\t\t\t$user->trigger_mesg = 'ErrorCantLoadUserFromDolibarrDatabase - login='.$login;\n\t\t\t}\n\t\t\tif ($resultFetchUser < 0) {\n\t\t\t\t$_SESSION[\"dol_loginmesg\"] = $user->error;\n\n\t\t\t\t$user->trigger_mesg = $user->error;\n\t\t\t}\n\n\t\t\t// Call trigger\n\t\t\t$result = $user->call_trigger('USER_LOGIN_FAILED', $user);\n\t\t\tif ($result < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\t\t\t// End call triggers\n\n\t\t\t// Hooks on failed login\n\t\t\t$action = '';\n\t\t\t$hookmanager->initHooks(array('login'));\n\t\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginmesg'=>$_SESSION[\"dol_loginmesg\"]);\n\t\t\t$reshook = $hookmanager->executeHooks('afterLoginFailed', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\t\tif ($reshook < 0) {\n\t\t\t\t$error++;\n\t\t\t}\n\n\t\t\t$paramsurl = array();\n\t\t\tif (GETPOST('textbrowser', 'int')) {\n\t\t\t\t$paramsurl[] = 'textbrowser='.GETPOST('textbrowser', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('nojs', 'int')) {\n\t\t\t\t$paramsurl[] = 'nojs='.GETPOST('nojs', 'int');\n\t\t\t}\n\t\t\tif (GETPOST('lang', 'aZ09')) {\n\t\t\t\t$paramsurl[] = 'lang='.GETPOST('lang', 'aZ09');\n\t\t\t}\n\t\t\theader('Location: '.DOL_URL_ROOT.'/index.php'.(count($paramsurl) ? '?'.implode('&', $paramsurl) : ''));\n\t\t\texit;\n\t\t} else {\n\t\t\t// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n\t\t\t$hookmanager->initHooks(array('main'));\n\n\t\t\t// Code for search criteria persistence.\n\t\t\tif (!empty($_GET['save_lastsearch_values'])) {    // We must use $_GET here\n\t\t\t\t$relativepathstring = preg_replace('/\\?.*$/', '', $_SERVER[\"HTTP_REFERER\"]);\n\t\t\t\t$relativepathstring = preg_replace('/^https?:\\/\\/[^\\/]*/', '', $relativepathstring); // Get full path except host server\n\t\t\t\t// Clean $relativepathstring\n\t\t\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t\t\t}\n\t\t\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t\t\t//var_dump($relativepathstring);\n\n\t\t\t\t// We click on a link that leave a page we have to save search criteria, contextpage, limit and page. We save them from tmp to no tmp\n\t\t\t\tif (!empty($_SESSION['lastsearch_values_tmp_'.$relativepathstring])) {\n\t\t\t\t\t$_SESSION['lastsearch_values_'.$relativepathstring] = $_SESSION['lastsearch_values_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_values_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t\tif (!empty($_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring])) {\n\t\t\t\t\t$_SESSION['lastsearch_contextpage_'.$relativepathstring] = $_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t\tif (!empty($_SESSION['lastsearch_page_tmp_'.$relativepathstring]) && $_SESSION['lastsearch_page_tmp_'.$relativepathstring] > 0) {\n\t\t\t\t\t$_SESSION['lastsearch_page_'.$relativepathstring] = $_SESSION['lastsearch_page_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_page_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t\tif (!empty($_SESSION['lastsearch_limit_tmp_'.$relativepathstring]) && $_SESSION['lastsearch_limit_tmp_'.$relativepathstring] != $conf->liste_limit) {\n\t\t\t\t\t$_SESSION['lastsearch_limit_'.$relativepathstring] = $_SESSION['lastsearch_limit_tmp_'.$relativepathstring];\n\t\t\t\t\tunset($_SESSION['lastsearch_limit_tmp_'.$relativepathstring]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$action = '';\n\t\t\t$reshook = $hookmanager->executeHooks('updateSession', array(), $user, $action);\n\t\t\tif ($reshook < 0) {\n\t\t\t\tsetEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Is it a new session that has started ?\n\t// If we are here, this means authentication was successfull.\n\tif (!isset($_SESSION[\"dol_login\"])) {\n\t\t// New session for this login has started.\n\t\t$error = 0;\n\n\t\t// Store value into session (values always stored)\n\t\t$_SESSION[\"dol_login\"] = $user->login;\n\t\t$_SESSION[\"dol_authmode\"] = isset($dol_authmode) ? $dol_authmode : '';\n\t\t$_SESSION[\"dol_tz\"] = isset($dol_tz) ? $dol_tz : '';\n\t\t$_SESSION[\"dol_tz_string\"] = isset($dol_tz_string) ? $dol_tz_string : '';\n\t\t$_SESSION[\"dol_dst\"] = isset($dol_dst) ? $dol_dst : '';\n\t\t$_SESSION[\"dol_dst_observed\"] = isset($dol_dst_observed) ? $dol_dst_observed : '';\n\t\t$_SESSION[\"dol_dst_first\"] = isset($dol_dst_first) ? $dol_dst_first : '';\n\t\t$_SESSION[\"dol_dst_second\"] = isset($dol_dst_second) ? $dol_dst_second : '';\n\t\t$_SESSION[\"dol_screenwidth\"] = isset($dol_screenwidth) ? $dol_screenwidth : '';\n\t\t$_SESSION[\"dol_screenheight\"] = isset($dol_screenheight) ? $dol_screenheight : '';\n\t\t$_SESSION[\"dol_company\"] = getDolGlobalString(\"MAIN_INFO_SOCIETE_NOM\");\n\t\t$_SESSION[\"dol_entity\"] = $conf->entity;\n\t\t// Store value into session (values stored only if defined)\n\t\tif (!empty($dol_hide_topmenu)) {\n\t\t\t$_SESSION['dol_hide_topmenu'] = $dol_hide_topmenu;\n\t\t}\n\t\tif (!empty($dol_hide_leftmenu)) {\n\t\t\t$_SESSION['dol_hide_leftmenu'] = $dol_hide_leftmenu;\n\t\t}\n\t\tif (!empty($dol_optimize_smallscreen)) {\n\t\t\t$_SESSION['dol_optimize_smallscreen'] = $dol_optimize_smallscreen;\n\t\t}\n\t\tif (!empty($dol_no_mouse_hover)) {\n\t\t\t$_SESSION['dol_no_mouse_hover'] = $dol_no_mouse_hover;\n\t\t}\n\t\tif (!empty($dol_use_jmobile)) {\n\t\t\t$_SESSION['dol_use_jmobile'] = $dol_use_jmobile;\n\t\t}\n\n\t\tdol_syslog(\"This is a new started user session. _SESSION['dol_login']=\".$_SESSION[\"dol_login\"].\" Session id=\".session_id());\n\n\t\t$db->begin();\n\n\t\t$user->update_last_login_date();\n\n\t\t$loginfo = 'TZ='.$_SESSION[\"dol_tz\"].';TZString='.$_SESSION[\"dol_tz_string\"].';Screen='.$_SESSION[\"dol_screenwidth\"].'x'.$_SESSION[\"dol_screenheight\"];\n\n\t\t// Call triggers for the \"security events\" log\n\t\t$user->trigger_mesg = $loginfo;\n\n\t\t// Call trigger\n\t\t$result = $user->call_trigger('USER_LOGIN', $user);\n\t\tif ($result < 0) {\n\t\t\t$error++;\n\t\t}\n\t\t// End call triggers\n\n\t\t// Hooks on successfull login\n\t\t$action = '';\n\t\t$hookmanager->initHooks(array('login'));\n\t\t$parameters = array('dol_authmode'=>$dol_authmode, 'dol_loginfo'=>$loginfo);\n\t\t$reshook = $hookmanager->executeHooks('afterLogin', $parameters, $user, $action); // Note that $action and $object may have been modified by some hooks\n\t\tif ($reshook < 0) {\n\t\t\t$error++;\n\t\t}\n\n\t\tif ($error) {\n\t\t\t$db->rollback();\n\t\t\tsession_destroy();\n\t\t\tdol_print_error($db, 'Error in some triggers USER_LOGIN or in some hooks afterLogin');\n\t\t\texit;\n\t\t} else {\n\t\t\t$db->commit();\n\t\t}\n\n\t\t// Change landing page if defined.\n\t\t$landingpage = (empty($user->conf->MAIN_LANDING_PAGE) ? (empty($conf->global->MAIN_LANDING_PAGE) ? '' : $conf->global->MAIN_LANDING_PAGE) : $user->conf->MAIN_LANDING_PAGE);\n\t\tif (!empty($landingpage)) {    // Example: /index.php\n\t\t\t$newpath = dol_buildpath($landingpage, 1);\n\t\t\tif ($_SERVER[\"PHP_SELF\"] != $newpath) {   // not already on landing page (avoid infinite loop)\n\t\t\t\theader('Location: '.$newpath);\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If user admin, we force the rights-based modules\n\tif ($user->admin) {\n\t\t$user->rights->user->user->lire = 1;\n\t\t$user->rights->user->user->creer = 1;\n\t\t$user->rights->user->user->password = 1;\n\t\t$user->rights->user->user->supprimer = 1;\n\t\t$user->rights->user->self->creer = 1;\n\t\t$user->rights->user->self->password = 1;\n\t}\n\n\t/*\n\t * Overwrite some configs globals (try to avoid this and have code to use instead $user->conf->xxx)\n\t */\n\n\t// Set liste_limit\n\tif (isset($user->conf->MAIN_SIZE_LISTE_LIMIT)) {\n\t\t$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT; // Can be 0\n\t}\n\tif (isset($user->conf->PRODUIT_LIMIT_SIZE)) {\n\t\t$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE; // Can be 0\n\t}\n\n\t// Replace conf->css by personalized value if theme not forced\n\tif (empty($conf->global->MAIN_FORCETHEME) && !empty($user->conf->MAIN_THEME)) {\n\t\t$conf->theme = $user->conf->MAIN_THEME;\n\t\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php\";\n\t}\n}\n\n// Case forcing style from url\nif (GETPOST('theme', 'alpha')) {\n\t$conf->theme = GETPOST('theme', 'alpha', 1);\n\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\n// Set javascript option\nif (GETPOST('nojs', 'int')) {  // If javascript was not disabled on URL\n\t$conf->use_javascript_ajax = 0;\n} else {\n\tif (!empty($user->conf->MAIN_DISABLE_JAVASCRIPT)) {\n\t\t$conf->use_javascript_ajax = !$user->conf->MAIN_DISABLE_JAVASCRIPT;\n\t}\n}\n\n// Set MAIN_OPTIMIZEFORTEXTBROWSER for user (must be after login part)\nif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && !empty($user->conf->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t$conf->global->MAIN_OPTIMIZEFORTEXTBROWSER = $user->conf->MAIN_OPTIMIZEFORTEXTBROWSER;\n}\n\n// set MAIN_OPTIMIZEFORCOLORBLIND for user\n$conf->global->MAIN_OPTIMIZEFORCOLORBLIND = empty($user->conf->MAIN_OPTIMIZEFORCOLORBLIND) ? '' : $user->conf->MAIN_OPTIMIZEFORCOLORBLIND;\n\n// Set terminal output option according to conf->browser.\nif (GETPOST('dol_hide_leftmenu', 'int') || !empty($_SESSION['dol_hide_leftmenu'])) {\n\t$conf->dol_hide_leftmenu = 1;\n}\nif (GETPOST('dol_hide_topmenu', 'int') || !empty($_SESSION['dol_hide_topmenu'])) {\n\t$conf->dol_hide_topmenu = 1;\n}\nif (GETPOST('dol_optimize_smallscreen', 'int') || !empty($_SESSION['dol_optimize_smallscreen'])) {\n\t$conf->dol_optimize_smallscreen = 1;\n}\nif (GETPOST('dol_no_mouse_hover', 'int') || !empty($_SESSION['dol_no_mouse_hover'])) {\n\t$conf->dol_no_mouse_hover = 1;\n}\nif (GETPOST('dol_use_jmobile', 'int') || !empty($_SESSION['dol_use_jmobile'])) {\n\t$conf->dol_use_jmobile = 1;\n}\nif (!empty($conf->browser->layout) && $conf->browser->layout != 'classic') {\n\t$conf->dol_no_mouse_hover = 1;\n}\nif ((!empty($conf->browser->layout) && $conf->browser->layout == 'phone')\n\t|| (!empty($_SESSION['dol_screenwidth']) && $_SESSION['dol_screenwidth'] < 400)\n\t|| (!empty($_SESSION['dol_screenheight']) && $_SESSION['dol_screenheight'] < 400)\n) {\n\t$conf->dol_optimize_smallscreen = 1;\n}\n// Replace themes bugged with jmobile with eldy\nif (!empty($conf->dol_use_jmobile) && in_array($conf->theme, array('bureau2crea', 'cameleo', 'amarok'))) {\n\t$conf->theme = 'eldy';\n\t$conf->css = \"/theme/\".$conf->theme.\"/style.css.php\";\n}\n\nif (!defined('NOREQUIRETRAN')) {\n\tif (!GETPOST('lang', 'aZ09')) {\t// If language was not forced on URL\n\t\t// If user has chosen its own language\n\t\tif (!empty($user->conf->MAIN_LANG_DEFAULT)) {\n\t\t\t// If different than current language\n\t\t\t//print \">>>\".$langs->getDefaultLang().\"-\".$user->conf->MAIN_LANG_DEFAULT;\n\t\t\tif ($langs->getDefaultLang() != $user->conf->MAIN_LANG_DEFAULT) {\n\t\t\t\t$langs->setDefaultLang($user->conf->MAIN_LANG_DEFAULT);\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (!defined('NOLOGIN')) {\n\t// If the login is not recovered, it is identified with an account that does not exist.\n\t// Hacking attempt?\n\tif (!$user->login) {\n\t\taccessforbidden();\n\t}\n\n\t// Check if user is active\n\tif ($user->statut < 1) {\n\t\t// If not active, we refuse the user\n\t\t$langs->load(\"other\");\n\t\tdol_syslog(\"Authentication KO as login is disabled\", LOG_NOTICE);\n\t\taccessforbidden($langs->trans(\"ErrorLoginDisabled\"));\n\t\texit;\n\t}\n\n\t// Load permissions\n\t$user->getrights();\n}\n\ndol_syslog(\"--- Access to \".(empty($_SERVER[\"REQUEST_METHOD\"])?'':$_SERVER[\"REQUEST_METHOD\"].' ').$_SERVER[\"PHP_SELF\"].' - action='.GETPOST('action', 'aZ09').', massaction='.GETPOST('massaction', 'aZ09').(defined('NOTOKENRENEWAL') ? ' NOTOKENRENEWAL='.constant('NOTOKENRENEWAL') : ''), LOG_NOTICE);\n//Another call for easy debugg\n//dol_syslog(\"Access to \".$_SERVER[\"PHP_SELF\"].' '.$_SERVER[\"HTTP_REFERER\"].' GET='.join(',',array_keys($_GET)).'->'.join(',',$_GET).' POST:'.join(',',array_keys($_POST)).'->'.join(',',$_POST));\n\n// Load main languages files\nif (!defined('NOREQUIRETRAN')) {\n\t// Load translation files required by page\n\t$langs->loadLangs(array('main', 'dict'));\n}\n\n// Define some constants used for style of arrays\n$bc = array(0=>'class=\"impair\"', 1=>'class=\"pair\"');\n$bcdd = array(0=>'class=\"drag drop oddeven\"', 1=>'class=\"drag drop oddeven\"');\n$bcnd = array(0=>'class=\"nodrag nodrop nohover\"', 1=>'class=\"nodrag nodrop nohoverpair\"'); // Used for tr to add new lines\n$bctag = array(0=>'class=\"impair tagtr\"', 1=>'class=\"pair tagtr\"');\n\n// Define messages variables\n$mesg = ''; $warning = ''; $error = 0;\n// deprecated, see setEventMessages() and dol_htmloutput_events()\n$mesgs = array(); $warnings = array(); $errors = array();\n\n// Constants used to defined number of lines in textarea\nif (empty($conf->browser->firefox)) {\n\tdefine('ROWS_1', 1);\n\tdefine('ROWS_2', 2);\n\tdefine('ROWS_3', 3);\n\tdefine('ROWS_4', 4);\n\tdefine('ROWS_5', 5);\n\tdefine('ROWS_6', 6);\n\tdefine('ROWS_7', 7);\n\tdefine('ROWS_8', 8);\n\tdefine('ROWS_9', 9);\n} else {\n\tdefine('ROWS_1', 0);\n\tdefine('ROWS_2', 1);\n\tdefine('ROWS_3', 2);\n\tdefine('ROWS_4', 3);\n\tdefine('ROWS_5', 4);\n\tdefine('ROWS_6', 5);\n\tdefine('ROWS_7', 6);\n\tdefine('ROWS_8', 7);\n\tdefine('ROWS_9', 8);\n}\n\n$heightforframes = 50;\n\n// Init menu manager\nif (!defined('NOREQUIREMENU')) {\n\tif (empty($user->socid)) {    // If internal user or not defined\n\t\t$conf->standard_menu = (empty($conf->global->MAIN_MENU_STANDARD_FORCED) ? (empty($conf->global->MAIN_MENU_STANDARD) ? 'eldy_menu.php' : $conf->global->MAIN_MENU_STANDARD) : $conf->global->MAIN_MENU_STANDARD_FORCED);\n\t} else {\n\t\t// If external user\n\t\t$conf->standard_menu = (empty($conf->global->MAIN_MENUFRONT_STANDARD_FORCED) ? (empty($conf->global->MAIN_MENUFRONT_STANDARD) ? 'eldy_menu.php' : $conf->global->MAIN_MENUFRONT_STANDARD) : $conf->global->MAIN_MENUFRONT_STANDARD_FORCED);\n\t}\n\n\t// Load the menu manager (only if not already done)\n\t$file_menu = $conf->standard_menu;\n\tif (GETPOST('menu', 'alpha')) {\n\t\t$file_menu = GETPOST('menu', 'alpha'); // example: menu=eldy_menu.php\n\t}\n\tif (!class_exists('MenuManager')) {\n\t\t$menufound = 0;\n\t\t$dirmenus = array_merge(array(\"/core/menus/\"), (array) $conf->modules_parts['menus']);\n\t\tforeach ($dirmenus as $dirmenu) {\n\t\t\t$menufound = dol_include_once($dirmenu.\"standard/\".$file_menu);\n\t\t\tif (class_exists('MenuManager')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!class_exists('MenuManager')) {\t// If failed to include, we try with standard eldy_menu.php\n\t\t\tdol_syslog(\"You define a menu manager '\".$file_menu.\"' that can not be loaded.\", LOG_WARNING);\n\t\t\t$file_menu = 'eldy_menu.php';\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.\"/core/menus/standard/\".$file_menu;\n\t\t}\n\t}\n\t$menumanager = new MenuManager($db, empty($user->socid) ? 0 : 1);\n\t$menumanager->loadMenu();\n}\n\n\n\n// Functions\n\nif (!function_exists(\"llxHeader\")) {\n\t/**\n\t *\tShow HTML header HTML + BODY + Top menu + left menu + DIV\n\t *\n\t * @param \tstring \t\t\t$head\t\t\t\tOptionnal head lines\n\t * @param \tstring \t\t\t$title\t\t\t\tHTML title\n\t * @param\tstring\t\t\t$help_url\t\t\tUrl links to help page\n\t * \t\t                            \t\t\tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n\t *                                  \t\t\tFor other external page: http://server/url\n\t * @param\tstring\t\t\t$target\t\t\t\tTarget to use on links\n\t * @param \tint    \t\t\t$disablejs\t\t\tMore content into html header\n\t * @param \tint    \t\t\t$disablehead\t\tMore content into html header\n\t * @param \tarray|string  \t$arrayofjs\t\t\tArray of complementary js files\n\t * @param \tarray|string  \t$arrayofcss\t\t\tArray of complementary css files\n\t * @param\tstring\t\t\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n\t * @param   string  \t\t$morecssonbody      More CSS on body tag. For example 'classforhorizontalscrolloftabs'.\n\t * @param\tstring\t\t\t$replacemainareaby\tReplace call to main_area() by a print of this string\n\t * @param\tint\t\t\t\t$disablenofollow\tDisable the \"nofollow\" on page\n\t * @return\tvoid\n\t */\n\tfunction llxHeader($head = '', $title = '', $help_url = '', $target = '', $disablejs = 0, $disablehead = 0, $arrayofjs = '', $arrayofcss = '', $morequerystring = '', $morecssonbody = '', $replacemainareaby = '', $disablenofollow = 0)\n\t{\n\t\tglobal $conf;\n\n\t\t// html header\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss, 0, $disablenofollow);\n\n\t\t$tmpcsstouse = 'sidebar-collapse'.($morecssonbody ? ' '.$morecssonbody : '');\n\t\t// If theme MD and classic layer, we open the menulayer by default.\n\t\tif ($conf->theme == 'md' && !in_array($conf->browser->layout, array('phone', 'tablet')) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\tglobal $mainmenu;\n\t\t\tif ($mainmenu != 'website') {\n\t\t\t\t$tmpcsstouse = $morecssonbody; // We do not use sidebar-collpase by default to have menuhider open by default.\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORCOLORBLIND)) {\n\t\t\t$tmpcsstouse .= ' colorblind-'.strip_tags($conf->global->MAIN_OPTIMIZEFORCOLORBLIND);\n\t\t}\n\n\t\tprint '<body id=\"mainbody\" class=\"'.$tmpcsstouse.'\">'.\"\\n\";\n\n\t\t// top menu and left menu area\n\t\tif (empty($conf->dol_hide_topmenu) || GETPOST('dol_invisible_topmenu', 'int')) {\n\t\t\ttop_menu($head, $title, $target, $disablejs, $disablehead, $arrayofjs, $arrayofcss, $morequerystring, $help_url);\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu)) {\n\t\t\tleft_menu('', $help_url, '', '', 1, $title, 1); // $menumanager is retrieved with a global $menumanager inside this function\n\t\t}\n\n\t\t// main area\n\t\tif ($replacemainareaby) {\n\t\t\tprint $replacemainareaby;\n\t\t\treturn;\n\t\t}\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Show HTTP header. Called by top_htmlhead().\n *\n *  @param  string  $contenttype    Content type. For example, 'text/html'\n *  @param\tint\t\t$forcenocache\tForce disabling of cache for the page\n *  @return\tvoid\n */\nfunction top_httphead($contenttype = 'text/html', $forcenocache = 0)\n{\n\tglobal $db, $conf, $hookmanager;\n\n\tif ($contenttype == 'text/html') {\n\t\theader(\"Content-Type: text/html; charset=\".$conf->file->character_set_client);\n\t} else {\n\t\theader(\"Content-Type: \".$contenttype);\n\t}\n\n\t// Security options\n\theader(\"X-Content-Type-Options: nosniff\"); // With the nosniff option, if the server says the content is text/html, the browser will render it as text/html (note that most browsers now force this option to on)\n\tif (!defined('XFRAMEOPTIONS_ALLOWALL')) {\n\t\theader(\"X-Frame-Options: SAMEORIGIN\"); // Frames allowed only if on same domain (stop some XSS attacks)\n\t} else {\n\t\theader(\"X-Frame-Options: ALLOWALL\");\n\t}\n\t//header(\"X-XSS-Protection: 1\");      \t\t// XSS filtering protection of some browsers (note: use of Content-Security-Policy is more efficient). Disabled as deprecated.\n\tif (!defined('FORCECSP')) {\n\t\t//if (! isset($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY))\n\t\t//{\n\t\t//\t// A default security policy that keep usage of js external component like ckeditor, stripe, google, working\n\t\t//\t$contentsecuritypolicy = \"font-src *; img-src *; style-src * 'unsafe-inline' 'unsafe-eval'; default-src 'self' *.stripe.com 'unsafe-inline' 'unsafe-eval'; script-src 'self' *.stripe.com 'unsafe-inline' 'unsafe-eval'; frame-src 'self' *.stripe.com; connect-src 'self';\";\n\t\t//}\n\t\t//else\n\t\t$contentsecuritypolicy = empty($conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY) ? '' : $conf->global->MAIN_HTTP_CONTENT_SECURITY_POLICY;\n\n\t\tif (!is_object($hookmanager)) {\n\t\t\t$hookmanager = new HookManager($db);\n\t\t}\n\t\t$hookmanager->initHooks(array(\"main\"));\n\n\t\t$parameters = array('contentsecuritypolicy'=>$contentsecuritypolicy);\n\t\t$result = $hookmanager->executeHooks('setContentSecurityPolicy', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tif ($result > 0) {\n\t\t\t$contentsecuritypolicy = $hookmanager->resPrint; // Replace CSP\n\t\t} else {\n\t\t\t$contentsecuritypolicy .= $hookmanager->resPrint; // Concat CSP\n\t\t}\n\n\t\tif (!empty($contentsecuritypolicy)) {\n\t\t\t// For example, to restrict 'script', 'object', 'frames' or 'img' to some domains:\n\t\t\t// script-src https://api.google.com https://anotherhost.com; object-src https://youtube.com; frame-src https://youtube.com; img-src: https://static.example.com\n\t\t\t// For example, to restrict everything to one domain, except 'object', ...:\n\t\t\t// default-src https://cdn.example.net; object-src 'none'\n\t\t\t// For example, to restrict everything to itself except img that can be on other servers:\n\t\t\t// default-src 'self'; img-src *;\n\t\t\t// Pre-existing site that uses too much inline code to fix but wants to ensure resources are loaded only over https and disable plugins:\n\t\t\t// default-src http: https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'\n\t\t\theader(\"Content-Security-Policy: \".$contentsecuritypolicy);\n\t\t}\n\t} elseif (constant('FORCECSP')) {\n\t\theader(\"Content-Security-Policy: \".constant('FORCECSP'));\n\t}\n\tif ($forcenocache) {\n\t\theader(\"Cache-Control: no-cache, no-store, must-revalidate, max-age=0\");\n\t}\n}\n\n/**\n * Ouput html header of a page. It calls also top_httphead()\n * This code is also duplicated into security2.lib.php::dol_loginfunction\n *\n * @param \tstring \t$head\t\t\t Optionnal head lines\n * @param \tstring \t$title\t\t\t HTML title\n * @param \tint    \t$disablejs\t\t Disable js output\n * @param \tint    \t$disablehead\t Disable head output\n * @param \tarray  \t$arrayofjs\t\t Array of complementary js files\n * @param \tarray  \t$arrayofcss\t\t Array of complementary css files\n * @param \tint    \t$disablejmobile\t Disable jmobile (No more used)\n * @param   int     $disablenofollow Disable no follow tag\n * @return\tvoid\n */\nfunction top_htmlhead($head, $title = '', $disablejs = 0, $disablehead = 0, $arrayofjs = '', $arrayofcss = '', $disablejmobile = 0, $disablenofollow = 0)\n{\n\tglobal $db, $conf, $langs, $user, $mysoc, $hookmanager;\n\n\ttop_httphead();\n\n\tif (empty($conf->css)) {\n\t\t$conf->css = '/theme/eldy/style.css.php'; // If not defined, eldy by default\n\t}\n\n\tprint '<!doctype html>'.\"\\n\";\n\n\tif (!empty($conf->global->MAIN_USE_CACHE_MANIFEST)) {\n\t\tprint '<html lang=\"'.substr($langs->defaultlang, 0, 2).'\" manifest=\"'.DOL_URL_ROOT.'/cache.manifest\">'.\"\\n\";\n\t} else {\n\t\tprint '<html lang=\"'.substr($langs->defaultlang, 0, 2).'\">'.\"\\n\";\n\t}\n\t//print '<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fr\">'.\"\\n\";\n\tif (empty($disablehead)) {\n\t\tif (!is_object($hookmanager)) {\n\t\t\t$hookmanager = new HookManager($db);\n\t\t}\n\t\t$hookmanager->initHooks(array(\"main\"));\n\n\t\t$ext = 'layout='.$conf->browser->layout.'&amp;version='.urlencode(DOL_VERSION);\n\n\t\tprint \"<head>\\n\";\n\n\t\tif (GETPOST('dol_basehref', 'alpha')) {\n\t\t\tprint '<base href=\"'.dol_escape_htmltag(GETPOST('dol_basehref', 'alpha')).'\">'.\"\\n\";\n\t\t}\n\n\t\t// Displays meta\n\t\tprint '<meta charset=\"utf-8\">'.\"\\n\";\n\t\tprint '<meta name=\"robots\" content=\"noindex'.($disablenofollow ? '' : ',nofollow').'\">'.\"\\n\"; // Do not index\n\t\tprint '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">'.\"\\n\"; // Scale for mobile device\n\t\tprint '<meta name=\"author\" content=\"Dolibarr Development Team\">'.\"\\n\";\n\n\t\t// Favicon\n\t\t$favicon = DOL_URL_ROOT.'/theme/dolibarr_256x256_color.png';\n\t\tif (!empty($mysoc->logo_squarred_mini)) {\n\t\t\t$favicon = DOL_URL_ROOT.'/viewimage.php?cache=1&modulepart=mycompany&file='.urlencode('logos/thumbs/'.$mysoc->logo_squarred_mini);\n\t\t}\n\t\tif (!empty($conf->global->MAIN_FAVICON_URL)) {\n\t\t\t$favicon = $conf->global->MAIN_FAVICON_URL;\n\t\t}\n\t\tif (empty($conf->dol_use_jmobile)) {\n\t\t\tprint '<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"'.$favicon.'\"/>'.\"\\n\"; // Not required into an Android webview\n\t\t}\n\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"top\" title=\"'.$langs->trans(\"Home\").'\" href=\"'.(DOL_URL_ROOT?DOL_URL_ROOT:'/').'\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"copyright\" title=\"GNU General Public License\" href=\"https://www.gnu.org/copyleft/gpl.html#SEC1\">'.\"\\n\";\n\t\t//if (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) print '<link rel=\"author\" title=\"Dolibarr Development Team\" href=\"https://www.dolibarr.org\">'.\"\\n\";\n\n\t\t// Mobile appli like icon\n\t\t$manifest = DOL_URL_ROOT.'/theme/'.$conf->theme.'/manifest.json.php';\n\t\tif (!empty($manifest)) {\n\t\t\tprint '<link rel=\"manifest\" href=\"'.$manifest.'\" />'.\"\\n\";\n\t\t}\n\n\t\tif (!empty($conf->global->THEME_ELDY_TOPMENU_BACK1)) {\n\t\t\t// TODO: use auto theme color switch\n\t\t\tprint '<meta name=\"theme-color\" content=\"rgb('.$conf->global->THEME_ELDY_TOPMENU_BACK1.')\">'.\"\\n\";\n\t\t}\n\n\t\t// Auto refresh page\n\t\tif (GETPOST('autorefresh', 'int') > 0) {\n\t\t\tprint '<meta http-equiv=\"refresh\" content=\"'.GETPOST('autorefresh', 'int').'\">';\n\t\t}\n\n\t\t// Displays title\n\t\t$appli = constant('DOL_APPLICATION_TITLE');\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE;\n\t\t}\n\n\t\tprint '<title>';\n\t\t$titletoshow = '';\n\t\tif ($title && !empty($conf->global->MAIN_HTML_TITLE) && preg_match('/noapp/', $conf->global->MAIN_HTML_TITLE)) {\n\t\t\t$titletoshow = dol_htmlentities($title);\n\t\t} elseif ($title) {\n\t\t\t$titletoshow = dol_htmlentities($appli.' - '.$title);\n\t\t} else {\n\t\t\t$titletoshow = dol_htmlentities($appli);\n\t\t}\n\n\t\t$parameters = array('title'=>$titletoshow);\n\t\t$result = $hookmanager->executeHooks('setHtmlTitle', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tif ($result > 0) {\n\t\t\t$titletoshow = $hookmanager->resPrint; // Replace Title to show\n\t\t} else {\n\t\t\t$titletoshow .= $hookmanager->resPrint; // Concat to Title to show\n\t\t}\n\n\t\tprint $titletoshow;\n\t\tprint '</title>';\n\n\t\tprint \"\\n\";\n\n\t\tif (GETPOST('version', 'int')) {\n\t\t\t$ext = 'version='.GETPOST('version', 'int'); // usefull to force no cache on css/js\n\t\t}\n\n\t\t$themeparam = '?lang='.$langs->defaultlang.'&amp;theme='.$conf->theme.(GETPOST('optioncss', 'aZ09') ? '&amp;optioncss='.GETPOST('optioncss', 'aZ09', 1) : '').'&amp;userid='.$user->id.'&amp;entity='.$conf->entity;\n\t\t$themeparam .= ($ext ? '&amp;'.$ext : '').'&amp;revision='.getDolGlobalInt(\"MAIN_IHM_PARAMS_REV\");\n\t\tif (!empty($_SESSION['dol_resetcache'])) {\n\t\t\t$themeparam .= '&amp;dol_resetcache='.$_SESSION['dol_resetcache'];\n\t\t}\n\t\tif (GETPOSTISSET('dol_hide_topmenu')) {\n\t\t\t$themeparam .= '&amp;dol_hide_topmenu='.GETPOST('dol_hide_topmenu', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_hide_leftmenu')) {\n\t\t\t$themeparam .= '&amp;dol_hide_leftmenu='.GETPOST('dol_hide_leftmenu', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_optimize_smallscreen')) {\n\t\t\t$themeparam .= '&amp;dol_optimize_smallscreen='.GETPOST('dol_optimize_smallscreen', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_no_mouse_hover')) {\n\t\t\t$themeparam .= '&amp;dol_no_mouse_hover='.GETPOST('dol_no_mouse_hover', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('dol_use_jmobile')) {\n\t\t\t$themeparam .= '&amp;dol_use_jmobile='.GETPOST('dol_use_jmobile', 'int'); $conf->dol_use_jmobile = GETPOST('dol_use_jmobile', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('THEME_DARKMODEENABLED')) {\n\t\t\t$themeparam .= '&amp;THEME_DARKMODEENABLED='.GETPOST('THEME_DARKMODEENABLED', 'int');\n\t\t}\n\t\tif (GETPOSTISSET('THEME_SATURATE_RATIO')) {\n\t\t\t$themeparam .= '&amp;THEME_SATURATE_RATIO='.GETPOST('THEME_SATURATE_RATIO', 'int');\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_ENABLE_FONT_ROBOTO)) {\n\t\t\tprint '<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">'.\"\\n\";\n\t\t\tprint '<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@200;300;400;500;600&display=swap\" rel=\"stylesheet\">'.\"\\n\";\n\t\t}\n\n\t\tif (!defined('DISABLE_JQUERY') && !$disablejs && $conf->use_javascript_ajax) {\n\t\t\tprint '<!-- Includes CSS for JQuery (Ajax library) -->'.\"\\n\";\n\t\t\t$jquerytheme = 'base';\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_THEME)) {\n\t\t\t\t$jquerytheme = $conf->global->MAIN_USE_JQUERY_THEME;\n\t\t\t}\n\t\t\tif (constant('JS_JQUERY_UI')) {\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.JS_JQUERY_UI.'css/'.$jquerytheme.'/jquery-ui.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\"; // Forced JQuery\n\t\t\t} else {\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/css/'.$jquerytheme.'/jquery-ui.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\"; // JQuery\n\t\t\t}\n\t\t\tif (!defined('DISABLE_JQUERY_JNOTIFY')) {\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify-alt.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\"; // JNotify\n\t\t\t}\n\t\t\tif (!defined('DISABLE_SELECT2') && (!empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT'))) {     // jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\"...\n\t\t\t\t$tmpplugin = empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) ?constant('REQUIRE_JQUERY_MULTISELECT') : $conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/css/'.$tmpplugin.'.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!defined('DISABLE_FONT_AWSOME')) {\n\t\t\tprint '<!-- Includes CSS for font awesome -->'.\"\\n\";\n\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome-5/css/all.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\";\n\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.DOL_URL_ROOT.'/theme/common/fontawesome-5/css/v4-shims.min.css'.($ext ? '?'.$ext : '').'\">'.\"\\n\";\n\t\t}\n\n\t\tprint '<!-- Includes CSS for Dolibarr theme -->'.\"\\n\";\n\t\t// Output style sheets (optioncss='print' or ''). Note: $conf->css looks like '/theme/eldy/style.css.php'\n\t\t$themepath = dol_buildpath($conf->css, 1);\n\t\t$themesubdir = '';\n\t\tif (!empty($conf->modules_parts['theme'])) {\t// This slow down\n\t\t\tforeach ($conf->modules_parts['theme'] as $reldir) {\n\t\t\t\tif (file_exists(dol_buildpath($reldir.$conf->css, 0))) {\n\t\t\t\t\t$themepath = dol_buildpath($reldir.$conf->css, 1);\n\t\t\t\t\t$themesubdir = $reldir;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//print 'themepath='.$themepath.' themeparam='.$themeparam;exit;\n\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$themepath.$themeparam.'\">'.\"\\n\";\n\t\tif (!empty($conf->global->MAIN_FIX_FLASH_ON_CHROME)) {\n\t\t\tprint '<!-- Includes CSS that does not exists as a workaround of flash bug of chrome -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"filethatdoesnotexiststosolvechromeflashbug\">'.\"\\n\";\n\t\t}\n\n\t\t// CSS forced by modules (relative url starting with /)\n\t\tif (!empty($conf->modules_parts['css'])) {\n\t\t\t$arraycss = (array) $conf->modules_parts['css'];\n\t\t\tforeach ($arraycss as $modcss => $filescss) {\n\t\t\t\t$filescss = (array) $filescss; // To be sure filecss is an array\n\t\t\t\tforeach ($filescss as $cssfile) {\n\t\t\t\t\tif (empty($cssfile)) {\n\t\t\t\t\t\tdol_syslog(\"Warning: module \".$modcss.\" declared a css path file into its descriptor that is empty.\", LOG_WARNING);\n\t\t\t\t\t}\n\t\t\t\t\t// cssfile is a relative path\n\t\t\t\t\tprint '<!-- Includes CSS added by module '.$modcss.' -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" href=\"'.dol_buildpath($cssfile, 1);\n\t\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters, so browser cache is not used.\n\t\t\t\t\tif (!preg_match('/\\.css$/i', $cssfile)) {\n\t\t\t\t\t\tprint $themeparam;\n\t\t\t\t\t}\n\t\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// CSS forced by page in top_htmlhead call (relative url starting with /)\n\t\tif (is_array($arrayofcss)) {\n\t\t\tforeach ($arrayofcss as $cssfile) {\n\t\t\t\tif (preg_match('/^(http|\\/\\/)/i', $cssfile)) {\n\t\t\t\t\t$urltofile = $cssfile;\n\t\t\t\t} else {\n\t\t\t\t\t$urltofile = dol_buildpath($cssfile, 1);\n\t\t\t\t}\n\t\t\t\tprint '<!-- Includes CSS added by page -->'.\"\\n\".'<link rel=\"stylesheet\" type=\"text/css\" title=\"default\" href=\"'.$urltofile;\n\t\t\t\t// We add params only if page is not static, because some web server setup does not return content type text/css if url has parameters and browser cache is not used.\n\t\t\t\tif (!preg_match('/\\.css$/i', $cssfile)) {\n\t\t\t\t\tprint $themeparam;\n\t\t\t\t}\n\t\t\t\tprint '\">'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// Output standard javascript links\n\t\tif (!defined('DISABLE_JQUERY') && !$disablejs && !empty($conf->use_javascript_ajax)) {\n\t\t\t// JQuery. Must be before other includes\n\t\t\tprint '<!-- Includes JS for JQuery -->'.\"\\n\";\n\t\t\tif (defined('JS_JQUERY') && constant('JS_JQUERY')) {\n\t\t\t\tprint '<script src=\"'.JS_JQUERY.'jquery.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t/*if (! empty($conf->global->MAIN_FEATURES_LEVEL) && ! defined('JS_JQUERY_MIGRATE_DISABLED'))\n\t\t\t{\n\t\t\t\tif (defined('JS_JQUERY_MIGRATE') && constant('JS_JQUERY_MIGRATE')) print '<script src=\"'.JS_JQUERY_MIGRATE.'jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t\telse print '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-migrate.min.js'.($ext?'?'.$ext:'').'\"></script>'.\"\\n\";\n\t\t\t}*/\n\t\t\tif (defined('JS_JQUERY_UI') && constant('JS_JQUERY_UI')) {\n\t\t\t\tprint '<script src=\"'.JS_JQUERY_UI.'jquery-ui.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t} else {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/js/jquery-ui.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!defined('DISABLE_JQUERY_TABLEDND')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/tablednd/jquery.tablednd.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// jQuery jnotify\n\t\t\tif (empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && !defined('DISABLE_JQUERY_JNOTIFY')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jnotify/jquery.jnotify.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// Chart\n\t\t\tif ((empty($conf->global->MAIN_JS_GRAPH) || $conf->global->MAIN_JS_GRAPH == 'chart') && !defined('DISABLE_JS_GRAPH')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/nnnick/chartjs/dist/Chart.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// jQuery jeditable for Edit In Place features\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_JEDITABLE) && !defined('DISABLE_JQUERY_JEDITABLE')) {\n\t\t\t\tprint '<!-- JS to manage editInPlace feature -->'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-datepicker.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ui-autocomplete.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script>'.\"\\n\";\n\t\t\t\tprint 'var urlSaveInPlace = \\''.DOL_URL_ROOT.'/core/ajax/saveinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var urlLoadInPlace = \\''.DOL_URL_ROOT.'/core/ajax/loadinplace.php\\';'.\"\\n\";\n\t\t\t\tprint 'var tooltipInPlace = \\''.$langs->transnoentities('ClickToEdit').'\\';'.\"\\n\"; // Added in title attribute of span\n\t\t\t\tprint 'var placeholderInPlace = \\'&nbsp;\\';'.\"\\n\"; // If we put another string than $langs->trans(\"ClickToEdit\") here, nothing is shown. If we put empty string, there is error, Why ?\n\t\t\t\tprint 'var cancelInPlace = \\''.$langs->trans(\"Cancel\").'\\';'.\"\\n\";\n\t\t\t\tprint 'var submitInPlace = \\''.$langs->trans('Ok').'\\';'.\"\\n\";\n\t\t\t\tprint 'var indicatorInPlace = \\'<img src=\"'.DOL_URL_ROOT.\"/theme/\".$conf->theme.\"/img/working.gif\".'\">\\';'.\"\\n\";\n\t\t\t\tprint 'var withInPlace = 300;'; // width in pixel for default string edit\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/editinplace.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/jeditable/jquery.jeditable.ckeditor.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\t// jQuery Timepicker\n\t\t\tif (!empty($conf->global->MAIN_USE_JQUERY_TIMEPICKER) || defined('REQUIRE_JQUERY_TIMEPICKER')) {\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/timepicker/jquery-ui-timepicker-addon.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/timepicker.js.php?lang='.$langs->defaultlang.($ext ? '&amp;'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t\tif (!defined('DISABLE_SELECT2') && (!empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) || defined('REQUIRE_JQUERY_MULTISELECT'))) {\n\t\t\t\t// jQuery plugin \"mutiselect\", \"multiple-select\", \"select2\", ...\n\t\t\t\t$tmpplugin = empty($conf->global->MAIN_USE_JQUERY_MULTISELECT) ?constant('REQUIRE_JQUERY_MULTISELECT') : $conf->global->MAIN_USE_JQUERY_MULTISELECT;\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/'.$tmpplugin.'/dist/js/'.$tmpplugin.'.full.min.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\"; // We include full because we need the support of containerCssClass\n\t\t\t}\n\t\t\tif (!defined('DISABLE_MULTISELECT')) {     // jQuery plugin \"mutiselect\" to select with checkboxes. Can be removed once we have an enhanced search tool\n\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/includes/jquery/plugins/multiselect/jquery.multi-select.js'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!$disablejs && !empty($conf->use_javascript_ajax)) {\n\t\t\t// CKEditor\n\t\t\tif ((!empty($conf->fckeditor->enabled) && (empty($conf->global->FCKEDITOR_EDITORNAME) || $conf->global->FCKEDITOR_EDITORNAME == 'ckeditor') && !defined('DISABLE_CKEDITOR')) || defined('FORCE_CKEDITOR')) {\n\t\t\t\tprint '<!-- Includes JS for CKEditor -->'.\"\\n\";\n\t\t\t\t$pathckeditor = DOL_URL_ROOT.'/includes/ckeditor/ckeditor/';\n\t\t\t\t$jsckeditor = 'ckeditor.js';\n\t\t\t\tif (constant('JS_CKEDITOR')) {\n\t\t\t\t\t// To use external ckeditor 4 js lib\n\t\t\t\t\t$pathckeditor = constant('JS_CKEDITOR');\n\t\t\t\t}\n\t\t\t\tprint '<script>';\n\t\t\t\tprint '/* enable ckeditor by main.inc.php */';\n\t\t\t\tprint 'var CKEDITOR_BASEPATH = \\''.$pathckeditor.'\\';'.\"\\n\";\n\t\t\t\tprint 'var ckeditorConfig = \\''.dol_buildpath($themesubdir.'/theme/'.$conf->theme.'/ckeditor/config.js'.($ext ? '?'.$ext : ''), 1).'\\';'.\"\\n\"; // $themesubdir='' in standard usage\n\t\t\t\tprint 'var ckeditorFilebrowserBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n\t\t\t\tprint 'var ckeditorFilebrowserImageBrowseUrl = \\''.DOL_URL_ROOT.'/core/filemanagerdol/browser/default/browser.php?Type=Image&Connector='.DOL_URL_ROOT.'/core/filemanagerdol/connectors/php/connector.php\\';'.\"\\n\";\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t\tprint '<script src=\"'.$pathckeditor.$jsckeditor.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\tprint '<script>';\n\t\t\t\tif (GETPOST('mode', 'aZ09') == 'Full_inline') {\n\t\t\t\t\tprint 'CKEDITOR.disableAutoInline = false;'.\"\\n\";\n\t\t\t\t} else {\n\t\t\t\t\tprint 'CKEDITOR.disableAutoInline = true;'.\"\\n\";\n\t\t\t\t}\n\t\t\t\tprint '</script>'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Browser notifications (if NOREQUIREMENU is on, it is mostly a page for popup, so we do not enable notif too. We hide also for public pages).\n\t\t\tif (!defined('NOBROWSERNOTIF') && !defined('NOREQUIREMENU') && !defined('NOLOGIN')) {\n\t\t\t\t$enablebrowsernotif = false;\n\t\t\t\tif (!empty($conf->agenda->enabled) && !empty($conf->global->AGENDA_REMINDER_BROWSER)) {\n\t\t\t\t\t$enablebrowsernotif = true;\n\t\t\t\t}\n\t\t\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t\t\t$enablebrowsernotif = false;\n\t\t\t\t}\n\t\t\t\tif ($enablebrowsernotif) {\n\t\t\t\t\tprint '<!-- Includes JS of Dolibarr (browser layout = '.$conf->browser->layout.')-->'.\"\\n\";\n\t\t\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/lib_notification.js.php'.($ext ? '?'.$ext : '').'\"></script>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Global js function\n\t\t\tprint '<!-- Includes JS of Dolibarr -->'.\"\\n\";\n\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/lib_head.js.php?lang='.$langs->defaultlang.($ext ? '&'.$ext : '').'\"></script>'.\"\\n\";\n\n\t\t\t// JS forced by modules (relative url starting with /)\n\t\t\tif (!empty($conf->modules_parts['js'])) {\t\t// $conf->modules_parts['js'] is array('module'=>array('file1','file2'))\n\t\t\t\t$arrayjs = (array) $conf->modules_parts['js'];\n\t\t\t\tforeach ($arrayjs as $modjs => $filesjs) {\n\t\t\t\t\t$filesjs = (array) $filesjs; // To be sure filejs is an array\n\t\t\t\t\tforeach ($filesjs as $jsfile) {\n\t\t\t\t\t\t// jsfile is a relative path\n\t\t\t\t\t\tprint '<!-- Include JS added by module '.$modjs.'-->'.\"\\n\".'<script src=\"'.dol_buildpath($jsfile, 1).'\"></script>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// JS forced by page in top_htmlhead (relative url starting with /)\n\t\t\tif (is_array($arrayofjs)) {\n\t\t\t\tprint '<!-- Includes JS added by page -->'.\"\\n\";\n\t\t\t\tforeach ($arrayofjs as $jsfile) {\n\t\t\t\t\tif (preg_match('/^(http|\\/\\/)/i', $jsfile)) {\n\t\t\t\t\t\tprint '<script src=\"'.$jsfile.'\"></script>'.\"\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprint '<script src=\"'.dol_buildpath($jsfile, 1).'\"></script>'.\"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!empty($head)) {\n\t\t\tprint $head.\"\\n\";\n\t\t}\n\t\tif (!empty($conf->global->MAIN_HTML_HEADER)) {\n\t\t\tprint $conf->global->MAIN_HTML_HEADER.\"\\n\";\n\t\t}\n\n\t\t$parameters = array();\n\t\t$result = $hookmanager->executeHooks('addHtmlHeader', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tprint $hookmanager->resPrint; // Replace Title to show\n\n\t\tprint \"</head>\\n\\n\";\n\t}\n\n\t$conf->headerdone = 1; // To tell header was output\n}\n\n\n/**\n *  Show an HTML header + a BODY + The top menu bar\n *\n *  @param      string\t$head    \t\t\tLines in the HEAD\n *  @param      string\t$title   \t\t\tTitle of web page\n *  @param      string\t$target  \t\t\tTarget to use in menu links (Example: '' or '_top')\n *\t@param\t\tint\t\t$disablejs\t\t\tDo not output links to js (Ex: qd fonction utilisee par sous formulaire Ajax)\n *\t@param\t\tint\t\t$disablehead\t\tDo not output head section\n *\t@param\t\tarray\t$arrayofjs\t\t\tArray of js files to add in header\n *\t@param\t\tarray\t$arrayofcss\t\t\tArray of css files to add in header\n *  @param\t\tstring\t$morequerystring\tQuery string to add to the link \"print\" to get same parameters (use only if autodetect fails)\n *  @param      string\t$helppagename    \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                Syntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t                    For other external page: http://server/url\n *  @return\t\tvoid\n */\nfunction top_menu($head, $title = '', $target = '', $disablejs = 0, $disablehead = 0, $arrayofjs = '', $arrayofcss = '', $morequerystring = '', $helppagename = '')\n{\n\tglobal $user, $conf, $langs, $db;\n\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\tglobal $hookmanager, $menumanager;\n\n\t$searchform = '';\n\t$bookmarks = '';\n\n\t// Instantiate hooks for external modules\n\t$hookmanager->initHooks(array('toprightmenu'));\n\n\t$toprightmenu = '';\n\n\t// For backward compatibility with old modules\n\tif (empty($conf->headerdone)) {\n\t\t$disablenofollow = 0;\n\t\ttop_htmlhead($head, $title, $disablejs, $disablehead, $arrayofjs, $arrayofcss, 0, $disablenofollow);\n\t\tprint '<body id=\"mainbody\">';\n\t}\n\n\t/*\n\t * Top menu\n\t */\n\tif ((empty($conf->dol_hide_topmenu) || GETPOST('dol_invisible_topmenu', 'int')) && (!defined('NOREQUIREMENU') || !constant('NOREQUIREMENU'))) {\n\t\tif (!isset($form) || !is_object($form)) {\n\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';\n\t\t\t$form = new Form($db);\n\t\t}\n\n\t\tprint \"\\n\".'<!-- Start top horizontal -->'.\"\\n\";\n\n\t\tprint '<div class=\"side-nav-vert'.(GETPOST('dol_invisible_topmenu', 'int') ? ' hidden' : '').'\"><div id=\"id-top\">'; // dol_invisible_topmenu differs from dol_hide_topmenu: dol_invisible_topmenu means we output menu but we make it invisible.\n\n\t\t// Show menu entries\n\t\tprint '<div id=\"tmenu_tooltip'.(empty($conf->global->MAIN_MENU_INVERT) ? '' : 'invert').'\" class=\"tmenu\">'.\"\\n\";\n\t\t$menumanager->atarget = $target;\n\t\t$menumanager->showmenu('top', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // This contains a \\n\n\t\tprint \"</div>\\n\";\n\n\t\t// Define link to login card\n\t\t$appli = constant('DOL_APPLICATION_TITLE');\n\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE;\n\t\t\tif (preg_match('/\\d\\.\\d/', $appli)) {\n\t\t\t\tif (!preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) {\n\t\t\t\t\t$appli .= \" (\".DOL_VERSION.\")\"; // If new title contains a version that is different than core\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t\t}\n\t\t} else {\n\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_FEATURES_LEVEL)) {\n\t\t\t$appli .= \"<br>\".$langs->trans(\"LevelOfFeature\").': '.$conf->global->MAIN_FEATURES_LEVEL;\n\t\t}\n\n\t\t$logouttext = '';\n\t\t$logouthtmltext = '';\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t//$logouthtmltext=$appli.'<br>';\n\t\t\tif ($_SESSION[\"dol_authmode\"] != 'forceuser' && $_SESSION[\"dol_authmode\"] != 'http') {\n\t\t\t\t$logouthtmltext .= $langs->trans(\"Logout\").'<br>';\n\n\t\t\t\t$logouttext .= '<a accesskey=\"l\" href=\"'.DOL_URL_ROOT.'/user/logout.php\">';\n\t\t\t\t$logouttext .= img_picto($langs->trans('Logout'), 'sign-out', '', false, 0, 0, '', 'atoplogin');\n\t\t\t\t$logouttext .= '</a>';\n\t\t\t} else {\n\t\t\t\t$logouthtmltext .= $langs->trans(\"NoLogoutProcessWithAuthMode\", $_SESSION[\"dol_authmode\"]);\n\t\t\t\t$logouttext .= img_picto($langs->trans('Logout'), 'sign-out', '', false, 0, 0, '', 'atoplogin opacitymedium');\n\t\t\t}\n\t\t}\n\n\t\tprint '<div class=\"login_block usedropdown\">'.\"\\n\";\n\n\t\t$toprightmenu .= '<div class=\"login_block_other\">';\n\n\t\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t\t$parameters = array();\n\t\t$result = $hookmanager->executeHooks('printTopRightMenu', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tif (is_numeric($result)) {\n\t\t\tif ($result == 0) {\n\t\t\t\t$toprightmenu .= $hookmanager->resPrint; // add\n\t\t\t} else {\n\t\t\t\t$toprightmenu = $hookmanager->resPrint; // replace\n\t\t\t}\n\t\t} else {\n\t\t\t$toprightmenu .= $result; // For backward compatibility\n\t\t}\n\n\t\t// Link to module builder\n\t\tif (!empty($conf->modulebuilder->enabled)) {\n\t\t\t$text = '<a href=\"'.DOL_URL_ROOT.'/modulebuilder/index.php?mainmenu=home&leftmenu=admintools\" target=\"modulebuilder\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"ModuleBuilder\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text .= '<span class=\"fa fa-bug atoplogin valignmiddle\"></span>';\n\t\t\t$text .= '</a>';\n\t\t\t$toprightmenu .= $form->textwithtooltip('', $langs->trans(\"ModuleBuilder\"), 2, 1, $text, 'login_block_elem', 2);\n\t\t}\n\n\t\t// Link to print main content area\n\t\tif (empty($conf->global->MAIN_PRINT_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && $conf->browser->layout != 'phone') {\n\t\t\t$qs = dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\n\t\t\tif (is_array($_POST)) {\n\t\t\t\tforeach ($_POST as $key => $value) {\n\t\t\t\t\tif ($key !== 'action' && $key !== 'password' && !is_array($value)) {\n\t\t\t\t\t\t$qs .= '&'.$key.'='.urlencode($value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$qs .= (($qs && $morequerystring) ? '&' : '').$morequerystring;\n\t\t\t$text = '<a href=\"'.dol_escape_htmltag($_SERVER[\"PHP_SELF\"]).'?'.$qs.($qs ? '&' : '').'optioncss=print\" target=\"_blank\">';\n\t\t\t//$text.= img_picto(\":\".$langs->trans(\"PrintContentArea\"), 'printer_top.png', 'class=\"printer\"');\n\t\t\t$text .= '<span class=\"fa fa-print atoplogin valignmiddle\"></span>';\n\t\t\t$text .= '</a>';\n\t\t\t$toprightmenu .= $form->textwithtooltip('', $langs->trans(\"PrintContentArea\"), 2, 1, $text, 'login_block_elem', 2);\n\t\t}\n\n\t\t// Link to Dolibarr wiki pages\n\t\tif (empty($conf->global->MAIN_HELP_DISABLELINK) && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t$langs->load(\"help\");\n\n\t\t\t$helpbaseurl = '';\n\t\t\t$helppage = '';\n\t\t\t$mode = '';\n\t\t\t$helppresent = '';\n\n\t\t\tif (empty($helppagename)) {\n\t\t\t\t$helppagename = 'EN:User_documentation|FR:Documentation_utilisateur|ES:Documentaci\u00f3n_usuarios';\n\t\t\t} else {\n\t\t\t\t$helppresent = 'helppresent';\n\t\t\t}\n\n\t\t\t// Get helpbaseurl, helppage and mode from helppagename and langs\n\t\t\t$arrayres = getHelpParamFor($helppagename, $langs);\n\t\t\t$helpbaseurl = $arrayres['helpbaseurl'];\n\t\t\t$helppage = $arrayres['helppage'];\n\t\t\t$mode = $arrayres['mode'];\n\n\t\t\t// Link to help pages\n\t\t\tif ($helpbaseurl && $helppage) {\n\t\t\t\t$text = '';\n\t\t\t\t$title = $langs->trans($mode == 'wiki' ? 'GoToWikiHelpPage' : 'GoToHelpPage').'...';\n\t\t\t\tif ($mode == 'wiki') {\n\t\t\t\t\t$title .= '<br>'.$langs->trans(\"PageWiki\").' '.dol_escape_htmltag('\"'.strtr($helppage, '_', ' ').'\"');\n\t\t\t\t\tif ($helppresent) {\n\t\t\t\t\t\t$title .= ' <span class=\"opacitymedium\">('.$langs->trans(\"DedicatedPageAvailable\").')</span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$title .= ' <span class=\"opacitymedium\">('.$langs->trans(\"HomePage\").')</span>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$text .= '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"';\n\t\t\t\tif ($mode == 'wiki') {\n\t\t\t\t\t$text .= sprintf($helpbaseurl, urlencode(html_entity_decode($helppage)));\n\t\t\t\t} else {\n\t\t\t\t\t$text .= sprintf($helpbaseurl, $helppage);\n\t\t\t\t}\n\t\t\t\t$text .= '\">';\n\t\t\t\t$text .= '<span class=\"fa fa-question-circle atoplogin valignmiddle'.($helppresent ? ' '.$helppresent : '').'\"></span>';\n\t\t\t\t$text .= '<span class=\"fa fa-circle helppresentcircle'.($helppresent ? '' : ' unvisible').'\"></span>';\n\t\t\t\t$text .= '</a>';\n\t\t\t\t$toprightmenu .= $form->textwithtooltip('', $title, 2, 1, $text, 'login_block_elem', 2);\n\t\t\t}\n\n\t\t\t// Version\n\t\t\tif (!empty($conf->global->MAIN_SHOWDATABASENAMEINHELPPAGESLINK)) {\n\t\t\t\t$langs->load('admin');\n\t\t\t\t$appli .= '<br>'.$langs->trans(\"Database\").': '.$db->database_name;\n\t\t\t}\n\t\t}\n\n\t\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t$text = '<span class=\"aversion\"><span class=\"hideonsmartphone small\">'.DOL_VERSION.'</span></span>';\n\t\t\t$toprightmenu .= $form->textwithtooltip('', $appli, 2, 1, $text, 'login_block_elem', 2);\n\t\t}\n\n\t\t// Logout link\n\t\t$toprightmenu .= $form->textwithtooltip('', $logouthtmltext, 2, 1, $logouttext, 'login_block_elem logout-btn', 2);\n\n\t\t$toprightmenu .= '</div>'; // end div class=\"login_block_other\"\n\n\n\t\t// Add login user link\n\t\t$toprightmenu .= '<div class=\"login_block_user\">';\n\n\t\t// Login name with photo and tooltip\n\t\t$mode = -1;\n\t\t$toprightmenu .= '<div class=\"inline-block nowrap\"><div class=\"inline-block login_block_elem login_block_elem_name\" style=\"padding: 0px;\">';\n\n\t\tif (!empty($conf->global->MAIN_USE_TOP_MENU_SEARCH_DROPDOWN)) {\n\t\t\t// Add search dropdown\n\t\t\t$toprightmenu .= top_menu_search();\n\t\t}\n\n\t\tif (!empty($conf->global->MAIN_USE_TOP_MENU_QUICKADD_DROPDOWN)) {\n\t\t\t// Add search dropdown\n\t\t\t$toprightmenu .= top_menu_quickadd();\n\t\t}\n\n\t\t// Add bookmark dropdown\n\t\t$toprightmenu .= top_menu_bookmark();\n\n\t\t// Add user dropdown\n\t\t$toprightmenu .= top_menu_user();\n\n\t\t$toprightmenu .= '</div></div>';\n\n\t\t$toprightmenu .= '</div>'.\"\\n\";\n\n\n\t\tprint $toprightmenu;\n\n\t\tprint \"</div>\\n\"; // end div class=\"login_block\"\n\n\t\tprint '</div></div>';\n\n\t\tprint '<div style=\"clear: both;\"></div>';\n\t\tprint \"<!-- End top horizontal menu -->\\n\\n\";\n\t}\n\n\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) {\n\t\tprint '<!-- Begin div id-container --><div id=\"id-container\" class=\"id-container\">';\n\t}\n}\n\n\n/**\n * Build the tooltip on user login\n *\n * @param\tint\t\t\t$hideloginname\t\tHide login name. Show only the image.\n * @param\tstring\t\t$urllogout\t\t\tURL for logout\n * @return  string                  \t\tHTML content\n */\nfunction top_menu_user($hideloginname = 0, $urllogout = '')\n{\n\tglobal $langs, $conf, $db, $hookmanager, $user, $mysoc;\n\tglobal $dolibarr_main_authentication, $dolibarr_main_demo;\n\tglobal $menumanager;\n\n\t$userImage = $userDropDownImage = '';\n\tif (!empty($user->photo)) {\n\t\t$userImage          = Form::showphoto('userphoto', $user, 0, 0, 0, 'photouserphoto userphoto', 'small', 0, 1);\n\t\t$userDropDownImage  = Form::showphoto('userphoto', $user, 0, 0, 0, 'dropdown-user-image', 'small', 0, 1);\n\t} else {\n\t\t$nophoto = '/public/theme/common/user_anonymous.png';\n\t\tif ($user->gender == 'man') {\n\t\t\t$nophoto = '/public/theme/common/user_man.png';\n\t\t}\n\t\tif ($user->gender == 'woman') {\n\t\t\t$nophoto = '/public/theme/common/user_woman.png';\n\t\t}\n\n\t\t$userImage = '<img class=\"photo photouserphoto userphoto\" alt=\"No photo\" src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t\t$userDropDownImage = '<img class=\"photo dropdown-user-image\" alt=\"No photo\" src=\"'.DOL_URL_ROOT.$nophoto.'\">';\n\t}\n\n\t$dropdownBody = '';\n\t$dropdownBody .= '<span id=\"topmenulogincompanyinfo-btn\"><i class=\"fa fa-caret-right\"></i> '.$langs->trans(\"ShowCompanyInfos\").'</span>';\n\t$dropdownBody .= '<div id=\"topmenulogincompanyinfo\" >';\n\n\tif (!empty($conf->global->MAIN_INFO_SIREN)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId1Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_SIREN).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_SIRET)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId2Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_SIRET).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_APE)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId3Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_APE).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_RCS)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId4Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_RCS).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_PROFID5)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId5Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_PROFID5).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_PROFID6)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->transcountry(\"ProfId6Short\", $mysoc->country_code).'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_PROFID6).'</span>';\n\t}\n\tif (!empty($conf->global->MAIN_INFO_TVAINTRA)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"VATIntraShort\").'</b>: <span>'.showValueWithClipboardCPButton($conf->global->MAIN_INFO_TVAINTRA).'</span>';\n\t}\n\n\t$dropdownBody .= '</div>';\n\n\t$dropdownBody .= '<br>';\n\t$dropdownBody .= '<span id=\"topmenuloginmoreinfo-btn\"><i class=\"fa fa-caret-right\"></i> '.$langs->trans(\"ShowMoreInfos\").'</span>';\n\t$dropdownBody .= '<div id=\"topmenuloginmoreinfo\" >';\n\n\t// login infos\n\tif (!empty($user->admin)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"Administrator\").'</b>: '.yn($user->admin);\n\t}\n\tif (!empty($user->socid)) {\t// Add thirdparty for external users\n\t\t$thirdpartystatic = new Societe($db);\n\t\t$thirdpartystatic->fetch($user->socid);\n\t\t$companylink = ' '.$thirdpartystatic->getNomUrl(2); // picto only of company\n\t\t$company = ' ('.$langs->trans(\"Company\").': '.$thirdpartystatic->name.')';\n\t}\n\t$type = ($user->socid ? $langs->trans(\"External\").$company : $langs->trans(\"Internal\"));\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Type\").':</b> '.$type;\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Status\").'</b>: '.$user->getLibStatut(0);\n\t$dropdownBody .= '<br>';\n\n\t$dropdownBody .= '<br><u>'.$langs->trans(\"Session\").'</u>';\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"IPAddress\").'</b>: '.dol_escape_htmltag($_SERVER[\"REMOTE_ADDR\"]);\n\tif (!empty($conf->global->MAIN_MODULE_MULTICOMPANY)) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"ConnectedOnMultiCompany\").':</b> '.$conf->entity.' (user entity '.$user->entity.')';\n\t}\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"AuthenticationMode\").':</b> '.$_SESSION[\"dol_authmode\"].(empty($dolibarr_main_demo) ? '' : ' (demo)');\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"ConnectedSince\").':</b> '.dol_print_date($user->datelastlogin, \"dayhour\", 'tzuser');\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"PreviousConnexion\").':</b> '.dol_print_date($user->datepreviouslogin, \"dayhour\", 'tzuser');\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"CurrentTheme\").':</b> '.$conf->theme;\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"CurrentMenuManager\").':</b> '.$menumanager->name;\n\t$langFlag = picto_from_langcode($langs->getDefaultLang());\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"CurrentUserLanguage\").':</b> '.($langFlag ? $langFlag.' ' : '').$langs->getDefaultLang();\n\n\t$tz = (int) $_SESSION['dol_tz'] + (int) $_SESSION['dol_dst'];\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"ClientTZ\").':</b> '.($tz ? ($tz >= 0 ? '+' : '').$tz : '');\n\t$dropdownBody .= ' ('.$_SESSION['dol_tz_string'].')';\n\t//$dropdownBody .= ' &nbsp; &nbsp; &nbsp; '.$langs->trans(\"DaylingSavingTime\").': ';\n\t//if ($_SESSION['dol_dst'] > 0) $dropdownBody .= yn(1);\n\t//else $dropdownBody .= yn(0);\n\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Browser\").':</b> '.$conf->browser->name.($conf->browser->version ? ' '.$conf->browser->version : '').' ('.dol_escape_htmltag($_SERVER['HTTP_USER_AGENT']).')';\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Layout\").':</b> '.$conf->browser->layout;\n\t$dropdownBody .= '<br><b>'.$langs->trans(\"Screen\").':</b> '.$_SESSION['dol_screenwidth'].' x '.$_SESSION['dol_screenheight'];\n\tif ($conf->browser->layout == 'phone') {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"Phone\").':</b> '.$langs->trans(\"Yes\");\n\t}\n\tif (!empty($_SESSION[\"disablemodules\"])) {\n\t\t$dropdownBody .= '<br><b>'.$langs->trans(\"DisabledModules\").':</b> <br>'.join(', ', explode(',', $_SESSION[\"disablemodules\"]));\n\t}\n\t$dropdownBody .= '</div>';\n\n\t// Execute hook\n\t$parameters = array('user'=>$user, 'langs' => $langs);\n\t$result = $hookmanager->executeHooks('printTopRightMenuLoginDropdownBody', $parameters); // Note that $action and $object may have been modified by some hooks\n\tif (is_numeric($result)) {\n\t\tif ($result == 0) {\n\t\t\t$dropdownBody .= $hookmanager->resPrint; // add\n\t\t} else {\n\t\t\t$dropdownBody = $hookmanager->resPrint; // replace\n\t\t}\n\t}\n\n\tif (empty($urllogout)) {\n\t\t$urllogout = DOL_URL_ROOT.'/user/logout.php';\n\t}\n\t$logoutLink = '<a accesskey=\"l\" href=\"'.$urllogout.'\" class=\"button-top-menu-dropdown\" ><i class=\"fa fa-sign-out-alt\"></i> '.$langs->trans(\"Logout\").'</a>';\n\t$profilLink = '<a accesskey=\"l\" href=\"'.DOL_URL_ROOT.'/user/card.php?id='.$user->id.'\" class=\"button-top-menu-dropdown\" ><i class=\"fa fa-user\"></i>  '.$langs->trans(\"Card\").'</a>';\n\n\n\t$profilName = $user->getFullName($langs).' ('.$user->login.')';\n\n\tif (!empty($user->admin)) {\n\t\t$profilName = '<i class=\"far fa-star classfortooltip\" title=\"'.$langs->trans(\"Administrator\").'\" ></i> '.$profilName;\n\t}\n\n\t// Define version to show\n\t$appli = constant('DOL_APPLICATION_TITLE');\n\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE;\n\t\tif (preg_match('/\\d\\.\\d/', $appli)) {\n\t\t\tif (!preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) {\n\t\t\t\t$appli .= \" (\".DOL_VERSION.\")\"; // If new title contains a version that is different than core\n\t\t\t}\n\t\t} else {\n\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t}\n\t} else {\n\t\t$appli .= \" \".DOL_VERSION;\n\t}\n\n\tif (empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t$btnUser = '<!-- div for user link -->\n\t    <div id=\"topmenu-login-dropdown\" class=\"userimg atoplogin dropdown user user-menu inline-block\">\n\t        <a href=\"'.DOL_URL_ROOT.'/user/card.php?id='.$user->id.'\" class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\">\n\t            '.$userImage.'<span class=\"hidden-xs maxwidth200 atoploginusername hideonsmartphone paddingleft\">'.dol_trunc($user->firstname ? $user->firstname : $user->login, 10).'</span>\n\t        </a>\n\t        <div class=\"dropdown-menu\">\n\t            <!-- User image -->\n\t            <div class=\"user-header\">\n\t                '.$userDropDownImage.'\n\t                <p>\n\t                    '.$profilName.'<br>';\n\t\tif ($user->datelastlogin) {\n\t\t\t$title = $langs->trans(\"ConnectedSince\").' : '.dol_print_date($user->datelastlogin, \"dayhour\", 'tzuser');\n\t\t\tif ($user->datepreviouslogin) {\n\t\t\t\t$title .= '<br>'.$langs->trans(\"PreviousConnexion\").' : '.dol_print_date($user->datepreviouslogin, \"dayhour\", 'tzuser');\n\t\t\t}\n\t\t}\n\t\t$btnUser .= '<small class=\"classfortooltip\" title=\"'.dol_escape_htmltag($title).'\" ><i class=\"fa fa-user-clock\"></i> '.dol_print_date($user->datelastlogin, \"dayhour\", 'tzuser').'</small><br>';\n\t\tif ($user->datepreviouslogin) {\n\t\t\t$btnUser .= '<small class=\"classfortooltip\" title=\"'.dol_escape_htmltag($title).'\" ><i class=\"fa fa-user-clock opacitymedium\"></i> '.dol_print_date($user->datepreviouslogin, \"dayhour\", 'tzuser').'</small><br>';\n\t\t}\n\n\t\t//$btnUser .= '<small class=\"classfortooltip\"><i class=\"fa fa-cog\"></i> '.$langs->trans(\"Version\").' '.$appli.'</small>';\n\t\t$btnUser .= '\n\t                </p>\n\t            </div>\n\n\t            <!-- Menu Body -->\n\t            <div class=\"user-body\">'.$dropdownBody.'</div>\n\n\t            <!-- Menu Footer-->\n\t            <div class=\"user-footer\">\n\t                <div class=\"pull-left\">\n\t                    '.$profilLink.'\n\t                </div>\n\t                <div class=\"pull-right\">\n\t                    '.$logoutLink.'\n\t                </div>\n\t                <div style=\"clear:both;\"></div>\n\t            </div>\n\n\t        </div>\n\t    </div>';\n\t} else {\n\t\t$btnUser = '<!-- div for user link -->\n\t    <div id=\"topmenu-login-dropdown\" class=\"userimg atoplogin dropdown user user-menu  inline-block\">\n\t    \t<a href=\"'.DOL_URL_ROOT.'/user/card.php?id='.$user->id.'\">\n\t    \t'.$userImage.'\n\t    \t\t<span class=\"hidden-xs maxwidth200 atoploginusername hideonsmartphone\">'.dol_trunc($user->firstname ? $user->firstname : $user->login, 10).'</span>\n\t    \t\t</a>\n\t\t</div>';\n\t}\n\n\tif (!defined('JS_JQUERY_DISABLE_DROPDOWN') && !empty($conf->use_javascript_ajax)) {    // This may be set by some pages that use different jquery version to avoid errors\n\t\t$btnUser .= '\n        <!-- Code to show/hide the user drop-down -->\n        <script>\n        $( document ).ready(function() {\n            $(document).on(\"click\", function(event) {\n                if (!$(event.target).closest(\"#topmenu-login-dropdown\").length) {\n\t\t\t\t\t//console.log(\"close login dropdown\");\n\t\t\t\t\t// Hide the menus.\n                    $(\"#topmenu-login-dropdown\").removeClass(\"open\");\n                }\n            });\n\t\t\t';\n\n\t\tif ($conf->theme != 'md') {\n\t\t\t$btnUser .= '\n\t            $(\"#topmenu-login-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n\t\t\t\t\tconsole.log(\"toggle login dropdown\");\n\t\t\t\t\tevent.preventDefault();\n\t                $(\"#topmenu-login-dropdown\").toggleClass(\"open\");\n\t            });\n\n\t            $(\"#topmenulogincompanyinfo-btn\").on(\"click\", function() {\n\t                $(\"#topmenulogincompanyinfo\").slideToggle();\n\t            });\n\n\t            $(\"#topmenuloginmoreinfo-btn\").on(\"click\", function() {\n\t                $(\"#topmenuloginmoreinfo\").slideToggle();\n\t            });';\n\t\t}\n\n\t\t$btnUser .= '\n        });\n        </script>\n        ';\n\t}\n\n\treturn $btnUser;\n}\n\n/**\n * Build the tooltip on top menu quick add\n *\n * @return  string                  HTML content\n */\nfunction top_menu_quickadd()\n{\n\tglobal $langs, $conf, $db, $hookmanager, $user;\n\tglobal $menumanager;\n\n\t$html = '';\n\t// Define $dropDownQuickAddHtml\n\t$dropDownQuickAddHtml = '<div class=\"dropdown-header bookmark-header center\">';\n\t$dropDownQuickAddHtml .= $langs->trans('QuickAdd');\n\t$dropDownQuickAddHtml .= '</div>';\n\n\t$dropDownQuickAddHtml .= '<div class=\"quickadd-body dropdown-body\">';\n\t$dropDownQuickAddHtml .= '<div class=\"quickadd\">';\n\tif (!empty($conf->societe->enabled) && $user->rights->societe->creer) {\n\t\t$langs->load(\"companies\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Thirdparty link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/societe/card.php?action=create\" title=\"'.$langs->trans(\"MenuNewThirdParty\").'\">\n                    '. img_picto('', 'object_company') .'<br>'. $langs->trans(\"ThirdParty\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->societe->enabled) && $user->rights->societe->contact->creer) {\n\t\t$langs->load(\"companies\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Contact link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/contact/card.php?action=create\" title=\"'.$langs->trans(\"NewContactAddress\").'\">\n                    '. img_picto('', 'object_contact') .'<br>'. $langs->trans(\"Contact\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->propal->enabled) && $user->rights->propale->creer) {\n\t\t$langs->load(\"propal\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Propal link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/comm/propal/card.php?action=create\" title=\"'.$langs->trans(\"NewPropal\").'\">\n                    '. img_picto('', 'object_propal') .'<br>'. $langs->trans(\"Proposal\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->commande->enabled) && $user->rights->commande->creer) {\n\t\t$langs->load(\"orders\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Order link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/commande/card.php?action=create\" title=\"'.$langs->trans(\"NewOrder\").'\">\n                    '. img_picto('', 'object_order') .'<br>'. $langs->trans(\"Order\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->facture->enabled) && $user->rights->facture->creer) {\n\t\t$langs->load(\"bills\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Invoice link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/compta/facture/card.php?action=create\" title=\"'.$langs->trans(\"NewBill\").'\">\n                    '. img_picto('', 'object_bill') .'<br>'. $langs->trans(\"Bill\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->contrat->enabled) && $user->rights->contrat->creer) {\n\t\t$langs->load(\"contracts\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Contract link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/compta/facture/card.php?action=create\" title=\"'.$langs->trans(\"NewContractSubscription\").'\">\n                    '. img_picto('', 'object_contract') .'<br>'. $langs->trans(\"Contract\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->supplier_proposal->enabled) && $user->rights->supplier_proposal->creer) {\n\t\t$langs->load(\"supplier_proposal\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Supplier proposal link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/supplier_proposal/card.php?action=create\" title=\"'.$langs->trans(\"NewAskPrice\").'\">\n                    '. img_picto('', 'object_propal') .'<br>'. $langs->trans(\"AskPrice\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif ((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD) && $user->rights->fournisseur->commande->creer) || (!empty($conf->supplier_order->enabled) && $user->rights->supplier_order->creer)) {\n\t\t$langs->load(\"orders\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Supplier order link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/fourn/commande/card.php?action=create\" title=\"'.$langs->trans(\"NewSupplierOrderShort\").'\">\n                    '. img_picto('', 'object_order') .'<br>'. $langs->trans(\"SupplierOrder\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif ((!empty($conf->fournisseur->enabled) && empty($conf->global->MAIN_USE_NEW_SUPPLIERMOD) && $user->rights->fournisseur->facture->creer) || (!empty($conf->supplier_invoice->enabled) && $user->rights->supplier_invoice->creer)) {\n\t\t$langs->load(\"bills\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Supplier invoice link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/fourn/facture/card.php?action=create\" title=\"'.$langs->trans(\"NewBill\").'\">\n                    '. img_picto('', 'object_bill') .'<br>'. $langs->trans(\"SupplierBill\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->product->enabled) && $user->rights->produit->creer) {\n\t\t$langs->load(\"products\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Product link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/product/card.php?action=create&amp;type=0\" title=\"'.$langs->trans(\"NewProduct\").'\">\n                    '. img_picto('', 'object_product') .'<br>'. $langs->trans(\"Product\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->service->enabled) && $user->rights->service->creer) {\n\t\t$langs->load(\"products\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Service link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/product/card.php?action=create&amp;type=1\" title=\"'.$langs->trans(\"NewService\").'\">\n                    '. img_picto('', 'object_service') .'<br>'. $langs->trans(\"Service\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->expensereport->enabled) && $user->rights->expensereport->creer) {\n\t\t$langs->load(\"trips\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Expense report link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/expensereport/card.php?action=create&fk_user_author='.$user->id.'\" title=\"'.$langs->trans(\"AddTrip\").'\">\n                    '. img_picto('', 'object_trip') .'<br>'. $langs->trans(\"ExpenseReport\") .'</a>\n                </div>\n                ';\n\t}\n\n\tif (!empty($conf->holiday->enabled) && $user->rights->holiday->write) {\n\t\t$langs->load(\"holiday\");\n\t\t$dropDownQuickAddHtml .= '\n                <!-- Holiday link -->\n                <div class=\"quickaddblock center\">\n                    <a class=\"quickadddropdown-icon-link\" href=\"'.DOL_URL_ROOT.'/holiday/card.php?action=create&fuserid='.$user->id.'\" title=\"'.$langs->trans(\"AddCP\").'\">\n                    '. img_picto('', 'object_holiday') .'<br>'. $langs->trans(\"Holidays\") .'</a>\n                </div>\n                ';\n\t}\n\n\t// Execute hook printTopRightMenu (hooks should output string like '<div class=\"login\"><a href=\"\">mylink</a></div>')\n\t$parameters = array();\n\t$result = $hookmanager->executeHooks('printQuickAddBlock', $parameters); // Note that $action and $object may have been modified by some hooks\n\tif (is_numeric($result)) {\n\t\tif ($result == 0) {\n\t\t\t$dropDownQuickAddHtml .= $hookmanager->resPrint; // add\n\t\t} else {\n\t\t\t$dropDownQuickAddHtml = $hookmanager->resPrint; // replace\n\t\t}\n\t} else {\n\t\t$dropDownQuickAddHtml .= $result; // For backward compatibility\n\t}\n\n\t$dropDownQuickAddHtml .= '</div>';\n\t$dropDownQuickAddHtml .= '</div>';\n\n\t$html .= '<!-- div for quick add link -->\n    <div id=\"topmenu-quickadd-dropdown\" class=\"atoplogin dropdown inline-block\">\n        <a class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\" href=\"#\" title=\"'.$langs->trans('QuickAdd').' ('.$langs->trans('QuickAddMenuShortCut').')\">\n            <i class=\"fa fa-plus-circle\" ></i>\n        </a>\n\n        <div class=\"dropdown-menu\">\n            '.$dropDownQuickAddHtml.'\n        </div>\n    </div>';\n\t$html .= '\n        <!-- Code to show/hide the user drop-down -->\n        <script>\n        $( document ).ready(function() {\n            $(document).on(\"click\", function(event) {\n                if (!$(event.target).closest(\"#topmenu-quickadd-dropdown\").length) {\n                    // Hide the menus.\n                    $(\"#topmenu-quickadd-dropdown\").removeClass(\"open\");\n                }\n            });\n            $(\"#topmenu-quickadd-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n                openQuickAddDropDown();\n            });\n            // Key map shortcut\n            $(document).keydown(function(e){\n                  if( e.which === 76 && e.ctrlKey && e.shiftKey ){\n                     console.log(\\'control + shift + l : trigger open quick add dropdown\\');\n                     openQuickAddDropDown();\n                  }\n            });\n\n\n            var openQuickAddDropDown = function() {\n                event.preventDefault();\n                $(\"#topmenu-quickadd-dropdown\").toggleClass(\"open\");\n                //$(\"#top-quickadd-search-input\").focus();\n            }\n        });\n        </script>\n        ';\n\treturn $html;\n}\n\n/**\n * Build the tooltip on top menu bookmark\n *\n * @return  string                  HTML content\n */\nfunction top_menu_bookmark()\n{\n\tglobal $langs, $conf, $db, $user;\n\n\t$html = '';\n\n\t// Define $bookmarks\n\tif (empty($conf->bookmark->enabled) || empty($user->rights->bookmark->lire)) {\n\t\treturn $html;\n\t}\n\n\tif (!defined('JS_JQUERY_DISABLE_DROPDOWN') && !empty($conf->use_javascript_ajax)) {\t    // This may be set by some pages that use different jquery version to avoid errors\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/bookmarks/bookmarks.lib.php';\n\t\t$langs->load(\"bookmarks\");\n\n\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) {\n\t\t\t$html .= '<div id=\"topmenu-bookmark-dropdown\" class=\"dropdown inline-block\">';\n\t\t\t$html .= printDropdownBookmarksList();\n\t\t\t$html .= '</div>';\n\t\t} else {\n\t\t\t$html .= '<!-- div for bookmark link -->\n\t        <div id=\"topmenu-bookmark-dropdown\" class=\"dropdown inline-block\">\n\t            <a class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\" href=\"#\" title=\"'.$langs->trans('Bookmarks').' ('.$langs->trans('BookmarksMenuShortCut').')\">\n\t                <i class=\"fa fa-star\" ></i>\n\t            </a>\n\t            <div class=\"dropdown-menu\">\n\t                '.printDropdownBookmarksList().'\n\t            </div>\n\t        </div>';\n\n\t\t\t$html .= '\n\t        <!-- Code to show/hide the bookmark drop-down -->\n\t        <script>\n\t        $( document ).ready(function() {\n\t            $(document).on(\"click\", function(event) {\n\t                if (!$(event.target).closest(\"#topmenu-bookmark-dropdown\").length) {\n\t\t\t\t\t\t//console.log(\"close bookmark dropdown - we click outside\");\n\t                    // Hide the menus.\n\t                    $(\"#topmenu-bookmark-dropdown\").removeClass(\"open\");\n\t                }\n\t            });\n\n\t            $(\"#topmenu-bookmark-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n\t\t\t\t\tconsole.log(\"toggle bookmark dropdown\");\n\t\t\t\t\topenBookMarkDropDown();\n\t            });\n\n\t            // Key map shortcut\n\t            $(document).keydown(function(e){\n\t                  if( e.which === 77 && e.ctrlKey && e.shiftKey ){\n\t                     console.log(\\'control + shift + m : trigger open bookmark dropdown\\');\n\t                     openBookMarkDropDown();\n\t                  }\n\t            });\n\n\n\t            var openBookMarkDropDown = function() {\n\t                event.preventDefault();\n\t                $(\"#topmenu-bookmark-dropdown\").toggleClass(\"open\");\n\t                $(\"#top-bookmark-search-input\").focus();\n\t            }\n\n\t        });\n\t        </script>\n\t        ';\n\t\t}\n\t}\n\treturn $html;\n}\n\n/**\n * Build the tooltip on top menu tsearch\n *\n * @return  string                  HTML content\n */\nfunction top_menu_search()\n{\n\tglobal $langs, $conf, $db, $user, $hookmanager;\n\n\t$html = '';\n\n\t$usedbyinclude = 1;\n\t$arrayresult = null;\n\tinclude DOL_DOCUMENT_ROOT.'/core/ajax/selectsearchbox.php'; // This set $arrayresult\n\n\t$defaultAction = '';\n\t$buttonList = '<div class=\"dropdown-global-search-button-list\" >';\n\t// Menu with all searchable items\n\tforeach ($arrayresult as $keyItem => $item) {\n\t\tif (empty($defaultAction)) {\n\t\t\t$defaultAction = $item['url'];\n\t\t}\n\t\t$buttonList .= '<button class=\"dropdown-item global-search-item\" data-target=\"'.dol_escape_htmltag($item['url']).'\" >';\n\t\t$buttonList .= $item['text'];\n\t\t$buttonList .= '</button>';\n\t}\n\t$buttonList .= '</div>';\n\n\n\t$searchInput = '<input name=\"sall\" id=\"top-global-search-input\" class=\"dropdown-search-input\" placeholder=\"'.$langs->trans('Search').'\" autocomplete=\"off\" >';\n\n\t$dropDownHtml = '<form id=\"top-menu-action-search\" name=\"actionsearch\" method=\"GET\" action=\"'.$defaultAction.'\" >';\n\n\t$dropDownHtml .= '\n        <!-- search input -->\n        <div class=\"dropdown-header search-dropdown-header\">\n            ' . $searchInput.'\n        </div>\n    ';\n\n\t$dropDownHtml .= '\n        <!-- Menu Body -->\n        <div class=\"dropdown-body search-dropdown-body\">\n        '.$buttonList.'\n        </div>\n        ';\n\n\t$dropDownHtml .= '</form>';\n\n\n\t$html .= '<!-- div for Global Search -->\n    <div id=\"topmenu-global-search-dropdown\" class=\"atoplogin dropdown inline-block\">\n        <a class=\"dropdown-toggle login-dropdown-a\" data-toggle=\"dropdown\" href=\"#\" title=\"'.$langs->trans('Search').' ('.$langs->trans('SearchMenuShortCut').')\">\n            <i class=\"fa fa-search\" ></i>\n        </a>\n        <div class=\"dropdown-menu dropdown-search\">\n            '.$dropDownHtml.'\n        </div>\n    </div>';\n\n\t$html .= '\n    <!-- Code to show/hide the user drop-down -->\n    <script>\n    $( document ).ready(function() {\n\n        // prevent submiting form on press ENTER\n        $(\"#top-global-search-input\").keydown(function (e) {\n            if (e.keyCode == 13) {\n                var inputs = $(this).parents(\"form\").eq(0).find(\":button\");\n                if (inputs[inputs.index(this) + 1] != null) {\n                    inputs[inputs.index(this) + 1].focus();\n                }\n                e.preventDefault();\n                return false;\n            }\n        });\n\n        // arrow key nav\n        $(document).keydown(function(e) {\n\t\t\t// Get the focused element:\n\t\t\tvar $focused = $(\":focus\");\n\t\t\tif($focused.length && $focused.hasClass(\"global-search-item\")){\n\n           \t\t// UP - move to the previous line\n\t\t\t\tif (e.keyCode == 38) {\n\t\t\t\t    e.preventDefault();\n\t\t\t\t\t$focused.prev().focus();\n\t\t\t\t}\n\n\t\t\t\t// DOWN - move to the next line\n\t\t\t\tif (e.keyCode == 40) {\n\t\t\t\t    e.preventDefault();\n\t\t\t\t\t$focused.next().focus();\n\t\t\t\t}\n\t\t\t}\n        });\n\n\n        // submit form action\n        $(\".dropdown-global-search-button-list .global-search-item\").on(\"click\", function(event) {\n            $(\"#top-menu-action-search\").attr(\"action\", $(this).data(\"target\"));\n            $(\"#top-menu-action-search\").submit();\n        });\n\n        // close drop down\n        $(document).on(\"click\", function(event) {\n\t\t\tif (!$(event.target).closest(\"#topmenu-global-search-dropdown\").length) {\n\t\t\t\tconsole.log(\"click close search - we click outside\");\n                // Hide the menus.\n                $(\"#topmenu-global-search-dropdown\").removeClass(\"open\");\n            }\n        });\n\n        // Open drop down\n        $(\"#topmenu-global-search-dropdown .dropdown-toggle\").on(\"click\", function(event) {\n\t\t\tconsole.log(\"toggle search dropdown\");\n            openGlobalSearchDropDown();\n        });\n\n        // Key map shortcut\n        $(document).keydown(function(e){\n              if( e.which === 70 && e.ctrlKey && e.shiftKey ){\n                 console.log(\\'control + shift + f : trigger open global-search dropdown\\');\n                 openGlobalSearchDropDown();\n              }\n        });\n\n\n        var openGlobalSearchDropDown = function() {\n            $(\"#topmenu-global-search-dropdown\").toggleClass(\"open\");\n            $(\"#top-global-search-input\").focus();\n        }\n\n    });\n    </script>\n    ';\n\n\treturn $html;\n}\n\n/**\n *  Show left menu bar\n *\n *  @param  array\t$menu_array_before \t       \tTable of menu entries to show before entries of menu handler. This param is deprectaed and must be provided to ''.\n *  @param  string\t$helppagename    \t       \tName of wiki page for help ('' by default).\n * \t\t\t\t     \t\t                   \tSyntax is: For a wiki page: EN:EnglishPage|FR:FrenchPage|ES:SpanishPage\n * \t\t\t\t\t\t\t\t\t         \tFor other external page: http://server/url\n *  @param  string\t$notused             \t\tDeprecated. Used in past to add content into left menu. Hooks can be used now.\n *  @param  array\t$menu_array_after           Table of menu entries to show after entries of menu handler\n *  @param  int\t\t$leftmenuwithoutmainarea    Must be set to 1. 0 by default for backward compatibility with old modules.\n *  @param  string\t$title                      Title of web page\n *  @param  string  $acceptdelayedhtml          1 if caller request to have html delayed content not returned but saved into global $delayedhtmlcontent (so caller can show it at end of page to avoid flash FOUC effect)\n *  @return\tvoid\n */\nfunction left_menu($menu_array_before, $helppagename = '', $notused = '', $menu_array_after = '', $leftmenuwithoutmainarea = 0, $title = '', $acceptdelayedhtml = 0)\n{\n\tglobal $user, $conf, $langs, $db, $form;\n\tglobal $hookmanager, $menumanager;\n\n\t$searchform = '';\n\t$bookmarks = '';\n\n\tif (!empty($menu_array_before)) {\n\t\tdol_syslog(\"Deprecated parameter menu_array_before was used when calling main::left_menu function. Menu entries of module should now be defined into module descriptor and not provided when calling left_menu.\", LOG_WARNING);\n\t}\n\n\tif (empty($conf->dol_hide_leftmenu) && (!defined('NOREQUIREMENU') || !constant('NOREQUIREMENU'))) {\n\t\t// Instantiate hooks for external modules\n\t\t$hookmanager->initHooks(array('searchform', 'leftblock'));\n\n\t\tprint \"\\n\".'<!-- Begin side-nav id-left -->'.\"\\n\".'<div class=\"side-nav\"><div id=\"id-left\">'.\"\\n\";\n\n\t\tif ($conf->browser->layout == 'phone') {\n\t\t\t$conf->global->MAIN_USE_OLD_SEARCH_FORM = 1; // Select into select2 is awfull on smartphone. TODO Is this still true with select2 v4 ?\n\t\t}\n\n\t\tprint \"\\n\";\n\n\t\tif (!is_object($form)) {\n\t\t\t$form = new Form($db);\n\t\t}\n\t\t$selected = -1;\n\t\tif (empty($conf->global->MAIN_USE_TOP_MENU_SEARCH_DROPDOWN)) {\n\t\t\t$usedbyinclude = 1;\n\t\t\t$arrayresult = null;\n\t\t\tinclude DOL_DOCUMENT_ROOT.'/core/ajax/selectsearchbox.php'; // This set $arrayresult\n\n\t\t\tif ($conf->use_javascript_ajax && empty($conf->global->MAIN_USE_OLD_SEARCH_FORM)) {\n\t\t\t\t$searchform .= $form->selectArrayFilter('searchselectcombo', $arrayresult, $selected, '', 1, 0, (empty($conf->global->MAIN_SEARCHBOX_CONTENT_LOADED_BEFORE_KEY) ? 1 : 0), 'vmenusearchselectcombo', 1, $langs->trans(\"Search\"), 1);\n\t\t\t} else {\n\t\t\t\tif (is_array($arrayresult)) {\n\t\t\t\t\tforeach ($arrayresult as $key => $val) {\n\t\t\t\t\t\t$searchform .= printSearchForm($val['url'], $val['url'], $val['label'], 'maxwidth125', 'sall', $val['shortcut'], 'searchleft'.$key, $val['img']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Execute hook printSearchForm\n\t\t\t$parameters = array('searchform' => $searchform);\n\t\t\t$reshook = $hookmanager->executeHooks('printSearchForm', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\t\tif (empty($reshook)) {\n\t\t\t\t$searchform .= $hookmanager->resPrint;\n\t\t\t} else {\n\t\t\t\t$searchform = $hookmanager->resPrint;\n\t\t\t}\n\n\t\t\t// Force special value for $searchform\n\t\t\tif (!empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) || empty($conf->use_javascript_ajax)) {\n\t\t\t\t$urltosearch = DOL_URL_ROOT.'/core/search_page.php?showtitlebefore=1';\n\t\t\t\t$searchform = '<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"'.$urltosearch.'\" accesskey=\"s\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div></div>';\n\t\t\t} elseif ($conf->use_javascript_ajax && !empty($conf->global->MAIN_USE_OLD_SEARCH_FORM)) {\n\t\t\t\t$searchform = '<div class=\"blockvmenuimpair blockvmenusearchphone\"><div id=\"divsearchforms1\"><a href=\"#\" alt=\"'.dol_escape_htmltag($langs->trans(\"ShowSearchFields\")).'\">'.$langs->trans(\"Search\").'...</a></div><div id=\"divsearchforms2\" style=\"display: none\">'.$searchform.'</div>';\n\t\t\t\t$searchform .= '<script>\n            \tjQuery(document).ready(function () {\n            \t\tjQuery(\"#divsearchforms1\").click(function(){\n\t                   jQuery(\"#divsearchforms2\").toggle();\n\t               });\n            \t});\n                </script>' . \"\\n\";\n\t\t\t\t$searchform .= '</div>';\n\t\t\t}\n\t\t}\n\n\t\t// Left column\n\t\tprint '<!-- Begin left menu -->'.\"\\n\";\n\n\t\tprint '<div class=\"vmenu\"'.(empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) ? '' : ' title=\"Left menu\"').'>'.\"\\n\\n\";\n\n\t\t// Show left menu with other forms\n\t\t$menumanager->menu_array = $menu_array_before;\n\t\t$menumanager->menu_array_after = $menu_array_after;\n\t\t$menumanager->showmenu('left', array('searchform'=>$searchform, 'bookmarks'=>$bookmarks)); // output menu_array and menu found in database\n\n\t\t// Dolibarr version + help + bug report link\n\t\tprint \"\\n\";\n\t\tprint \"<!-- Begin Help Block-->\\n\";\n\t\tprint '<div id=\"blockvmenuhelp\" class=\"blockvmenuhelp\">'.\"\\n\";\n\n\t\t// Version\n\t\tif (!empty($conf->global->MAIN_SHOW_VERSION)) {    // Version is already on help picto and on login page.\n\t\t\t$doliurl = 'https://www.dolibarr.org';\n\t\t\t//local communities\n\t\t\tif (preg_match('/fr/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.fr';\n\t\t\t}\n\t\t\tif (preg_match('/es/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.es';\n\t\t\t}\n\t\t\tif (preg_match('/de/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.de';\n\t\t\t}\n\t\t\tif (preg_match('/it/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.it';\n\t\t\t}\n\t\t\tif (preg_match('/gr/i', $langs->defaultlang)) {\n\t\t\t\t$doliurl = 'https://www.dolibarr.gr';\n\t\t\t}\n\n\t\t\t$appli = constant('DOL_APPLICATION_TITLE');\n\t\t\tif (!empty($conf->global->MAIN_APPLICATION_TITLE)) {\n\t\t\t\t$appli = $conf->global->MAIN_APPLICATION_TITLE; $doliurl = '';\n\t\t\t\tif (preg_match('/\\d\\.\\d/', $appli)) {\n\t\t\t\t\tif (!preg_match('/'.preg_quote(DOL_VERSION).'/', $appli)) {\n\t\t\t\t\t\t$appli .= \" (\".DOL_VERSION.\")\"; // If new title contains a version that is different than core\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$appli .= \" \".DOL_VERSION;\n\t\t\t}\n\t\t\tprint '<div id=\"blockvmenuhelpapp\" class=\"blockvmenuhelp\">';\n\t\t\tif ($doliurl) {\n\t\t\t\tprint '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$doliurl.'\">';\n\t\t\t} else {\n\t\t\t\tprint '<span class=\"help\">';\n\t\t\t}\n\t\t\tprint $appli;\n\t\t\tif ($doliurl) {\n\t\t\t\tprint '</a>';\n\t\t\t} else {\n\t\t\t\tprint '</span>';\n\t\t\t}\n\t\t\tprint '</div>'.\"\\n\";\n\t\t}\n\n\t\t// Link to bugtrack\n\t\tif (!empty($conf->global->MAIN_BUGTRACK_ENABLELINK)) {\n\t\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\tif ($conf->global->MAIN_BUGTRACK_ENABLELINK == 'github') {\n\t\t\t\t$bugbaseurl = 'https://github.com/Dolibarr/dolibarr/issues/new?labels=Bug';\n\t\t\t\t$bugbaseurl .= '&title=';\n\t\t\t\t$bugbaseurl .= urlencode(\"Bug: \");\n\t\t\t\t$bugbaseurl .= '&body=';\n\t\t\t\t$bugbaseurl .= urlencode(\"# Instructions\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"*This is a template to help you report good issues. You may use [Github Markdown](https://help.github.com/articles/getting-started-with-writing-and-formatting-on-github/) syntax to format your issue report.*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"*Please:*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- *replace the bracket enclosed texts with meaningful information*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- *remove any unused sub-section*\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"# Bug\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Short description*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Environment\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **Version**: \" . DOL_VERSION . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **OS**: \" . php_uname('s') . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **Web server**: \" . $_SERVER[\"SERVER_SOFTWARE\"] . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **PHP**: \" . php_sapi_name() . ' ' . phpversion() . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **Database**: \" . $db::LABEL . ' ' . $db->getVersion() . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"- **URL(s)**: \" . $_SERVER[\"REQUEST_URI\"] . \"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Expected and actual behavior\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Verbose description*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Steps to reproduce the behavior\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Verbose description*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## [Attached files](https://help.github.com/articles/issue-attachments) (Screenshots, screencasts, dolibarr.log, debugging informations\u2026)\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"[*Files*]\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\n\t\t\t\t$bugbaseurl .= urlencode(\"\\n\");\n\t\t\t\t$bugbaseurl .= urlencode(\"## Report\\n\");\n\t\t\t} elseif (!empty($conf->global->MAIN_BUGTRACK_ENABLELINK)) {\n\t\t\t\t$bugbaseurl = $conf->global->MAIN_BUGTRACK_ENABLELINK;\n\t\t\t} else {\n\t\t\t\t$bugbaseurl = \"\";\n\t\t\t}\n\n\t\t\t// Execute hook printBugtrackInfo\n\t\t\t$parameters = array('bugbaseurl' => $bugbaseurl);\n\t\t\t$reshook = $hookmanager->executeHooks('printBugtrackInfo', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\t\tif (empty($reshook)) {\n\t\t\t\t$bugbaseurl .= $hookmanager->resPrint;\n\t\t\t} else {\n\t\t\t\t$bugbaseurl = $hookmanager->resPrint;\n\t\t\t}\n\n\t\t\tprint '<div id=\"blockvmenuhelpbugreport\" class=\"blockvmenuhelp\">';\n\t\t\tprint '<a class=\"help\" target=\"_blank\" rel=\"noopener\" href=\"'.$bugbaseurl.'\">'.$langs->trans(\"FindBug\").'</a>';\n\t\t\tprint '</div>';\n\t\t}\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End Help Block-->\\n\";\n\t\tprint \"\\n\";\n\n\t\tprint \"</div>\\n\";\n\t\tprint \"<!-- End left menu -->\\n\";\n\t\tprint \"\\n\";\n\n\t\t// Execute hook printLeftBlock\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('printLeftBlock', $parameters); // Note that $action and $object may have been modified by some hooks\n\t\tprint $hookmanager->resPrint;\n\n\t\tprint '</div></div> <!-- End side-nav id-left -->'; // End div id=\"side-nav\" div id=\"id-left\"\n\t}\n\n\tprint \"\\n\";\n\tprint '<!-- Begin right area -->'.\"\\n\";\n\n\tif (empty($leftmenuwithoutmainarea)) {\n\t\tmain_area($title);\n\t}\n}\n\n\n/**\n *  Begin main area\n *\n *  @param\tstring\t$title\t\tTitle\n *  @return\tvoid\n */\nfunction main_area($title = '')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->dol_hide_leftmenu)) {\n\t\tprint '<div id=\"id-right\">';\n\t}\n\n\tprint \"\\n\";\n\n\tprint '<!-- Begin div class=\"fiche\" -->'.\"\\n\".'<div class=\"fiche\">'.\"\\n\";\n\n\tif (!empty($conf->global->MAIN_ONLY_LOGIN_ALLOWED)) {\n\t\tprint info_admin($langs->trans(\"WarningYouAreInMaintenanceMode\", $conf->global->MAIN_ONLY_LOGIN_ALLOWED), 0, 0, 1, 'warning maintenancemode');\n\t}\n\n\t// Permit to add user company information on each printed document by setting SHOW_SOCINFO_ON_PRINT\n\tif (!empty($conf->global->SHOW_SOCINFO_ON_PRINT) && GETPOST('optioncss', 'aZ09') == 'print' && empty(GETPOST('disable_show_socinfo_on_print', 'az09'))) {\n\t\tglobal $hookmanager;\n\t\t$hookmanager->initHooks(array('main'));\n\t\t$parameters = array();\n\t\t$reshook = $hookmanager->executeHooks('showSocinfoOnPrint', $parameters);\n\t\tif (empty($reshook)) {\n\t\t\tprint '<!-- Begin show mysoc info header -->'.\"\\n\";\n\t\t\tprint '<div id=\"mysoc-info-header\">'.\"\\n\";\n\t\t\tprint '<table class=\"centpercent div-table-responsive\">'.\"\\n\";\n\t\t\tprint '<tbody>';\n\t\t\tprint '<tr><td rowspan=\"0\" class=\"width20p\">';\n\t\t\tif ($conf->global->MAIN_SHOW_LOGO && empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER) && !empty($conf->global->MAIN_INFO_SOCIETE_LOGO)) {\n\t\t\t\tprint '<img id=\"mysoc-info-header-logo\" style=\"max-width:100%\" alt=\"\" src=\"'.DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=mycompany&amp;file='.urlencode('logos/'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_LOGO)).'\">';\n\t\t\t}\n\t\t\tprint '</td><td  rowspan=\"0\" class=\"width50p\"></td></tr>'.\"\\n\";\n\t\t\tprint '<tr><td class=\"titre bold\">'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_NOM).'</td></tr>'.\"\\n\";\n\t\t\tprint '<tr><td>'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_ADDRESS).'<br>'.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_ZIP).' '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_TOWN).'</td></tr>'.\"\\n\";\n\t\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_TEL)) {\n\t\t\t\tprint '<tr><td style=\"padding-left: 1em\" class=\"small\">'.$langs->trans(\"Phone\").' : '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_TEL).'</td></tr>';\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_MAIL)) {\n\t\t\t\tprint '<tr><td style=\"padding-left: 1em\" class=\"small\">'.$langs->trans(\"Email\").' : '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_MAIL).'</td></tr>';\n\t\t\t}\n\t\t\tif (!empty($conf->global->MAIN_INFO_SOCIETE_WEB)) {\n\t\t\t\tprint '<tr><td style=\"padding-left: 1em\" class=\"small\">'.$langs->trans(\"Web\").' : '.dol_escape_htmltag($conf->global->MAIN_INFO_SOCIETE_WEB).'</td></tr>';\n\t\t\t}\n\t\t\tprint '</tbody>';\n\t\t\tprint '</table>'.\"\\n\";\n\t\t\tprint '</div>'.\"\\n\";\n\t\t\tprint '<!-- End show mysoc info header -->'.\"\\n\";\n\t\t}\n\t}\n}\n\n\n/**\n *  Return helpbaseurl, helppage and mode\n *\n *  @param\tstring\t\t$helppagename\t\tPage name ('EN:xxx,ES:eee,FR:fff...' or 'http://localpage')\n *  @param  Translate\t$langs\t\t\t\tLanguage\n *  @return\tarray\t\tArray of help urls\n */\nfunction getHelpParamFor($helppagename, $langs)\n{\n\t$helpbaseurl = '';\n\t$helppage = '';\n\t$mode = '';\n\n\tif (preg_match('/^http/i', $helppagename)) {\n\t\t// If complete URL\n\t\t$helpbaseurl = '%s';\n\t\t$helppage = $helppagename;\n\t\t$mode = 'local';\n\t} else {\n\t\t// If WIKI URL\n\t\t$reg = array();\n\t\tif (preg_match('/^es/i', $langs->defaultlang)) {\n\t\t\t$helpbaseurl = 'http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/ES:([^|]+)/i', $helppagename, $reg)) {\n\t\t\t\t$helppage = $reg[1];\n\t\t\t}\n\t\t}\n\t\tif (preg_match('/^fr/i', $langs->defaultlang)) {\n\t\t\t$helpbaseurl = 'http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/FR:([^|]+)/i', $helppagename, $reg)) {\n\t\t\t\t$helppage = $reg[1];\n\t\t\t}\n\t\t}\n\t\tif (empty($helppage)) {\t// If help page not already found\n\t\t\t$helpbaseurl = 'http://wiki.dolibarr.org/index.php/%s';\n\t\t\tif (preg_match('/EN:([^|]+)/i', $helppagename, $reg)) {\n\t\t\t\t$helppage = $reg[1];\n\t\t\t}\n\t\t}\n\t\t$mode = 'wiki';\n\t}\n\treturn array('helpbaseurl'=>$helpbaseurl, 'helppage'=>$helppage, 'mode'=>$mode);\n}\n\n\n/**\n *  Show a search area.\n *  Used when the javascript quick search is not used.\n *\n *  @param  string\t$urlaction          Url post\n *  @param  string\t$urlobject          Url of the link under the search box\n *  @param  string\t$title              Title search area\n *  @param  string\t$htmlmorecss        Add more css\n *  @param  string\t$htmlinputname      Field Name input form\n *  @param\tstring\t$accesskey\t\t\tAccesskey\n *  @param  string  $prefhtmlinputname  Complement for id to avoid multiple same id in the page\n *  @param\tstring\t$img\t\t\t\tImage to use\n *  @param\tstring\t$showtitlebefore\tShow title before input text instead of into placeholder. This can be set when output is dedicated for text browsers.\n *  @param\tstring\t$autofocus\t\t\tSet autofocus on field\n *  @return\tstring\n */\nfunction printSearchForm($urlaction, $urlobject, $title, $htmlmorecss, $htmlinputname, $accesskey = '', $prefhtmlinputname = '', $img = '', $showtitlebefore = 0, $autofocus = 0)\n{\n\tglobal $conf, $langs, $user;\n\n\t$ret = '';\n\t$ret .= '<form action=\"'.$urlaction.'\" method=\"post\" class=\"searchform nowraponall tagtr\">';\n\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t$ret .= '<input type=\"hidden\" name=\"mode\" value=\"search\">';\n\t$ret .= '<input type=\"hidden\" name=\"savelogin\" value=\"'.dol_escape_htmltag($user->login).'\">';\n\tif ($showtitlebefore) {\n\t\t$ret .= '<div class=\"tagtd left\">'.$title.'</div> ';\n\t}\n\t$ret .= '<div class=\"tagtd\">';\n\t$ret .= img_picto('', $img, '', false, 0, 0, '', 'paddingright width20');\n\t$ret .= '<input type=\"text\" class=\"flat '.$htmlmorecss.'\"';\n\t$ret .= ' style=\"background-repeat: no-repeat; background-position: 3px;\"';\n\t$ret .= ($accesskey ? ' accesskey=\"'.$accesskey.'\"' : '');\n\t$ret .= ' placeholder=\"'.strip_tags($title).'\"';\n\t$ret .= ($autofocus ? ' autofocus' : '');\n\t$ret .= ' name=\"'.$htmlinputname.'\" id=\"'.$prefhtmlinputname.$htmlinputname.'\" />';\n\t$ret .= '<button type=\"submit\" class=\"button bordertransp\" style=\"padding-top: 4px; padding-bottom: 4px; padding-left: 6px; padding-right: 6px\">';\n\t$ret .= '<span class=\"fa fa-search\"></span>';\n\t$ret .= '</button>';\n\t$ret .= '</div>';\n\t$ret .= \"</form>\\n\";\n\treturn $ret;\n}\n\n\nif (!function_exists(\"llxFooter\")) {\n\t/**\n\t * Show HTML footer\n\t * Close div /DIV class=fiche + /DIV id-right + /DIV id-container + /BODY + /HTML.\n\t * If global var $delayedhtmlcontent was filled, we output it just before closing the body.\n\t *\n\t * @param\tstring\t$comment    \t\t\t\tA text to add as HTML comment into HTML generated page\n\t * @param\tstring\t$zone\t\t\t\t\t\t'private' (for private pages) or 'public' (for public pages)\n\t * @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n\t * @return\tvoid\n\t */\n\tfunction llxFooter($comment = '', $zone = 'private', $disabledoutputofmessages = 0)\n\t{\n\t\tglobal $conf, $db, $langs, $user, $mysoc, $object;\n\t\tglobal $delayedhtmlcontent;\n\t\tglobal $contextpage, $page, $limit;\n\t\tglobal $dolibarr_distrib;\n\n\t\t$ext = 'layout='.$conf->browser->layout.'&version='.urlencode(DOL_VERSION);\n\n\t\t// Global html output events ($mesgs, $errors, $warnings)\n\t\tdol_htmloutput_events($disabledoutputofmessages);\n\n\t\t// Code for search criteria persistence.\n\t\t// $user->lastsearch_values was set by the GETPOST when form field search_xxx exists\n\t\tif (is_object($user) && !empty($user->lastsearch_values_tmp) && is_array($user->lastsearch_values_tmp)) {\n\t\t\t// Clean and save data\n\t\t\tforeach ($user->lastsearch_values_tmp as $key => $val) {\n\t\t\t\tunset($_SESSION['lastsearch_values_tmp_'.$key]); // Clean array to rebuild it just after\n\t\t\t\tif (count($val) && empty($_POST['button_removefilter'])) {\t// If there is search criteria to save and we did not click on 'Clear filter' button\n\t\t\t\t\tif (empty($val['sortfield'])) {\n\t\t\t\t\t\tunset($val['sortfield']);\n\t\t\t\t\t}\n\t\t\t\t\tif (empty($val['sortorder'])) {\n\t\t\t\t\t\tunset($val['sortorder']);\n\t\t\t\t\t}\n\t\t\t\t\tdol_syslog('Save lastsearch_values_tmp_'.$key.'='.json_encode($val, 0).\" (systematic recording of last search criterias)\");\n\t\t\t\t\t$_SESSION['lastsearch_values_tmp_'.$key] = json_encode($val);\n\t\t\t\t\tunset($_SESSION['lastsearch_values_'.$key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t// Clean $relativepathstring\n\t\tif (constant('DOL_URL_ROOT')) {\n\t\t\t$relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'), '/').'/', '', $relativepathstring);\n\t\t}\n\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\tif (preg_match('/list\\.php$/', $relativepathstring)) {\n\t\t\tunset($_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_page_tmp_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_limit_tmp_'.$relativepathstring]);\n\n\t\t\tif (!empty($contextpage)) {\n\t\t\t\t$_SESSION['lastsearch_contextpage_tmp_'.$relativepathstring] = $contextpage;\n\t\t\t}\n\t\t\tif (!empty($page) && $page > 0) {\n\t\t\t\t$_SESSION['lastsearch_page_tmp_'.$relativepathstring] = $page;\n\t\t\t}\n\t\t\tif (!empty($limit) && $limit != $conf->liste_limit) {\n\t\t\t\t$_SESSION['lastsearch_limit_tmp_'.$relativepathstring] = $limit;\n\t\t\t}\n\n\t\t\tunset($_SESSION['lastsearch_contextpage_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_page_'.$relativepathstring]);\n\t\t\tunset($_SESSION['lastsearch_limit_'.$relativepathstring]);\n\t\t}\n\n\t\t// Core error message\n\t\tif (!empty($conf->global->MAIN_CORE_ERROR)) {\n\t\t\t// Ajax version\n\t\t\tif ($conf->use_javascript_ajax) {\n\t\t\t\t$title = img_warning().' '.$langs->trans('CoreErrorTitle');\n\t\t\t\tprint ajax_dialog($title, $langs->trans('CoreErrorMessage'));\n\t\t\t} else {\n\t\t\t\t// html version\n\t\t\t\t$msg = img_warning().' '.$langs->trans('CoreErrorMessage');\n\t\t\t\tprint '<div class=\"error\">'.$msg.'</div>';\n\t\t\t}\n\n\t\t\t//define(\"MAIN_CORE_ERROR\",0);      // Constant was defined and we can't change value of a constant\n\t\t}\n\n\t\tprint \"\\n\\n\";\n\n\t\tprint '</div> <!-- End div class=\"fiche\" -->'.\"\\n\"; // End div fiche\n\n\t\tif (empty($conf->dol_hide_leftmenu)) {\n\t\t\tprint '</div> <!-- End div id-right -->'.\"\\n\"; // End div id-right\n\t\t}\n\n\t\tif (empty($conf->dol_hide_leftmenu) && empty($conf->dol_use_jmobile)) {\n\t\t\tprint '</div> <!-- End div id-container -->'.\"\\n\"; // End div container\n\t\t}\n\n\t\tprint \"\\n\";\n\t\tif ($comment) {\n\t\t\tprint '<!-- '.$comment.' -->'.\"\\n\";\n\t\t}\n\n\t\tprintCommonFooter($zone);\n\n\t\tif (!empty($delayedhtmlcontent)) {\n\t\t\tprint $delayedhtmlcontent;\n\t\t}\n\n\t\tif (!empty($conf->use_javascript_ajax)) {\n\t\t\tprint \"\\n\".'<!-- Includes JS Footer of Dolibarr -->'.\"\\n\";\n\t\t\tprint '<script src=\"'.DOL_URL_ROOT.'/core/js/lib_foot.js.php?lang='.$langs->defaultlang.($ext ? '&'.$ext : '').'\"></script>'.\"\\n\";\n\t\t}\n\n\t\t// Wrapper to add log when clicking on download or preview\n\t\tif (!empty($conf->blockedlog->enabled) && is_object($object) && $object->id > 0 && $object->statut > 0) {\n\t\t\tif (in_array($object->element, array('facture'))) {       // Restrict for the moment to element 'facture'\n\t\t\t\tprint \"\\n<!-- JS CODE TO ENABLE log when making a download or a preview of a document -->\\n\";\n\t\t\t\t?>\n\t\t\t\t<script>\n\t\t\t\tjQuery(document).ready(function () {\n\t\t\t\t\t$('a.documentpreview').click(function() {\n\t\t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n\t\t\t\t\t\t\t\t, {\n\t\t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n\t\t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n\t\t\t\t\t\t\t\t\t, action:'DOC_PREVIEW'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\t$('a.documentdownload').click(function() {\n\t\t\t\t\t\t$.post('<?php echo DOL_URL_ROOT.\"/blockedlog/ajax/block-add.php\" ?>'\n\t\t\t\t\t\t\t\t, {\n\t\t\t\t\t\t\t\t\tid:<?php echo $object->id; ?>\n\t\t\t\t\t\t\t\t\t, element:'<?php echo $object->element ?>'\n\t\t\t\t\t\t\t\t\t, action:'DOC_DOWNLOAD'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t\t<?php\n\t\t\t}\n\t\t}\n\n\t\t// A div for the address popup\n\t\tprint \"\\n<!-- A div to allow dialog popup -->\\n\";\n\t\tprint '<div id=\"dialogforpopup\" style=\"display: none;\"></div>'.\"\\n\";\n\n\t\t// Add code for the asynchronous anonymous first ping (for telemetry)\n\t\t// You can use &forceping=1 in parameters to force the ping if the ping was already sent.\n\t\t$forceping = GETPOST('forceping', 'alpha');\n\t\tif (($_SERVER[\"PHP_SELF\"] == DOL_URL_ROOT.'/index.php') || $forceping) {\n\t\t\t//print '<!-- instance_unique_id='.$conf->file->instance_unique_id.' MAIN_FIRST_PING_OK_ID='.$conf->global->MAIN_FIRST_PING_OK_ID.' -->';\n\t\t\t$hash_unique_id = md5('dolibarr'.$conf->file->instance_unique_id);\n\t\t\tif (empty($conf->global->MAIN_FIRST_PING_OK_DATE)\n\t\t\t\t|| (!empty($conf->file->instance_unique_id) && ($hash_unique_id != $conf->global->MAIN_FIRST_PING_OK_ID) && ($conf->global->MAIN_FIRST_PING_OK_ID != 'disabled'))\n\t\t\t|| $forceping) {\n\t\t\t\t// No ping done if we are into an alpha version\n\t\t\t\tif (strpos('alpha', DOL_VERSION) > 0 && !$forceping) {\n\t\t\t\t\tprint \"\\n<!-- NO JS CODE TO ENABLE the anonymous Ping. It is an alpha version -->\\n\";\n\t\t\t\t} elseif (empty($_COOKIE['DOLINSTALLNOPING_'.$hash_unique_id]) || $forceping) {\t// Cookie is set when we uncheck the checkbox in the installation wizard.\n\t\t\t\t\t// MAIN_LAST_PING_KO_DATE\n\t\t\t\t\t// Disable ping if MAIN_LAST_PING_KO_DATE is set and is recent\n\t\t\t\t\tif (!empty($conf->global->MAIN_LAST_PING_KO_DATE) && substr($conf->global->MAIN_LAST_PING_KO_DATE, 0, 6) == dol_print_date(dol_now(), '%Y%m') && !$forceping) {\n\t\t\t\t\t\tprint \"\\n<!-- NO JS CODE TO ENABLE the anonymous Ping. An error already occured this month, we will try later. -->\\n\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\n\n\t\t\t\t\t\tprint \"\\n\".'<!-- Includes JS for Ping of Dolibarr forceping='.$forceping.' MAIN_FIRST_PING_OK_DATE='.getDolGlobalString(\"MAIN_FIRST_PING_OK_DATE\").' MAIN_FIRST_PING_OK_ID='.getDolGlobalString(\"MAIN_FIRST_PING_OK_ID\").' MAIN_LAST_PING_KO_DATE='.getDolGlobalString(\"MAIN_LAST_PING_KO_DATE\").' -->'.\"\\n\";\n\t\t\t\t\t\tprint \"\\n<!-- JS CODE TO ENABLE the anonymous Ping -->\\n\";\n\t\t\t\t\t\t$url_for_ping = (empty($conf->global->MAIN_URL_FOR_PING) ? \"https://ping.dolibarr.org/\" : $conf->global->MAIN_URL_FOR_PING);\n\t\t\t\t\t\t// Try to guess the distrib used\n\t\t\t\t\t\t$distrib = 'standard';\n\t\t\t\t\t\tif ($_SERVER[\"SERVER_ADMIN\"] == 'doliwamp@localhost') {\n\t\t\t\t\t\t\t$distrib = 'doliwamp';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!empty($dolibarr_distrib)) {\n\t\t\t\t\t\t\t$distrib = $dolibarr_distrib;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<script>\n\t\t\t\t\t\t\tjQuery(document).ready(function (tmp) {\n\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t  method: \"POST\",\n\t\t\t\t\t\t\t\t\t  url: \"<?php echo $url_for_ping ?>\",\n\t\t\t\t\t\t\t\t\t  timeout: 500,     // timeout milliseconds\n\t\t\t\t\t\t\t\t\t  cache: false,\n\t\t\t\t\t\t\t\t\t  data: {\n\t\t\t\t\t\t\t\t\t\t  hash_algo: 'md5',\n\t\t\t\t\t\t\t\t\t\t  hash_unique_id: '<?php echo dol_escape_js($hash_unique_id); ?>',\n\t\t\t\t\t\t\t\t\t\t  action: 'dolibarrping',\n\t\t\t\t\t\t\t\t\t\t  version: '<?php echo (float) DOL_VERSION; ?>',\n\t\t\t\t\t\t\t\t\t\t  entity: '<?php echo (int) $conf->entity; ?>',\n\t\t\t\t\t\t\t\t\t\t  dbtype: '<?php echo dol_escape_js($db->type); ?>',\n\t\t\t\t\t\t\t\t\t\t  country_code: '<?php echo $mysoc->country_code ? dol_escape_js($mysoc->country_code) : 'unknown'; ?>',\n\t\t\t\t\t\t\t\t\t\t  php_version: '<?php echo dol_escape_js(phpversion()); ?>',\n\t\t\t\t\t\t\t\t\t\t  os_version: '<?php echo dol_escape_js(version_os('smr')); ?>',\n\t\t\t\t\t\t\t\t\t\t  distrib: '<?php echo $distrib ? dol_escape_js($distrib) : 'unknown'; ?>',\n\t\t\t\t\t\t\t\t\t\t  token: 'notrequired'\n\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t  success: function (data, status, xhr) {   // success callback function (data contains body of response)\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Ping ok\");\n\t\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\t\t\t\turl: '<?php echo DOL_URL_ROOT.'/core/ajax/pingresult.php'; ?>',\n\t\t\t\t\t\t\t\t\t\t\t\ttimeout: 500,     // timeout milliseconds\n\t\t\t\t\t\t\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\t\t\t\t\t\t\tdata: { hash_algo: 'md5', hash_unique_id: '<?php echo dol_escape_js($hash_unique_id); ?>', action: 'firstpingok', token: 'notrequired' },\t// for update\n\t\t\t\t\t\t\t\t\t\t\t  });\n\t\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t\t  error: function (data,status,xhr) {   // error callback function\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Ping ko: \" + data);\n\t\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\t\t  method: 'GET',\n\t\t\t\t\t\t\t\t\t\t\t\t  url: '<?php echo DOL_URL_ROOT.'/core/ajax/pingresult.php'; ?>',\n\t\t\t\t\t\t\t\t\t\t\t\t  timeout: 500,     // timeout milliseconds\n\t\t\t\t\t\t\t\t\t\t\t\t  cache: false,\n\t\t\t\t\t\t\t\t\t\t\t\t  data: { hash_algo: 'md5', hash_unique_id: '<?php echo dol_escape_js($hash_unique_id); ?>', action: 'firstpingko', token: 'notrequired' },\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t</script>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$now = dol_now();\n\t\t\t\t\tprint \"\\n<!-- NO JS CODE TO ENABLE the anonymous Ping. It was disabled -->\\n\";\n\t\t\t\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\n\t\t\t\t\tdolibarr_set_const($db, 'MAIN_FIRST_PING_OK_DATE', dol_print_date($now, 'dayhourlog', 'gmt'), 'chaine', 0, '', $conf->entity);\n\t\t\t\t\tdolibarr_set_const($db, 'MAIN_FIRST_PING_OK_ID', 'disabled', 'chaine', 0, '', $conf->entity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprint \"</body>\\n\";\n\t\tprint \"</html>\\n\";\n\t}\n}\n", "<?php\n/* Copyright (C) 2010 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n * or see https://www.gnu.org/\n */\n\n/**\n *      \\file       test/phpunit/SecurityTest.php\n *\t\t\\ingroup    test\n *      \\brief      PHPUnit test\n *\t\t\\remarks\tTo run this script as CLI:  phpunit filename.php\n */\n\nglobal $conf,$user,$langs,$db;\n//define('TEST_DB_FORCE_TYPE','mysql');\t// This is to force using mysql driver\n//require_once 'PHPUnit/Autoload.php';\n\nif (! defined('NOREQUIRESOC')) {\n\tdefine('NOREQUIRESOC', '1');\n}\nif (! defined('NOCSRFCHECK')) {\n\tdefine('NOCSRFCHECK', '1');\n}\nif (! defined('NOTOKENRENEWAL')) {\n\tdefine('NOTOKENRENEWAL', '1');\n}\nif (! defined('NOREQUIREMENU')) {\n\tdefine('NOREQUIREMENU', '1'); // If there is no menu to show\n}\nif (! defined('NOREQUIREHTML')) {\n\tdefine('NOREQUIREHTML', '1'); // If we don't need to load the html.form.class.php\n}\nif (! defined('NOREQUIREAJAX')) {\n\tdefine('NOREQUIREAJAX', '1');\n}\nif (! defined(\"NOLOGIN\")) {\n\tdefine(\"NOLOGIN\", '1');       // If this page is public (can be called outside logged session)\n}\nif (! defined(\"NOSESSION\")) {\n\tdefine(\"NOSESSION\", '1');\n}\n\nrequire_once dirname(__FILE__).'/../../htdocs/main.inc.php';\nrequire_once dirname(__FILE__).'/../../htdocs/core/lib/security.lib.php';\nrequire_once dirname(__FILE__).'/../../htdocs/core/lib/security2.lib.php';\n\n\nif (empty($user->id)) {\n\tprint \"Load permissions for admin user nb 1\\n\";\n\t$user->fetch(1);\n\t$user->getrights();\n}\n$conf->global->MAIN_DISABLE_ALL_MAILS=1;\n\n\n/**\n * Class for PHPUnit tests\n *\n * @backupGlobals disabled\n * @backupStaticAttributes enabled\n * @remarks\tbackupGlobals must be disabled to have db,conf,user and lang not erased.\n */\nclass SecurityTest extends PHPUnit\\Framework\\TestCase\n{\n\tprotected $savconf;\n\tprotected $savuser;\n\tprotected $savlangs;\n\tprotected $savdb;\n\n\t/**\n\t * Constructor\n\t * We save global variables into local variables\n\t *\n\t * @return SecurityTest\n\t */\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\n\t\t//$this->sharedFixture\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$this->savconf=$conf;\n\t\t$this->savuser=$user;\n\t\t$this->savlangs=$langs;\n\t\t$this->savdb=$db;\n\n\t\tprint __METHOD__.\" db->type=\".$db->type.\" user->id=\".$user->id;\n\t\t//print \" - db \".$db->db;\n\t\tprint \"\\n\";\n\t}\n\n\t/**\n\t * setUpBeforeClass\n\t *\n\t * @return void\n\t */\n\tpublic static function setUpBeforeClass()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$db->begin();\t// This is to have all actions inside a transaction even if test launched without suite.\n\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * tearDownAfterClass\n\t *\n\t * @return\tvoid\n\t */\n\tpublic static function tearDownAfterClass()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$db->rollback();\n\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * Init phpunit tests\n\t *\n\t * @return\tvoid\n\t */\n\tprotected function setUp()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * End phpunit tests\n\t *\n\t * @return\tvoid\n\t */\n\tprotected function tearDown()\n\t{\n\t\tprint __METHOD__.\"\\n\";\n\t}\n\n\t/**\n\t * testSetLang\n\t *\n\t * @return string\n\t */\n\tpublic function testSetLang()\n\t{\n\t\tglobal $conf;\n\t\t$conf=$this->savconf;\n\n\t\t$tmplangs = new Translate('', $conf);\n\n\t\t$_SERVER['HTTP_ACCEPT_LANGUAGE'] = \"' malicious text with quote\";\n\t\t$tmplangs->setDefaultLang('auto');\n\t\tprint __METHOD__.' $tmplangs->defaultlang='.$tmplangs->defaultlang.\"\\n\";\n\t\t$this->assertEquals($tmplangs->defaultlang, 'malicioustextwithquote_MALICIOUSTEXTWITHQUOTE');\n\t}\n\n\t/**\n\t * testSqlAndScriptInjectWithPHPUnit\n\t *\n\t * @return  void\n\t */\n\tpublic function testSqlAndScriptInjectWithPHPUnit()\n\t{\n\t\t// Run tests\n\t\t// More on https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\n\t\t// Should be OK\n\t\t$expectedresult=0;\n\n\t\t/*\n\t\t$test = '';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual(0, $result, 'Error on testSqlAndScriptInject kkk');\n\t\t*/\n\n\t\t$_SERVER[\"PHP_SELF\"]='/DIR WITH SPACE/htdocs/admin/index.php';\n\t\t$result=testSqlAndScriptInject($_SERVER[\"PHP_SELF\"], 2);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for PHP_SELF that should be ok');\n\n\t\t$test = 'This is a < inside string with < and > also and tag like <a> before the >';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject expected 0b');\n\n\t\t$test = 'This is the union of all for the selection of the best';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject expected 0c');\n\n\t\t// Should detect attack\n\t\t$expectedresult=1;\n\n\t\t$_SERVER[\"PHP_SELF\"]='/DIR WITH SPACE/htdocs/admin/index.php/<svg>';\n\t\t$result=testSqlAndScriptInject($_SERVER[\"PHP_SELF\"], 2);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject for PHP_SELF that should detect XSS');\n\n\t\t$test = 'select @@version';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for SQL1a. Should find an attack on POST param and did not.');\n\n\t\t$test = 'select @@version';\n\t\t$result=testSqlAndScriptInject($test, 1);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for SQL1b. Should find an attack on GET param and did not.');\n\n\t\t$test = '... union ... selection ';\n\t\t$result=testSqlAndScriptInject($test, 1);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for SQL2. Should find an attack on GET param and did not.');\n\n\t\t$test = 'j&#x61;vascript:';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for javascript1. Should find an attack and did not.');\n\n\t\t$test = 'j&#x61vascript:';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for javascript2. Should find an attack and did not.');\n\n\t\t$test = 'javascript&colon&#x3B;alert(1)';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertEquals($expectedresult, $result, 'Error on testSqlAndScriptInject for javascript2');\n\n\t\t$test=\"<img src='1.jpg' onerror =javascript:alert('XSS')>\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa1');\n\n\t\t$test=\"<img src='1.jpg' onerror =javascript:alert('XSS')>\";\n\t\t$result=testSqlAndScriptInject($test, 2);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa2');\n\n\t\t$test='<IMG SRC=# onmouseover=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa3');\n\t\t$test='<IMG SRC onmouseover=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa4');\n\t\t$test='<IMG onmouseover=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa5');\n\t\t$test='<IMG SRC=/ onerror=\"alert(1)\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa6');\n\t\t$test='<IMG SRC=\" &#14;  javascript:alert(1);\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject aaa7');\n\n\t\t$test='<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject bbb');\n\n\t\t$test='<SCRIPT SRC=http://xss.rocks/xss.js></SCRIPT>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject ccc');\n\n\t\t$test='<IMG SRC=\"javascript:alert(\\'XSS\\');\">';\n\t\t$result=testSqlAndScriptInject($test, 1);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject ddd');\n\n\t\t$test='<IMG \"\"\"><SCRIPT>alert(\"XSS\")</SCRIPT>\">';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject eee');\n\n\t\t$test='<!-- Google analytics -->\n\t\t\t<script>\n\t\t\t  (function(i,s,o,g,r,a,m){i[\\'GoogleAnalyticsObject\\']=r;i[r]=i[r]||function(){\n\t\t\t  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\t\t\t  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n\t\t\t  })(window,document,\\'script\\',\\'https://www.google-analytics.com/analytics.js\\',\\'ga\\');\n\n\t\t\t  ga(\\'create\\',\\'UA-99999999-9\\', \\'auto\\');\n\t\t\t  ga(\\'send\\', \\'pageview\\');\n\n\t\t\t</script>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject eee');\n\n\t\t$test=\"<IMG SRC=\\\"jav\\tascript:alert('XSS');\\\">\";\t\t// Is locked by some browser like chrome because the default directive no-referrer-when-downgrade is sent when requesting the SRC and then refused because of browser protection on img src load without referrer.\n\t\t$test=\"<IMG SRC=\\\"jav&#x0D;ascript:alert('XSS');\\\">\";\t// Same\n\n\t\t$test='<SCRIPT/XSS SRC=\"http://xss.rocks/xss.js\"></SCRIPT>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject fff1');\n\t\t$test='<SCRIPT/SRC=\"http://xss.rocks/xss.js\"></SCRIPT>';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject fff2');\n\n\t\t// This case seems to be filtered by browsers now.\n\t\t$test='<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(1)>';\n\t\t//$result=testSqlAndScriptInject($test, 0);\n\t\t//$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject ggg');\n\n\t\t$test='<iframe src=http://xss.rocks/scriptlet.html <';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject hhh');\n\n\t\t$test='Set.constructor`alert\\x281\\x29```';\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject iii');\n\n\t\t$test=\"on<!-- ab\\nc -->error=alert(1)\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject jjj');\n\n\t\t$test=\"<img src=x one<a>rror=alert(document.location)\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject kkk');\n\n\t\t$test=\"<a onpointerdown=alert(document.domain)>XSS</a>\";\n\t\t$result=testSqlAndScriptInject($test, 0);\n\t\t$this->assertGreaterThanOrEqual($expectedresult, $result, 'Error on testSqlAndScriptInject lll');\n\t}\n\n\t/**\n\t * testGETPOST\n\t *\n\t * @return string\n\t */\n\tpublic function testGETPOST()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t$_COOKIE[\"id\"]=111;\n\t\t$_GET[\"param1\"]=\"222\";\n\t\t$_POST[\"param1\"]=\"333\";\n\t\t$_GET[\"param2\"]='a/b#e(pr)qq-rr\\cc';\n\t\t$_GET[\"param3\"]='\"&#110;a/b#e(pr)qq-rr\\cc';    // Same than param2 + \" and &#110;\n\t\t$_GET[\"param4\"]='../dir';\n\t\t$_GET[\"param5\"]=\"a_1-b\";\n\t\t$_POST[\"param6\"]=\"&quot;&gt;<svg o&#110;load='console.log(&quot;123&quot;)'&gt;\";\n\t\t$_POST[\"param6b\"]='<<<../>../>../svg><<<../>../>../animate =alert(1)>abc';\n\t\t$_GET[\"param7\"]='\"c:\\this is a path~1\\aaa&#110; &#x&#x31;&#x31;&#x30;;\" abc<bad>def</bad>';\n\t\t$_POST[\"param8a\"]=\"Hacker<svg o&#110;load='console.log(&quot;123&quot;)'\";\t// html tag is not closed so it is not detected as html tag but is still harmfull\n\t\t$_POST['param8b']='<img src=x onerror=alert(document.location) t=';\t\t// this is html obfuscated by non closing tag\n\t\t$_POST['param8c']='< with space after is ok';\n\t\t$_POST['param8d']='<abc123 is html to clean';\n\t\t$_POST['param8e']='<123abc is not html to clean';\n\t\t$_POST['param8f']='abc<<svg <><<animate onbegin=alert(document.domain) a';\n\t\t$_POST[\"param9\"]='is_object($object) ? ($object->id < 10 ? round($object->id / 2, 2) : (2 * $user->id) * (int) substr($mysoc->zip, 1, 2)) : \\'objnotdefined\\'';\n\t\t$_POST[\"param10\"]='is_object($object) ? ($object->id < 10 ? round($object->id / 2, 2) : (2 * $user->id) * (int) substr($mysoc->zip, 1, 2)) : \\'<abc>objnotdefined\\'';\n\t\t$_POST[\"param11\"]=' Name <email@email.com> ';\n\t\t$_POST[\"param12\"]='<!DOCTYPE html><html>aaa</html>';\n\t\t$_POST[\"param13\"]='&#110; &#x6E; &gt; &lt; &quot; <a href=\\\"j&#x61;vascript:alert(document.domain)\\\">XSS</a>';\n\t\t$_POST[\"param13b\"]='&#110; &#x6E; &gt; &lt; &quot; <a href=\\\"j&#x61vascript:alert(document.domain)\\\">XSS</a>';\n\t\t//$_POST[\"param13\"]='javascript%26colon%26%23x3B%3Balert(1)';\n\t\t//$_POST[\"param14\"]='javascripT&javascript#x3a alert(1)';\n\n\n\t\t$result=GETPOST('id', 'int');              // Must return nothing\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, '');\n\n\t\t$result=GETPOST(\"param1\", 'int');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 222, 'Test on param1 with no 3rd param');\n\n\t\t$result=GETPOST(\"param1\", 'int', 2);\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 333, 'Test on param1 with 3rd param = 2');\n\n\t\t// Test with alpha\n\n\t\t$result=GETPOST(\"param2\", 'alpha');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, $_GET[\"param2\"], 'Test on param2');\n\n\t\t$result=GETPOST(\"param3\", 'alpha');  // Must return string sanitized from char \"\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 'na/b#e(pr)qq-rr\\cc', 'Test on param3');\n\n\t\t$result=GETPOST(\"param4\", 'alpha');  // Must return string sanitized from ../\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, 'dir');\n\n\t\t// Test with aZ09\n\n\t\t$result=GETPOST(\"param1\", 'aZ09');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, $_GET[\"param1\"]);\n\n\t\t$result=GETPOST(\"param2\", 'aZ09');  // Must return '' as string contains car not in aZ09 definition\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, '');\n\n\t\t$result=GETPOST(\"param3\", 'aZ09');  // Must return '' as string contains car not in aZ09 definition\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($result, '');\n\n\t\t$result=GETPOST(\"param4\", 'aZ09');  // Must return '' as string contains car not in aZ09 definition\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('', $result);\n\n\t\t$result=GETPOST(\"param5\", 'aZ09');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_GET[\"param5\"], $result);\n\n\t\t// Test with nohtml\n\n\t\t$result=GETPOST(\"param6\", 'nohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('\">', $result);\n\n\t\t// Test with alpha = alphanohtml. We must convert the html entities like &#110; and disable all entities\n\n\t\t$result=GETPOST(\"param6\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('>', $result);\n\n\t\t$result=GETPOST(\"param6b\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('abc', $result);\n\n\t\t$result=GETPOST(\"param8a\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(\"Hackersvg onload='console.log(123)'\", $result);\n\n\t\t$result=GETPOST(\"param8b\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('img src=x onerror=alert(document.location) t=', $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8c\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST['param8c'], $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8d\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('abc123 is html to clean', $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8e\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST['param8e'], $result, 'Test a string with non closing html tag with alphanohtml');\n\n\t\t$result=GETPOST(\"param8f\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('abcsvg animate onbegin=alert(document.domain) a', $result, 'Test a string with html tag open with several <');\n\n\t\t$result=GETPOST(\"param9\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST[\"param9\"], $result);\n\n\t\t$result=GETPOST(\"param10\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals($_POST[\"param9\"], $result, 'We should get param9 after processing param10');\n\n\t\t$result=GETPOST(\"param11\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(\"Name\", $result, 'Test an email string with alphanohtml');\n\n\t\t$result=GETPOST(\"param13\", 'alphanohtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('n n > <  XSS', $result, 'Test that html entities are decoded with alpha');\n\n\t\t// Test with alphawithlgt\n\n\t\t$result=GETPOST(\"param11\", 'alphawithlgt');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(trim($_POST[\"param11\"]), $result, 'Test an email string with alphawithlgt');\n\n\t\t// Test with restricthtml we must remove html open/close tag and content but not htmlentities (we can decode html entities for ascii chars like &#110;)\n\n\t\t$result=GETPOST(\"param6\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('&quot;&gt;', $result);\n\n\t\t$result=GETPOST(\"param7\", 'restricthtml');\n\t\tprint __METHOD__.\" result param7 = \".$result.\"\\n\";\n\t\t$this->assertEquals('\"c:\\this is a path~1\\aaan &#x;;;;\" abcdef', $result);\n\n\t\t$result=GETPOST(\"param12\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals(trim($_POST[\"param12\"]), $result, 'Test a string with DOCTYPE and restricthtml');\n\n\t\t$result=GETPOST(\"param13\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('n n &gt; &lt; &quot; <a href=\\\"alert(document.domain)\\\">XSS</a>', $result, 'Test 13 that HTML entities are decoded with restricthtml, but only for common alpha chars');\n\n\t\t$result=GETPOST(\"param13b\", 'restricthtml');\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('n n &gt; &lt; &quot; <a href=\\\"alert(document.domain)\\\">XSS</a>', $result, 'Test 13b that HTML entities are decoded with restricthtml, but only for common alpha chars');\n\n\t\t// Special test for GETPOST of backtopage, backtolist or backtourl parameter\n\n\t\t$_POST[\"backtopage\"]='//www.google.com';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('www.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='https:https://www.google.com';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('www.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtolist\"]='::HTTPS://www.google.com';\n\t\t$result=GETPOST(\"backtolist\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('www.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='http:www.google.com';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('httpwww.google.com', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='/mydir/mypage.php?aa=a%10a';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('/mydir/mypage.php?aa=a%10a', $result, 'Test for backtopage param');\n\n\t\t$_POST[\"backtopage\"]='javascripT&javascript#javascriptxjavascript3a alert(1)';\n\t\t$result=GETPOST(\"backtopage\");\n\t\tprint __METHOD__.\" result=\".$result.\"\\n\";\n\t\t$this->assertEquals('x3a alert(1)', $result, 'Test for backtopage param');\n\n\t\treturn $result;\n\t}\n\n\t/**\n\t * testCheckLoginPassEntity\n\t *\n\t * @return\tvoid\n\t */\n\tpublic function testCheckLoginPassEntity()\n\t{\n\t\t$login=checkLoginPassEntity('loginbidon', 'passwordbidon', 1, array('dolibarr'));\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, '');\n\n\t\t$login=checkLoginPassEntity('admin', 'passwordbidon', 1, array('dolibarr'));\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, '');\n\n\t\t$login=checkLoginPassEntity('admin', 'admin', 1, array('dolibarr'));            // Should works because admin/admin exists\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, 'admin', 'The test to check if pass of user \"admin\" is \"admin\" has failed');\n\n\t\t$login=checkLoginPassEntity('admin', 'admin', 1, array('http','dolibarr'));    // Should work because of second authetntication method\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, 'admin');\n\n\t\t$login=checkLoginPassEntity('admin', 'admin', 1, array('forceuser'));\n\t\tprint __METHOD__.\" login=\".$login.\"\\n\";\n\t\t$this->assertEquals($login, '');    // Expected '' because should failed because login 'auto' does not exists\n\t}\n\n\t/**\n\t * testEncodeDecode\n\t *\n\t * @return number\n\t */\n\tpublic function testEncodeDecode()\n\t{\n\t\t$stringtotest=\"This is a string to test encode/decode. This is a string to test encode/decode. This is a string to test encode/decode.\";\n\n\t\t$encodedstring=dol_encode($stringtotest);\n\t\t$decodedstring=dol_decode($encodedstring);\n\t\tprint __METHOD__.\" encodedstring=\".$encodedstring.\" \".base64_encode($stringtotest).\"\\n\";\n\t\t$this->assertEquals($stringtotest, $decodedstring, 'Use dol_encode/decode with no parameter');\n\n\t\t$encodedstring=dol_encode($stringtotest, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\t\t$decodedstring=dol_decode($encodedstring, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\t\tprint __METHOD__.\" encodedstring=\".$encodedstring.\" \".base64_encode($stringtotest).\"\\n\";\n\t\t$this->assertEquals($stringtotest, $decodedstring, 'Use dol_encode/decode with a key parameter');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolStringOnlyTheseHtmlTags\n\t *\n\t * @return number\n\t */\n\tpublic function testDolHTMLEntityDecode()\n\t{\n\t\t$stringtotest = 'a &colon; b &quot; c &#039; d &apos; e &eacute;';\n\t\t$decodedstring = dol_html_entity_decode($stringtotest, ENT_QUOTES);\n\t\t$this->assertEquals('a &colon; b \" c \\' d &apos; e \u00e9', $decodedstring, 'Function did not sanitize correclty');\n\n\t\t$stringtotest = 'a &colon; b &quot; c &#039; d &apos; e &eacute;';\n\t\t$decodedstring = dol_html_entity_decode($stringtotest, ENT_QUOTES|ENT_HTML5);\n\t\t$this->assertEquals('a : b \" c \\' d \\' e \u00e9', $decodedstring, 'Function did not sanitize correclty');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolStringOnlyTheseHtmlTags\n\t *\n\t * @return number\n\t */\n\tpublic function testDolStringOnlyTheseHtmlTags()\n\t{\n\t\t$stringtotest = '<a href=\"javascript:aaa\">bbb\u06b4';\n\t\t$decodedstring = dol_string_onlythesehtmltags($stringtotest, 1, 1, 1);\n\t\t$this->assertEquals('<a href=\"aaa\">bbb\u06b4', $decodedstring, 'Function did not sanitize correclty with test 1');\n\n\t\t$stringtotest = '<a href=\"java'.chr(0).'script:aaa\">bbb\u06b4';\n\t\t$decodedstring = dol_string_onlythesehtmltags($stringtotest, 1, 1, 1);\n\t\t$this->assertEquals('<a href=\"aaa\">bbb\u06b4', $decodedstring, 'Function did not sanitize correclty with test 2');\n\n\t\t$stringtotest = '<a href=\"javascript&colon;aaa\">bbb\u06b4';\n\t\t$decodedstring = dol_string_onlythesehtmltags($stringtotest, 1, 1, 1);\n\t\t$this->assertEquals('<a href=\"aaa\">bbb\u06b4', $decodedstring, 'Function did not sanitize correclty with test 3');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolStringOnlyTheseHtmlAttributes\n\t *\n\t * @return number\n\t */\n\tpublic function testDolStringOnlyTheseHtmlAttributes()\n\t{\n\t\t$stringtotest = '<div onload=\"ee\"><a href=\"123\"><span class=\"abc\">abc</span></a></div>';\n\t\t$decodedstring = dol_string_onlythesehtmlattributes($stringtotest);\n\t\t$decodedstring = preg_replace(\"/\\n$/\", \"\", $decodedstring);\n\t\t$this->assertEquals('<div><a href=\"123\"><span class=\"abc\">abc</span></a></div>', $decodedstring, 'Function did not sanitize correclty with test 1');\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testGetRandomPassword\n\t *\n\t * @return number\n\t */\n\tpublic function testGetRandomPassword()\n\t{\n\t\tglobal $conf;\n\n\t\t$genpass1=getRandomPassword(true);\t\t\t\t// Should be a string return by dol_hash (if no option set, will be md5)\n\t\tprint __METHOD__.\" genpass1=\".$genpass1.\"\\n\";\n\t\t$this->assertEquals(strlen($genpass1), 32);\n\n\t\t$genpass1=getRandomPassword(true, array('I'));\t// Should be a string return by dol_hash (if no option set, will be md5)\n\t\tprint __METHOD__.\" genpass1=\".$genpass1.\"\\n\";\n\t\t$this->assertEquals(strlen($genpass1), 32);\n\n\t\t$conf->global->USER_PASSWORD_GENERATED='None';\n\t\t$genpass2=getRandomPassword(false);\t\t\t\t// Should return an empty string\n\t\tprint __METHOD__.\" genpass2=\".$genpass2.\"\\n\";\n\t\t$this->assertEquals($genpass2, '');\n\n\t\t$conf->global->USER_PASSWORD_GENERATED='Standard';\n\t\t$genpass3=getRandomPassword(false);\t\t\t\t// Should return a password of 12 chars\n\t\tprint __METHOD__.\" genpass3=\".$genpass3.\"\\n\";\n\t\t$this->assertEquals(strlen($genpass3), 12);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testRestrictedArea\n\t *\n\t * @return void\n\t */\n\tpublic function testRestrictedArea()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t//$dummyuser=new User($db);\n\t\t//$result=restrictedArea($dummyuser,'societe');\n\n\t\t$result=restrictedArea($user, 'societe');\n\t\t$this->assertEquals(1, $result);\n\t}\n\n\n\t/**\n\t * testGetRandomPassword\n\t *\n\t * @return number\n\t */\n\tpublic function testGetURLContent()\n\t{\n\t\tglobal $conf;\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/geturl.lib.php';\n\n\t\t$url = 'ftp://mydomain.com';\n\t\t$tmp = getURLContent($url);\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertGreaterThan(0, strpos($tmp['curl_error_msg'], 'not supported'));\t// Test error if return does not contains 'not supported'\n\n\t\t$url = 'https://www.dolibarr.fr';\t// This is a redirect 301 page\n\t\t$tmp = getURLContent($url, 'GET', '', 0);\t// We do NOT follow\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(301, $tmp['http_code'], 'GET url 301 without following -> 301');\n\n\t\t$url = 'https://www.dolibarr.fr';\t// This is a redirect 301 page\n\t\t$tmp = getURLContent($url);\t\t// We DO follow\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(200, $tmp['http_code'], 'GET url 301 with following -> 200');\t// Test error if return does not contains 'not supported'\n\n\t\t$url = 'http://localhost';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that resolves to a local URL');\t// Test we receive an error because localtest.me is not an external URL\n\n\t\t$url = 'http://127.0.0.1';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because 127.0.0.1 is not an external URL\n\n\t\t$url = 'http://127.0.2.1';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because 127.0.2.1 is not an external URL\n\n\t\t$url = 'https://169.254.0.1';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because 169.254.0.1 is not an external URL\n\n\t\t$url = 'http://[::1]';\n\t\t$tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\tprint __METHOD__.\" url=\".$url.\"\\n\";\n\t\t$this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that is a local URL');\t// Test we receive an error because [::1] is not an external URL\n\n\t\t/*$url = 'localtest.me';\n\t\t $tmp = getURLContent($url, 'GET', '', 0, array(), array('http', 'https'), 0);\t\t// Only external URL\n\t\t print __METHOD__.\" url=\".$url.\"\\n\";\n\t\t $this->assertEquals(400, $tmp['http_code'], 'GET url to '.$url.' that resolves to a local URL');\t// Test we receive an error because localtest.me is not an external URL\n\t\t */\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * testDolSanitizeUrl\n\t *\n\t * @return void\n\t */\n\tpublic function testDolSanitizeUrl()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t$test = 'javascripT&javascript#x3a alert(1)';\n\t\t$result=dol_sanitizeUrl($test);\n\t\t$this->assertEquals('x3a alert(1)', $result, 'Test on dol_sanitizeUrl A');\n\n\t\t$test = 'javajavascriptscript&cjavascriptolon;alert(1)';\n\t\t$result=dol_sanitizeUrl($test);\n\t\t$this->assertEquals('alert(1)', $result, 'Test on dol_sanitizeUrl B');\n\n\t\t$test = '/javas:cript/google.com';\n\t\t$result=dol_sanitizeUrl($test);\n\t\t$this->assertEquals('google.com', $result, 'Test on dol_sanitizeUrl C');\n\t}\n\n\t/**\n\t * testDolSanitizeFileName\n\t *\n\t * @return void\n\t */\n\tpublic function testDolSanitizeFileName()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t//$dummyuser=new User($db);\n\t\t//$result=restrictedArea($dummyuser,'societe');\n\n\t\t$result=dol_sanitizeFileName('bad file | evilaction');\n\t\t$this->assertEquals('bad file _ evilaction', $result);\n\n\t\t$result=dol_sanitizeFileName('bad file --evilparam');\n\t\t$this->assertEquals('bad file _evilparam', $result);\n\t}\n\n\t/**\n\t * testDolEval\n\t *\n\t * @return void\n\t */\n\tpublic function testDolEval()\n\t{\n\t\tglobal $conf,$user,$langs,$db;\n\t\t$conf=$this->savconf;\n\t\t$user=$this->savuser;\n\t\t$langs=$this->savlangs;\n\t\t$db=$this->savdb;\n\n\t\t$result=dol_eval('1==1', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertTrue($result);\n\n\t\t$result=dol_eval('1==2', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertFalse($result);\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/project.class.php';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/projet/class/task.class.php';\n\t\t$result=dol_eval('(($reloadedobj = new Task($db)) && ($reloadedobj->fetchNoCompute($object->id) > 0) && ($secondloadedobj = new Project($db)) && ($secondloadedobj->fetchNoCompute($reloadedobj->fk_project) > 0)) ? $secondloadedobj->ref: \"Parent project not found\"', 1, 1);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertEquals('Parent project not found', $result);\n\n\t\t$result=dol_eval('$a=function() { }; $a;', 1, 1);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\n\t\t$result=dol_eval('$a=exec(\"ls\");', 1, 1);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\n\t\t$result=dol_eval('$a=\"test\"; $$a;', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\n\t\t$result=dol_eval('`ls`', 1, 0);\n\t\tprint \"result = \".$result.\"\\n\";\n\t\t$this->assertContains('Bad string syntax to evaluate', $result);\n\t}\n}\n"], "filenames": ["htdocs/core/lib/functions.lib.php", "htdocs/main.inc.php", "test/phpunit/SecurityTest.php"], "buggy_code_start_loc": [781, 56, 348], "buggy_code_end_loc": [783, 75, 496], "fixing_code_start_loc": [781, 56, 348], "fixing_code_end_loc": [787, 76, 496], "type": "CWE-79", "message": "In \u201cDolibarr ERP CRM\u201d, WYSIWYG Editor module, v2.8.1 to v13.0.2 are affected by a stored XSS vulnerability that allows low privileged application users to store malicious scripts in the \u201cPrivate Note\u201d field at \u201c/adherents/note.php?id=1\u201d endpoint. These scripts are executed in a victim\u2019s browser when they open the page containing the vulnerable field. In the worst case, the victim who inadvertently triggers the attack is a highly privileged administrator. The injected scripts can extract the Session ID, which can lead to full Account takeover of the admin and due to other vulnerability (Improper Access Control on Private notes) a low privileged user can update the private notes which could lead to privilege escalation.", "other": {"cve": {"id": "CVE-2021-25955", "sourceIdentifier": "vulnerabilitylab@mend.io", "published": "2021-08-15T21:15:06.907", "lastModified": "2022-08-01T12:27:13.137", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In \u201cDolibarr ERP CRM\u201d, WYSIWYG Editor module, v2.8.1 to v13.0.2 are affected by a stored XSS vulnerability that allows low privileged application users to store malicious scripts in the \u201cPrivate Note\u201d field at \u201c/adherents/note.php?id=1\u201d endpoint. These scripts are executed in a victim\u2019s browser when they open the page containing the vulnerable field. In the worst case, the victim who inadvertently triggers the attack is a highly privileged administrator. The injected scripts can extract the Session ID, which can lead to full Account takeover of the admin and due to other vulnerability (Improper Access Control on Private notes) a low privileged user can update the private notes which could lead to privilege escalation."}, {"lang": "es", "value": "En \"Dolibarr ERP CRM\", el m\u00f3dulo Editor WYSIWYG, versiones v2.8.1 a v13.0.2 est\u00e1n afectados por una vulnerabilidad de tipo XSS almacenado que permite a usuarios de la aplicaci\u00f3n con pocos privilegios almacenar scripts maliciosos en el campo \"Private Note\" en el endpoint \"/adherents/note.php?id=1\". Estos scripts son ejecutados en el navegador de la v\u00edctima cuando \u00e9sta abre la p\u00e1gina que contiene el campo vulnerable. En el peor de los casos, la v\u00edctima que desencadena inadvertidamente el ataque es un administrador con muchos privilegios. Los scripts inyectados pueden extraer el ID de la Sesi\u00f3n, lo que puede conllevar a una toma de posesi\u00f3n de la Cuenta completa del administrador y, debido a otra vulnerabilidad (Control de Acceso Inapropiado en las notas Privadas), un usuario poco privilegiados puede actualizar las notas privadas, que podr\u00eda conllevar a una escalada de privilegios."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}, {"source": "vulnerabilitylab@mend.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "vulnerabilitylab@mend.io", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr:*:*:*:*:*:*:*:*", "versionStartIncluding": "2.8.1", "versionEndIncluding": "13.0.2", "matchCriteriaId": "730BE634-E4DD-4AC7-89A0-74ED7ED1EB2D"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/commit/796b2d201acb9938b903fb2afa297db289ecc93e", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25955", "source": "vulnerabilitylab@mend.io", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/796b2d201acb9938b903fb2afa297db289ecc93e"}}