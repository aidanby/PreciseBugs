{"buggy_code": ["<?php\n/**\n * Copyright since 2007 PrestaShop SA and Contributors\n * PrestaShop is an International Registered Trademark & Property of PrestaShop SA\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.md.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to https://devdocs.prestashop.com/ for more information.\n *\n * @author    PrestaShop SA and Contributors <contact@prestashop.com>\n * @copyright Since 2007 PrestaShop SA and Contributors\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n */\n\nnamespace PrestaShopBundle\\Twig;\n\nuse Currency;\nuse Exception;\nuse PrestaShop\\PrestaShop\\Adapter\\Configuration;\nuse PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider;\nuse PrestaShop\\PrestaShop\\Adapter\\LegacyContext;\nuse PrestaShop\\PrestaShop\\Core\\Domain\\Shop\\ValueObject\\ShopConstraint;\nuse Twig\\Extension\\GlobalsInterface;\n\n/**\n * This class is used by Twig_Environment and provide layout methods callable from a twig template.\n */\nclass LayoutExtension extends \\Twig_Extension implements GlobalsInterface\n{\n    /** @var LegacyContext */\n    private $context;\n\n    /** @var string */\n    private $environment;\n\n    /** @var Configuration */\n    private $configuration;\n\n    /** @var CurrencyDataProvider */\n    private $currencyDataProvider;\n\n    /**\n     * Constructor.\n     *\n     * Keeps the Context to look inside language settings.\n     *\n     * @param LegacyContext $context\n     * @param string $environment\n     * @param Configuration $configuration\n     * @param CurrencyDataProvider $currencyDataProvider\n     */\n    public function __construct(\n        LegacyContext $context,\n        $environment,\n        Configuration $configuration,\n        CurrencyDataProvider $currencyDataProvider\n    ) {\n        $this->context = $context;\n        $this->environment = $environment;\n        $this->configuration = $configuration;\n        $this->currencyDataProvider = $currencyDataProvider;\n    }\n\n    /**\n     * Provides globals for Twig templates.\n     *\n     * @return array the base globals available in twig templates\n     */\n    public function getGlobals()\n    {\n        /*\n         * As this is a twig extension we need to be very resilient and prevent it from crashing\n         * the environment, for example the command debug:twig should not fail because of this extension\n         */\n\n        try {\n            $defaultCurrency = $this->context->getEmployeeCurrency() ?: $this->currencyDataProvider->getDefaultCurrency();\n        } catch (\\Exception $e) {\n            $defaultCurrency = null;\n        }\n        try {\n            $rootUrl = $this->context->getRootUrl();\n        } catch (\\Exception $e) {\n            $rootUrl = null;\n        }\n\n        return [\n            'theme' => $this->context->getContext()->shop->theme,\n            'default_currency' => $defaultCurrency,\n            'default_currency_symbol' => $defaultCurrency instanceof Currency ? $defaultCurrency->getSymbol() : null,\n            'root_url' => $rootUrl,\n            'js_translatable' => [],\n        ];\n    }\n\n    /**\n     * Define available filters.\n     *\n     * @return array Twig_SimpleFilter\n     */\n    public function getFilters()\n    {\n        return [\n            new \\Twig_SimpleFilter('configuration', [$this, 'getConfiguration'], ['deprecated' => true]),\n        ];\n    }\n\n    /**\n     * Returns a list of functions to add to the existing list.\n     *\n     * @return array An array of functions\n     */\n    public function getFunctions()\n    {\n        return [\n            new \\Twig_SimpleFunction('getLegacyLayout', [$this, 'getLegacyLayout']),\n            new \\Twig_SimpleFunction('getAdminLink', [$this, 'getAdminLink']),\n            new \\Twig_SimpleFunction('youtube_link', [$this, 'getYoutubeLink']),\n            new \\Twig_SimpleFunction('configuration', [$this, 'getConfiguration']),\n        ];\n    }\n\n    /**\n     * Returns a legacy configuration key.\n     *\n     * @param string $key\n     * @param mixed $default Default value is null\n     * @param ShopConstraint $shopConstraint Default value is null\n     *\n     * @return mixed\n     */\n    public function getConfiguration($key, $default = null, ShopConstraint $shopConstraint = null)\n    {\n        return $this->configuration->get($key, $default, $shopConstraint);\n    }\n\n    /**\n     * Get admin legacy layout into old controller context.\n     *\n     * Parameters can be set manually into twig template or sent from controller\n     * For details : check Resources/views/Admin/Layout.html.twig\n     *\n     * @param string $controllerName The legacy controller name\n     * @param string $title The page title to override default one\n     * @param array $headerToolbarBtn The header toolbar to override\n     * @param string $displayType The legacy display type variable\n     * @param bool $showContentHeader Can force header toolbar (buttons and title) to be hidden with false value\n     * @param array|string $headerTabContent Tabs labels\n     * @param bool $enableSidebar Allow to use right sidebar to display docs for instance\n     * @param string $helpLink If specified, will be used instead of legacy one\n     * @param string $metaTitle\n     * @param bool $useRegularH1Structure allows complex <h1> structure if set to false\n     *\n     * @throws Exception if legacy layout has no $content var replacement\n     *\n     * @return string The html layout\n     */\n    public function getLegacyLayout(\n        $controllerName = '',\n        $title = '',\n        $headerToolbarBtn = [],\n        $displayType = '',\n        $showContentHeader = true,\n        $headerTabContent = '',\n        $enableSidebar = false,\n        $helpLink = '',\n        $jsRouterMetadata = [],\n        $metaTitle = '',\n        $useRegularH1Structure = true\n    ) {\n        if ($this->environment == 'test') {\n            return <<<'EOF'\n<html>\n  <head>\n    <title>Test layout</title>\n    {% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}\n  </head>\n  <body>\n    {% block content_header %}{% endblock %}\n    {% block content %}{% endblock %}\n    {% block content_footer %}{% endblock %}\n    {% block javascripts %}{% endblock %}\n    {% block extra_javascripts %}{% endblock %}\n    {% block translate_javascripts %}{% endblock %}\n  </body>\n</html>\nEOF;\n        }\n\n        $layout = $this->context->getLegacyLayout(\n            $controllerName,\n            $title,\n            $headerToolbarBtn,\n            $displayType,\n            $showContentHeader,\n            $headerTabContent,\n            $enableSidebar,\n            $helpLink,\n            $jsRouterMetadata,\n            $metaTitle,\n            $useRegularH1Structure\n        );\n\n        //test if legacy template from \"content.tpl\" has '{$content}'\n        if (false === strpos($layout, '{$content}')) {\n            throw new Exception('PrestaShopBundle\\Twig\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\n        }\n\n        $content = str_replace(\n            [\n                '{$content}',\n                'var currentIndex = \\'index.php\\';',\n                '</head>',\n                '</body>',\n            ],\n            [\n                '{% block content_header %}{% endblock %}\n                 {% block content %}{% endblock %}\n                 {% block content_footer %}{% endblock %}\n                 {% block sidebar_right %}{% endblock %}',\n                'var currentIndex = \\'' . $this->context->getAdminLink($controllerName) . '\\';',\n                '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}</head>',\n                '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}</body>',\n            ],\n            $layout\n        );\n\n        return $content;\n    }\n\n    /**\n     * This is a Twig port of the Smarty {$link->getAdminLink()} function.\n     *\n     * @param string $controllerName\n     * @param bool $withToken\n     * @param array<string> $extraParams\n     *\n     * @return string\n     */\n    public function getAdminLink($controllerName, $withToken = true, $extraParams = [])\n    {\n        return $this->context->getAdminLink($controllerName, $withToken, $extraParams);\n    }\n\n    /**\n     * KISS function to get an embedded iframe from Youtube.\n     */\n    public function getYoutubeLink($watchUrl)\n    {\n        $embedUrl = str_replace(['watch?v=', 'youtu.be/'], ['embed/', 'youtube.com/embed/'], $watchUrl);\n\n        return '<iframe width=\"560\" height=\"315\" src=\"' . $embedUrl .\n            '\" frameborder=\"0\" allowfullscreen class=\"youtube-iframe m-x-auto\"></iframe>';\n    }\n\n    /**\n     * Returns the name of the extension.\n     *\n     * @return string The extension name\n     */\n    public function getName()\n    {\n        return 'twig_layout_extension';\n    }\n}\n"], "fixing_code": ["<?php\n/**\n * Copyright since 2007 PrestaShop SA and Contributors\n * PrestaShop is an International Registered Trademark & Property of PrestaShop SA\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.md.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to https://devdocs.prestashop.com/ for more information.\n *\n * @author    PrestaShop SA and Contributors <contact@prestashop.com>\n * @copyright Since 2007 PrestaShop SA and Contributors\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n */\n\nnamespace PrestaShopBundle\\Twig;\n\nuse Currency;\nuse Exception;\nuse PrestaShop\\PrestaShop\\Adapter\\Configuration;\nuse PrestaShop\\PrestaShop\\Adapter\\Currency\\CurrencyDataProvider;\nuse PrestaShop\\PrestaShop\\Adapter\\LegacyContext;\nuse PrestaShop\\PrestaShop\\Core\\Domain\\Shop\\ValueObject\\ShopConstraint;\nuse Twig\\Extension\\GlobalsInterface;\n\n/**\n * This class is used by Twig_Environment and provide layout methods callable from a twig template.\n */\nclass LayoutExtension extends \\Twig_Extension implements GlobalsInterface\n{\n    /** @var LegacyContext */\n    private $context;\n\n    /** @var string */\n    private $environment;\n\n    /** @var Configuration */\n    private $configuration;\n\n    /** @var CurrencyDataProvider */\n    private $currencyDataProvider;\n\n    /**\n     * Constructor.\n     *\n     * Keeps the Context to look inside language settings.\n     *\n     * @param LegacyContext $context\n     * @param string $environment\n     * @param Configuration $configuration\n     * @param CurrencyDataProvider $currencyDataProvider\n     */\n    public function __construct(\n        LegacyContext $context,\n        $environment,\n        Configuration $configuration,\n        CurrencyDataProvider $currencyDataProvider\n    ) {\n        $this->context = $context;\n        $this->environment = $environment;\n        $this->configuration = $configuration;\n        $this->currencyDataProvider = $currencyDataProvider;\n    }\n\n    /**\n     * Provides globals for Twig templates.\n     *\n     * @return array the base globals available in twig templates\n     */\n    public function getGlobals()\n    {\n        /*\n         * As this is a twig extension we need to be very resilient and prevent it from crashing\n         * the environment, for example the command debug:twig should not fail because of this extension\n         */\n\n        try {\n            $defaultCurrency = $this->context->getEmployeeCurrency() ?: $this->currencyDataProvider->getDefaultCurrency();\n        } catch (\\Exception $e) {\n            $defaultCurrency = null;\n        }\n        try {\n            $rootUrl = $this->context->getRootUrl();\n        } catch (\\Exception $e) {\n            $rootUrl = null;\n        }\n\n        return [\n            'theme' => $this->context->getContext()->shop->theme,\n            'default_currency' => $defaultCurrency,\n            'default_currency_symbol' => $defaultCurrency instanceof Currency ? $defaultCurrency->getSymbol() : null,\n            'root_url' => $rootUrl,\n            'js_translatable' => [],\n        ];\n    }\n\n    /**\n     * Define available filters.\n     *\n     * @return array Twig_SimpleFilter\n     */\n    public function getFilters()\n    {\n        return [\n            new \\Twig_SimpleFilter('configuration', [$this, 'getConfiguration'], ['deprecated' => true]),\n        ];\n    }\n\n    /**\n     * Returns a list of functions to add to the existing list.\n     *\n     * @return array An array of functions\n     */\n    public function getFunctions()\n    {\n        return [\n            new \\Twig_SimpleFunction('getLegacyLayout', [$this, 'getLegacyLayout']),\n            new \\Twig_SimpleFunction('getAdminLink', [$this, 'getAdminLink']),\n            new \\Twig_SimpleFunction('youtube_link', [$this, 'getYoutubeLink']),\n            new \\Twig_SimpleFunction('configuration', [$this, 'getConfiguration']),\n        ];\n    }\n\n    /**\n     * Returns a legacy configuration key.\n     *\n     * @param string $key\n     * @param mixed $default Default value is null\n     * @param ShopConstraint $shopConstraint Default value is null\n     *\n     * @return mixed\n     */\n    public function getConfiguration($key, $default = null, ShopConstraint $shopConstraint = null)\n    {\n        return $this->configuration->get($key, $default, $shopConstraint);\n    }\n\n    /**\n     * Get admin legacy layout into old controller context.\n     *\n     * Parameters can be set manually into twig template or sent from controller\n     * For details : check Resources/views/Admin/Layout.html.twig\n     *\n     * @param string $controllerName The legacy controller name\n     * @param string $title The page title to override default one\n     * @param array $headerToolbarBtn The header toolbar to override\n     * @param string $displayType The legacy display type variable\n     * @param bool $showContentHeader Can force header toolbar (buttons and title) to be hidden with false value\n     * @param array|string $headerTabContent Tabs labels\n     * @param bool $enableSidebar Allow to use right sidebar to display docs for instance\n     * @param string $helpLink If specified, will be used instead of legacy one\n     * @param string $metaTitle\n     * @param bool $useRegularH1Structure allows complex <h1> structure if set to false\n     *\n     * @throws Exception if legacy layout has no $content var replacement\n     *\n     * @return string The html layout\n     */\n    public function getLegacyLayout(\n        $controllerName = '',\n        $title = '',\n        $headerToolbarBtn = [],\n        $displayType = '',\n        $showContentHeader = true,\n        $headerTabContent = '',\n        $enableSidebar = false,\n        $helpLink = '',\n        $jsRouterMetadata = [],\n        $metaTitle = '',\n        $useRegularH1Structure = true\n    ) {\n        if ($this->environment == 'test') {\n            return <<<'EOF'\n<html>\n  <head>\n    <title>Test layout</title>\n    {% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}\n  </head>\n  <body>\n    {% block content_header %}{% endblock %}\n    {% block content %}{% endblock %}\n    {% block content_footer %}{% endblock %}\n    {% block javascripts %}{% endblock %}\n    {% block extra_javascripts %}{% endblock %}\n    {% block translate_javascripts %}{% endblock %}\n  </body>\n</html>\nEOF;\n        }\n\n        $layout = $this->context->getLegacyLayout(\n            $controllerName,\n            $title,\n            $headerToolbarBtn,\n            $displayType,\n            $showContentHeader,\n            $headerTabContent,\n            $enableSidebar,\n            $helpLink,\n            $jsRouterMetadata,\n            $metaTitle,\n            $useRegularH1Structure\n        );\n\n        //test if legacy template from \"content.tpl\" has '{$content}'\n        if (false === strpos($layout, '{$content}')) {\n            throw new Exception('PrestaShopBundle\\Twig\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\n        }\n\n        $explodedLayout = explode('{$content}', $layout);\n        $header = explode('</head>', $explodedLayout[0]);\n        $footer = explode('</body>', $explodedLayout[1]);\n\n        return $this->escapeSmarty(str_replace('var currentIndex = \\'index.php\\';', 'var currentIndex = \\'' . $this->context->getAdminLink($controllerName) . '\\';', $header[0]))\n            . '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}</head>'\n            . $this->escapeSmarty($header[1])\n            . '{% block content_header %}{% endblock %}'\n            . '{% block content %}{% endblock %}'\n            . '{% block content_footer %}{% endblock %}'\n            . '{% block sidebar_right %}{% endblock %}'\n            . $this->escapeSmarty($footer[0])\n            . '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}</body>'\n            . $this->escapeSmarty($footer[1]);\n    }\n\n    private function escapeSmarty(string $template): string\n    {\n        return '{{ \\'' . addslashes($template) . '\\' | raw }}';\n    }\n\n    /**\n     * This is a Twig port of the Smarty {$link->getAdminLink()} function.\n     *\n     * @param string $controllerName\n     * @param bool $withToken\n     * @param array<string> $extraParams\n     *\n     * @return string\n     */\n    public function getAdminLink($controllerName, $withToken = true, $extraParams = [])\n    {\n        return $this->context->getAdminLink($controllerName, $withToken, $extraParams);\n    }\n\n    /**\n     * KISS function to get an embedded iframe from Youtube.\n     */\n    public function getYoutubeLink($watchUrl)\n    {\n        $embedUrl = str_replace(['watch?v=', 'youtu.be/'], ['embed/', 'youtube.com/embed/'], $watchUrl);\n\n        return '<iframe width=\"560\" height=\"315\" src=\"' . $embedUrl .\n            '\" frameborder=\"0\" allowfullscreen class=\"youtube-iframe m-x-auto\"></iframe>';\n    }\n\n    /**\n     * Returns the name of the extension.\n     *\n     * @return string The extension name\n     */\n    public function getName()\n    {\n        return 'twig_layout_extension';\n    }\n}\n"], "filenames": ["src/PrestaShopBundle/Twig/LayoutExtension.php"], "buggy_code_start_loc": [221], "buggy_code_end_loc": [241], "fixing_code_start_loc": [221], "fixing_code_end_loc": [240], "type": "CWE-94", "message": "PrestaShop is an Open Source e-commerce platform. Starting with version 1.7.0.0 and ending with version 1.7.8.3, an attacker is able to inject twig code inside the back office when using the legacy layout. The problem is fixed in version 1.7.8.3. There are no known workarounds.", "other": {"cve": {"id": "CVE-2022-21686", "sourceIdentifier": "security-advisories@github.com", "published": "2022-01-26T20:15:07.843", "lastModified": "2022-02-04T16:21:16.660", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "PrestaShop is an Open Source e-commerce platform. Starting with version 1.7.0.0 and ending with version 1.7.8.3, an attacker is able to inject twig code inside the back office when using the legacy layout. The problem is fixed in version 1.7.8.3. There are no known workarounds."}, {"lang": "es", "value": "PrestaShop es una plataforma de comercio electr\u00f3nico de c\u00f3digo abierto. A partir de la versi\u00f3n 1.7.0.0 y hasta la versi\u00f3n 1.7.8.3, un atacante es capaz de inyectar c\u00f3digo twig dentro del back office cuando es usado el dise\u00f1o heredado. El problema ha sido corregido en la versi\u00f3n 1.7.8.3. No se presentan medidas de mitigaci\u00f3n conocidas"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.2, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:prestashop:prestashop:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.7.0.0", "versionEndIncluding": "1.7.8.3", "matchCriteriaId": "4B58474A-4627-46A8-8E6D-3281D5F4CC09"}]}]}], "references": [{"url": "https://github.com/PrestaShop/PrestaShop/commit/d02b469ec365822e6a9f017e57f588966248bf21", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/PrestaShop/PrestaShop/releases/tag/1.7.8.3", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-mrq4-7ch7-2465", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/PrestaShop/PrestaShop/commit/d02b469ec365822e6a9f017e57f588966248bf21"}}