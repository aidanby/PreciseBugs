{"buggy_code": ["# Changelog\n\n## [Unreleased]\n## Add\n- Add [extend_aspect_ratio](https://docs.imgproxy.net/latest/generating_the_url?id=extend-aspect-ratio) processing option.\n- Add the `IMGPROXY_ALLOW_SECURITY_OPTIONS` config + `max_src_resolution`, `max_src_file_size`, `max_animation_frames`, and `max_animation_frame_resolution` processing options.\n- (pro) Add [advanced smart crop](https://docs.imgproxy.net/latest/configuration?id=smart-crop).\n\n### Change\n- Make the `expires` processing option set `Expires` and `Cache-Control` headers.\n\n## [3.13.2] - 2023-02-15\n### Change\n- Remove color-related EXIF data when stripping ICC profile.\n- (pro) Optimize saving to MP4.\n\n### Fix\n- (pro) Fix saving with autoquality in some cases.\n- (pro) Fix saving large images to MP4.\n\n## [3.13.1] - 2023-01-16\n### Fix\n- Fix applying watermarks with replication.\n\n## [3.13.0] - 2023-01-11\n### Change\n- Add support for Managed Identity or Service Principal credentials to Azure Blob Storage integration.\n- Optimize memory usage in some scenarios.\n- Better SVG sanitization.\n- (pro) Allow usage of floating-point numbers in the `IMGPROXY_VIDEO_THUMBNAIL_SECOND` config and the `video_thumbnail_second` processing option.\n\n### Fix\n- Fix craches in some cases when using OpenTelemetry in Amazon ECS.\n- (pro) Fix saving of GIF with too small frame delay to MP4\n\n## [3.12.0] - 2022-12-11\n### Add\n- Add `IMGPROXY_MAX_ANIMATION_FRAME_RESOLUTION` config.\n- Add [Amazon CloudWatch](https://docs.imgproxy.net/latest/cloud_watch) support.\n- (pro) Add [`best` resultig image format](https://docs.imgproxy.net/latest/best_format).\n- (pro) Add `IMGPROXY_WEBP_COMPRESSION` config and [webp_options](https://docs.imgproxy.net/latest/generating_the_url?id=webp-options) processing option.\n\n### Change\n- Change `IMGPROXY_FORMAT_QUALITY` default value to `avif=65`.\n- Change `IMGPROXY_AVIF_SPEED` default value to `8`.\n- Change `IMGPROXY_PREFERRED_FORMATS` default value to `jpeg,png,gif`.\n- Set `Cache-Control: no-cache` header to the health check responses.\n- Allow replacing line breaks with `\\n` in `IMGPROXY_OPEN_TELEMETRY_SERVER_CERT`, `IMGPROXY_OPEN_TELEMETRY_CLIENT_CERT`, and`IMGPROXY_OPEN_TELEMETRY_CLIENT_KEY`.\n\n### Fix\n- Fix 3GP video format detection.\n\n## [3.11.0] - 2022-11-17\n### Add\n- Add `IMGPROXY_OPEN_TELEMETRY_GRPC_INSECURE` config.\n- Add `IMGPROXY_OPEN_TELEMETRY_TRACE_ID_GENERATOR` config.\n- (pro) Add XMP data to the `/info` response.\n\n### Change\n- Better XMP data stripping.\n- Use parent-based OpenTelemetry sampler by default.\n- Use fixed TraceIdRatioBased sampler with OpenTelemetry.\n\n## [3.10.0] - 2022-11-04\n### Add\n- Add `IMGPROXY_CLIENT_KEEP_ALIVE_TIMEOUT` config.\n- (pro) Add [disable_animation](https://docs.imgproxy.net/latest/generating_the_url?id=disable-animation) processing option.\n- (pro) Add [gradient](https://docs.imgproxy.net/latest/generating_the_url?id=gradient) processing option.\n\n### Fix\n- Fix false-positive SVG detections.\n- Fix possible infinite loop during SVG sanitization.\n- (pro) Fix saving of GIF with variable frame delay to MP4.\n- (pro) Fix the size of video thumbnails if the video has a defined sample aspect ratio.\n\n## [3.9.0] - 2022-10-19\n### Add\n- Add `IMGPROXY_SVG_FIX_UNSUPPORTED` config.\n\n### Fix\n- Fix HTTP response status when OpenTelemetry support is enabled.\n- (docker) Fix saving of paletted PNGs with low bit-depth.\n\n## [3.8.0] - 2022-10-06\n### Add\n- Add [raw](https://docs.imgproxy.net/latest/generating_the_url?id=raw) processing option.\n- Add [OpenTelemetry](https://docs.imgproxy.net/latest/open_telemetry) support.\n- (pro) Add encrypted source URL support.\n- (pro) Add [watermark_shadow](https://docs.imgproxy.net/generating_the_url?id=watermark-shadow) processing option.\n\n### Changed\n- Try to fix some invalid source URL cases that happen because of URL normalization.\n\n## [3.7.2] - 2022-08-22\n### Changed\n- (docker) Faster images quantization.\n- (docker) Faster loading of GIF.\n\n## [3.7.1] - 2022-08-01\n### Fix\n- Fix memory bloat in some cases.\n- Fix `format_quality` usage in presets.\n\n## [3.7.0] - 2022-07-27\n### Add\n- Add support of 16-bit BMP.\n- Add `IMGPROXY_NEW_RELIC_LABELS` config.\n- Add support of JPEG files with differential Huffman coding or arithmetic coding.\n- Add `IMGPROXY_PREFERRED_FORMATS` config.\n- Add `IMGPROXY_REQUESTS_QUEUE_SIZE` config.\n- Add `requests_in_progress` and `images_in_progress` metrics.\n- Add queue segment/span to request traces.\n- Add sending additional metrics to Datadog and `IMGPROXY_DATADOG_ENABLE_ADDITIONAL_METRICS` config.\n- Add sending additional metrics to New Relic.\n\n### Change\n- Change `IMGPROXY_MAX_CLIENTS` default value to 2048.\n- Allow unlimited connections when `IMGPROXY_MAX_CLIENTS` is set to `0`.\n- Change `IMGPROXY_TTL` default value to `31536000` (1 year).\n- Better errors tracking with metrics services.\n- (docker) Faster and better saving of GIF.\n- (docker) Faster saving of AVIF.\n- (docker) Faster loading and saving of PNG.\n\n### Fix\n- Fix trimming of CMYK images.\n- Respond with 404 when the source image can not be found in OpenStack Object Storage.\n- Respond with 404 when file wasn't found in the GCS storage.\n\n## [3.6.0] - 2022-06-13\n### Add\n- Add `IMGPROXY_RETURN_ATTACHMENT` config and [return_attachment](https://docs.imgproxy.net/generating_the_url?return-attachment) processing option.\n- Add SVG sanitization and `IMGPROXY_SANITIZE_SVG` config.\n\n### Change\n- Better animation detection.\n\n### Fix\n- Respond with 404 when file wasn't found in the local storage.\n\n## [3.5.1] - 2022-05-20\n### Change\n- Fallback from AVIF to JPEG/PNG if one of the result dimensions is smaller than 16px.\n\n### Fix\n- (pro) Fix some PDF pages background.\n- (docker) Fix loading some HEIF images.\n\n## [3.5.0] - 2022-04-25\n### Add\n- Add support of RLE-encoded BMP.\n- Add `IMGPROXY_ENFORCE_THUMBNAIL` config and [enforce_thumbnail](https://docs.imgproxy.net/generating_the_url?id=enforce-thumbnail) processing option.\n- Add `X-Result-Width` and `X-Result-Height` to debug headers.\n- Add `IMGPROXY_KEEP_COPYRIGHT` config and [keep_copyright](https://docs.imgproxy.net/generating_the_url?id=keep-copyright) processing option.\n\n### Change\n- Use thumbnail embedded to HEIC/AVIF if its size is larger than or equal to the requested.\n\n## [3.4.0] - 2022-04-07\n### Add\n- Add `IMGPROXY_FALLBACK_IMAGE_TTL` config.\n- (pro) Add [watermark_size](https://docs.imgproxy.net/generating_the_url?id=watermark-size) processing option.\n- Add OpenStack Object Storage (\"Swift\") support.\n- Add `IMGPROXY_GCS_ENDPOINT` config.\n\n### Change\n- (pro) Don't check `Content-Length` header of videos.\n\n### Fix\n- (pro) Fix custom watermarks on animated images.\n\n## [3.3.3] - 2022-03-21\n### Fix\n- Fix `s3` scheme status codes.\n- (pro) Fix saving animations to MP4.\n\n## [3.3.2] - 2022-03-17\n### Fix\n- Write logs to STDOUT instead of STDERR.\n- (pro) Fix crashes when some options are used in presets.\n\n## [3.3.1] - 2022-03-14\n### Fix\n- Fix transparrency in loaded ICO.\n- (pro) Fix video thumbnails orientation.\n\n## [3.3.0] - 2022-02-21\n### Added\n- Add the `IMGPROXY_MAX_REDIRECTS` config.\n- (pro) Add the `IMGPROXY_SERVER_NAME` config.\n- (pro) Add the `IMGPROXY_HEALTH_CHECK_MESSAGE` config.\n- Add the `IMGPROXY_HEALTH_CHECK_PATH` config.\n\n## [3.2.2] - 2022-02-08\n### Fix\n- Fix the `IMGPROXY_AVIF_SPEED` config.\n\n## [3.2.1] - 2022-01-19\n### Fix\n- Fix support of BMP with unusual data offsets.\n\n## [3.2.0] - 2022-01-18\n### Added\n- (pro) Add `video_meta` to the `/info` response.\n- Add [zoom](https://docs.imgproxy.net/generating_the_url?id=zoom) processing option.\n- Add 1/2/4-bit BMP support.\n\n### Change\n- Optimized `crop`.\n\n### Fix\n- Fix Datadog support.\n- Fix `force` resizing + rotation.\n- (pro) Fix `obj` gravity.\n\n## [3.1.3] - 2021-12-17\n### Fix\n- Fix ETag checking when S3 is used.\n\n## [3.1.2] - 2021-12-15\n### Fix\n- (pro) Fix object detection.\n\n## [3.1.1] - 2021-12-10\n### Fix\n- Fix crashes in some scenarios.\n\n## [3.1.0] - 2021-12-08\n### Added\n- Add `IMGPROXY_ETAG_BUSTER` config.\n- (pro) [watermark_text](https://docs.imgproxy.net/generating_the_url?id=watermark-text) processing option.\n\n### Change\n- Improved ICC profiles handling.\n- Proper error message when the deprecated basic URL format is used.\n- Watermark offsets can be applied to replicated watermarks.\n\n### Fix\n- (pro) Fix parsing metadata of extended sequential JPEGs.\n\n## [3.0.0] - 2021-11-23\n### Added\n- (pro) [Autoquality](https://docs.imgproxy.net/autoquality).\n- (pro) [Object detection](https://docs.imgproxy.net/object_detection): `obj` [gravity](https://docs.imgproxy.net/generating_the_url?id=gravity) type, [blur_detections](https://docs.imgproxy.net/generating_the_url?id=blur-detections) processing option, [draw_detections](https://docs.imgproxy.net/generating_the_url?id=draw-detections) processing option.\n- (pro) [Chained pipelines](https://docs.imgproxy.net/chained_pipelines)\n- `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` config.\n- (pro) [fallback_image_url](https://docs.imgproxy.net/generating_the_url?id=fallback-image-url) processing option.\n- [expires](https://docs.imgproxy.net/generating_the_url?id=expires) processing option.\n- [skip processing](https://docs.imgproxy.net/generating_the_url?id=skip-processing) processing option.\n- [Datadog](./docs/datadog.md) metrics.\n- `force` and `fill-down` resizing types.\n- [min-width](https://docs.imgproxy.net/generating_the_url?id=min-width) and [min-height](https://docs.imgproxy.net/generating_the_url?id=min-height) processing options.\n- [format_quality](https://docs.imgproxy.net/generating_the_url?id=format-quality) processing option.\n- Add `X-Origin-Width` and `X-Origin-Height` to debug headers.\n- Add `IMGPROXY_COOKIE_PASSTHROUGH` and `IMGPROXY_COOKIE_BASE_URL` configs.\n- Add `client_ip` to requests and responses logs.\n\n### Change\n- ETag generator & checker uses source image ETag when possible.\n- `304 Not Modified` responses includes `Cache-Control`, `Expires`, and `Vary` headers.\n- `dpr` processing option doesn't enlarge image unless `enlarge` is true.\n- imgproxy responds with `500` HTTP code when the source image downloading error seems temporary (timeout, server error, etc).\n- When `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` is zero, imgproxy responds with the usual HTTP code.\n- BMP support doesn't require ImageMagick.\n- Save GIFs without ImageMagick (vips 8.12+ required).\n\n### Fix\n- Fix Client Hints behavior. `Width` is physical size, so we should divide it by `DPR` value.\n- Fix scale-on-load in some rare cases.\n- Fix the default Sentry release name.\n- Fix the `health` command when the path prefix is set.\n- Escape double quotes in content disposition.\n\n### Removed\n- Removed basic URL format, use [advanced one](./docs/generating_the_url.md) instead.\n- Removed `IMGPROXY_MAX_SRC_DIMENSION` config, use `IMGPROXY_MAX_SRC_RESOLUTION` instead.\n- Removed `IMGPROXY_GZIP_COMPRESSION` config.\n- Removed `IMGPROXY_MAX_GIF_FRAMES` config, use `IMGPROXY_MAX_ANIMATION_FRAMES` instead.\n- Removed `crop` resizing type, use [crop](./docs/generating_the_url.md#crop) processing option instead.\n- Dropped old libvips (<8.10) support.\n- (pro) Removed advanced GIF optimizations. All optimizations are applied by default ib both OSS and Pro versions.\n\n## [3.0.0.beta2] - 2021-11-15\n### Added\n- Add `X-Origin-Width` and `X-Origin-Height` to debug headers.\n- Add `IMGPROXY_COOKIE_PASSTHROUGH` and `IMGPROXY_COOKIE_BASE_URL` configs.\n\n### Change\n- `dpr` processing option doesn't enlarge image unless `enlarge` is true.\n- `304 Not Modified` responses includes `Cache-Control`, `Expires`, and `Vary` headers.\n- imgproxy responds with `500` HTTP code when the source image downloading error seems temporary (timeout, server error, etc).\n- When `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` is zero, imgproxy responds with the usual HTTP code.\n- BMP support doesn't require ImageMagick.\n\n### Fix\n- Fix Client Hints behavior. `Width` is physical size, so we should divide it by `DPR` value.\n- Fix scale-on-load in some rare cases.\n- Fix `requests_total` counter in Prometheus.\n\n## [3.0.0.beta1] - 2021-10-01\n### Added\n- (pro) [Autoquality](https://docs.imgproxy.net/autoquality).\n- (pro) [Object detection](https://docs.imgproxy.net/object_detection): `obj` [gravity](https://docs.imgproxy.net/generating_the_url?id=gravity) type, [blur_detections](https://docs.imgproxy.net/generating_the_url?id=blur-detections) processing option, [draw_detections](https://docs.imgproxy.net/generating_the_url?id=draw-detections) processing option.\n- (pro) [Chained pipelines](https://docs.imgproxy.net/chained_pipelines)\n- `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` config.\n- (pro) [fallback_image_url](https://docs.imgproxy.net/generating_the_url?id=fallback-image-url) processing option.\n- [expires](https://docs.imgproxy.net/generating_the_url?id=expires) processing option.\n- [skip processing](https://docs.imgproxy.net/generating_the_url?id=skip-processing) processing option.\n- [Datadog](./docs/datadog.md) metrics.\n- `force` and `fill-down` resizing types.\n- [min-width](https://docs.imgproxy.net/generating_the_url?id=min-width) and [min-height](https://docs.imgproxy.net/generating_the_url?id=min-height) processing options.\n- [format_quality](https://docs.imgproxy.net/generating_the_url?id=format-quality) processing option.\n\n### Change\n- ETag generator & checker uses source image ETag when possible.\n\n### Removed\n- Removed basic URL format, use [advanced one](./docs/generating_the_url.md) instead.\n- Removed `IMGPROXY_MAX_SRC_DIMENSION` config, use `IMGPROXY_MAX_SRC_RESOLUTION` instead.\n- Removed `IMGPROXY_GZIP_COMPRESSION` config.\n- Removed `IMGPROXY_MAX_GIF_FRAMES` config, use `IMGPROXY_MAX_ANIMATION_FRAMES` instead.\n- Removed `crop` resizing type, use [crop](./docs/generating_the_url.md#crop) processing option instead.\n- Dropped old libvips (<8.8) support.\n\n## [2.17.0] - 2021-09-07\n### Added\n- Wildcard support in `IMGPROXY_ALLOWED_SOURCES`.\n\n### Change\n- If the source URL contains the `IMGPROXY_BASE_URL` prefix, it won't be added.\n\n### Fix\n- (pro) Fix path prefix support in the `/info` handler.\n\n### Deprecated\n- The [basic URL format](https://docs.imgproxy.net/generating_the_url_basic) is deprecated and can be removed in future versions. Use [advanced URL format](https://docs.imgproxy.net/generating_the_url_advanced) instead.\n\n## [2.16.7] - 2021-07-20\n### Change\n- Reset DPI while stripping meta.\n\n## [2.16.6] - 2021-07-08\n### Fix\n- Fix performance regression in ICC profile handling.\n- Fix crashes while processing CMYK images without ICC profile.\n\n## [2.16.5] - 2021-06-28\n### Change\n- More clear downloading errors.\n\n### Fix\n- Fix ICC profile handling in some cases.\n- Fix handling of negative height value for BMP.\n\n## [2.16.4] - 2021-06-16\n### Change\n- Use magenta (ff00ff) as a transparency key in `trim`.\n\n### Fix\n- Fix crashes while processing some SVGs (dockerized version).\n- (pro) Fix parsing HEIF/AVIF meta.\n\n## [2.16.3] - 2021-04-05\n### Fix\n- Fix PNG quantization palette size.\n- Fix parsing HEIF meta.\n- Fix debig header.\n\n## [2.16.2] - 2021-03-04\n### Change\n- Updated dependencies in Docker.\n\n## [2.16.1] - 2021-03-02\n### Fix\n- Fix delays and loop numbers of animated images.\n- Fix scale-on-load of huge SVGs.\n- (pro) Fix loading of PDFs with transparent background.\n\n## [2.16.0] - 2021-02-08\n### Added\n- AVIF support.\n- Azure Blob Storage support.\n- `IMGPROXY_STRIP_COLOR_PROFILE` config and [strip_color_profile](https://docs.imgproxy.net/generating_the_url?id=strip-color-profile) processing option.\n- `IMGPROXY_FORMAT_QUALITY` config.\n- `IMGPROXY_AUTO_ROTATE` config and [auto_rotate](https://docs.imgproxy.net/generating_the_url?id=auto-rotate) processing option.\n- [rotate](https://docs.imgproxy.net/generating_the_url?id=rotate) processing option.\n- `width` and `height` arguments of the [crop](https://docs.imgproxy.net/generating_the_url?id=crop) processing option can be less than `1` that is treated by imgproxy as a relative value (a.k.a. crop by percentage).\n- (pro) Remove Adobe Illustrator garbage from SVGs.\n- (pro) Add IPTC tags to the `/info` response.\n\n### Changed\n- Disable scale-on-load for animated images since it causes many problems. Currently, only animated WebP is affected.\n- Improved ICC profiles handling.\n- (pro) Improved and optimized video thumbnails generation.\n\n### Fix\n- Fix `dpr` option.\n- Fix non-strict SVG detection.\n- Fix non-UTF8 SVG detection.\n- Fix checking of connections in queue.\n- (pro) Fix video thumbnail orientation.\n- (pro) Fix EXIF fields titles in the `/info` response.\n\n## [2.15.0] - 2020-09-03\n### Added\n- Ability to skip processing of some formats. See [Skip processing](https://docs.imgproxy.net/configuration?id=skip-processing).\n- (pro) PDF support.\n- (pro) [video_thumbnail_second](https://docs.imgproxy.net/generating_the_url?id=video-thumbnail-second) processing option.\n- (pro) [page](https://docs.imgproxy.net/generating_the_url?id=page) processing option.\n- (pro) [background_alpha](https://docs.imgproxy.net/generating_the_url?id=background-alpha) processing option.\n- (pro) `IMGPROXY_VIDEO_THUMBNAIL_PROBE_SIZE` and `IMGPROXY_VIDEO_THUMBNAIL_MAX_ANALYZE_DURATION` configs.\n\n### Changed\n- Speed up generation of video thumbnails with large timestamps.\n\n### Fix\n- Fix `padding` and `extend` behaior when converting from a fromat without alpha support to one with alpha support.\n- Fix WebP dimension limit handling.\n- (pro) Fix thumbnails generation of some videos.\n\n## [2.14.1] - 2020-07-22\n### Fix\n- Fix ICO saving.\n\n## [2.14.0] - 2020-07-17\n### Added\n- `IMGPROXY_PROMETHEUS_NAMESPACE` config.\n- [strip_metadata](https://docs.imgproxy.net/generating_the_url?id=strip-metadata) processing option.\n- (pro) Configurable unsharpening. See [Unsharpening](https://docs.imgproxy.net/configuration?id=unsharpening) configs and [unsharpening](https://docs.imgproxy.net/generating_the_url?id=unsharpening) processing option.\n\n### Changed\n- Better for libvips memory metrics for Prometheus.\n- Docker image includes the latest versions of dependencies.\n- Optimize processing of animated images.\n\n### Fix\n- Fix error when requested WebP dimension exceeds the WebP dimension limit.\n- Fix path parsing in some rare cases.\n- Fix HEIC/HEIF header parsing bug.\n\n### Deprecated\n- (pro) `IMGPROXY_APPLY_UNSHARPEN_MASKING` config is deprecated, use `IMGPROXY_UNSHARPENING_MODE` instead.\n\n## [2.13.1] - 2020-05-06\n### Fixed\n- Fix and optimize processing of animated images.\n\n## [2.13.0] - 2020-04-22\n### Added\n- Fallback images.\n- [padding](https://docs.imgproxy.net/generating_the_url?id=padding) processing option.\n\n### Changed\n- Optimized memory usage. Especially when dealing with animated images.\n\n### Fixed\n- Fix crashes during animated images processing.\n\n## [2.12.0] - 2020-04-07\n### Addded\n- `IMGPROXY_PATH_PREFIX` config.\n- (pro) Video thumbnails.\n- (pro) [Getting the image info](https://docs.imgproxy.net/getting_the_image_info).\n\n### Changed\n- Improved `trim` processing option.\n- Quantizr updated to 0.2.0 in Docker image.\n\n## [2.11.0] - 2020-03-12\n### Changed\n- Replaced imagequant with [Quantizr](https://github.com/DarthSim/quantizr) in docker image.\n- Removed HEIC saving support.\n- Removed JBIG compressin support in TIFF.\n\n## [2.10.1] - 2020-02-27\n### Changed\n- `imgproxy -v` is replaced with `imgproxy version`.\n\n### Fixed\n- Fix loadind BMP stored in ICO.\n- Fix ambiguous HEIC magic bytes (MP4 videos has been detected as HEIC).\n- Fix build with libvips < 8.6.\n- Fix build with Go 1.14.\n- Fix go module naming. Use `github.com/imgproxy/imgproxy/v2` to build imgproxy from source.\n\n## [2.10.0] - 2020-02-13\n### Added\n- `IMGPROXY_NETWORK` config. Allows to bind on Unix socket.\n- `IMGPROXY_CACHE_CONTROL_PASSTHROUGH` config.\n- `imgproxy health` command.\n- (pro) `IMGPROXY_GIF_OPTIMIZE_FRAMES` & `IMGPROXY_GIF_OPTIMIZE_TRANSPARENCY` configs and `gif_options` processing option.\n- (pro) `IMGPROXY_CUSTOM_REQUEST_HEADERS`, `IMGPROXY_CUSTOM_RESPONSE_HEADERS`, and `IMGPROXY_CUSTOM_HEADERS_SEPARATOR` configs.\n\n### Changed\n\n- Better SVG detection.\n\n### Fixed\n- Fix detection of SVG starting with a comment.\n\n## [2.9.0] - 2020-01-30\n### Added\n- `trim` processing option.\n- `IMGPROXY_STRIP_METADATA` config.\n\n### Fixed\n- Fixed focus point crop calculation.\n\n## [2.8.2] - 2020-01-13\n### Changed\n- Optimized memory usage.\n\n### Fixed\n- Fixed `IMGPROXY_ALLOWED_SOURCES` config.\n\n## [2.8.1] - 2019-12-27\n### Fixed\n- Fix watermark top offset calculation.\n\n## [2.8.0] - 2019-12-25\n### Added\n- `IMGPROXY_LOG_LEVEL` config.\n- `max_bytes` processing option.\n- `IMGPROXY_ALLOWED_SOURCES` config.\n\n### Changed\n- Docker image base is changed to Debian 10 for better stability and performance.\n- `extend` option now supports gravity.\n\n## [2.7.0] - 2019-11-13\n### Changed\n- Boolean processing options such as `enlarge` and `extend` are properly parsed. `1`, `t`, `TRUE`, `true`, `True` are truthy, `0`, `f`, `F`, `FALSE`, `false`, `False` are falsy. All other values are treated as falsy and generate a warning message.\n\n### Fixed\n- Fix segfaults on watermarking in some cases\n\n## [2.6.2] - 2019-11-11\n### Fixed\n- Fix `format` option in presets.\n\n## [2.6.1] - 2019-10-28\n### Fixed\n- Fix loading of some GIFs by using the edge version of giflib.\n\n## [2.6.0] - 2019-10-23\n### Added\n- TIFF and BMP support.\n- `IMGPROXY_REPORT_DOWNLOADING_ERRORS` config. Setting it to `false` disables reporting of downloading errors.\n- SVG passthrough. When source image and requested format are SVG, image will be returned without changes.\n- `IMGPROXY_USE_GCS` config. When it set to true and `IMGPROXY_GCS_KEY` is not set, imgproxy tries to use Application Default Credentials to get access to GCS bucket.\n\n### Changed\n- Reimplemented and more errors-tolerant image size parsing.\n- Log only modified processing options.\n\n### Fixed\n- Fixed sharpening+watermarking.\n- Fixed path parsing when no options is provided and image URL is Base64 encoded.\n\n### Deprecated\n- Using `IMGPROXY_GCS_KEY` without `IMGPROXY_USE_GCS` set to `true` is deprecated.\n\n## [2.5.0] - 2019-09-19\n### Added\n- `structured` and `json` log formats. Can be set with `IMGPROXY_LOG_FORMAT`.\n\n### Changed\n- New default log format.\n- Better watermarking: image transparency doesn't affect watermarks, faster watermark scaling.\n\n## [2.4.1] - 2019-08-29\n### Changed\n- More verbose URL parsing errors.\n\n## [2.4.0] - 2019-08-20\n### Added\n- `SO_REUSEPORT` socker option support. Can be enabled with `IMGPROXY_SO_REUSEPORT`.\n- [filename](./docs/generating_the_url.md#filename) option.\n\n### Changed\n- Better handling if non-sRGB images.\n- `dpr` option always changes the resulting size even if it leads to enlarge and `enlarge` is falsey.\n- Log to STDOUT.\n- Only unexpected errors are reported to Bugsnag/Honeybadger/Sentry.\n- Better Sentry support.\n\n### Deprecated\n- GZip compression support is deprecated.\n\n## [2.3.0] - 2019-06-25\n### Added\n- `libvips` v8.8 support: better processing of animated GIFs, built-in CMYK profile, better WebP scale-on-load, etc;\n- Animated WebP support. `IMGPROXY_MAX_GIF_FRAMES` is deprecated, use `IMGPROXY_MAX_ANIMATION_FRAMES`;\n- [HEIC support](./docs/image_formats_support.md#heic-support);\n- [crop](./docs/generating_the_url.md#crop) processing option. `resizing_type:crop` is deprecated;\n- Offsets for [gravity](./docs/generating_the_url.md#gravity);\n- Resizing type `auto`. If both source and resulting dimensions have the same orientation (portrait or landscape), imgproxy will use `fill`. Otherwise, it will use `fit`;\n- Development errors mode. When `IMGPROXY_DEVELOPMENT_ERRORS_MODE` is true, imgproxy will respond with detailed error messages. Not recommended for production because some errors may contain stack trace;\n- `IMGPROXY_KEEP_ALIVE_TIMEOUT` config.\n\n### Changed\n- Allow URL query for `/health`;\n- Better stack trace for image processing errors;\n\n## [2.2.13] - 2019-05-07\n### Added\n- Send `X-Request-ID` header in response.\n\n### Changed\n- Better shrink-on-load.\n- Don't import common sRGB IEC61966-2.1 ICC profile unless linear colorspace is used.\n- Don't fail on recursive preset usage, just ignore already used preset and log warning.\n\n## [2.2.12] - 2019-04-11\n### Changed\n- Don't fail processing when embedded ICC profile is not compatible with the image.\n\n## [2.2.11] - 2019-04-08\n### Changed\n- Optimized ICC import when linear colorspace usage is disabled.\n\n## [2.2.10] - 2019-04-05\n### Added\n- PNG quantization. Can be enabled with `IMGPROXY_PNG_QUANTIZE`. Palette size can be specified with `IMGPROXY_PNG_QUANTIZATION_COLORS`.\n\n### Changed\n- Resizing images in linear colorspace is disabled by default. Can be enabled with `IMGPROXY_USE_LINEAR_COLORSPACE`;\n\n## [2.2.9] - 2019-04-02\n### Fixed\nFixed processing of images with embedded profiles that was broken in v2.2.8.\n\n## [2.2.8] - 2019-04-01\n### Added\n- Resizing in linear colorspace;\n- `IMGPROXY_DISABLE_SHRINK_ON_LOAD` config to disable shring-on-load of JPEG and WebP.\n\n### Fixed\n- Remove orc from Docker image (causes segfaults in some cases).\n\n## [2.2.7] - 2019-03-22\n### Changed\n- Memory usage optimizations.\n\n### Fixed\n- Fix color management.\n\n## [2.2.6] - 2019-02-27\n### Fixed\n- Fix signature check when source URL is escaped.\n\n## [2.2.5] - 2019-02-21\n### Added\n- [extend](./docs/generating_the_url.md#extend) processing option.\n- `vips_memory_bytes`, `vips_max_memory_bytes` and `vips_allocs` metrics for Prometheus.\n\n### Fixed\n- Fix SVG detection.\n\n## [2.2.4] - 2019-02-13\n### Changed\n- Minor improvements.\n\n## [2.2.3] - 2019-02-04\n### Changed\n- Simple filesystem transport withh less memory usage.\n\n### Fixed\n- Fix critical bug with cached C strings;\n\n## [2.2.2] - 2019-02-01\n\n- Memory usage optimizations.\n\n## [2.2.1] - 2019-01-21\n### Added\n- Source file size limit.\n\n### Changed\n- More memory usage optimizations.\n\n## [2.2.0] - 2019-01-19\n### Changed\n- Optimized memory usage. [Memory usage tweaks](./docs/memory_usage_tweaks.md).\n- `Vary` header is set when WebP detection, client hints or GZip compression are enabled.\n- Health check doesn't require `Authorization` header anymore.\n\n## [2.1.5] - 2019-01-14\n### Added\n- [Sentry support](./docs/configuration.md#error-reporting) (thanks to [@koenpunt](https://github.com/koenpunt)).\n- [Syslog support](./docs/configuration.md#syslog).\n\n### Fixed\n- Fix detection of some kind of WebP images;\n\n## [2.1.4] - 2019-01-10\n### Added\n- SVG sources support.\n\n### Changed\n- Memory usage optimizations.\n- Proper filename in the `Content-Disposition` header.\n\n### Fixed\n- Fix support for not animated GIFs.\n\n## [2.1.3] - 2018-12-10\n### Added\n- [Minio support](./docs/serving_files_from_s3.md#minio)\n\n## [2.1.2] - 2018-12-02\n### Added\n- ICO support\n\n## [2.1.1] - 2018-11-29\n### Changed\n- When libvips failed to save PNG, imgproxy will try to save is without embedded ICC profile.\n\n### Fixed\n- Fixed EXIF orientation fetching.\n\n## [2.1.0] - 2018-11-16\n### Added\n- [Plain source URLs](./docs/generating_the_url.md#plain) support.\n- [Serving images from Google Cloud Storage](./docs/serving_files_from_google_cloud_storage.md).\n- [Full support of GIFs](./docs/image_formats_support.md#gif-support) including animated ones.\n- [Watermarks](./docs/watermark.md).\n- [New Relic](./docs/new_relic.md) metrics.\n- [Prometheus](./docs/prometheus.md) metrics.\n- [DPR](./docs/generating_the_url.md#dpr) option (thanks to [selul](https://github.com/selul)).\n- [Cache buster](./docs/generating_the_url.md#cache-buster) option.\n- [Quality](./docs/generating_the_url.md#quality) option.\n- Support for custom [Amazon S3](./docs/serving_files_from_s3.md) endpoints.\n- Support for [Amazon S3](./docs/serving_files_from_s3.md) versioning.\n- [Client hints](./docs/configuration.md#client-hints-support) support (thanks to [selul](https://github.com/selul)).\n- Truncated signature support (thanks to [printercu](https://github.com/printercu)).\n\n### Changed\n- imgproxy uses source image format by default for the resulting image.\n- Send `User-Agent` header when downloading a source image.\n- Proper filename in `Content-Disposition` header in the response.\n\n### Deprecated\n- `IMGPROXY_MAX_SRC_DIMENSION` is **deprecated**, use `IMGPROXY_MAX_SRC_RESOLUTION` instead.\n\n## [2.0.3] - 2018-11-02\n### Fixed\n- Fix URL validation when IMGPROXY_BASE_URL is used.\n\n## [2.0.2] - 2018-10-25\n### Fixed\n- Fix smart crop + blur/sharpen SIGSEGV on Alpine.\n\n## [2.0.1] - 2018-10-18\n### Fixed\n- Minor fixes.\n\n## [2.0.0] - 2018-10-08\nAll-You-Ever-Wanted release! :tada:\n### Added\n- [New advanced URL format](./docs/generating_the_url.md). Unleash the full power of imgproxy v2.0.\n- [Presets](./docs/presets.md). Shorten your urls by reusing processing options.\n- [Serving images from Amazon S3](./docs/serving_files_from_s3.md). Thanks to [@crohr](https://github.com/crohr), now we have a way to serve files from private S3 buckets.\n- [Autoconverting to WebP when supported by browser](./docs/configuration.md#avifwebp-support-detection) (disabled by default). Use WebP as resulting format when browser supports it.\n- [Gaussian blur](./docs/generating_the_url.md#blur) and [sharpen](./docs/generating_the_url.md#sharpen) filters. Make your images look better than before.\n- [Focus point gravity](./docs/generating_the_url.md#gravity). Tell imgproxy what point will be the center of the image.\n- [Background color](./docs/generating_the_url.md#background). Control the color of background when converting PNG with alpha-channel to JPEG.\n\n### Changed\n- Key and salt are not required anymore. When key or salt is not specified, signature checking is disabled.\n- Imgproxy calcs resulting width/height automaticly when one specified as zero.\n- Memory usage is optimized.\n\n## [1.1.8] - 2018-10-01\n### Fixed\n- Disable libvips cache to prevent SIGSEGV on Alpine.\n\n## [1.1.7] - 2018-09-06\n### Changed\n- Improved ETag generation.\n\n## [1.1.6] - 2018-07-26\n### Added\n- Progressive JPEG and interlaced PNG support.\n\n## [1.1.5.1] - 2018-05-25\n### Fixed\n- Fix autorotation when image is not resized.\n\n## [1.1.5] - 2018-04-27\n### Added\n- CORS headers.\n- `IMGPROXY_BASE_URL` config.\n- `Content-Length` header.\n\n## [1.1.4] - 2018-03-19\n### Added\n- Request ID in the logs.\n\n### Changed\n- Idle time does not causes timeout.\n- Increased default maximum number of simultaneous active connections.\n", "package svg\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"strings\"\n\n\tnanoid \"github.com/matoous/go-nanoid/v2\"\n\t\"github.com/tdewolff/parse/v2\"\n\t\"github.com/tdewolff/parse/v2/xml\"\n\n\t\"github.com/imgproxy/imgproxy/v3/imagedata\"\n)\n\nvar feDropShadowName = []byte(\"feDropShadow\")\n\nconst feDropShadowTemplate = `\n\t<feMerge result=\"dsin-%[1]s\"><feMergeNode %[3]s /></feMerge>\n\t<feGaussianBlur %[4]s />\n\t<feOffset %[5]s result=\"dsof-%[2]s\" />\n\t<feFlood %[6]s />\n\t<feComposite in2=\"dsof-%[2]s\" operator=\"in\" />\n\t<feMerge %[7]s>\n\t\t<feMergeNode />\n\t\t<feMergeNode in=\"dsin-%[1]s\" />\n\t</feMerge>\n`\n\nfunc Satitize(data *imagedata.ImageData) (*imagedata.ImageData, error) {\n\tr := bytes.NewReader(data.Data)\n\tl := xml.NewLexer(parse.NewInput(r))\n\n\tbuf, cancel := imagedata.BorrowBuffer()\n\n\tignoreTag := 0\n\n\tfor {\n\t\ttt, tdata := l.Next()\n\n\t\tif ignoreTag > 0 {\n\t\t\tswitch tt {\n\t\t\tcase xml.ErrorToken:\n\t\t\t\tcancel()\n\t\t\t\treturn nil, l.Err()\n\t\t\tcase xml.EndTagToken, xml.StartTagCloseVoidToken:\n\t\t\t\tignoreTag--\n\t\t\tcase xml.StartTagToken:\n\t\t\t\tignoreTag++\n\t\t\t}\n\n\t\t\tcontinue\n\t\t}\n\n\t\tswitch tt {\n\t\tcase xml.ErrorToken:\n\t\t\tif l.Err() != io.EOF {\n\t\t\t\tcancel()\n\t\t\t\treturn nil, l.Err()\n\t\t\t}\n\n\t\t\tnewData := imagedata.ImageData{\n\t\t\t\tData: buf.Bytes(),\n\t\t\t\tType: data.Type,\n\t\t\t}\n\t\t\tnewData.SetCancel(cancel)\n\n\t\t\treturn &newData, nil\n\t\tcase xml.StartTagToken:\n\t\t\tif strings.ToLower(string(l.Text())) == \"script\" {\n\t\t\t\tignoreTag++\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tbuf.Write(tdata)\n\t\tcase xml.AttributeToken:\n\t\t\tif _, unsafe := unsafeAttrs[strings.ToLower(string(l.Text()))]; unsafe {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tbuf.Write(tdata)\n\t\tdefault:\n\t\t\tbuf.Write(tdata)\n\t\t}\n\t}\n}\n\nfunc replaceDropShadowNode(l *xml.Lexer, buf *bytes.Buffer) error {\n\tvar (\n\t\tinAttrs     strings.Builder\n\t\tblurAttrs   strings.Builder\n\t\toffsetAttrs strings.Builder\n\t\tfloodAttrs  strings.Builder\n\t\tfinalAttrs  strings.Builder\n\t)\n\n\tinID, _ := nanoid.New(8)\n\toffsetID, _ := nanoid.New(8)\n\n\thasStdDeviation := false\n\thasDx := false\n\thasDy := false\n\nTOKEN_LOOP:\n\tfor {\n\t\ttt, tdata := l.Next()\n\n\t\tswitch tt {\n\t\tcase xml.ErrorToken:\n\t\t\tif l.Err() != io.EOF {\n\t\t\t\treturn l.Err()\n\t\t\t}\n\t\t\tbreak TOKEN_LOOP\n\t\tcase xml.EndTagToken, xml.StartTagCloseVoidToken:\n\t\t\tbreak TOKEN_LOOP\n\t\tcase xml.AttributeToken:\n\t\t\tswitch strings.ToLower(string(l.Text())) {\n\t\t\tcase \"in\":\n\t\t\t\tinAttrs.Write(tdata)\n\t\t\tcase \"stddeviation\":\n\t\t\t\tblurAttrs.Write(tdata)\n\t\t\t\thasStdDeviation = true\n\t\t\tcase \"dx\":\n\t\t\t\toffsetAttrs.Write(tdata)\n\t\t\t\thasDx = true\n\t\t\tcase \"dy\":\n\t\t\t\toffsetAttrs.Write(tdata)\n\t\t\t\thasDy = true\n\t\t\tcase \"flood-color\", \"flood-opacity\":\n\t\t\t\tfloodAttrs.Write(tdata)\n\t\t\tdefault:\n\t\t\t\tfinalAttrs.Write(tdata)\n\t\t\t}\n\t\t}\n\t}\n\n\tif !hasStdDeviation {\n\t\tblurAttrs.WriteString(` stdDeviation=\"2\"`)\n\t}\n\n\tif !hasDx {\n\t\toffsetAttrs.WriteString(` dx=\"2\"`)\n\t}\n\n\tif !hasDy {\n\t\toffsetAttrs.WriteString(` dy=\"2\"`)\n\t}\n\n\tfmt.Fprintf(\n\t\tbuf, feDropShadowTemplate,\n\t\tinID, offsetID,\n\t\tinAttrs.String(),\n\t\tblurAttrs.String(),\n\t\toffsetAttrs.String(),\n\t\tfloodAttrs.String(),\n\t\tfinalAttrs.String(),\n\t)\n\n\treturn nil\n}\n\nfunc FixUnsupported(data *imagedata.ImageData) (*imagedata.ImageData, bool, error) {\n\tif !bytes.Contains(data.Data, feDropShadowName) {\n\t\treturn data, false, nil\n\t}\n\n\tr := bytes.NewReader(data.Data)\n\tl := xml.NewLexer(parse.NewInput(r))\n\n\tbuf, cancel := imagedata.BorrowBuffer()\n\n\tfor {\n\t\ttt, tdata := l.Next()\n\n\t\tswitch tt {\n\t\tcase xml.ErrorToken:\n\t\t\tif l.Err() != io.EOF {\n\t\t\t\tcancel()\n\t\t\t\treturn nil, false, l.Err()\n\t\t\t}\n\n\t\t\tnewData := imagedata.ImageData{\n\t\t\t\tData: buf.Bytes(),\n\t\t\t\tType: data.Type,\n\t\t\t}\n\t\t\tnewData.SetCancel(cancel)\n\n\t\t\treturn &newData, true, nil\n\t\tcase xml.StartTagToken:\n\t\t\tif bytes.Equal(l.Text(), feDropShadowName) {\n\t\t\t\tif err := replaceDropShadowNode(l, buf); err != nil {\n\t\t\t\t\tcancel()\n\t\t\t\t\treturn nil, false, err\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tbuf.Write(tdata)\n\t\tdefault:\n\t\t\tbuf.Write(tdata)\n\t\t}\n\t}\n}\n"], "fixing_code": ["# Changelog\n\n## [Unreleased]\n## Add\n- Add [extend_aspect_ratio](https://docs.imgproxy.net/latest/generating_the_url?id=extend-aspect-ratio) processing option.\n- Add the `IMGPROXY_ALLOW_SECURITY_OPTIONS` config + `max_src_resolution`, `max_src_file_size`, `max_animation_frames`, and `max_animation_frame_resolution` processing options.\n- (pro) Add [advanced smart crop](https://docs.imgproxy.net/latest/configuration?id=smart-crop).\n\n### Change\n- Make the `expires` processing option set `Expires` and `Cache-Control` headers.\n- Sanitize `use` tags in SVGs.\n\n## [3.13.2] - 2023-02-15\n### Change\n- Remove color-related EXIF data when stripping ICC profile.\n- (pro) Optimize saving to MP4.\n\n### Fix\n- (pro) Fix saving with autoquality in some cases.\n- (pro) Fix saving large images to MP4.\n\n## [3.13.1] - 2023-01-16\n### Fix\n- Fix applying watermarks with replication.\n\n## [3.13.0] - 2023-01-11\n### Change\n- Add support for Managed Identity or Service Principal credentials to Azure Blob Storage integration.\n- Optimize memory usage in some scenarios.\n- Better SVG sanitization.\n- (pro) Allow usage of floating-point numbers in the `IMGPROXY_VIDEO_THUMBNAIL_SECOND` config and the `video_thumbnail_second` processing option.\n\n### Fix\n- Fix craches in some cases when using OpenTelemetry in Amazon ECS.\n- (pro) Fix saving of GIF with too small frame delay to MP4\n\n## [3.12.0] - 2022-12-11\n### Add\n- Add `IMGPROXY_MAX_ANIMATION_FRAME_RESOLUTION` config.\n- Add [Amazon CloudWatch](https://docs.imgproxy.net/latest/cloud_watch) support.\n- (pro) Add [`best` resultig image format](https://docs.imgproxy.net/latest/best_format).\n- (pro) Add `IMGPROXY_WEBP_COMPRESSION` config and [webp_options](https://docs.imgproxy.net/latest/generating_the_url?id=webp-options) processing option.\n\n### Change\n- Change `IMGPROXY_FORMAT_QUALITY` default value to `avif=65`.\n- Change `IMGPROXY_AVIF_SPEED` default value to `8`.\n- Change `IMGPROXY_PREFERRED_FORMATS` default value to `jpeg,png,gif`.\n- Set `Cache-Control: no-cache` header to the health check responses.\n- Allow replacing line breaks with `\\n` in `IMGPROXY_OPEN_TELEMETRY_SERVER_CERT`, `IMGPROXY_OPEN_TELEMETRY_CLIENT_CERT`, and`IMGPROXY_OPEN_TELEMETRY_CLIENT_KEY`.\n\n### Fix\n- Fix 3GP video format detection.\n\n## [3.11.0] - 2022-11-17\n### Add\n- Add `IMGPROXY_OPEN_TELEMETRY_GRPC_INSECURE` config.\n- Add `IMGPROXY_OPEN_TELEMETRY_TRACE_ID_GENERATOR` config.\n- (pro) Add XMP data to the `/info` response.\n\n### Change\n- Better XMP data stripping.\n- Use parent-based OpenTelemetry sampler by default.\n- Use fixed TraceIdRatioBased sampler with OpenTelemetry.\n\n## [3.10.0] - 2022-11-04\n### Add\n- Add `IMGPROXY_CLIENT_KEEP_ALIVE_TIMEOUT` config.\n- (pro) Add [disable_animation](https://docs.imgproxy.net/latest/generating_the_url?id=disable-animation) processing option.\n- (pro) Add [gradient](https://docs.imgproxy.net/latest/generating_the_url?id=gradient) processing option.\n\n### Fix\n- Fix false-positive SVG detections.\n- Fix possible infinite loop during SVG sanitization.\n- (pro) Fix saving of GIF with variable frame delay to MP4.\n- (pro) Fix the size of video thumbnails if the video has a defined sample aspect ratio.\n\n## [3.9.0] - 2022-10-19\n### Add\n- Add `IMGPROXY_SVG_FIX_UNSUPPORTED` config.\n\n### Fix\n- Fix HTTP response status when OpenTelemetry support is enabled.\n- (docker) Fix saving of paletted PNGs with low bit-depth.\n\n## [3.8.0] - 2022-10-06\n### Add\n- Add [raw](https://docs.imgproxy.net/latest/generating_the_url?id=raw) processing option.\n- Add [OpenTelemetry](https://docs.imgproxy.net/latest/open_telemetry) support.\n- (pro) Add encrypted source URL support.\n- (pro) Add [watermark_shadow](https://docs.imgproxy.net/generating_the_url?id=watermark-shadow) processing option.\n\n### Changed\n- Try to fix some invalid source URL cases that happen because of URL normalization.\n\n## [3.7.2] - 2022-08-22\n### Changed\n- (docker) Faster images quantization.\n- (docker) Faster loading of GIF.\n\n## [3.7.1] - 2022-08-01\n### Fix\n- Fix memory bloat in some cases.\n- Fix `format_quality` usage in presets.\n\n## [3.7.0] - 2022-07-27\n### Add\n- Add support of 16-bit BMP.\n- Add `IMGPROXY_NEW_RELIC_LABELS` config.\n- Add support of JPEG files with differential Huffman coding or arithmetic coding.\n- Add `IMGPROXY_PREFERRED_FORMATS` config.\n- Add `IMGPROXY_REQUESTS_QUEUE_SIZE` config.\n- Add `requests_in_progress` and `images_in_progress` metrics.\n- Add queue segment/span to request traces.\n- Add sending additional metrics to Datadog and `IMGPROXY_DATADOG_ENABLE_ADDITIONAL_METRICS` config.\n- Add sending additional metrics to New Relic.\n\n### Change\n- Change `IMGPROXY_MAX_CLIENTS` default value to 2048.\n- Allow unlimited connections when `IMGPROXY_MAX_CLIENTS` is set to `0`.\n- Change `IMGPROXY_TTL` default value to `31536000` (1 year).\n- Better errors tracking with metrics services.\n- (docker) Faster and better saving of GIF.\n- (docker) Faster saving of AVIF.\n- (docker) Faster loading and saving of PNG.\n\n### Fix\n- Fix trimming of CMYK images.\n- Respond with 404 when the source image can not be found in OpenStack Object Storage.\n- Respond with 404 when file wasn't found in the GCS storage.\n\n## [3.6.0] - 2022-06-13\n### Add\n- Add `IMGPROXY_RETURN_ATTACHMENT` config and [return_attachment](https://docs.imgproxy.net/generating_the_url?return-attachment) processing option.\n- Add SVG sanitization and `IMGPROXY_SANITIZE_SVG` config.\n\n### Change\n- Better animation detection.\n\n### Fix\n- Respond with 404 when file wasn't found in the local storage.\n\n## [3.5.1] - 2022-05-20\n### Change\n- Fallback from AVIF to JPEG/PNG if one of the result dimensions is smaller than 16px.\n\n### Fix\n- (pro) Fix some PDF pages background.\n- (docker) Fix loading some HEIF images.\n\n## [3.5.0] - 2022-04-25\n### Add\n- Add support of RLE-encoded BMP.\n- Add `IMGPROXY_ENFORCE_THUMBNAIL` config and [enforce_thumbnail](https://docs.imgproxy.net/generating_the_url?id=enforce-thumbnail) processing option.\n- Add `X-Result-Width` and `X-Result-Height` to debug headers.\n- Add `IMGPROXY_KEEP_COPYRIGHT` config and [keep_copyright](https://docs.imgproxy.net/generating_the_url?id=keep-copyright) processing option.\n\n### Change\n- Use thumbnail embedded to HEIC/AVIF if its size is larger than or equal to the requested.\n\n## [3.4.0] - 2022-04-07\n### Add\n- Add `IMGPROXY_FALLBACK_IMAGE_TTL` config.\n- (pro) Add [watermark_size](https://docs.imgproxy.net/generating_the_url?id=watermark-size) processing option.\n- Add OpenStack Object Storage (\"Swift\") support.\n- Add `IMGPROXY_GCS_ENDPOINT` config.\n\n### Change\n- (pro) Don't check `Content-Length` header of videos.\n\n### Fix\n- (pro) Fix custom watermarks on animated images.\n\n## [3.3.3] - 2022-03-21\n### Fix\n- Fix `s3` scheme status codes.\n- (pro) Fix saving animations to MP4.\n\n## [3.3.2] - 2022-03-17\n### Fix\n- Write logs to STDOUT instead of STDERR.\n- (pro) Fix crashes when some options are used in presets.\n\n## [3.3.1] - 2022-03-14\n### Fix\n- Fix transparrency in loaded ICO.\n- (pro) Fix video thumbnails orientation.\n\n## [3.3.0] - 2022-02-21\n### Added\n- Add the `IMGPROXY_MAX_REDIRECTS` config.\n- (pro) Add the `IMGPROXY_SERVER_NAME` config.\n- (pro) Add the `IMGPROXY_HEALTH_CHECK_MESSAGE` config.\n- Add the `IMGPROXY_HEALTH_CHECK_PATH` config.\n\n## [3.2.2] - 2022-02-08\n### Fix\n- Fix the `IMGPROXY_AVIF_SPEED` config.\n\n## [3.2.1] - 2022-01-19\n### Fix\n- Fix support of BMP with unusual data offsets.\n\n## [3.2.0] - 2022-01-18\n### Added\n- (pro) Add `video_meta` to the `/info` response.\n- Add [zoom](https://docs.imgproxy.net/generating_the_url?id=zoom) processing option.\n- Add 1/2/4-bit BMP support.\n\n### Change\n- Optimized `crop`.\n\n### Fix\n- Fix Datadog support.\n- Fix `force` resizing + rotation.\n- (pro) Fix `obj` gravity.\n\n## [3.1.3] - 2021-12-17\n### Fix\n- Fix ETag checking when S3 is used.\n\n## [3.1.2] - 2021-12-15\n### Fix\n- (pro) Fix object detection.\n\n## [3.1.1] - 2021-12-10\n### Fix\n- Fix crashes in some scenarios.\n\n## [3.1.0] - 2021-12-08\n### Added\n- Add `IMGPROXY_ETAG_BUSTER` config.\n- (pro) [watermark_text](https://docs.imgproxy.net/generating_the_url?id=watermark-text) processing option.\n\n### Change\n- Improved ICC profiles handling.\n- Proper error message when the deprecated basic URL format is used.\n- Watermark offsets can be applied to replicated watermarks.\n\n### Fix\n- (pro) Fix parsing metadata of extended sequential JPEGs.\n\n## [3.0.0] - 2021-11-23\n### Added\n- (pro) [Autoquality](https://docs.imgproxy.net/autoquality).\n- (pro) [Object detection](https://docs.imgproxy.net/object_detection): `obj` [gravity](https://docs.imgproxy.net/generating_the_url?id=gravity) type, [blur_detections](https://docs.imgproxy.net/generating_the_url?id=blur-detections) processing option, [draw_detections](https://docs.imgproxy.net/generating_the_url?id=draw-detections) processing option.\n- (pro) [Chained pipelines](https://docs.imgproxy.net/chained_pipelines)\n- `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` config.\n- (pro) [fallback_image_url](https://docs.imgproxy.net/generating_the_url?id=fallback-image-url) processing option.\n- [expires](https://docs.imgproxy.net/generating_the_url?id=expires) processing option.\n- [skip processing](https://docs.imgproxy.net/generating_the_url?id=skip-processing) processing option.\n- [Datadog](./docs/datadog.md) metrics.\n- `force` and `fill-down` resizing types.\n- [min-width](https://docs.imgproxy.net/generating_the_url?id=min-width) and [min-height](https://docs.imgproxy.net/generating_the_url?id=min-height) processing options.\n- [format_quality](https://docs.imgproxy.net/generating_the_url?id=format-quality) processing option.\n- Add `X-Origin-Width` and `X-Origin-Height` to debug headers.\n- Add `IMGPROXY_COOKIE_PASSTHROUGH` and `IMGPROXY_COOKIE_BASE_URL` configs.\n- Add `client_ip` to requests and responses logs.\n\n### Change\n- ETag generator & checker uses source image ETag when possible.\n- `304 Not Modified` responses includes `Cache-Control`, `Expires`, and `Vary` headers.\n- `dpr` processing option doesn't enlarge image unless `enlarge` is true.\n- imgproxy responds with `500` HTTP code when the source image downloading error seems temporary (timeout, server error, etc).\n- When `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` is zero, imgproxy responds with the usual HTTP code.\n- BMP support doesn't require ImageMagick.\n- Save GIFs without ImageMagick (vips 8.12+ required).\n\n### Fix\n- Fix Client Hints behavior. `Width` is physical size, so we should divide it by `DPR` value.\n- Fix scale-on-load in some rare cases.\n- Fix the default Sentry release name.\n- Fix the `health` command when the path prefix is set.\n- Escape double quotes in content disposition.\n\n### Removed\n- Removed basic URL format, use [advanced one](./docs/generating_the_url.md) instead.\n- Removed `IMGPROXY_MAX_SRC_DIMENSION` config, use `IMGPROXY_MAX_SRC_RESOLUTION` instead.\n- Removed `IMGPROXY_GZIP_COMPRESSION` config.\n- Removed `IMGPROXY_MAX_GIF_FRAMES` config, use `IMGPROXY_MAX_ANIMATION_FRAMES` instead.\n- Removed `crop` resizing type, use [crop](./docs/generating_the_url.md#crop) processing option instead.\n- Dropped old libvips (<8.10) support.\n- (pro) Removed advanced GIF optimizations. All optimizations are applied by default ib both OSS and Pro versions.\n\n## [3.0.0.beta2] - 2021-11-15\n### Added\n- Add `X-Origin-Width` and `X-Origin-Height` to debug headers.\n- Add `IMGPROXY_COOKIE_PASSTHROUGH` and `IMGPROXY_COOKIE_BASE_URL` configs.\n\n### Change\n- `dpr` processing option doesn't enlarge image unless `enlarge` is true.\n- `304 Not Modified` responses includes `Cache-Control`, `Expires`, and `Vary` headers.\n- imgproxy responds with `500` HTTP code when the source image downloading error seems temporary (timeout, server error, etc).\n- When `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` is zero, imgproxy responds with the usual HTTP code.\n- BMP support doesn't require ImageMagick.\n\n### Fix\n- Fix Client Hints behavior. `Width` is physical size, so we should divide it by `DPR` value.\n- Fix scale-on-load in some rare cases.\n- Fix `requests_total` counter in Prometheus.\n\n## [3.0.0.beta1] - 2021-10-01\n### Added\n- (pro) [Autoquality](https://docs.imgproxy.net/autoquality).\n- (pro) [Object detection](https://docs.imgproxy.net/object_detection): `obj` [gravity](https://docs.imgproxy.net/generating_the_url?id=gravity) type, [blur_detections](https://docs.imgproxy.net/generating_the_url?id=blur-detections) processing option, [draw_detections](https://docs.imgproxy.net/generating_the_url?id=draw-detections) processing option.\n- (pro) [Chained pipelines](https://docs.imgproxy.net/chained_pipelines)\n- `IMGPROXY_FALLBACK_IMAGE_HTTP_CODE` config.\n- (pro) [fallback_image_url](https://docs.imgproxy.net/generating_the_url?id=fallback-image-url) processing option.\n- [expires](https://docs.imgproxy.net/generating_the_url?id=expires) processing option.\n- [skip processing](https://docs.imgproxy.net/generating_the_url?id=skip-processing) processing option.\n- [Datadog](./docs/datadog.md) metrics.\n- `force` and `fill-down` resizing types.\n- [min-width](https://docs.imgproxy.net/generating_the_url?id=min-width) and [min-height](https://docs.imgproxy.net/generating_the_url?id=min-height) processing options.\n- [format_quality](https://docs.imgproxy.net/generating_the_url?id=format-quality) processing option.\n\n### Change\n- ETag generator & checker uses source image ETag when possible.\n\n### Removed\n- Removed basic URL format, use [advanced one](./docs/generating_the_url.md) instead.\n- Removed `IMGPROXY_MAX_SRC_DIMENSION` config, use `IMGPROXY_MAX_SRC_RESOLUTION` instead.\n- Removed `IMGPROXY_GZIP_COMPRESSION` config.\n- Removed `IMGPROXY_MAX_GIF_FRAMES` config, use `IMGPROXY_MAX_ANIMATION_FRAMES` instead.\n- Removed `crop` resizing type, use [crop](./docs/generating_the_url.md#crop) processing option instead.\n- Dropped old libvips (<8.8) support.\n\n## [2.17.0] - 2021-09-07\n### Added\n- Wildcard support in `IMGPROXY_ALLOWED_SOURCES`.\n\n### Change\n- If the source URL contains the `IMGPROXY_BASE_URL` prefix, it won't be added.\n\n### Fix\n- (pro) Fix path prefix support in the `/info` handler.\n\n### Deprecated\n- The [basic URL format](https://docs.imgproxy.net/generating_the_url_basic) is deprecated and can be removed in future versions. Use [advanced URL format](https://docs.imgproxy.net/generating_the_url_advanced) instead.\n\n## [2.16.7] - 2021-07-20\n### Change\n- Reset DPI while stripping meta.\n\n## [2.16.6] - 2021-07-08\n### Fix\n- Fix performance regression in ICC profile handling.\n- Fix crashes while processing CMYK images without ICC profile.\n\n## [2.16.5] - 2021-06-28\n### Change\n- More clear downloading errors.\n\n### Fix\n- Fix ICC profile handling in some cases.\n- Fix handling of negative height value for BMP.\n\n## [2.16.4] - 2021-06-16\n### Change\n- Use magenta (ff00ff) as a transparency key in `trim`.\n\n### Fix\n- Fix crashes while processing some SVGs (dockerized version).\n- (pro) Fix parsing HEIF/AVIF meta.\n\n## [2.16.3] - 2021-04-05\n### Fix\n- Fix PNG quantization palette size.\n- Fix parsing HEIF meta.\n- Fix debig header.\n\n## [2.16.2] - 2021-03-04\n### Change\n- Updated dependencies in Docker.\n\n## [2.16.1] - 2021-03-02\n### Fix\n- Fix delays and loop numbers of animated images.\n- Fix scale-on-load of huge SVGs.\n- (pro) Fix loading of PDFs with transparent background.\n\n## [2.16.0] - 2021-02-08\n### Added\n- AVIF support.\n- Azure Blob Storage support.\n- `IMGPROXY_STRIP_COLOR_PROFILE` config and [strip_color_profile](https://docs.imgproxy.net/generating_the_url?id=strip-color-profile) processing option.\n- `IMGPROXY_FORMAT_QUALITY` config.\n- `IMGPROXY_AUTO_ROTATE` config and [auto_rotate](https://docs.imgproxy.net/generating_the_url?id=auto-rotate) processing option.\n- [rotate](https://docs.imgproxy.net/generating_the_url?id=rotate) processing option.\n- `width` and `height` arguments of the [crop](https://docs.imgproxy.net/generating_the_url?id=crop) processing option can be less than `1` that is treated by imgproxy as a relative value (a.k.a. crop by percentage).\n- (pro) Remove Adobe Illustrator garbage from SVGs.\n- (pro) Add IPTC tags to the `/info` response.\n\n### Changed\n- Disable scale-on-load for animated images since it causes many problems. Currently, only animated WebP is affected.\n- Improved ICC profiles handling.\n- (pro) Improved and optimized video thumbnails generation.\n\n### Fix\n- Fix `dpr` option.\n- Fix non-strict SVG detection.\n- Fix non-UTF8 SVG detection.\n- Fix checking of connections in queue.\n- (pro) Fix video thumbnail orientation.\n- (pro) Fix EXIF fields titles in the `/info` response.\n\n## [2.15.0] - 2020-09-03\n### Added\n- Ability to skip processing of some formats. See [Skip processing](https://docs.imgproxy.net/configuration?id=skip-processing).\n- (pro) PDF support.\n- (pro) [video_thumbnail_second](https://docs.imgproxy.net/generating_the_url?id=video-thumbnail-second) processing option.\n- (pro) [page](https://docs.imgproxy.net/generating_the_url?id=page) processing option.\n- (pro) [background_alpha](https://docs.imgproxy.net/generating_the_url?id=background-alpha) processing option.\n- (pro) `IMGPROXY_VIDEO_THUMBNAIL_PROBE_SIZE` and `IMGPROXY_VIDEO_THUMBNAIL_MAX_ANALYZE_DURATION` configs.\n\n### Changed\n- Speed up generation of video thumbnails with large timestamps.\n\n### Fix\n- Fix `padding` and `extend` behaior when converting from a fromat without alpha support to one with alpha support.\n- Fix WebP dimension limit handling.\n- (pro) Fix thumbnails generation of some videos.\n\n## [2.14.1] - 2020-07-22\n### Fix\n- Fix ICO saving.\n\n## [2.14.0] - 2020-07-17\n### Added\n- `IMGPROXY_PROMETHEUS_NAMESPACE` config.\n- [strip_metadata](https://docs.imgproxy.net/generating_the_url?id=strip-metadata) processing option.\n- (pro) Configurable unsharpening. See [Unsharpening](https://docs.imgproxy.net/configuration?id=unsharpening) configs and [unsharpening](https://docs.imgproxy.net/generating_the_url?id=unsharpening) processing option.\n\n### Changed\n- Better for libvips memory metrics for Prometheus.\n- Docker image includes the latest versions of dependencies.\n- Optimize processing of animated images.\n\n### Fix\n- Fix error when requested WebP dimension exceeds the WebP dimension limit.\n- Fix path parsing in some rare cases.\n- Fix HEIC/HEIF header parsing bug.\n\n### Deprecated\n- (pro) `IMGPROXY_APPLY_UNSHARPEN_MASKING` config is deprecated, use `IMGPROXY_UNSHARPENING_MODE` instead.\n\n## [2.13.1] - 2020-05-06\n### Fixed\n- Fix and optimize processing of animated images.\n\n## [2.13.0] - 2020-04-22\n### Added\n- Fallback images.\n- [padding](https://docs.imgproxy.net/generating_the_url?id=padding) processing option.\n\n### Changed\n- Optimized memory usage. Especially when dealing with animated images.\n\n### Fixed\n- Fix crashes during animated images processing.\n\n## [2.12.0] - 2020-04-07\n### Addded\n- `IMGPROXY_PATH_PREFIX` config.\n- (pro) Video thumbnails.\n- (pro) [Getting the image info](https://docs.imgproxy.net/getting_the_image_info).\n\n### Changed\n- Improved `trim` processing option.\n- Quantizr updated to 0.2.0 in Docker image.\n\n## [2.11.0] - 2020-03-12\n### Changed\n- Replaced imagequant with [Quantizr](https://github.com/DarthSim/quantizr) in docker image.\n- Removed HEIC saving support.\n- Removed JBIG compressin support in TIFF.\n\n## [2.10.1] - 2020-02-27\n### Changed\n- `imgproxy -v` is replaced with `imgproxy version`.\n\n### Fixed\n- Fix loadind BMP stored in ICO.\n- Fix ambiguous HEIC magic bytes (MP4 videos has been detected as HEIC).\n- Fix build with libvips < 8.6.\n- Fix build with Go 1.14.\n- Fix go module naming. Use `github.com/imgproxy/imgproxy/v2` to build imgproxy from source.\n\n## [2.10.0] - 2020-02-13\n### Added\n- `IMGPROXY_NETWORK` config. Allows to bind on Unix socket.\n- `IMGPROXY_CACHE_CONTROL_PASSTHROUGH` config.\n- `imgproxy health` command.\n- (pro) `IMGPROXY_GIF_OPTIMIZE_FRAMES` & `IMGPROXY_GIF_OPTIMIZE_TRANSPARENCY` configs and `gif_options` processing option.\n- (pro) `IMGPROXY_CUSTOM_REQUEST_HEADERS`, `IMGPROXY_CUSTOM_RESPONSE_HEADERS`, and `IMGPROXY_CUSTOM_HEADERS_SEPARATOR` configs.\n\n### Changed\n\n- Better SVG detection.\n\n### Fixed\n- Fix detection of SVG starting with a comment.\n\n## [2.9.0] - 2020-01-30\n### Added\n- `trim` processing option.\n- `IMGPROXY_STRIP_METADATA` config.\n\n### Fixed\n- Fixed focus point crop calculation.\n\n## [2.8.2] - 2020-01-13\n### Changed\n- Optimized memory usage.\n\n### Fixed\n- Fixed `IMGPROXY_ALLOWED_SOURCES` config.\n\n## [2.8.1] - 2019-12-27\n### Fixed\n- Fix watermark top offset calculation.\n\n## [2.8.0] - 2019-12-25\n### Added\n- `IMGPROXY_LOG_LEVEL` config.\n- `max_bytes` processing option.\n- `IMGPROXY_ALLOWED_SOURCES` config.\n\n### Changed\n- Docker image base is changed to Debian 10 for better stability and performance.\n- `extend` option now supports gravity.\n\n## [2.7.0] - 2019-11-13\n### Changed\n- Boolean processing options such as `enlarge` and `extend` are properly parsed. `1`, `t`, `TRUE`, `true`, `True` are truthy, `0`, `f`, `F`, `FALSE`, `false`, `False` are falsy. All other values are treated as falsy and generate a warning message.\n\n### Fixed\n- Fix segfaults on watermarking in some cases\n\n## [2.6.2] - 2019-11-11\n### Fixed\n- Fix `format` option in presets.\n\n## [2.6.1] - 2019-10-28\n### Fixed\n- Fix loading of some GIFs by using the edge version of giflib.\n\n## [2.6.0] - 2019-10-23\n### Added\n- TIFF and BMP support.\n- `IMGPROXY_REPORT_DOWNLOADING_ERRORS` config. Setting it to `false` disables reporting of downloading errors.\n- SVG passthrough. When source image and requested format are SVG, image will be returned without changes.\n- `IMGPROXY_USE_GCS` config. When it set to true and `IMGPROXY_GCS_KEY` is not set, imgproxy tries to use Application Default Credentials to get access to GCS bucket.\n\n### Changed\n- Reimplemented and more errors-tolerant image size parsing.\n- Log only modified processing options.\n\n### Fixed\n- Fixed sharpening+watermarking.\n- Fixed path parsing when no options is provided and image URL is Base64 encoded.\n\n### Deprecated\n- Using `IMGPROXY_GCS_KEY` without `IMGPROXY_USE_GCS` set to `true` is deprecated.\n\n## [2.5.0] - 2019-09-19\n### Added\n- `structured` and `json` log formats. Can be set with `IMGPROXY_LOG_FORMAT`.\n\n### Changed\n- New default log format.\n- Better watermarking: image transparency doesn't affect watermarks, faster watermark scaling.\n\n## [2.4.1] - 2019-08-29\n### Changed\n- More verbose URL parsing errors.\n\n## [2.4.0] - 2019-08-20\n### Added\n- `SO_REUSEPORT` socker option support. Can be enabled with `IMGPROXY_SO_REUSEPORT`.\n- [filename](./docs/generating_the_url.md#filename) option.\n\n### Changed\n- Better handling if non-sRGB images.\n- `dpr` option always changes the resulting size even if it leads to enlarge and `enlarge` is falsey.\n- Log to STDOUT.\n- Only unexpected errors are reported to Bugsnag/Honeybadger/Sentry.\n- Better Sentry support.\n\n### Deprecated\n- GZip compression support is deprecated.\n\n## [2.3.0] - 2019-06-25\n### Added\n- `libvips` v8.8 support: better processing of animated GIFs, built-in CMYK profile, better WebP scale-on-load, etc;\n- Animated WebP support. `IMGPROXY_MAX_GIF_FRAMES` is deprecated, use `IMGPROXY_MAX_ANIMATION_FRAMES`;\n- [HEIC support](./docs/image_formats_support.md#heic-support);\n- [crop](./docs/generating_the_url.md#crop) processing option. `resizing_type:crop` is deprecated;\n- Offsets for [gravity](./docs/generating_the_url.md#gravity);\n- Resizing type `auto`. If both source and resulting dimensions have the same orientation (portrait or landscape), imgproxy will use `fill`. Otherwise, it will use `fit`;\n- Development errors mode. When `IMGPROXY_DEVELOPMENT_ERRORS_MODE` is true, imgproxy will respond with detailed error messages. Not recommended for production because some errors may contain stack trace;\n- `IMGPROXY_KEEP_ALIVE_TIMEOUT` config.\n\n### Changed\n- Allow URL query for `/health`;\n- Better stack trace for image processing errors;\n\n## [2.2.13] - 2019-05-07\n### Added\n- Send `X-Request-ID` header in response.\n\n### Changed\n- Better shrink-on-load.\n- Don't import common sRGB IEC61966-2.1 ICC profile unless linear colorspace is used.\n- Don't fail on recursive preset usage, just ignore already used preset and log warning.\n\n## [2.2.12] - 2019-04-11\n### Changed\n- Don't fail processing when embedded ICC profile is not compatible with the image.\n\n## [2.2.11] - 2019-04-08\n### Changed\n- Optimized ICC import when linear colorspace usage is disabled.\n\n## [2.2.10] - 2019-04-05\n### Added\n- PNG quantization. Can be enabled with `IMGPROXY_PNG_QUANTIZE`. Palette size can be specified with `IMGPROXY_PNG_QUANTIZATION_COLORS`.\n\n### Changed\n- Resizing images in linear colorspace is disabled by default. Can be enabled with `IMGPROXY_USE_LINEAR_COLORSPACE`;\n\n## [2.2.9] - 2019-04-02\n### Fixed\nFixed processing of images with embedded profiles that was broken in v2.2.8.\n\n## [2.2.8] - 2019-04-01\n### Added\n- Resizing in linear colorspace;\n- `IMGPROXY_DISABLE_SHRINK_ON_LOAD` config to disable shring-on-load of JPEG and WebP.\n\n### Fixed\n- Remove orc from Docker image (causes segfaults in some cases).\n\n## [2.2.7] - 2019-03-22\n### Changed\n- Memory usage optimizations.\n\n### Fixed\n- Fix color management.\n\n## [2.2.6] - 2019-02-27\n### Fixed\n- Fix signature check when source URL is escaped.\n\n## [2.2.5] - 2019-02-21\n### Added\n- [extend](./docs/generating_the_url.md#extend) processing option.\n- `vips_memory_bytes`, `vips_max_memory_bytes` and `vips_allocs` metrics for Prometheus.\n\n### Fixed\n- Fix SVG detection.\n\n## [2.2.4] - 2019-02-13\n### Changed\n- Minor improvements.\n\n## [2.2.3] - 2019-02-04\n### Changed\n- Simple filesystem transport withh less memory usage.\n\n### Fixed\n- Fix critical bug with cached C strings;\n\n## [2.2.2] - 2019-02-01\n\n- Memory usage optimizations.\n\n## [2.2.1] - 2019-01-21\n### Added\n- Source file size limit.\n\n### Changed\n- More memory usage optimizations.\n\n## [2.2.0] - 2019-01-19\n### Changed\n- Optimized memory usage. [Memory usage tweaks](./docs/memory_usage_tweaks.md).\n- `Vary` header is set when WebP detection, client hints or GZip compression are enabled.\n- Health check doesn't require `Authorization` header anymore.\n\n## [2.1.5] - 2019-01-14\n### Added\n- [Sentry support](./docs/configuration.md#error-reporting) (thanks to [@koenpunt](https://github.com/koenpunt)).\n- [Syslog support](./docs/configuration.md#syslog).\n\n### Fixed\n- Fix detection of some kind of WebP images;\n\n## [2.1.4] - 2019-01-10\n### Added\n- SVG sources support.\n\n### Changed\n- Memory usage optimizations.\n- Proper filename in the `Content-Disposition` header.\n\n### Fixed\n- Fix support for not animated GIFs.\n\n## [2.1.3] - 2018-12-10\n### Added\n- [Minio support](./docs/serving_files_from_s3.md#minio)\n\n## [2.1.2] - 2018-12-02\n### Added\n- ICO support\n\n## [2.1.1] - 2018-11-29\n### Changed\n- When libvips failed to save PNG, imgproxy will try to save is without embedded ICC profile.\n\n### Fixed\n- Fixed EXIF orientation fetching.\n\n## [2.1.0] - 2018-11-16\n### Added\n- [Plain source URLs](./docs/generating_the_url.md#plain) support.\n- [Serving images from Google Cloud Storage](./docs/serving_files_from_google_cloud_storage.md).\n- [Full support of GIFs](./docs/image_formats_support.md#gif-support) including animated ones.\n- [Watermarks](./docs/watermark.md).\n- [New Relic](./docs/new_relic.md) metrics.\n- [Prometheus](./docs/prometheus.md) metrics.\n- [DPR](./docs/generating_the_url.md#dpr) option (thanks to [selul](https://github.com/selul)).\n- [Cache buster](./docs/generating_the_url.md#cache-buster) option.\n- [Quality](./docs/generating_the_url.md#quality) option.\n- Support for custom [Amazon S3](./docs/serving_files_from_s3.md) endpoints.\n- Support for [Amazon S3](./docs/serving_files_from_s3.md) versioning.\n- [Client hints](./docs/configuration.md#client-hints-support) support (thanks to [selul](https://github.com/selul)).\n- Truncated signature support (thanks to [printercu](https://github.com/printercu)).\n\n### Changed\n- imgproxy uses source image format by default for the resulting image.\n- Send `User-Agent` header when downloading a source image.\n- Proper filename in `Content-Disposition` header in the response.\n\n### Deprecated\n- `IMGPROXY_MAX_SRC_DIMENSION` is **deprecated**, use `IMGPROXY_MAX_SRC_RESOLUTION` instead.\n\n## [2.0.3] - 2018-11-02\n### Fixed\n- Fix URL validation when IMGPROXY_BASE_URL is used.\n\n## [2.0.2] - 2018-10-25\n### Fixed\n- Fix smart crop + blur/sharpen SIGSEGV on Alpine.\n\n## [2.0.1] - 2018-10-18\n### Fixed\n- Minor fixes.\n\n## [2.0.0] - 2018-10-08\nAll-You-Ever-Wanted release! :tada:\n### Added\n- [New advanced URL format](./docs/generating_the_url.md). Unleash the full power of imgproxy v2.0.\n- [Presets](./docs/presets.md). Shorten your urls by reusing processing options.\n- [Serving images from Amazon S3](./docs/serving_files_from_s3.md). Thanks to [@crohr](https://github.com/crohr), now we have a way to serve files from private S3 buckets.\n- [Autoconverting to WebP when supported by browser](./docs/configuration.md#avifwebp-support-detection) (disabled by default). Use WebP as resulting format when browser supports it.\n- [Gaussian blur](./docs/generating_the_url.md#blur) and [sharpen](./docs/generating_the_url.md#sharpen) filters. Make your images look better than before.\n- [Focus point gravity](./docs/generating_the_url.md#gravity). Tell imgproxy what point will be the center of the image.\n- [Background color](./docs/generating_the_url.md#background). Control the color of background when converting PNG with alpha-channel to JPEG.\n\n### Changed\n- Key and salt are not required anymore. When key or salt is not specified, signature checking is disabled.\n- Imgproxy calcs resulting width/height automaticly when one specified as zero.\n- Memory usage is optimized.\n\n## [1.1.8] - 2018-10-01\n### Fixed\n- Disable libvips cache to prevent SIGSEGV on Alpine.\n\n## [1.1.7] - 2018-09-06\n### Changed\n- Improved ETag generation.\n\n## [1.1.6] - 2018-07-26\n### Added\n- Progressive JPEG and interlaced PNG support.\n\n## [1.1.5.1] - 2018-05-25\n### Fixed\n- Fix autorotation when image is not resized.\n\n## [1.1.5] - 2018-04-27\n### Added\n- CORS headers.\n- `IMGPROXY_BASE_URL` config.\n- `Content-Length` header.\n\n## [1.1.4] - 2018-03-19\n### Added\n- Request ID in the logs.\n\n### Changed\n- Idle time does not causes timeout.\n- Increased default maximum number of simultaneous active connections.\n", "package svg\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"strings\"\n\n\tnanoid \"github.com/matoous/go-nanoid/v2\"\n\t\"github.com/tdewolff/parse/v2\"\n\t\"github.com/tdewolff/parse/v2/xml\"\n\n\t\"github.com/imgproxy/imgproxy/v3/imagedata\"\n)\n\nvar feDropShadowName = []byte(\"feDropShadow\")\n\nconst feDropShadowTemplate = `\n\t<feMerge result=\"dsin-%[1]s\"><feMergeNode %[3]s /></feMerge>\n\t<feGaussianBlur %[4]s />\n\t<feOffset %[5]s result=\"dsof-%[2]s\" />\n\t<feFlood %[6]s />\n\t<feComposite in2=\"dsof-%[2]s\" operator=\"in\" />\n\t<feMerge %[7]s>\n\t\t<feMergeNode />\n\t\t<feMergeNode in=\"dsin-%[1]s\" />\n\t</feMerge>\n`\n\nfunc Satitize(data *imagedata.ImageData) (*imagedata.ImageData, error) {\n\tr := bytes.NewReader(data.Data)\n\tl := xml.NewLexer(parse.NewInput(r))\n\n\tbuf, cancel := imagedata.BorrowBuffer()\n\n\tignoreTag := 0\n\n\tvar curTagName string\n\n\tfor {\n\t\ttt, tdata := l.Next()\n\n\t\tif ignoreTag > 0 {\n\t\t\tswitch tt {\n\t\t\tcase xml.ErrorToken:\n\t\t\t\tcancel()\n\t\t\t\treturn nil, l.Err()\n\t\t\tcase xml.EndTagToken, xml.StartTagCloseVoidToken:\n\t\t\t\tignoreTag--\n\t\t\tcase xml.StartTagToken:\n\t\t\t\tignoreTag++\n\t\t\t}\n\n\t\t\tcontinue\n\t\t}\n\n\t\tswitch tt {\n\t\tcase xml.ErrorToken:\n\t\t\tif l.Err() != io.EOF {\n\t\t\t\tcancel()\n\t\t\t\treturn nil, l.Err()\n\t\t\t}\n\n\t\t\tnewData := imagedata.ImageData{\n\t\t\t\tData: buf.Bytes(),\n\t\t\t\tType: data.Type,\n\t\t\t}\n\t\t\tnewData.SetCancel(cancel)\n\n\t\t\treturn &newData, nil\n\t\tcase xml.StartTagToken:\n\t\t\tcurTagName = strings.ToLower(string(l.Text()))\n\n\t\t\tif curTagName == \"script\" {\n\t\t\t\tignoreTag++\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tbuf.Write(tdata)\n\t\tcase xml.AttributeToken:\n\t\t\tattrName := strings.ToLower(string(l.Text()))\n\n\t\t\tif _, unsafe := unsafeAttrs[attrName]; unsafe {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif curTagName == \"use\" && (attrName == \"href\" || attrName == \"xlink:href\") {\n\t\t\t\tval := strings.TrimSpace(strings.Trim(string(l.AttrVal()), `\"'`))\n\t\t\t\tif len(val) > 0 && val[0] != '#' {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbuf.Write(tdata)\n\t\tdefault:\n\t\t\tbuf.Write(tdata)\n\t\t}\n\t}\n}\n\nfunc replaceDropShadowNode(l *xml.Lexer, buf *bytes.Buffer) error {\n\tvar (\n\t\tinAttrs     strings.Builder\n\t\tblurAttrs   strings.Builder\n\t\toffsetAttrs strings.Builder\n\t\tfloodAttrs  strings.Builder\n\t\tfinalAttrs  strings.Builder\n\t)\n\n\tinID, _ := nanoid.New(8)\n\toffsetID, _ := nanoid.New(8)\n\n\thasStdDeviation := false\n\thasDx := false\n\thasDy := false\n\nTOKEN_LOOP:\n\tfor {\n\t\ttt, tdata := l.Next()\n\n\t\tswitch tt {\n\t\tcase xml.ErrorToken:\n\t\t\tif l.Err() != io.EOF {\n\t\t\t\treturn l.Err()\n\t\t\t}\n\t\t\tbreak TOKEN_LOOP\n\t\tcase xml.EndTagToken, xml.StartTagCloseVoidToken:\n\t\t\tbreak TOKEN_LOOP\n\t\tcase xml.AttributeToken:\n\t\t\tswitch strings.ToLower(string(l.Text())) {\n\t\t\tcase \"in\":\n\t\t\t\tinAttrs.Write(tdata)\n\t\t\tcase \"stddeviation\":\n\t\t\t\tblurAttrs.Write(tdata)\n\t\t\t\thasStdDeviation = true\n\t\t\tcase \"dx\":\n\t\t\t\toffsetAttrs.Write(tdata)\n\t\t\t\thasDx = true\n\t\t\tcase \"dy\":\n\t\t\t\toffsetAttrs.Write(tdata)\n\t\t\t\thasDy = true\n\t\t\tcase \"flood-color\", \"flood-opacity\":\n\t\t\t\tfloodAttrs.Write(tdata)\n\t\t\tdefault:\n\t\t\t\tfinalAttrs.Write(tdata)\n\t\t\t}\n\t\t}\n\t}\n\n\tif !hasStdDeviation {\n\t\tblurAttrs.WriteString(` stdDeviation=\"2\"`)\n\t}\n\n\tif !hasDx {\n\t\toffsetAttrs.WriteString(` dx=\"2\"`)\n\t}\n\n\tif !hasDy {\n\t\toffsetAttrs.WriteString(` dy=\"2\"`)\n\t}\n\n\tfmt.Fprintf(\n\t\tbuf, feDropShadowTemplate,\n\t\tinID, offsetID,\n\t\tinAttrs.String(),\n\t\tblurAttrs.String(),\n\t\toffsetAttrs.String(),\n\t\tfloodAttrs.String(),\n\t\tfinalAttrs.String(),\n\t)\n\n\treturn nil\n}\n\nfunc FixUnsupported(data *imagedata.ImageData) (*imagedata.ImageData, bool, error) {\n\tif !bytes.Contains(data.Data, feDropShadowName) {\n\t\treturn data, false, nil\n\t}\n\n\tr := bytes.NewReader(data.Data)\n\tl := xml.NewLexer(parse.NewInput(r))\n\n\tbuf, cancel := imagedata.BorrowBuffer()\n\n\tfor {\n\t\ttt, tdata := l.Next()\n\n\t\tswitch tt {\n\t\tcase xml.ErrorToken:\n\t\t\tif l.Err() != io.EOF {\n\t\t\t\tcancel()\n\t\t\t\treturn nil, false, l.Err()\n\t\t\t}\n\n\t\t\tnewData := imagedata.ImageData{\n\t\t\t\tData: buf.Bytes(),\n\t\t\t\tType: data.Type,\n\t\t\t}\n\t\t\tnewData.SetCancel(cancel)\n\n\t\t\treturn &newData, true, nil\n\t\tcase xml.StartTagToken:\n\t\t\tif bytes.Equal(l.Text(), feDropShadowName) {\n\t\t\t\tif err := replaceDropShadowNode(l, buf); err != nil {\n\t\t\t\t\tcancel()\n\t\t\t\t\treturn nil, false, err\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tbuf.Write(tdata)\n\t\tdefault:\n\t\t\tbuf.Write(tdata)\n\t\t}\n\t}\n}\n"], "filenames": ["CHANGELOG.md", "svg/svg.go"], "buggy_code_start_loc": [10, 37], "buggy_code_end_loc": [10, 78], "fixing_code_start_loc": [11, 38], "fixing_code_end_loc": [12, 94], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Reflected in GitHub repository imgproxy/imgproxy prior to 3.14.0.", "other": {"cve": {"id": "CVE-2023-1496", "sourceIdentifier": "security@huntr.dev", "published": "2023-03-19T17:15:11.173", "lastModified": "2023-03-24T01:52:42.833", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Reflected in GitHub repository imgproxy/imgproxy prior to 3.14.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 2.5}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:evilmartians:imgproxy:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.14.0", "matchCriteriaId": "D271D07A-F367-4DB0-9255-5FF0A8546417"}]}]}], "references": [{"url": "https://github.com/imgproxy/imgproxy/commit/62f8d08a93d301285dcd1dabcc7ba10c6c65b689", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/de603972-935a-401a-96fb-17ddadd282b2", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/imgproxy/imgproxy/commit/62f8d08a93d301285dcd1dabcc7ba10c6c65b689"}}