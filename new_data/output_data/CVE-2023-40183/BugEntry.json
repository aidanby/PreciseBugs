{"buggy_code": ["package io.dataease.service.staticResource;\n\nimport cn.hutool.core.codec.Base64Decoder;\nimport cn.hutool.core.collection.CollectionUtil;\nimport com.google.gson.Gson;\nimport io.dataease.commons.exception.DEException;\nimport io.dataease.commons.utils.FileUtils;\nimport io.dataease.commons.utils.LogUtil;\nimport io.dataease.commons.utils.StaticResourceUtils;\nimport io.dataease.controller.request.resource.StaticResourceRequest;\nimport io.dataease.exception.DataEaseException;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\nimport org.springframework.util.FileCopyUtils;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.imageio.ImageIO;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * Author: wangjiahao\n * Date: 2022/4/24\n * Description:\n */\n@Service\npublic class StaticResourceService {\n\n    private final Path staticDir = Paths.get(\"/opt/dataease/data/static-resource/\");\n\n    public void upload(String fileId, MultipartFile file) {\n        // check if the path is valid (not outside staticDir)\n        Assert.notNull(file, \"Multipart file must not be null\");\n        try {\n            if (!isImage(file)) {\n                DEException.throwException(\"Multipart file must be image\");\n            }\n            String originName = file.getOriginalFilename();\n            String newFileName = fileId + originName.substring(originName.lastIndexOf(\".\"), originName.length());\n            Path uploadPath = Paths.get(staticDir.toString(), newFileName);\n            // create dir is absent\n            FileUtils.createIfAbsent(Paths.get(staticDir.toString()));\n            Files.createFile(uploadPath);\n            file.transferTo(uploadPath);\n        } catch (IOException e) {\n            LogUtil.error(\"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\", e);\n            DataEaseException.throwException(\"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\");\n        } catch (Exception e) {\n            DataEaseException.throwException(e);\n        }\n    }\n\n    private boolean isImage(MultipartFile file) {\n        BufferedImage image = null;\n        try (InputStream input = file.getInputStream()) {\n            image = ImageIO.read(input);\n        } catch (IOException e) {\n            LogUtil.error(e.getMessage(), e);\n            return false;\n        }\n        if (image == null || image.getWidth() <= 0 || image.getHeight() <= 0) {\n            return false;\n        }\n        return true;\n    }\n\n    public void saveFilesToServe(String staticResource) {\n        Gson gson = new Gson();\n        if (StringUtils.isNotEmpty(staticResource)) {\n            Map<String, String> resource = gson.fromJson(staticResource, Map.class);\n            for (Map.Entry<String, String> entry : resource.entrySet()) {\n                String path = entry.getKey();\n                String fileName = path.substring(path.lastIndexOf(\"/\") + 1, path.length());\n                saveSingleFileToServe(fileName, entry.getValue());\n            }\n        }\n    }\n\n    public void saveSingleFileToServe(String fileName, String content) {\n        Path uploadPath = Paths.get(staticDir.toString(), fileName);\n        try {\n            if (uploadPath.toFile().exists()) {\n                LogUtil.info(\"file exists\");\n            } else {\n                if (StringUtils.isNotEmpty(content)) {\n                    Files.createFile(uploadPath);\n                    FileCopyUtils.copy(Base64Decoder.decode(content), Files.newOutputStream(uploadPath));\n                }\n            }\n        } catch (Exception e) {\n            LogUtil.error(\"template static resource save error\" + e.getMessage());\n        }\n    }\n\n    public Map<String, String> findResourceAsBase64(StaticResourceRequest resourceRequest) {\n        Map<String, String> result = new HashMap<>();\n        if (CollectionUtil.isNotEmpty(resourceRequest.getResourcePathList())) {\n            for (String path : resourceRequest.getResourcePathList()) {\n                String value = StaticResourceUtils.getImgFileToBase64(path.substring(path.lastIndexOf(\"/\") + 1, path.length()));\n                result.put(path, value);\n            }\n        }\n        return result;\n    }\n}\n", "<template>\n  <el-row>\n    <el-row>\n      <el-row style=\"height: 50px;overflow: hidden\">\n        <el-col :span=\"8\">\n          <span class=\"params-title\">{{ $t('panel.inner_padding') }}</span>\n        </el-col>\n        <el-col :span=\"16\">\n          <el-slider\n            v-model=\"commonBackground.innerPadding\"\n            show-input\n            :show-input-controls=\"false\"\n            input-size=\"mini\"\n            :max=\"50\"\n            @change=\"themeChange('innerPadding')\"\n          />\n        </el-col>\n      </el-row>\n      <el-row style=\"height: 50px;overflow: hidden\">\n        <el-col :span=\"8\">\n          <span class=\"params-title\">{{ $t('panel.board_radio') }}</span>\n        </el-col>\n        <el-col :span=\"16\">\n          <el-slider\n            v-model=\"commonBackground.borderRadius\"\n            show-input\n            :show-input-controls=\"false\"\n            input-size=\"mini\"\n            @change=\"themeChange('borderRadius')\"\n          />\n        </el-col>\n      </el-row>\n\n      <el-row style=\"height: 40px;overflow: hidden;\">\n        <el-col\n          :span=\"6\"\n          style=\"padding-top: 5px\"\n        >\n          <el-checkbox\n            v-model=\"commonBackground.backgroundColorSelect\"\n            @change=\"themeChange('backgroundColorSelect')\"\n          >\n            {{\n              $t('chart.color')\n            }}\n          </el-checkbox>\n        </el-col>\n        <el-col\n          :span=\"3\"\n          style=\"padding-top: 5px\"\n        >\n          <el-color-picker\n            v-model=\"commonBackground.color\"\n            :disabled=\"!commonBackground.backgroundColorSelect\"\n            size=\"mini\"\n            class=\"color-picker-style\"\n            :predefine=\"predefineColors\"\n            @change=\"themeChange('color')\"\n          />\n        </el-col>\n        <el-col :span=\"5\">\n          <span class=\"params-title-small\">{{ $t('chart.not_alpha') }}</span>\n        </el-col>\n        <el-col :span=\"10\">\n          <el-slider\n            v-model=\"commonBackground.alpha\"\n            :disabled=\"!commonBackground.backgroundColorSelect\"\n            show-input\n            :show-input-controls=\"false\"\n            input-size=\"mini\"\n            @change=\"themeChange('alpha')\"\n          />\n        </el-col>\n      </el-row>\n\n      <el-row style=\"height: 50px\">\n        <el-col\n          :span=\"4\"\n          style=\"padding-top: 5px\"\n        >\n          <el-checkbox\n            v-model=\"commonBackground.enable\"\n            @change=\"themeChange('enable')\"\n          >{{\n            $t('panel.background')\n          }}\n          </el-checkbox>\n        </el-col>\n        <el-col :span=\"20\">\n          <span style=\"color: #909399; font-size: 8px;margin-left:10px;line-height: 40px\">\n            Tips:{{ $t('panel.choose_background_tips') }}\n          </span>\n        </el-col>\n      </el-row>\n      <el-row\n        v-if=\"commonBackground.enable\"\n        style=\"padding-left: 10px\"\n      >\n        <el-row style=\"height: 80px;margin-top:0px;margin-bottom:20px;overflow: hidden\">\n          <el-col\n            :span=\"5\"\n          >\n            <el-radio\n              v-model=\"commonBackground.backgroundType\"\n              label=\"outerImage\"\n              @change=\"themeChange('backgroundType')\"\n            >{{ $t('panel.photo') }}\n            </el-radio>\n          </el-col>\n          <el-col style=\"width: 130px!important;\">\n            <el-upload\n              action=\"\"\n              accept=\".jpeg,.jpg,.png,.gif,.svg\"\n              class=\"avatar-uploader\"\n              list-type=\"picture-card\"\n              :class=\"{disabled:uploadDisabled}\"\n              :on-preview=\"handlePictureCardPreview\"\n              :on-remove=\"handleRemove\"\n              :http-request=\"upload\"\n              :file-list=\"fileList\"\n            >\n              <i class=\"el-icon-plus\" />\n            </el-upload>\n            <el-dialog\n              top=\"25vh\"\n              width=\"600px\"\n              :append-to-body=\"true\"\n              :destroy-on-close=\"true\"\n              :visible.sync=\"dialogVisible\"\n            >\n              <img\n                width=\"100%\"\n                :src=\"dialogImageUrl\"\n              >\n            </el-dialog>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col style=\"position: relative\">\n            <el-radio\n              v-model=\"commonBackground.backgroundType\"\n              label=\"innerImage\"\n              @change=\"themeChange('backgroundType')\"\n            >{{ $t('panel.board') }}\n            </el-radio>\n            <el-color-picker\n              v-model=\"commonBackground.innerImageColor\"\n              :title=\"$t('panel.border_color_setting')\"\n              style=\"position: absolute;left:60px;top: -3px\"\n              size=\"mini\"\n              class=\"color-picker-style\"\n              :predefine=\"predefineColors\"\n              @change=\"themeChange('innerImageColor')\"\n            />\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col\n            :style=\"customStyle\"\n            class=\"main-row\"\n          >\n            <el-row\n              v-for=\"(value, key) in BackgroundShowMap\"\n              :key=\"key\"\n            >\n\n              <el-col\n                v-for=\"item in value\"\n                :key=\"item.id\"\n                :span=\"12\"\n              >\n                <background-item-overall\n                  :common-background=\"commonBackground\"\n                  :template=\"item\"\n                  @borderChange=\"themeChange('innerImage')\"\n                />\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n      </el-row>\n    </el-row>\n  </el-row>\n</template>\n\n<script>\nimport { queryBackground } from '@/api/background/background'\nimport BackgroundItem from '@/views/background/BackgroundItem'\nimport { mapState } from 'vuex'\nimport { imgUrlTrans } from '@/components/canvas/utils/utils'\nimport { COLOR_PANEL } from '@/views/chart/chart/chart'\nimport { uploadFileResult } from '@/api/staticResource/staticResource'\nimport bus from '@/utils/bus'\nimport BackgroundItemOverall from '@/views/background/BackgroundItemOverall'\n\nexport default {\n  name: 'BackgroundOverall',\n  // eslint-disable-next-line\n  components: { BackgroundItemOverall, BackgroundItem },\n  props: {\n    position: {\n      type: String,\n      required: false,\n      default: 'component'\n    }\n  },\n  data() {\n    return {\n      commonBackground: null,\n      BackgroundShowMap: {},\n      checked: false,\n      backgroundOrigin: {},\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      uploadDisabled: false,\n      panel: null,\n      predefineColors: COLOR_PANEL\n    }\n  },\n  computed: {\n    customStyle() {\n      let style = {}\n      if (this.canvasStyleData.openCommonStyle) {\n        if (this.canvasStyleData.panel.backgroundType === 'image' && this.canvasStyleData.panel.imageUrl) {\n          style = {\n            background: `url(${imgUrlTrans(this.canvasStyleData.panel.imageUrl)}) no-repeat`,\n            ...style\n          }\n        } else if (this.canvasStyleData.panel.backgroundType === 'color') {\n          const colorRGBA = hexColorToRGBA(this.canvasStyleData.panel.color, this.canvasStyleData.panel.alpha === undefined ? 100 : this.canvasStyleData.panel.alpha)\n          style = {\n            background: colorRGBA,\n            ...style\n          }\n        }\n      }\n      if (!style.background) {\n        style.background = '#FFFFFF'\n      }\n      return style\n    },\n    ...mapState([\n      'componentData',\n      'canvasStyleData'\n    ])\n  },\n  created() {\n    this.init()\n    bus.$on('onThemeColorChange', this.init)\n  },\n  beforeDestroy() {\n    bus.$off('onThemeColorChange', this.init)\n  },\n  methods: {\n    init() {\n      this.commonBackground = this.canvasStyleData.chartInfo.chartCommonStyle\n      if (this.commonBackground && this.commonBackground.outerImage && typeof (this.commonBackground.outerImage) === 'string') {\n        this.fileList.push({ url: imgUrlTrans(this.commonBackground.outerImage) })\n      }\n      this.queryBackground()\n    },\n    queryBackground() {\n      queryBackground().then(response => {\n        this.BackgroundShowMap = response.data\n      })\n    },\n    commitStyle() {\n      this.$store.commit('recordSnapshot')\n    },\n    onChangeType() {\n      this.commitStyle()\n    },\n    handleRemove(file, fileList) {\n      this.uploadDisabled = false\n      this.commonBackground.outerImage = null\n      this.themeChange('outerImage')\n      this.fileList = []\n      this.commitStyle()\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    upload(file) {\n      const _this = this\n      uploadFileResult(file.file, (fileUrl) => {\n        _this.commonBackground.outerImage = fileUrl\n        this.themeChange('outerImage')\n      })\n    },\n    themeChange(modifyName) {\n      this.componentData.forEach((item, index) => {\n        if (item.type === 'view') {\n          item.commonBackground[modifyName] = this.commonBackground[modifyName]\n        }\n      })\n      this.$store.commit('recordSnapshot')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-card-template {\n  width: 100%;\n  height: 100%;\n}\n\n.main-row {\n  background-size: 100% 100% !important;\n  padding-left: 10px;\n  margin-top: 10px;\n  height: 230px;\n  overflow-y: auto;\n}\n\n.root-class {\n  margin: 15px 0px 5px;\n  text-align: center;\n}\n\n.avatar-uploader ::v-deep .el-upload {\n  width: 120px;\n  height: 80px;\n  line-height: 90px;\n}\n\n.avatar-uploader ::v-deep .el-upload-list li {\n  width: 120px !important;\n  height: 80px !important;\n}\n\n.disabled ::v-deep .el-upload--picture-card {\n  display: none;\n}\n\n.shape-item {\n  padding: 6px;\n  border: none;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.form-item-slider ::v-deep .el-form-item__label {\n  font-size: 12px;\n  line-height: 38px;\n}\n\n.form-item ::v-deep .el-form-item__label {\n  font-size: 12px;\n}\n\n.el-select-dropdown__item {\n  padding: 0 20px;\n}\n\nspan {\n  font-size: 12px\n}\n\n.el-form-item {\n  margin-bottom: 6px;\n}\n\n.main-content {\n}\n\n.params-title {\n  font-weight: 400 !important;\n  font-size: 14px !important;\n  color: var(--TextPrimary, #1F2329) !important;\n  line-height: 40px;\n}\n\n.params-title-small {\n  font-size: 12px !important;\n  color: var(--TextPrimary, #1F2329) !important;\n  line-height: 40px;\n}\n\n::v-deep .el-slider__input {\n  width: 40px;\n  padding-left: 0px;\n  padding-right: 0px;\n}\n\n::v-deep .el-input__inner {\n  padding: 0px !important;\n}\n\n::v-deep .el-slider__runway {\n  margin-right: 60px !important;\n}\n</style>\n", "<template>\n  <div style=\"width: 100%;height: 100%\">\n    <div class=\"de-template\">\n      <div\n        v-loading=\"$store.getters.loadingMap[$store.getters.currentPath]\"\n        class=\"tabs-container flex-tabs\"\n      >\n        <div class=\"de-tabs-left\">\n          <template-list\n            ref=\"templateList\"\n            :template-type=\"currentTemplateType\"\n            :template-list=\"templateList\"\n            :show-position=\"showPosition\"\n            @templateDelete=\"templateListDelete\"\n            @templateEdit=\"templateEdit\"\n            @showCurrentTemplate=\"showCurrentTemplate\"\n            @templateImport=\"templateImport\"\n            @showTemplateEditDialog=\"showTemplateEditDialog\"\n          />\n        </div>\n        <div class=\"de-tabs-right\">\n          <div\n            v-if=\"currentTemplateLabel\"\n            class=\"active-template\"\n          >\n            {{ currentTemplateLabel }}&nbsp;&nbsp;({{\n              currentTemplateShowList.length\n            }})\n            <deBtn\n              v-if=\"showPositionCheck('system-setting')\"\n              type=\"primary\"\n              icon=\"el-icon-upload2\"\n              @click=\"templateImport(currentTemplateId)\"\n            >\n              {{ $t('app_template.app_upload') }}\n            </deBtn>\n          </div>\n          <el-empty\n            v-if=\"!currentTemplateShowList.length\"\n            :image=\"noneImg\"\n            :description=\"$t('app_template.no_apps')\"\n          />\n          <div\n            v-show=\"currentTemplateId !== ''\"\n            id=\"template-box\"\n            class=\"template-box\"\n          >\n            <template-item\n              v-for=\"item in currentTemplateShowList\"\n              :key=\"item.id\"\n              :width=\"templateCurWidth\"\n              :model=\"item\"\n              :show-position=\"showPosition\"\n              @applyNew=\"applyNew(item)\"\n              @previewApp=\"previewApp(item)\"\n              @command=\"(key) => handleCommand(key, item)\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"editTemplate\"\n      append-to-body\n      class=\"de-dialog-form\"\n      width=\"600px\"\n      :destroy-on-close=\"true\"\n    >\n      <el-form\n        ref=\"templateEditForm\"\n        class=\"de-form-item\"\n        :model=\"templateEditForm\"\n        :rules=\"templateEditFormRules\"\n      >\n        <el-form-item\n          :label=\"dialogTitleLabel\"\n          prop=\"name\"\n        >\n          <el-input v-model=\"templateEditForm.name\"/>\n        </el-form-item>\n        <el-form-item\n          :label=\"$t('app_template.app_group_icon')\"\n          prop=\"icon\"\n        >\n          <el-col style=\"width: 148px!important;height: 148px!important;overflow: hidden\">\n            <el-upload\n              action=\"\"\n              accept=\".jpeg,.jpg,.png,.gif,.svg\"\n              class=\"avatar-uploader\"\n              list-type=\"picture-card\"\n              :class=\"{disabled:uploadDisabled}\"\n              :on-preview=\"handlePictureCardPreview\"\n              :on-remove=\"handleRemove\"\n              :http-request=\"upload\"\n              :file-list=\"fileList\"\n            >\n              <i class=\"el-icon-plus\"/>\n            </el-upload>\n            <el-dialog\n              top=\"25vh\"\n              width=\"600px\"\n              :append-to-body=\"true\"\n              :destroy-on-close=\"true\"\n              :visible.sync=\"dialogVisible\"\n            >\n              <img\n                width=\"100%\"\n                :src=\"dialogImageUrl\"\n              >\n            </el-dialog>\n          </el-col>\n        </el-form-item>\n      </el-form>\n      <div\n        slot=\"footer\"\n        class=\"dialog-footer\"\n      >\n        <deBtn\n          secondary\n          @click=\"close()\"\n        >{{ $t('commons.cancel') }}\n        </deBtn>\n        <deBtn\n          type=\"primary\"\n          @click=\"saveTemplateEdit(templateEditForm)\"\n        >{{ $t('commons.confirm') }}\n        </deBtn>\n      </div>\n    </el-dialog>\n\n    <!--\u5bfc\u5165templatedialog-->\n    <el-dialog\n      :title=\"templateDialog.title\"\n      :visible.sync=\"templateDialog.visible\"\n      :show-close=\"true\"\n      class=\"de-dialog-form\"\n      width=\"600px\"\n    >\n      <template-import\n        v-if=\"templateDialog.visible\"\n        :pid=\"templateDialog.pid\"\n        :opt-type=\"templateOptType\"\n        :app-template-info=\"currentAppTemplateInfo\"\n        @refresh=\"showCurrentTemplate(currentTemplateId,\n                                      currentTemplateLabel)\"\n        @closeEditTemplateDialog=\"closeEditTemplateDialog\"\n      />\n    </el-dialog>\n\n    <!--\u5bfc\u5165templatedialog-->\n    <el-dialog\n      :title=\"$t('app_template.move_item') \"\n      :visible.sync=\"moveItemDialogShow\"\n      :show-close=\"true\"\n      class=\"de-dialog-form\"\n      width=\"300px\"\n    >\n      <template-move-list\n        :template-list=\"templateList\"\n        :source-template-info=\"currentMoveItem\"\n        @closeDialog=\"moveItemDialogShow=false\"\n        @templateMoveClose=\"templateMoveClose\"\n      >\n      </template-move-list>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport TemplateList from './component/TemplateList'\nimport TemplateItem from './component/TemplateItem'\nimport TemplateImport from './component/TemplateImport'\nimport { find, save, templateDelete, update } from '@/api/system/appTemplate'\nimport elementResizeDetectorMaker from 'element-resize-detector'\nimport msgCfm from '@/components/msgCfm/index'\nimport { uploadFileResult } from '@/api/staticResource/staticResource'\nimport { imgUrlTrans } from '@/components/canvas/utils/utils'\nimport TemplateMoveList from '@/views/panel/appTemplate/component/TemplateMoveList'\n\nexport default {\n  name: 'AppTemplateContent',\n  components: { TemplateMoveList, TemplateList, TemplateItem, TemplateImport },\n  mixins: [msgCfm],\n  props: {\n    showPosition: {\n      type: String,\n      required: false,\n      default: 'system-setting'\n    }\n  },\n  data() {\n    return {\n      moveItemDialogShow: false,\n      currentMoveItem: {},\n      templateOptType: 'add',\n      currentAppTemplateInfo: null,\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      uploadDisabled: false,\n      showShare: false,\n      currentTemplateShowList: [],\n      noneImg: require('@/assets/None.png'),\n      currentPid: '',\n      currentTemplateType: 'self',\n      templateEditFormRules: {\n        name: [\n          { required: true, trigger: 'blur', validator: this.roleValidator },\n          {\n            required: true,\n            message: this.$t('commons.input_content'),\n            trigger: 'blur'\n          },\n          {\n            max: 50,\n            message: this.$t('commons.char_can_not_more_50'),\n            trigger: 'change'\n          }\n        ],\n        icon: [\n          {\n            required: true,\n            message: '\u8bf7\u9009\u62e9\u6587\u4ef6',\n            trigger: 'change'\n          }\n        ]\n      },\n      templateEditForm: {},\n      editTemplate: false,\n      dialogTitle: '',\n      dialogTitleLabel: '',\n      currentTemplateLabel: '',\n      currentTemplateId: '',\n      templateList: [],\n      templateMiniWidth: 286,\n      templateCurWidth: 286,\n      formType: '',\n      originName: '',\n      templateDialog: {\n        title: '\u5bfc\u5165\u5e94\u7528',\n        visible: false,\n        pid: ''\n      }\n    }\n  },\n  computed: {\n    nameList() {\n      const { nodeType } = this.templateEditForm || {}\n      if (nodeType === 'template') {\n        return this.currentTemplateShowList.map((ele) => ele.name)\n      }\n\n      if (nodeType === 'folder') {\n        return this.templateList.map((ele) => ele.name)\n      }\n      return []\n    }\n  },\n  mounted() {\n    this.getTree()\n    const _this = this\n    const erd = elementResizeDetectorMaker()\n    const templateMainDom = document.getElementById('template-box')\n    // \u76d1\u542cdiv\u53d8\u52a8\u4e8b\u4ef6\n    erd.listenTo(templateMainDom, (element) => {\n      _this.$nextTick(() => {\n        const curSeparator = Math.trunc(\n          templateMainDom.offsetWidth / _this.templateMiniWidth\n        )\n        _this.templateCurWidth =\n          Math.trunc(templateMainDom.offsetWidth / curSeparator) - 24 - curSeparator\n      })\n    })\n  },\n  methods: {\n    previewApp(item) {\n      this.$emit('previewApp', item)\n    },\n    applyNew(item) {\n      this.$emit('applyNew', item)\n    },\n    showPositionCheck(requiredPosition) {\n      return this.showPosition === requiredPosition\n    },\n    roleValidator(rule, value, callback) {\n      if (this.nameRepeat(value)) {\n        const { nodeType } = this.templateEditForm || {}\n        callback(\n          new Error(\n            this.$t(\n              `system_parameter_setting.${\n                nodeType === 'folder'\n                  ? 'name_already_exists_type'\n                  : 'the_same_category'\n              }`\n            )\n          )\n        )\n      } else {\n        callback()\n      }\n    },\n    nameRepeat(value) {\n      if (!this.nameList || this.nameList.length === 0) {\n        return false\n      }\n      // \u7f16\u8f91\u573a\u666f \u4e0d\u80fd \u56e0\u4e3a\u540d\u79f0\u91cd\u590d\u800c\u62a5\u9519\n      if (this.formType === 'edit' && this.originName === value) {\n        return false\n      }\n      return this.nameList.some((name) => name === value)\n    },\n    handleCommand(key, data) {\n      switch (key) {\n        case 'rename':\n          this.templateEdit(data)\n          break\n        case 'delete':\n          this.templateDeleteConfirm(data)\n          break\n        case 'update':\n          this.updateAppTemplate(data)\n          break\n        case 'move':\n          this.moveTo(data)\n          break\n        default:\n          break\n      }\n    },\n    updateAppTemplate(data) {\n      this.templateOptType = 'update'\n      this.templateDialog.visible = true\n      this.currentAppTemplateInfo = data\n      this.templateDialog.pid = data.pid\n    },\n    moveTo(data) {\n      this.moveItemDialogShow = true\n      this.currentMoveItem = data\n    },\n    templateDeleteConfirm(template) {\n      const options = {\n        title: '\u662f\u5426\u5378\u8f7d\u5f53\u524d\u5e94\u7528\uff1f',\n        type: 'primary',\n        cb: () => this.templateDelete(template.id)\n      }\n      this.handlerConfirm(options, '\u5378\u8f7d')\n    },\n    handleClick(tab, event) {\n      this.getTree()\n    },\n    showCurrentTemplate(pid, name) {\n      this.currentTemplateId = pid\n      this.currentTemplateLabel = name\n      if (this.currentTemplateId) {\n        find({ pid: this.currentTemplateId }).then((response) => {\n          this.currentTemplateShowList = response.data\n        })\n      }\n    },\n    templateListDelete(id) {\n      if (id) {\n        templateDelete(id).then((response) => {\n          this.openMessageSuccess('commons.delete_success')\n          this.getTree()\n        })\n      }\n    },\n\n    templateDelete(id) {\n      if (id) {\n        templateDelete(id).then((response) => {\n          this.openMessageSuccess('commons.delete_success')\n          this.showCurrentTemplate(this.currentTemplateId, this.currentTemplateLabel)\n        })\n      }\n    },\n    templateMoveClose() {\n      this.moveItemDialogShow = false\n      this.showCurrentTemplate(this.currentTemplateId, this.currentTemplateLabel)\n    },\n    showTemplateEditDialog(type, templateInfo) {\n      this.templateEditForm = null\n      this.formType = type\n      if (type === 'edit') {\n        if (templateInfo.icon) {\n          this.fileList.push({ url: imgUrlTrans(templateInfo.icon) })\n        }\n        this.templateEditForm = JSON.parse(JSON.stringify(templateInfo))\n        this.dialogTitle = this.$t(\n          `system_parameter_setting.${\n            this.templateEditForm.nodeType === 'folder'\n              ? 'edit_classification'\n              : 'edit_template'\n          }`\n        )\n        this.originName = this.templateEditForm.name\n      } else {\n        this.fileList = []\n        this.dialogTitle = this.$t('panel.add_app_category')\n        this.templateEditForm = {\n          name: '',\n          nodeType: 'folder',\n          templateType: this.currentTemplateType,\n          icon: '',\n          level: 0,\n          pid: 0\n        }\n      }\n      this.dialogTitleLabel = this.$t(\n        `system_parameter_setting.${\n          this.templateEditForm.nodeType === 'folder'\n            ? 'classification_name'\n            : 'template_name'\n        }`\n      )\n      this.editTemplate = true\n    },\n    templateEdit(templateInfo) {\n      this.showTemplateEditDialog('edit', templateInfo)\n    },\n    saveTemplateEdit(templateEditForm) {\n      this.$refs['templateEditForm'].validate((valid) => {\n        if (valid) {\n          const method = templateEditForm.id ? update : save\n          method(templateEditForm).then((response) => {\n            this.close()\n            this.openMessageSuccess(\n              `system_parameter_setting.${\n                this.templateEditForm.id\n                  ? 'edit_success'\n                  : 'added_successfully'\n              }`\n            )\n            this.getTree()\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    close() {\n      this.$refs['templateEditForm'].resetFields()\n      this.editTemplate = false\n      this.handleRemove()\n    },\n    getTree() {\n      const request = {\n        templateType: this.currentTemplateType,\n        pid: '0'\n      }\n      find(request).then((res) => {\n        this.templateList = res.data\n        this.showFirst()\n      })\n    },\n    showFirst() {\n      // \u5224\u65ad\u662f\u5426\u9ed8\u8ba4\u70b9\u51fb\u7b2c\u4e00\u6761\n      if (this.templateList && this.templateList.length > 0) {\n        let showFirst = true\n        this.templateList.forEach((template) => {\n          if (template.id === this.currentTemplateId) {\n            showFirst = false\n          }\n        })\n        if (showFirst) {\n          this.$nextTick().then(() => {\n            const [obj = {}] = this.templateList\n            this.$refs.templateList.nodeClick(obj)\n          })\n        } else {\n          this.showCurrentTemplate(this.currentTemplateId, this.currentTemplateLabel)\n        }\n      } else {\n        this.currentTemplateShowList = []\n      }\n    },\n    closeEditTemplateDialog() {\n      this.templateDialog.visible = false\n    },\n    templateImport(pid) {\n      this.templateOptType = 'new'\n      this.currentAppTemplateInfo = null\n      this.templateDialog.visible = true\n      this.templateDialog.pid = pid\n    },\n    handleRemove(file, fileList) {\n      this.uploadDisabled = false\n      this.templateEditForm.icon = null\n      this.fileList = []\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    upload(file) {\n      const _this = this\n      uploadFileResult(file.file, (fileUrl) => {\n        _this.templateEditForm.icon = fileUrl\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.de-template {\n  height: 100%;\n  background-color: var(--MainBG, #f5f6f7);\n\n  .tabs-container {\n    height: 100%;\n    background: var(--ContentBG, #ffffff);\n    overflow-x: auto;\n  }\n\n  .flex-tabs {\n    display: flex;\n    background: #f5f6f7;\n  }\n\n  .de-tabs-left {\n    background: #fff;\n    width: 269px;\n    border-right: 1px solid rgba(31, 35, 41, 0.15);\n    padding: 24px;\n  }\n\n  .de-tabs-right {\n    flex: 1;\n    background: #fff;\n    padding: 24px 0 24px 24px;\n    overflow: hidden;\n\n    .template-box {\n      display: flex;\n      flex-wrap: wrap;\n      overflow-y: auto;\n      box-sizing: border-box;\n      align-content: flex-start;\n      height: calc(100% - 10px);\n      width: 100%;\n      padding-bottom: 24px;\n    }\n\n    .active-template {\n      margin: 4px 0 20px 0;\n      padding-right: 24px;\n      font-family: \"PingFang SC\";\n      font-style: normal;\n      font-weight: 500;\n      font-size: 16px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      color: var(--deTextPrimary, #1f2329);\n    }\n  }\n}\n\n::v-deep .container-wrapper {\n  padding: 0px !important;\n}\n</style>\n"], "fixing_code": ["package io.dataease.service.staticResource;\n\nimport cn.hutool.core.codec.Base64Decoder;\nimport cn.hutool.core.collection.CollectionUtil;\nimport com.google.gson.Gson;\nimport io.dataease.commons.exception.DEException;\nimport io.dataease.commons.utils.FileUtils;\nimport io.dataease.commons.utils.LogUtil;\nimport io.dataease.commons.utils.StaticResourceUtils;\nimport io.dataease.controller.request.resource.StaticResourceRequest;\nimport io.dataease.exception.DataEaseException;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\nimport org.springframework.util.FileCopyUtils;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.imageio.ImageIO;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * Author: wangjiahao\n * Date: 2022/4/24\n * Description:\n */\n@Service\npublic class StaticResourceService {\n\n    private final Path staticDir = Paths.get(\"/opt/dataease/data/static-resource/\");\n\n    public void upload(String fileId, MultipartFile file) {\n        // check if the path is valid (not outside staticDir)\n        Assert.notNull(file, \"Multipart file must not be null\");\n        try {\n            if (!isImage(file)) {\n                DEException.throwException(\"Multipart file must be image\");\n            }\n            String originName = file.getOriginalFilename();\n            String newFileName = fileId + originName.substring(originName.lastIndexOf(\".\"), originName.length());\n            Path uploadPath = Paths.get(staticDir.toString(), newFileName);\n            // create dir is absent\n            FileUtils.createIfAbsent(Paths.get(staticDir.toString()));\n            Files.createFile(uploadPath);\n            file.transferTo(uploadPath);\n        } catch (IOException e) {\n            LogUtil.error(\"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\", e);\n            DataEaseException.throwException(\"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\");\n        } catch (Exception e) {\n            DataEaseException.throwException(e);\n        }\n    }\n\n    private boolean isImage(MultipartFile file) {\n        BufferedImage image = null;\n        try (InputStream input = file.getInputStream()) {\n            image = ImageIO.read(input);\n        } catch (IOException e) {\n            LogUtil.error(e.getMessage(), e);\n            return false;\n        }\n        Pattern pattern = Pattern.compile(\"\\\\.(png|jpg|jpeg|gif)$\");\n        Matcher matcher = pattern.matcher(file.getOriginalFilename().toLowerCase());\n        if (image == null || image.getWidth() <= 0 || image.getHeight() <= 0 || !matcher.find()) {\n            return false;\n        }\n\n        return true;\n    }\n\n    public void saveFilesToServe(String staticResource) {\n        Gson gson = new Gson();\n        if (StringUtils.isNotEmpty(staticResource)) {\n            Map<String, String> resource = gson.fromJson(staticResource, Map.class);\n            for (Map.Entry<String, String> entry : resource.entrySet()) {\n                String path = entry.getKey();\n                String fileName = path.substring(path.lastIndexOf(\"/\") + 1, path.length());\n                saveSingleFileToServe(fileName, entry.getValue());\n            }\n        }\n    }\n\n    public void saveSingleFileToServe(String fileName, String content) {\n        Path uploadPath = Paths.get(staticDir.toString(), fileName);\n        try {\n            if (uploadPath.toFile().exists()) {\n                LogUtil.info(\"file exists\");\n            } else {\n                if (StringUtils.isNotEmpty(content)) {\n                    Files.createFile(uploadPath);\n                    FileCopyUtils.copy(Base64Decoder.decode(content), Files.newOutputStream(uploadPath));\n                }\n            }\n        } catch (Exception e) {\n            LogUtil.error(\"template static resource save error\" + e.getMessage());\n        }\n    }\n\n    public Map<String, String> findResourceAsBase64(StaticResourceRequest resourceRequest) {\n        Map<String, String> result = new HashMap<>();\n        if (CollectionUtil.isNotEmpty(resourceRequest.getResourcePathList())) {\n            for (String path : resourceRequest.getResourcePathList()) {\n                String value = StaticResourceUtils.getImgFileToBase64(path.substring(path.lastIndexOf(\"/\") + 1, path.length()));\n                result.put(path, value);\n            }\n        }\n        return result;\n    }\n}\n", "<template>\n  <el-row>\n    <el-row>\n      <el-row style=\"height: 50px;overflow: hidden\">\n        <el-col :span=\"8\">\n          <span class=\"params-title\">{{ $t('panel.inner_padding') }}</span>\n        </el-col>\n        <el-col :span=\"16\">\n          <el-slider\n            v-model=\"commonBackground.innerPadding\"\n            show-input\n            :show-input-controls=\"false\"\n            input-size=\"mini\"\n            :max=\"50\"\n            @change=\"themeChange('innerPadding')\"\n          />\n        </el-col>\n      </el-row>\n      <el-row style=\"height: 50px;overflow: hidden\">\n        <el-col :span=\"8\">\n          <span class=\"params-title\">{{ $t('panel.board_radio') }}</span>\n        </el-col>\n        <el-col :span=\"16\">\n          <el-slider\n            v-model=\"commonBackground.borderRadius\"\n            show-input\n            :show-input-controls=\"false\"\n            input-size=\"mini\"\n            @change=\"themeChange('borderRadius')\"\n          />\n        </el-col>\n      </el-row>\n\n      <el-row style=\"height: 40px;overflow: hidden;\">\n        <el-col\n          :span=\"6\"\n          style=\"padding-top: 5px\"\n        >\n          <el-checkbox\n            v-model=\"commonBackground.backgroundColorSelect\"\n            @change=\"themeChange('backgroundColorSelect')\"\n          >\n            {{\n              $t('chart.color')\n            }}\n          </el-checkbox>\n        </el-col>\n        <el-col\n          :span=\"3\"\n          style=\"padding-top: 5px\"\n        >\n          <el-color-picker\n            v-model=\"commonBackground.color\"\n            :disabled=\"!commonBackground.backgroundColorSelect\"\n            size=\"mini\"\n            class=\"color-picker-style\"\n            :predefine=\"predefineColors\"\n            @change=\"themeChange('color')\"\n          />\n        </el-col>\n        <el-col :span=\"5\">\n          <span class=\"params-title-small\">{{ $t('chart.not_alpha') }}</span>\n        </el-col>\n        <el-col :span=\"10\">\n          <el-slider\n            v-model=\"commonBackground.alpha\"\n            :disabled=\"!commonBackground.backgroundColorSelect\"\n            show-input\n            :show-input-controls=\"false\"\n            input-size=\"mini\"\n            @change=\"themeChange('alpha')\"\n          />\n        </el-col>\n      </el-row>\n\n      <el-row style=\"height: 50px\">\n        <el-col\n          :span=\"4\"\n          style=\"padding-top: 5px\"\n        >\n          <el-checkbox\n            v-model=\"commonBackground.enable\"\n            @change=\"themeChange('enable')\"\n          >{{\n            $t('panel.background')\n          }}\n          </el-checkbox>\n        </el-col>\n        <el-col :span=\"20\">\n          <span style=\"color: #909399; font-size: 8px;margin-left:10px;line-height: 40px\">\n            Tips:{{ $t('panel.choose_background_tips') }}\n          </span>\n        </el-col>\n      </el-row>\n      <el-row\n        v-if=\"commonBackground.enable\"\n        style=\"padding-left: 10px\"\n      >\n        <el-row style=\"height: 80px;margin-top:0px;margin-bottom:20px;overflow: hidden\">\n          <el-col\n            :span=\"5\"\n          >\n            <el-radio\n              v-model=\"commonBackground.backgroundType\"\n              label=\"outerImage\"\n              @change=\"themeChange('backgroundType')\"\n            >{{ $t('panel.photo') }}\n            </el-radio>\n          </el-col>\n          <el-col style=\"width: 130px!important;\">\n            <el-upload\n              action=\"\"\n              accept=\".jpeg,.jpg,.png,.gif\"\n              class=\"avatar-uploader\"\n              list-type=\"picture-card\"\n              :class=\"{disabled:uploadDisabled}\"\n              :on-preview=\"handlePictureCardPreview\"\n              :on-remove=\"handleRemove\"\n              :http-request=\"upload\"\n              :file-list=\"fileList\"\n            >\n              <i class=\"el-icon-plus\" />\n            </el-upload>\n            <el-dialog\n              top=\"25vh\"\n              width=\"600px\"\n              :append-to-body=\"true\"\n              :destroy-on-close=\"true\"\n              :visible.sync=\"dialogVisible\"\n            >\n              <img\n                width=\"100%\"\n                :src=\"dialogImageUrl\"\n              >\n            </el-dialog>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col style=\"position: relative\">\n            <el-radio\n              v-model=\"commonBackground.backgroundType\"\n              label=\"innerImage\"\n              @change=\"themeChange('backgroundType')\"\n            >{{ $t('panel.board') }}\n            </el-radio>\n            <el-color-picker\n              v-model=\"commonBackground.innerImageColor\"\n              :title=\"$t('panel.border_color_setting')\"\n              style=\"position: absolute;left:60px;top: -3px\"\n              size=\"mini\"\n              class=\"color-picker-style\"\n              :predefine=\"predefineColors\"\n              @change=\"themeChange('innerImageColor')\"\n            />\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col\n            :style=\"customStyle\"\n            class=\"main-row\"\n          >\n            <el-row\n              v-for=\"(value, key) in BackgroundShowMap\"\n              :key=\"key\"\n            >\n\n              <el-col\n                v-for=\"item in value\"\n                :key=\"item.id\"\n                :span=\"12\"\n              >\n                <background-item-overall\n                  :common-background=\"commonBackground\"\n                  :template=\"item\"\n                  @borderChange=\"themeChange('innerImage')\"\n                />\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n      </el-row>\n    </el-row>\n  </el-row>\n</template>\n\n<script>\nimport { queryBackground } from '@/api/background/background'\nimport BackgroundItem from '@/views/background/BackgroundItem'\nimport { mapState } from 'vuex'\nimport { imgUrlTrans } from '@/components/canvas/utils/utils'\nimport { COLOR_PANEL } from '@/views/chart/chart/chart'\nimport { uploadFileResult } from '@/api/staticResource/staticResource'\nimport bus from '@/utils/bus'\nimport BackgroundItemOverall from '@/views/background/BackgroundItemOverall'\n\nexport default {\n  name: 'BackgroundOverall',\n  // eslint-disable-next-line\n  components: { BackgroundItemOverall, BackgroundItem },\n  props: {\n    position: {\n      type: String,\n      required: false,\n      default: 'component'\n    }\n  },\n  data() {\n    return {\n      commonBackground: null,\n      BackgroundShowMap: {},\n      checked: false,\n      backgroundOrigin: {},\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      uploadDisabled: false,\n      panel: null,\n      predefineColors: COLOR_PANEL\n    }\n  },\n  computed: {\n    customStyle() {\n      let style = {}\n      if (this.canvasStyleData.openCommonStyle) {\n        if (this.canvasStyleData.panel.backgroundType === 'image' && this.canvasStyleData.panel.imageUrl) {\n          style = {\n            background: `url(${imgUrlTrans(this.canvasStyleData.panel.imageUrl)}) no-repeat`,\n            ...style\n          }\n        } else if (this.canvasStyleData.panel.backgroundType === 'color') {\n          const colorRGBA = hexColorToRGBA(this.canvasStyleData.panel.color, this.canvasStyleData.panel.alpha === undefined ? 100 : this.canvasStyleData.panel.alpha)\n          style = {\n            background: colorRGBA,\n            ...style\n          }\n        }\n      }\n      if (!style.background) {\n        style.background = '#FFFFFF'\n      }\n      return style\n    },\n    ...mapState([\n      'componentData',\n      'canvasStyleData'\n    ])\n  },\n  created() {\n    this.init()\n    bus.$on('onThemeColorChange', this.init)\n  },\n  beforeDestroy() {\n    bus.$off('onThemeColorChange', this.init)\n  },\n  methods: {\n    init() {\n      this.commonBackground = this.canvasStyleData.chartInfo.chartCommonStyle\n      if (this.commonBackground && this.commonBackground.outerImage && typeof (this.commonBackground.outerImage) === 'string') {\n        this.fileList.push({ url: imgUrlTrans(this.commonBackground.outerImage) })\n      }\n      this.queryBackground()\n    },\n    queryBackground() {\n      queryBackground().then(response => {\n        this.BackgroundShowMap = response.data\n      })\n    },\n    commitStyle() {\n      this.$store.commit('recordSnapshot')\n    },\n    onChangeType() {\n      this.commitStyle()\n    },\n    handleRemove(file, fileList) {\n      this.uploadDisabled = false\n      this.commonBackground.outerImage = null\n      this.themeChange('outerImage')\n      this.fileList = []\n      this.commitStyle()\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    upload(file) {\n      const _this = this\n      uploadFileResult(file.file, (fileUrl) => {\n        _this.commonBackground.outerImage = fileUrl\n        this.themeChange('outerImage')\n      })\n    },\n    themeChange(modifyName) {\n      this.componentData.forEach((item, index) => {\n        if (item.type === 'view') {\n          item.commonBackground[modifyName] = this.commonBackground[modifyName]\n        }\n      })\n      this.$store.commit('recordSnapshot')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-card-template {\n  width: 100%;\n  height: 100%;\n}\n\n.main-row {\n  background-size: 100% 100% !important;\n  padding-left: 10px;\n  margin-top: 10px;\n  height: 230px;\n  overflow-y: auto;\n}\n\n.root-class {\n  margin: 15px 0px 5px;\n  text-align: center;\n}\n\n.avatar-uploader ::v-deep .el-upload {\n  width: 120px;\n  height: 80px;\n  line-height: 90px;\n}\n\n.avatar-uploader ::v-deep .el-upload-list li {\n  width: 120px !important;\n  height: 80px !important;\n}\n\n.disabled ::v-deep .el-upload--picture-card {\n  display: none;\n}\n\n.shape-item {\n  padding: 6px;\n  border: none;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.form-item-slider ::v-deep .el-form-item__label {\n  font-size: 12px;\n  line-height: 38px;\n}\n\n.form-item ::v-deep .el-form-item__label {\n  font-size: 12px;\n}\n\n.el-select-dropdown__item {\n  padding: 0 20px;\n}\n\nspan {\n  font-size: 12px\n}\n\n.el-form-item {\n  margin-bottom: 6px;\n}\n\n.main-content {\n}\n\n.params-title {\n  font-weight: 400 !important;\n  font-size: 14px !important;\n  color: var(--TextPrimary, #1F2329) !important;\n  line-height: 40px;\n}\n\n.params-title-small {\n  font-size: 12px !important;\n  color: var(--TextPrimary, #1F2329) !important;\n  line-height: 40px;\n}\n\n::v-deep .el-slider__input {\n  width: 40px;\n  padding-left: 0px;\n  padding-right: 0px;\n}\n\n::v-deep .el-input__inner {\n  padding: 0px !important;\n}\n\n::v-deep .el-slider__runway {\n  margin-right: 60px !important;\n}\n</style>\n", "<template>\n  <div style=\"width: 100%;height: 100%\">\n    <div class=\"de-template\">\n      <div\n        v-loading=\"$store.getters.loadingMap[$store.getters.currentPath]\"\n        class=\"tabs-container flex-tabs\"\n      >\n        <div class=\"de-tabs-left\">\n          <template-list\n            ref=\"templateList\"\n            :template-type=\"currentTemplateType\"\n            :template-list=\"templateList\"\n            :show-position=\"showPosition\"\n            @templateDelete=\"templateListDelete\"\n            @templateEdit=\"templateEdit\"\n            @showCurrentTemplate=\"showCurrentTemplate\"\n            @templateImport=\"templateImport\"\n            @showTemplateEditDialog=\"showTemplateEditDialog\"\n          />\n        </div>\n        <div class=\"de-tabs-right\">\n          <div\n            v-if=\"currentTemplateLabel\"\n            class=\"active-template\"\n          >\n            {{ currentTemplateLabel }}&nbsp;&nbsp;({{\n              currentTemplateShowList.length\n            }})\n            <deBtn\n              v-if=\"showPositionCheck('system-setting')\"\n              type=\"primary\"\n              icon=\"el-icon-upload2\"\n              @click=\"templateImport(currentTemplateId)\"\n            >\n              {{ $t('app_template.app_upload') }}\n            </deBtn>\n          </div>\n          <el-empty\n            v-if=\"!currentTemplateShowList.length\"\n            :image=\"noneImg\"\n            :description=\"$t('app_template.no_apps')\"\n          />\n          <div\n            v-show=\"currentTemplateId !== ''\"\n            id=\"template-box\"\n            class=\"template-box\"\n          >\n            <template-item\n              v-for=\"item in currentTemplateShowList\"\n              :key=\"item.id\"\n              :width=\"templateCurWidth\"\n              :model=\"item\"\n              :show-position=\"showPosition\"\n              @applyNew=\"applyNew(item)\"\n              @previewApp=\"previewApp(item)\"\n              @command=\"(key) => handleCommand(key, item)\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"editTemplate\"\n      append-to-body\n      class=\"de-dialog-form\"\n      width=\"600px\"\n      :destroy-on-close=\"true\"\n    >\n      <el-form\n        ref=\"templateEditForm\"\n        class=\"de-form-item\"\n        :model=\"templateEditForm\"\n        :rules=\"templateEditFormRules\"\n      >\n        <el-form-item\n          :label=\"dialogTitleLabel\"\n          prop=\"name\"\n        >\n          <el-input v-model=\"templateEditForm.name\"/>\n        </el-form-item>\n        <el-form-item\n          :label=\"$t('app_template.app_group_icon')\"\n          prop=\"icon\"\n        >\n          <el-col style=\"width: 148px!important;height: 148px!important;overflow: hidden\">\n            <el-upload\n              action=\"\"\n              accept=\".jpeg,.jpg,.png,.gif\"\n              class=\"avatar-uploader\"\n              list-type=\"picture-card\"\n              :class=\"{disabled:uploadDisabled}\"\n              :on-preview=\"handlePictureCardPreview\"\n              :on-remove=\"handleRemove\"\n              :http-request=\"upload\"\n              :file-list=\"fileList\"\n            >\n              <i class=\"el-icon-plus\"/>\n            </el-upload>\n            <el-dialog\n              top=\"25vh\"\n              width=\"600px\"\n              :append-to-body=\"true\"\n              :destroy-on-close=\"true\"\n              :visible.sync=\"dialogVisible\"\n            >\n              <img\n                width=\"100%\"\n                :src=\"dialogImageUrl\"\n              >\n            </el-dialog>\n          </el-col>\n        </el-form-item>\n      </el-form>\n      <div\n        slot=\"footer\"\n        class=\"dialog-footer\"\n      >\n        <deBtn\n          secondary\n          @click=\"close()\"\n        >{{ $t('commons.cancel') }}\n        </deBtn>\n        <deBtn\n          type=\"primary\"\n          @click=\"saveTemplateEdit(templateEditForm)\"\n        >{{ $t('commons.confirm') }}\n        </deBtn>\n      </div>\n    </el-dialog>\n\n    <!--\u5bfc\u5165templatedialog-->\n    <el-dialog\n      :title=\"templateDialog.title\"\n      :visible.sync=\"templateDialog.visible\"\n      :show-close=\"true\"\n      class=\"de-dialog-form\"\n      width=\"600px\"\n    >\n      <template-import\n        v-if=\"templateDialog.visible\"\n        :pid=\"templateDialog.pid\"\n        :opt-type=\"templateOptType\"\n        :app-template-info=\"currentAppTemplateInfo\"\n        @refresh=\"showCurrentTemplate(currentTemplateId,\n                                      currentTemplateLabel)\"\n        @closeEditTemplateDialog=\"closeEditTemplateDialog\"\n      />\n    </el-dialog>\n\n    <!--\u5bfc\u5165templatedialog-->\n    <el-dialog\n      :title=\"$t('app_template.move_item') \"\n      :visible.sync=\"moveItemDialogShow\"\n      :show-close=\"true\"\n      class=\"de-dialog-form\"\n      width=\"300px\"\n    >\n      <template-move-list\n        :template-list=\"templateList\"\n        :source-template-info=\"currentMoveItem\"\n        @closeDialog=\"moveItemDialogShow=false\"\n        @templateMoveClose=\"templateMoveClose\"\n      >\n      </template-move-list>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport TemplateList from './component/TemplateList'\nimport TemplateItem from './component/TemplateItem'\nimport TemplateImport from './component/TemplateImport'\nimport { find, save, templateDelete, update } from '@/api/system/appTemplate'\nimport elementResizeDetectorMaker from 'element-resize-detector'\nimport msgCfm from '@/components/msgCfm/index'\nimport { uploadFileResult } from '@/api/staticResource/staticResource'\nimport { imgUrlTrans } from '@/components/canvas/utils/utils'\nimport TemplateMoveList from '@/views/panel/appTemplate/component/TemplateMoveList'\n\nexport default {\n  name: 'AppTemplateContent',\n  components: { TemplateMoveList, TemplateList, TemplateItem, TemplateImport },\n  mixins: [msgCfm],\n  props: {\n    showPosition: {\n      type: String,\n      required: false,\n      default: 'system-setting'\n    }\n  },\n  data() {\n    return {\n      moveItemDialogShow: false,\n      currentMoveItem: {},\n      templateOptType: 'add',\n      currentAppTemplateInfo: null,\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      uploadDisabled: false,\n      showShare: false,\n      currentTemplateShowList: [],\n      noneImg: require('@/assets/None.png'),\n      currentPid: '',\n      currentTemplateType: 'self',\n      templateEditFormRules: {\n        name: [\n          { required: true, trigger: 'blur', validator: this.roleValidator },\n          {\n            required: true,\n            message: this.$t('commons.input_content'),\n            trigger: 'blur'\n          },\n          {\n            max: 50,\n            message: this.$t('commons.char_can_not_more_50'),\n            trigger: 'change'\n          }\n        ],\n        icon: [\n          {\n            required: true,\n            message: '\u8bf7\u9009\u62e9\u6587\u4ef6',\n            trigger: 'change'\n          }\n        ]\n      },\n      templateEditForm: {},\n      editTemplate: false,\n      dialogTitle: '',\n      dialogTitleLabel: '',\n      currentTemplateLabel: '',\n      currentTemplateId: '',\n      templateList: [],\n      templateMiniWidth: 286,\n      templateCurWidth: 286,\n      formType: '',\n      originName: '',\n      templateDialog: {\n        title: '\u5bfc\u5165\u5e94\u7528',\n        visible: false,\n        pid: ''\n      }\n    }\n  },\n  computed: {\n    nameList() {\n      const { nodeType } = this.templateEditForm || {}\n      if (nodeType === 'template') {\n        return this.currentTemplateShowList.map((ele) => ele.name)\n      }\n\n      if (nodeType === 'folder') {\n        return this.templateList.map((ele) => ele.name)\n      }\n      return []\n    }\n  },\n  mounted() {\n    this.getTree()\n    const _this = this\n    const erd = elementResizeDetectorMaker()\n    const templateMainDom = document.getElementById('template-box')\n    // \u76d1\u542cdiv\u53d8\u52a8\u4e8b\u4ef6\n    erd.listenTo(templateMainDom, (element) => {\n      _this.$nextTick(() => {\n        const curSeparator = Math.trunc(\n          templateMainDom.offsetWidth / _this.templateMiniWidth\n        )\n        _this.templateCurWidth =\n          Math.trunc(templateMainDom.offsetWidth / curSeparator) - 24 - curSeparator\n      })\n    })\n  },\n  methods: {\n    previewApp(item) {\n      this.$emit('previewApp', item)\n    },\n    applyNew(item) {\n      this.$emit('applyNew', item)\n    },\n    showPositionCheck(requiredPosition) {\n      return this.showPosition === requiredPosition\n    },\n    roleValidator(rule, value, callback) {\n      if (this.nameRepeat(value)) {\n        const { nodeType } = this.templateEditForm || {}\n        callback(\n          new Error(\n            this.$t(\n              `system_parameter_setting.${\n                nodeType === 'folder'\n                  ? 'name_already_exists_type'\n                  : 'the_same_category'\n              }`\n            )\n          )\n        )\n      } else {\n        callback()\n      }\n    },\n    nameRepeat(value) {\n      if (!this.nameList || this.nameList.length === 0) {\n        return false\n      }\n      // \u7f16\u8f91\u573a\u666f \u4e0d\u80fd \u56e0\u4e3a\u540d\u79f0\u91cd\u590d\u800c\u62a5\u9519\n      if (this.formType === 'edit' && this.originName === value) {\n        return false\n      }\n      return this.nameList.some((name) => name === value)\n    },\n    handleCommand(key, data) {\n      switch (key) {\n        case 'rename':\n          this.templateEdit(data)\n          break\n        case 'delete':\n          this.templateDeleteConfirm(data)\n          break\n        case 'update':\n          this.updateAppTemplate(data)\n          break\n        case 'move':\n          this.moveTo(data)\n          break\n        default:\n          break\n      }\n    },\n    updateAppTemplate(data) {\n      this.templateOptType = 'update'\n      this.templateDialog.visible = true\n      this.currentAppTemplateInfo = data\n      this.templateDialog.pid = data.pid\n    },\n    moveTo(data) {\n      this.moveItemDialogShow = true\n      this.currentMoveItem = data\n    },\n    templateDeleteConfirm(template) {\n      const options = {\n        title: '\u662f\u5426\u5378\u8f7d\u5f53\u524d\u5e94\u7528\uff1f',\n        type: 'primary',\n        cb: () => this.templateDelete(template.id)\n      }\n      this.handlerConfirm(options, '\u5378\u8f7d')\n    },\n    handleClick(tab, event) {\n      this.getTree()\n    },\n    showCurrentTemplate(pid, name) {\n      this.currentTemplateId = pid\n      this.currentTemplateLabel = name\n      if (this.currentTemplateId) {\n        find({ pid: this.currentTemplateId }).then((response) => {\n          this.currentTemplateShowList = response.data\n        })\n      }\n    },\n    templateListDelete(id) {\n      if (id) {\n        templateDelete(id).then((response) => {\n          this.openMessageSuccess('commons.delete_success')\n          this.getTree()\n        })\n      }\n    },\n\n    templateDelete(id) {\n      if (id) {\n        templateDelete(id).then((response) => {\n          this.openMessageSuccess('commons.delete_success')\n          this.showCurrentTemplate(this.currentTemplateId, this.currentTemplateLabel)\n        })\n      }\n    },\n    templateMoveClose() {\n      this.moveItemDialogShow = false\n      this.showCurrentTemplate(this.currentTemplateId, this.currentTemplateLabel)\n    },\n    showTemplateEditDialog(type, templateInfo) {\n      this.templateEditForm = null\n      this.formType = type\n      if (type === 'edit') {\n        if (templateInfo.icon) {\n          this.fileList.push({ url: imgUrlTrans(templateInfo.icon) })\n        }\n        this.templateEditForm = JSON.parse(JSON.stringify(templateInfo))\n        this.dialogTitle = this.$t(\n          `system_parameter_setting.${\n            this.templateEditForm.nodeType === 'folder'\n              ? 'edit_classification'\n              : 'edit_template'\n          }`\n        )\n        this.originName = this.templateEditForm.name\n      } else {\n        this.fileList = []\n        this.dialogTitle = this.$t('panel.add_app_category')\n        this.templateEditForm = {\n          name: '',\n          nodeType: 'folder',\n          templateType: this.currentTemplateType,\n          icon: '',\n          level: 0,\n          pid: 0\n        }\n      }\n      this.dialogTitleLabel = this.$t(\n        `system_parameter_setting.${\n          this.templateEditForm.nodeType === 'folder'\n            ? 'classification_name'\n            : 'template_name'\n        }`\n      )\n      this.editTemplate = true\n    },\n    templateEdit(templateInfo) {\n      this.showTemplateEditDialog('edit', templateInfo)\n    },\n    saveTemplateEdit(templateEditForm) {\n      this.$refs['templateEditForm'].validate((valid) => {\n        if (valid) {\n          const method = templateEditForm.id ? update : save\n          method(templateEditForm).then((response) => {\n            this.close()\n            this.openMessageSuccess(\n              `system_parameter_setting.${\n                this.templateEditForm.id\n                  ? 'edit_success'\n                  : 'added_successfully'\n              }`\n            )\n            this.getTree()\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    close() {\n      this.$refs['templateEditForm'].resetFields()\n      this.editTemplate = false\n      this.handleRemove()\n    },\n    getTree() {\n      const request = {\n        templateType: this.currentTemplateType,\n        pid: '0'\n      }\n      find(request).then((res) => {\n        this.templateList = res.data\n        this.showFirst()\n      })\n    },\n    showFirst() {\n      // \u5224\u65ad\u662f\u5426\u9ed8\u8ba4\u70b9\u51fb\u7b2c\u4e00\u6761\n      if (this.templateList && this.templateList.length > 0) {\n        let showFirst = true\n        this.templateList.forEach((template) => {\n          if (template.id === this.currentTemplateId) {\n            showFirst = false\n          }\n        })\n        if (showFirst) {\n          this.$nextTick().then(() => {\n            const [obj = {}] = this.templateList\n            this.$refs.templateList.nodeClick(obj)\n          })\n        } else {\n          this.showCurrentTemplate(this.currentTemplateId, this.currentTemplateLabel)\n        }\n      } else {\n        this.currentTemplateShowList = []\n      }\n    },\n    closeEditTemplateDialog() {\n      this.templateDialog.visible = false\n    },\n    templateImport(pid) {\n      this.templateOptType = 'new'\n      this.currentAppTemplateInfo = null\n      this.templateDialog.visible = true\n      this.templateDialog.pid = pid\n    },\n    handleRemove(file, fileList) {\n      this.uploadDisabled = false\n      this.templateEditForm.icon = null\n      this.fileList = []\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    upload(file) {\n      const _this = this\n      uploadFileResult(file.file, (fileUrl) => {\n        _this.templateEditForm.icon = fileUrl\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.de-template {\n  height: 100%;\n  background-color: var(--MainBG, #f5f6f7);\n\n  .tabs-container {\n    height: 100%;\n    background: var(--ContentBG, #ffffff);\n    overflow-x: auto;\n  }\n\n  .flex-tabs {\n    display: flex;\n    background: #f5f6f7;\n  }\n\n  .de-tabs-left {\n    background: #fff;\n    width: 269px;\n    border-right: 1px solid rgba(31, 35, 41, 0.15);\n    padding: 24px;\n  }\n\n  .de-tabs-right {\n    flex: 1;\n    background: #fff;\n    padding: 24px 0 24px 24px;\n    overflow: hidden;\n\n    .template-box {\n      display: flex;\n      flex-wrap: wrap;\n      overflow-y: auto;\n      box-sizing: border-box;\n      align-content: flex-start;\n      height: calc(100% - 10px);\n      width: 100%;\n      padding-bottom: 24px;\n    }\n\n    .active-template {\n      margin: 4px 0 20px 0;\n      padding-right: 24px;\n      font-family: \"PingFang SC\";\n      font-style: normal;\n      font-weight: 500;\n      font-size: 16px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      color: var(--deTextPrimary, #1f2329);\n    }\n  }\n}\n\n::v-deep .container-wrapper {\n  padding: 0px !important;\n}\n</style>\n"], "filenames": ["core/backend/src/main/java/io/dataease/service/staticResource/StaticResourceService.java", "core/frontend/src/views/background/BackgroundOverall.vue", "core/frontend/src/views/panel/appTemplate/AppTemplateContent.vue"], "buggy_code_start_loc": [26, 113, 89], "buggy_code_end_loc": [70, 114, 90], "fixing_code_start_loc": [27, 113, 89], "fixing_code_end_loc": [76, 114, 90], "type": "CWE-434", "message": "DataEase is an open source data visualization and analysis tool. Prior to version 1.18.11, DataEase has a vulnerability that allows an attacker to to obtain user cookies. The program only uses the `ImageIO.read()` method to determine whether the file is an image file or not. There is no whitelisting restriction on file suffixes. This allows the attacker to synthesize the attack code into an image for uploading and change the file extension to html. The attacker may steal user cookies by accessing links. The vulnerability has been fixed in v1.18.11. There are no known workarounds.", "other": {"cve": {"id": "CVE-2023-40183", "sourceIdentifier": "security-advisories@github.com", "published": "2023-09-21T15:15:10.197", "lastModified": "2023-09-26T14:59:41.697", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "DataEase is an open source data visualization and analysis tool. Prior to version 1.18.11, DataEase has a vulnerability that allows an attacker to to obtain user cookies. The program only uses the `ImageIO.read()` method to determine whether the file is an image file or not. There is no whitelisting restriction on file suffixes. This allows the attacker to synthesize the attack code into an image for uploading and change the file extension to html. The attacker may steal user cookies by accessing links. The vulnerability has been fixed in v1.18.11. There are no known workarounds."}, {"lang": "es", "value": "DataEase es una herramienta de an\u00e1lisis y visualizaci\u00f3n de datos de c\u00f3digo abierto. Antes de la versi\u00f3n 1.18.11, DataEase ten\u00eda una vulnerabilidad que permit\u00eda a un atacante obtener cookies de usuario. El programa s\u00f3lo utiliza el m\u00e9todo `ImageIO.read()` para determinar si el archivo es un archivo de imagen o no. No existe ninguna restricci\u00f3n de inclusi\u00f3n en la lista blanca de sufijos de archivos. Esto permite al atacante sintetizar el c\u00f3digo de ataque en una imagen para cargarla y cambiar la extensi\u00f3n del archivo a html. El atacante puede robar las cookies del usuario accediendo a enlaces. La vulnerabilidad se ha solucionado en v1.18.11. No se conocen workarounds."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-434"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dataease:dataease:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.18.11", "matchCriteriaId": "663C4AF0-7E54-43AE-9B19-031662BCEA62"}]}]}], "references": [{"url": "https://github.com/dataease/dataease/commit/826513053146721a2b3e09a9c9d3ea41f8f10569", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/dataease/dataease/releases/tag/v1.18.11", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://github.com/dataease/dataease/security/advisories/GHSA-w2r4-2r4w-fjxv", "source": "security-advisories@github.com", "tags": ["Exploit"]}]}, "github_commit_url": "https://github.com/dataease/dataease/commit/826513053146721a2b3e09a9c9d3ea41f8f10569"}}