{"buggy_code": ["<?php\n\n/**\n * AJAX: handling of Ajax configuration calls.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Anatoliy Belsky <anatoliy.belsky@mayflower.de>\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2009-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2009-04-01\n */\n\nuse phpMyFAQ\\Database;\nuse phpMyFAQ\\Entity\\MetaEntity as MetaEntity;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Instance;\nuse phpMyFAQ\\Instance\\Client;\nuse phpMyFAQ\\Instance\\Setup;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\Meta;\nuse phpMyFAQ\\Stopwords;\nuse phpMyFAQ\\User;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$ajaxAction = Filter::filterInput(INPUT_GET, 'ajaxaction', FILTER_UNSAFE_RAW);\n$instanceId = Filter::filterInput(INPUT_GET, 'instanceId', FILTER_VALIDATE_INT);\n$stopwordId = Filter::filterInput(INPUT_GET, 'stopword_id', FILTER_VALIDATE_INT);\n$stopword = Filter::filterInput(INPUT_GET, 'stopword', FILTER_UNSAFE_RAW);\n$stopwordsLang = Filter::filterInput(INPUT_GET, 'stopwords_lang', FILTER_UNSAFE_RAW);\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\n\n$http = new HttpHelper();\n$stopwords = new Stopwords($faqConfig);\n\nswitch ($ajaxAction) {\n    case 'add_instance':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        $url = Filter::filterInput(INPUT_GET, 'url', FILTER_UNSAFE_RAW);\n        $instance = Filter::filterInput(INPUT_GET, 'instance', FILTER_UNSAFE_RAW);\n        $comment = Filter::filterInput(INPUT_GET, 'comment', FILTER_UNSAFE_RAW);\n        $email = Filter::filterInput(INPUT_GET, 'email', FILTER_VALIDATE_EMAIL);\n        $admin = Filter::filterInput(INPUT_GET, 'admin', FILTER_UNSAFE_RAW);\n        $password = Filter::filterInput(INPUT_GET, 'password', FILTER_UNSAFE_RAW);\n\n        if (empty($url) || empty($instance) || empty($comment) || empty($email) || empty($admin) || empty($password)) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders(['error' => 'Cannot create instance.']);\n            exit(1);\n        }\n\n        $data = [\n            'url' => 'https://' . $url . '.' . $_SERVER['SERVER_NAME'],\n            'instance' => $instance,\n            'comment' => $comment,\n        ];\n\n        $faqInstance = new Instance($faqConfig);\n        $instanceId = $faqInstance->addInstance($data);\n\n        $faqInstanceClient = new Client($faqConfig);\n        $faqInstanceClient->createClient($faqInstance);\n\n        $urlParts = parse_url($data['url']);\n        $hostname = $urlParts['host'];\n\n        if ($faqInstanceClient->createClientFolder($hostname)) {\n            $clientDir = PMF_ROOT_DIR . '/multisite/' . $hostname;\n            $clientSetup = new Setup();\n            $clientSetup->setRootDir($clientDir);\n\n            try {\n                $faqInstanceClient->copyConstantsFile($clientDir . '/constants.php');\n            } catch (\\phpMyFAQ\\Core\\Exception $e) {\n            }\n\n            $dbSetup = [\n                'dbServer' => $DB['server'],\n                'dbPort' => $DB['port'],\n                'dbUser' => $DB['user'],\n                'dbPassword' => $DB['password'],\n                'dbDatabaseName' => $DB['db'],\n                'dbPrefix' => substr($hostname, 0, strpos($hostname, '.')),\n                'dbType' => $DB['type'],\n                'dbPort' => $DB['port']\n            ];\n            $clientSetup->createDatabaseFile($dbSetup, '');\n\n            $faqInstanceClient->setClientUrl('https://' . $hostname);\n            $faqInstanceClient->createClientTables($dbSetup['dbPrefix']);\n\n            Database::setTablePrefix($dbSetup['dbPrefix']);\n\n            // add admin account and rights\n            $instanceAdmin = new User($faqConfig);\n            $instanceAdmin->createUser($admin, $password, '', 1);\n            $instanceAdmin->setStatus('protected');\n            $instanceAdminData = [\n                'display_name' => '',\n                'email' => $email,\n            ];\n            $instanceAdmin->setUserData($instanceAdminData);\n\n            // Add anonymous user account\n            $clientSetup->createAnonymousUser($faqConfig);\n\n            Database::setTablePrefix($DB['prefix']);\n        } else {\n            $faqInstance->removeInstance($instanceId);\n            $http->setStatus(400);\n            $payload = ['error' => 'Cannot create instance.'];\n        }\n        if (0 !== $instanceId) {\n            $http->setStatus(200);\n            $payload = ['added' => $instanceId, 'url' => $data['url']];\n        } else {\n            $http->setStatus(400);\n            $payload = ['error' => $instanceId];\n        }\n        $http->sendJsonWithHeaders($payload);\n        break;\n\n    case 'delete_instance':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        if (null !== $instanceId) {\n            $client = new Client($faqConfig);\n            $clientData = $client->getInstanceById($instanceId);\n            if (\n                1 !== $instanceId &&\n                $client->deleteClientFolder($clientData->url) &&\n                $client->removeInstance($instanceId)\n            ) {\n                $http->setStatus(200);\n                $payload = ['deleted' => $instanceId];\n            } else {\n                $http->setStatus(400);\n                $payload = ['error' => $instanceId];\n            }\n            $http->sendJsonWithHeaders($payload);\n        }\n        break;\n\n    case 'load_stop_words_by_lang':\n        if (Language::isASupportedLanguage($stopwordsLang)) {\n            $stopwordsList = $stopwords->getByLang($stopwordsLang);\n\n            $payload = $stopwordsList;\n            $http->sendJsonWithHeaders($payload);\n        }\n        break;\n\n    case 'delete_stop_word':\n        if (null != $stopwordId && Language::isASupportedLanguage($stopwordsLang)) {\n            $stopwords->setLanguage($stopwordsLang);\n            $stopwords->remove((int)$stopwordId);\n        }\n        break;\n\n    case 'save_stop_word':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        if (null != $stopword && Language::isASupportedLanguage($stopwordsLang)) {\n            $stopwords->setLanguage($stopwordsLang);\n\n            if (null !== $stopwordId && -1 < $stopwordId) {\n                echo $stopwords->update((int)$stopwordId, $stopword);\n            } elseif (!$stopwords->match($stopword)) {\n                echo $stopwords->add($stopword);\n            }\n        }\n        break;\n\n    case 'add_meta':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        $meta = new Meta($faqConfig);\n        $entity = new MetaEntity();\n\n        $entity\n            ->setPageId(Filter::filterInput(INPUT_GET, 'page_id', FILTER_UNSAFE_RAW))\n            ->setType(Filter::filterInput(INPUT_GET, 'type', FILTER_UNSAFE_RAW))\n            ->setContent(Filter::filterInput(INPUT_GET, 'content', FILTER_SANITIZE_SPECIAL_CHARS));\n\n        $metaId = $meta->add($entity);\n\n        if (0 !== $metaId) {\n            $payload = ['added' => $metaId];\n        } else {\n            $payload = ['error' => $metaId];\n        }\n        $http->sendJsonWithHeaders($payload);\n        break;\n\n    case 'delete_meta':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        $meta = new Meta($faqConfig);\n        $metaId = Filter::filterInput(INPUT_GET, 'meta_id', FILTER_UNSAFE_RAW);\n\n        if ($meta->delete((int)$metaId)) {\n            $payload = ['deleted' => $metaId];\n        } else {\n            $payload = ['error' => $metaId];\n        }\n\n        $http->sendJsonWithHeaders($payload);\n        break;\n}\n", "<?php\n\n/**\n * The meta data administration frontend.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @category phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2018-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2018-08-10\n */\n\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Meta;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n?>\n\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">\n      <i aria-hidden=\"true\" class=\"fa fa-code\"></i>\n      <?= $PMF_LANG['ad_menu_meta'] ?>\n    </h1>\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\n        <div class=\"btn-group mr-2\">\n            <button class=\"btn btn-sm btn-success\" data-toggle=\"modal\" data-target=\"#addMetaModal\">\n                <?= $PMF_LANG['ad_meta_add'] ?>\n            </button>\n        </div>\n    </div>\n</div>\n\n<?php\n\nif (!$user->perm->hasPermission($user->getUserId(), 'editconfig')) {\n    echo $PMF_LANG['err_NotAuth'];\n}\n\n$meta = new Meta($faqConfig);\n$metaId = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n$metaData = $meta->getById((int)$metaId);\n?>\n\n<form action=\"?action=meta.update\" method=\"post\" accept-charset=\"utf-8\">\n  <input type=\"hidden\" name=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n  <input type=\"hidden\" name=\"meta_id\" value=\"<?= $metaData->getId() ?>\">\n\n  <div class=\"form-group row\">\n    <label for=\"page_id\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_page_id'] ?></label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" name=\"page_id\" value=\"<?= $metaData->getPageId() ?>\" required>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label for=\"type\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_type'] ?></label>\n    <div class=\"col-sm-10\">\n      <select class=\"form-control\" name=\"type\" required>\n        <option value=\"text\" <?= $metaData->getType() === 'text' ? 'selected' : '' ?>>Text</option>\n        <option value=\"html\" <?= $metaData->getType() === 'html' ? 'selected' : '' ?>>HTML</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label for=\"content\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_content'] ?></label>\n    <div class=\"col-sm-10\">\n      <textarea class=\"form-control\" name=\"content\" rows=\"5\" required><?= $metaData->getContent() ?></textarea>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <div class=\"col-sm-12 text-right\">\n      <a class=\"btn btn-primary\" href=\"?action=meta\">\n        <?= $PMF_LANG['msgCancel'] ?>\n      </a>\n      <button class=\"btn btn-primary\" type=\"submit\">\n          <?= $PMF_LANG['ad_passwd_change']?>\n      </button>\n    </div>\n  </div>\n</form>\n", "<?php\n\n/**\n * The meta data administration frontend.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @category phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2018-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2018-08-10\n */\n\nuse phpMyFAQ\\Entity\\MetaEntity;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Meta;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$defaultMetaAction = 'list';\n$metaAction = Filter::filterInput(INPUT_GET, 'meta_action', FILTER_UNSAFE_RAW, $defaultMetaAction);\n$csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n$metaId = Filter::filterInput(INPUT_POST, 'meta_id', FILTER_VALIDATE_INT);\n?>\n\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <h1 class=\"h2\">\n    <i aria-hidden=\"true\" class=\"fa fa-code\"></i>\n      <?= $PMF_LANG['ad_menu_meta'] ?>\n  </h1>\n  <div class=\"btn-toolbar mb-2 mb-md-0\">\n    <div class=\"btn-group mr-2\">\n      <button class=\"btn btn-sm btn-success\" data-toggle=\"modal\" data-target=\"#addMetaModal\">\n        <i aria-hidden=\"true\" class=\"fa fa-plus\"></i>\n          <?= $PMF_LANG['ad_meta_add'] ?>\n      </button>\n    </div>\n  </div>\n</div>\n\n<?php\n\nif (!$user->perm->hasPermission($user->getUserId(), 'editconfig')) {\n    echo $PMF_LANG['err_NotAuth'];\n}\n\n$meta = new Meta($faqConfig);\n\n// Update meta data\nif ('meta.update' === $action && is_integer($metaId)) {\n    if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n        echo $PMF_LANG['err_NotAuth'];\n    } else {\n        $entity = new MetaEntity();\n        $entity\n            ->setPageId(Filter::filterInput(INPUT_POST, 'page_id', FILTER_UNSAFE_RAW))\n            ->setType(Filter::filterInput(INPUT_POST, 'type', FILTER_UNSAFE_RAW))\n            ->setContent(Filter::filterInput(INPUT_POST, 'content', FILTER_SANITIZE_SPECIAL_CHARS));\n\n        if ($meta->update($metaId, $entity)) {\n            printf(\n                '<p class=\"alert alert-success\">%s%s</p>',\n                '<a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>',\n                $PMF_LANG['ad_config_saved']\n            );\n        } else {\n            printf(\n                '<p class=\"alert alert-danger\">%s%s<br/>%s</p>',\n                '<a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>',\n                $PMF_LANG['ad_entryins_fail'],\n                $faqConfig->getDb()->error()\n            );\n        }\n    }\n}\n\n$metaData = $meta->getAll();\n?>\n<table class=\"table table-striped\">\n  <thead class=\"thead-dark\">\n  <tr>\n    <th>#</th>\n    <th><?= $PMF_LANG['ad_meta_page_id'] ?></th>\n    <th><?= $PMF_LANG['ad_meta_type'] ?></th>\n    <th colspan=\"2\"><?= $PMF_LANG['ad_meta_content'] ?></th>\n  </tr>\n  </thead>\n  <tbody>\n  <?php foreach ($metaData as $data) : ?>\n    <tr id=\"row-meta-<?= $data->getId() ?>\">\n      <td><?= $data->getId() ?></td>\n      <td><?= $data->getPageId() ?></td>\n      <td><?= $data->getType() ?></td>\n      <td><?= $data->getContent() ?></td>\n      <td class=\"text-right\">\n        <a href=\"?action=meta.edit&id=<?= $data->getId() ?>\" class=\"btn btn-success\">\n          <i aria-hidden=\"true\" class=\"fa fa-pencil\"></i>\n        </a>\n        <a href=\"#\" id=\"delete-meta-<?= $data->getId() ?>\" class=\"btn btn-danger pmf-meta-delete\"\n           data-csrf=\"<?= $user->getCsrfTokenFromSession() ?>\">\n          <i aria-hidden=\"true\" class=\"fa fa-trash\"></i>\n        </a>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#codeModal\"\n                data-code-snippet=\"<?= $data->getContent() ?>\">\n          <i aria-hidden=\"true\" class=\"fa fa-code\"></i>\n        </button>\n      </td>\n    </tr>\n  <?php endforeach; ?>\n  </tbody>\n</table>\n\n<!-- Modal to add new meta data -->\n<div class=\"modal fade\" id=\"addMetaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addMetaModalLabel\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addMetaModalLabel\"><?= $PMF_LANG['ad_meta_add'] ?></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"<?= $PMF_LANG['ad_att_close'] ?>\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form action=\"#\" method=\"post\" accept-charset=\"utf-8\">\n          <input type=\"hidden\" name=\"csrf\" id=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n\n          <div class=\"form-group row\">\n            <label for=\"page_id\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_page_id'] ?></label>\n            <div class=\"col-sm-10\">\n              <input type=\"text\" class=\"form-control\" id=\"page_id\" required>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"type\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_type'] ?></label>\n            <div class=\"col-sm-10\">\n              <select class=\"form-control\" id=\"type\" required>\n                <option value=\"text\">Text</option>\n                <option value=\"html\">HTML</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"meta-content\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_content'] ?></label>\n            <div class=\"col-sm-10\">\n              <textarea class=\"form-control\" id=\"meta-content\" rows=\"5\" required></textarea>\n            </div>\n          </div>\n\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary pmf-meta-add\"><?= $PMF_LANG['msgSave'] ?></button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal to copy meta data code snippet -->\n<div class=\"modal fade\" id=\"codeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"codeModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"codeModalLabel\"><?= $PMF_LANG['ad_meta_copy_snippet'] ?></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"<?= $PMF_LANG['ad_att_close'] ?>\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label class=\"sr-only\" for=\"copy-code-snippet\"><?= $PMF_LANG['ad_meta_copy_snippet'] ?></label>\n        <textarea class=\"form-control\" id=\"copy-code-snippet\"></textarea>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"><?= $PMF_LANG['ad_att_close'] ?></button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script src=\"assets/js/meta.js\"></script>\n"], "fixing_code": ["<?php\n\n/**\n * AJAX: handling of Ajax configuration calls.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @package phpMyFAQ\n * @author Anatoliy Belsky <anatoliy.belsky@mayflower.de>\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2009-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2009-04-01\n */\n\nuse phpMyFAQ\\Database;\nuse phpMyFAQ\\Entity\\MetaEntity as MetaEntity;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Helper\\HttpHelper;\nuse phpMyFAQ\\Instance;\nuse phpMyFAQ\\Instance\\Client;\nuse phpMyFAQ\\Instance\\Setup;\nuse phpMyFAQ\\Language;\nuse phpMyFAQ\\Meta;\nuse phpMyFAQ\\Stopwords;\nuse phpMyFAQ\\User;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$ajaxAction = Filter::filterInput(INPUT_GET, 'ajaxaction', FILTER_UNSAFE_RAW);\n$instanceId = Filter::filterInput(INPUT_GET, 'instanceId', FILTER_VALIDATE_INT);\n$stopwordId = Filter::filterInput(INPUT_GET, 'stopword_id', FILTER_VALIDATE_INT);\n$stopword = Filter::filterInput(INPUT_GET, 'stopword', FILTER_UNSAFE_RAW);\n$stopwordsLang = Filter::filterInput(INPUT_GET, 'stopwords_lang', FILTER_UNSAFE_RAW);\n$csrfToken = Filter::filterInput(INPUT_GET, 'csrf', FILTER_UNSAFE_RAW);\n\n$http = new HttpHelper();\n$stopwords = new Stopwords($faqConfig);\n\nswitch ($ajaxAction) {\n    case 'add_instance':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        $url = Filter::filterInput(INPUT_GET, 'url', FILTER_UNSAFE_RAW);\n        $instance = Filter::filterInput(INPUT_GET, 'instance', FILTER_UNSAFE_RAW);\n        $comment = Filter::filterInput(INPUT_GET, 'comment', FILTER_UNSAFE_RAW);\n        $email = Filter::filterInput(INPUT_GET, 'email', FILTER_VALIDATE_EMAIL);\n        $admin = Filter::filterInput(INPUT_GET, 'admin', FILTER_UNSAFE_RAW);\n        $password = Filter::filterInput(INPUT_GET, 'password', FILTER_UNSAFE_RAW);\n\n        if (empty($url) || empty($instance) || empty($comment) || empty($email) || empty($admin) || empty($password)) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders(['error' => 'Cannot create instance.']);\n            exit(1);\n        }\n\n        $data = [\n            'url' => 'https://' . $url . '.' . $_SERVER['SERVER_NAME'],\n            'instance' => $instance,\n            'comment' => $comment,\n        ];\n\n        $faqInstance = new Instance($faqConfig);\n        $instanceId = $faqInstance->addInstance($data);\n\n        $faqInstanceClient = new Client($faqConfig);\n        $faqInstanceClient->createClient($faqInstance);\n\n        $urlParts = parse_url($data['url']);\n        $hostname = $urlParts['host'];\n\n        if ($faqInstanceClient->createClientFolder($hostname)) {\n            $clientDir = PMF_ROOT_DIR . '/multisite/' . $hostname;\n            $clientSetup = new Setup();\n            $clientSetup->setRootDir($clientDir);\n\n            try {\n                $faqInstanceClient->copyConstantsFile($clientDir . '/constants.php');\n            } catch (\\phpMyFAQ\\Core\\Exception $e) {\n            }\n\n            $dbSetup = [\n                'dbServer' => $DB['server'],\n                'dbPort' => $DB['port'],\n                'dbUser' => $DB['user'],\n                'dbPassword' => $DB['password'],\n                'dbDatabaseName' => $DB['db'],\n                'dbPrefix' => substr($hostname, 0, strpos($hostname, '.')),\n                'dbType' => $DB['type'],\n                'dbPort' => $DB['port']\n            ];\n            $clientSetup->createDatabaseFile($dbSetup, '');\n\n            $faqInstanceClient->setClientUrl('https://' . $hostname);\n            $faqInstanceClient->createClientTables($dbSetup['dbPrefix']);\n\n            Database::setTablePrefix($dbSetup['dbPrefix']);\n\n            // add admin account and rights\n            $instanceAdmin = new User($faqConfig);\n            $instanceAdmin->createUser($admin, $password, '', 1);\n            $instanceAdmin->setStatus('protected');\n            $instanceAdminData = [\n                'display_name' => '',\n                'email' => $email,\n            ];\n            $instanceAdmin->setUserData($instanceAdminData);\n\n            // Add anonymous user account\n            $clientSetup->createAnonymousUser($faqConfig);\n\n            Database::setTablePrefix($DB['prefix']);\n        } else {\n            $faqInstance->removeInstance($instanceId);\n            $http->setStatus(400);\n            $payload = ['error' => 'Cannot create instance.'];\n        }\n        if (0 !== $instanceId) {\n            $http->setStatus(200);\n            $payload = ['added' => $instanceId, 'url' => $data['url']];\n        } else {\n            $http->setStatus(400);\n            $payload = ['error' => $instanceId];\n        }\n        $http->sendJsonWithHeaders($payload);\n        break;\n\n    case 'delete_instance':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->setStatus(400);\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        if (null !== $instanceId) {\n            $client = new Client($faqConfig);\n            $clientData = $client->getInstanceById($instanceId);\n            if (\n                1 !== $instanceId &&\n                $client->deleteClientFolder($clientData->url) &&\n                $client->removeInstance($instanceId)\n            ) {\n                $http->setStatus(200);\n                $payload = ['deleted' => $instanceId];\n            } else {\n                $http->setStatus(400);\n                $payload = ['error' => $instanceId];\n            }\n            $http->sendJsonWithHeaders($payload);\n        }\n        break;\n\n    case 'load_stop_words_by_lang':\n        if (Language::isASupportedLanguage($stopwordsLang)) {\n            $stopwordsList = $stopwords->getByLang($stopwordsLang);\n\n            $payload = $stopwordsList;\n            $http->sendJsonWithHeaders($payload);\n        }\n        break;\n\n    case 'delete_stop_word':\n        if (null != $stopwordId && Language::isASupportedLanguage($stopwordsLang)) {\n            $stopwords->setLanguage($stopwordsLang);\n            $stopwords->remove((int)$stopwordId);\n        }\n        break;\n\n    case 'save_stop_word':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        if (null != $stopword && Language::isASupportedLanguage($stopwordsLang)) {\n            $stopwords->setLanguage($stopwordsLang);\n\n            if (null !== $stopwordId && -1 < $stopwordId) {\n                echo $stopwords->update((int)$stopwordId, $stopword);\n            } elseif (!$stopwords->match($stopword)) {\n                echo $stopwords->add($stopword);\n            }\n        }\n        break;\n\n    case 'add_meta':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        $meta = new Meta($faqConfig);\n        $entity = new MetaEntity();\n\n        $entity\n            ->setPageId(Filter::filterInput(INPUT_GET, 'page_id', FILTER_SANITIZE_SPECIAL_CHARS))\n            ->setType(Filter::filterInput(INPUT_GET, 'type', FILTER_SANITIZE_SPECIAL_CHARS))\n            ->setContent(Filter::filterInput(INPUT_GET, 'content', FILTER_SANITIZE_SPECIAL_CHARS));\n\n        $metaId = $meta->add($entity);\n\n        if (0 !== $metaId) {\n            $payload = ['added' => $metaId];\n        } else {\n            $payload = ['error' => $metaId];\n        }\n        $http->sendJsonWithHeaders($payload);\n        break;\n\n    case 'delete_meta':\n        if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n            $http->sendJsonWithHeaders(['error' => $PMF_LANG['err_NotAuth']]);\n            exit(1);\n        }\n\n        $meta = new Meta($faqConfig);\n        $metaId = Filter::filterInput(INPUT_GET, 'meta_id', FILTER_UNSAFE_RAW);\n\n        if ($meta->delete((int)$metaId)) {\n            $payload = ['deleted' => $metaId];\n        } else {\n            $payload = ['error' => $metaId];\n        }\n\n        $http->sendJsonWithHeaders($payload);\n        break;\n}\n", "<?php\n\n/**\n * The meta data administration frontend.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @category phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2018-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2018-08-10\n */\n\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Meta;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n?>\n\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">\n      <i aria-hidden=\"true\" class=\"fa fa-code\"></i>\n      <?= $PMF_LANG['ad_menu_meta'] ?>\n    </h1>\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\n        <div class=\"btn-group mr-2\">\n            <button class=\"btn btn-sm btn-success\" data-toggle=\"modal\" data-target=\"#addMetaModal\">\n                <?= $PMF_LANG['ad_meta_add'] ?>\n            </button>\n        </div>\n    </div>\n</div>\n\n<?php\n\nif (!$user->perm->hasPermission($user->getUserId(), 'editconfig')) {\n    echo $PMF_LANG['err_NotAuth'];\n}\n\n$meta = new Meta($faqConfig);\n$metaId = Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);\n$metaData = $meta->getById((int)$metaId);\n?>\n\n<form action=\"?action=meta.update\" method=\"post\" accept-charset=\"utf-8\">\n  <input type=\"hidden\" name=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n  <input type=\"hidden\" name=\"meta_id\" value=\"<?= $metaData->getId() ?>\">\n\n  <div class=\"form-group row\">\n    <label for=\"page_id\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_page_id'] ?></label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" name=\"page_id\" maxlength=\"48\" value=\"<?= $metaData->getPageId() ?>\" required>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label for=\"type\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_type'] ?></label>\n    <div class=\"col-sm-10\">\n      <select class=\"form-control\" name=\"type\" required>\n        <option value=\"text\" <?= $metaData->getType() === 'text' ? 'selected' : '' ?>>Text</option>\n        <option value=\"html\" <?= $metaData->getType() === 'html' ? 'selected' : '' ?>>HTML</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label for=\"content\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_content'] ?></label>\n    <div class=\"col-sm-10\">\n      <textarea class=\"form-control\" name=\"content\" rows=\"5\" required><?= $metaData->getContent() ?></textarea>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <div class=\"col-sm-12 text-right\">\n      <a class=\"btn btn-primary\" href=\"?action=meta\">\n        <?= $PMF_LANG['msgCancel'] ?>\n      </a>\n      <button class=\"btn btn-primary\" type=\"submit\">\n          <?= $PMF_LANG['ad_passwd_change']?>\n      </button>\n    </div>\n  </div>\n</form>\n", "<?php\n\n/**\n * The meta data administration frontend.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public License,\n * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n * obtain one at http://mozilla.org/MPL/2.0/.\n *\n * @category phpMyFAQ\n * @author Thorsten Rinne <thorsten@phpmyfaq.de>\n * @copyright 2018-2022 phpMyFAQ Team\n * @license http://www.mozilla.org/MPL/2.0/ Mozilla Public License Version 2.0\n * @link https://www.phpmyfaq.de\n * @since 2018-08-10\n */\n\nuse phpMyFAQ\\Entity\\MetaEntity;\nuse phpMyFAQ\\Filter;\nuse phpMyFAQ\\Meta;\n\nif (!defined('IS_VALID_PHPMYFAQ')) {\n    http_response_code(400);\n    exit();\n}\n\n$defaultMetaAction = 'list';\n$metaAction = Filter::filterInput(INPUT_GET, 'meta_action', FILTER_UNSAFE_RAW, $defaultMetaAction);\n$csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);\n$metaId = Filter::filterInput(INPUT_POST, 'meta_id', FILTER_VALIDATE_INT);\n?>\n\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n  <h1 class=\"h2\">\n    <i aria-hidden=\"true\" class=\"fa fa-code\"></i>\n      <?= $PMF_LANG['ad_menu_meta'] ?>\n  </h1>\n  <div class=\"btn-toolbar mb-2 mb-md-0\">\n    <div class=\"btn-group mr-2\">\n      <button class=\"btn btn-sm btn-success\" data-toggle=\"modal\" data-target=\"#addMetaModal\">\n        <i aria-hidden=\"true\" class=\"fa fa-plus\"></i>\n          <?= $PMF_LANG['ad_meta_add'] ?>\n      </button>\n    </div>\n  </div>\n</div>\n\n<?php\n\nif (!$user->perm->hasPermission($user->getUserId(), 'editconfig')) {\n    echo $PMF_LANG['err_NotAuth'];\n}\n\n$meta = new Meta($faqConfig);\n\n// Update meta data\nif ('meta.update' === $action && is_integer($metaId)) {\n    if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {\n        echo $PMF_LANG['err_NotAuth'];\n    } else {\n        $entity = new MetaEntity();\n        $entity\n            ->setPageId(Filter::filterInput(INPUT_POST, 'page_id', FILTER_UNSAFE_RAW))\n            ->setType(Filter::filterInput(INPUT_POST, 'type', FILTER_UNSAFE_RAW))\n            ->setContent(Filter::filterInput(INPUT_POST, 'content', FILTER_SANITIZE_SPECIAL_CHARS));\n\n        if ($meta->update($metaId, $entity)) {\n            printf(\n                '<p class=\"alert alert-success\">%s%s</p>',\n                '<a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>',\n                $PMF_LANG['ad_config_saved']\n            );\n        } else {\n            printf(\n                '<p class=\"alert alert-danger\">%s%s<br/>%s</p>',\n                '<a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>',\n                $PMF_LANG['ad_entryins_fail'],\n                $faqConfig->getDb()->error()\n            );\n        }\n    }\n}\n\n$metaData = $meta->getAll();\n?>\n<table class=\"table table-striped\">\n  <thead class=\"thead-dark\">\n  <tr>\n    <th>#</th>\n    <th><?= $PMF_LANG['ad_meta_page_id'] ?></th>\n    <th><?= $PMF_LANG['ad_meta_type'] ?></th>\n    <th colspan=\"2\"><?= $PMF_LANG['ad_meta_content'] ?></th>\n  </tr>\n  </thead>\n  <tbody>\n  <?php foreach ($metaData as $data) : ?>\n    <tr id=\"row-meta-<?= $data->getId() ?>\">\n      <td><?= $data->getId() ?></td>\n      <td><?= $data->getPageId() ?></td>\n      <td><?= $data->getType() ?></td>\n      <td><?= $data->getContent() ?></td>\n      <td class=\"text-right\">\n        <a href=\"?action=meta.edit&id=<?= $data->getId() ?>\" class=\"btn btn-success\">\n          <i aria-hidden=\"true\" class=\"fa fa-pencil\"></i>\n        </a>\n        <a href=\"#\" id=\"delete-meta-<?= $data->getId() ?>\" class=\"btn btn-danger pmf-meta-delete\"\n           data-csrf=\"<?= $user->getCsrfTokenFromSession() ?>\">\n          <i aria-hidden=\"true\" class=\"fa fa-trash\"></i>\n        </a>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#codeModal\"\n                data-code-snippet=\"<?= $data->getContent() ?>\">\n          <i aria-hidden=\"true\" class=\"fa fa-code\"></i>\n        </button>\n      </td>\n    </tr>\n  <?php endforeach; ?>\n  </tbody>\n</table>\n\n<!-- Modal to add new meta data -->\n<div class=\"modal fade\" id=\"addMetaModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addMetaModalLabel\"\n     aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addMetaModalLabel\"><?= $PMF_LANG['ad_meta_add'] ?></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"<?= $PMF_LANG['ad_att_close'] ?>\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form action=\"#\" method=\"post\" accept-charset=\"utf-8\">\n          <input type=\"hidden\" name=\"csrf\" id=\"csrf\" value=\"<?= $user->getCsrfTokenFromSession() ?>\">\n\n          <div class=\"form-group row\">\n            <label for=\"page_id\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_page_id'] ?></label>\n            <div class=\"col-sm-10\">\n              <input type=\"text\" class=\"form-control\" id=\"page_id\" maxlength=\"48\" required>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"type\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_type'] ?></label>\n            <div class=\"col-sm-10\">\n              <select class=\"form-control\" id=\"type\" required>\n                <option value=\"text\">Text</option>\n                <option value=\"html\">HTML</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"meta-content\" class=\"col-sm-2 col-form-label\"><?= $PMF_LANG['ad_meta_content'] ?></label>\n            <div class=\"col-sm-10\">\n              <textarea class=\"form-control\" id=\"meta-content\" rows=\"5\" required></textarea>\n            </div>\n          </div>\n\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary pmf-meta-add\"><?= $PMF_LANG['msgSave'] ?></button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal to copy meta data code snippet -->\n<div class=\"modal fade\" id=\"codeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"codeModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"codeModalLabel\"><?= $PMF_LANG['ad_meta_copy_snippet'] ?></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"<?= $PMF_LANG['ad_att_close'] ?>\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label class=\"sr-only\" for=\"copy-code-snippet\"><?= $PMF_LANG['ad_meta_copy_snippet'] ?></label>\n        <textarea class=\"form-control\" id=\"copy-code-snippet\"></textarea>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"><?= $PMF_LANG['ad_att_close'] ?></button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script src=\"assets/js/meta.js\"></script>\n"], "filenames": ["phpmyfaq/admin/ajax.config.php", "phpmyfaq/admin/meta.edit.php", "phpmyfaq/admin/meta.php"], "buggy_code_start_loc": [206, 59, 138], "buggy_code_end_loc": [208, 60, 139], "fixing_code_start_loc": [206, 59, 138], "fixing_code_end_loc": [208, 60, 139], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.1.8.", "other": {"cve": {"id": "CVE-2022-3765", "sourceIdentifier": "security@huntr.dev", "published": "2022-10-31T11:15:10.133", "lastModified": "2022-11-01T17:37:54.217", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.1.8."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 8.2, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.2}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpmyfaq:phpmyfaq:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.8", "matchCriteriaId": "268E620F-3F05-4A1E-A49B-046B7CC8796C"}]}]}], "references": [{"url": "https://github.com/thorsten/phpmyfaq/commit/372428d02a08e90b3a253ba5c506cda84581a5af", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/613143a1-8e51-449a-b214-12458308835d", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/thorsten/phpmyfaq/commit/372428d02a08e90b3a253ba5c506cda84581a5af"}}