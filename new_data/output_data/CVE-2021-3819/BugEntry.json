{"buggy_code": ["<?php\n/**\n * CurrencyController.php\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\ndeclare(strict_types=1);\n\nnamespace FireflyIII\\Http\\Controllers;\n\nuse FireflyIII\\Exceptions\\FireflyException;\nuse FireflyIII\\Http\\Requests\\CurrencyFormRequest;\nuse FireflyIII\\Models\\TransactionCurrency;\nuse FireflyIII\\Repositories\\Currency\\CurrencyRepositoryInterface;\nuse FireflyIII\\Repositories\\User\\UserRepositoryInterface;\nuse FireflyIII\\User;\nuse Illuminate\\Contracts\\View\\Factory;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Pagination\\LengthAwarePaginator;\nuse Illuminate\\Routing\\Redirector;\nuse Illuminate\\View\\View;\nuse Log;\n\n/**\n * Class CurrencyController.\n */\nclass CurrencyController extends Controller\n{\n    protected CurrencyRepositoryInterface $repository;\n    protected UserRepositoryInterface     $userRepository;\n\n    /**\n     * CurrencyController constructor.\n     *\n     * @codeCoverageIgnore\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        $this->middleware(\n            function ($request, $next) {\n                app('view')->share('title', (string)trans('firefly.currencies'));\n                app('view')->share('mainTitleIcon', 'fa-usd');\n                $this->repository     = app(CurrencyRepositoryInterface::class);\n                $this->userRepository = app(UserRepositoryInterface::class);\n\n                return $next($request);\n            }\n        );\n    }\n\n    /**\n     * Create a currency.\n     *\n     * @param Request $request\n     *\n     * @return Factory|RedirectResponse|Redirector|View\n     */\n    public function create(Request $request)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n\n            return redirect(route('currencies.index'));\n        }\n\n        $subTitleIcon = 'fa-plus';\n        $subTitle     = (string)trans('firefly.create_currency');\n\n        // put previous url in session if not redirect from store (not \"create another\").\n        if (true !== session('currencies.create.fromStore')) {\n            $this->rememberPreviousUri('currencies.create.uri');\n        }\n        $request->session()->forget('currencies.create.fromStore');\n\n        Log::channel('audit')->info('Create new currency.');\n\n        return prefixView('currencies.create', compact('subTitleIcon', 'subTitle'));\n    }\n\n    /**\n     * Make currency the default currency.\n     *\n     * @param Request $request\n     *\n     * @return RedirectResponse|Redirector\n     * @throws FireflyException\n     */\n    public function defaultCurrency(Request $request)\n    {\n        $currencyId = (int)$request->get('id');\n        if ($currencyId > 0) {\n            // valid currency?\n            $currency = $this->repository->find($currencyId);\n            if (null !== $currency) {\n                app('preferences')->set('currencyPreference', $currency->code);\n                app('preferences')->mark();\n                Log::channel('audit')->info(sprintf('Make %s the default currency.', $currency->code));\n\n                $this->repository->enable($currency);\n                $request->session()->flash('success', (string)trans('firefly.new_default_currency', ['name' => $currency->name]));\n\n                return redirect(route('currencies.index'));\n            }\n        }\n\n        return redirect(route('currencies.index'));\n    }\n\n    /**\n     * Deletes a currency.\n     *\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return Factory|RedirectResponse|Redirector|View\n     */\n    public function delete(Request $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to visit page to delete currency %s but is not site owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        if ($this->repository->currencyInUse($currency)) {\n            $location = $this->repository->currencyInUseAt($currency);\n            $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n            $request->session()->flash('error', $message);\n            Log::channel('audit')->info(sprintf('Tried to visit page to delete currency %s but currency is in use.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        // put previous url in session\n        $this->rememberPreviousUri('currencies.delete.uri');\n        $subTitle = (string)trans('form.delete_currency', ['name' => $currency->name]);\n        Log::channel('audit')->info(sprintf('Visit page to delete currency %s.', $currency->code));\n\n        return prefixView('currencies.delete', compact('currency', 'subTitle'));\n    }\n\n    /**\n     * Destroys a currency.\n     *\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function destroy(Request $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to delete currency %s but is not site owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        if ($this->repository->currencyInUse($currency)) {\n            $request->session()->flash('error', (string)trans('firefly.cannot_delete_currency', ['name' => e($currency->name)]));\n            Log::channel('audit')->info(sprintf('Tried to delete currency %s but is in use.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        if ($this->repository->isFallbackCurrency($currency)) {\n            $request->session()->flash('error', (string)trans('firefly.cannot_delete_fallback_currency', ['name' => e($currency->name)]));\n            Log::channel('audit')->info(sprintf('Tried to delete currency %s but is FALLBACK.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        Log::channel('audit')->info(sprintf('Deleted currency %s.', $currency->code));\n        $this->repository->destroy($currency);\n\n        $request->session()->flash('success', (string)trans('firefly.deleted_currency', ['name' => $currency->name]));\n\n        return redirect($this->getPreviousUri('currencies.delete.uri'));\n    }\n\n    /**\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     * @throws FireflyException\n     */\n    public function disableCurrency(Request $request, TransactionCurrency $currency)\n    {\n        app('preferences')->mark();\n\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to disable currency %s but is not site owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        if ($this->repository->currencyInUse($currency)) {\n\n            $location = $this->repository->currencyInUseAt($currency);\n            $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n\n            $request->session()->flash('error', $message);\n            Log::channel('audit')->info(sprintf('Tried to disable currency %s but is in use.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        $this->repository->disable($currency);\n        Log::channel('audit')->info(sprintf('Disabled currency %s.', $currency->code));\n        // if no currencies are enabled, enable the first one in the DB (usually the EUR)\n        if (0 === $this->repository->get()->count()) {\n            /** @var TransactionCurrency $first */\n            $first = $this->repository->getAll()->first();\n            if (null === $first) {\n                throw new FireflyException('No currencies found.');\n            }\n            Log::channel('audit')->info(sprintf('Auto-enabled currency %s.', $first->code));\n            $this->repository->enable($first);\n            app('preferences')->set('currencyPreference', $first->code);\n            app('preferences')->mark();\n        }\n\n        if ('EUR' === $currency->code) {\n            session()->flash('warning', (string)trans('firefly.disable_EUR_side_effects'));\n        }\n\n        session()->flash('success', (string)trans('firefly.currency_is_now_disabled', ['name' => $currency->name]));\n\n        return redirect(route('currencies.index'));\n    }\n\n    /**\n     * Edit a currency.\n     *\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return Factory|RedirectResponse|Redirector|View\n     */\n    public function edit(Request $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to edit currency %s but is not owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        $subTitleIcon     = 'fa-pencil';\n        $subTitle         = (string)trans('breadcrumbs.edit_currency', ['name' => $currency->name]);\n        $currency->symbol = htmlentities($currency->symbol);\n\n        // code to handle active-checkboxes\n        $hasOldInput = null !== $request->old('_token');\n        $preFilled   = [\n            'enabled' => $hasOldInput ? (bool)$request->old('enabled') : $currency->enabled,\n        ];\n\n        $request->session()->flash('preFilled', $preFilled);\n        Log::channel('audit')->info('Edit currency.', $currency->toArray());\n\n        // put previous url in session if not redirect from store (not \"return_to_edit\").\n        if (true !== session('currencies.edit.fromUpdate')) {\n            $this->rememberPreviousUri('currencies.edit.uri');\n        }\n        $request->session()->forget('currencies.edit.fromUpdate');\n\n        return prefixView('currencies.edit', compact('currency', 'subTitle', 'subTitleIcon'));\n    }\n\n    /**\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function enableCurrency(TransactionCurrency $currency)\n    {\n        app('preferences')->mark();\n\n        $this->repository->enable($currency);\n        session()->flash('success', (string)trans('firefly.currency_is_now_enabled', ['name' => $currency->name]));\n        Log::channel('audit')->info(sprintf('Enabled currency %s.', $currency->code));\n\n        return redirect(route('currencies.index'));\n    }\n\n    /**\n     * Show overview of currencies.\n     *\n     * @param Request $request\n     *\n     * @return Factory|View\n     * @throws FireflyException\n     */\n    public function index(Request $request)\n    {\n        /** @var User $user */\n        $user       = auth()->user();\n        $page       = 0 === (int)$request->get('page') ? 1 : (int)$request->get('page');\n        $pageSize   = (int)app('preferences')->get('listPageSize', 50)->data;\n        $collection = $this->repository->getAll();\n        $total      = $collection->count();\n        $collection = $collection->slice(($page - 1) * $pageSize, $pageSize);\n        $currencies = new LengthAwarePaginator($collection, $total, $pageSize, $page);\n        $currencies->setPath(route('currencies.index'));\n\n        $defaultCurrency = $this->repository->getCurrencyByPreference(app('preferences')->get('currencyPreference', config('firefly.default_currency', 'EUR')));\n        $isOwner         = true;\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n            $request->session()->flash('info', (string)trans('firefly.ask_site_owner', ['owner' => config('firefly.site_owner')]));\n            $isOwner = false;\n        }\n\n        return prefixView('currencies.index', compact('currencies', 'defaultCurrency', 'isOwner'));\n    }\n\n    /**\n     * Store new currency.\n     *\n     * @param CurrencyFormRequest $request\n     *\n     * @return $this|RedirectResponse|Redirector\n     */\n    public function store(CurrencyFormRequest $request)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        $data = $request->getCurrencyData();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            Log::error('User ' . auth()->user()->id . ' is not admin, but tried to store a currency.');\n            Log::channel('audit')->info('Tried to create (POST) currency without admin rights.', $data);\n\n            return redirect($this->getPreviousUri('currencies.create.uri'));\n\n        }\n\n        $data['enabled'] = true;\n        try {\n            $currency = $this->repository->store($data);\n        } catch (FireflyException $e) {\n            Log::error($e->getMessage());\n            Log::channel('audit')->info('Could not store (POST) currency without admin rights.', $data);\n            $request->session()->flash('error', (string)trans('firefly.could_not_store_currency'));\n            $currency = null;\n        }\n        $redirect = redirect($this->getPreviousUri('currencies.create.uri'));\n\n        if (null !== $currency) {\n            $request->session()->flash('success', (string)trans('firefly.created_currency', ['name' => $currency->name]));\n            Log::channel('audit')->info('Created (POST) currency.', $data);\n            if (1 === (int)$request->get('create_another')) {\n\n                $request->session()->put('currencies.create.fromStore', true);\n\n                $redirect = redirect(route('currencies.create'))->withInput();\n\n            }\n        }\n\n        return $redirect;\n    }\n\n    /**\n     * Updates a currency.\n     *\n     * @param CurrencyFormRequest $request\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function update(CurrencyFormRequest $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        $data = $request->getCurrencyData();\n\n        if (false === $data['enabled'] && $this->repository->currencyInUse($currency)) {\n            $data['enabled'] = true;\n        }\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info('Tried to update (POST) currency without admin rights.', $data);\n\n            return redirect(route('currencies.index'));\n\n        }\n        $currency = $this->repository->update($currency, $data);\n        Log::channel('audit')->info('Updated (POST) currency.', $data);\n        $request->session()->flash('success', (string)trans('firefly.updated_currency', ['name' => $currency->name]));\n        app('preferences')->mark();\n\n        if (1 === (int)$request->get('return_to_edit')) {\n\n            $request->session()->put('currencies.edit.fromUpdate', true);\n\n            return redirect(route('currencies.edit', [$currency->id]));\n\n        }\n\n        return redirect($this->getPreviousUri('currencies.edit.uri'));\n    }\n}\n", "<?php\n/**\n * CreateController.php\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\ndeclare(strict_types=1);\n\nnamespace FireflyIII\\Http\\Controllers\\Transaction;\n\nuse FireflyIII\\Events\\StoredTransactionGroup;\nuse FireflyIII\\Exceptions\\FireflyException;\nuse FireflyIII\\Http\\Controllers\\Controller;\nuse FireflyIII\\Models\\TransactionGroup;\nuse FireflyIII\\Repositories\\Account\\AccountRepositoryInterface;\nuse FireflyIII\\Services\\Internal\\Update\\GroupCloneService;\nuse Illuminate\\Contracts\\View\\Factory;\nuse Illuminate\\Contracts\\View\\View;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Routing\\Redirector;\n\n/**\n * Class CreateController\n */\nclass CreateController extends Controller\n{\n    /**\n     * CreateController constructor.\n     *\n     * @codeCoverageIgnore\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        $this->middleware(\n            static function ($request, $next) {\n                app('view')->share('title', (string)trans('firefly.transactions'));\n                app('view')->share('mainTitleIcon', 'fa-exchange');\n\n                return $next($request);\n            }\n        );\n    }\n\n    /**\n     * @param TransactionGroup $group\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function cloneGroup(TransactionGroup $group)\n    {\n\n        /** @var GroupCloneService $service */\n        $service  = app(GroupCloneService::class);\n        $newGroup = $service->cloneGroup($group);\n\n        // event!\n        event(new StoredTransactionGroup($newGroup));\n\n        app('preferences')->mark();\n\n        $title = $newGroup->title ?? $newGroup->transactionJournals->first()->description;\n        $link  = route('transactions.show', [$newGroup->id]);\n        session()->flash('success', trans('firefly.stored_journal', ['description' => $title]));\n        session()->flash('success_url', $link);\n\n        return redirect(route('transactions.show', [$newGroup->id]));\n    }\n\n    /**\n     * Create a new transaction group.\n     *\n     * @param string|null $objectType\n     *\n     * @return Factory|View\n     * @throws FireflyException\n     */\n    public function create(?string $objectType)\n    {\n        app('preferences')->mark();\n\n        $sourceId      = (int)request()->get('source');\n        $destinationId = (int)request()->get('destination');\n\n        /** @var AccountRepositoryInterface $repository */\n        $repository           = app(AccountRepositoryInterface::class);\n        $cash                 = $repository->getCashAccount();\n        $preFilled            = session()->has('preFilled') ? session('preFilled') : [];\n        $subTitle             = (string)trans(sprintf('breadcrumbs.create_%s', strtolower((string)$objectType)));\n        $subTitleIcon         = 'fa-plus';\n        $optionalFields       = app('preferences')->get('transaction_journal_optional_fields', [])->data;\n        $allowedOpposingTypes = config('firefly.allowed_opposing_types');\n        $accountToTypes       = config('firefly.account_to_transaction');\n        $defaultCurrency      = app('amount')->getDefaultCurrency();\n        $previousUri          = $this->rememberPreviousUri('transactions.create.uri');\n        $parts                = parse_url($previousUri);\n        $search               = sprintf('?%s', $parts['query'] ?? '');\n        $previousUri          = str_replace($search, '', $previousUri);\n\n        session()->put('preFilled', $preFilled);\n\n        return prefixView(\n            'transactions.create',\n            compact(\n                'subTitleIcon',\n                'cash',\n                'objectType',\n                'subTitle',\n                'defaultCurrency',\n                'previousUri',\n                'optionalFields',\n                'preFilled',\n                'allowedOpposingTypes',\n                'accountToTypes',\n                'sourceId',\n                'destinationId'\n            )\n        );\n    }\n}\n", "/*\n * index.js\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\n */\n$(function () {\n    \"use strict\";\n    $('.make_default').on('click', setDefaultCurrency);\n\n});\n\nfunction setDefaultCurrency(e) {\n    var button = $(e.currentTarget);\n    var currencyId = parseInt(button.data('id'));\n\n    $.post(makeDefaultUrl, {\n        _token: token,\n        id: currencyId\n    }).done(function (data) {\n        // lame but it works\n        location.reload();\n    }).fail(function () {\n        console.error('I failed :(');\n    });\n}\n", "/*\n * groups.js\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nvar count = 0;\n\n$(document).ready(function () {\n    updateListButtons();\n    addSort();\n});\n\nvar fixHelper = function (e, tr) {\n    \"use strict\";\n    var $originals = tr.children();\n    var $helper = tr.clone();\n    $helper.children().each(function (index) {\n        // Set helper cell sizes to match the original sizes\n        $(this).width($originals.eq(index).width());\n    });\n    return $helper;\n};\n\n/**\n *\n */\nfunction addSort() {\n    if (typeof $(\".table-sortable>tbody\").sortable !== \"undefined\") {\n        $('.table-sortable>tbody').sortable(\n            {\n                items: \"tr:not(.unsortable)\",\n                handle: '.object-handle',\n                stop: sortStop,\n                start: function (event, ui) {\n                    // Build a placeholder cell that spans all the cells in the row\n                    var cellCount = 0;\n                    $('td, th', ui.helper).each(function () {\n                        // For each TD or TH try and get it's colspan attribute, and add that or 1 to the total\n                        var colspan = 1;\n                        var colspanAttr = $(this).attr('colspan');\n                        if (colspanAttr > 1) {\n                            colspan = colspanAttr;\n                        }\n                        cellCount += colspan;\n                    });\n\n                    // Add the placeholder UI - note that this is the item's content, so TD rather than TR\n                    ui.placeholder.html('<td colspan=\"' + cellCount + '\">&nbsp;</td>');\n                }\n            }\n        );\n    }\n}\n\n/**\n *\n * @param event\n * @param ui\n * @returns {boolean|undefined}\n */\nfunction sortStop(event, ui) {\n    \"use strict\";\n    var current = $(ui.item);\n    var thisDate = current.data('date');\n    var originalBG = current.css('backgroundColor');\n\n\n    if (current.prev().data('date') !== thisDate && current.next().data('date') !== thisDate) {\n        // animate something with color:\n        current.animate({backgroundColor: \"#d9534f\"}, 200, function () {\n            $(this).animate({backgroundColor: originalBG}, 200);\n            return undefined;\n        });\n\n        return false;\n    }\n    //return false;\n    // do update\n    var list = $('tr[data-date=\"' + thisDate + '\"]');\n    var submit = [];\n    $.each(list, function (i, v) {\n        var row = $(v);\n        var id = row.data('id');\n        submit.push(id);\n    });\n\n    // do extra animation when done?\n    $.post('transactions/reorder', {items: submit, date: thisDate, _token: token});\n\n    current.animate({backgroundColor: \"#5cb85c\"}, 200, function () {\n        $(this).animate({backgroundColor: originalBG}, 200);\n        return undefined;\n    });\n    return undefined;\n}\n\n\n/**\n *\n */\nfunction updateListButtons() {\n    // top button to select all / deselect all:\n    $('input[name=\"select-all\"]').change(function () {\n        if (this.checked) {\n            checkAll();\n            countChecked();\n            updateActionButtons();\n        } else {\n            uncheckAll();\n            countChecked();\n            updateActionButtons();\n        }\n    });\n\n    // click the mass edit button:\n    $('.mass-edit').click(goToMassEdit);\n    // click the bulk edit button:\n    $('.bulk-edit').click(goToBulkEdit);\n    // click the delete button:\n    $('.mass-delete').click(goToMassDelete);\n\n    // click checkbox:\n    $('.mass-select').unbind('change').change(function () {\n        countChecked();\n        updateActionButtons();\n    });\n}\n\n/**\n *\n * @returns {boolean}\n */\nfunction goToMassEdit() {\n    console.log(mass_edit_url + '/' + getCheckboxes());\n    window.location.href = mass_edit_url + '/' + getCheckboxes();\n    return false;\n}\n\nfunction goToBulkEdit() {\n    console.log(bulk_edit_url + '/' + getCheckboxes());\n    window.location.href = bulk_edit_url + '/' + getCheckboxes();\n    return false;\n}\n\nfunction goToMassDelete() {\n    console.log(mass_delete_url + '/' + getCheckboxes());\n    window.location.href = mass_delete_url + '/' + getCheckboxes();\n    return false;\n}\n\n/**\n *\n * @returns {Array}\n */\nfunction getCheckboxes() {\n    \"use strict\";\n    var list = [];\n    $.each($('.mass-select'), function (i, v) {\n        var checkbox = $(v);\n        if (checkbox.prop('checked')) {\n            // add to list.\n            list.push(checkbox.val());\n        }\n    });\n    return list;\n}\n\n\nfunction countChecked() {\n    count = $('.mass-select:checked').length;\n}\n\nfunction checkAll() {\n    $('.mass-select').prop('checked', true);\n}\n\nfunction uncheckAll() {\n    $('.mass-select').prop('checked', false);\n}\n\nfunction updateActionButtons() {\n    if (0 !== count) {\n        $('.action-menu').show();\n\n        // also update labels:\n        $('.mass-edit span').text(edit_selected_txt + ' (' + count + ')');\n        $('.bulk-edit span').text(edit_bulk_selected_txt + ' (' + count + ')');\n        $('.mass-delete span').text(delete_selected_txt + ' (' + count + ')');\n\n    }\n    if (0 === count) {\n        $('.action-menu').hide();\n    }\n}", "/*\n * show.js\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/** global: autoCompleteUri */\n\n$(function () {\n    \"use strict\";\n    $('.link-modal').click(getLinkModal);\n    $('#linkJournalModal').on('shown.bs.modal', function () {\n        makeAutoComplete();\n    })\n    $('[data-toggle=\"tooltip\"]').tooltip();\n});\n\nfunction getLinkModal(e) {\n    var button = $(e.currentTarget);\n    var journalId = parseInt(button.data('journal'));\n    var url = modalDialogURI.replace('%JOURNAL%', journalId);\n    console.log(url);\n    $.get(url).done(function (data) {\n        $('#linkJournalModal').html(data).modal('show');\n\n    }).fail(function () {\n        alert('Could not load the data to link journals. Sorry :(');\n        button.prop('disabled', true);\n    });\n\n    return false;\n}\n\nfunction makeAutoComplete() {\n\n    // input link-journal\n    var source = new Bloodhound({\n        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        prefetch: {\n            url: acURI + '?uid=' + uid,\n            filter: function (list) {\n                return $.map(list, function (item) {\n                    return item;\n                });\n            }\n        },\n        remote: {\n            url: acURI + '?query=%QUERY&uid=' + uid,\n            wildcard: '%QUERY',\n            filter: function (list) {\n                return $.map(list, function (item) {\n                    return item;\n                });\n            }\n        }\n    });\n    source.initialize();\n    $('.link-journal').typeahead({hint: true, highlight: true,}, {source: source, displayKey: 'name', autoSelect: false})\n        .on('typeahead:select', selectedJournal);\n}\n\nfunction selectedJournal(event, journal) {\n    $('#journal-selector').hide();\n    $('#journal-selection').show();\n    $('#selected-journal').html('<a href=\"' + groupURI.replace('%GROUP%', journal.transaction_group_id) + '\">' + journal.description + '</a>').show();\n    $('input[name=\"opposing\"]').val(journal.id);\n}\n", "{% extends './v1/layout/default' %}\n\n{% block breadcrumbs %}\n    {{ Breadcrumbs.render(Route.getCurrentRoute.getName) }}\n{% endblock %}\n\n{% block content %}\n    <div class=\"row\">\n        <div class=\"col-lg-12 col-sm-12 col-md-12\">\n            <div class=\"box\">\n                <div class=\"box-header with-border\">\n                    <h3 class=\"box-title\">{{ 'currencies'|_ }}</h3>\n                    <a class=\"btn btn-success pull-right\" href=\"{{ route('currencies.create') }}\">{{ 'create_currency'|_ }}</a>\n                </div>\n                <div class=\"box-body\">\n                    <p class=\"text-info\">\n                        {{ 'currencies_intro'|_ }}\n                    </p>\n                    <p class=\"text-info\">\n                        {{ 'currencies_default_disabled'|_ }}\n                    </p>\n                    {% if currencies|length > 0 %}\n                        <div style=\"padding-left:8px;\">\n                            {{ currencies.links('v1.pagination.bootstrap-4')|raw }}\n                        </div>\n                        <table class=\"table table-hover\">\n                            <thead>\n                            <tr>\n                                {% if isOwner %}\n                                    <th>&nbsp;</th>\n                                {% endif %}\n                                <th>{{ 'currency'|_ }}</th>\n                                <th>{{ 'number_of_decimals'|_ }}</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {% for currency in currencies %}\n                                <tr>\n                                    {% if isOwner %}\n                                        <td>\n                                            <div class=\"btn-group btn-group-xs\">\n                                                <a class=\"btn btn-default\" href=\"{{ route('currencies.edit',currency.id) }}\"><span\n                                                            class=\"fa fa-fw fa-pencil\"></span></a>\n                                                <a class=\"btn btn-danger\" href=\"{{ route('currencies.delete',currency.id) }}\"><span\n                                                            class=\"fa fa-fw fa-trash\"></span></a>\n                                            </div>\n                                        </td>\n                                    {% endif %}\n                                    <td>\n                                        {% if currency.enabled == false %}\n                                        <span class=\"text-muted\">\n                                        {% endif %}\n                                            {{ currency.name }} ({{ currency.code }}) ({{ currency.symbol|raw }})\n                                        {% if currency.id == defaultCurrency.id %}\n                                            <span class=\"label label-success\" id=\"default-currency\">{{ 'default_currency'|_ }}</span>\n                                        {% endif %}\n                                            {% if currency.enabled == false %}\n                                        </span>\n                                    <br><small class=\"text-danger\">{{ 'currency_is_disabled'|_ }}</small>\n                                        {% endif %}\n                                    </td>\n\n                                    <td>{{ currency.decimal_places }}</td>\n                                    <td class=\"buttons\">\n                                        <div class=\"btn-group\">\n                                            {% if currency.id != defaultCurrency.id %}\n                                                <button data-id=\"{{ currency.id }}\" class=\"make_default btn btn-default\"><span\n                                                            class=\"fa fa-fw fa-star\"></span> {{ 'make_default_currency'|_ }}</button>\n                                            {% endif %}\n                                            {% if currency.enabled %}\n                                                <a class=\"btn btn-default\"\n                                                   href=\"{{ route('currencies.disable',currency.id) }}\">\n                                                    <span class=\"fa fa-fw fa-square-o\"></span>\n                                                    {{ 'disable_currency'|_ }}</a>\n                                            {% endif %}\n                                            {% if not currency.enabled %}\n                                                <a class=\"btn btn-default\"\n                                                   href=\"{{ route('currencies.enable',currency.id) }}\">\n                                                    <span class=\"fa fa-fw fa-check-square-o\"></span>\n                                                    {{ 'enable_currency'|_ }}</a>\n                                            {% endif %}\n                                        </div>\n                                    </td>\n                                </tr>\n                            {% endfor %}\n                            </tbody>\n                        </table>\n                        <div style=\"padding-left:8px;\">\n                            {{ currencies.links('v1.pagination.bootstrap-4')|raw }}\n                        </div>\n                    {% endif %}\n                </div>\n                <div class=\"box-footer\">\n                    <a class=\"btn btn-success pull-right\" href=\"{{ route('currencies.create') }}\">{{ 'create_currency'|_ }}</a>\n                </div>\n            </div>\n        </div>\n    </div>\n{% endblock %}\n{% block scripts %}\n    <script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n        var makeDefaultUrl = \"{{ route('currencies.default') }}\";\n    </script>\n    <script type=\"text/javascript\" src=\"v1/js/ff/currencies/index.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n{% endblock %}\n", "<table class=\"table table-condensed table-hover table-responsive table-sortable\">\n    <thead>\n    <tr>\n        {% if showCategory or showBudget %}\n            <td colspan=\"7\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% else %}\n            <td colspan=\"6\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% endif %}\n        <td colspan=\"1\" class=\"hidden-xs\">\n            <!-- Single button -->\n            <div class=\"btn-group btn-group-xs action-menu pull-right\" style=\"display: none;\">\n                <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{ 'actions'|_ }} <span class=\"caret\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a href=\"#\" class=\"mass-edit\"><span class=\"fa fa-fw fa-pencil\"></span>\n                            <span>{{ 'mass_edit'|_ }}</span></a></li>\n                    <li><a href=\"#\" class=\"bulk-edit\"><span class=\"fa fa-fw fa-pencil-square-o\"></span>\n                            <span>{{ 'bulk_edit'|_ }}</span></a></li>\n                    <li><a href=\"#\" class=\"mass-delete\"><span class=\"fa fa-fw fa-trash\"></span>\n                            <span>{{ 'mass_delete'|_ }}</span></a></li>\n                </ul>\n            </div>\n        </td>\n        <td colspan=\"1\" class=\"hidden-xs\">\n            <div class=\"pull-right\">\n                <input id=\"list_ALL\" value=\"1\" name=\"select-all\" type=\"checkbox\" class=\"select-all form-check-inline\"/>\n            </div>\n        </td>\n    </tr>\n    <tr>\n        <th class=\"hidden-xs\">&nbsp;</th>\n        <th>{{ trans('list.description') }}</th>\n        <th>{{ trans('list.amount') }}</th>\n        <th class=\"hidden-xs\">{{ trans('list.date') }}</th>\n        <th>{{ trans('list.source_account') }}</th>\n        <th>{{ trans('list.destination_account') }}</th>\n        {% if showCategory %}\n            <th class=\"hidden-xs\">{{ trans('list.category') }}</th>\n        {% endif %}\n        {% if showBudget %}\n            <th class=\"hidden-xs\">{{ trans('list.budget') }}</th>\n        {% endif %}\n        <th class=\"hidden-xs\">&nbsp;</th><!-- actions -->\n        <th class=\"hidden-xs\">&nbsp;</th><!-- checkbox -->\n    </tr>\n    </thead>\n    <tbody>\n    {% for group in groups %}\n        {% if group.count > 1 %}\n            <tr style=\"border-top:1px #aaa solid;\" class=\"unsortable\">\n                <td colspan=\"2\" style=\"border-top:1px #aaa solid;\">\n                    <small><strong>\n                            <a href=\"{{ route('transactions.show', [group.id]) }}\"\n                               title=\"{{ group.title }}\">{{ group.title }}</a>\n                        </strong></small>\n                </td>\n                <td colspan=\"2\" style=\"border-top:1px #aaa solid;\">\n                    {% for sum in group.sums %}\n                        {% if group.transaction_type == 'Deposit' %}\n                            {{ formatAmountBySymbol(sum.amount*-1, sum.currency_symbol, sum.currency_decimal_places) }}{% if loop.index != group.sums|length %},{% endif %}\n                        {% elseif group.transaction_type == 'Transfer' %}\n                            <span class=\"text-info\">\n                            {{ formatAmountBySymbol(sum.amount*-1, sum.currency_symbol, sum.currency_decimal_places, false) }}{% if loop.index != group.sums|length %},{% endif %}X\n                            </span>\n                        {% else %}\n                            {{ formatAmountBySymbol(sum.amount, sum.currency_symbol, sum.currency_decimal_places) }}{% if loop.index != group.sums|length %},{% endif %}\n                        {% endif %}\n                    {% endfor %}\n                </td>\n                <!-- column to span accounts + extra fields -->\n                {% if showCategory or showBudget %}\n                    <td style=\"border-top:1px #aaa solid;\" colspan=\"3\">&nbsp;</td>\n                {% else %}\n                    <td style=\"border-top:1px #aaa solid;\" colspan=\"2\">&nbsp;</td>\n                {% endif %}\n                <td style=\"border-top:1px #aaa solid;\" class=\"hidden-xs\">\n                    <div class=\"btn-group btn-group-xs pull-right\">\n                        <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {{ 'actions'|_ }} <span class=\"caret\"></span></button>\n                        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n                            <li><a href=\"{{ route('transactions.edit', [group.id]) }}\"><span\n                                            class=\"fa fa-fw fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                            <li><a href=\"{{ route('transactions.delete', [group.id]) }}\"><span\n                                            class=\"fa fa-fw fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                            <li><a href=\"{{ route('transactions.clone', [group.id]) }}\"><span\n                                            class=\"fa fa-copy fa-fw\"></span> {{ 'clone'|_ }}</a></li>\n                        </ul>\n                    </div>\n                </td>\n                <td style=\"border-top:1px #aaa solid;\" class=\"hidden-xs\">&nbsp;</td>\n            </tr>\n        {% endif %}\n        {% for index, transaction in group.transactions %}\n            {% set style=\"\" %}\n            {% if group.transactions|length == loop.index and group.count > 1 %}\n                {% set style=\"border-bottom:1px #aaa solid;\" %}\n            {% endif %}\n            <tr data-date=\"{{ transaction.date.format('Y-m-d') }}\" data-count=\"{{ group.count }}\" data-id=\"{{ group.id }}\">\n                <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                    {% if transaction.transaction_type_type == 'Withdrawal' %}\n                        <span class=\"object-handle fa fa-long-arrow-left fa-fw\" title=\"{{ trans('firefly.Withdrawal') }}\"></span>\n                    {% endif %}\n\n                    {% if transaction.transaction_type_type == 'Deposit' %}\n                        <span class=\"object-handle fa fa-long-arrow-right fa-fw\" title=\"{{ trans('firefly.Deposit') }}\"></span>\n                    {% endif %}\n\n                    {% if transaction.transaction_type_type == 'Transfer' %}\n                        <span class=\"object-handle fa fa-exchange fa-fw\" title=\"{{ trans('firefly.Transfer') }}\"></span>\n                    {% endif %}\n\n                    {% if transaction.transaction_type_type == 'Reconciliation' %}\n                        <span class=\"object-handle fa-fw fa fa-calculator\" title=\"{{ trans('firefly.reconciliation_transaction') }}\"></span>\n                    {% endif %}\n                    {% if transaction.transaction_type_type == 'Opening balance' %}\n                        <span class=\"object-handle fa-fw fa fa-star-o\" title=\"{{ trans('firefly.Opening balance') }}\"></span>\n                    {% endif %}\n                    {% if transaction.transaction_type_type == 'Liability credit' %}\n                        <span class=\"object-handle fa-fw fa fa-star-o\" title=\"{{ trans('firefly.Liability credit') }}\"></span>\n                    {% endif %}\n\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {% if transaction.reconciled %}\n                        <span class=\"fa fa-check\"></span>\n                    {% endif %}\n                    {% if transaction.attachments|length > 0 %}\n                        <span class=\"fa fa-paperclip\"></span>\n                    {% endif %}\n                    {% if group.count == 1 %}\n                    <a href=\"{{ route('transactions.show', [group.id]) }}\" title=\"{{ transaction.description }}\">\n                        {% endif %}\n                        {{ transaction.description }}\n                        {% if group.count == 1 %}\n                    </a>\n                    {% endif %}\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {#  deposit #}\n                    {% if transaction.transaction_type_type == 'Deposit' %}\n                        {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                        {% if null != transaction.foreign_amount %}\n                            ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                        {% endif %}\n                    {# transfer #}\n                    {% elseif transaction.transaction_type_type == 'Transfer' %}\n                        <span class=\"text-info\">\n                        {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places, false) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places, false) }})\n                            {% endif %}\n                            </span>\n                    {# opening balance #}\n                    {% elseif transaction.transaction_type_type == 'Opening balance' %}\n                        {% if transaction.source_account_type == 'Initial balance account' %}\n                            {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% else %}\n                            {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% endif %}\n                    {# reconciliation #}\n                    {% elseif transaction.transaction_type_type == 'Reconciliation' %}\n                        {% if transaction.source_account_type == 'Reconciliation account' %}\n                            {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% else %}\n                            {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% endif %}\n                    {# liability credit #}\n                    {% elseif transaction.transaction_type_type == 'Liability credit' %}\n                        {% if transaction.source_account_type == 'Liability credit' %}\n                            {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% else %}\n                            {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% endif %}\n\n\n                        {# THE REST #}\n                    {% else %}\n                        {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                        {% if null != transaction.foreign_amount %}\n                            ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                        {% endif %}\n                    {% endif %}\n                </td>\n                <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                    {{ transaction.date.formatLocalized(monthAndDayFormat) }}\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {% if 'Cash account' == transaction.source_account_type %}\n                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                    {% else %}\n                        <a href=\"{{ route('accounts.show', [transaction.source_account_id|default(1)]) }}\"\n                           title=\"{{ transaction.source_account_iban|default(transaction.source_account_name) }}\">{{ transaction.source_account_name }}</a>\n                    {% endif %}\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {% if 'Cash account' == transaction.destination_account_type %}\n                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                    {% else %}\n                        <a href=\"{{ route('accounts.show', [transaction.destination_account_id|default(1)]) }}\"\n                           title=\"{{ transaction.destination_account_iban|default(transaction.destination_account_name) }}\">{{ transaction.destination_account_name }}</a>\n                    {% endif %}\n                </td>\n                {% if showCategory %}\n                    <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                        {% if transaction.category_id %}\n                            <a href=\"{{ route('categories.show', [transaction.category_id]) }}\"\n                               title=\"{{ transaction.category_name }}\">{{ transaction.category_name }}</a>\n                        {% endif %}\n                    </td>\n                {% endif %}\n                {% if showBudget %}\n                    <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                        {% if transaction.budget_id %}\n                            <a href=\"{{ route('budgets.show', [transaction.budget_id]) }}\"\n                               title=\"{{ transaction.budget_name }}\">{{ transaction.budget_name }}</a>\n                        {% endif %}\n                    </td>\n                {% endif %}\n\n                {% if group.count == 1 %}\n                    <td style=\" {{ style|raw }};\" class=\"hidden-xs\">\n                        <div class=\"btn-group btn-group-xs pull-right\">\n                            <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                                {{ 'actions'|_ }} <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n                                <li><a href=\"{{ route('transactions.edit', [group.id]) }}\"><span\n                                                class=\"fa fa-fw fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                                <li><a href=\"{{ route('transactions.delete', [group.id]) }}\"><span\n                                                class=\"fa fa-fw fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                                <li><a href=\"{{ route('transactions.clone', [group.id]) }}\"><span\n                                                class=\"fa fa-copy fa-fw\"></span> {{ 'clone'|_ }}</a></li>\n                                <li>\n                                    <a href=\"{{ route('rules.create-from-journal', [transaction.transaction_journal_id]) }}\"><span\n                                                class=\"fa fa-fw fa-random\"></span> {{ 'create_rule_from_transaction'|_ }}\n                                    </a></li>\n                            </ul>\n                        </div>\n                    </td>\n\n                {% endif %}\n                {% if group.count != 1 %}\n                    <td style=\" {{ style|raw }};\" class=\"hidden-xs\">\n                        &nbsp;\n                    </td>\n                {% endif %}\n                <td style=\"{{ style|raw }}\" class=\"hidden-xs\">\n                    <div class=\"pull-right\">\n                        <input id=\"list_{{ transaction.transaction_journal_id }}\"\n                               value=\"{{ transaction.transaction_journal_id }}\"\n                               name=\"journals[{{ transaction.transaction_journal_id }}]\"\n                               type=\"checkbox\" class=\"mass-select form-check-inline\"\n                               data-value=\"{{ transaction.transaction_journal_id }}\"/>\n                    </div>\n                </td>\n            </tr>\n        {% endfor %}\n    {% endfor %}\n    </tbody>\n    <tfoot>\n    <tr>\n        <td colspan=\"8\">\n            <div class=\"pull-right\">\n                <!-- Single button -->\n                <div class=\"btn-group action-menu btn-group-xs pull-right\" style=\"display:none;\">\n                    <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ 'actions'|_ }} <span class=\"caret\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu btn-group-xs dropdown-menu-right\">\n                        <li><a href=\"#\" class=\"mass-edit\"><span class=\"fa fa-fw fa-pencil\"></span>\n                                <span>{{ 'mass_edit'|_ }}</span></a></li>\n                        <li><a href=\"#\" class=\"bulk-edit\"><span class=\"fa fa-fw fa-pencil-square-o\"></span>\n                                <span>{{ 'bulk_edit'|_ }}</span></a></li>\n                        <li><a href=\"#\" class=\"mass-delete\"><span class=\"fa fa-fw fa-trash\"></span>\n                                <span>{{ 'mass_delete'|_ }}</span></a></li>\n                    </ul>\n                </div>\n            </div>\n        </td>\n    </tr>\n    <tr>\n        {% if showCategory or showBudget %}\n            <td colspan=\"9\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% else %}\n            <td colspan=\"8\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% endif %}\n    </tr>\n    </tfoot>\n</table>\n", "{% extends './v1/layout/default' %}\n\n{% block breadcrumbs %}\n    {{ Breadcrumbs.render(Route.getCurrentRoute.getName, transactionGroup) }}\n{% endblock %}\n\n{% block content %}\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header with-border\">\n                    <h3 class=\"box-title\">{{ 'transaction_journal_information'|_ }}</h3>\n                    <div class=\"btn-group btn-group-xs pull-right\">\n                        <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {{ 'actions'|_}} <span class=\"caret\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu\">\n                            {# edit + delete #}\n                            <li><a href=\"{{ route('transactions.edit', [transactionGroup.id]) }}\"><span class=\"fa fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                            <li><a href=\"{{ route('transactions.delete', [transactionGroup.id]) }}\"><span class=\"fa fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n\n                            {# convert to different type #}\n                            {% if groupArray.transactions[0].type != 'withdrawal' %}\n                                <li><a href=\"{{ route('transactions.convert.index', ['withdrawal', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_withdrawal'|_ }}</a></li>\n                            {% endif %}\n\n                            {% if groupArray.transactions[0].type != 'deposit' %}\n                                <li><a href=\"{{ route('transactions.convert.index', ['deposit', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_deposit'|_ }}</a></li>\n                            {% endif %}\n\n                            {% if groupArray.transactions[0].type != 'transfer' %}\n                                <li><a href=\"{{ route('transactions.convert.index', ['transfer', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_transfer'|_ }}</a></li>\n                            {% endif %}\n\n                            {#  clone #}\n                            {% if groupArray.transactions[0].type != 'opening balance' and groupArray.transactions[0].type != 'reconciliation' %}\n                                <!-- since 5.1.0 -->\n                                <li role=\"separator\" class=\"divider\"></li>\n                                <li><a href=\"{{ route('transactions.clone', [transactionGroup.id]) }}\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n                            {% endif %}\n\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"box-body no-padding\">\n                    <table class=\"table table-hover\">\n                        <tbody>\n                        <tr>\n                            <td>{{ trans('list.type') }}</td>\n                            <td>{{ first.transactiontype.type|_ }}</td>\n                        </tr>\n                        <tr>\n                            <td>{{ trans('list.description') }}</td>\n                            <td>\n                                {% if splits == 1 %}\n                                    {{ first.description }}\n                                {% else %}\n                                    {{ transactionGroup.title }}\n                                {% endif %}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"width:30%;\">{{ trans('list.date') }}</td>\n                            <td>\n                                {{ first.date.formatLocalized(dateTimeFormat) }}\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header with-border\">\n                    <h3 class=\"box-title\">{{ 'transaction_journal_meta'|_ }}</h3>\n                </div>\n                <div class=\"box-body no-padding\">\n                    <table class=\"table table-hover\">\n                        <tbody>\n                        {% if first.transactiontype.type != 'Withdrawal' or splits == 1 %}\n                            <tr>\n                                <td>\n                                    {{ trans_choice('firefly.source_accounts', accounts['source']|length ) }}\n                                </td>\n                                <td>\n                                    {% for account in accounts['source'] %}\n                                        {% if 'Cash account' == account.type %}\n                                            <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                        {% else %}\n                                            <a href=\"{{ route('accounts.show',account.id) }}\"\n                                               title=\"{{ account.iban|default(account.name) }}\">\n                                                {{ account.name }}\n                                            </a>\n                                        {% endif %}\n                                        {% if loop.index0 != accounts['source']|length -1 %}, {% endif %}\n                                    {% endfor %}\n                                </td>\n                            </tr>\n                        {% endif %}\n\n                        {% if first.transactiontype.type != 'Deposit' or splits == 1 %}\n                            <tr>\n                                <td>\n                                    {{ trans_choice('firefly.destination_accounts', accounts['destination']|length ) }}\n\n                                </td>\n                                <td>\n                                    {% for account in accounts['destination'] %}\n                                        {% if 'Cash account' == account.type %}\n                                            <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                        {% else %}\n                                            <a href=\"{{ route('accounts.show',account.id) }}\"\n                                               title=\"{{ account.iban|default(account.name) }}\">\n                                                {{ account.name }}\n                                            </a>\n                                        {% endif %}\n                                        {% if loop.index0 != accounts['destination']|length -1 %}, {% endif %}\n                                    {% endfor %}\n                                </td>\n                            </tr>\n                        {% endif %}\n                        <tr>\n                            <td style=\"width:30%;\">{{ 'total_amount'|_ }}</td>\n                            <td>\n                                {% for amount in amounts %}\n                                    {% if first.transactiontype.type == 'Withdrawal' or first.transactiontype.type == 'Deposit' %}\n                                        {{ formatAmountBySymbol(amount.amount*-1,amount.symbol, amount.decimal_places) }}{% if loop.index0 != amounts|length -1 %}, {% endif %}\n                                    {% elseif first.transactiontype.type == 'Transfer' %}\n                                        <span class=\"text-info\">\n                                        {{ formatAmountBySymbol(amount.amount, amount.symbol, amount.decimal_places, false) }}{% if loop.index0 != amounts|length -1 %}, {% endif %}\n                                    </span>\n                                    {% elseif first.transactiontype.type == 'Opening balance' %}\n                                        {# Opening balance stored amount is always negative: find out which way the money goes #}\n                                        {% if groupArray.transactions[0].source_type == 'Initial balance account' %}\n                                            {{ formatAmountBySymbol(amount.amount*-1,amount.symbol, amount.decimal_places) }}\n                                        {% else %}\n                                            {{ formatAmountBySymbol(amount.amount,amount.symbol, amount.decimal_places) }}\n                                        {% endif %}\n                                    {% endif %}\n                                {% endfor %}\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n\n    </div>\n    {% if splits > 1 %}\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <h3>{{ 'splits'|_ }}</h3>\n            </div>\n        </div>\n    {% endif %}\n    {% set boxSize=6 %}\n    {% if(splits == 2) %}\n        {% set boxSize=6 %}\n    {% endif %}\n    {% if (splits > 2) %}\n        {% set boxSize = 4 %}\n    {% endif %}\n    <div class=\"row\">\n        {% for index,journal in groupArray.transactions %}\n            <div class=\"col-lg-{{ boxSize }}\">\n                <div class=\"box\">\n                    <div class=\"box-header with-border\">\n                        <h3 class=\"box-title\">\n                            {{ journal.description }}\n                            {% if journal.reconciled %}\n                                <span class=\"fa fa-check\"></span>\n                            {% endif %}\n                            {% if splits > 1 %}\n                                <small>\n                                    {{ index+1 }} / {{ splits }}\n                                </small>\n                            {% endif %}\n                        </h3>\n\n\n                        <div class=\"btn-group btn-group-xs pull-right\">\n                            <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                {{ 'actions'|_}} <span class=\"caret\"></span>\n                            </button>\n                            <ul class=\"dropdown-menu\">\n                                {# edit + delete #}\n                                <li><a href=\"{{ route('transactions.edit', [transactionGroup.id]) }}\"><span class=\"fa fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                                <li><a href=\"{{ route('transactions.delete', [transactionGroup.id]) }}\"><span class=\"fa fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                                <li role=\"separator\" class=\"divider\"></li>\n\n                                {# convert to different type #}\n                                {% if groupArray.transactions[0].type != 'withdrawal' %}\n                                    <li><a href=\"{{ route('transactions.convert.index', ['withdrawal', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_withdrawal'|_ }}</a></li>\n                                {% endif %}\n\n                                {% if groupArray.transactions[0].type != 'deposit' %}\n                                    <li><a href=\"{{ route('transactions.convert.index', ['deposit', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_deposit'|_ }}</a></li>\n                                {% endif %}\n\n                                {% if groupArray.transactions[0].type != 'transfer' %}\n                                    <li><a href=\"{{ route('transactions.convert.index', ['transfer', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_transfer'|_ }}</a></li>\n                                {% endif %}\n\n                                {#  clone #}\n                                {% if groupArray.transactions[0].type != 'opening balance' and groupArray.transactions[0].type != 'reconciliation' %}\n                                    <!-- since 5.1.0 -->\n                                    <li role=\"separator\" class=\"divider\"></li>\n                                    <li><a href=\"{{ route('transactions.clone', [transactionGroup.id]) }}\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n                                {% endif %}\n\n                                <li><a href=\"#\" class=\"link-modal\" data-journal=\"{{ journal.transaction_journal_id }}\"><span class=\"fa fa-fw fa-link\"></span>{{ 'link_transaction'|_ }}</a></li>\n                                <li role=\"separator\" class=\"divider\"></li>\n                                <li><a href=\"{{ route('rules.create-from-journal', [journal.transaction_journal_id]) }}\"><span class=\"fa fa-fw fa-random\"></span>{{ 'create_rule_from_transaction'|_ }}</a></li>\n                                <li><a href=\"{{ route('recurring.create-from-journal', [journal.transaction_journal_id]) }}\"><span class=\"fa fa-fw fa-paint-brush\"></span>{{ 'create_recurring_from_transaction'|_ }}</a></li>\n                            </ul>\n                        </div>\n\n                    </div>\n                    <div class=\"box-body no-padding\">\n                        <table class=\"table\">\n                            <tr>\n                                <td colspan=\"2\">\n                                    <!-- type is: \"{{ first.transactiontype.type }}\" -->\n                                    {% if 'Cash account' == journal.source_type %}\n                                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                    {% else %}\n                                        <a href=\"{{ route('accounts.show', journal.source_id) }}\"\n                                           title=\"{{ journal.source_iban|default(journal.source_name) }}\">{{ journal.source_name }}</a> &rarr;\n                                    {% endif %}\n\n                                    {% if first.transactiontype.type == 'Withdrawal' or first.transactiontype.type == 'Deposit' %}\n                                        {{ formatAmountBySymbol(journal.amount*-1, journal.currency_symbol, journal.currency_decimal_places) }}\n                                    {% elseif first.transactiontype.type == 'Transfer' or first.transactiontype.type == 'Opening balance' %}\n                                        <span class=\"text-info\">\n                                        {{ formatAmountBySymbol(journal.amount, journal.currency_symbol, journal.currency_decimal_places, false) }}\n                                    </span>\n                                    {% elseif first.transactiontype.type == 'Liability credit' %}\n                                        <span class=\"text-info\">\n                                        {{ formatAmountBySymbol(journal.amount*-1, journal.currency_symbol, journal.currency_decimal_places, false) }}\n                                    </span>\n                                    {% endif %}\n\n                                    <!-- do foreign amount -->\n                                    {% if null != journal.foreign_amount %}\n                                        {% if first.transactiontype.type == 'Withdrawal' or first.transactiontype.type == 'Deposit' %}\n                                            ({{ formatAmountBySymbol(journal.foreign_amount*-1, journal.foreign_currency_symbol, journal.foreign_currency_decimal_places) }})\n                                        {% elseif first.transactiontype.type == 'Transfer' %}\n                                            <span class=\"text-info\">\n                                        ({{ formatAmountBySymbol(journal.foreign_amount, journal.foreign_currency_symbol, journal.foreign_currency_decimal_places, false) }})\n                                    </span>\n                                        {% endif %}\n                                    {% endif %}\n\n                                    &rarr;\n                                    {% if 'Cash account' == journal.destination_type %}\n                                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                    {% else %}\n                                        <a href=\"{{ route('accounts.show', journal.destination_id) }}\"\n                                           title=\"{{ journal.destination_iban|default(journal.destination_name) }}\">{{ journal.destination_name }}</a>\n                                    {% endif %}\n                                </td>\n                            </tr>\n                            {% if null != journal.category_id %}\n                                <tr>\n                                    <td style=\"width:30%;\">{{ 'category'|_ }}</td>\n                                    <td><a href=\"{{ route('categories.show', [journal.category_id]) }}\">{{ journal.category_name }}</a></td>\n                                </tr>\n                            {% endif %}\n                            {% if null != journal.budget_id and first.transactiontype.type == 'Withdrawal' %}\n                                <tr>\n                                    <td>{{ 'budget'|_ }}</td>\n                                    <td><a href=\"{{ route('budgets.show', [journal.budget_id]) }}\">{{ journal.budget_name }}</a></td>\n                                </tr>\n                            {% endif %}\n                            {% if null != journal.bill_id and first.transactiontype.type == 'Withdrawal' %}\n                                <tr>\n                                    <td>{{ 'bill'|_ }}</td>\n                                    <td><a href=\"{{ route('bills.show', [journal.bill_id]) }}\">{{ journal.bill_name }}</a></td>\n                                </tr>\n                            {% endif %}\n                            <!-- other fields -->\n                            {% for dateField in ['interest_date','book_date','process_date','due_date','payment_date','invoice_date'] %}\n                                {% if journalHasMeta(journal.transaction_journal_id, dateField) %}\n                                    <tr>\n                                        <td>{{ trans('list.'~dateField) }}</td>\n                                        <td>{{ journalGetMetaDate(journal.transaction_journal_id, dateField).formatLocalized(monthAndDayFormat) }}</td>\n                                    </tr>\n                                {% endif %}\n                            {% endfor %}\n                            {% for metaField in ['external_id','bunq_payment_id','internal_reference','sepa_batch_id','sepa_ct_id','sepa_ct_op','sepa_db','sepa_country','sepa_cc','sepa_ep','sepa_ci','external_uri'] %}\n                                {% if journalHasMeta(journal.transaction_journal_id, metaField) %}\n                                    <tr>\n                                        <td>{{ trans('list.'~metaField) }}</td>\n                                        <td>\n                                            {% if 'external_uri' == metaField  %}\n                                                {% set uri = journalGetMetaField(journal.transaction_journal_id, metaField) %}\n                                                <a href=\"{{ uri }}\" rel=\"noopener noreferrer nofollow\" target=\"_blank\">\n                                                    {% if uri|length > 60 %}\n                                                        {{ uri|slice(0, 60) ~ '...' }}\n                                                    {% else %}\n                                                        {{ uri }}\n                                                    {% endif %}\n                                                </a>\n                                            {% endif %}\n                                            {% if 'external_uri' != metaField  %}\n                                                {{ journalGetMetaField(journal.transaction_journal_id, metaField) }}\n                                            {% endif %}\n                                        </td>\n                                    </tr>\n                                {% endif %}\n                            {% endfor %}\n                            {% if null != journal.notes and '' != journal.notes %}\n                                <tr>\n                                    <td>{{ trans('list.notes') }}</td>\n                                    <td class=\"markdown\">{{ journal.notes|default('')|markdown }}</td>\n                                </tr>\n                            {% endif %}\n                            {% if journalHasMeta(journal.transaction_journal_id, 'recurring_total') and journalHasMeta(journal.transaction_journal_id, 'recurring_count')  %}\n                                {% set recurringTotal = journalGetMetaField(journal.transaction_journal_id, 'recurring_total') %}\n                                {% if 0 == recurringTotal %}\n                                    {% set recurringTotal = '\u221e' %}\n                                {% endif %}\n                                <tr>\n                                    <td>{{ trans('list.recurring_transaction') }}</td>\n                                    <td>{{ trans('firefly.recurring_info', {total: recurringTotal, count: journalGetMetaField(journal.transaction_journal_id, 'recurring_count') }) }}</td>\n                                </tr>\n                            {% endif %}\n                            {% if journal.tags|length > 0 %}\n                                <tr>\n                                    <td>{{ 'tags'|_ }}</td>\n                                    <td>\n                                        {% for tag in journal.tags %}\n                                            <h4 style=\"display: inline;\"><a class=\"label label-success\" href=\"{{ route('tags.show', tag.id) }}\">\n                                                    <span class=\"fa fa-fw fa-tag\"></span>{{ tag.tag }}</a>\n                                            </h4>\n                                        {% endfor %}\n                                    </td>\n                                </tr>\n                            {% endif %}\n                        </table>\n                    </div>\n                </div>\n\n                <!-- Transaction links -->\n                {% if links[journal.transaction_journal_id]|length > 0 %}\n                    <div class=\"box\">\n                        <div class=\"box-header with-border\">\n                            <h3 class=\"box-title\">\n                                {{ 'journal_links'|_ }}\n                            </h3>\n                        </div>\n                        <div class=\"box-body no-padding\">\n                            <table class=\"table\">\n                                {% for link in links[journal.transaction_journal_id] %}\n                                    <tr>\n                                        <td style=\"width:120px;\">\n                                            <div class=\"btn-group btn-group-xs\">\n                                                <a href=\"{{ route('transactions.link.switch', [link.id]) }}\" class=\"btn btn-default\"><span\n                                                            class=\"fa fa-fw fa-arrows-h\"></span></a>\n                                                <a href=\"{{ route('transactions.link.delete', [link.id]) }}\" class=\"btn btn-danger\"><span class=\"fa fa-trash\"></span></a>\n                                            </div>\n                                        </td>\n                                        <td>{{ trans('firefly.'~link.link) }} \"<a href=\"{{ route('transactions.show', link.group) }}\"\n                                                                title=\"{{ link.description }}\">{{ link.description }}</a>\"\n\n                                            ({{ link.amount|raw }})\n                                            {% if '' != link.foreign_amount %}\n                                                ({{ link.foreign_amount|raw }})\n                                            {% endif %}\n                                        </td>\n                                    </tr>\n                                {% endfor %}\n\n                            </table>\n                        </div>\n                    </div>\n                {% endif %}\n\n                <!-- Attachments -->\n                {% if attachments[journal.transaction_journal_id]|length > 0 %}\n                    <div class=\"box\">\n                        <div class=\"box-header with-border\">\n                            <h3 class=\"box-title\">{{ 'attachments'|_ }}</h3>\n                        </div>\n                        <div class=\"box-body no-padding\">\n                            {% include 'v1.list.attachments' with {attachments: attachments[journal.transaction_journal_id]} %}\n                        </div>\n                    </div>\n                {% endif %}\n\n                <!-- Piggy bank events -->\n                {% if events[journal.transaction_journal_id]|length > 0 %}\n                    <div class=\"box\">\n                        <div class=\"box-header with-border\">\n                            <h3 class=\"box-title\">{{ 'piggy_events'|_ }}</h3>\n                        </div>\n                        <div class=\"box-body no-padding\">\n                            <table class=\"table table-hover\">\n                                {% for event in events[journal.transaction_journal_id] %}\n                                    <tr>\n                                        <td style=\"width:30%;\">{{ event.amount|raw }}</td>\n                                        <td>\n                                            <a href=\"{{ route('piggy-banks.show', [event.piggy_id]) }}\">{{ event.piggy }}</a></td>\n\n                                    </tr>\n                                {% endfor %}\n                            </table>\n                        </div>\n                    </div>\n                {% endif %}\n            </div>\n        {% endfor %}\n    </div>\n    {# modal for linking journals. Will be filled by AJAX #}\n    <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" id=\"linkJournalModal\">\n    </div>\n{% endblock %}\n{% block scripts %}\n    <script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n        var modalDialogURI = '{{ route('transactions.link.modal', ['%JOURNAL%']) }}';\n        var acURI = '{{ route('api.v1.autocomplete.transactions-with-id') }}';\n        var groupURI = '{{ route('transactions.show',['%GROUP%']) }}';\n    </script>\n    <script type=\"text/javascript\" src=\"v1/js/lib/typeahead/typeahead.bundle.min.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n    <script type=\"text/javascript\" src=\"v1/js/ff/transactions/show.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n{% endblock %}\n\n", "<?php\n/**\n * web.php\n * Copyright (c) 2019 james@firefly-iii.org.\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\ndeclare(strict_types=1);\n\nRoute::group(\n    ['namespace' => 'FireflyIII\\Http\\Controllers\\System',\n     'as'        => 'installer.', 'prefix' => 'install',],\n    static function () {\n        Route::get('', ['uses' => 'InstallController@index', 'as' => 'index']);\n        Route::post('runCommand', ['uses' => 'InstallController@runCommand', 'as' => 'runCommand']);\n    }\n);\n\nRoute::group(\n    ['middleware' => 'binders-only', 'namespace' => 'FireflyIII\\Http\\Controllers\\System', 'as' => 'cron.', 'prefix' => 'cron'],\n    static function () {\n        Route::get('run/{cliToken}', ['uses' => 'CronController@cron', 'as' => 'cron']);\n    }\n);\n\nRoute::group(\n    ['middleware' => 'binders-only'],\n    static function () {\n        Route::get('offline', fn () => view('errors.offline'));\n    }\n);\n\n/**\n * These routes only work when the user is NOT logged in.\n */\nRoute::group(\n    ['middleware' => 'user-not-logged-in', 'namespace' => 'FireflyIII\\Http\\Controllers'],\n    static function () {\n\n    // Authentication Routes...\n        Route::get('login', ['uses' => 'Auth\\LoginController@showLoginForm', 'as' => 'login']);\n        Route::post('login', ['uses' => 'Auth\\LoginController@login', 'as' => 'login.post']);\n\n        // Registration Routes...\n        Route::get('register', ['uses' => 'Auth\\RegisterController@showRegistrationForm', 'as' => 'register']);\n        Route::post('register', 'Auth\\RegisterController@register');\n\n        // Password Reset Routes...\n        Route::get('password/reset/{token}', ['uses' => 'Auth\\ResetPasswordController@showResetForm', 'as' => 'password.reset']);\n        Route::post('password/email', ['uses' => 'Auth\\ForgotPasswordController@sendResetLinkEmail', 'as' => 'password.email']);\n        Route::post('password/reset', ['uses' => 'Auth\\ResetPasswordController@reset', 'as' => 'password.reset.post']);\n        Route::get('password/reset', ['uses' => 'Auth\\ForgotPasswordController@showLinkRequestForm', 'as' => 'password.reset.request']);\n\n        // Change email routes:\n        Route::get('profile/confirm-email-change/{token}', ['uses' => 'ProfileController@confirmEmailChange', 'as' => 'profile.confirm-email-change']);\n        Route::get('profile/undo-email-change/{token}/{oldAddressHash}', ['uses' => 'ProfileController@undoEmailChange', 'as' => 'profile.undo-email-change']);\n    }\n);\n\n/**\n * For some other routes, it is only relevant that the user is authenticated.\n */\nRoute::group(\n    ['middleware' => 'user-simple-auth', 'namespace' => 'FireflyIII\\Http\\Controllers'],\n    static function () {\n        Route::get('error', ['uses' => 'DebugController@displayError', 'as' => 'error']);\n        Route::any('logout', ['uses' => 'Auth\\LoginController@logout', 'as' => 'logout']);\n        Route::get('flush', ['uses' => 'DebugController@flush', 'as' => 'flush']);\n        //Route::get('routes', ['uses' => 'DebugController@routes', 'as' => 'routes']);\n        Route::get('debug', 'DebugController@index')->name('debug');\n    }\n);\n\n/**\n * For the two factor routes, the user must be logged in, but NOT 2FA. Account confirmation does not matter here.\n *\n */\nRoute::group(\n    ['middleware' => 'user-logged-in-no-2fa', 'prefix' => 'two-factor', 'as' => 'two-factor.', 'namespace' => 'FireflyIII\\Http\\Controllers\\Auth'],\n    static function () {\n        Route::post('submit', ['uses' => 'TwoFactorController@submitMFA', 'as' => 'submit']);\n        Route::get('lost', ['uses' => 'TwoFactorController@lostTwoFactor', 'as' => 'lost']); // can be removed when v2 is live.\n    }\n);\n\n/**\n * For all other routes, the user must be fully authenticated and have an activated account.\n */\n\n/**\n * Home Controller.\n */\nRoute::group(\n    ['middleware' => ['user-full-auth'], 'namespace' => 'FireflyIII\\Http\\Controllers'],\n    static function () {\n        Route::get('/', ['uses' => 'HomeController@index', 'as' => 'index']);\n        Route::get('/flash', ['uses' => 'DebugController@testFlash', 'as' => 'test-flash']);\n        Route::get('/home', ['uses' => 'HomeController@index', 'as' => 'home']);\n        Route::post('/daterange', ['uses' => 'HomeController@dateRange', 'as' => 'daterange']);\n    }\n);\n\n// show inactive\n\n/**\n * Account Controller.\n * DROP ME WHEN v2 hits\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'inactive-accounts', 'as' => 'accounts.'],\n    static function () {\n        Route::get('{objectType}', ['uses' => 'Account\\IndexController@inactive', 'as' => 'inactive.index'])->where(\n            'objectType',\n            'revenue|asset|expense|liabilities'\n        );\n    }\n);\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'accounts', 'as' => 'accounts.'],\n    static function () {\n\n        // show:\n        Route::get('{objectType}', ['uses' => 'Account\\IndexController@index', 'as' => 'index'])->where('objectType', 'revenue|asset|expense|liabilities');\n\n        // create\n        Route::get('create/{objectType}', ['uses' => 'Account\\CreateController@create', 'as' => 'create'])->where(\n            'objectType',\n            'revenue|asset|expense|liabilities'\n        );\n        Route::post('store', ['uses' => 'Account\\CreateController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{account}', ['uses' => 'Account\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{account}', ['uses' => 'Account\\EditController@update', 'as' => 'update']);\n\n        // delete\n        Route::get('delete/{account}', ['uses' => 'Account\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{account}', ['uses' => 'Account\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // show\n        Route::get('show/{account}/all', ['uses' => 'Account\\ShowController@showAll', 'as' => 'show.all']);\n        Route::get('show/{account}/{start_date?}/{end_date?}', ['uses' => 'Account\\ShowController@show', 'as' => 'show']);\n\n        // reconcile routes:\n        Route::get('reconcile/{account}/index/{start_date?}/{end_date?}', ['uses' => 'Account\\ReconcileController@reconcile', 'as' => 'reconcile']);\n        Route::post('reconcile/{account}/submit/{start_date?}/{end_date?}', ['uses' => 'Account\\ReconcileController@submit', 'as' => 'reconcile.submit']);\n\n        // reconcile JSON routes\n        Route::get('reconcile/{account}/overview/{start_date?}/{end_date?}', ['uses' => 'Json\\ReconcileController@overview', 'as' => 'reconcile.overview']);\n        Route::get(\n            'reconcile/{account}/transactions/{start_date?}/{end_date?}',\n            ['uses' => 'Json\\ReconcileController@transactions', 'as' => 'reconcile.transactions']\n        );\n    }\n);\n\n/**\n * Attachment Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'attachments', 'as' => 'attachments.'],\n    static function () {\n        Route::get('', ['uses' => 'AttachmentController@index', 'as' => 'index']);\n        Route::get('edit/{attachment}', ['uses' => 'AttachmentController@edit', 'as' => 'edit']);\n        Route::get('delete/{attachment}', ['uses' => 'AttachmentController@delete', 'as' => 'delete']);\n        Route::get('download/{attachment}', ['uses' => 'AttachmentController@download', 'as' => 'download']);\n        Route::get('view/{attachment}', ['uses' => 'AttachmentController@view', 'as' => 'view']);\n\n        Route::post('update/{attachment}', ['uses' => 'AttachmentController@update', 'as' => 'update']);\n        Route::post('destroy/{attachment}', ['uses' => 'AttachmentController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Bills Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'bills', 'as' => 'bills.'],\n    static function () {\n        Route::get('', ['uses' => 'Bill\\IndexController@index', 'as' => 'index']);\n        Route::get('rescan/{bill}', ['uses' => 'Bill\\ShowController@rescan', 'as' => 'rescan']);\n        Route::get('create', ['uses' => 'Bill\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{bill}', ['uses' => 'Bill\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{bill}', ['uses' => 'Bill\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('show/{bill}', ['uses' => 'Bill\\ShowController@show', 'as' => 'show']);\n\n        Route::post('store', ['uses' => 'Bill\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{bill}', ['uses' => 'Bill\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{bill}', ['uses' => 'Bill\\DeleteController@destroy', 'as' => 'destroy']);\n\n        Route::post('set-order/{bill}', ['uses' => 'Bill\\IndexController@setOrder', 'as' => 'set-order']);\n    }\n);\n\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'subscriptions', 'as' => 'subscriptions.'],\n    static function () {\n        Route::get('', ['uses' => 'Bill\\IndexController@index', 'as' => 'index']);\n        Route::get('rescan/{bill}', ['uses' => 'Bill\\ShowController@rescan', 'as' => 'rescan']);\n        Route::get('create', ['uses' => 'Bill\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{bill}', ['uses' => 'Bill\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{bill}', ['uses' => 'Bill\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('show/{bill}', ['uses' => 'Bill\\ShowController@show', 'as' => 'show']);\n\n        Route::post('store', ['uses' => 'Bill\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{bill}', ['uses' => 'Bill\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{bill}', ['uses' => 'Bill\\DeleteController@destroy', 'as' => 'destroy']);\n\n        Route::post('set-order/{bill}', ['uses' => 'Bill\\IndexController@setOrder', 'as' => 'set-order']);\n    }\n);\n\n/**\n * Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'budgets', 'as' => 'budgets.'],\n    static function () {\n\n    // delete\n        Route::get('delete/{budget}', ['uses' => 'Budget\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{budget}', ['uses' => 'Budget\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // create\n        Route::get('create', ['uses' => 'Budget\\CreateController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Budget\\CreateController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{budget}', ['uses' => 'Budget\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{budget}', ['uses' => 'Budget\\EditController@update', 'as' => 'update']);\n\n        // show\n        Route::get('show/{budget}', ['uses' => 'Budget\\ShowController@show', 'as' => 'show']);\n        Route::get('show/{budget}/{budgetLimit}', ['uses' => 'Budget\\ShowController@showByBudgetLimit', 'as' => 'show.limit']);\n        Route::get('list/no-budget/all', ['uses' => 'Budget\\ShowController@noBudgetAll', 'as' => 'no-budget-all']);\n        Route::get('list/no-budget/{start_date?}/{end_date?}', ['uses' => 'Budget\\ShowController@noBudget', 'as' => 'no-budget']);\n\n        // reorder budgets\n        Route::post('reorder', ['uses' => 'Budget\\IndexController@reorder', 'as' => 'reorder']);\n\n        // index\n        Route::get('{start_date?}/{end_date?}', ['uses' => 'Budget\\IndexController@index', 'as' => 'index']);\n    }\n);\n\n/**\n * Available Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'available-budgets', 'as' => 'available-budgets.'],\n    static function () {\n\n        // create\n        Route::get('create/{start_date}/{end_date}/{currency?}', ['uses' => 'Budget\\AvailableBudgetController@create', 'as' => 'create']);\n        Route::get(\n            'create-alternative/{start_date}/{end_date}',\n            ['uses' => 'Budget\\AvailableBudgetController@createAlternative', 'as' => 'create-alternative']\n        );\n        Route::post('store', ['uses' => 'Budget\\AvailableBudgetController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{availableBudget}/{start_date}/{end_date}', ['uses' => 'Budget\\AvailableBudgetController@edit', 'as' => 'edit']);\n        Route::post('update/{availableBudget}/{start_date}/{end_date}', ['uses' => 'Budget\\AvailableBudgetController@update', 'as' => 'update']);\n\n        Route::post('delete', ['uses' => 'Budget\\AvailableBudgetController@delete', 'as' => 'delete']);\n    }\n);\n\n/**\n * Budget Limit Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'budget-limits', 'as' => 'budget-limits.'],\n    static function () {\n        Route::get('create/{budget}/{start_date}/{end_date}', ['uses' => 'Budget\\BudgetLimitController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Budget\\BudgetLimitController@store', 'as' => 'store']);\n\n        Route::post('delete/{budgetLimit}', ['uses' => 'Budget\\BudgetLimitController@delete', 'as' => 'delete']);\n\n        Route::post('update/{budgetLimit}', ['uses' => 'Budget\\BudgetLimitController@update', 'as' => 'update']);\n    }\n);\n\n/**\n * Category Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'categories', 'as' => 'categories.'],\n    static function () {\n\n    // index:\n        Route::get('', ['uses' => 'Category\\IndexController@index', 'as' => 'index']);\n\n        // create\n        Route::get('create', ['uses' => 'Category\\CreateController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Category\\CreateController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{category}', ['uses' => 'Category\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{category}', ['uses' => 'Category\\EditController@update', 'as' => 'update']);\n\n        // delete\n        Route::get('delete/{category}', ['uses' => 'Category\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{category}', ['uses' => 'Category\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // show category:\n        Route::get('show/{category}/all', ['uses' => 'Category\\ShowController@showAll', 'as' => 'show.all']);\n        Route::get('show/{category}/{start_date?}/{end_date?}', ['uses' => 'Category\\ShowController@show', 'as' => 'show']);\n\n        // no category controller:\n        Route::get('list/no-category/all', ['uses' => 'Category\\NoCategoryController@showAll', 'as' => 'no-category.all']);\n        Route::get('list/no-category/{start_date?}/{end_date?}', ['uses' => 'Category\\NoCategoryController@show', 'as' => 'no-category']);\n    }\n);\n\n/**\n * Currency Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'currencies', 'as' => 'currencies.'],\n    static function () {\n        Route::get('', ['uses' => 'CurrencyController@index', 'as' => 'index']);\n        Route::get('create', ['uses' => 'CurrencyController@create', 'as' => 'create']);\n        Route::get('edit/{currency}', ['uses' => 'CurrencyController@edit', 'as' => 'edit']);\n        Route::get('delete/{currency}', ['uses' => 'CurrencyController@delete', 'as' => 'delete']);\n        Route::post('default', ['uses' => 'CurrencyController@defaultCurrency', 'as' => 'default']);\n        Route::get('enable/{currency}', ['uses' => 'CurrencyController@enableCurrency', 'as' => 'enable']);\n        Route::get('disable/{currency}', ['uses' => 'CurrencyController@disableCurrency', 'as' => 'disable']);\n\n        Route::post('store', ['uses' => 'CurrencyController@store', 'as' => 'store']);\n        Route::post('update/{currency}', ['uses' => 'CurrencyController@update', 'as' => 'update']);\n        Route::post('destroy/{currency}', ['uses' => 'CurrencyController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Chart\\Account Controller (default report).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/account', 'as' => 'chart.account.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'AccountController@frontpage', 'as' => 'frontpage']);\n        Route::get('expense', ['uses' => 'AccountController@expenseAccounts', 'as' => 'expense']);\n        Route::get('revenue', ['uses' => 'AccountController@revenueAccounts', 'as' => 'revenue']);\n        Route::get('report/{accountList}/{start_date}/{end_date}', ['uses' => 'AccountController@report', 'as' => 'report']);\n        Route::get('period/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@period', 'as' => 'period']);\n\n        Route::get('income-category/{account}/all/all', ['uses' => 'AccountController@incomeCategoryAll', 'as' => 'income-category-all']);\n        Route::get('expense-category/{account}/all/all', ['uses' => 'AccountController@expenseCategoryAll', 'as' => 'expense-category-all']);\n        Route::get('expense-budget/{account}/all/all', ['uses' => 'AccountController@expenseBudgetAll', 'as' => 'expense-budget-all']);\n\n        Route::get('income-category/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@incomeCategory', 'as' => 'income-category']);\n        Route::get('expense-category/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@expenseCategory', 'as' => 'expense-category']);\n        Route::get('expense-budget/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@expenseBudget', 'as' => 'expense-budget']);\n    }\n);\n\n/**\n * Chart\\Bill Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/bill', 'as' => 'chart.bill.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'BillController@frontpage', 'as' => 'frontpage']);\n        Route::get('single/{bill}', ['uses' => 'BillController@single', 'as' => 'single']);\n    }\n);\n\n/**\n * Chart\\Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/budget', 'as' => 'chart.budget.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'BudgetController@frontpage', 'as' => 'frontpage']);\n        Route::get('period/0/{currency}/{accountList}/{start_date}/{end_date}', ['uses' => 'BudgetController@periodNoBudget', 'as' => 'period.no-budget']);\n        Route::get('period/{budget}/{currency}/{accountList}/{start_date}/{end_date}', ['uses' => 'BudgetController@period', 'as' => 'period']);\n        Route::get('budget/{budget}/{budgetLimit}', ['uses' => 'BudgetController@budgetLimit', 'as' => 'budget-limit']);\n        Route::get('budget/{budget}', ['uses' => 'BudgetController@budget', 'as' => 'budget']);\n\n        // these charts are used in budget/show:\n        Route::get('expense-category/{budget}/{budgetLimit?}', ['uses' => 'BudgetController@expenseCategory', 'as' => 'expense-category']);\n        Route::get('expense-asset/{budget}/{budgetLimit?}', ['uses' => 'BudgetController@expenseAsset', 'as' => 'expense-asset']);\n        Route::get('expense-expense/{budget}/{budgetLimit?}', ['uses' => 'BudgetController@expenseExpense', 'as' => 'expense-expense']);\n\n        // these charts are used in reports (category reports):\n        Route::get(\n            'category/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get(\n            'budget/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@budgetExpense', 'as' => 'budget-expense']\n        );\n        Route::get(\n            'source-account/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@sourceAccountExpense', 'as' => 'source-account-expense']\n        );\n        Route::get(\n            'destination-account/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@destinationAccountExpense', 'as' => 'destination-account-expense']\n        );\n        Route::get('operations/{accountList}/{budget}/{start_date}/{end_date}', ['uses' => 'BudgetReportController@mainChart', 'as' => 'main']);\n    }\n);\n\n/**\n * Chart\\Category Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/category', 'as' => 'chart.category.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'CategoryController@frontPage', 'as' => 'frontpage']);\n        Route::get('period/{category}', ['uses' => 'CategoryController@currentPeriod', 'as' => 'current']);\n        Route::get('period/{category}/{date}', ['uses' => 'CategoryController@specificPeriod', 'as' => 'specific']);\n        Route::get('all/{category}', ['uses' => 'CategoryController@all', 'as' => 'all']);\n        Route::get(\n            'report-period/0/{accountList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryController@reportPeriodNoCategory', 'as' => 'period.no-category']\n        );\n        Route::get('report-period/{category}/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@reportPeriod', 'as' => 'period']);\n\n        Route::get(\n            'category/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get(\n            'category/income/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@categoryIncome', 'as' => 'category-income']\n        );\n        Route::get(\n            'budget/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@budgetExpense', 'as' => 'budget-expense']\n        );\n        Route::get(\n            'source/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@sourceExpense', 'as' => 'source-expense']\n        );\n        Route::get(\n            'source/income/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@sourceIncome', 'as' => 'source-income']\n        );\n        Route::get(\n            'dest/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@destinationExpense', 'as' => 'dest-expense']\n        );\n        Route::get(\n            'dest/income/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@destinationIncome', 'as' => 'dest-income']\n        );\n        Route::get('operations/{accountList}/{category}/{start_date}/{end_date}', ['uses' => 'CategoryReportController@mainChart', 'as' => 'main']);\n    }\n);\n\n/**\n * Chart\\Tag Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/tag', 'as' => 'chart.tag.'],\n    static function () {\n        Route::get('tag/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@tagExpense', 'as' => 'tag-expense']);\n        Route::get('tag/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@tagIncome', 'as' => 'tag-income']);\n        Route::get(\n            'category/expense/{accountList}/{tagList}/{start_date}/{end_date}',\n            ['uses' => 'TagReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get('category/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@categoryIncome', 'as' => 'category-income']);\n        Route::get('budget/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@budgetExpense', 'as' => 'budget-expense']);\n        Route::get('source/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@sourceExpense', 'as' => 'source-expense']);\n        Route::get('source/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@sourceIncome', 'as' => 'source-income']);\n        Route::get('dest/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@destinationExpense', 'as' => 'dest-expense']);\n        Route::get('dest/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@destinationIncome', 'as' => 'dest-income']);\n\n        Route::get('operations/{accountList}/{tag}/{start_date}/{end_date}', ['uses' => 'TagReportController@mainChart', 'as' => 'main']);\n    }\n);\n\n/**\n * Chart\\Double Controller (for expense/revenue report).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/double', 'as' => 'chart.double.'],\n    static function () {\n        Route::get('main/{accountList}/{account}/{start_date}/{end_date}', ['uses' => 'DoubleReportController@mainChart', 'as' => 'main']);\n\n        Route::get(\n            'category/expense/{accountList}/{doubleList}/{start_date}/{end_date}',\n            ['uses' => 'DoubleReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get(\n            'category/income/{accountList}/{doubleList}/{start_date}/{end_date}',\n            ['uses' => 'DoubleReportController@categoryIncome', 'as' => 'category-income']\n        );\n        Route::get(\n            'budget/expense/{accountList}/{doubleList}/{start_date}/{end_date}',\n            ['uses' => 'DoubleReportController@budgetExpense', 'as' => 'budget-expense']\n        );\n\n        Route::get('tag/expense/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleReportController@tagExpense', 'as' => 'tag-expense']);\n        Route::get('tag/income/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleReportController@tagIncome', 'as' => 'tag-income']);\n    }\n);\n\n/**\n * Chart\\PiggyBank Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/piggy-bank', 'as' => 'chart.piggy-bank.'],\n    static function () {\n        Route::get('{piggyBank}', ['uses' => 'PiggyBankController@history', 'as' => 'history']);\n    }\n);\n\n/**\n * Chart\\Report Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/report', 'as' => 'chart.report.'],\n    static function () {\n        Route::get('operations/{accountList}/{start_date}/{end_date}', ['uses' => 'ReportController@operations', 'as' => 'operations']);\n        Route::get('net-worth/{accountList}/{start_date}/{end_date}/', ['uses' => 'ReportController@netWorth', 'as' => 'net-worth']);\n    }\n);\n\n/**\n * Chart\\Transactions Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/transactions', 'as' => 'chart.transactions.'],\n    static function () {\n        Route::get('categories/{objectType}/{start_date}/{end_date}', ['uses' => 'TransactionController@categories', 'as' => 'categories']);\n        Route::get('budgets/{start_date}/{end_date}', ['uses' => 'TransactionController@budgets', 'as' => 'budgets']);\n        Route::get(\n            'destinationAccounts/{objectType}/{start_date}/{end_date}',\n            ['uses' => 'TransactionController@destinationAccounts', 'as' => 'destinationAccounts']\n        );\n        Route::get('sourceAccounts/{objectType}/{start_date}/{end_date}', ['uses' => 'TransactionController@sourceAccounts', 'as' => 'sourceAccounts']);\n        //\n    }\n);\n\n/**\n * Export controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'export', 'as' => 'export.'],\n    static function () {\n\n    // index\n        Route::get('', ['uses' => 'Export\\IndexController@index', 'as' => 'index']);\n        Route::post('export', ['uses' => 'Export\\IndexController@export', 'as' => 'export']);\n    }\n);\n/**\n * Object group controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'groups', 'as' => 'object-groups.'],\n    static function () {\n\n        // index\n        Route::get('', ['uses' => 'ObjectGroup\\IndexController@index', 'as' => 'index']);\n        Route::post('set-order/{objectGroup}', ['uses' => 'ObjectGroup\\IndexController@setOrder', 'as' => 'set-order']);\n\n        // edit\n        Route::get('edit/{objectGroup}', ['uses' => 'ObjectGroup\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{objectGroup}', ['uses' => 'ObjectGroup\\EditController@update', 'as' => 'update']);\n\n        // delete\n        Route::get('delete/{objectGroup}', ['uses' => 'ObjectGroup\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{objectGroup}', ['uses' => 'ObjectGroup\\DeleteController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Help Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'help', 'as' => 'help.'],\n    static function () {\n        Route::get('{route}', ['uses' => 'HelpController@show', 'as' => 'show']);\n    }\n);\n\n/**\n * JScript Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'v1/jscript', 'as' => 'javascript.'],\n    static function () {\n        Route::get('variables', ['uses' => 'JavascriptController@variables', 'as' => 'variables']);\n        Route::get('accounts', ['uses' => 'JavascriptController@accounts', 'as' => 'accounts']);\n        Route::get('currencies', ['uses' => 'JavascriptController@currencies', 'as' => 'currencies']);\n    }\n);\n\n/**\n * JScript Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'v2/jscript', 'as' => 'javascript.v2.'],\n    static function () {\n        Route::get('variables', ['uses' => 'JavascriptController@variablesV2', 'as' => 'variables']);\n    }\n);\n\n/**\n * JSON Controller(s).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'json', 'as' => 'json.'],\n    static function () {\n\n        // budgets:\n        Route::get(\n            'budget/total-budgeted/{currency}/{start_date}/{end_date}',\n            ['uses' => 'Json\\BudgetController@getBudgetInformation', 'as' => 'budget.total-budgeted']\n        );\n        // boxes\n        Route::get('box/balance', ['uses' => 'Json\\BoxController@balance', 'as' => 'box.balance']);\n        Route::get('box/available', ['uses' => 'Json\\BoxController@available', 'as' => 'box.available']);\n        Route::get('box/net-worth', ['uses' => 'Json\\BoxController@netWorth', 'as' => 'box.net-worth']);\n\n        // rules\n        Route::get('trigger', ['uses' => 'Json\\RuleController@trigger', 'as' => 'trigger']);\n        Route::get('action', ['uses' => 'Json\\RuleController@action', 'as' => 'action']);\n\n        // front page\n        Route::get('frontpage/piggy-banks', ['uses' => 'Json\\FrontpageController@piggyBanks', 'as' => 'fp.piggy-banks']);\n\n        // currency conversion:\n        Route::get('rate/{fromCurrencyCode}/{toCurrencyCode}/{date}', ['uses' => 'Json\\ExchangeController@getRate', 'as' => 'rate']);\n\n        // intro things:\n        Route::any('intro/finished/{route}/{specificPage?}', ['uses' => 'Json\\IntroController@postFinished', 'as' => 'intro.finished']);\n        Route::post('intro/enable/{route}/{specificPage?}', ['uses' => 'Json\\IntroController@postEnable', 'as' => 'intro.enable']);\n        Route::get('intro/{route}/{specificPage?}', ['uses' => 'Json\\IntroController@getIntroSteps', 'as' => 'intro']);\n    }\n);\n\n/**\n * NewUser Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'new-user', 'as' => 'new-user.'],\n    static function () {\n        Route::get('', ['uses' => 'NewUserController@index', 'as' => 'index']);\n        Route::post('submit', ['uses' => 'NewUserController@submit', 'as' => 'submit']);\n    }\n);\n\n/**\n * Piggy Bank Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'piggy-banks', 'as' => 'piggy-banks.'],\n    static function () {\n\n        Route::get('', ['uses' => 'PiggyBank\\IndexController@index', 'as' => 'index']);\n        Route::get('add/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@add', 'as' => 'add-money']);\n        Route::get('remove/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@remove', 'as' => 'remove-money']);\n        Route::get('add-money/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@addMobile', 'as' => 'add-money-mobile']);\n        Route::get('remove-money/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@removeMobile', 'as' => 'remove-money-mobile']);\n        Route::get('create', ['uses' => 'PiggyBank\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{piggyBank}', ['uses' => 'PiggyBank\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{piggyBank}', ['uses' => 'PiggyBank\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('show/{piggyBank}', ['uses' => 'PiggyBank\\ShowController@show', 'as' => 'show']);\n        Route::post('store', ['uses' => 'PiggyBank\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{piggyBank}', ['uses' => 'PiggyBank\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{piggyBank}', ['uses' => 'PiggyBank\\DeleteController@destroy', 'as' => 'destroy']);\n        Route::post('add/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@postAdd', 'as' => 'add']);\n        Route::post('remove/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@postRemove', 'as' => 'remove']);\n\n        Route::post('set-order/{piggyBank}', ['uses' => 'PiggyBank\\IndexController@setOrder', 'as' => 'set-order']);\n    }\n);\n\n/**\n * Preferences Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'preferences', 'as' => 'preferences.'],\n    static function () {\n        Route::get('', ['uses' => 'PreferencesController@index', 'as' => 'index']);\n        Route::post('', ['uses' => 'PreferencesController@postIndex', 'as' => 'update']);\n    }\n);\n\n/**\n * Profile Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'profile', 'as' => 'profile.'],\n    static function () {\n        Route::get('', ['uses' => 'ProfileController@index', 'as' => 'index']);\n        Route::get('change-email', ['uses' => 'ProfileController@changeEmail', 'as' => 'change-email']);\n        Route::get('change-password', ['uses' => 'ProfileController@changePassword', 'as' => 'change-password']);\n        Route::get('delete-account', ['uses' => 'ProfileController@deleteAccount', 'as' => 'delete-account']);\n\n        Route::post('delete-account', ['uses' => 'ProfileController@postDeleteAccount', 'as' => 'delete-account.post']);\n        Route::post('change-password', ['uses' => 'ProfileController@postChangePassword', 'as' => 'change-password.post']);\n        Route::post('change-email', ['uses' => 'ProfileController@postChangeEmail', 'as' => 'change-email.post']);\n        Route::post('regenerate', ['uses' => 'ProfileController@regenerate', 'as' => 'regenerate']);\n\n        Route::get('logout-others', ['uses' => 'ProfileController@logoutOtherSessions', 'as' => 'logout-others']);\n        Route::post('logout-others', ['uses' => 'ProfileController@postLogoutOtherSessions', 'as' => 'logout-others.post']);\n\n        // new 2FA routes\n        Route::post('enable2FA', ['uses' => 'ProfileController@enable2FA', 'as' => 'enable2FA']);\n        Route::get('2fa/code', ['uses' => 'ProfileController@code', 'as' => 'code']);\n        Route::post('2fa/code', ['uses' => 'ProfileController@postCode', 'as' => 'code.store']);\n        Route::get('/delete-code', ['uses' => 'ProfileController@deleteCode', 'as' => 'delete-code']);\n        Route::get('2fa/new-codes', ['uses' => 'ProfileController@newBackupCodes', 'as' => 'new-backup-codes']);\n\n    }\n);\n\n/**\n * Recurring Transactions Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'recurring', 'as' => 'recurring.'],\n    static function () {\n        Route::get('', ['uses' => 'Recurring\\IndexController@index', 'as' => 'index']);\n\n        Route::get('show/{recurrence}', ['uses' => 'Recurring\\ShowController@show', 'as' => 'show']);\n        Route::get('create', ['uses' => 'Recurring\\CreateController@create', 'as' => 'create']);\n        Route::get('create-from-transaction/{tj}', ['uses' => 'Recurring\\CreateController@createFromJournal', 'as' => 'create-from-journal']);\n        Route::get('edit/{recurrence}', ['uses' => 'Recurring\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{recurrence}', ['uses' => 'Recurring\\DeleteController@delete', 'as' => 'delete']);\n\n        Route::post('store', ['uses' => 'Recurring\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{recurrence}', ['uses' => 'Recurring\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{recurrence}', ['uses' => 'Recurring\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // JSON routes:\n        Route::get('events', ['uses' => 'Json\\RecurrenceController@events', 'as' => 'events']);\n        Route::get('suggest', ['uses' => 'Json\\RecurrenceController@suggest', 'as' => 'suggest']);\n    }\n);\n\n/**\n * Report Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'reports', 'as' => 'reports.'],\n    static function () {\n        Route::get('', ['uses' => 'ReportController@index', 'as' => 'index']);\n        Route::get('options/{reportType}', ['uses' => 'ReportController@options', 'as' => 'options']);\n        Route::get('default/{accountList}/{start_date}/{end_date}', ['uses' => 'ReportController@defaultReport', 'as' => 'report.default']);\n        Route::get('audit/{accountList}/{start_date}/{end_date}', ['uses' => 'ReportController@auditReport', 'as' => 'report.audit']);\n        Route::get('category/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'ReportController@categoryReport', 'as' => 'report.category']);\n        Route::get('budget/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'ReportController@budgetReport', 'as' => 'report.budget']);\n        Route::get('tag/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'ReportController@tagReport', 'as' => 'report.tag']);\n        Route::get('double/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'ReportController@doubleReport', 'as' => 'report.double']);\n\n        Route::post('', ['uses' => 'ReportController@postIndex', 'as' => 'index.post']);\n    }\n);\n\n/**\n * Report Data AccountController.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/account', 'as' => 'report-data.account.'],\n    static function () {\n        Route::get('general/{accountList}/{start_date}/{end_date}', ['uses' => 'AccountController@general', 'as' => 'general']);\n    }\n);\n\n/**\n * Report Data Bill Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/bill', 'as' => 'report-data.bills.'],\n    static function () {\n        Route::get('overview/{accountList}/{start_date}/{end_date}', ['uses' => 'BillController@overview', 'as' => 'overview']);\n    }\n);\n\n/**\n * Report Double Data Expense / Revenue Account Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/double', 'as' => 'report-data.double.'],\n    static function () {\n\n        // spent + earned per combination.\n        Route::get('operations/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@operations', 'as' => 'operations']);\n        Route::get('ops-asset/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@operationsPerAsset', 'as' => 'ops-asset']);\n\n        Route::get('top-expenses/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@avgExpenses', 'as' => 'avg-expenses']);\n\n        Route::get('top-income/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@topIncome', 'as' => 'top-income']);\n        Route::get('avg-income/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@avgIncome', 'as' => 'avg-income']);\n    }\n);\n\n/**\n * Report Data Income/Expenses Controller (called financial operations).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/operations',\n     'as'         => 'report-data.operations.',],\n    static function () {\n        Route::get('operations/{accountList}/{start_date}/{end_date}', ['uses' => 'OperationsController@operations', 'as' => 'operations']);\n        Route::get('income/{accountList}/{start_date}/{end_date}', ['uses' => 'OperationsController@income', 'as' => 'income']);\n        Route::get('expenses/{accountList}/{start_date}/{end_date}', ['uses' => 'OperationsController@expenses', 'as' => 'expenses']);\n    }\n);\n\n/**\n * Report Data Category Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/category',\n     'as'         => 'report-data.category.',],\n    static function () {\n\n// See reference nr. 3\n        Route::get('operations/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@operations', 'as' => 'operations']);\n        Route::get('income/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@income', 'as' => 'income']);\n        Route::get('expenses/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@expenses', 'as' => 'expenses']);\n\n        Route::get('accounts/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@accounts', 'as' => 'accounts']);\n        Route::get('categories/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@categories', 'as' => 'categories']);\n        Route::get(\n            'account-per-category/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryController@accountPerCategory', 'as' => 'account-per-category']\n        );\n\n        Route::get('top-expenses/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@avgExpenses', 'as' => 'avg-expenses']);\n\n        Route::get('top-income/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@topIncome', 'as' => 'top-income']);\n        Route::get('avg-income/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@avgIncome', 'as' => 'avg-income']);\n    }\n);\n\n/**\n * Report Data TAG Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/tag',\n     'as'         => 'report-data.tag.',],\n    static function () {\n        Route::get('accounts/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@accounts', 'as' => 'accounts']);\n        Route::get('tags/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@tags', 'as' => 'tags']);\n        Route::get('account-per-tag/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@accountPerTag', 'as' => 'account-per-tag']);\n\n        Route::get('top-expenses/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@avgExpenses', 'as' => 'avg-expenses']);\n\n        Route::get('top-income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@topIncome', 'as' => 'top-income']);\n        Route::get('avg-income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@avgIncome', 'as' => 'avg-income']);\n    }\n);\n\n/**\n * Report Data Balance Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/balance', 'as' => 'report-data.balance.'],\n    static function () {\n        Route::get('general/{accountList}/{start_date}/{end_date}', ['uses' => 'BalanceController@general', 'as' => 'general']);\n    }\n);\n\n/**\n * Report Data Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/budget', 'as' => 'report-data.budget.'],\n    static function () {\n        Route::get('general/{accountList}/{start_date}/{end_date}/', ['uses' => 'BudgetController@general', 'as' => 'general']);\n// See reference nr. 4\n        Route::get('period/{accountList}/{start_date}/{end_date}', ['uses' => 'BudgetController@period', 'as' => 'period']);\n\n        Route::get('accounts/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@accounts', 'as' => 'accounts']);\n        Route::get('budgets/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@budgets', 'as' => 'budgets']);\n        Route::get(\n            'account-per-budget/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetController@accountPerBudget', 'as' => 'account-per-budget']\n        );\n        Route::get('top-expenses/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@avgExpenses', 'as' => 'avg-expenses']);\n    }\n);\n\n/**\n * Rules Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'rules', 'as' => 'rules.'],\n    static function () {\n\n    // create controller\n        Route::get('create/{ruleGroup?}', ['uses' => 'Rule\\CreateController@create', 'as' => 'create']);\n        Route::get('create-from-bill/{bill}', ['uses' => 'Rule\\CreateController@createFromBill', 'as' => 'create-from-bill']);\n        Route::get('create-from-journal/{tj}', ['uses' => 'Rule\\CreateController@createFromJournal', 'as' => 'create-from-journal']);\n        Route::post('store', ['uses' => 'Rule\\CreateController@store', 'as' => 'store']);\n        Route::get('duplicate/{rule}', ['uses' => 'Rule\\CreateController@duplicate', 'as' => 'duplicate']);\n\n        // delete controller\n        Route::get('delete/{rule}', ['uses' => 'Rule\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{rule}', ['uses' => 'Rule\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // index controller\n        Route::get('', ['uses' => 'Rule\\IndexController@index', 'as' => 'index']);\n\n        Route::post('move-rule/{rule}/{ruleGroup}', ['uses' => 'Rule\\IndexController@moveRule', 'as' => 'move-rule']);\n        // select controller\n        Route::get('test', ['uses' => 'Rule\\SelectController@testTriggers', 'as' => 'test-triggers']);\n        Route::get('test-rule/{rule}', ['uses' => 'Rule\\SelectController@testTriggersByRule', 'as' => 'test-triggers-rule']);\n        Route::get('search/{rule}', ['uses' => 'Rule\\IndexController@search', 'as' => 'search']);\n        Route::get('select/{rule}', ['uses' => 'Rule\\SelectController@selectTransactions', 'as' => 'select-transactions']);\n        Route::post('execute/{rule}', ['uses' => 'Rule\\SelectController@execute', 'as' => 'execute']);\n\n        // edit controller\n        Route::get('edit/{rule}', ['uses' => 'Rule\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{rule}', ['uses' => 'Rule\\EditController@update', 'as' => 'update']);\n    }\n);\n\n/**\n * Rule Groups Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'rule-groups', 'as' => 'rule-groups.'],\n    static function () {\n        Route::get('create', ['uses' => 'RuleGroup\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{ruleGroup}', ['uses' => 'RuleGroup\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('up/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@up', 'as' => 'up']);\n        Route::get('down/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@down', 'as' => 'down']);\n        Route::get('select/{ruleGroup}', ['uses' => 'RuleGroup\\ExecutionController@selectTransactions', 'as' => 'select-transactions']);\n\n        Route::post('store', ['uses' => 'RuleGroup\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{ruleGroup}', ['uses' => 'RuleGroup\\DeleteController@destroy', 'as' => 'destroy']);\n        Route::post('execute/{ruleGroup}', ['uses' => 'RuleGroup\\ExecutionController@execute', 'as' => 'execute']);\n    }\n);\n\n/**\n * Search Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'search', 'as' => 'search.'],\n    static function () {\n        Route::get('', ['uses' => 'SearchController@index', 'as' => 'index']);\n        Route::any('search', ['uses' => 'SearchController@search', 'as' => 'search']);\n    }\n);\n\n/**\n * Tag Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'tags', 'as' => 'tags.'],\n    static function () {\n        Route::get('', ['uses' => 'TagController@index', 'as' => 'index']);\n        Route::get('create', ['uses' => 'TagController@create', 'as' => 'create']);\n\n        Route::get('show/{tagOrId}/all', ['uses' => 'TagController@showAll', 'as' => 'show.all']);\n        Route::get('show/{tagOrId}/{start_date?}/{end_date?}', ['uses' => 'TagController@show', 'as' => 'show']);\n\n        Route::get('edit/{tag}', ['uses' => 'TagController@edit', 'as' => 'edit']);\n        Route::get('delete/{tag}', ['uses' => 'TagController@delete', 'as' => 'delete']);\n\n        Route::post('store', ['uses' => 'TagController@store', 'as' => 'store']);\n        Route::post('update/{tag}', ['uses' => 'TagController@update', 'as' => 'update']);\n        Route::post('destroy/{tag}', ['uses' => 'TagController@destroy', 'as' => 'destroy']);\n        Route::post('mass-destroy', ['uses' => 'TagController@massDestroy', 'as' => 'mass-destroy']);\n    }\n);\n\n/**\n * Transaction Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'transactions', 'as' => 'transactions.'],\n    static function () {\n\n    // show groups:\n// See reference nr. 5\n        Route::get('{what}/all', ['uses' => 'Transaction\\IndexController@indexAll', 'as' => 'index.all'])->where(\n            ['what' => 'withdrawal|deposit|transfers|transfer']\n        );\n\n        Route::get('{what}/{start_date?}/{end_date?}', ['uses' => 'Transaction\\IndexController@index', 'as' => 'index'])->where(\n            ['what' => 'withdrawal|deposit|transfers|transfer']\n        );\n\n        // create group:\n        Route::get('create/{objectType}', ['uses' => 'Transaction\\CreateController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Transaction\\CreateController@store', 'as' => 'store']);\n\n        // clone group\n        Route::get('clone/{transactionGroup}', ['uses' => 'Transaction\\CreateController@cloneGroup', 'as' => 'clone']);\n\n        // edit group\n        Route::get('edit/{transactionGroup}', ['uses' => 'Transaction\\EditController@edit', 'as' => 'edit']);\n        Route::post('update', ['uses' => 'Transaction\\EditController@update', 'as' => 'update']);\n\n        // delete group\n        Route::get('delete/{transactionGroup}', ['uses' => 'Transaction\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{transactionGroup}', ['uses' => 'Transaction\\DeleteController@destroy', 'as' => 'destroy']);\n\n        Route::get('show/{transactionGroup}', ['uses' => 'Transaction\\ShowController@show', 'as' => 'show']);\n        Route::get('debug/{transactionGroup}', ['uses' => 'Transaction\\ShowController@debugShow', 'as' => 'debug']);\n    }\n);\n\n/**\n * Transaction Mass Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/mass', 'as' => 'transactions.mass.'],\n    static function () {\n        Route::get('edit/{journalList}', ['uses' => 'MassController@edit', 'as' => 'edit']);\n        Route::get('delete/{journalList}', ['uses' => 'MassController@delete', 'as' => 'delete']);\n        Route::post('update', ['uses' => 'MassController@update', 'as' => 'update']);\n        Route::post('destroy', ['uses' => 'MassController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Transaction Bulk Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/bulk', 'as' => 'transactions.bulk.'],\n    static function () {\n        Route::get('edit/{journalList}', ['uses' => 'BulkController@edit', 'as' => 'edit']);\n        Route::post('update', ['uses' => 'BulkController@update', 'as' => 'update']);\n    }\n);\n\n/**\n * Transaction Convert Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/convert',\n     'as'         => 'transactions.convert.',],\n    static function () {\n        Route::get('{transactionType}/{transactionGroup}', ['uses' => 'ConvertController@index', 'as' => 'index']);\n        Route::post('{transactionType}/{transactionGroup}', ['uses' => 'ConvertController@postIndex', 'as' => 'index.post']);\n    }\n);\n\n/**\n * Transaction Link Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/link', 'as' => 'transactions.link.'],\n    static function () {\n        Route::get('modal/{tj}', ['uses' => 'LinkController@modal', 'as' => 'modal']);\n\n// See reference nr. 6\n        Route::post('store/{tj}', ['uses' => 'LinkController@store', 'as' => 'store']);\n        Route::get('delete/{journalLink}', ['uses' => 'LinkController@delete', 'as' => 'delete']);\n        Route::get('switch/{journalLink}', ['uses' => 'LinkController@switchLink', 'as' => 'switch']);\n\n        Route::post('destroy/{journalLink}', ['uses' => 'LinkController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Report Popup Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Popup', 'prefix' => 'popup', 'as' => 'popup.'],\n    static function () {\n        Route::get('general', ['uses' => 'ReportController@general', 'as' => 'general']);\n    }\n);\n\n/*\n * Webhooks management\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Webhooks', 'prefix' => 'webhooks', 'as' => 'webhooks.'],\n    static function () {\n        Route::get('index', ['uses' => 'IndexController@index', 'as' => 'index']);\n    }\n);\n\n/**\n * For the admin routes, the user must be logged in and have the role of 'owner'.\n */\nRoute::group(\n    ['middleware' => 'admin', 'namespace' => 'FireflyIII\\Http\\Controllers\\Admin', 'prefix' => 'admin', 'as' => 'admin.'],\n    static function () {\n\n    // admin home\n        Route::get('', ['uses' => 'HomeController@index', 'as' => 'index']);\n        Route::post('test-message', ['uses' => 'HomeController@testMessage', 'as' => 'test-message']);\n\n        // check for updates?\n        Route::get('update-check', ['uses' => 'UpdateController@index', 'as' => 'update-check']);\n        Route::any('update-check/manual', ['uses' => 'UpdateController@updateCheck', 'as' => 'update-check.manual']);\n        Route::post('update-check', ['uses' => 'UpdateController@post', 'as' => 'update-check.post']);\n\n        // user manager\n        Route::get('users', ['uses' => 'UserController@index', 'as' => 'users']);\n        Route::get('users/edit/{user}', ['uses' => 'UserController@edit', 'as' => 'users.edit']);\n        Route::get('users/delete/{user}', ['uses' => 'UserController@delete', 'as' => 'users.delete']);\n        Route::get('users/show/{user}', ['uses' => 'UserController@show', 'as' => 'users.show']);\n\n        Route::post('users/update/{user}', ['uses' => 'UserController@update', 'as' => 'users.update']);\n        Route::post('users/destroy/{user}', ['uses' => 'UserController@destroy', 'as' => 'users.destroy']);\n\n        // journal links manager\n        Route::get('links', ['uses' => 'LinkController@index', 'as' => 'links.index']);\n        Route::get('links/create', ['uses' => 'LinkController@create', 'as' => 'links.create']);\n        Route::get('links/show/{linkType}', ['uses' => 'LinkController@show', 'as' => 'links.show']);\n        Route::get('links/edit/{linkType}', ['uses' => 'LinkController@edit', 'as' => 'links.edit']);\n        Route::get('links/delete/{linkType}', ['uses' => 'LinkController@delete', 'as' => 'links.delete']);\n\n        Route::post('links/store', ['uses' => 'LinkController@store', 'as' => 'links.store']);\n        Route::post('links/update/{linkType}', ['uses' => 'LinkController@update', 'as' => 'links.update']);\n        Route::post('links/destroy/{linkType}', ['uses' => 'LinkController@destroy', 'as' => 'links.destroy']);\n\n        // FF configuration:\n        Route::get('configuration', ['uses' => 'ConfigurationController@index', 'as' => 'configuration.index']);\n        Route::post('configuration', ['uses' => 'ConfigurationController@postIndex', 'as' => 'configuration.index.post']);\n    }\n);\n"], "fixing_code": ["<?php\n/**\n * CurrencyController.php\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\ndeclare(strict_types=1);\n\nnamespace FireflyIII\\Http\\Controllers;\n\nuse FireflyIII\\Exceptions\\FireflyException;\nuse FireflyIII\\Http\\Requests\\CurrencyFormRequest;\nuse FireflyIII\\Models\\TransactionCurrency;\nuse FireflyIII\\Repositories\\Currency\\CurrencyRepositoryInterface;\nuse FireflyIII\\Repositories\\User\\UserRepositoryInterface;\nuse FireflyIII\\User;\nuse Illuminate\\Contracts\\View\\Factory;\nuse Illuminate\\Http\\RedirectResponse;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Pagination\\LengthAwarePaginator;\nuse Illuminate\\Routing\\Redirector;\nuse Illuminate\\View\\View;\nuse Log;\n\n/**\n * Class CurrencyController.\n */\nclass CurrencyController extends Controller\n{\n    protected CurrencyRepositoryInterface $repository;\n    protected UserRepositoryInterface     $userRepository;\n\n    /**\n     * CurrencyController constructor.\n     *\n     * @codeCoverageIgnore\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        $this->middleware(\n            function ($request, $next) {\n                app('view')->share('title', (string)trans('firefly.currencies'));\n                app('view')->share('mainTitleIcon', 'fa-usd');\n                $this->repository     = app(CurrencyRepositoryInterface::class);\n                $this->userRepository = app(UserRepositoryInterface::class);\n\n                return $next($request);\n            }\n        );\n    }\n\n    /**\n     * Create a currency.\n     *\n     * @param Request $request\n     *\n     * @return Factory|RedirectResponse|Redirector|View\n     */\n    public function create(Request $request)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n\n            return redirect(route('currencies.index'));\n        }\n\n        $subTitleIcon = 'fa-plus';\n        $subTitle     = (string)trans('firefly.create_currency');\n\n        // put previous url in session if not redirect from store (not \"create another\").\n        if (true !== session('currencies.create.fromStore')) {\n            $this->rememberPreviousUri('currencies.create.uri');\n        }\n        $request->session()->forget('currencies.create.fromStore');\n\n        Log::channel('audit')->info('Create new currency.');\n\n        return prefixView('currencies.create', compact('subTitleIcon', 'subTitle'));\n    }\n\n    /**\n     * Make currency the default currency.\n     *\n     * @param Request $request\n     *\n     * @return RedirectResponse|Redirector\n     * @throws FireflyException\n     */\n    public function defaultCurrency(Request $request)\n    {\n        $currencyId = (int)$request->get('id');\n        if ($currencyId > 0) {\n            // valid currency?\n            $currency = $this->repository->find($currencyId);\n            if (null !== $currency) {\n                app('preferences')->set('currencyPreference', $currency->code);\n                app('preferences')->mark();\n                Log::channel('audit')->info(sprintf('Make %s the default currency.', $currency->code));\n\n                $this->repository->enable($currency);\n                $request->session()->flash('success', (string)trans('firefly.new_default_currency', ['name' => $currency->name]));\n\n                return redirect(route('currencies.index'));\n            }\n        }\n\n        return redirect(route('currencies.index'));\n    }\n\n    /**\n     * Deletes a currency.\n     *\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return Factory|RedirectResponse|Redirector|View\n     */\n    public function delete(Request $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to visit page to delete currency %s but is not site owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        if ($this->repository->currencyInUse($currency)) {\n            $location = $this->repository->currencyInUseAt($currency);\n            $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n            $request->session()->flash('error', $message);\n            Log::channel('audit')->info(sprintf('Tried to visit page to delete currency %s but currency is in use.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        // put previous url in session\n        $this->rememberPreviousUri('currencies.delete.uri');\n        $subTitle = (string)trans('form.delete_currency', ['name' => $currency->name]);\n        Log::channel('audit')->info(sprintf('Visit page to delete currency %s.', $currency->code));\n\n        return prefixView('currencies.delete', compact('currency', 'subTitle'));\n    }\n\n    /**\n     * Destroys a currency.\n     *\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function destroy(Request $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to delete currency %s but is not site owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        if ($this->repository->currencyInUse($currency)) {\n            $request->session()->flash('error', (string)trans('firefly.cannot_delete_currency', ['name' => e($currency->name)]));\n            Log::channel('audit')->info(sprintf('Tried to delete currency %s but is in use.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        if ($this->repository->isFallbackCurrency($currency)) {\n            $request->session()->flash('error', (string)trans('firefly.cannot_delete_fallback_currency', ['name' => e($currency->name)]));\n            Log::channel('audit')->info(sprintf('Tried to delete currency %s but is FALLBACK.', $currency->code));\n\n            return redirect(route('currencies.index'));\n        }\n\n        Log::channel('audit')->info(sprintf('Deleted currency %s.', $currency->code));\n        $this->repository->destroy($currency);\n\n        $request->session()->flash('success', (string)trans('firefly.deleted_currency', ['name' => $currency->name]));\n\n        return redirect($this->getPreviousUri('currencies.delete.uri'));\n    }\n\n    /**\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     * @throws FireflyException\n     */\n    public function disableCurrency(Request $request)\n    {\n        $currencyId = (int)$request->get('id');\n        if ($currencyId > 0) {\n            // valid currency?\n            $currency = $this->repository->find($currencyId);\n            if (null !== $currency) {\n                app('preferences')->mark();\n\n                /** @var User $user */\n                $user = auth()->user();\n                if (!$this->userRepository->hasRole($user, 'owner')) {\n\n                    $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n                    Log::channel('audit')->info(sprintf('Tried to disable currency %s but is not site owner.', $currency->code));\n\n                    return redirect(route('currencies.index'));\n\n                }\n\n                if ($this->repository->currencyInUse($currency)) {\n\n                    $location = $this->repository->currencyInUseAt($currency);\n                    $message  = (string)trans(sprintf('firefly.cannot_disable_currency_%s', $location), ['name' => e($currency->name)]);\n\n                    $request->session()->flash('error', $message);\n                    Log::channel('audit')->info(sprintf('Tried to disable currency %s but is in use.', $currency->code));\n\n                    return redirect(route('currencies.index'));\n                }\n\n                $this->repository->disable($currency);\n                Log::channel('audit')->info(sprintf('Disabled currency %s.', $currency->code));\n                // if no currencies are enabled, enable the first one in the DB (usually the EUR)\n                if (0 === $this->repository->get()->count()) {\n                    /** @var TransactionCurrency $first */\n                    $first = $this->repository->getAll()->first();\n                    if (null === $first) {\n                        throw new FireflyException('No currencies found.');\n                    }\n                    Log::channel('audit')->info(sprintf('Auto-enabled currency %s.', $first->code));\n                    $this->repository->enable($first);\n                    app('preferences')->set('currencyPreference', $first->code);\n                    app('preferences')->mark();\n                }\n\n                if ('EUR' === $currency->code) {\n                    session()->flash('warning', (string)trans('firefly.disable_EUR_side_effects'));\n                }\n\n                session()->flash('success', (string)trans('firefly.currency_is_now_disabled', ['name' => $currency->name]));\n            }\n        }\n\n        return redirect(route('currencies.index'));\n    }\n\n    /**\n     * Edit a currency.\n     *\n     * @param Request             $request\n     * @param TransactionCurrency $currency\n     *\n     * @return Factory|RedirectResponse|Redirector|View\n     */\n    public function edit(Request $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info(sprintf('Tried to edit currency %s but is not owner.', $currency->code));\n\n            return redirect(route('currencies.index'));\n\n        }\n\n        $subTitleIcon     = 'fa-pencil';\n        $subTitle         = (string)trans('breadcrumbs.edit_currency', ['name' => $currency->name]);\n        $currency->symbol = htmlentities($currency->symbol);\n\n        // code to handle active-checkboxes\n        $hasOldInput = null !== $request->old('_token');\n        $preFilled   = [\n            'enabled' => $hasOldInput ? (bool)$request->old('enabled') : $currency->enabled,\n        ];\n\n        $request->session()->flash('preFilled', $preFilled);\n        Log::channel('audit')->info('Edit currency.', $currency->toArray());\n\n        // put previous url in session if not redirect from store (not \"return_to_edit\").\n        if (true !== session('currencies.edit.fromUpdate')) {\n            $this->rememberPreviousUri('currencies.edit.uri');\n        }\n        $request->session()->forget('currencies.edit.fromUpdate');\n\n        return prefixView('currencies.edit', compact('currency', 'subTitle', 'subTitleIcon'));\n    }\n\n    /**\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function enableCurrency(Request $request)\n    {\n        $currencyId = (int)$request->get('id');\n        if ($currencyId > 0) {\n            // valid currency?\n            $currency = $this->repository->find($currencyId);\n            if (null !== $currency) {\n                app('preferences')->mark();\n\n                $this->repository->enable($currency);\n                session()->flash('success', (string)trans('firefly.currency_is_now_enabled', ['name' => $currency->name]));\n                Log::channel('audit')->info(sprintf('Enabled currency %s.', $currency->code));\n            }\n        }\n\n        return redirect(route('currencies.index'));\n    }\n\n    /**\n     * Show overview of currencies.\n     *\n     * @param Request $request\n     *\n     * @return Factory|View\n     * @throws FireflyException\n     */\n    public function index(Request $request)\n    {\n        /** @var User $user */\n        $user       = auth()->user();\n        $page       = 0 === (int)$request->get('page') ? 1 : (int)$request->get('page');\n        $pageSize   = (int)app('preferences')->get('listPageSize', 50)->data;\n        $collection = $this->repository->getAll();\n        $total      = $collection->count();\n        $collection = $collection->slice(($page - 1) * $pageSize, $pageSize);\n        $currencies = new LengthAwarePaginator($collection, $total, $pageSize, $page);\n        $currencies->setPath(route('currencies.index'));\n\n        $defaultCurrency = $this->repository->getCurrencyByPreference(app('preferences')->get('currencyPreference', config('firefly.default_currency', 'EUR')));\n        $isOwner         = true;\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n            $request->session()->flash('info', (string)trans('firefly.ask_site_owner', ['owner' => config('firefly.site_owner')]));\n            $isOwner = false;\n        }\n\n        return prefixView('currencies.index', compact('currencies', 'defaultCurrency', 'isOwner'));\n    }\n\n    /**\n     * Store new currency.\n     *\n     * @param CurrencyFormRequest $request\n     *\n     * @return $this|RedirectResponse|Redirector\n     */\n    public function store(CurrencyFormRequest $request)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        $data = $request->getCurrencyData();\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            Log::error('User ' . auth()->user()->id . ' is not admin, but tried to store a currency.');\n            Log::channel('audit')->info('Tried to create (POST) currency without admin rights.', $data);\n\n            return redirect($this->getPreviousUri('currencies.create.uri'));\n\n        }\n\n        $data['enabled'] = true;\n        try {\n            $currency = $this->repository->store($data);\n        } catch (FireflyException $e) {\n            Log::error($e->getMessage());\n            Log::channel('audit')->info('Could not store (POST) currency without admin rights.', $data);\n            $request->session()->flash('error', (string)trans('firefly.could_not_store_currency'));\n            $currency = null;\n        }\n        $redirect = redirect($this->getPreviousUri('currencies.create.uri'));\n\n        if (null !== $currency) {\n            $request->session()->flash('success', (string)trans('firefly.created_currency', ['name' => $currency->name]));\n            Log::channel('audit')->info('Created (POST) currency.', $data);\n            if (1 === (int)$request->get('create_another')) {\n\n                $request->session()->put('currencies.create.fromStore', true);\n\n                $redirect = redirect(route('currencies.create'))->withInput();\n\n            }\n        }\n\n        return $redirect;\n    }\n\n    /**\n     * Updates a currency.\n     *\n     * @param CurrencyFormRequest $request\n     * @param TransactionCurrency $currency\n     *\n     * @return RedirectResponse|Redirector\n     */\n    public function update(CurrencyFormRequest $request, TransactionCurrency $currency)\n    {\n        /** @var User $user */\n        $user = auth()->user();\n        $data = $request->getCurrencyData();\n\n        if (false === $data['enabled'] && $this->repository->currencyInUse($currency)) {\n            $data['enabled'] = true;\n        }\n        if (!$this->userRepository->hasRole($user, 'owner')) {\n\n            $request->session()->flash('error', (string)trans('firefly.ask_site_owner', ['owner' => e(config('firefly.site_owner'))]));\n            Log::channel('audit')->info('Tried to update (POST) currency without admin rights.', $data);\n\n            return redirect(route('currencies.index'));\n\n        }\n        $currency = $this->repository->update($currency, $data);\n        Log::channel('audit')->info('Updated (POST) currency.', $data);\n        $request->session()->flash('success', (string)trans('firefly.updated_currency', ['name' => $currency->name]));\n        app('preferences')->mark();\n\n        if (1 === (int)$request->get('return_to_edit')) {\n\n            $request->session()->put('currencies.edit.fromUpdate', true);\n\n            return redirect(route('currencies.edit', [$currency->id]));\n\n        }\n\n        return redirect($this->getPreviousUri('currencies.edit.uri'));\n    }\n}\n", "<?php\n/**\n * CreateController.php\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\ndeclare(strict_types=1);\n\nnamespace FireflyIII\\Http\\Controllers\\Transaction;\n\nuse FireflyIII\\Events\\StoredTransactionGroup;\nuse FireflyIII\\Exceptions\\FireflyException;\nuse FireflyIII\\Http\\Controllers\\Controller;\nuse FireflyIII\\Models\\TransactionGroup;\nuse FireflyIII\\Repositories\\Account\\AccountRepositoryInterface;\nuse FireflyIII\\Repositories\\TransactionGroup\\TransactionGroupRepositoryInterface;\nuse FireflyIII\\Services\\Internal\\Update\\GroupCloneService;\nuse Illuminate\\Contracts\\View\\Factory;\nuse Illuminate\\Contracts\\View\\View;\nuse Illuminate\\Http\\JsonResponse;\nuse Illuminate\\Http\\Request;\n\n/**\n * Class CreateController\n */\nclass CreateController extends Controller\n{\n    private TransactionGroupRepositoryInterface $repository;\n\n    /**\n     * CreateController constructor.\n     *\n     * @codeCoverageIgnore\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        $this->middleware(\n            function ($request, $next) {\n                app('view')->share('title', (string)trans('firefly.transactions'));\n                app('view')->share('mainTitleIcon', 'fa-exchange');\n                $this->repository = app(TransactionGroupRepositoryInterface::class);\n\n                return $next($request);\n            }\n        );\n    }\n\n    /**\n     * @param Request $request\n     *\n     * @return JsonResponse\n     */\n    public function cloneGroup(Request $request): JsonResponse\n    {\n        $groupId = (int)$request->get('id');\n        if (0 !== $groupId) {\n            $group = $this->repository->find($groupId);\n            if (null !== $group) {\n                /** @var GroupCloneService $service */\n                $service  = app(GroupCloneService::class);\n                $newGroup = $service->cloneGroup($group);\n\n                // event!\n                event(new StoredTransactionGroup($newGroup));\n\n                app('preferences')->mark();\n\n                $title = $newGroup->title ?? $newGroup->transactionJournals->first()->description;\n                $link  = route('transactions.show', [$newGroup->id]);\n                session()->flash('success', trans('firefly.stored_journal', ['description' => $title]));\n                session()->flash('success_url', $link);\n\n                return response()->json(['redirect' => route('transactions.show', [$newGroup->id])]);\n            }\n        }\n\n        return response()->json(['redirect' => route('transactions.show', [$groupId])]);\n    }\n\n    /**\n     * Create a new transaction group.\n     *\n     * @param string|null $objectType\n     *\n     * @return Factory|View\n     * @throws FireflyException\n     */\n    public function create(?string $objectType)\n    {\n        app('preferences')->mark();\n\n        $sourceId      = (int)request()->get('source');\n        $destinationId = (int)request()->get('destination');\n\n        /** @var AccountRepositoryInterface $repository */\n        $repository           = app(AccountRepositoryInterface::class);\n        $cash                 = $repository->getCashAccount();\n        $preFilled            = session()->has('preFilled') ? session('preFilled') : [];\n        $subTitle             = (string)trans(sprintf('breadcrumbs.create_%s', strtolower((string)$objectType)));\n        $subTitleIcon         = 'fa-plus';\n        $optionalFields       = app('preferences')->get('transaction_journal_optional_fields', [])->data;\n        $allowedOpposingTypes = config('firefly.allowed_opposing_types');\n        $accountToTypes       = config('firefly.account_to_transaction');\n        $defaultCurrency      = app('amount')->getDefaultCurrency();\n        $previousUri          = $this->rememberPreviousUri('transactions.create.uri');\n        $parts                = parse_url($previousUri);\n        $search               = sprintf('?%s', $parts['query'] ?? '');\n        $previousUri          = str_replace($search, '', $previousUri);\n\n        session()->put('preFilled', $preFilled);\n\n        return prefixView(\n            'transactions.create',\n            compact(\n                'subTitleIcon',\n                'cash',\n                'objectType',\n                'subTitle',\n                'defaultCurrency',\n                'previousUri',\n                'optionalFields',\n                'preFilled',\n                'allowedOpposingTypes',\n                'accountToTypes',\n                'sourceId',\n                'destinationId'\n            )\n        );\n    }\n}\n", "/*\n * index.js\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\n */\n$(function () {\n    \"use strict\";\n    $('.make_default').on('click', setDefaultCurrency);\n\n    $('.enable-currency').on('click', enableCurrency);\n    $('.disable-currency').on('click', disableCurrency);\n});\n\nfunction setDefaultCurrency(e) {\n    var button = $(e.currentTarget);\n    var currencyId = parseInt(button.data('id'));\n\n    $.post(makeDefaultUrl, {\n        _token: token,\n        id: currencyId\n    }).done(function (data) {\n        // lame but it works\n        location.reload();\n    }).fail(function () {\n        console.error('I failed :(');\n    });\n    return false;\n}\n\nfunction enableCurrency(e) {\n    var button = $(e.currentTarget);\n    var currencyId = parseInt(button.data('id'));\n\n    $.post(enableCurrencyUrl, {\n        _token: token,\n        id: currencyId\n    }).done(function (data) {\n        // lame but it works\n        location.reload();\n    }).fail(function () {\n        console.error('I failed :(');\n    });\n    return false;\n}\n\nfunction disableCurrency(e) {\n    var button = $(e.currentTarget);\n    var currencyId = parseInt(button.data('id'));\n\n    $.post(disableCurrencyUrl, {\n        _token: token,\n        id: currencyId\n    }).done(function (data) {\n        // lame but it works\n        location.reload();\n    }).fail(function () {\n        console.error('I failed :(');\n    });\n    return false;\n}\n", "/*\n * groups.js\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nvar count = 0;\n\n$(document).ready(function () {\n    updateListButtons();\n    addSort();\n    $('.clone-transaction').click(cloneTransaction);\n});\n\nvar fixHelper = function (e, tr) {\n    \"use strict\";\n    var $originals = tr.children();\n    var $helper = tr.clone();\n    $helper.children().each(function (index) {\n        // Set helper cell sizes to match the original sizes\n        $(this).width($originals.eq(index).width());\n    });\n    return $helper;\n};\n\n/**\n *\n */\nfunction addSort() {\n    if (typeof $(\".table-sortable>tbody\").sortable !== \"undefined\") {\n        $('.table-sortable>tbody').sortable(\n            {\n                items: \"tr:not(.unsortable)\",\n                handle: '.object-handle',\n                stop: sortStop,\n                start: function (event, ui) {\n                    // Build a placeholder cell that spans all the cells in the row\n                    var cellCount = 0;\n                    $('td, th', ui.helper).each(function () {\n                        // For each TD or TH try and get it's colspan attribute, and add that or 1 to the total\n                        var colspan = 1;\n                        var colspanAttr = $(this).attr('colspan');\n                        if (colspanAttr > 1) {\n                            colspan = colspanAttr;\n                        }\n                        cellCount += colspan;\n                    });\n\n                    // Add the placeholder UI - note that this is the item's content, so TD rather than TR\n                    ui.placeholder.html('<td colspan=\"' + cellCount + '\">&nbsp;</td>');\n                }\n            }\n        );\n    }\n}\n\n/**\n *\n * @param event\n * @param ui\n * @returns {boolean|undefined}\n */\nfunction sortStop(event, ui) {\n    \"use strict\";\n    var current = $(ui.item);\n    var thisDate = current.data('date');\n    var originalBG = current.css('backgroundColor');\n\n\n    if (current.prev().data('date') !== thisDate && current.next().data('date') !== thisDate) {\n        // animate something with color:\n        current.animate({backgroundColor: \"#d9534f\"}, 200, function () {\n            $(this).animate({backgroundColor: originalBG}, 200);\n            return undefined;\n        });\n\n        return false;\n    }\n    //return false;\n    // do update\n    var list = $('tr[data-date=\"' + thisDate + '\"]');\n    var submit = [];\n    $.each(list, function (i, v) {\n        var row = $(v);\n        var id = row.data('id');\n        submit.push(id);\n    });\n\n    // do extra animation when done?\n    $.post('transactions/reorder', {items: submit, date: thisDate, _token: token});\n\n    current.animate({backgroundColor: \"#5cb85c\"}, 200, function () {\n        $(this).animate({backgroundColor: originalBG}, 200);\n        return undefined;\n    });\n    return undefined;\n}\n\n\n/**\n *\n */\nfunction updateListButtons() {\n    // top button to select all / deselect all:\n    $('input[name=\"select-all\"]').change(function () {\n        if (this.checked) {\n            checkAll();\n            countChecked();\n            updateActionButtons();\n        } else {\n            uncheckAll();\n            countChecked();\n            updateActionButtons();\n        }\n    });\n\n    // click the mass edit button:\n    $('.mass-edit').click(goToMassEdit);\n    // click the bulk edit button:\n    $('.bulk-edit').click(goToBulkEdit);\n    // click the delete button:\n    $('.mass-delete').click(goToMassDelete);\n\n    // click checkbox:\n    $('.mass-select').unbind('change').change(function () {\n        countChecked();\n        updateActionButtons();\n    });\n}\n\n/**\n *\n * @returns {boolean}\n */\nfunction goToMassEdit() {\n    console.log(mass_edit_url + '/' + getCheckboxes());\n    window.location.href = mass_edit_url + '/' + getCheckboxes();\n    return false;\n}\n\nfunction goToBulkEdit() {\n    console.log(bulk_edit_url + '/' + getCheckboxes());\n    window.location.href = bulk_edit_url + '/' + getCheckboxes();\n    return false;\n}\n\nfunction goToMassDelete() {\n    console.log(mass_delete_url + '/' + getCheckboxes());\n    window.location.href = mass_delete_url + '/' + getCheckboxes();\n    return false;\n}\n\n/**\n *\n * @returns {Array}\n */\nfunction getCheckboxes() {\n    \"use strict\";\n    var list = [];\n    $.each($('.mass-select'), function (i, v) {\n        var checkbox = $(v);\n        if (checkbox.prop('checked')) {\n            // add to list.\n            list.push(checkbox.val());\n        }\n    });\n    return list;\n}\n\n\nfunction countChecked() {\n    count = $('.mass-select:checked').length;\n}\n\nfunction checkAll() {\n    $('.mass-select').prop('checked', true);\n}\n\nfunction uncheckAll() {\n    $('.mass-select').prop('checked', false);\n}\n\nfunction updateActionButtons() {\n    if (0 !== count) {\n        $('.action-menu').show();\n\n        // also update labels:\n        $('.mass-edit span').text(edit_selected_txt + ' (' + count + ')');\n        $('.bulk-edit span').text(edit_bulk_selected_txt + ' (' + count + ')');\n        $('.mass-delete span').text(delete_selected_txt + ' (' + count + ')');\n\n    }\n    if (0 === count) {\n        $('.action-menu').hide();\n    }\n}\nfunction cloneTransaction(e) {\n    var button = $(e.currentTarget);\n    var groupId = parseInt(button.data('id'));\n\n    $.post(cloneGroupUrl, {\n        _token: token,\n        id: groupId\n    }).done(function (data) {\n        // lame but it works\n        location.href = data.redirect;\n    }).fail(function () {\n        console.error('I failed :(');\n    });\n    return false;\n}\n", "/*\n * show.js\n * Copyright (c) 2019 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/** global: autoCompleteUri */\n\n$(function () {\n    \"use strict\";\n    $('.link-modal').click(getLinkModal);\n    $('.clone-transaction').click(cloneTransaction);\n    $('#linkJournalModal').on('shown.bs.modal', function () {\n        makeAutoComplete();\n    })\n    $('[data-toggle=\"tooltip\"]').tooltip();\n});\n\nfunction getLinkModal(e) {\n    var button = $(e.currentTarget);\n    var journalId = parseInt(button.data('journal'));\n    var url = modalDialogURI.replace('%JOURNAL%', journalId);\n    console.log(url);\n    $.get(url).done(function (data) {\n        $('#linkJournalModal').html(data).modal('show');\n\n    }).fail(function () {\n        alert('Could not load the data to link journals. Sorry :(');\n        button.prop('disabled', true);\n    });\n\n    return false;\n}\n\nfunction makeAutoComplete() {\n\n    // input link-journal\n    var source = new Bloodhound({\n        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        prefetch: {\n            url: acURI + '?uid=' + uid,\n            filter: function (list) {\n                return $.map(list, function (item) {\n                    return item;\n                });\n            }\n        },\n        remote: {\n            url: acURI + '?query=%QUERY&uid=' + uid,\n            wildcard: '%QUERY',\n            filter: function (list) {\n                return $.map(list, function (item) {\n                    return item;\n                });\n            }\n        }\n    });\n    source.initialize();\n    $('.link-journal').typeahead({hint: true, highlight: true,}, {source: source, displayKey: 'name', autoSelect: false})\n        .on('typeahead:select', selectedJournal);\n}\n\nfunction selectedJournal(event, journal) {\n    $('#journal-selector').hide();\n    $('#journal-selection').show();\n    $('#selected-journal').html('<a href=\"' + groupURI.replace('%GROUP%', journal.transaction_group_id) + '\">' + journal.description + '</a>').show();\n    $('input[name=\"opposing\"]').val(journal.id);\n}\n\nfunction cloneTransaction(e) {\n    var button = $(e.currentTarget);\n    var groupId = parseInt(button.data('id'));\n\n    $.post(cloneGroupUrl, {\n        _token: token,\n        id: groupId\n    }).done(function (data) {\n        // lame but it works\n        location.href = data.redirect;\n    }).fail(function () {\n        console.error('I failed :(');\n    });\n    return false;\n}", "{% extends './v1/layout/default' %}\n\n{% block breadcrumbs %}\n    {{ Breadcrumbs.render(Route.getCurrentRoute.getName) }}\n{% endblock %}\n\n{% block content %}\n    <div class=\"row\">\n        <div class=\"col-lg-12 col-sm-12 col-md-12\">\n            <div class=\"box\">\n                <div class=\"box-header with-border\">\n                    <h3 class=\"box-title\">{{ 'currencies'|_ }}</h3>\n                    <a class=\"btn btn-success pull-right\" href=\"{{ route('currencies.create') }}\">{{ 'create_currency'|_ }}</a>\n                </div>\n                <div class=\"box-body\">\n                    <p class=\"text-info\">\n                        {{ 'currencies_intro'|_ }}\n                    </p>\n                    <p class=\"text-info\">\n                        {{ 'currencies_default_disabled'|_ }}\n                    </p>\n                    {% if currencies|length > 0 %}\n                        <div style=\"padding-left:8px;\">\n                            {{ currencies.links('v1.pagination.bootstrap-4')|raw }}\n                        </div>\n                        <table class=\"table table-hover\">\n                            <thead>\n                            <tr>\n                                {% if isOwner %}\n                                    <th>&nbsp;</th>\n                                {% endif %}\n                                <th>{{ 'currency'|_ }}</th>\n                                <th>{{ 'number_of_decimals'|_ }}</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {% for currency in currencies %}\n                                <tr>\n                                    {% if isOwner %}\n                                        <td>\n                                            <div class=\"btn-group btn-group-xs\">\n                                                <a class=\"btn btn-default\" href=\"{{ route('currencies.edit',currency.id) }}\"><span\n                                                            class=\"fa fa-fw fa-pencil\"></span></a>\n                                                <a class=\"btn btn-danger\" href=\"{{ route('currencies.delete',currency.id) }}\"><span\n                                                            class=\"fa fa-fw fa-trash\"></span></a>\n                                            </div>\n                                        </td>\n                                    {% endif %}\n                                    <td>\n                                        {% if currency.enabled == false %}\n                                        <span class=\"text-muted\">\n                                        {% endif %}\n                                            {{ currency.name }} ({{ currency.code }}) ({{ currency.symbol|raw }})\n                                        {% if currency.id == defaultCurrency.id %}\n                                            <span class=\"label label-success\" id=\"default-currency\">{{ 'default_currency'|_ }}</span>\n                                        {% endif %}\n                                            {% if currency.enabled == false %}\n                                        </span>\n                                    <br><small class=\"text-danger\">{{ 'currency_is_disabled'|_ }}</small>\n                                        {% endif %}\n                                    </td>\n\n                                    <td>{{ currency.decimal_places }}</td>\n                                    <td class=\"buttons\">\n                                        <div class=\"btn-group\">\n                                            {% if currency.id != defaultCurrency.id %}\n                                                <button data-id=\"{{ currency.id }}\" class=\"make_default btn btn-default\"><span\n                                                            class=\"fa fa-fw fa-star\"></span> {{ 'make_default_currency'|_ }}</button>\n                                            {% endif %}\n                                            {% if currency.enabled %}\n                                                <a class=\"btn btn-default disable-currency\" data-id=\"{{ currency.id }}\"\n                                                   href=\"#\">\n                                                    <span class=\"fa fa-fw fa-square-o\"></span>\n                                                    {{ 'disable_currency'|_ }}</a>\n                                            {% endif %}\n                                            {% if not currency.enabled %}\n                                                <a class=\"btn btn-default enable-currency\" data-id=\"{{ currency.id }}\"\n                                                   href=\"#\">\n                                                    <span class=\"fa fa-fw fa-check-square-o\"></span>\n                                                    {{ 'enable_currency'|_ }}</a>\n                                            {% endif %}\n                                        </div>\n                                    </td>\n                                </tr>\n                            {% endfor %}\n                            </tbody>\n                        </table>\n                        <div style=\"padding-left:8px;\">\n                            {{ currencies.links('v1.pagination.bootstrap-4')|raw }}\n                        </div>\n                    {% endif %}\n                </div>\n                <div class=\"box-footer\">\n                    <a class=\"btn btn-success pull-right\" href=\"{{ route('currencies.create') }}\">{{ 'create_currency'|_ }}</a>\n                </div>\n            </div>\n        </div>\n    </div>\n{% endblock %}\n{% block scripts %}\n    <script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n        var makeDefaultUrl = \"{{ route('currencies.default') }}\";\n        var disableCurrencyUrl = \"{{ route('currencies.disable') }}\";\n        var enableCurrencyUrl = \"{{ route('currencies.enable') }}\";\n    </script>\n    <script type=\"text/javascript\" src=\"v1/js/ff/currencies/index.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n{% endblock %}\n", "<table class=\"table table-condensed table-hover table-responsive table-sortable\">\n    <thead>\n    <tr>\n        {% if showCategory or showBudget %}\n            <td colspan=\"7\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% else %}\n            <td colspan=\"6\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% endif %}\n        <td colspan=\"1\" class=\"hidden-xs\">\n            <!-- Single button -->\n            <div class=\"btn-group btn-group-xs action-menu pull-right\" style=\"display: none;\">\n                <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{ 'actions'|_ }} <span class=\"caret\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a href=\"#\" class=\"mass-edit\"><span class=\"fa fa-fw fa-pencil\"></span>\n                            <span>{{ 'mass_edit'|_ }}</span></a></li>\n                    <li><a href=\"#\" class=\"bulk-edit\"><span class=\"fa fa-fw fa-pencil-square-o\"></span>\n                            <span>{{ 'bulk_edit'|_ }}</span></a></li>\n                    <li><a href=\"#\" class=\"mass-delete\"><span class=\"fa fa-fw fa-trash\"></span>\n                            <span>{{ 'mass_delete'|_ }}</span></a></li>\n                </ul>\n            </div>\n        </td>\n        <td colspan=\"1\" class=\"hidden-xs\">\n            <div class=\"pull-right\">\n                <input id=\"list_ALL\" value=\"1\" name=\"select-all\" type=\"checkbox\" class=\"select-all form-check-inline\"/>\n            </div>\n        </td>\n    </tr>\n    <tr>\n        <th class=\"hidden-xs\">&nbsp;</th>\n        <th>{{ trans('list.description') }}</th>\n        <th>{{ trans('list.amount') }}</th>\n        <th class=\"hidden-xs\">{{ trans('list.date') }}</th>\n        <th>{{ trans('list.source_account') }}</th>\n        <th>{{ trans('list.destination_account') }}</th>\n        {% if showCategory %}\n            <th class=\"hidden-xs\">{{ trans('list.category') }}</th>\n        {% endif %}\n        {% if showBudget %}\n            <th class=\"hidden-xs\">{{ trans('list.budget') }}</th>\n        {% endif %}\n        <th class=\"hidden-xs\">&nbsp;</th><!-- actions -->\n        <th class=\"hidden-xs\">&nbsp;</th><!-- checkbox -->\n    </tr>\n    </thead>\n    <tbody>\n    {% for group in groups %}\n        {% if group.count > 1 %}\n            <tr style=\"border-top:1px #aaa solid;\" class=\"unsortable\">\n                <td colspan=\"2\" style=\"border-top:1px #aaa solid;\">\n                    <small><strong>\n                            <a href=\"{{ route('transactions.show', [group.id]) }}\"\n                               title=\"{{ group.title }}\">{{ group.title }}</a>\n                        </strong></small>\n                </td>\n                <td colspan=\"2\" style=\"border-top:1px #aaa solid;\">\n                    {% for sum in group.sums %}\n                        {% if group.transaction_type == 'Deposit' %}\n                            {{ formatAmountBySymbol(sum.amount*-1, sum.currency_symbol, sum.currency_decimal_places) }}{% if loop.index != group.sums|length %},{% endif %}\n                        {% elseif group.transaction_type == 'Transfer' %}\n                            <span class=\"text-info\">\n                            {{ formatAmountBySymbol(sum.amount*-1, sum.currency_symbol, sum.currency_decimal_places, false) }}{% if loop.index != group.sums|length %},{% endif %}X\n                            </span>\n                        {% else %}\n                            {{ formatAmountBySymbol(sum.amount, sum.currency_symbol, sum.currency_decimal_places) }}{% if loop.index != group.sums|length %},{% endif %}\n                        {% endif %}\n                    {% endfor %}\n                </td>\n                <!-- column to span accounts + extra fields -->\n                {% if showCategory or showBudget %}\n                    <td style=\"border-top:1px #aaa solid;\" colspan=\"3\">&nbsp;</td>\n                {% else %}\n                    <td style=\"border-top:1px #aaa solid;\" colspan=\"2\">&nbsp;</td>\n                {% endif %}\n                <td style=\"border-top:1px #aaa solid;\" class=\"hidden-xs\">\n                    <div class=\"btn-group btn-group-xs pull-right\">\n                        <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {{ 'actions'|_ }} <span class=\"caret\"></span></button>\n                        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n                            <li><a href=\"{{ route('transactions.edit', [group.id]) }}\"><span\n                                            class=\"fa fa-fw fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                            <li><a href=\"{{ route('transactions.delete', [group.id]) }}\"><span\n                                            class=\"fa fa-fw fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                            <li><a href=\"#\" data-id=\"{{ group.id }}\" class=\"clone-transaction\"><span\n                                            class=\"fa fa-copy fa-fw\"></span> {{ 'clone'|_ }}</a></li>\n                        </ul>\n                    </div>\n                </td>\n                <td style=\"border-top:1px #aaa solid;\" class=\"hidden-xs\">&nbsp;</td>\n            </tr>\n        {% endif %}\n        {% for index, transaction in group.transactions %}\n            {% set style=\"\" %}\n            {% if group.transactions|length == loop.index and group.count > 1 %}\n                {% set style=\"border-bottom:1px #aaa solid;\" %}\n            {% endif %}\n            <tr data-date=\"{{ transaction.date.format('Y-m-d') }}\" data-count=\"{{ group.count }}\" data-id=\"{{ group.id }}\">\n                <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                    {% if transaction.transaction_type_type == 'Withdrawal' %}\n                        <span class=\"object-handle fa fa-long-arrow-left fa-fw\" title=\"{{ trans('firefly.Withdrawal') }}\"></span>\n                    {% endif %}\n\n                    {% if transaction.transaction_type_type == 'Deposit' %}\n                        <span class=\"object-handle fa fa-long-arrow-right fa-fw\" title=\"{{ trans('firefly.Deposit') }}\"></span>\n                    {% endif %}\n\n                    {% if transaction.transaction_type_type == 'Transfer' %}\n                        <span class=\"object-handle fa fa-exchange fa-fw\" title=\"{{ trans('firefly.Transfer') }}\"></span>\n                    {% endif %}\n\n                    {% if transaction.transaction_type_type == 'Reconciliation' %}\n                        <span class=\"object-handle fa-fw fa fa-calculator\" title=\"{{ trans('firefly.reconciliation_transaction') }}\"></span>\n                    {% endif %}\n                    {% if transaction.transaction_type_type == 'Opening balance' %}\n                        <span class=\"object-handle fa-fw fa fa-star-o\" title=\"{{ trans('firefly.Opening balance') }}\"></span>\n                    {% endif %}\n                    {% if transaction.transaction_type_type == 'Liability credit' %}\n                        <span class=\"object-handle fa-fw fa fa-star-o\" title=\"{{ trans('firefly.Liability credit') }}\"></span>\n                    {% endif %}\n\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {% if transaction.reconciled %}\n                        <span class=\"fa fa-check\"></span>\n                    {% endif %}\n                    {% if transaction.attachments|length > 0 %}\n                        <span class=\"fa fa-paperclip\"></span>\n                    {% endif %}\n                    {% if group.count == 1 %}\n                    <a href=\"{{ route('transactions.show', [group.id]) }}\" title=\"{{ transaction.description }}\">\n                        {% endif %}\n                        {{ transaction.description }}\n                        {% if group.count == 1 %}\n                    </a>\n                    {% endif %}\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {#  deposit #}\n                    {% if transaction.transaction_type_type == 'Deposit' %}\n                        {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                        {% if null != transaction.foreign_amount %}\n                            ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                        {% endif %}\n                    {# transfer #}\n                    {% elseif transaction.transaction_type_type == 'Transfer' %}\n                        <span class=\"text-info\">\n                        {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places, false) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places, false) }})\n                            {% endif %}\n                            </span>\n                    {# opening balance #}\n                    {% elseif transaction.transaction_type_type == 'Opening balance' %}\n                        {% if transaction.source_account_type == 'Initial balance account' %}\n                            {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% else %}\n                            {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% endif %}\n                    {# reconciliation #}\n                    {% elseif transaction.transaction_type_type == 'Reconciliation' %}\n                        {% if transaction.source_account_type == 'Reconciliation account' %}\n                            {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% else %}\n                            {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% endif %}\n                    {# liability credit #}\n                    {% elseif transaction.transaction_type_type == 'Liability credit' %}\n                        {% if transaction.source_account_type == 'Liability credit' %}\n                            {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% else %}\n                            {{ formatAmountBySymbol(transaction.amount*-1, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                            {% if null != transaction.foreign_amount %}\n                                ({{ formatAmountBySymbol(transaction.foreign_amount*-1, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                            {% endif %}\n                        {% endif %}\n\n\n                        {# THE REST #}\n                    {% else %}\n                        {{ formatAmountBySymbol(transaction.amount, transaction.currency_symbol, transaction.currency_decimal_places) }}\n                        {% if null != transaction.foreign_amount %}\n                            ({{ formatAmountBySymbol(transaction.foreign_amount, transaction.foreign_currency_symbol, transaction.foreign_currency_decimal_places) }})\n                        {% endif %}\n                    {% endif %}\n                </td>\n                <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                    {{ transaction.date.formatLocalized(monthAndDayFormat) }}\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {% if 'Cash account' == transaction.source_account_type %}\n                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                    {% else %}\n                        <a href=\"{{ route('accounts.show', [transaction.source_account_id|default(1)]) }}\"\n                           title=\"{{ transaction.source_account_iban|default(transaction.source_account_name) }}\">{{ transaction.source_account_name }}</a>\n                    {% endif %}\n                </td>\n                <td style=\" {{ style|raw }}\">\n                    {% if 'Cash account' == transaction.destination_account_type %}\n                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                    {% else %}\n                        <a href=\"{{ route('accounts.show', [transaction.destination_account_id|default(1)]) }}\"\n                           title=\"{{ transaction.destination_account_iban|default(transaction.destination_account_name) }}\">{{ transaction.destination_account_name }}</a>\n                    {% endif %}\n                </td>\n                {% if showCategory %}\n                    <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                        {% if transaction.category_id %}\n                            <a href=\"{{ route('categories.show', [transaction.category_id]) }}\"\n                               title=\"{{ transaction.category_name }}\">{{ transaction.category_name }}</a>\n                        {% endif %}\n                    </td>\n                {% endif %}\n                {% if showBudget %}\n                    <td style=\" {{ style|raw }}\" class=\"hidden-xs\">\n                        {% if transaction.budget_id %}\n                            <a href=\"{{ route('budgets.show', [transaction.budget_id]) }}\"\n                               title=\"{{ transaction.budget_name }}\">{{ transaction.budget_name }}</a>\n                        {% endif %}\n                    </td>\n                {% endif %}\n\n                {% if group.count == 1 %}\n                    <td style=\" {{ style|raw }};\" class=\"hidden-xs\">\n                        <div class=\"btn-group btn-group-xs pull-right\">\n                            <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                                {{ 'actions'|_ }} <span class=\"caret\"></span></button>\n                            <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n                                <li><a href=\"{{ route('transactions.edit', [group.id]) }}\"><span\n                                                class=\"fa fa-fw fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                                <li><a href=\"{{ route('transactions.delete', [group.id]) }}\"><span\n                                                class=\"fa fa-fw fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                                <li><a href=\"#\" data-id=\"{{ group.id }}\" class=\"clone-transaction\"><span\n                                                class=\"fa fa-copy fa-fw\"></span> {{ 'clone'|_ }}</a></li>\n                                <li>\n                                    <a href=\"{{ route('rules.create-from-journal', [transaction.transaction_journal_id]) }}\"><span\n                                                class=\"fa fa-fw fa-random\"></span> {{ 'create_rule_from_transaction'|_ }}\n                                    </a></li>\n                            </ul>\n                        </div>\n                    </td>\n\n                {% endif %}\n                {% if group.count != 1 %}\n                    <td style=\" {{ style|raw }};\" class=\"hidden-xs\">\n                        &nbsp;\n                    </td>\n                {% endif %}\n                <td style=\"{{ style|raw }}\" class=\"hidden-xs\">\n                    <div class=\"pull-right\">\n                        <input id=\"list_{{ transaction.transaction_journal_id }}\"\n                               value=\"{{ transaction.transaction_journal_id }}\"\n                               name=\"journals[{{ transaction.transaction_journal_id }}]\"\n                               type=\"checkbox\" class=\"mass-select form-check-inline\"\n                               data-value=\"{{ transaction.transaction_journal_id }}\"/>\n                    </div>\n                </td>\n            </tr>\n        {% endfor %}\n    {% endfor %}\n    </tbody>\n    <tfoot>\n    <tr>\n        <td colspan=\"8\">\n            <div class=\"pull-right\">\n                <!-- Single button -->\n                <div class=\"btn-group action-menu btn-group-xs pull-right\" style=\"display:none;\">\n                    <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {{ 'actions'|_ }} <span class=\"caret\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu btn-group-xs dropdown-menu-right\">\n                        <li><a href=\"#\" class=\"mass-edit\"><span class=\"fa fa-fw fa-pencil\"></span>\n                                <span>{{ 'mass_edit'|_ }}</span></a></li>\n                        <li><a href=\"#\" class=\"bulk-edit\"><span class=\"fa fa-fw fa-pencil-square-o\"></span>\n                                <span>{{ 'bulk_edit'|_ }}</span></a></li>\n                        <li><a href=\"#\" class=\"mass-delete\"><span class=\"fa fa-fw fa-trash\"></span>\n                                <span>{{ 'mass_delete'|_ }}</span></a></li>\n                    </ul>\n                </div>\n            </div>\n        </td>\n    </tr>\n    <tr>\n        {% if showCategory or showBudget %}\n            <td colspan=\"9\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% else %}\n            <td colspan=\"8\" class=\"no-margin-pagination\">{{ groups.links('v1.pagination.bootstrap-4')|raw }}</td>\n        {% endif %}\n    </tr>\n    </tfoot>\n</table>\n<script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n    var cloneGroupUrl = '{{ route('transactions.clone') }}';\n</script>\n", "{% extends './v1/layout/default' %}\n\n{% block breadcrumbs %}\n    {{ Breadcrumbs.render(Route.getCurrentRoute.getName, transactionGroup) }}\n{% endblock %}\n\n{% block content %}\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header with-border\">\n                    <h3 class=\"box-title\">{{ 'transaction_journal_information'|_ }}</h3>\n                    <div class=\"btn-group btn-group-xs pull-right\">\n                        <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {{ 'actions'|_}} <span class=\"caret\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu\">\n                            {# edit + delete #}\n                            <li><a href=\"{{ route('transactions.edit', [transactionGroup.id]) }}\"><span class=\"fa fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                            <li><a href=\"{{ route('transactions.delete', [transactionGroup.id]) }}\"><span class=\"fa fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n\n                            {# convert to different type #}\n                            {% if groupArray.transactions[0].type != 'withdrawal' %}\n                                <li><a href=\"{{ route('transactions.convert.index', ['withdrawal', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_withdrawal'|_ }}</a></li>\n                            {% endif %}\n\n                            {% if groupArray.transactions[0].type != 'deposit' %}\n                                <li><a href=\"{{ route('transactions.convert.index', ['deposit', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_deposit'|_ }}</a></li>\n                            {% endif %}\n\n                            {% if groupArray.transactions[0].type != 'transfer' %}\n                                <li><a href=\"{{ route('transactions.convert.index', ['transfer', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_transfer'|_ }}</a></li>\n                            {% endif %}\n\n                            {#  clone #}\n                            {% if groupArray.transactions[0].type != 'opening balance' and groupArray.transactions[0].type != 'reconciliation' %}\n                                <li role=\"separator\" class=\"divider\"></li>\n                                <li><a href=\"#\" class=\"clone-transaction\" data-id=\"{{ transactionGroup.id }}\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n                            {% endif %}\n\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"box-body no-padding\">\n                    <table class=\"table table-hover\">\n                        <tbody>\n                        <tr>\n                            <td>{{ trans('list.type') }}</td>\n                            <td>{{ first.transactiontype.type|_ }}</td>\n                        </tr>\n                        <tr>\n                            <td>{{ trans('list.description') }}</td>\n                            <td>\n                                {% if splits == 1 %}\n                                    {{ first.description }}\n                                {% else %}\n                                    {{ transactionGroup.title }}\n                                {% endif %}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"width:30%;\">{{ trans('list.date') }}</td>\n                            <td>\n                                {{ first.date.formatLocalized(dateTimeFormat) }}\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header with-border\">\n                    <h3 class=\"box-title\">{{ 'transaction_journal_meta'|_ }}</h3>\n                </div>\n                <div class=\"box-body no-padding\">\n                    <table class=\"table table-hover\">\n                        <tbody>\n                        {% if first.transactiontype.type != 'Withdrawal' or splits == 1 %}\n                            <tr>\n                                <td>\n                                    {{ trans_choice('firefly.source_accounts', accounts['source']|length ) }}\n                                </td>\n                                <td>\n                                    {% for account in accounts['source'] %}\n                                        {% if 'Cash account' == account.type %}\n                                            <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                        {% else %}\n                                            <a href=\"{{ route('accounts.show',account.id) }}\"\n                                               title=\"{{ account.iban|default(account.name) }}\">\n                                                {{ account.name }}\n                                            </a>\n                                        {% endif %}\n                                        {% if loop.index0 != accounts['source']|length -1 %}, {% endif %}\n                                    {% endfor %}\n                                </td>\n                            </tr>\n                        {% endif %}\n\n                        {% if first.transactiontype.type != 'Deposit' or splits == 1 %}\n                            <tr>\n                                <td>\n                                    {{ trans_choice('firefly.destination_accounts', accounts['destination']|length ) }}\n\n                                </td>\n                                <td>\n                                    {% for account in accounts['destination'] %}\n                                        {% if 'Cash account' == account.type %}\n                                            <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                        {% else %}\n                                            <a href=\"{{ route('accounts.show',account.id) }}\"\n                                               title=\"{{ account.iban|default(account.name) }}\">\n                                                {{ account.name }}\n                                            </a>\n                                        {% endif %}\n                                        {% if loop.index0 != accounts['destination']|length -1 %}, {% endif %}\n                                    {% endfor %}\n                                </td>\n                            </tr>\n                        {% endif %}\n                        <tr>\n                            <td style=\"width:30%;\">{{ 'total_amount'|_ }}</td>\n                            <td>\n                                {% for amount in amounts %}\n                                    {% if first.transactiontype.type == 'Withdrawal' or first.transactiontype.type == 'Deposit' %}\n                                        {{ formatAmountBySymbol(amount.amount*-1,amount.symbol, amount.decimal_places) }}{% if loop.index0 != amounts|length -1 %}, {% endif %}\n                                    {% elseif first.transactiontype.type == 'Transfer' %}\n                                        <span class=\"text-info\">\n                                        {{ formatAmountBySymbol(amount.amount, amount.symbol, amount.decimal_places, false) }}{% if loop.index0 != amounts|length -1 %}, {% endif %}\n                                    </span>\n                                    {% elseif first.transactiontype.type == 'Opening balance' %}\n                                        {# Opening balance stored amount is always negative: find out which way the money goes #}\n                                        {% if groupArray.transactions[0].source_type == 'Initial balance account' %}\n                                            {{ formatAmountBySymbol(amount.amount*-1,amount.symbol, amount.decimal_places) }}\n                                        {% else %}\n                                            {{ formatAmountBySymbol(amount.amount,amount.symbol, amount.decimal_places) }}\n                                        {% endif %}\n                                    {% endif %}\n                                {% endfor %}\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n\n    </div>\n    {% if splits > 1 %}\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <h3>{{ 'splits'|_ }}</h3>\n            </div>\n        </div>\n    {% endif %}\n    {% set boxSize=6 %}\n    {% if(splits == 2) %}\n        {% set boxSize=6 %}\n    {% endif %}\n    {% if (splits > 2) %}\n        {% set boxSize = 4 %}\n    {% endif %}\n    <div class=\"row\">\n        {% for index,journal in groupArray.transactions %}\n            <div class=\"col-lg-{{ boxSize }}\">\n                <div class=\"box\">\n                    <div class=\"box-header with-border\">\n                        <h3 class=\"box-title\">\n                            {{ journal.description }}\n                            {% if journal.reconciled %}\n                                <span class=\"fa fa-check\"></span>\n                            {% endif %}\n                            {% if splits > 1 %}\n                                <small>\n                                    {{ index+1 }} / {{ splits }}\n                                </small>\n                            {% endif %}\n                        </h3>\n\n\n                        <div class=\"btn-group btn-group-xs pull-right\">\n                            <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                {{ 'actions'|_}} <span class=\"caret\"></span>\n                            </button>\n                            <ul class=\"dropdown-menu\">\n                                {# edit + delete #}\n                                <li><a href=\"{{ route('transactions.edit', [transactionGroup.id]) }}\"><span class=\"fa fa-pencil\"></span> {{ 'edit'|_ }}</a></li>\n                                <li><a href=\"{{ route('transactions.delete', [transactionGroup.id]) }}\"><span class=\"fa fa-trash\"></span> {{ 'delete'|_ }}</a></li>\n                                <li role=\"separator\" class=\"divider\"></li>\n\n                                {# convert to different type #}\n                                {% if groupArray.transactions[0].type != 'withdrawal' %}\n                                    <li><a href=\"{{ route('transactions.convert.index', ['withdrawal', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_withdrawal'|_ }}</a></li>\n                                {% endif %}\n\n                                {% if groupArray.transactions[0].type != 'deposit' %}\n                                    <li><a href=\"{{ route('transactions.convert.index', ['deposit', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_deposit'|_ }}</a></li>\n                                {% endif %}\n\n                                {% if groupArray.transactions[0].type != 'transfer' %}\n                                    <li><a href=\"{{ route('transactions.convert.index', ['transfer', transactionGroup.id]) }}\"><span class=\"fa fa-exchange\"></span> {{ 'convert_to_transfer'|_ }}</a></li>\n                                {% endif %}\n\n                                {#  clone #}\n                                {% if groupArray.transactions[0].type != 'opening balance' and groupArray.transactions[0].type != 'reconciliation' %}\n                                    <li role=\"separator\" class=\"divider\"></li>\n                                    <li><a href=\"#\" data-id=\"{{ transactionGroup.id }}\" class=\"clone-transaction\"><span class=\"fa fa-copy\"></span> {{ 'clone'|_ }}</a></li>\n                                {% endif %}\n\n                                <li><a href=\"#\" class=\"link-modal\" data-journal=\"{{ journal.transaction_journal_id }}\"><span class=\"fa fa-fw fa-link\"></span>{{ 'link_transaction'|_ }}</a></li>\n                                <li role=\"separator\" class=\"divider\"></li>\n                                <li><a href=\"{{ route('rules.create-from-journal', [journal.transaction_journal_id]) }}\"><span class=\"fa fa-fw fa-random\"></span>{{ 'create_rule_from_transaction'|_ }}</a></li>\n                                <li><a href=\"{{ route('recurring.create-from-journal', [journal.transaction_journal_id]) }}\"><span class=\"fa fa-fw fa-paint-brush\"></span>{{ 'create_recurring_from_transaction'|_ }}</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"box-body no-padding\">\n                        <table class=\"table\">\n                            <tr>\n                                <td colspan=\"2\">\n                                    <!-- type is: \"{{ first.transactiontype.type }}\" -->\n                                    {% if 'Cash account' == journal.source_type %}\n                                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                    {% else %}\n                                        <a href=\"{{ route('accounts.show', journal.source_id) }}\"\n                                           title=\"{{ journal.source_iban|default(journal.source_name) }}\">{{ journal.source_name }}</a> &rarr;\n                                    {% endif %}\n\n                                    {% if first.transactiontype.type == 'Withdrawal' or first.transactiontype.type == 'Deposit' %}\n                                        {{ formatAmountBySymbol(journal.amount*-1, journal.currency_symbol, journal.currency_decimal_places) }}\n                                    {% elseif first.transactiontype.type == 'Transfer' or first.transactiontype.type == 'Opening balance' %}\n                                        <span class=\"text-info\">\n                                        {{ formatAmountBySymbol(journal.amount, journal.currency_symbol, journal.currency_decimal_places, false) }}\n                                    </span>\n                                    {% elseif first.transactiontype.type == 'Liability credit' %}\n                                        <span class=\"text-info\">\n                                        {{ formatAmountBySymbol(journal.amount*-1, journal.currency_symbol, journal.currency_decimal_places, false) }}\n                                    </span>\n                                    {% endif %}\n\n                                    <!-- do foreign amount -->\n                                    {% if null != journal.foreign_amount %}\n                                        {% if first.transactiontype.type == 'Withdrawal' or first.transactiontype.type == 'Deposit' %}\n                                            ({{ formatAmountBySymbol(journal.foreign_amount*-1, journal.foreign_currency_symbol, journal.foreign_currency_decimal_places) }})\n                                        {% elseif first.transactiontype.type == 'Transfer' %}\n                                            <span class=\"text-info\">\n                                        ({{ formatAmountBySymbol(journal.foreign_amount, journal.foreign_currency_symbol, journal.foreign_currency_decimal_places, false) }})\n                                    </span>\n                                        {% endif %}\n                                    {% endif %}\n\n                                    &rarr;\n                                    {% if 'Cash account' == journal.destination_type %}\n                                        <span class=\"text-success\">({{ 'cash'|_ }})</span>\n                                    {% else %}\n                                        <a href=\"{{ route('accounts.show', journal.destination_id) }}\"\n                                           title=\"{{ journal.destination_iban|default(journal.destination_name) }}\">{{ journal.destination_name }}</a>\n                                    {% endif %}\n                                </td>\n                            </tr>\n                            {% if null != journal.category_id %}\n                                <tr>\n                                    <td style=\"width:30%;\">{{ 'category'|_ }}</td>\n                                    <td><a href=\"{{ route('categories.show', [journal.category_id]) }}\">{{ journal.category_name }}</a></td>\n                                </tr>\n                            {% endif %}\n                            {% if null != journal.budget_id and first.transactiontype.type == 'Withdrawal' %}\n                                <tr>\n                                    <td>{{ 'budget'|_ }}</td>\n                                    <td><a href=\"{{ route('budgets.show', [journal.budget_id]) }}\">{{ journal.budget_name }}</a></td>\n                                </tr>\n                            {% endif %}\n                            {% if null != journal.bill_id and first.transactiontype.type == 'Withdrawal' %}\n                                <tr>\n                                    <td>{{ 'bill'|_ }}</td>\n                                    <td><a href=\"{{ route('bills.show', [journal.bill_id]) }}\">{{ journal.bill_name }}</a></td>\n                                </tr>\n                            {% endif %}\n                            <!-- other fields -->\n                            {% for dateField in ['interest_date','book_date','process_date','due_date','payment_date','invoice_date'] %}\n                                {% if journalHasMeta(journal.transaction_journal_id, dateField) %}\n                                    <tr>\n                                        <td>{{ trans('list.'~dateField) }}</td>\n                                        <td>{{ journalGetMetaDate(journal.transaction_journal_id, dateField).formatLocalized(monthAndDayFormat) }}</td>\n                                    </tr>\n                                {% endif %}\n                            {% endfor %}\n                            {% for metaField in ['external_id','bunq_payment_id','internal_reference','sepa_batch_id','sepa_ct_id','sepa_ct_op','sepa_db','sepa_country','sepa_cc','sepa_ep','sepa_ci','external_uri'] %}\n                                {% if journalHasMeta(journal.transaction_journal_id, metaField) %}\n                                    <tr>\n                                        <td>{{ trans('list.'~metaField) }}</td>\n                                        <td>\n                                            {% if 'external_uri' == metaField  %}\n                                                {% set uri = journalGetMetaField(journal.transaction_journal_id, metaField) %}\n                                                <a href=\"{{ uri }}\" rel=\"noopener noreferrer nofollow\" target=\"_blank\">\n                                                    {% if uri|length > 60 %}\n                                                        {{ uri|slice(0, 60) ~ '...' }}\n                                                    {% else %}\n                                                        {{ uri }}\n                                                    {% endif %}\n                                                </a>\n                                            {% endif %}\n                                            {% if 'external_uri' != metaField  %}\n                                                {{ journalGetMetaField(journal.transaction_journal_id, metaField) }}\n                                            {% endif %}\n                                        </td>\n                                    </tr>\n                                {% endif %}\n                            {% endfor %}\n                            {% if null != journal.notes and '' != journal.notes %}\n                                <tr>\n                                    <td>{{ trans('list.notes') }}</td>\n                                    <td class=\"markdown\">{{ journal.notes|default('')|markdown }}</td>\n                                </tr>\n                            {% endif %}\n                            {% if journalHasMeta(journal.transaction_journal_id, 'recurring_total') and journalHasMeta(journal.transaction_journal_id, 'recurring_count')  %}\n                                {% set recurringTotal = journalGetMetaField(journal.transaction_journal_id, 'recurring_total') %}\n                                {% if 0 == recurringTotal %}\n                                    {% set recurringTotal = '\u221e' %}\n                                {% endif %}\n                                <tr>\n                                    <td>{{ trans('list.recurring_transaction') }}</td>\n                                    <td>{{ trans('firefly.recurring_info', {total: recurringTotal, count: journalGetMetaField(journal.transaction_journal_id, 'recurring_count') }) }}</td>\n                                </tr>\n                            {% endif %}\n                            {% if journal.tags|length > 0 %}\n                                <tr>\n                                    <td>{{ 'tags'|_ }}</td>\n                                    <td>\n                                        {% for tag in journal.tags %}\n                                            <h4 style=\"display: inline;\"><a class=\"label label-success\" href=\"{{ route('tags.show', tag.id) }}\">\n                                                    <span class=\"fa fa-fw fa-tag\"></span>{{ tag.tag }}</a>\n                                            </h4>\n                                        {% endfor %}\n                                    </td>\n                                </tr>\n                            {% endif %}\n                        </table>\n                    </div>\n                </div>\n\n                <!-- Transaction links -->\n                {% if links[journal.transaction_journal_id]|length > 0 %}\n                    <div class=\"box\">\n                        <div class=\"box-header with-border\">\n                            <h3 class=\"box-title\">\n                                {{ 'journal_links'|_ }}\n                            </h3>\n                        </div>\n                        <div class=\"box-body no-padding\">\n                            <table class=\"table\">\n                                {% for link in links[journal.transaction_journal_id] %}\n                                    <tr>\n                                        <td style=\"width:120px;\">\n                                            <div class=\"btn-group btn-group-xs\">\n                                                <a href=\"{{ route('transactions.link.switch', [link.id]) }}\" class=\"btn btn-default\"><span\n                                                            class=\"fa fa-fw fa-arrows-h\"></span></a>\n                                                <a href=\"{{ route('transactions.link.delete', [link.id]) }}\" class=\"btn btn-danger\"><span class=\"fa fa-trash\"></span></a>\n                                            </div>\n                                        </td>\n                                        <td>{{ trans('firefly.'~link.link) }} \"<a href=\"{{ route('transactions.show', link.group) }}\"\n                                                                title=\"{{ link.description }}\">{{ link.description }}</a>\"\n\n                                            ({{ link.amount|raw }})\n                                            {% if '' != link.foreign_amount %}\n                                                ({{ link.foreign_amount|raw }})\n                                            {% endif %}\n                                        </td>\n                                    </tr>\n                                {% endfor %}\n\n                            </table>\n                        </div>\n                    </div>\n                {% endif %}\n\n                <!-- Attachments -->\n                {% if attachments[journal.transaction_journal_id]|length > 0 %}\n                    <div class=\"box\">\n                        <div class=\"box-header with-border\">\n                            <h3 class=\"box-title\">{{ 'attachments'|_ }}</h3>\n                        </div>\n                        <div class=\"box-body no-padding\">\n                            {% include 'v1.list.attachments' with {attachments: attachments[journal.transaction_journal_id]} %}\n                        </div>\n                    </div>\n                {% endif %}\n\n                <!-- Piggy bank events -->\n                {% if events[journal.transaction_journal_id]|length > 0 %}\n                    <div class=\"box\">\n                        <div class=\"box-header with-border\">\n                            <h3 class=\"box-title\">{{ 'piggy_events'|_ }}</h3>\n                        </div>\n                        <div class=\"box-body no-padding\">\n                            <table class=\"table table-hover\">\n                                {% for event in events[journal.transaction_journal_id] %}\n                                    <tr>\n                                        <td style=\"width:30%;\">{{ event.amount|raw }}</td>\n                                        <td>\n                                            <a href=\"{{ route('piggy-banks.show', [event.piggy_id]) }}\">{{ event.piggy }}</a></td>\n\n                                    </tr>\n                                {% endfor %}\n                            </table>\n                        </div>\n                    </div>\n                {% endif %}\n            </div>\n        {% endfor %}\n    </div>\n    {# modal for linking journals. Will be filled by AJAX #}\n    <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" id=\"linkJournalModal\">\n    </div>\n{% endblock %}\n{% block scripts %}\n    <script type=\"text/javascript\" nonce=\"{{ JS_NONCE }}\">\n        var modalDialogURI = '{{ route('transactions.link.modal', ['%JOURNAL%']) }}';\n        var acURI = '{{ route('api.v1.autocomplete.transactions-with-id') }}';\n        var groupURI = '{{ route('transactions.show',['%GROUP%']) }}';\n        var cloneGroupUrl = '{{ route('transactions.clone') }}';\n    </script>\n    <script type=\"text/javascript\" src=\"v1/js/lib/typeahead/typeahead.bundle.min.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n    <script type=\"text/javascript\" src=\"v1/js/ff/transactions/show.js?v={{ FF_VERSION }}\" nonce=\"{{ JS_NONCE }}\"></script>\n{% endblock %}\n\n", "<?php\n/**\n * web.php\n * Copyright (c) 2019 james@firefly-iii.org.\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\ndeclare(strict_types=1);\n\nRoute::group(\n    ['namespace' => 'FireflyIII\\Http\\Controllers\\System',\n     'as'        => 'installer.', 'prefix' => 'install',],\n    static function () {\n        Route::get('', ['uses' => 'InstallController@index', 'as' => 'index']);\n        Route::post('runCommand', ['uses' => 'InstallController@runCommand', 'as' => 'runCommand']);\n    }\n);\n\nRoute::group(\n    ['middleware' => 'binders-only', 'namespace' => 'FireflyIII\\Http\\Controllers\\System', 'as' => 'cron.', 'prefix' => 'cron'],\n    static function () {\n        Route::get('run/{cliToken}', ['uses' => 'CronController@cron', 'as' => 'cron']);\n    }\n);\n\nRoute::group(\n    ['middleware' => 'binders-only'],\n    static function () {\n        Route::get('offline', fn () => view('errors.offline'));\n    }\n);\n\n/**\n * These routes only work when the user is NOT logged in.\n */\nRoute::group(\n    ['middleware' => 'user-not-logged-in', 'namespace' => 'FireflyIII\\Http\\Controllers'],\n    static function () {\n\n    // Authentication Routes...\n        Route::get('login', ['uses' => 'Auth\\LoginController@showLoginForm', 'as' => 'login']);\n        Route::post('login', ['uses' => 'Auth\\LoginController@login', 'as' => 'login.post']);\n\n        // Registration Routes...\n        Route::get('register', ['uses' => 'Auth\\RegisterController@showRegistrationForm', 'as' => 'register']);\n        Route::post('register', 'Auth\\RegisterController@register');\n\n        // Password Reset Routes...\n        Route::get('password/reset/{token}', ['uses' => 'Auth\\ResetPasswordController@showResetForm', 'as' => 'password.reset']);\n        Route::post('password/email', ['uses' => 'Auth\\ForgotPasswordController@sendResetLinkEmail', 'as' => 'password.email']);\n        Route::post('password/reset', ['uses' => 'Auth\\ResetPasswordController@reset', 'as' => 'password.reset.post']);\n        Route::get('password/reset', ['uses' => 'Auth\\ForgotPasswordController@showLinkRequestForm', 'as' => 'password.reset.request']);\n\n        // Change email routes:\n        Route::get('profile/confirm-email-change/{token}', ['uses' => 'ProfileController@confirmEmailChange', 'as' => 'profile.confirm-email-change']);\n        Route::get('profile/undo-email-change/{token}/{oldAddressHash}', ['uses' => 'ProfileController@undoEmailChange', 'as' => 'profile.undo-email-change']);\n    }\n);\n\n/**\n * For some other routes, it is only relevant that the user is authenticated.\n */\nRoute::group(\n    ['middleware' => 'user-simple-auth', 'namespace' => 'FireflyIII\\Http\\Controllers'],\n    static function () {\n        Route::get('error', ['uses' => 'DebugController@displayError', 'as' => 'error']);\n        Route::any('logout', ['uses' => 'Auth\\LoginController@logout', 'as' => 'logout']);\n        Route::get('flush', ['uses' => 'DebugController@flush', 'as' => 'flush']);\n        //Route::get('routes', ['uses' => 'DebugController@routes', 'as' => 'routes']);\n        Route::get('debug', 'DebugController@index')->name('debug');\n    }\n);\n\n/**\n * For the two factor routes, the user must be logged in, but NOT 2FA. Account confirmation does not matter here.\n *\n */\nRoute::group(\n    ['middleware' => 'user-logged-in-no-2fa', 'prefix' => 'two-factor', 'as' => 'two-factor.', 'namespace' => 'FireflyIII\\Http\\Controllers\\Auth'],\n    static function () {\n        Route::post('submit', ['uses' => 'TwoFactorController@submitMFA', 'as' => 'submit']);\n        Route::get('lost', ['uses' => 'TwoFactorController@lostTwoFactor', 'as' => 'lost']); // can be removed when v2 is live.\n    }\n);\n\n/**\n * For all other routes, the user must be fully authenticated and have an activated account.\n */\n\n/**\n * Home Controller.\n */\nRoute::group(\n    ['middleware' => ['user-full-auth'], 'namespace' => 'FireflyIII\\Http\\Controllers'],\n    static function () {\n        Route::get('/', ['uses' => 'HomeController@index', 'as' => 'index']);\n        Route::get('/flash', ['uses' => 'DebugController@testFlash', 'as' => 'test-flash']);\n        Route::get('/home', ['uses' => 'HomeController@index', 'as' => 'home']);\n        Route::post('/daterange', ['uses' => 'HomeController@dateRange', 'as' => 'daterange']);\n    }\n);\n\n// show inactive\n\n/**\n * Account Controller.\n * DROP ME WHEN v2 hits\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'inactive-accounts', 'as' => 'accounts.'],\n    static function () {\n        Route::get('{objectType}', ['uses' => 'Account\\IndexController@inactive', 'as' => 'inactive.index'])->where(\n            'objectType',\n            'revenue|asset|expense|liabilities'\n        );\n    }\n);\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'accounts', 'as' => 'accounts.'],\n    static function () {\n\n        // show:\n        Route::get('{objectType}', ['uses' => 'Account\\IndexController@index', 'as' => 'index'])->where('objectType', 'revenue|asset|expense|liabilities');\n\n        // create\n        Route::get('create/{objectType}', ['uses' => 'Account\\CreateController@create', 'as' => 'create'])->where(\n            'objectType',\n            'revenue|asset|expense|liabilities'\n        );\n        Route::post('store', ['uses' => 'Account\\CreateController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{account}', ['uses' => 'Account\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{account}', ['uses' => 'Account\\EditController@update', 'as' => 'update']);\n\n        // delete\n        Route::get('delete/{account}', ['uses' => 'Account\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{account}', ['uses' => 'Account\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // show\n        Route::get('show/{account}/all', ['uses' => 'Account\\ShowController@showAll', 'as' => 'show.all']);\n        Route::get('show/{account}/{start_date?}/{end_date?}', ['uses' => 'Account\\ShowController@show', 'as' => 'show']);\n\n        // reconcile routes:\n        Route::get('reconcile/{account}/index/{start_date?}/{end_date?}', ['uses' => 'Account\\ReconcileController@reconcile', 'as' => 'reconcile']);\n        Route::post('reconcile/{account}/submit/{start_date?}/{end_date?}', ['uses' => 'Account\\ReconcileController@submit', 'as' => 'reconcile.submit']);\n\n        // reconcile JSON routes\n        Route::get('reconcile/{account}/overview/{start_date?}/{end_date?}', ['uses' => 'Json\\ReconcileController@overview', 'as' => 'reconcile.overview']);\n        Route::get(\n            'reconcile/{account}/transactions/{start_date?}/{end_date?}',\n            ['uses' => 'Json\\ReconcileController@transactions', 'as' => 'reconcile.transactions']\n        );\n    }\n);\n\n/**\n * Attachment Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'attachments', 'as' => 'attachments.'],\n    static function () {\n        Route::get('', ['uses' => 'AttachmentController@index', 'as' => 'index']);\n        Route::get('edit/{attachment}', ['uses' => 'AttachmentController@edit', 'as' => 'edit']);\n        Route::get('delete/{attachment}', ['uses' => 'AttachmentController@delete', 'as' => 'delete']);\n        Route::get('download/{attachment}', ['uses' => 'AttachmentController@download', 'as' => 'download']);\n        Route::get('view/{attachment}', ['uses' => 'AttachmentController@view', 'as' => 'view']);\n\n        Route::post('update/{attachment}', ['uses' => 'AttachmentController@update', 'as' => 'update']);\n        Route::post('destroy/{attachment}', ['uses' => 'AttachmentController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Bills Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'bills', 'as' => 'bills.'],\n    static function () {\n        Route::get('', ['uses' => 'Bill\\IndexController@index', 'as' => 'index']);\n        Route::get('rescan/{bill}', ['uses' => 'Bill\\ShowController@rescan', 'as' => 'rescan']);\n        Route::get('create', ['uses' => 'Bill\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{bill}', ['uses' => 'Bill\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{bill}', ['uses' => 'Bill\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('show/{bill}', ['uses' => 'Bill\\ShowController@show', 'as' => 'show']);\n\n        Route::post('store', ['uses' => 'Bill\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{bill}', ['uses' => 'Bill\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{bill}', ['uses' => 'Bill\\DeleteController@destroy', 'as' => 'destroy']);\n\n        Route::post('set-order/{bill}', ['uses' => 'Bill\\IndexController@setOrder', 'as' => 'set-order']);\n    }\n);\n\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'subscriptions', 'as' => 'subscriptions.'],\n    static function () {\n        Route::get('', ['uses' => 'Bill\\IndexController@index', 'as' => 'index']);\n        Route::get('rescan/{bill}', ['uses' => 'Bill\\ShowController@rescan', 'as' => 'rescan']);\n        Route::get('create', ['uses' => 'Bill\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{bill}', ['uses' => 'Bill\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{bill}', ['uses' => 'Bill\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('show/{bill}', ['uses' => 'Bill\\ShowController@show', 'as' => 'show']);\n\n        Route::post('store', ['uses' => 'Bill\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{bill}', ['uses' => 'Bill\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{bill}', ['uses' => 'Bill\\DeleteController@destroy', 'as' => 'destroy']);\n\n        Route::post('set-order/{bill}', ['uses' => 'Bill\\IndexController@setOrder', 'as' => 'set-order']);\n    }\n);\n\n/**\n * Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'budgets', 'as' => 'budgets.'],\n    static function () {\n\n    // delete\n        Route::get('delete/{budget}', ['uses' => 'Budget\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{budget}', ['uses' => 'Budget\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // create\n        Route::get('create', ['uses' => 'Budget\\CreateController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Budget\\CreateController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{budget}', ['uses' => 'Budget\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{budget}', ['uses' => 'Budget\\EditController@update', 'as' => 'update']);\n\n        // show\n        Route::get('show/{budget}', ['uses' => 'Budget\\ShowController@show', 'as' => 'show']);\n        Route::get('show/{budget}/{budgetLimit}', ['uses' => 'Budget\\ShowController@showByBudgetLimit', 'as' => 'show.limit']);\n        Route::get('list/no-budget/all', ['uses' => 'Budget\\ShowController@noBudgetAll', 'as' => 'no-budget-all']);\n        Route::get('list/no-budget/{start_date?}/{end_date?}', ['uses' => 'Budget\\ShowController@noBudget', 'as' => 'no-budget']);\n\n        // reorder budgets\n        Route::post('reorder', ['uses' => 'Budget\\IndexController@reorder', 'as' => 'reorder']);\n\n        // index\n        Route::get('{start_date?}/{end_date?}', ['uses' => 'Budget\\IndexController@index', 'as' => 'index']);\n    }\n);\n\n/**\n * Available Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'available-budgets', 'as' => 'available-budgets.'],\n    static function () {\n\n        // create\n        Route::get('create/{start_date}/{end_date}/{currency?}', ['uses' => 'Budget\\AvailableBudgetController@create', 'as' => 'create']);\n        Route::get(\n            'create-alternative/{start_date}/{end_date}',\n            ['uses' => 'Budget\\AvailableBudgetController@createAlternative', 'as' => 'create-alternative']\n        );\n        Route::post('store', ['uses' => 'Budget\\AvailableBudgetController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{availableBudget}/{start_date}/{end_date}', ['uses' => 'Budget\\AvailableBudgetController@edit', 'as' => 'edit']);\n        Route::post('update/{availableBudget}/{start_date}/{end_date}', ['uses' => 'Budget\\AvailableBudgetController@update', 'as' => 'update']);\n\n        Route::post('delete', ['uses' => 'Budget\\AvailableBudgetController@delete', 'as' => 'delete']);\n    }\n);\n\n/**\n * Budget Limit Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'budget-limits', 'as' => 'budget-limits.'],\n    static function () {\n        Route::get('create/{budget}/{start_date}/{end_date}', ['uses' => 'Budget\\BudgetLimitController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Budget\\BudgetLimitController@store', 'as' => 'store']);\n\n        Route::post('delete/{budgetLimit}', ['uses' => 'Budget\\BudgetLimitController@delete', 'as' => 'delete']);\n\n        Route::post('update/{budgetLimit}', ['uses' => 'Budget\\BudgetLimitController@update', 'as' => 'update']);\n    }\n);\n\n/**\n * Category Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'categories', 'as' => 'categories.'],\n    static function () {\n\n    // index:\n        Route::get('', ['uses' => 'Category\\IndexController@index', 'as' => 'index']);\n\n        // create\n        Route::get('create', ['uses' => 'Category\\CreateController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Category\\CreateController@store', 'as' => 'store']);\n\n        // edit\n        Route::get('edit/{category}', ['uses' => 'Category\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{category}', ['uses' => 'Category\\EditController@update', 'as' => 'update']);\n\n        // delete\n        Route::get('delete/{category}', ['uses' => 'Category\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{category}', ['uses' => 'Category\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // show category:\n        Route::get('show/{category}/all', ['uses' => 'Category\\ShowController@showAll', 'as' => 'show.all']);\n        Route::get('show/{category}/{start_date?}/{end_date?}', ['uses' => 'Category\\ShowController@show', 'as' => 'show']);\n\n        // no category controller:\n        Route::get('list/no-category/all', ['uses' => 'Category\\NoCategoryController@showAll', 'as' => 'no-category.all']);\n        Route::get('list/no-category/{start_date?}/{end_date?}', ['uses' => 'Category\\NoCategoryController@show', 'as' => 'no-category']);\n    }\n);\n\n/**\n * Currency Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'currencies', 'as' => 'currencies.'],\n    static function () {\n        Route::get('', ['uses' => 'CurrencyController@index', 'as' => 'index']);\n        Route::get('create', ['uses' => 'CurrencyController@create', 'as' => 'create']);\n        Route::get('edit/{currency}', ['uses' => 'CurrencyController@edit', 'as' => 'edit']);\n        Route::get('delete/{currency}', ['uses' => 'CurrencyController@delete', 'as' => 'delete']);\n        Route::post('default', ['uses' => 'CurrencyController@defaultCurrency', 'as' => 'default']);\n        Route::post('enable', ['uses' => 'CurrencyController@enableCurrency', 'as' => 'enable']);\n        Route::post('disable', ['uses' => 'CurrencyController@disableCurrency', 'as' => 'disable']);\n\n        Route::post('store', ['uses' => 'CurrencyController@store', 'as' => 'store']);\n        Route::post('update/{currency}', ['uses' => 'CurrencyController@update', 'as' => 'update']);\n        Route::post('destroy/{currency}', ['uses' => 'CurrencyController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Chart\\Account Controller (default report).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/account', 'as' => 'chart.account.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'AccountController@frontpage', 'as' => 'frontpage']);\n        Route::get('expense', ['uses' => 'AccountController@expenseAccounts', 'as' => 'expense']);\n        Route::get('revenue', ['uses' => 'AccountController@revenueAccounts', 'as' => 'revenue']);\n        Route::get('report/{accountList}/{start_date}/{end_date}', ['uses' => 'AccountController@report', 'as' => 'report']);\n        Route::get('period/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@period', 'as' => 'period']);\n\n        Route::get('income-category/{account}/all/all', ['uses' => 'AccountController@incomeCategoryAll', 'as' => 'income-category-all']);\n        Route::get('expense-category/{account}/all/all', ['uses' => 'AccountController@expenseCategoryAll', 'as' => 'expense-category-all']);\n        Route::get('expense-budget/{account}/all/all', ['uses' => 'AccountController@expenseBudgetAll', 'as' => 'expense-budget-all']);\n\n        Route::get('income-category/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@incomeCategory', 'as' => 'income-category']);\n        Route::get('expense-category/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@expenseCategory', 'as' => 'expense-category']);\n        Route::get('expense-budget/{account}/{start_date}/{end_date}', ['uses' => 'AccountController@expenseBudget', 'as' => 'expense-budget']);\n    }\n);\n\n/**\n * Chart\\Bill Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/bill', 'as' => 'chart.bill.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'BillController@frontpage', 'as' => 'frontpage']);\n        Route::get('single/{bill}', ['uses' => 'BillController@single', 'as' => 'single']);\n    }\n);\n\n/**\n * Chart\\Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/budget', 'as' => 'chart.budget.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'BudgetController@frontpage', 'as' => 'frontpage']);\n        Route::get('period/0/{currency}/{accountList}/{start_date}/{end_date}', ['uses' => 'BudgetController@periodNoBudget', 'as' => 'period.no-budget']);\n        Route::get('period/{budget}/{currency}/{accountList}/{start_date}/{end_date}', ['uses' => 'BudgetController@period', 'as' => 'period']);\n        Route::get('budget/{budget}/{budgetLimit}', ['uses' => 'BudgetController@budgetLimit', 'as' => 'budget-limit']);\n        Route::get('budget/{budget}', ['uses' => 'BudgetController@budget', 'as' => 'budget']);\n\n        // these charts are used in budget/show:\n        Route::get('expense-category/{budget}/{budgetLimit?}', ['uses' => 'BudgetController@expenseCategory', 'as' => 'expense-category']);\n        Route::get('expense-asset/{budget}/{budgetLimit?}', ['uses' => 'BudgetController@expenseAsset', 'as' => 'expense-asset']);\n        Route::get('expense-expense/{budget}/{budgetLimit?}', ['uses' => 'BudgetController@expenseExpense', 'as' => 'expense-expense']);\n\n        // these charts are used in reports (category reports):\n        Route::get(\n            'category/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get(\n            'budget/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@budgetExpense', 'as' => 'budget-expense']\n        );\n        Route::get(\n            'source-account/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@sourceAccountExpense', 'as' => 'source-account-expense']\n        );\n        Route::get(\n            'destination-account/expense/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetReportController@destinationAccountExpense', 'as' => 'destination-account-expense']\n        );\n        Route::get('operations/{accountList}/{budget}/{start_date}/{end_date}', ['uses' => 'BudgetReportController@mainChart', 'as' => 'main']);\n    }\n);\n\n/**\n * Chart\\Category Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/category', 'as' => 'chart.category.'],\n    static function () {\n        Route::get('frontpage', ['uses' => 'CategoryController@frontPage', 'as' => 'frontpage']);\n        Route::get('period/{category}', ['uses' => 'CategoryController@currentPeriod', 'as' => 'current']);\n        Route::get('period/{category}/{date}', ['uses' => 'CategoryController@specificPeriod', 'as' => 'specific']);\n        Route::get('all/{category}', ['uses' => 'CategoryController@all', 'as' => 'all']);\n        Route::get(\n            'report-period/0/{accountList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryController@reportPeriodNoCategory', 'as' => 'period.no-category']\n        );\n        Route::get('report-period/{category}/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@reportPeriod', 'as' => 'period']);\n\n        Route::get(\n            'category/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get(\n            'category/income/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@categoryIncome', 'as' => 'category-income']\n        );\n        Route::get(\n            'budget/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@budgetExpense', 'as' => 'budget-expense']\n        );\n        Route::get(\n            'source/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@sourceExpense', 'as' => 'source-expense']\n        );\n        Route::get(\n            'source/income/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@sourceIncome', 'as' => 'source-income']\n        );\n        Route::get(\n            'dest/expense/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@destinationExpense', 'as' => 'dest-expense']\n        );\n        Route::get(\n            'dest/income/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryReportController@destinationIncome', 'as' => 'dest-income']\n        );\n        Route::get('operations/{accountList}/{category}/{start_date}/{end_date}', ['uses' => 'CategoryReportController@mainChart', 'as' => 'main']);\n    }\n);\n\n/**\n * Chart\\Tag Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/tag', 'as' => 'chart.tag.'],\n    static function () {\n        Route::get('tag/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@tagExpense', 'as' => 'tag-expense']);\n        Route::get('tag/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@tagIncome', 'as' => 'tag-income']);\n        Route::get(\n            'category/expense/{accountList}/{tagList}/{start_date}/{end_date}',\n            ['uses' => 'TagReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get('category/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@categoryIncome', 'as' => 'category-income']);\n        Route::get('budget/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@budgetExpense', 'as' => 'budget-expense']);\n        Route::get('source/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@sourceExpense', 'as' => 'source-expense']);\n        Route::get('source/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@sourceIncome', 'as' => 'source-income']);\n        Route::get('dest/expense/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@destinationExpense', 'as' => 'dest-expense']);\n        Route::get('dest/income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagReportController@destinationIncome', 'as' => 'dest-income']);\n\n        Route::get('operations/{accountList}/{tag}/{start_date}/{end_date}', ['uses' => 'TagReportController@mainChart', 'as' => 'main']);\n    }\n);\n\n/**\n * Chart\\Double Controller (for expense/revenue report).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/double', 'as' => 'chart.double.'],\n    static function () {\n        Route::get('main/{accountList}/{account}/{start_date}/{end_date}', ['uses' => 'DoubleReportController@mainChart', 'as' => 'main']);\n\n        Route::get(\n            'category/expense/{accountList}/{doubleList}/{start_date}/{end_date}',\n            ['uses' => 'DoubleReportController@categoryExpense', 'as' => 'category-expense']\n        );\n        Route::get(\n            'category/income/{accountList}/{doubleList}/{start_date}/{end_date}',\n            ['uses' => 'DoubleReportController@categoryIncome', 'as' => 'category-income']\n        );\n        Route::get(\n            'budget/expense/{accountList}/{doubleList}/{start_date}/{end_date}',\n            ['uses' => 'DoubleReportController@budgetExpense', 'as' => 'budget-expense']\n        );\n\n        Route::get('tag/expense/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleReportController@tagExpense', 'as' => 'tag-expense']);\n        Route::get('tag/income/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleReportController@tagIncome', 'as' => 'tag-income']);\n    }\n);\n\n/**\n * Chart\\PiggyBank Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/piggy-bank', 'as' => 'chart.piggy-bank.'],\n    static function () {\n        Route::get('{piggyBank}', ['uses' => 'PiggyBankController@history', 'as' => 'history']);\n    }\n);\n\n/**\n * Chart\\Report Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/report', 'as' => 'chart.report.'],\n    static function () {\n        Route::get('operations/{accountList}/{start_date}/{end_date}', ['uses' => 'ReportController@operations', 'as' => 'operations']);\n        Route::get('net-worth/{accountList}/{start_date}/{end_date}/', ['uses' => 'ReportController@netWorth', 'as' => 'net-worth']);\n    }\n);\n\n/**\n * Chart\\Transactions Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Chart', 'prefix' => 'chart/transactions', 'as' => 'chart.transactions.'],\n    static function () {\n        Route::get('categories/{objectType}/{start_date}/{end_date}', ['uses' => 'TransactionController@categories', 'as' => 'categories']);\n        Route::get('budgets/{start_date}/{end_date}', ['uses' => 'TransactionController@budgets', 'as' => 'budgets']);\n        Route::get(\n            'destinationAccounts/{objectType}/{start_date}/{end_date}',\n            ['uses' => 'TransactionController@destinationAccounts', 'as' => 'destinationAccounts']\n        );\n        Route::get('sourceAccounts/{objectType}/{start_date}/{end_date}', ['uses' => 'TransactionController@sourceAccounts', 'as' => 'sourceAccounts']);\n        //\n    }\n);\n\n/**\n * Export controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'export', 'as' => 'export.'],\n    static function () {\n\n    // index\n        Route::get('', ['uses' => 'Export\\IndexController@index', 'as' => 'index']);\n        Route::post('export', ['uses' => 'Export\\IndexController@export', 'as' => 'export']);\n    }\n);\n/**\n * Object group controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'groups', 'as' => 'object-groups.'],\n    static function () {\n\n        // index\n        Route::get('', ['uses' => 'ObjectGroup\\IndexController@index', 'as' => 'index']);\n        Route::post('set-order/{objectGroup}', ['uses' => 'ObjectGroup\\IndexController@setOrder', 'as' => 'set-order']);\n\n        // edit\n        Route::get('edit/{objectGroup}', ['uses' => 'ObjectGroup\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{objectGroup}', ['uses' => 'ObjectGroup\\EditController@update', 'as' => 'update']);\n\n        // delete\n        Route::get('delete/{objectGroup}', ['uses' => 'ObjectGroup\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{objectGroup}', ['uses' => 'ObjectGroup\\DeleteController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Help Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'help', 'as' => 'help.'],\n    static function () {\n        Route::get('{route}', ['uses' => 'HelpController@show', 'as' => 'show']);\n    }\n);\n\n/**\n * JScript Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'v1/jscript', 'as' => 'javascript.'],\n    static function () {\n        Route::get('variables', ['uses' => 'JavascriptController@variables', 'as' => 'variables']);\n        Route::get('accounts', ['uses' => 'JavascriptController@accounts', 'as' => 'accounts']);\n        Route::get('currencies', ['uses' => 'JavascriptController@currencies', 'as' => 'currencies']);\n    }\n);\n\n/**\n * JScript Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'v2/jscript', 'as' => 'javascript.v2.'],\n    static function () {\n        Route::get('variables', ['uses' => 'JavascriptController@variablesV2', 'as' => 'variables']);\n    }\n);\n\n/**\n * JSON Controller(s).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'json', 'as' => 'json.'],\n    static function () {\n\n        // budgets:\n        Route::get(\n            'budget/total-budgeted/{currency}/{start_date}/{end_date}',\n            ['uses' => 'Json\\BudgetController@getBudgetInformation', 'as' => 'budget.total-budgeted']\n        );\n        // boxes\n        Route::get('box/balance', ['uses' => 'Json\\BoxController@balance', 'as' => 'box.balance']);\n        Route::get('box/available', ['uses' => 'Json\\BoxController@available', 'as' => 'box.available']);\n        Route::get('box/net-worth', ['uses' => 'Json\\BoxController@netWorth', 'as' => 'box.net-worth']);\n\n        // rules\n        Route::get('trigger', ['uses' => 'Json\\RuleController@trigger', 'as' => 'trigger']);\n        Route::get('action', ['uses' => 'Json\\RuleController@action', 'as' => 'action']);\n\n        // front page\n        Route::get('frontpage/piggy-banks', ['uses' => 'Json\\FrontpageController@piggyBanks', 'as' => 'fp.piggy-banks']);\n\n        // currency conversion:\n        Route::get('rate/{fromCurrencyCode}/{toCurrencyCode}/{date}', ['uses' => 'Json\\ExchangeController@getRate', 'as' => 'rate']);\n\n        // intro things:\n        Route::any('intro/finished/{route}/{specificPage?}', ['uses' => 'Json\\IntroController@postFinished', 'as' => 'intro.finished']);\n        Route::post('intro/enable/{route}/{specificPage?}', ['uses' => 'Json\\IntroController@postEnable', 'as' => 'intro.enable']);\n        Route::get('intro/{route}/{specificPage?}', ['uses' => 'Json\\IntroController@getIntroSteps', 'as' => 'intro']);\n    }\n);\n\n/**\n * NewUser Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'new-user', 'as' => 'new-user.'],\n    static function () {\n        Route::get('', ['uses' => 'NewUserController@index', 'as' => 'index']);\n        Route::post('submit', ['uses' => 'NewUserController@submit', 'as' => 'submit']);\n    }\n);\n\n/**\n * Piggy Bank Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'piggy-banks', 'as' => 'piggy-banks.'],\n    static function () {\n\n        Route::get('', ['uses' => 'PiggyBank\\IndexController@index', 'as' => 'index']);\n        Route::get('add/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@add', 'as' => 'add-money']);\n        Route::get('remove/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@remove', 'as' => 'remove-money']);\n        Route::get('add-money/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@addMobile', 'as' => 'add-money-mobile']);\n        Route::get('remove-money/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@removeMobile', 'as' => 'remove-money-mobile']);\n        Route::get('create', ['uses' => 'PiggyBank\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{piggyBank}', ['uses' => 'PiggyBank\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{piggyBank}', ['uses' => 'PiggyBank\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('show/{piggyBank}', ['uses' => 'PiggyBank\\ShowController@show', 'as' => 'show']);\n        Route::post('store', ['uses' => 'PiggyBank\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{piggyBank}', ['uses' => 'PiggyBank\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{piggyBank}', ['uses' => 'PiggyBank\\DeleteController@destroy', 'as' => 'destroy']);\n        Route::post('add/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@postAdd', 'as' => 'add']);\n        Route::post('remove/{piggyBank}', ['uses' => 'PiggyBank\\AmountController@postRemove', 'as' => 'remove']);\n\n        Route::post('set-order/{piggyBank}', ['uses' => 'PiggyBank\\IndexController@setOrder', 'as' => 'set-order']);\n    }\n);\n\n/**\n * Preferences Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'preferences', 'as' => 'preferences.'],\n    static function () {\n        Route::get('', ['uses' => 'PreferencesController@index', 'as' => 'index']);\n        Route::post('', ['uses' => 'PreferencesController@postIndex', 'as' => 'update']);\n    }\n);\n\n/**\n * Profile Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'profile', 'as' => 'profile.'],\n    static function () {\n        Route::get('', ['uses' => 'ProfileController@index', 'as' => 'index']);\n        Route::get('change-email', ['uses' => 'ProfileController@changeEmail', 'as' => 'change-email']);\n        Route::get('change-password', ['uses' => 'ProfileController@changePassword', 'as' => 'change-password']);\n        Route::get('delete-account', ['uses' => 'ProfileController@deleteAccount', 'as' => 'delete-account']);\n\n        Route::post('delete-account', ['uses' => 'ProfileController@postDeleteAccount', 'as' => 'delete-account.post']);\n        Route::post('change-password', ['uses' => 'ProfileController@postChangePassword', 'as' => 'change-password.post']);\n        Route::post('change-email', ['uses' => 'ProfileController@postChangeEmail', 'as' => 'change-email.post']);\n        Route::post('regenerate', ['uses' => 'ProfileController@regenerate', 'as' => 'regenerate']);\n\n        Route::get('logout-others', ['uses' => 'ProfileController@logoutOtherSessions', 'as' => 'logout-others']);\n        Route::post('logout-others', ['uses' => 'ProfileController@postLogoutOtherSessions', 'as' => 'logout-others.post']);\n\n        // new 2FA routes\n        Route::post('enable2FA', ['uses' => 'ProfileController@enable2FA', 'as' => 'enable2FA']);\n        Route::get('2fa/code', ['uses' => 'ProfileController@code', 'as' => 'code']);\n        Route::post('2fa/code', ['uses' => 'ProfileController@postCode', 'as' => 'code.store']);\n        Route::get('/delete-code', ['uses' => 'ProfileController@deleteCode', 'as' => 'delete-code']);\n        Route::get('2fa/new-codes', ['uses' => 'ProfileController@newBackupCodes', 'as' => 'new-backup-codes']);\n\n    }\n);\n\n/**\n * Recurring Transactions Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'recurring', 'as' => 'recurring.'],\n    static function () {\n        Route::get('', ['uses' => 'Recurring\\IndexController@index', 'as' => 'index']);\n\n        Route::get('show/{recurrence}', ['uses' => 'Recurring\\ShowController@show', 'as' => 'show']);\n        Route::get('create', ['uses' => 'Recurring\\CreateController@create', 'as' => 'create']);\n        Route::get('create-from-transaction/{tj}', ['uses' => 'Recurring\\CreateController@createFromJournal', 'as' => 'create-from-journal']);\n        Route::get('edit/{recurrence}', ['uses' => 'Recurring\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{recurrence}', ['uses' => 'Recurring\\DeleteController@delete', 'as' => 'delete']);\n\n        Route::post('store', ['uses' => 'Recurring\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{recurrence}', ['uses' => 'Recurring\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{recurrence}', ['uses' => 'Recurring\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // JSON routes:\n        Route::get('events', ['uses' => 'Json\\RecurrenceController@events', 'as' => 'events']);\n        Route::get('suggest', ['uses' => 'Json\\RecurrenceController@suggest', 'as' => 'suggest']);\n    }\n);\n\n/**\n * Report Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'reports', 'as' => 'reports.'],\n    static function () {\n        Route::get('', ['uses' => 'ReportController@index', 'as' => 'index']);\n        Route::get('options/{reportType}', ['uses' => 'ReportController@options', 'as' => 'options']);\n        Route::get('default/{accountList}/{start_date}/{end_date}', ['uses' => 'ReportController@defaultReport', 'as' => 'report.default']);\n        Route::get('audit/{accountList}/{start_date}/{end_date}', ['uses' => 'ReportController@auditReport', 'as' => 'report.audit']);\n        Route::get('category/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'ReportController@categoryReport', 'as' => 'report.category']);\n        Route::get('budget/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'ReportController@budgetReport', 'as' => 'report.budget']);\n        Route::get('tag/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'ReportController@tagReport', 'as' => 'report.tag']);\n        Route::get('double/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'ReportController@doubleReport', 'as' => 'report.double']);\n\n        Route::post('', ['uses' => 'ReportController@postIndex', 'as' => 'index.post']);\n    }\n);\n\n/**\n * Report Data AccountController.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/account', 'as' => 'report-data.account.'],\n    static function () {\n        Route::get('general/{accountList}/{start_date}/{end_date}', ['uses' => 'AccountController@general', 'as' => 'general']);\n    }\n);\n\n/**\n * Report Data Bill Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/bill', 'as' => 'report-data.bills.'],\n    static function () {\n        Route::get('overview/{accountList}/{start_date}/{end_date}', ['uses' => 'BillController@overview', 'as' => 'overview']);\n    }\n);\n\n/**\n * Report Double Data Expense / Revenue Account Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/double', 'as' => 'report-data.double.'],\n    static function () {\n\n        // spent + earned per combination.\n        Route::get('operations/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@operations', 'as' => 'operations']);\n        Route::get('ops-asset/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@operationsPerAsset', 'as' => 'ops-asset']);\n\n        Route::get('top-expenses/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@avgExpenses', 'as' => 'avg-expenses']);\n\n        Route::get('top-income/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@topIncome', 'as' => 'top-income']);\n        Route::get('avg-income/{accountList}/{doubleList}/{start_date}/{end_date}', ['uses' => 'DoubleController@avgIncome', 'as' => 'avg-income']);\n    }\n);\n\n/**\n * Report Data Income/Expenses Controller (called financial operations).\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/operations',\n     'as'         => 'report-data.operations.',],\n    static function () {\n        Route::get('operations/{accountList}/{start_date}/{end_date}', ['uses' => 'OperationsController@operations', 'as' => 'operations']);\n        Route::get('income/{accountList}/{start_date}/{end_date}', ['uses' => 'OperationsController@income', 'as' => 'income']);\n        Route::get('expenses/{accountList}/{start_date}/{end_date}', ['uses' => 'OperationsController@expenses', 'as' => 'expenses']);\n    }\n);\n\n/**\n * Report Data Category Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/category',\n     'as'         => 'report-data.category.',],\n    static function () {\n\n// See reference nr. 3\n        Route::get('operations/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@operations', 'as' => 'operations']);\n        Route::get('income/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@income', 'as' => 'income']);\n        Route::get('expenses/{accountList}/{start_date}/{end_date}', ['uses' => 'CategoryController@expenses', 'as' => 'expenses']);\n\n        Route::get('accounts/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@accounts', 'as' => 'accounts']);\n        Route::get('categories/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@categories', 'as' => 'categories']);\n        Route::get(\n            'account-per-category/{accountList}/{categoryList}/{start_date}/{end_date}',\n            ['uses' => 'CategoryController@accountPerCategory', 'as' => 'account-per-category']\n        );\n\n        Route::get('top-expenses/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@avgExpenses', 'as' => 'avg-expenses']);\n\n        Route::get('top-income/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@topIncome', 'as' => 'top-income']);\n        Route::get('avg-income/{accountList}/{categoryList}/{start_date}/{end_date}', ['uses' => 'CategoryController@avgIncome', 'as' => 'avg-income']);\n    }\n);\n\n/**\n * Report Data TAG Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/tag',\n     'as'         => 'report-data.tag.',],\n    static function () {\n        Route::get('accounts/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@accounts', 'as' => 'accounts']);\n        Route::get('tags/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@tags', 'as' => 'tags']);\n        Route::get('account-per-tag/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@accountPerTag', 'as' => 'account-per-tag']);\n\n        Route::get('top-expenses/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@avgExpenses', 'as' => 'avg-expenses']);\n\n        Route::get('top-income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@topIncome', 'as' => 'top-income']);\n        Route::get('avg-income/{accountList}/{tagList}/{start_date}/{end_date}', ['uses' => 'TagController@avgIncome', 'as' => 'avg-income']);\n    }\n);\n\n/**\n * Report Data Balance Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/balance', 'as' => 'report-data.balance.'],\n    static function () {\n        Route::get('general/{accountList}/{start_date}/{end_date}', ['uses' => 'BalanceController@general', 'as' => 'general']);\n    }\n);\n\n/**\n * Report Data Budget Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Report', 'prefix' => 'report-data/budget', 'as' => 'report-data.budget.'],\n    static function () {\n        Route::get('general/{accountList}/{start_date}/{end_date}/', ['uses' => 'BudgetController@general', 'as' => 'general']);\n// See reference nr. 4\n        Route::get('period/{accountList}/{start_date}/{end_date}', ['uses' => 'BudgetController@period', 'as' => 'period']);\n\n        Route::get('accounts/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@accounts', 'as' => 'accounts']);\n        Route::get('budgets/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@budgets', 'as' => 'budgets']);\n        Route::get(\n            'account-per-budget/{accountList}/{budgetList}/{start_date}/{end_date}',\n            ['uses' => 'BudgetController@accountPerBudget', 'as' => 'account-per-budget']\n        );\n        Route::get('top-expenses/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@topExpenses', 'as' => 'top-expenses']);\n        Route::get('avg-expenses/{accountList}/{budgetList}/{start_date}/{end_date}', ['uses' => 'BudgetController@avgExpenses', 'as' => 'avg-expenses']);\n    }\n);\n\n/**\n * Rules Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'rules', 'as' => 'rules.'],\n    static function () {\n\n    // create controller\n        Route::get('create/{ruleGroup?}', ['uses' => 'Rule\\CreateController@create', 'as' => 'create']);\n        Route::get('create-from-bill/{bill}', ['uses' => 'Rule\\CreateController@createFromBill', 'as' => 'create-from-bill']);\n        Route::get('create-from-journal/{tj}', ['uses' => 'Rule\\CreateController@createFromJournal', 'as' => 'create-from-journal']);\n        Route::post('store', ['uses' => 'Rule\\CreateController@store', 'as' => 'store']);\n        Route::get('duplicate/{rule}', ['uses' => 'Rule\\CreateController@duplicate', 'as' => 'duplicate']);\n\n        // delete controller\n        Route::get('delete/{rule}', ['uses' => 'Rule\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{rule}', ['uses' => 'Rule\\DeleteController@destroy', 'as' => 'destroy']);\n\n        // index controller\n        Route::get('', ['uses' => 'Rule\\IndexController@index', 'as' => 'index']);\n\n        Route::post('move-rule/{rule}/{ruleGroup}', ['uses' => 'Rule\\IndexController@moveRule', 'as' => 'move-rule']);\n        // select controller\n        Route::get('test', ['uses' => 'Rule\\SelectController@testTriggers', 'as' => 'test-triggers']);\n        Route::get('test-rule/{rule}', ['uses' => 'Rule\\SelectController@testTriggersByRule', 'as' => 'test-triggers-rule']);\n        Route::get('search/{rule}', ['uses' => 'Rule\\IndexController@search', 'as' => 'search']);\n        Route::get('select/{rule}', ['uses' => 'Rule\\SelectController@selectTransactions', 'as' => 'select-transactions']);\n        Route::post('execute/{rule}', ['uses' => 'Rule\\SelectController@execute', 'as' => 'execute']);\n\n        // edit controller\n        Route::get('edit/{rule}', ['uses' => 'Rule\\EditController@edit', 'as' => 'edit']);\n        Route::post('update/{rule}', ['uses' => 'Rule\\EditController@update', 'as' => 'update']);\n    }\n);\n\n/**\n * Rule Groups Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'rule-groups', 'as' => 'rule-groups.'],\n    static function () {\n        Route::get('create', ['uses' => 'RuleGroup\\CreateController@create', 'as' => 'create']);\n        Route::get('edit/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@edit', 'as' => 'edit']);\n        Route::get('delete/{ruleGroup}', ['uses' => 'RuleGroup\\DeleteController@delete', 'as' => 'delete']);\n        Route::get('up/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@up', 'as' => 'up']);\n        Route::get('down/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@down', 'as' => 'down']);\n        Route::get('select/{ruleGroup}', ['uses' => 'RuleGroup\\ExecutionController@selectTransactions', 'as' => 'select-transactions']);\n\n        Route::post('store', ['uses' => 'RuleGroup\\CreateController@store', 'as' => 'store']);\n        Route::post('update/{ruleGroup}', ['uses' => 'RuleGroup\\EditController@update', 'as' => 'update']);\n        Route::post('destroy/{ruleGroup}', ['uses' => 'RuleGroup\\DeleteController@destroy', 'as' => 'destroy']);\n        Route::post('execute/{ruleGroup}', ['uses' => 'RuleGroup\\ExecutionController@execute', 'as' => 'execute']);\n    }\n);\n\n/**\n * Search Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'search', 'as' => 'search.'],\n    static function () {\n        Route::get('', ['uses' => 'SearchController@index', 'as' => 'index']);\n        Route::any('search', ['uses' => 'SearchController@search', 'as' => 'search']);\n    }\n);\n\n/**\n * Tag Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'tags', 'as' => 'tags.'],\n    static function () {\n        Route::get('', ['uses' => 'TagController@index', 'as' => 'index']);\n        Route::get('create', ['uses' => 'TagController@create', 'as' => 'create']);\n\n        Route::get('show/{tagOrId}/all', ['uses' => 'TagController@showAll', 'as' => 'show.all']);\n        Route::get('show/{tagOrId}/{start_date?}/{end_date?}', ['uses' => 'TagController@show', 'as' => 'show']);\n\n        Route::get('edit/{tag}', ['uses' => 'TagController@edit', 'as' => 'edit']);\n        Route::get('delete/{tag}', ['uses' => 'TagController@delete', 'as' => 'delete']);\n\n        Route::post('store', ['uses' => 'TagController@store', 'as' => 'store']);\n        Route::post('update/{tag}', ['uses' => 'TagController@update', 'as' => 'update']);\n        Route::post('destroy/{tag}', ['uses' => 'TagController@destroy', 'as' => 'destroy']);\n        Route::post('mass-destroy', ['uses' => 'TagController@massDestroy', 'as' => 'mass-destroy']);\n    }\n);\n\n/**\n * Transaction Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers', 'prefix' => 'transactions', 'as' => 'transactions.'],\n    static function () {\n\n    // show groups:\n// See reference nr. 5\n        Route::get('{what}/all', ['uses' => 'Transaction\\IndexController@indexAll', 'as' => 'index.all'])->where(\n            ['what' => 'withdrawal|deposit|transfers|transfer']\n        );\n\n        Route::get('{what}/{start_date?}/{end_date?}', ['uses' => 'Transaction\\IndexController@index', 'as' => 'index'])->where(\n            ['what' => 'withdrawal|deposit|transfers|transfer']\n        );\n\n        // create group:\n        Route::get('create/{objectType}', ['uses' => 'Transaction\\CreateController@create', 'as' => 'create']);\n        Route::post('store', ['uses' => 'Transaction\\CreateController@store', 'as' => 'store']);\n\n        // clone group\n        Route::post('clone', ['uses' => 'Transaction\\CreateController@cloneGroup', 'as' => 'clone']);\n\n        // edit group\n        Route::get('edit/{transactionGroup}', ['uses' => 'Transaction\\EditController@edit', 'as' => 'edit']);\n        Route::post('update', ['uses' => 'Transaction\\EditController@update', 'as' => 'update']);\n\n        // delete group\n        Route::get('delete/{transactionGroup}', ['uses' => 'Transaction\\DeleteController@delete', 'as' => 'delete']);\n        Route::post('destroy/{transactionGroup}', ['uses' => 'Transaction\\DeleteController@destroy', 'as' => 'destroy']);\n\n        Route::get('show/{transactionGroup}', ['uses' => 'Transaction\\ShowController@show', 'as' => 'show']);\n        Route::get('debug/{transactionGroup}', ['uses' => 'Transaction\\ShowController@debugShow', 'as' => 'debug']);\n    }\n);\n\n/**\n * Transaction Mass Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/mass', 'as' => 'transactions.mass.'],\n    static function () {\n        Route::get('edit/{journalList}', ['uses' => 'MassController@edit', 'as' => 'edit']);\n        Route::get('delete/{journalList}', ['uses' => 'MassController@delete', 'as' => 'delete']);\n        Route::post('update', ['uses' => 'MassController@update', 'as' => 'update']);\n        Route::post('destroy', ['uses' => 'MassController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Transaction Bulk Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/bulk', 'as' => 'transactions.bulk.'],\n    static function () {\n        Route::get('edit/{journalList}', ['uses' => 'BulkController@edit', 'as' => 'edit']);\n        Route::post('update', ['uses' => 'BulkController@update', 'as' => 'update']);\n    }\n);\n\n/**\n * Transaction Convert Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/convert',\n     'as'         => 'transactions.convert.',],\n    static function () {\n        Route::get('{transactionType}/{transactionGroup}', ['uses' => 'ConvertController@index', 'as' => 'index']);\n        Route::post('{transactionType}/{transactionGroup}', ['uses' => 'ConvertController@postIndex', 'as' => 'index.post']);\n    }\n);\n\n/**\n * Transaction Link Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Transaction', 'prefix' => 'transactions/link', 'as' => 'transactions.link.'],\n    static function () {\n        Route::get('modal/{tj}', ['uses' => 'LinkController@modal', 'as' => 'modal']);\n\n// See reference nr. 6\n        Route::post('store/{tj}', ['uses' => 'LinkController@store', 'as' => 'store']);\n        Route::get('delete/{journalLink}', ['uses' => 'LinkController@delete', 'as' => 'delete']);\n        Route::get('switch/{journalLink}', ['uses' => 'LinkController@switchLink', 'as' => 'switch']);\n\n        Route::post('destroy/{journalLink}', ['uses' => 'LinkController@destroy', 'as' => 'destroy']);\n    }\n);\n\n/**\n * Report Popup Controller.\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Popup', 'prefix' => 'popup', 'as' => 'popup.'],\n    static function () {\n        Route::get('general', ['uses' => 'ReportController@general', 'as' => 'general']);\n    }\n);\n\n/*\n * Webhooks management\n */\nRoute::group(\n    ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\Http\\Controllers\\Webhooks', 'prefix' => 'webhooks', 'as' => 'webhooks.'],\n    static function () {\n        Route::get('index', ['uses' => 'IndexController@index', 'as' => 'index']);\n    }\n);\n\n/**\n * For the admin routes, the user must be logged in and have the role of 'owner'.\n */\nRoute::group(\n    ['middleware' => 'admin', 'namespace' => 'FireflyIII\\Http\\Controllers\\Admin', 'prefix' => 'admin', 'as' => 'admin.'],\n    static function () {\n\n    // admin home\n        Route::get('', ['uses' => 'HomeController@index', 'as' => 'index']);\n        Route::post('test-message', ['uses' => 'HomeController@testMessage', 'as' => 'test-message']);\n\n        // check for updates?\n        Route::get('update-check', ['uses' => 'UpdateController@index', 'as' => 'update-check']);\n        Route::any('update-check/manual', ['uses' => 'UpdateController@updateCheck', 'as' => 'update-check.manual']);\n        Route::post('update-check', ['uses' => 'UpdateController@post', 'as' => 'update-check.post']);\n\n        // user manager\n        Route::get('users', ['uses' => 'UserController@index', 'as' => 'users']);\n        Route::get('users/edit/{user}', ['uses' => 'UserController@edit', 'as' => 'users.edit']);\n        Route::get('users/delete/{user}', ['uses' => 'UserController@delete', 'as' => 'users.delete']);\n        Route::get('users/show/{user}', ['uses' => 'UserController@show', 'as' => 'users.show']);\n\n        Route::post('users/update/{user}', ['uses' => 'UserController@update', 'as' => 'users.update']);\n        Route::post('users/destroy/{user}', ['uses' => 'UserController@destroy', 'as' => 'users.destroy']);\n\n        // journal links manager\n        Route::get('links', ['uses' => 'LinkController@index', 'as' => 'links.index']);\n        Route::get('links/create', ['uses' => 'LinkController@create', 'as' => 'links.create']);\n        Route::get('links/show/{linkType}', ['uses' => 'LinkController@show', 'as' => 'links.show']);\n        Route::get('links/edit/{linkType}', ['uses' => 'LinkController@edit', 'as' => 'links.edit']);\n        Route::get('links/delete/{linkType}', ['uses' => 'LinkController@delete', 'as' => 'links.delete']);\n\n        Route::post('links/store', ['uses' => 'LinkController@store', 'as' => 'links.store']);\n        Route::post('links/update/{linkType}', ['uses' => 'LinkController@update', 'as' => 'links.update']);\n        Route::post('links/destroy/{linkType}', ['uses' => 'LinkController@destroy', 'as' => 'links.destroy']);\n\n        // FF configuration:\n        Route::get('configuration', ['uses' => 'ConfigurationController@index', 'as' => 'configuration.index']);\n        Route::post('configuration', ['uses' => 'ConfigurationController@postIndex', 'as' => 'configuration.index.post']);\n    }\n);\n"], "filenames": ["app/Http/Controllers/CurrencyController.php", "app/Http/Controllers/Transaction/CreateController.php", "public/v1/js/ff/currencies/index.js", "public/v1/js/ff/list/groups.js", "public/v1/js/ff/transactions/show.js", "resources/views/v1/currencies/index.twig", "resources/views/v1/list/groups.twig", "resources/views/v1/transactions/show.twig", "routes/web.php"], "buggy_code_start_loc": [216, 30, 27, 25, 25, 72, 88, 38, 341], "buggy_code_end_loc": [321, 84, 43, 210, 82, 103, 311, 427, 1016], "fixing_code_start_loc": [216, 31, 28, 26, 26, 72, 88, 37, 341], "fixing_code_end_loc": [335, 95, 79, 226, 100, 106, 315, 426, 1016], "type": "CWE-352", "message": "firefly-iii is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2021-3819", "sourceIdentifier": "security@huntr.dev", "published": "2021-09-27T13:15:07.830", "lastModified": "2021-09-30T22:03:02.913", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "firefly-iii is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "firefly-iii es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:firefly-iii:firefly_iii:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.6.1", "matchCriteriaId": "8A5784BA-E920-4B4C-9904-3C844B4BBA16"}]}]}], "references": [{"url": "https://github.com/firefly-iii/firefly-iii/commit/578f350498b75f31d321c78a608c7f7b3b7b07e9", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/da82f7b6-4ffc-4109-87a4-a2a790bd44e5", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/firefly-iii/firefly-iii/commit/578f350498b75f31d321c78a608c7f7b3b7b07e9"}}