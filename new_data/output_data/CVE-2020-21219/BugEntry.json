{"buggy_code": ["# $FreeBSD$\n\nPORTNAME=\tpfSense-pkg-acme\nPORTVERSION=\t0.6.3\nCATEGORIES=\tsecurity\nMASTER_SITES=\t# empty\nDISTFILES=\t# empty\nEXTRACT_ONLY=\t# empty\n\nMAINTAINER=\tPiBa.NL.dev@gmail.com\nCOMMENT=\tACME package for pfSense\n\nLICENSE=\tAPACHE20\n\nRUN_DEPENDS=\t${LOCALBASE}/bin/socat:net/socat \\\n\t\t${PHP_PKGNAMEPREFIX}pecl-ssh2>=0:security/pecl-ssh2@${PHP_FLAVOR}\n\nUSES=\t\tphp:flavors\nIGNORE_WITH_PHP=\t56 70 71\nUSE_PHP=\tftp\n\nNO_BUILD=\tyes\nNO_MTREE=\tyes\n\nSUB_FILES=\tpkg-install pkg-deinstall\nSUB_LIST=\tPORTNAME=${PORTNAME}\n\ndo-extract:\n\t${MKDIR} ${WRKSRC}\n\ndo-install:\n\t${MKDIR} ${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${MKDIR} ${STAGEDIR}${PREFIX}/www/acme\n\t${MKDIR} ${STAGEDIR}/etc/inc/priv\n\t${MKDIR} ${STAGEDIR}${DATADIR}\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme.xml \\\n\t\t${STAGEDIR}${PREFIX}/pkg\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/acme.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_sh.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/acme_command.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_gui.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_htmllist.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_serverconnectors.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_utils.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/pkg_acme_tabs.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_acmedns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_acmeproxy.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_active24.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ad.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ali.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_autodns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_aws.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_azure.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cf.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cloudns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cn.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_conoha.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cx.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cyon.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_da.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ddnss.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_desec.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dgon.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dnsimple.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_doapi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_do.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dpi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dp.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dreamhost.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_duckdns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_durabledns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dyn.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dynu.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_euserv.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_exoscale.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_freedns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gandi_livedns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gcloud.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gdnsdk.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gd.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_he.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_hexonet.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_hostingde.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_infoblox.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_internetbs.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_inwx.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ispconfig.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_jd.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_kinghost.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_knot.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_lexicon.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_linode.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_linode_v4.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_loopia.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_lua.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_me.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_myapi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_mydnsjp.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_namecheap.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_namecom.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_namesilo.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nederhost.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_neodigit.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_netcup.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nsone.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nsupdate.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nw.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_one.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_online.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_openprovider.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ovh.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_pdns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_pointhq.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_rackspace.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_regru.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_schlundtech.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_selectel.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_servercow.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_tele3.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ultra.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_unoeuro.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_vscale.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_vultr.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_yandex.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_zilore.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_zone.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_zonomi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_accountkeys.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_accountkeys_edit.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_certificates.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_certificates_edit.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_generalsettings.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}/etc/inc/priv/acme.priv.inc \\\n\t\t${STAGEDIR}/etc/inc/priv\n\t${INSTALL_DATA} ${FILESDIR}${DATADIR}/info.xml \\\n\t\t${STAGEDIR}${DATADIR}\n\t@${REINPLACE_CMD} -i '' -e \"s|%%PKGVERSION%%|${PKGVERSION}|\" \\\n\t\t${STAGEDIR}${DATADIR}/info.xml\n\n.include <bsd.port.mk>\n", "<?php\n/*\n * acme_sh.inc\n * \n * part of pfSense (https://www.pfsense.org/)\n * Copyright (c) 2016 PiBa-NL\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nnamespace pfsense_pkg\\acme;\n\nclass acme_sh_domain {\n\tpublic $domainname;\n\tpublic $method;\n\tpublic $challengealias;\n\tpublic $challengedomain;\n\tpublic $NSUPDATE_SERVER;\n\tpublic $NSUPDATE_KEYNAME;\n\tpublic $NSUPDATE_KEYALGO;\n\tpublic $NSUPDATE_KEY;\n\tpublic $NSUPDATE_ZONE;\n\tfunction __construct($domainname, $method) {\n\t\t$this->domainname = $domainname;\n\t\t$this->method = $method;\n\t}\n\tfunction setchallengealias($challengealias) {\n\t\t$this->challengealias = $challengealias;\n\t}\n\tfunction setchallengedomain($challengedomain) {\n\t\t$this->challengedomain = $challengedomain;\n\t}\n\tfunction setnsupdateparameters($server, $keyname, $keyalgo, $key, $zone = \"\") {\n\t\t$this->NSUPDATE_SERVER = $server;\n\t\t$this->NSUPDATE_KEYNAME = $keyname;\n\t\t$this->NSUPDATE_KEYALGO = $keyalgo;\n\t\t$this->NSUPDATE_KEY = $key;\n\t\t$this->NSUPDATE_ZONE = $zone;\n\t}\n}\n\t\nclass acme_sh {\n\n\tprivate $accountconfig;\n\tprivate $path_account;\n\tprivate $name;\n\tprivate $debug = true;\n\tpublic $dnssleep;\n\tpublic $ocspstaple;\n\t\n\tprivate function execacmesh($command, $envvariables = null) {\n\t\t$command = \"/usr/local/pkg/acme/acme.sh \" . $command;\n\t\tif ($this->debug) {\n\t\t\techo \"<br/>\\n\".$command.\"<br/>\\n\";\n\t\t}\n\t\t// add to cron environment path: /usr/local/bin/\n\t\t$env = array();\n\t\t$env['path'] = \"/etc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin/\";\n\t\t$env['PATH'] = \"/etc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin/\";\n\t\tif (is_array($envvariables)) {\n\t\t\t$env = array_merge($env, $envvariables);\n\t\t}\n\t\tif ($this->debug) {\n\t\t\tprint_r($env);\n\t\t}\n\t\t$descriptorspec = array(\n\t\t   0 => array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from\n\t\t   1 => array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to\n\t\t   2 => array(\"pipe\", \"w\")   // stderr\n\t\t);\n\t\t$process = proc_open($command, $descriptorspec, $pipes, null, $env);\n\t\tif (is_resource($process)) {\n\t\t\tif ($this->debug) {\n\t\t\t\techo stream_get_contents($pipes[1]);\n\t\t\t\techo stream_get_contents($pipes[2]);\n\t\t\t}\n\t\t\tfclose($pipes[0]);\n\t\t\tfclose($pipes[1]);\n\t\t\tfclose($pipes[2]);\n\t\t\t$return_value = proc_close($process);\n\t\t}\n\t\treturn $return_value;\n\t}\n\t\n\tfunction __construct($name, $ca, $email) {\n\t\t$this->name = $name;\n\t\t$this->init($ca, $name, $email);\n\t}\n\t\n\tfunction init($ca, $name, $email) {\n\t\t$conf = \"ACME_DIRECTORY='{$ca}/directory'\\nACCOUNT_EMAIL='{$email}'\\n\";\n\t\t$cahost = parse_url($ca, PHP_URL_HOST);\n\t\t$acmeconf = \"/tmp/acme/{$name}/\";\n\t\t$this->acmeconf = $acmeconf;\n\t\t$this->path_account = \"$acmeconf/ca/$cahost\";\n\t\tsafe_mkdir($this->path_account);\n\t\t$this->accountconfig = \"{$this->acmeconf}accountconf.conf\";\n\t\tfile_put_contents(\"{$this->accountconfig}\", $conf);\n\t}\n\t\n\tfunction generateAccountKey() {\n\t\tunlink_if_exists(\"{$this->path_account}/account.key\");\n\t\t$this->debug = false;\n\t\t$this->execacmesh(\"\"\n\t\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t\t. \" --createAccountKey\"\n\t\t\t\t. \" --accountkeylength 4096\"\n\t\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t\t);\n\t\t$privateKey = file_get_contents(\"{$this->path_account}/account.key\");\n\t\treturn $privateKey;\n\t}\n\t\n\tfunction registeraccount($key) {\n\t\tfile_put_contents(\"{$this->path_account}/account.key\", $key);\n\t\t$result = $this->execacmesh(\"\"\n\t\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t\t. \" --registeraccount\"\n\t\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t\t. \" --log-level 3\"\n\t\t\t\t. \" --log \" . escapeshellarg($this->acmeconf.\"acme_issuecert.log\"));\n\t\treturn $result == 0;\n\t}\n\t\n\tfunction generateDomainKey($domain, $keylength) {\n\t\tglobal $a_keylength;\n\t\t$pathadd = \"\";\n\t\tif ($a_keylength[$keylength]['ecc']) {\n\t\t\t$pathadd = \"_ecc\";\n\t\t}\n\t\t$certpath = \"{$this->acmeconf}{$domain}{$pathadd}\";\n\t\tsafe_mkdir($certpath);\n\t\t\n\t\tunlink_if_exists(\"{$certpath}/{$domain}.key\");\n\t\t$this->execacmesh(\"\"\n\t\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t\t. \" --createDomainKey -d \" . escapeshellarg($domain)\n\t\t\t\t. \" --keylength \" . escapeshellarg($keylength)\n\t\t\t\t. \" --log-level 3\"\n\t\t\t\t. \" --log \" . escapeshellarg($this->acmeconf.\"acme_createdomainkey.log\")\n\t\t\t\t);\n\t\t$privateKey = file_get_contents(\"{$certpath}/{$domain}.key\");\n\t\treturn $privateKey;\n\t}\n\t\n\tfunction signCertificate($action, $accountkey, $certificatepsk, $domainstosign, $envvariables = null) {\n\t\t// $action = issue / renew\n\t\tglobal $acme_domain_validation_method;\n\t\tfile_put_contents(\"{$this->path_account}/account.key\", base64_decode($accountkey));\n\n\t\t$cmdparameters = \"\";\n\t\tif (is_numericint($this->dnssleep)) {\n\t\t\t$cmdparameters .= \" --dnssleep \" . escapeshellarg($this->dnssleep);\n\t\t}\n\t\tif ($this->ocspstaple == \"yes\") {\n\t\t\t$cmdparameters .= \" --ocsp-must-staple \";\n\t\t}\n\t\t\n\t\t$Le_Domain = $domainstosign[0]->domainname;\n\t\t$certpath = \"{$this->acmeconf}{$Le_Domain}/\";\n\t\tsafe_mkdir($certpath);\n\t\t$CERT_KEY_PATH = \"{$certpath}{$Le_Domain}.key\";\n\t\t$CERT_PATH = \"{$certpath}{$Le_Domain}.cer\";\n\t\t$CA_CERT_PATH = \"{$certpath}ca.cer\";\n\t\t$CERT_FULLCHAIN_PATH = \"{$certpath}fullchain.cer\";\n\t\t$reloadcmd = \"/usr/local/pkg/acme/acme_command.sh\"\n\t\t\t\t. \" importcert \\\"{$this->name}\\\"\"\n\t\t\t\t. \" \\\"$Le_Domain\\\"\"\n\t\t\t\t. \" \\\"$CERT_KEY_PATH\\\"\"\n\t\t\t\t. \" \\\"$CERT_PATH\\\"\"\n\t\t\t\t. \" \\\"$CA_CERT_PATH\\\"\"\n\t\t\t\t. \" \\\"$CERT_FULLCHAIN_PATH\\\"\";\n\t\t$reloadfile = \"{$this->acmeconf}reloadcmd.sh\";\n\t\tfile_put_contents($reloadfile, $reloadcmd);\n\t\tchmod($reloadfile, 0755);\n\n\t\t$hookcontent_httpapi  = <<<EOF\npfSenseacme_add() {\n  /usr/local/pkg/acme/acme_command.sh \"deploykey\" \"{$this->name}\" \"\\$1\" \"\\$2\" \"\\$3\"\n}\n\npfSenseacme_rm() {\n  /usr/local/pkg/acme/acme_command.sh \"removekey\" \"{$this->name}\" \"\\$1\" \"\\$2\"\n}\nEOF;\n\t\tsafe_mkdir(\"{$this->acmeconf}httpapi\");\n\t\t$hookfile_httpapi = \"{$this->acmeconf}httpapi/pfSenseacme.sh\";\n\t\tfile_put_contents($hookfile_httpapi, $hookcontent_httpapi);\n\t\tchmod($hookfile_httpapi, 0755);\n\t\t\n\t\t$certpath = \"{$this->acmeconf}{$domainstosign[0]->domainname}\";\n\t\tsafe_mkdir($certpath);\n\t\tfile_put_contents(\"{$certpath}/{$domainstosign[0]->domainname}.key\", $certificatepsk);\n\t\t$domainstr = \"\";\n\t\tforeach($domainstosign as $domain) {\n\t\t\t$api = $domain->method; \n\t\t\t$domainstr .= \" -d \" . escapeshellarg($domain->domainname);\n\t\t\tif (!empty($domain->method)) {\n\t\t\t\t$domainparameters = \"\";\n\t\t\t\tif ($api && substr($api, 0, 4 ) === \"dns_\") {\n\t\t\t\t\tif (!empty($domain->challengealias)) {\n\t\t\t\t\t\t$aliasdirective = ($domain->challengedomain == \"yes\") ? \"--domain-alias\" : \"--challenge-alias\";\n\t\t\t\t\t\t$domainstr .= \" {$aliasdirective} \" . escapeshellarg($domain->challengealias);\n\t\t\t\t\t}\n\t\t\t\t\tif ($api == \"dns_manual\") {\n\t\t\t\t\t\t$cmdapi = \"\";\n\t\t\t\t\t\t$domainparameters .= \" --yes-I-know-dns-manual-mode-enough-go-ahead-please \";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$cmdapi = escapeshellarg($api);\n\t\t\t\t\t}\n\t\t\t\t\t$domainparameters .= \" --dns {$cmdapi} \";\n\t\t\t\t} elseif ($api == \"standalone\") {\n\t\t\t\t\t$port = empty($envvariables['port']) ? 80 : $envvariables['port'];\n\t\t\t\t\t$listen = ($envvariables['ipv6'] == \"yes\") ? \"--listen-v6\" : \"--listen-v4\";\n\t\t\t\t\t$domainparameters = \" --standalone {$listen} --httpport \" . escapeshellarg($port);\n\t\t\t\t} elseif ($api == \"standalonetls\") {\n\t\t\t\t\t$port = empty($envvariables['port']) ? 443 : $envvariables['port'];\n\t\t\t\t\t$domainparameters = \" --alpn --tlsport \" . escapeshellarg($port);\n\t\t\t\t} else {\n\t\t\t\t\t$domainparameters = \" --webroot pfSenseacme\";\n\t\t\t\t}\n\t\t\t\t$domainstr .= $domainparameters;\n\t\t\t}\n\t\t\tif ($domain->method == \"dns_nsupdate\") {\n\t\t\t\t/* Prefix to use as a base for server/key/private files */\n\t\t\t\t$nsupdatefileprefix = \"{$certpath}nsupdate\";\n\t\t\t\t$envvariables['NSUPDATE_SERVER'] = $nsupdatefileprefix;\n\t\t\t\t$envvariables['NSUPDATE_KEY'] = $nsupdatefileprefix;\n\t\t\t\t$envvariables['NSUPDATE_ZONE'] = $domain->NSUPDATE_ZONE;\n\t\t\t\t$nsupdatedomain = $domain->domainname;\n\t\t\t\tif (!empty($domain->challengealias)) {\n\t\t\t\t\t$nsupdatedomain = $domain->challengealias;\n\t\t\t\t}\n\n\t\t\t\t$acmechalengedom = (substr($nsupdatedomain, 0, 2) === \"*.\") ? substr($nsupdatedomain, 2) : $nsupdatedomain;\n\t\t\t\tfile_put_contents(\"{$nsupdatefileprefix}_acme-challenge.{$acmechalengedom}.server\", $domain->NSUPDATE_SERVER);\n\t\t\t\t$nsupdatekey = base64_decode($domain->NSUPDATE_KEY);\n\n\t\t\t\t/* Set a default key algo of HMAC-MD5 if the key type is invalid. */\n\t\t\t\t$key_algo = empty($domain->NSUPDATE_KEYALGO) || !array_key_exists($domain->NSUPDATE_KEYALGO, $acme_domain_validation_method['dns_nsupdate']['fields']['NSUPDATE_KEYALGO']['items']) ? '157' : $domain->NSUPDATE_KEYALGO;\n\t\t\t\t$key_name = empty($domain->NSUPDATE_KEYNAME) ? \"_acme-challenge.{$acmechalengedom}\" : rtrim($domain->NSUPDATE_KEYNAME, '.');\n\n\t\t\t\t/* Use ddns-confgen format key */\n\t\t\t\t$keydata = <<<EOD\nkey \"{$key_name}.\" {\n\talgorithm {$acme_domain_validation_method['dns_nsupdate']['fields']['NSUPDATE_KEYALGO']['items'][$key_algo]['name']};\n\tsecret \"{$nsupdatekey}\";\n};\nEOD;\n\t\t\t\tfile_put_contents(\"{$nsupdatefileprefix}_acme-challenge.{$acmechalengedom}.key\", $keydata);\n\t\t\t}\n\t\t}\n\t\t\n\t\t$this->execacmesh(\"\"\n\t\t\t. \" --{$action} {$domainstr}\"\n\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t. \" --force\"\n\t\t\t. \" --reloadCmd \" . escapeshellarg(\"{$this->acmeconf}reloadcmd.sh\")\n\t\t\t. $cmdparameters\n\t\t\t. \" --log-level 3\"\n\t\t\t. \" --log \" . escapeshellarg(\"{$this->acmeconf}acme_issuecert.log\")\n\t\t\t//. \" > {$this->acmeconf}issue.log 2>&1\"\n\t\t\t, $envvariables);\n\t\t$cer = \"{$certpath}/{$domainstosign[0]->domainname}.cer\";\n\t\tif (file_exists($cer)) {\n\t\t\tif ($action == \"renew\") {\n\t\t\t\t/* Renew action will not automatically run the reload command! */\n\t\t\t\tmwexec(\"{$this->acmeconf}reloadcmd.sh\");\n\t\t\t}\n\t\t\treturn $cer;\n\t\t}\n\t\treturn false;\n\t}\n}\n", "<?php\n/*\n * acme_accountkeys.php\n * \n * part of pfSense (https://www.pfsense.org/)\n * Copyright (c) 2016 PiBa-NL\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nnamespace pfsense_pkg\\acme;\n\n$shortcut_section = \"acme\";\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"certs.inc\");\nrequire_once(\"acme/acme.inc\");\nrequire_once(\"acme/acme_gui.inc\");\nrequire_once(\"acme/acme_utils.inc\");\nrequire_once(\"acme/pkg_acme_tabs.inc\");\n\n$changedesc = \"Services: Acme: Accountkeys\";\n\nif (!is_array($config['installedpackages']['acme']['accountkeys']['item'])) {\n\t$config['installedpackages']['acme']['accountkeys']['item'] = array();\n}\n$a_accountkeys = &$config['installedpackages']['acme']['accountkeys']['item'];\n\nif ($_POST) {\n\t$pconfig = $_POST;\n\n\tif ($_POST['apply']) {\n\t\t$result = haproxy_check_and_run($savemsg, true);\n\t\tif ($result) {\n\t\t\tunlink_if_exists($d_acmeconfdirty_path);\n\t\t}\n\t} elseif ($_POST['del_x']) {\n\t\t/* delete selected rules */\n\t\t$deleted = false;\n\t\tif (is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_accountkey_id($selection);\n\t\t\t}\n\t\t\tforeach ($selected as $itemnr) {\n\t\t\t\tunset($a_accountkeys[$itemnr]);\n\t\t\t\t$deleted = true;\n\t\t\t}\n\t\t\tif ($deleted) {\n\t\t\t\tif (write_config(\"Acme, deleting accountkey(s)\")) {\n\t\t\t\t\t//mark_subsystem_dirty('filter');\n\t\t\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\t\t}\n\t\t\t}\n\t\t\theader(\"Location: acme_accountkeys.php\");\n\t\t\texit;\n\t\t}\n\t} else {\t\n\n\t\t// from '\\src\\usr\\local\\www\\vpn_ipsec.php'\n\t\t/* yuck - IE won't send value attributes for image buttons, while Mozilla does - so we use .x/.y to find move button clicks instead... */\n\t\t// TODO: this. is. nasty.\n\t\tunset($delbtn, $delbtnp2, $movebtn, $movebtnp2, $togglebtn, $togglebtnp2);\n\t\tforeach ($_POST as $pn => $pd) {\n\t\t\tif (preg_match(\"/move_(.+)/\", $pn, $matches)) {\n\t\t\t\t$movebtn = $matches[1];\n\t\t\t}\n\t\t}\n\t\t//\n\t\t\n\t\t/* move selected p1 entries before this */\n\t\tif (isset($movebtn) && is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$moveto = get_accountkey_id($movebtn);\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_accountkey_id($selection);\n\t\t\t}\n\t\t\tarray_moveitemsbefore($a_accountkeys, $moveto, $selected);\n\t\t\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\twrite_config($changedesc);\t\t\t\n\t\t}\n\t}\n} else {\n\t$result = null;//haproxy_check_config($retval);\n\tif ($result) {\n\t\t$savemsg = gettext($result);\n\t}\n}\n\nif ($_GET['act'] == \"del\") {\n\t$id = $_GET['id'];\n\t$id = get_accountkey_id($id);\n\tif (isset($a_accountkeys[$id])) {\n\t\tif (!$input_errors) {\n\t\t\tunset($a_accountkeys[$id]);\n\t\t\t$changedesc .= \" Accountkey delete\";\n\t\t\twrite_config($changedesc);\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t}\n\t\theader(\"Location: acme_accountkeys.php\");\n\t\texit;\n\t}\n}\n\n$pgtitle = array(\"Services\", \"Acme\", \"Accountkeys\");\ninclude(\"head.inc\");\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\nif ($savemsg) {\n\tprint_info_box($savemsg);\n}\n\n/*$display_apply = file_exists($d_acmeconfdirty_path) ? \"\" : \"none\";\necho \"<div id='showapplysettings' style='display: {$display_apply};'>\";\nprint_apply_box(sprintf(gettext(\"The configuration has been changed.%sYou must apply the changes in order for them to take effect.\"), \"<br/>\"));\necho \"</div>\";\n*/\n?>\n<div id=\"renewoutputbox\" class=\"alert alert-success clearfix hidden\" role=\"alert\">\n\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n\t\t<span aria-hidden=\"true\">\u00d7</span>\n\t</button>\n\t<div id=\"renewoutput\" class=\"pull-left\">\n\t</div>\n</div>\n\n<?php\ndisplay_top_tabs_active($acme_tab_array['acme'], \"accountkeys\");\n?>\n<form action=\"acme_accountkeys.php\" method=\"post\">\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\">\n\t\t\t<h2 class=\"panel-title\">Account keys</h2>\n\t\t</div>\n\t\t<div id=\"mainarea\" class=\"table-responsive panel-body\">\n\t\t\t<table class=\"table table-hover table-striped table-condensed\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th width=\"30%\">Name</th>\n\t\t\t\t\t\t<th width=\"20%\">Description</th>\n\t\t\t\t\t\t<th>CA</th>\n\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody class=\"user-entries\">\n<?php\n\t\tforeach ($a_accountkeys as $accountkey) {\n\t\t\t$accountname = htmlspecialchars($accountkey['name']);\n\t\t\t?>\n\t\t\t<tr id=\"fr<?=$accountname;?>\" <?=$display?> onClick=\"fr_toggle('<?=$accountname;?>')\" ondblclick=\"document.location='acme_accountkeys_edit.php?id=<?=$accountname;?>';\">\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"checkbox\" id=\"frc<?=$accountname;?>\" onClick=\"fr_toggle('<?=$accountname;?>')\" name=\"rule[]\" value=\"<?=$accountname;?>\"/>\n\t\t\t\t\t<a class=\"fa fa-anchor\" id=\"Xmove_<?=$accountname?>\" title=\"<?=gettext(\"Move checked entries to here\")?>\"></a>\n\t\t\t\t</td>\n\t\t\t  <td>\n\t\t\t\t<?=$accountname;?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($accountkey['desc']);?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($accountkey['acmeserver']);?>\n\t\t\t  </td>\n\t\t\t  <td class=\"action-icons\">\n\t\t\t\t<button style=\"display: none;\" class=\"btn btn-default btn-xs\" type=\"submit\" id=\"move_<?=$accountname?>\" name=\"move_<?=$accountname?>\" value=\"move_<?=$accountname?>\"></button>\n\t\t\t\t<a href=\"acme_accountkeys_edit.php?id=<?=$accountname;?>\">\n\t\t\t\t\t<?=acmeicon(\"edit\", gettext(\"edit\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_accountkeys.php?act=del&amp;id=<?=$accountname;?>\" onclick=\"return confirm('Do you really want to delete this entry?')\">\n\t\t\t\t\t<?=acmeicon(\"delete\", gettext(\"delete\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_accountkeys_edit.php?dup=<?=$accountname;?>\">\n\t\t\t\t\t<?=acmeicon(\"clone\", gettext(\"clone\"))?>\n\t\t\t\t</a>\n\t\t\t  </td>\n\t\t\t</tr><?php\n\t\t}\n?>\t\t\t\t\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<nav class=\"action-buttons\">\n\t\t<a href=\"acme_accountkeys_edit.php\" role=\"button\" class=\"btn btn-sm btn-success\" title=\"<?=gettext('Add backend to the end of the list')?>\">\n\t\t\t<i class=\"fa fa-plus icon-embed-btn\"></i>\n\t\t\t<?=gettext(\"Add\");?>\n\t\t</a>\n\t\t<button name=\"del_x\" type=\"submit\" class=\"btn btn-danger btn-sm\" value=\"<?=gettext(\"Delete selected backends\"); ?>\" title=\"<?=gettext('Delete selected backends')?>\">\n\t\t\t<i class=\"fa fa-trash icon-embed-btn no-confirm\"></i>\n\t\t\t<?=gettext(\"Delete\"); ?>\n\t\t</button>\n\t\t<button type=\"submit\" id=\"order-store\" name=\"order-store\" class=\"btn btn-sm btn-primary\" value=\"store changes\" disabled title=\"<?=gettext('Save backend order')?>\">\n\t\t\t<i class=\"fa fa-save icon-embed-btn no-confirm\"></i>\n\t\t\t<?=gettext(\"Save\")?>\n\t\t</button>\n\t</nav>\n</form>\n\n<script type=\"text/javascript\">\n//<![CDATA[\n\nfunction set_content(elementid, image) {\n\tvar item = document.getElementById(elementid);\n\titem.innerHTML = image;\n}\n\nfunction js_callbackrenew(data) {\n\t$('#renewoutputbox').removeClass(\"hidden\");\n\t$('#renewoutput').html(data);\n}\n\nfunction js_callback(req_content) {\n\t\n\tshowapplysettings.style.display = 'block';\n\tif(req_content !== '') {\n\t\tvar itemsplit = req_content.split(\"|\");\n\t\tbuttonid = itemsplit[0];\n\t\tenabled = parseInt(itemsplit[1]);\n\t\tif (enabled === 1){\n\t\t\timg = \"<?=acmeicon(\"enabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t} else {\n\t\t\timg = \"<?=acmeicon(\"disabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t}\n\t\tset_content('btn_'+buttonid, img);\n\t}\n}\n\nfunction togglerow($id) {\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"toggle\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callback(data);\n\t\t}\n\t});\n}\n\nevents.push(function() {\n\t\n\t$('#clearallnotices').click(function() {\n\t\tajaxRequest = $.ajax({\n\t\t\turl: \"/index.php\",\n\t\t\ttype: \"post\",\n\t\t\tdata: { closenotice: \"all\"},\n\t\t\tsuccess: function() {\n\t\t\t\twindow.location = window.location.href;\n\t\t\t},\n\t\t\tfailure: function() {\n\t\t\t\talert(\"Error clearing notices!\");\n\t\t\t}\n\t\t});\n\t});\n\t\n\t$('[id^=Xmove_]').click(function (event) {\n\t\t$('#' + event.target.id.slice(1)).click();\n\t\treturn false;\n\t});\n\t$('[id^=Xmove_]').css('cursor', 'pointer');\n\n\t// Check all of the rule checkboxes so that their values are posted\n\t$('#order-store').click(function () {\n\t   $('[id^=frc]').prop('checked', true);\n\t});\n});\n//]]>\n</script>\n<?php include(\"foot.inc\");", "<?php\n/*\n * acme_certificates.php\n * \n * part of pfSense (https://www.pfsense.org/)\n * Copyright (c) 2016 PiBa-NL\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nnamespace pfsense_pkg\\acme;\n\n$shortcut_section = \"acme\";\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pfsense-utils.inc\");\nrequire_once(\"certs.inc\");\nrequire_once(\"acme/acme.inc\");\nrequire_once(\"acme/acme_gui.inc\");\nrequire_once(\"acme/acme_utils.inc\");\nrequire_once(\"acme/pkg_acme_tabs.inc\");\n\n$changedesc = \"Services: Acme: Certificates\";\n\n$a_certificates = &getarraybyref($config, 'installedpackages', 'acme', 'certificates', 'item');\n\nif($_POST['action'] == \"toggle\") {\n\t$id = $_POST['id'];\n\techo \"$id|\";\n\tif (isset($a_certificates[get_certificate_id($id)])) {\n\t\t$item = &$a_certificates[get_certificate_id($id)];\n\t\tif ($item['status'] != \"disabled\"){\n\t\t\t$item['status'] = 'disabled';\n\t\t\techo \"0|\";\n\t\t}else{\n\t\t\t$item['status'] = 'active';\n\t\t\techo \"1|\";\n\t\t}\n\t\t$changedesc .= \" set item '$id' status to: {$item['status']}\";\n\t\t\n\t\ttouch($d_acmeconfdirty_path);\n\t\twrite_config($changedesc);\n\t}\n\techo \"ok|\";\n\texit;\n}\nif($_POST['action'] == \"issuecert\") {\n\t$id = $_POST['id'];\n\techo $id . \"\\n\";\n\tif (isset($a_certificates[get_certificate_id($id)])) {\n\t\tissue_certificate($id, true);\n\t}\n\texit;\n}\nif($_POST['action'] == \"renewcert\") {\n\t$id = $_POST['id'];\n\techo $id . \"\\n\";\n\tif (isset($a_certificates[get_certificate_id($id)])) {\n\t\tissue_certificate($id, true, true);\n\t}\n\texit;\n}\n\nif ($_POST) {\n\t$pconfig = $_POST;\n\n\tif ($_POST['del_x']) {\n\t\t/* delete selected rules */\n\t\t$deleted = false;\n\t\tif (is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_certificate_id($selection);\n\t\t\t}\n\t\t\tforeach ($selected as $itemnr) {\n\t\t\t\tunset($a_certificates[$itemnr]);\n\t\t\t\t$deleted = true;\n\t\t\t}\n\t\t\tif ($deleted) {\n\t\t\t\tif (write_config(\"Acme, deleting certificate(s)\")) {\n\t\t\t\t\t//mark_subsystem_dirty('filter');\n\t\t\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\t\t}\n\t\t\t}\n\t\t\theader(\"Location: acme_certificates.php\");\n\t\t\texit;\n\t\t}\n\t} else {\t\n\n\t\t// from '\\src\\usr\\local\\www\\vpn_ipsec.php'\n\t\t/* yuck - IE won't send value attributes for image buttons, while Mozilla does - so we use .x/.y to find move button clicks instead... */\n\t\t// TODO: this. is. nasty.\n\t\tunset($delbtn, $delbtnp2, $movebtn, $movebtnp2, $togglebtn, $togglebtnp2);\n\t\tforeach ($_POST as $pn => $pd) {\n\t\t\tif (preg_match(\"/move_(.+)/\", $pn, $matches)) {\n\t\t\t\t$movebtn = substr($pd, 5);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* move selected p1 entries before this */\n\t\tif (isset($movebtn) && is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$moveto = get_certificate_id($movebtn);\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_certificate_id($selection);\n\t\t\t}\n\t\t\tarray_moveitemsbefore($a_certificates, $moveto, $selected);\n\t\t\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\twrite_config($changedesc);\t\t\t\n\t\t}\n\t}\n}\n\nif ($_GET['act'] == \"del\") {\n\t$id = $_GET['id'];\n\t$id = get_certificate_id($id);\n\tif (isset($a_certificates[$id])) {\n\t\tif (!$input_errors) {\n\t\t\tunset($a_certificates[$id]);\n\t\t\t$changedesc .= \" Item delete\";\n\t\t\twrite_config($changedesc);\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t}\n\t\theader(\"Location: acme_certificates.php\");\n\t\texit;\n\t}\n}\n\n$pgtitle = array(\"Services\", \"Acme\", \"Certificates\");\ninclude(\"head.inc\");\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\nif ($savemsg) {\n\tprint_info_box($savemsg);\n}\n\n/*$display_apply = file_exists($d_acmeconfdirty_path) ? \"\" : \"none\";\necho \"<div id='showapplysettings' style='display: {$display_apply};'>\";\nprint_apply_box(sprintf(gettext(\"The configuration has been changed.%sYou must apply the changes in order for them to take effect.\"), \"<br/>\"));\necho \"</div>\";\n*/\n?>\n<div id=\"renewoutputbox\" class=\"alert alert-success clearfix hidden\" role=\"alert\">\n\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n\t\t<span aria-hidden=\"true\">\u00d7</span>\n\t</button>\n\t<div id=\"renewoutput\" class=\"pull-left\">\n\t</div>\n</div>\n\t\n<?php\ndisplay_top_tabs_active($acme_tab_array['acme'], \"certificates\");\n?>\n<div class=\"panel panel-default\" id=\"search-panel\">\n\t<div class=\"panel-heading\">\n\t\t<h2 class=\"panel-title\">\n\t\t\t<?=gettext('Search')?>\n\t\t\t<span class=\"widget-heading-icon pull-right\">\n\t\t\t\t<a data-toggle=\"collapse\" href=\"#search-panel_panel-body\">\n\t\t\t\t\t<i class=\"fa fa-plus-circle\"></i>\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t</h2>\n\t</div>\n\t<div id=\"search-panel_panel-body\" class=\"panel-body collapse in\">\n\t\t<div class=\"form-group\">\n\t\t\t<label class=\"col-sm-2 control-label\">\n\t\t\t\t<?=gettext(\"Search term\")?>\n\t\t\t</label>\n\t\t\t<div class=\"col-sm-5\"><input class=\"form-control\" name=\"searchstr\" id=\"searchstr\" type=\"text\"/></div>\n\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t<select id=\"where\" class=\"form-control\">\n\t\t\t\t\t<option value=\"0\"><?=gettext(\"Name\")?></option>\n\t\t\t\t\t<option value=\"1\"><?=gettext(\"Description\")?></option>\n\t\t\t\t\t<option value=\"2\" selected><?=gettext(\"Both\")?></option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-3\">\n\t\t\t\t<a id=\"btnsearch\" title=\"<?=gettext(\"Search\")?>\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-search icon-embed-btn\"></i><?=gettext(\"Search\")?></a>\n\t\t\t\t<a id=\"btnclear\" title=\"<?=gettext(\"Clear\")?>\" class=\"btn btn-info btn-sm\"><i class=\"fa fa-undo icon-embed-btn\"></i><?=gettext(\"Clear\")?></a>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-10 col-sm-offset-2\">\n\t\t\t\t<span class=\"help-block\"><?=gettext('Enter a search string or *nix regular expression to search certificate names and distinguished names.')?></span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n<form action=\"acme_certificates.php\" method=\"post\">\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\">\n\t\t\t<h2 class=\"panel-title\">Certificates</h2>\n\t\t</div>\n\t\t<div id=\"mainarea\" class=\"table-responsive panel-body\">\n\t\t\t<table class=\"table table-hover table-striped table-condensed sortable-theme-bootstrap\" data-sortable>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th data-sortable=\"false\"></th>\n\t\t\t\t\t\t<th>On</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t<th>Account</th>\n\t\t\t\t\t\t<th data-sortable-type=\"date\">Last renewed</th>\n\t\t\t\t\t\t<th data-sortable=\"false\">Renew</th>\n\t\t\t\t\t\t<th data-sortable=\"false\">Actions</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody class=\"user-entries\">\n<?php\n\t\tforeach ($a_certificates as $certificate) {\n\t\t\t$certificatename = $certificate['name'];\n\t\t\t$disabled = $certificate['status'] != 'active';\n\t\t\t?>\n\t\t\t<tr id=\"fr<?=$certificatename;?>\" <?=$display?> onClick=\"fr_toggle('<?=$certificatename;?>')\" ondblclick=\"document.location='acme_certificates_edit.php?id=<?=$certificatename;?>';\" <?=($disabled ? ' class=\"disabled\"' : '')?>>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"checkbox\" id=\"frc<?=$certificatename;?>\" onClick=\"fr_toggle('<?=$certificatename;?>')\" name=\"rule[]\" value=\"<?=$certificatename;?>\"/>\n\t\t\t\t\t<a class=\"fa fa-anchor\" id=\"Xmove_<?=$certificatename?>\" title=\"<?=gettext(\"Move checked entries to here\")?>\"></a>\n\t\t\t\t</td>\n\t\t\t  <td>\n\t\t\t\t<?php\n\t\t\t\t\tif ($certificate['status']=='disabled'){\n\t\t\t\t\t\t$iconfn = \"disabled\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$iconfn = \"enabled\";\n\t\t\t\t\t}?>\n\t\t\t\t<a id=\"btn_<?=$certificatename;?>\" href='javascript:togglerow(\"<?=$certificatename;?>\");'>\n\t\t\t\t\t<?=acmeicon($iconfn, gettext(\"click to toggle enable/disable this certificate renewal\"))?>\n\t\t\t\t</a>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=$certificate['name'];?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($certificate['desc']);?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($certificate['acmeaccount']);?>\n\t\t\t  </td>\n\t\t\t  <td style=\"white-space: nowrap\">\n\t\t\t\t<?=date('r', $certificate['lastrenewal']);?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t  <?php\n\t\t\t\t\t$method = \"\";\n\t\t\t\t\tif (is_array($certificate['a_domainlist']['item'])) {\n\t\t\t\t\t\tforeach($certificate['a_domainlist']['item'] as $domain) {\n\t\t\t\t\t\t\tif ($domain['status'] == 'disable') {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$method = $domain['method'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t  if ($method == \"dns_manual\"): ?>\n\t\t\t\t  <a href='javascript:renewcertificate(\"<?=$certificatename;?>\");' class=\"btn btn-sm btn-primary\">\n\t\t\t\t\t  <i id=\"btnrenewicon_<?=$certificatename;?>\" class=\"fa fa-check\"></i> Renew\n\t\t\t\t  </a>\n\t\t\t\t  <a href='javascript:issuecertificate(\"<?=$certificatename;?>\");' class=\"btn btn-sm btn-primary\">\n\t\t\t\t\t  <i id=\"btnissueicon_<?=$certificatename;?>\" class=\"fa fa-check\"></i> Issue\n\t\t\t\t  </a>\n\t\t\t\t  <?php else: ?>\n\t\t\t\t  <a href='javascript:issuecertificate(\"<?=$certificatename;?>\");' class=\"btn btn-sm btn-primary\">\n\t\t\t\t\t  <i id=\"btnissueicon_<?=$certificatename;?>\" class=\"fa fa-check\"></i> Issue/Renew\n\t\t\t\t  </a>\n\t\t\t\t  <?php endif; ?>\n\t\t\t  </td>\n\t\t\t  <td class=\"action-icons\">\n\t\t\t\t<button style=\"display: none;\" class=\"btn btn-default btn-xs\" type=\"submit\" id=\"move_<?=$certificatename?>\" name=\"move_<?=$certificatename?>\" value=\"move_<?=$certificatename?>\"></button>\n\t\t\t\t<a href=\"acme_certificates_edit.php?id=<?=$certificatename;?>\">\n\t\t\t\t\t<?=acmeicon(\"edit\", gettext(\"edit\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_certificates.php?act=del&amp;id=<?=$certificatename;?>\">\n\t\t\t\t\t<?=acmeicon(\"delete\", gettext(\"delete\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_certificates_edit.php?dup=<?=$certificatename;?>\">\n\t\t\t\t\t<?=acmeicon(\"clone\", gettext(\"clone\"))?>\n\t\t\t\t</a>\n\t\t\t  </td>\n\t\t\t</tr><?php\n\t\t}\n?>\t\t\t\t\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<nav class=\"action-buttons\">\n\t\t<a href=\"acme_certificates_edit.php\" role=\"button\" class=\"btn btn-sm btn-success\" title=\"<?=gettext('Add certificate to the end of the list')?>\">\n\t\t\t<i class=\"fa fa-plus icon-embed-btn\"></i>\n\t\t\t<?=gettext(\"Add\");?>\n\t\t</a>\n\t\t<button name=\"del_x\" type=\"submit\" class=\"btn btn-danger btn-sm\" value=\"<?=gettext(\"Delete selected certificates\"); ?>\" title=\"<?=gettext('Delete selected certificates')?>\">\n\t\t\t<i class=\"fa fa-trash icon-embed-btn\"></i>\n\t\t\t<?=gettext(\"Delete\"); ?>\n\t\t</button>\n\t\t<button type=\"submit\" id=\"order-store\" name=\"order-store\" class=\"btn btn-sm btn-primary\" value=\"store changes\" disabled title=\"<?=gettext('Save certificate order')?>\">\n\t\t\t<i class=\"fa fa-save icon-embed-btn no-confirm\"></i>\n\t\t\t<?=gettext(\"Save\")?>\n\t\t</button>\n\t</nav>\n\n<div class=\"infoblock blockopen\">\n\t<?php print_info_box(sprintf(gettext('Use the search box to filter the list and show only matching entries. <br />' .\n\t\t\t\t\t\t   'Click table column headers to sort table entries. ' .\n\t\t\t\t\t\t   'Do not use the movement/reordering controls after sorting the table.'), '<br />'), 'info', false); ?>\n</div>\n</form>\n\n<script type=\"text/javascript\">\n//<![CDATA[\n\nfunction set_content(elementid, image) {\n\tvar item = document.getElementById(elementid);\n\titem.innerHTML = image;\n}\n\nfunction js_callbackrenew(data) {\n\t$('#renewoutputbox').removeClass(\"hidden\");\n\t$('#renewoutput').html(data.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />'));\n}\n\nfunction js_callback(req_content) {\n\t\n\tif(req_content !== '') {\n\t\tvar itemsplit = req_content.split(\"|\");\n\t\tbuttonid = itemsplit[0];\n\t\tenabled = parseInt(itemsplit[1]);\n\t\tif (enabled === 1){\n\t\t\timg = \"<?=acmeicon(\"enabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t} else {\n\t\t\timg = \"<?=acmeicon(\"disabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t}\n\t\tset_content('btn_'+buttonid, img);\n\t}\n}\n\nfunction issuecertificate($id) {\n\t$(\"i[id='btnissueicon_\"+$id+\"']\").removeClass(\"fa-check\").addClass(\"fa-cog fa-spin\");\n\t\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"issuecert\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callbackrenew(data);\n\t\t\t$(\"i[id='btnissueicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n\t\t},\n\t\terror: function(data) {\n\t\t\t$(\"i[id='btnissueicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-chain-broken\");\n\t\t}\n\t});\n}\n\nfunction renewcertificate($id) {\n\t$(\"i[id='btnrenewicon_\"+$id+\"']\").removeClass(\"fa-check\").addClass(\"fa-cog fa-spin\");\n\t\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"renewcert\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callbackrenew(data);\n\t\t\t$(\"i[id='btnrenewicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n\t\t},\n\t\terror: function(data) {\n\t\t\t$(\"i[id='btnrenewicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-chain-broken\");\n\t\t}\n\t});\n}\nfunction togglerow($id) {\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"toggle\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callback(data);\n\t\t}\n\t});\n}\n\nevents.push(function() {\n\t\n\t$('#clearallnotices').click(function() {\n\t\tajaxRequest = $.ajax({\n\t\t\turl: \"/index.php\",\n\t\t\ttype: \"post\",\n\t\t\tdata: { closenotice: \"all\"},\n\t\t\tsuccess: function() {\n\t\t\t\twindow.location = window.location.href;\n\t\t\t},\n\t\t\tfailure: function() {\n\t\t\t\talert(\"Error clearing notices!\");\n\t\t\t}\n\t\t});\n\t});\n\t\n\t$('[id^=Xmove_]').click(function (event) {\n\t\tbuttonid = event.target.id.slice(1);\n\t\t$(\"[id='\" + buttonid + \"']\").click();\n\t\treturn false;\n\t});\n\t$('[id^=Xmove_]').css('cursor', 'pointer');\n\n\t// Check all of the rule checkboxes so that their values are posted\n\t$('#order-store').click(function () {\n\t   $('[id^=frc]').prop('checked', true);\n\t});\n\n\t// Make these controls plain buttons\n\t$(\"#btnsearch\").prop('type', 'button');\n\t$(\"#btnclear\").prop('type', 'button');\n\n\t// Search for a term in the entry name and/or dn\n\t$(\"#btnsearch\").click(function() {\n\t\tvar searchstr = $('#searchstr').val().toLowerCase();\n\t\tvar table = $(\"table tbody\");\n\t\tvar where = $('#where').val();\n\n\t\ttable.find('tr').each(function (i) {\n\t\t\tvar $tds = $(this).find('td'),\n\t\t\t\tshortname = $tds.eq(2).text().trim().toLowerCase(),\n\t\t\t\tdescr = $tds.eq(3).text().trim().toLowerCase();\n\n\t\t\tregexp = new RegExp(searchstr);\n\t\t\tif (searchstr.length > 0) {\n\t\t\t\tif (!(regexp.test(shortname) && (where != 1)) && !(regexp.test(descr) && (where != 0))) {\n\t\t\t\t\t$(this).hide();\n\t\t\t\t} else {\n\t\t\t\t\t$(this).show();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(this).show();\t// A blank search string shows all\n\t\t\t}\n\t\t});\n\t});\n\n\t// Clear the search term and unhide all rows (that were hidden during a previous search)\n\t$(\"#btnclear\").click(function() {\n\t\tvar table = $(\"table tbody\");\n\n\t\t$('#searchstr').val(\"\");\n\n\t\ttable.find('tr').each(function (i) {\n\t\t\t$(this).show();\n\t\t});\n\t});\n\n\t// Hitting the enter key will do the same as clicking the search button\n\t$(\"#searchstr\").on(\"keyup\", function (event) {\n\t\tif (event.keyCode == 13) {\n\t\t\t$(\"#btnsearch\").get(0).click();\n\t\t}\n\t});\n});\n//]]>\n</script>\n<?php include(\"foot.inc\");\n"], "fixing_code": ["# $FreeBSD$\n\nPORTNAME=\tpfSense-pkg-acme\nPORTVERSION=\t0.6.3\nPORTREVISION=\t1\nCATEGORIES=\tsecurity\nMASTER_SITES=\t# empty\nDISTFILES=\t# empty\nEXTRACT_ONLY=\t# empty\n\nMAINTAINER=\tPiBa.NL.dev@gmail.com\nCOMMENT=\tACME package for pfSense\n\nLICENSE=\tAPACHE20\n\nRUN_DEPENDS=\t${LOCALBASE}/bin/socat:net/socat \\\n\t\t${PHP_PKGNAMEPREFIX}pecl-ssh2>=0:security/pecl-ssh2@${PHP_FLAVOR}\n\nUSES=\t\tphp:flavors\nIGNORE_WITH_PHP=\t56 70 71\nUSE_PHP=\tftp\n\nNO_BUILD=\tyes\nNO_MTREE=\tyes\n\nSUB_FILES=\tpkg-install pkg-deinstall\nSUB_LIST=\tPORTNAME=${PORTNAME}\n\ndo-extract:\n\t${MKDIR} ${WRKSRC}\n\ndo-install:\n\t${MKDIR} ${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${MKDIR} ${STAGEDIR}${PREFIX}/www/acme\n\t${MKDIR} ${STAGEDIR}/etc/inc/priv\n\t${MKDIR} ${STAGEDIR}${DATADIR}\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme.xml \\\n\t\t${STAGEDIR}${PREFIX}/pkg\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/acme.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_sh.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/acme_command.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_gui.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_htmllist.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_serverconnectors.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/acme_utils.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/pkg/acme/pkg_acme_tabs.inc \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_acmedns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_acmeproxy.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_active24.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ad.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ali.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_autodns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_aws.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_azure.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cf.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cloudns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cn.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_conoha.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cx.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_cyon.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_da.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ddnss.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_desec.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dgon.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dnsimple.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_doapi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_do.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dpi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dp.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dreamhost.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_duckdns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_durabledns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dyn.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_dynu.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_euserv.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_exoscale.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_freedns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gandi_livedns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gcloud.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gdnsdk.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_gd.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_he.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_hexonet.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_hostingde.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_infoblox.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_internetbs.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_inwx.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ispconfig.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_jd.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_kinghost.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_knot.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_lexicon.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_linode.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_linode_v4.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_loopia.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_lua.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_me.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_myapi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_mydnsjp.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_namecheap.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_namecom.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_namesilo.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nederhost.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_neodigit.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_netcup.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nsone.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nsupdate.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_nw.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_one.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_online.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_openprovider.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ovh.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_pdns.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_pointhq.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_rackspace.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_regru.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_schlundtech.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_selectel.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_servercow.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_tele3.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_ultra.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_unoeuro.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_vscale.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_vultr.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_yandex.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_zilore.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_zone.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_SCRIPT} ${FILESDIR}${PREFIX}/pkg/acme/dnsapi/dns_zonomi.sh \\\n\t\t${STAGEDIR}${PREFIX}/pkg/acme/dnsapi\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_accountkeys.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_accountkeys_edit.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_certificates.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_certificates_edit.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}${PREFIX}/www/acme/acme_generalsettings.php \\\n\t\t${STAGEDIR}${PREFIX}/www/acme\n\t${INSTALL_DATA} ${FILESDIR}/etc/inc/priv/acme.priv.inc \\\n\t\t${STAGEDIR}/etc/inc/priv\n\t${INSTALL_DATA} ${FILESDIR}${DATADIR}/info.xml \\\n\t\t${STAGEDIR}${DATADIR}\n\t@${REINPLACE_CMD} -i '' -e \"s|%%PKGVERSION%%|${PKGVERSION}|\" \\\n\t\t${STAGEDIR}${DATADIR}/info.xml\n\n.include <bsd.port.mk>\n", "<?php\n/*\n * acme_sh.inc\n * \n * part of pfSense (https://www.pfsense.org/)\n * Copyright (c) 2016 PiBa-NL\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nnamespace pfsense_pkg\\acme;\n\nclass acme_sh_domain {\n\tpublic $domainname;\n\tpublic $method;\n\tpublic $challengealias;\n\tpublic $challengedomain;\n\tpublic $NSUPDATE_SERVER;\n\tpublic $NSUPDATE_KEYNAME;\n\tpublic $NSUPDATE_KEYALGO;\n\tpublic $NSUPDATE_KEY;\n\tpublic $NSUPDATE_ZONE;\n\tfunction __construct($domainname, $method) {\n\t\t$this->domainname = $domainname;\n\t\t$this->method = $method;\n\t}\n\tfunction setchallengealias($challengealias) {\n\t\t$this->challengealias = $challengealias;\n\t}\n\tfunction setchallengedomain($challengedomain) {\n\t\t$this->challengedomain = $challengedomain;\n\t}\n\tfunction setnsupdateparameters($server, $keyname, $keyalgo, $key, $zone = \"\") {\n\t\t$this->NSUPDATE_SERVER = $server;\n\t\t$this->NSUPDATE_KEYNAME = $keyname;\n\t\t$this->NSUPDATE_KEYALGO = $keyalgo;\n\t\t$this->NSUPDATE_KEY = $key;\n\t\t$this->NSUPDATE_ZONE = $zone;\n\t}\n}\n\t\nclass acme_sh {\n\n\tprivate $accountconfig;\n\tprivate $path_account;\n\tprivate $name;\n\tprivate $debug = true;\n\tpublic $dnssleep;\n\tpublic $ocspstaple;\n\t\n\tprivate function execacmesh($command, $envvariables = null) {\n\t\t$command = \"/usr/local/pkg/acme/acme.sh \" . $command;\n\t\tif ($this->debug) {\n\t\t\techo \"\\n{$command}\\n\";\n\t\t}\n\t\t// add to cron environment path: /usr/local/bin/\n\t\t$env = array();\n\t\t$env['path'] = \"/etc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin/\";\n\t\t$env['PATH'] = \"/etc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin/\";\n\t\tif (is_array($envvariables)) {\n\t\t\t$env = array_merge($env, $envvariables);\n\t\t}\n\t\tif ($this->debug) {\n\t\t\tprint_r($env);\n\t\t}\n\t\t$descriptorspec = array(\n\t\t   0 => array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from\n\t\t   1 => array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to\n\t\t   2 => array(\"pipe\", \"w\")   // stderr\n\t\t);\n\t\t$process = proc_open($command, $descriptorspec, $pipes, null, $env);\n\t\tif (is_resource($process)) {\n\t\t\tif ($this->debug) {\n\t\t\t\techo stream_get_contents($pipes[1]);\n\t\t\t\techo stream_get_contents($pipes[2]);\n\t\t\t}\n\t\t\tfclose($pipes[0]);\n\t\t\tfclose($pipes[1]);\n\t\t\tfclose($pipes[2]);\n\t\t\t$return_value = proc_close($process);\n\t\t}\n\t\treturn $return_value;\n\t}\n\t\n\tfunction __construct($name, $ca, $email) {\n\t\t$this->name = $name;\n\t\t$this->init($ca, $name, $email);\n\t}\n\t\n\tfunction init($ca, $name, $email) {\n\t\t$conf = \"ACME_DIRECTORY='{$ca}/directory'\\nACCOUNT_EMAIL='{$email}'\\n\";\n\t\t$cahost = parse_url($ca, PHP_URL_HOST);\n\t\t$acmeconf = \"/tmp/acme/{$name}/\";\n\t\t$this->acmeconf = $acmeconf;\n\t\t$this->path_account = \"$acmeconf/ca/$cahost\";\n\t\tsafe_mkdir($this->path_account);\n\t\t$this->accountconfig = \"{$this->acmeconf}accountconf.conf\";\n\t\tfile_put_contents(\"{$this->accountconfig}\", $conf);\n\t}\n\t\n\tfunction generateAccountKey() {\n\t\tunlink_if_exists(\"{$this->path_account}/account.key\");\n\t\t$this->debug = false;\n\t\t$this->execacmesh(\"\"\n\t\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t\t. \" --createAccountKey\"\n\t\t\t\t. \" --accountkeylength 4096\"\n\t\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t\t);\n\t\t$privateKey = file_get_contents(\"{$this->path_account}/account.key\");\n\t\treturn $privateKey;\n\t}\n\t\n\tfunction registeraccount($key) {\n\t\tfile_put_contents(\"{$this->path_account}/account.key\", $key);\n\t\t$result = $this->execacmesh(\"\"\n\t\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t\t. \" --registeraccount\"\n\t\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t\t. \" --log-level 3\"\n\t\t\t\t. \" --log \" . escapeshellarg($this->acmeconf.\"acme_issuecert.log\"));\n\t\treturn $result == 0;\n\t}\n\t\n\tfunction generateDomainKey($domain, $keylength) {\n\t\tglobal $a_keylength;\n\t\t$pathadd = \"\";\n\t\tif ($a_keylength[$keylength]['ecc']) {\n\t\t\t$pathadd = \"_ecc\";\n\t\t}\n\t\t$certpath = \"{$this->acmeconf}{$domain}{$pathadd}\";\n\t\tsafe_mkdir($certpath);\n\t\t\n\t\tunlink_if_exists(\"{$certpath}/{$domain}.key\");\n\t\t$this->execacmesh(\"\"\n\t\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t\t. \" --createDomainKey -d \" . escapeshellarg($domain)\n\t\t\t\t. \" --keylength \" . escapeshellarg($keylength)\n\t\t\t\t. \" --log-level 3\"\n\t\t\t\t. \" --log \" . escapeshellarg($this->acmeconf.\"acme_createdomainkey.log\")\n\t\t\t\t);\n\t\t$privateKey = file_get_contents(\"{$certpath}/{$domain}.key\");\n\t\treturn $privateKey;\n\t}\n\t\n\tfunction signCertificate($action, $accountkey, $certificatepsk, $domainstosign, $envvariables = null) {\n\t\t// $action = issue / renew\n\t\tglobal $acme_domain_validation_method;\n\t\tfile_put_contents(\"{$this->path_account}/account.key\", base64_decode($accountkey));\n\n\t\t$cmdparameters = \"\";\n\t\tif (is_numericint($this->dnssleep)) {\n\t\t\t$cmdparameters .= \" --dnssleep \" . escapeshellarg($this->dnssleep);\n\t\t}\n\t\tif ($this->ocspstaple == \"yes\") {\n\t\t\t$cmdparameters .= \" --ocsp-must-staple \";\n\t\t}\n\t\t\n\t\t$Le_Domain = $domainstosign[0]->domainname;\n\t\t$certpath = \"{$this->acmeconf}{$Le_Domain}/\";\n\t\tsafe_mkdir($certpath);\n\t\t$CERT_KEY_PATH = \"{$certpath}{$Le_Domain}.key\";\n\t\t$CERT_PATH = \"{$certpath}{$Le_Domain}.cer\";\n\t\t$CA_CERT_PATH = \"{$certpath}ca.cer\";\n\t\t$CERT_FULLCHAIN_PATH = \"{$certpath}fullchain.cer\";\n\t\t$reloadcmd = \"/usr/local/pkg/acme/acme_command.sh\"\n\t\t\t\t. \" importcert \\\"{$this->name}\\\"\"\n\t\t\t\t. \" \\\"$Le_Domain\\\"\"\n\t\t\t\t. \" \\\"$CERT_KEY_PATH\\\"\"\n\t\t\t\t. \" \\\"$CERT_PATH\\\"\"\n\t\t\t\t. \" \\\"$CA_CERT_PATH\\\"\"\n\t\t\t\t. \" \\\"$CERT_FULLCHAIN_PATH\\\"\";\n\t\t$reloadfile = \"{$this->acmeconf}reloadcmd.sh\";\n\t\tfile_put_contents($reloadfile, $reloadcmd);\n\t\tchmod($reloadfile, 0755);\n\n\t\t$hookcontent_httpapi  = <<<EOF\npfSenseacme_add() {\n  /usr/local/pkg/acme/acme_command.sh \"deploykey\" \"{$this->name}\" \"\\$1\" \"\\$2\" \"\\$3\"\n}\n\npfSenseacme_rm() {\n  /usr/local/pkg/acme/acme_command.sh \"removekey\" \"{$this->name}\" \"\\$1\" \"\\$2\"\n}\nEOF;\n\t\tsafe_mkdir(\"{$this->acmeconf}httpapi\");\n\t\t$hookfile_httpapi = \"{$this->acmeconf}httpapi/pfSenseacme.sh\";\n\t\tfile_put_contents($hookfile_httpapi, $hookcontent_httpapi);\n\t\tchmod($hookfile_httpapi, 0755);\n\t\t\n\t\t$certpath = \"{$this->acmeconf}{$domainstosign[0]->domainname}\";\n\t\tsafe_mkdir($certpath);\n\t\tfile_put_contents(\"{$certpath}/{$domainstosign[0]->domainname}.key\", $certificatepsk);\n\t\t$domainstr = \"\";\n\t\tforeach($domainstosign as $domain) {\n\t\t\t$api = $domain->method; \n\t\t\t$domainstr .= \" -d \" . escapeshellarg($domain->domainname);\n\t\t\tif (!empty($domain->method)) {\n\t\t\t\t$domainparameters = \"\";\n\t\t\t\tif ($api && substr($api, 0, 4 ) === \"dns_\") {\n\t\t\t\t\tif (!empty($domain->challengealias)) {\n\t\t\t\t\t\t$aliasdirective = ($domain->challengedomain == \"yes\") ? \"--domain-alias\" : \"--challenge-alias\";\n\t\t\t\t\t\t$domainstr .= \" {$aliasdirective} \" . escapeshellarg($domain->challengealias);\n\t\t\t\t\t}\n\t\t\t\t\tif ($api == \"dns_manual\") {\n\t\t\t\t\t\t$cmdapi = \"\";\n\t\t\t\t\t\t$domainparameters .= \" --yes-I-know-dns-manual-mode-enough-go-ahead-please \";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$cmdapi = escapeshellarg($api);\n\t\t\t\t\t}\n\t\t\t\t\t$domainparameters .= \" --dns {$cmdapi} \";\n\t\t\t\t} elseif ($api == \"standalone\") {\n\t\t\t\t\t$port = empty($envvariables['port']) ? 80 : $envvariables['port'];\n\t\t\t\t\t$listen = ($envvariables['ipv6'] == \"yes\") ? \"--listen-v6\" : \"--listen-v4\";\n\t\t\t\t\t$domainparameters = \" --standalone {$listen} --httpport \" . escapeshellarg($port);\n\t\t\t\t} elseif ($api == \"standalonetls\") {\n\t\t\t\t\t$port = empty($envvariables['port']) ? 443 : $envvariables['port'];\n\t\t\t\t\t$domainparameters = \" --alpn --tlsport \" . escapeshellarg($port);\n\t\t\t\t} else {\n\t\t\t\t\t$domainparameters = \" --webroot pfSenseacme\";\n\t\t\t\t}\n\t\t\t\t$domainstr .= $domainparameters;\n\t\t\t}\n\t\t\tif ($domain->method == \"dns_nsupdate\") {\n\t\t\t\t/* Prefix to use as a base for server/key/private files */\n\t\t\t\t$nsupdatefileprefix = \"{$certpath}nsupdate\";\n\t\t\t\t$envvariables['NSUPDATE_SERVER'] = $nsupdatefileprefix;\n\t\t\t\t$envvariables['NSUPDATE_KEY'] = $nsupdatefileprefix;\n\t\t\t\t$envvariables['NSUPDATE_ZONE'] = $domain->NSUPDATE_ZONE;\n\t\t\t\t$nsupdatedomain = $domain->domainname;\n\t\t\t\tif (!empty($domain->challengealias)) {\n\t\t\t\t\t$nsupdatedomain = $domain->challengealias;\n\t\t\t\t}\n\n\t\t\t\t$acmechalengedom = (substr($nsupdatedomain, 0, 2) === \"*.\") ? substr($nsupdatedomain, 2) : $nsupdatedomain;\n\t\t\t\tfile_put_contents(\"{$nsupdatefileprefix}_acme-challenge.{$acmechalengedom}.server\", $domain->NSUPDATE_SERVER);\n\t\t\t\t$nsupdatekey = base64_decode($domain->NSUPDATE_KEY);\n\n\t\t\t\t/* Set a default key algo of HMAC-MD5 if the key type is invalid. */\n\t\t\t\t$key_algo = empty($domain->NSUPDATE_KEYALGO) || !array_key_exists($domain->NSUPDATE_KEYALGO, $acme_domain_validation_method['dns_nsupdate']['fields']['NSUPDATE_KEYALGO']['items']) ? '157' : $domain->NSUPDATE_KEYALGO;\n\t\t\t\t$key_name = empty($domain->NSUPDATE_KEYNAME) ? \"_acme-challenge.{$acmechalengedom}\" : rtrim($domain->NSUPDATE_KEYNAME, '.');\n\n\t\t\t\t/* Use ddns-confgen format key */\n\t\t\t\t$keydata = <<<EOD\nkey \"{$key_name}.\" {\n\talgorithm {$acme_domain_validation_method['dns_nsupdate']['fields']['NSUPDATE_KEYALGO']['items'][$key_algo]['name']};\n\tsecret \"{$nsupdatekey}\";\n};\nEOD;\n\t\t\t\tfile_put_contents(\"{$nsupdatefileprefix}_acme-challenge.{$acmechalengedom}.key\", $keydata);\n\t\t\t}\n\t\t}\n\t\t\n\t\t$this->execacmesh(\"\"\n\t\t\t. \" --{$action} {$domainstr}\"\n\t\t\t. \" --home \" . escapeshellarg($this->acmeconf)\n\t\t\t. \" --accountconf \" . escapeshellarg($this->accountconfig)\n\t\t\t. \" --force\"\n\t\t\t. \" --reloadCmd \" . escapeshellarg(\"{$this->acmeconf}reloadcmd.sh\")\n\t\t\t. $cmdparameters\n\t\t\t. \" --log-level 3\"\n\t\t\t. \" --log \" . escapeshellarg(\"{$this->acmeconf}acme_issuecert.log\")\n\t\t\t//. \" > {$this->acmeconf}issue.log 2>&1\"\n\t\t\t, $envvariables);\n\t\t$cer = \"{$certpath}/{$domainstosign[0]->domainname}.cer\";\n\t\tif (file_exists($cer)) {\n\t\t\tif ($action == \"renew\") {\n\t\t\t\t/* Renew action will not automatically run the reload command! */\n\t\t\t\tmwexec(\"{$this->acmeconf}reloadcmd.sh\");\n\t\t\t}\n\t\t\treturn $cer;\n\t\t}\n\t\treturn false;\n\t}\n}\n", "<?php\n/*\n * acme_accountkeys.php\n * \n * part of pfSense (https://www.pfsense.org/)\n * Copyright (c) 2016 PiBa-NL\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nnamespace pfsense_pkg\\acme;\n\n$shortcut_section = \"acme\";\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"certs.inc\");\nrequire_once(\"acme/acme.inc\");\nrequire_once(\"acme/acme_gui.inc\");\nrequire_once(\"acme/acme_utils.inc\");\nrequire_once(\"acme/pkg_acme_tabs.inc\");\n\n$changedesc = \"Services: Acme: Accountkeys\";\n\nif (!is_array($config['installedpackages']['acme']['accountkeys']['item'])) {\n\t$config['installedpackages']['acme']['accountkeys']['item'] = array();\n}\n$a_accountkeys = &$config['installedpackages']['acme']['accountkeys']['item'];\n\nif ($_POST) {\n\t$pconfig = $_POST;\n\n\tif ($_POST['apply']) {\n\t\t$result = haproxy_check_and_run($savemsg, true);\n\t\tif ($result) {\n\t\t\tunlink_if_exists($d_acmeconfdirty_path);\n\t\t}\n\t} elseif ($_POST['del_x']) {\n\t\t/* delete selected rules */\n\t\t$deleted = false;\n\t\tif (is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_accountkey_id($selection);\n\t\t\t}\n\t\t\tforeach ($selected as $itemnr) {\n\t\t\t\tunset($a_accountkeys[$itemnr]);\n\t\t\t\t$deleted = true;\n\t\t\t}\n\t\t\tif ($deleted) {\n\t\t\t\tif (write_config(\"Acme, deleting accountkey(s)\")) {\n\t\t\t\t\t//mark_subsystem_dirty('filter');\n\t\t\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\t\t}\n\t\t\t}\n\t\t\theader(\"Location: acme_accountkeys.php\");\n\t\t\texit;\n\t\t}\n\t} else {\t\n\n\t\t// from '\\src\\usr\\local\\www\\vpn_ipsec.php'\n\t\t/* yuck - IE won't send value attributes for image buttons, while Mozilla does - so we use .x/.y to find move button clicks instead... */\n\t\t// TODO: this. is. nasty.\n\t\tunset($delbtn, $delbtnp2, $movebtn, $movebtnp2, $togglebtn, $togglebtnp2);\n\t\tforeach ($_POST as $pn => $pd) {\n\t\t\tif (preg_match(\"/move_(.+)/\", $pn, $matches)) {\n\t\t\t\t$movebtn = $matches[1];\n\t\t\t}\n\t\t}\n\t\t//\n\t\t\n\t\t/* move selected p1 entries before this */\n\t\tif (isset($movebtn) && is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$moveto = get_accountkey_id($movebtn);\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_accountkey_id($selection);\n\t\t\t}\n\t\t\tarray_moveitemsbefore($a_accountkeys, $moveto, $selected);\n\t\t\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\twrite_config($changedesc);\t\t\t\n\t\t}\n\t}\n} else {\n\t$result = null;//haproxy_check_config($retval);\n\tif ($result) {\n\t\t$savemsg = gettext($result);\n\t}\n}\n\nif ($_GET['act'] == \"del\") {\n\t$id = $_GET['id'];\n\t$id = get_accountkey_id($id);\n\tif (isset($a_accountkeys[$id])) {\n\t\tif (!$input_errors) {\n\t\t\tunset($a_accountkeys[$id]);\n\t\t\t$changedesc .= \" Accountkey delete\";\n\t\t\twrite_config($changedesc);\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t}\n\t\theader(\"Location: acme_accountkeys.php\");\n\t\texit;\n\t}\n}\n\n$pgtitle = array(\"Services\", \"Acme\", \"Accountkeys\");\ninclude(\"head.inc\");\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\nif ($savemsg) {\n\tprint_info_box($savemsg);\n}\n\n/*$display_apply = file_exists($d_acmeconfdirty_path) ? \"\" : \"none\";\necho \"<div id='showapplysettings' style='display: {$display_apply};'>\";\nprint_apply_box(sprintf(gettext(\"The configuration has been changed.%sYou must apply the changes in order for them to take effect.\"), \"<br/>\"));\necho \"</div>\";\n*/\n?>\n<div id=\"renewoutputbox\" class=\"alert alert-success clearfix hidden\" role=\"alert\">\n\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n\t\t<span aria-hidden=\"true\">\u00d7</span>\n\t</button>\n\t<div id=\"renewoutput\" class=\"pull-left\" style=\"white-space: pre-wrap\">\n\t</div>\n</div>\n\n<?php\ndisplay_top_tabs_active($acme_tab_array['acme'], \"accountkeys\");\n?>\n<form action=\"acme_accountkeys.php\" method=\"post\">\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\">\n\t\t\t<h2 class=\"panel-title\">Account keys</h2>\n\t\t</div>\n\t\t<div id=\"mainarea\" class=\"table-responsive panel-body\">\n\t\t\t<table class=\"table table-hover table-striped table-condensed\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th width=\"30%\">Name</th>\n\t\t\t\t\t\t<th width=\"20%\">Description</th>\n\t\t\t\t\t\t<th>CA</th>\n\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody class=\"user-entries\">\n<?php\n\t\tforeach ($a_accountkeys as $accountkey) {\n\t\t\t$accountname = htmlspecialchars($accountkey['name']);\n\t\t\t?>\n\t\t\t<tr id=\"fr<?=$accountname;?>\" <?=$display?> onClick=\"fr_toggle('<?=$accountname;?>')\" ondblclick=\"document.location='acme_accountkeys_edit.php?id=<?=$accountname;?>';\">\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"checkbox\" id=\"frc<?=$accountname;?>\" onClick=\"fr_toggle('<?=$accountname;?>')\" name=\"rule[]\" value=\"<?=$accountname;?>\"/>\n\t\t\t\t\t<a class=\"fa fa-anchor\" id=\"Xmove_<?=$accountname?>\" title=\"<?=gettext(\"Move checked entries to here\")?>\"></a>\n\t\t\t\t</td>\n\t\t\t  <td>\n\t\t\t\t<?=$accountname;?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($accountkey['desc']);?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($accountkey['acmeserver']);?>\n\t\t\t  </td>\n\t\t\t  <td class=\"action-icons\">\n\t\t\t\t<button style=\"display: none;\" class=\"btn btn-default btn-xs\" type=\"submit\" id=\"move_<?=$accountname?>\" name=\"move_<?=$accountname?>\" value=\"move_<?=$accountname?>\"></button>\n\t\t\t\t<a href=\"acme_accountkeys_edit.php?id=<?=$accountname;?>\">\n\t\t\t\t\t<?=acmeicon(\"edit\", gettext(\"edit\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_accountkeys.php?act=del&amp;id=<?=$accountname;?>\" onclick=\"return confirm('Do you really want to delete this entry?')\">\n\t\t\t\t\t<?=acmeicon(\"delete\", gettext(\"delete\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_accountkeys_edit.php?dup=<?=$accountname;?>\">\n\t\t\t\t\t<?=acmeicon(\"clone\", gettext(\"clone\"))?>\n\t\t\t\t</a>\n\t\t\t  </td>\n\t\t\t</tr><?php\n\t\t}\n?>\t\t\t\t\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<nav class=\"action-buttons\">\n\t\t<a href=\"acme_accountkeys_edit.php\" role=\"button\" class=\"btn btn-sm btn-success\" title=\"<?=gettext('Add backend to the end of the list')?>\">\n\t\t\t<i class=\"fa fa-plus icon-embed-btn\"></i>\n\t\t\t<?=gettext(\"Add\");?>\n\t\t</a>\n\t\t<button name=\"del_x\" type=\"submit\" class=\"btn btn-danger btn-sm\" value=\"<?=gettext(\"Delete selected backends\"); ?>\" title=\"<?=gettext('Delete selected backends')?>\">\n\t\t\t<i class=\"fa fa-trash icon-embed-btn no-confirm\"></i>\n\t\t\t<?=gettext(\"Delete\"); ?>\n\t\t</button>\n\t\t<button type=\"submit\" id=\"order-store\" name=\"order-store\" class=\"btn btn-sm btn-primary\" value=\"store changes\" disabled title=\"<?=gettext('Save backend order')?>\">\n\t\t\t<i class=\"fa fa-save icon-embed-btn no-confirm\"></i>\n\t\t\t<?=gettext(\"Save\")?>\n\t\t</button>\n\t</nav>\n</form>\n\n<script type=\"text/javascript\">\n//<![CDATA[\n\nfunction set_content(elementid, image) {\n\tvar item = document.getElementById(elementid);\n\titem.innerHTML = image;\n}\n\nfunction js_callbackrenew(data) {\n\t$('#renewoutputbox').removeClass(\"hidden\");\n\t$('#renewoutput').text(data);\n}\n\nfunction js_callback(req_content) {\n\t\n\tshowapplysettings.style.display = 'block';\n\tif(req_content !== '') {\n\t\tvar itemsplit = req_content.split(\"|\");\n\t\tbuttonid = itemsplit[0];\n\t\tenabled = parseInt(itemsplit[1]);\n\t\tif (enabled === 1){\n\t\t\timg = \"<?=acmeicon(\"enabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t} else {\n\t\t\timg = \"<?=acmeicon(\"disabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t}\n\t\tset_content('btn_'+buttonid, img);\n\t}\n}\n\nfunction togglerow($id) {\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"toggle\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callback(data);\n\t\t}\n\t});\n}\n\nevents.push(function() {\n\t\n\t$('#clearallnotices').click(function() {\n\t\tajaxRequest = $.ajax({\n\t\t\turl: \"/index.php\",\n\t\t\ttype: \"post\",\n\t\t\tdata: { closenotice: \"all\"},\n\t\t\tsuccess: function() {\n\t\t\t\twindow.location = window.location.href;\n\t\t\t},\n\t\t\tfailure: function() {\n\t\t\t\talert(\"Error clearing notices!\");\n\t\t\t}\n\t\t});\n\t});\n\t\n\t$('[id^=Xmove_]').click(function (event) {\n\t\t$('#' + event.target.id.slice(1)).click();\n\t\treturn false;\n\t});\n\t$('[id^=Xmove_]').css('cursor', 'pointer');\n\n\t// Check all of the rule checkboxes so that their values are posted\n\t$('#order-store').click(function () {\n\t   $('[id^=frc]').prop('checked', true);\n\t});\n});\n//]]>\n</script>\n<?php include(\"foot.inc\");", "<?php\n/*\n * acme_certificates.php\n * \n * part of pfSense (https://www.pfsense.org/)\n * Copyright (c) 2016 PiBa-NL\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nnamespace pfsense_pkg\\acme;\n\n$shortcut_section = \"acme\";\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pfsense-utils.inc\");\nrequire_once(\"certs.inc\");\nrequire_once(\"acme/acme.inc\");\nrequire_once(\"acme/acme_gui.inc\");\nrequire_once(\"acme/acme_utils.inc\");\nrequire_once(\"acme/pkg_acme_tabs.inc\");\n\n$changedesc = \"Services: Acme: Certificates\";\n\n$a_certificates = &getarraybyref($config, 'installedpackages', 'acme', 'certificates', 'item');\n\nif($_POST['action'] == \"toggle\") {\n\t$id = $_POST['id'];\n\techo \"$id|\";\n\tif (isset($a_certificates[get_certificate_id($id)])) {\n\t\t$item = &$a_certificates[get_certificate_id($id)];\n\t\tif ($item['status'] != \"disabled\"){\n\t\t\t$item['status'] = 'disabled';\n\t\t\techo \"0|\";\n\t\t}else{\n\t\t\t$item['status'] = 'active';\n\t\t\techo \"1|\";\n\t\t}\n\t\t$changedesc .= \" set item '$id' status to: {$item['status']}\";\n\t\t\n\t\ttouch($d_acmeconfdirty_path);\n\t\twrite_config($changedesc);\n\t}\n\techo \"ok|\";\n\texit;\n}\nif($_POST['action'] == \"issuecert\") {\n\t$id = $_POST['id'];\n\techo $id . \"\\n\";\n\tif (isset($a_certificates[get_certificate_id($id)])) {\n\t\tissue_certificate($id, true);\n\t}\n\texit;\n}\nif($_POST['action'] == \"renewcert\") {\n\t$id = $_POST['id'];\n\techo $id . \"\\n\";\n\tif (isset($a_certificates[get_certificate_id($id)])) {\n\t\tissue_certificate($id, true, true);\n\t}\n\texit;\n}\n\nif ($_POST) {\n\t$pconfig = $_POST;\n\n\tif ($_POST['del_x']) {\n\t\t/* delete selected rules */\n\t\t$deleted = false;\n\t\tif (is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_certificate_id($selection);\n\t\t\t}\n\t\t\tforeach ($selected as $itemnr) {\n\t\t\t\tunset($a_certificates[$itemnr]);\n\t\t\t\t$deleted = true;\n\t\t\t}\n\t\t\tif ($deleted) {\n\t\t\t\tif (write_config(\"Acme, deleting certificate(s)\")) {\n\t\t\t\t\t//mark_subsystem_dirty('filter');\n\t\t\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\t\t}\n\t\t\t}\n\t\t\theader(\"Location: acme_certificates.php\");\n\t\t\texit;\n\t\t}\n\t} else {\t\n\n\t\t// from '\\src\\usr\\local\\www\\vpn_ipsec.php'\n\t\t/* yuck - IE won't send value attributes for image buttons, while Mozilla does - so we use .x/.y to find move button clicks instead... */\n\t\t// TODO: this. is. nasty.\n\t\tunset($delbtn, $delbtnp2, $movebtn, $movebtnp2, $togglebtn, $togglebtnp2);\n\t\tforeach ($_POST as $pn => $pd) {\n\t\t\tif (preg_match(\"/move_(.+)/\", $pn, $matches)) {\n\t\t\t\t$movebtn = substr($pd, 5);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* move selected p1 entries before this */\n\t\tif (isset($movebtn) && is_array($_POST['rule']) && count($_POST['rule'])) {\n\t\t\t$moveto = get_certificate_id($movebtn);\n\t\t\t$selected = array();\n\t\t\tforeach($_POST['rule'] as $selection) {\n\t\t\t\t$selected[] = get_certificate_id($selection);\n\t\t\t}\n\t\t\tarray_moveitemsbefore($a_certificates, $moveto, $selected);\n\t\t\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t\twrite_config($changedesc);\t\t\t\n\t\t}\n\t}\n}\n\nif ($_GET['act'] == \"del\") {\n\t$id = $_GET['id'];\n\t$id = get_certificate_id($id);\n\tif (isset($a_certificates[$id])) {\n\t\tif (!$input_errors) {\n\t\t\tunset($a_certificates[$id]);\n\t\t\t$changedesc .= \" Item delete\";\n\t\t\twrite_config($changedesc);\n\t\t\ttouch($d_acmeconfdirty_path);\n\t\t}\n\t\theader(\"Location: acme_certificates.php\");\n\t\texit;\n\t}\n}\n\n$pgtitle = array(\"Services\", \"Acme\", \"Certificates\");\ninclude(\"head.inc\");\nif ($input_errors) {\n\tprint_input_errors($input_errors);\n}\nif ($savemsg) {\n\tprint_info_box($savemsg);\n}\n\n/*$display_apply = file_exists($d_acmeconfdirty_path) ? \"\" : \"none\";\necho \"<div id='showapplysettings' style='display: {$display_apply};'>\";\nprint_apply_box(sprintf(gettext(\"The configuration has been changed.%sYou must apply the changes in order for them to take effect.\"), \"<br/>\"));\necho \"</div>\";\n*/\n?>\n<div id=\"renewoutputbox\" class=\"alert alert-success clearfix hidden\" role=\"alert\">\n\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n\t\t<span aria-hidden=\"true\">\u00d7</span>\n\t</button>\n\t<div id=\"renewoutput\" class=\"pull-left\" style=\"white-space: pre-wrap\">\n\t</div>\n</div>\n\t\n<?php\ndisplay_top_tabs_active($acme_tab_array['acme'], \"certificates\");\n?>\n<div class=\"panel panel-default\" id=\"search-panel\">\n\t<div class=\"panel-heading\">\n\t\t<h2 class=\"panel-title\">\n\t\t\t<?=gettext('Search')?>\n\t\t\t<span class=\"widget-heading-icon pull-right\">\n\t\t\t\t<a data-toggle=\"collapse\" href=\"#search-panel_panel-body\">\n\t\t\t\t\t<i class=\"fa fa-plus-circle\"></i>\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t</h2>\n\t</div>\n\t<div id=\"search-panel_panel-body\" class=\"panel-body collapse in\">\n\t\t<div class=\"form-group\">\n\t\t\t<label class=\"col-sm-2 control-label\">\n\t\t\t\t<?=gettext(\"Search term\")?>\n\t\t\t</label>\n\t\t\t<div class=\"col-sm-5\"><input class=\"form-control\" name=\"searchstr\" id=\"searchstr\" type=\"text\"/></div>\n\t\t\t<div class=\"col-sm-2\">\n\t\t\t\t<select id=\"where\" class=\"form-control\">\n\t\t\t\t\t<option value=\"0\"><?=gettext(\"Name\")?></option>\n\t\t\t\t\t<option value=\"1\"><?=gettext(\"Description\")?></option>\n\t\t\t\t\t<option value=\"2\" selected><?=gettext(\"Both\")?></option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-3\">\n\t\t\t\t<a id=\"btnsearch\" title=\"<?=gettext(\"Search\")?>\" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-search icon-embed-btn\"></i><?=gettext(\"Search\")?></a>\n\t\t\t\t<a id=\"btnclear\" title=\"<?=gettext(\"Clear\")?>\" class=\"btn btn-info btn-sm\"><i class=\"fa fa-undo icon-embed-btn\"></i><?=gettext(\"Clear\")?></a>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-10 col-sm-offset-2\">\n\t\t\t\t<span class=\"help-block\"><?=gettext('Enter a search string or *nix regular expression to search certificate names and distinguished names.')?></span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n<form action=\"acme_certificates.php\" method=\"post\">\n\t<div class=\"panel panel-default\">\n\t\t<div class=\"panel-heading\">\n\t\t\t<h2 class=\"panel-title\">Certificates</h2>\n\t\t</div>\n\t\t<div id=\"mainarea\" class=\"table-responsive panel-body\">\n\t\t\t<table class=\"table table-hover table-striped table-condensed sortable-theme-bootstrap\" data-sortable>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th data-sortable=\"false\"></th>\n\t\t\t\t\t\t<th>On</th>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t<th>Account</th>\n\t\t\t\t\t\t<th data-sortable-type=\"date\">Last renewed</th>\n\t\t\t\t\t\t<th data-sortable=\"false\">Renew</th>\n\t\t\t\t\t\t<th data-sortable=\"false\">Actions</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody class=\"user-entries\">\n<?php\n\t\tforeach ($a_certificates as $certificate) {\n\t\t\t$certificatename = $certificate['name'];\n\t\t\t$disabled = $certificate['status'] != 'active';\n\t\t\t?>\n\t\t\t<tr id=\"fr<?=$certificatename;?>\" <?=$display?> onClick=\"fr_toggle('<?=$certificatename;?>')\" ondblclick=\"document.location='acme_certificates_edit.php?id=<?=$certificatename;?>';\" <?=($disabled ? ' class=\"disabled\"' : '')?>>\n\t\t\t\t<td>\n\t\t\t\t\t<input type=\"checkbox\" id=\"frc<?=$certificatename;?>\" onClick=\"fr_toggle('<?=$certificatename;?>')\" name=\"rule[]\" value=\"<?=$certificatename;?>\"/>\n\t\t\t\t\t<a class=\"fa fa-anchor\" id=\"Xmove_<?=$certificatename?>\" title=\"<?=gettext(\"Move checked entries to here\")?>\"></a>\n\t\t\t\t</td>\n\t\t\t  <td>\n\t\t\t\t<?php\n\t\t\t\t\tif ($certificate['status']=='disabled'){\n\t\t\t\t\t\t$iconfn = \"disabled\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$iconfn = \"enabled\";\n\t\t\t\t\t}?>\n\t\t\t\t<a id=\"btn_<?=$certificatename;?>\" href='javascript:togglerow(\"<?=$certificatename;?>\");'>\n\t\t\t\t\t<?=acmeicon($iconfn, gettext(\"click to toggle enable/disable this certificate renewal\"))?>\n\t\t\t\t</a>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=$certificate['name'];?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($certificate['desc']);?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t<?=htmlspecialchars($certificate['acmeaccount']);?>\n\t\t\t  </td>\n\t\t\t  <td style=\"white-space: nowrap\">\n\t\t\t\t<?=date('r', $certificate['lastrenewal']);?>\n\t\t\t  </td>\n\t\t\t  <td>\n\t\t\t\t  <?php\n\t\t\t\t\t$method = \"\";\n\t\t\t\t\tif (is_array($certificate['a_domainlist']['item'])) {\n\t\t\t\t\t\tforeach($certificate['a_domainlist']['item'] as $domain) {\n\t\t\t\t\t\t\tif ($domain['status'] == 'disable') {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$method = $domain['method'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t  if ($method == \"dns_manual\"): ?>\n\t\t\t\t  <a href='javascript:renewcertificate(\"<?=$certificatename;?>\");' class=\"btn btn-sm btn-primary\">\n\t\t\t\t\t  <i id=\"btnrenewicon_<?=$certificatename;?>\" class=\"fa fa-check\"></i> Renew\n\t\t\t\t  </a>\n\t\t\t\t  <a href='javascript:issuecertificate(\"<?=$certificatename;?>\");' class=\"btn btn-sm btn-primary\">\n\t\t\t\t\t  <i id=\"btnissueicon_<?=$certificatename;?>\" class=\"fa fa-check\"></i> Issue\n\t\t\t\t  </a>\n\t\t\t\t  <?php else: ?>\n\t\t\t\t  <a href='javascript:issuecertificate(\"<?=$certificatename;?>\");' class=\"btn btn-sm btn-primary\">\n\t\t\t\t\t  <i id=\"btnissueicon_<?=$certificatename;?>\" class=\"fa fa-check\"></i> Issue/Renew\n\t\t\t\t  </a>\n\t\t\t\t  <?php endif; ?>\n\t\t\t  </td>\n\t\t\t  <td class=\"action-icons\">\n\t\t\t\t<button style=\"display: none;\" class=\"btn btn-default btn-xs\" type=\"submit\" id=\"move_<?=$certificatename?>\" name=\"move_<?=$certificatename?>\" value=\"move_<?=$certificatename?>\"></button>\n\t\t\t\t<a href=\"acme_certificates_edit.php?id=<?=$certificatename;?>\">\n\t\t\t\t\t<?=acmeicon(\"edit\", gettext(\"edit\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_certificates.php?act=del&amp;id=<?=$certificatename;?>\">\n\t\t\t\t\t<?=acmeicon(\"delete\", gettext(\"delete\"))?>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"acme_certificates_edit.php?dup=<?=$certificatename;?>\">\n\t\t\t\t\t<?=acmeicon(\"clone\", gettext(\"clone\"))?>\n\t\t\t\t</a>\n\t\t\t  </td>\n\t\t\t</tr><?php\n\t\t}\n?>\t\t\t\t\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<nav class=\"action-buttons\">\n\t\t<a href=\"acme_certificates_edit.php\" role=\"button\" class=\"btn btn-sm btn-success\" title=\"<?=gettext('Add certificate to the end of the list')?>\">\n\t\t\t<i class=\"fa fa-plus icon-embed-btn\"></i>\n\t\t\t<?=gettext(\"Add\");?>\n\t\t</a>\n\t\t<button name=\"del_x\" type=\"submit\" class=\"btn btn-danger btn-sm\" value=\"<?=gettext(\"Delete selected certificates\"); ?>\" title=\"<?=gettext('Delete selected certificates')?>\">\n\t\t\t<i class=\"fa fa-trash icon-embed-btn\"></i>\n\t\t\t<?=gettext(\"Delete\"); ?>\n\t\t</button>\n\t\t<button type=\"submit\" id=\"order-store\" name=\"order-store\" class=\"btn btn-sm btn-primary\" value=\"store changes\" disabled title=\"<?=gettext('Save certificate order')?>\">\n\t\t\t<i class=\"fa fa-save icon-embed-btn no-confirm\"></i>\n\t\t\t<?=gettext(\"Save\")?>\n\t\t</button>\n\t</nav>\n\n<div class=\"infoblock blockopen\">\n\t<?php print_info_box(sprintf(gettext('Use the search box to filter the list and show only matching entries. <br />' .\n\t\t\t\t\t\t   'Click table column headers to sort table entries. ' .\n\t\t\t\t\t\t   'Do not use the movement/reordering controls after sorting the table.'), '<br />'), 'info', false); ?>\n</div>\n</form>\n\n<script type=\"text/javascript\">\n//<![CDATA[\n\nfunction set_content(elementid, image) {\n\tvar item = document.getElementById(elementid);\n\titem.innerHTML = image;\n}\n\nfunction js_callbackrenew(data) {\n\t$('#renewoutputbox').removeClass(\"hidden\");\n\t$('#renewoutput').text(data);\n}\n\nfunction js_callback(req_content) {\n\t\n\tif(req_content !== '') {\n\t\tvar itemsplit = req_content.split(\"|\");\n\t\tbuttonid = itemsplit[0];\n\t\tenabled = parseInt(itemsplit[1]);\n\t\tif (enabled === 1){\n\t\t\timg = \"<?=acmeicon(\"enabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t} else {\n\t\t\timg = \"<?=acmeicon(\"disabled\", gettext(\"click to toggle enable/disable this certificate renewal\"))?>\";\n\t\t}\n\t\tset_content('btn_'+buttonid, img);\n\t}\n}\n\nfunction issuecertificate($id) {\n\t$(\"i[id='btnissueicon_\"+$id+\"']\").removeClass(\"fa-check\").addClass(\"fa-cog fa-spin\");\n\t\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"issuecert\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callbackrenew(data);\n\t\t\t$(\"i[id='btnissueicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n\t\t},\n\t\terror: function(data) {\n\t\t\t$(\"i[id='btnissueicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-chain-broken\");\n\t\t}\n\t});\n}\n\nfunction renewcertificate($id) {\n\t$(\"i[id='btnrenewicon_\"+$id+\"']\").removeClass(\"fa-check\").addClass(\"fa-cog fa-spin\");\n\t\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"renewcert\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callbackrenew(data);\n\t\t\t$(\"i[id='btnrenewicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n\t\t},\n\t\terror: function(data) {\n\t\t\t$(\"i[id='btnrenewicon_\"+$id+\"']\").removeClass(\"fa-cog fa-spin\").addClass(\"fa-chain-broken\");\n\t\t}\n\t});\n}\nfunction togglerow($id) {\n\tajaxRequest = $.ajax({\n\t\turl: \"\",\n\t\ttype: \"post\",\n\t\tdata: { id: $id, action: \"toggle\"},\n\t\tsuccess: function(data) {\n\t\t\tjs_callback(data);\n\t\t}\n\t});\n}\n\nevents.push(function() {\n\t\n\t$('#clearallnotices').click(function() {\n\t\tajaxRequest = $.ajax({\n\t\t\turl: \"/index.php\",\n\t\t\ttype: \"post\",\n\t\t\tdata: { closenotice: \"all\"},\n\t\t\tsuccess: function() {\n\t\t\t\twindow.location = window.location.href;\n\t\t\t},\n\t\t\tfailure: function() {\n\t\t\t\talert(\"Error clearing notices!\");\n\t\t\t}\n\t\t});\n\t});\n\t\n\t$('[id^=Xmove_]').click(function (event) {\n\t\tbuttonid = event.target.id.slice(1);\n\t\t$(\"[id='\" + buttonid + \"']\").click();\n\t\treturn false;\n\t});\n\t$('[id^=Xmove_]').css('cursor', 'pointer');\n\n\t// Check all of the rule checkboxes so that their values are posted\n\t$('#order-store').click(function () {\n\t   $('[id^=frc]').prop('checked', true);\n\t});\n\n\t// Make these controls plain buttons\n\t$(\"#btnsearch\").prop('type', 'button');\n\t$(\"#btnclear\").prop('type', 'button');\n\n\t// Search for a term in the entry name and/or dn\n\t$(\"#btnsearch\").click(function() {\n\t\tvar searchstr = $('#searchstr').val().toLowerCase();\n\t\tvar table = $(\"table tbody\");\n\t\tvar where = $('#where').val();\n\n\t\ttable.find('tr').each(function (i) {\n\t\t\tvar $tds = $(this).find('td'),\n\t\t\t\tshortname = $tds.eq(2).text().trim().toLowerCase(),\n\t\t\t\tdescr = $tds.eq(3).text().trim().toLowerCase();\n\n\t\t\tregexp = new RegExp(searchstr);\n\t\t\tif (searchstr.length > 0) {\n\t\t\t\tif (!(regexp.test(shortname) && (where != 1)) && !(regexp.test(descr) && (where != 0))) {\n\t\t\t\t\t$(this).hide();\n\t\t\t\t} else {\n\t\t\t\t\t$(this).show();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(this).show();\t// A blank search string shows all\n\t\t\t}\n\t\t});\n\t});\n\n\t// Clear the search term and unhide all rows (that were hidden during a previous search)\n\t$(\"#btnclear\").click(function() {\n\t\tvar table = $(\"table tbody\");\n\n\t\t$('#searchstr').val(\"\");\n\n\t\ttable.find('tr').each(function (i) {\n\t\t\t$(this).show();\n\t\t});\n\t});\n\n\t// Hitting the enter key will do the same as clicking the search button\n\t$(\"#searchstr\").on(\"keyup\", function (event) {\n\t\tif (event.keyCode == 13) {\n\t\t\t$(\"#btnsearch\").get(0).click();\n\t\t}\n\t});\n});\n//]]>\n</script>\n<?php include(\"foot.inc\");\n"], "filenames": ["security/pfSense-pkg-acme/Makefile", "security/pfSense-pkg-acme/files/usr/local/pkg/acme/acme_sh.inc", "security/pfSense-pkg-acme/files/usr/local/www/acme/acme_accountkeys.php", "security/pfSense-pkg-acme/files/usr/local/www/acme/acme_certificates.php"], "buggy_code_start_loc": [4, 65, 135, 159], "buggy_code_end_loc": [4, 66, 223, 330], "fixing_code_start_loc": [5, 65, 135, 159], "fixing_code_end_loc": [6, 66, 223, 330], "type": "CWE-79", "message": "Cross Site Scripting (XSS) vulnerability in Netgate pf Sense 2.4.4-Release-p3 and Netgate ACME package 0.6.3 allows remote attackers to to run arbitrary code via the RootFolder field to acme_certificate_edit.php page of the ACME package.", "other": {"cve": {"id": "CVE-2020-21219", "sourceIdentifier": "cve@mitre.org", "published": "2022-12-15T19:15:15.510", "lastModified": "2022-12-19T16:46:17.960", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross Site Scripting (XSS) vulnerability in Netgate pf Sense 2.4.4-Release-p3 and Netgate ACME package 0.6.3 allows remote attackers to to run arbitrary code via the RootFolder field to acme_certificate_edit.php page of the ACME package."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netgate:acme:0.6.3:*:*:*:*:*:*:*", "matchCriteriaId": "6D96FC86-B9E9-4A50-A57E-3522B379D854"}, {"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:2.4.4:p3:*:*:*:*:*:*", "matchCriteriaId": "2FC53B2F-94B4-4985-B49E-652C6D3A9940"}]}]}], "references": [{"url": "https://github.com/pfsense/FreeBSD-ports/commit/a6f443cde51e7fcf17e51f16014d3589253284d8", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://redmine.pfsense.org/issues/9888", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pfsense/FreeBSD-ports/commit/a6f443cde51e7fcf17e51f16014d3589253284d8"}}