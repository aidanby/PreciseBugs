{"buggy_code": ["<?php\n\n/**\n * ---------------------------------------------------------------------\n *\n * GLPI - Gestionnaire Libre de Parc Informatique\n *\n * http://glpi-project.org\n *\n * @copyright 2015-2022 Teclib' and contributors.\n * @copyright 2003-2014 by the INDEPNET Development Team.\n * @licence   https://www.gnu.org/licenses/gpl-3.0.html\n *\n * ---------------------------------------------------------------------\n *\n * LICENSE\n *\n * This file is part of GLPI.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * ---------------------------------------------------------------------\n */\n\nuse Glpi\\Inventory\\Request;\n\nif (!defined('GLPI_ROOT')) {\n    include(__DIR__ . '/../inc/includes.php');\n}\n\n$inventory_request = new Request();\n$inventory_request->handleHeaders();\n\n$handle = true;\nif (isset($_GET['refused'])) {\n    $refused = new RefusedEquipment();\n    if ($refused->getFromDB($_GET['refused']) && ($inventory_file = $refused->getInventoryFileName()) !== null) {\n        $contents = file_get_contents($inventory_file);\n    } else {\n        trigger_error(\n            sprintf('Invalid RefusedEquipment \"%s\" or inventory file missing', $_GET['refused']),\n            E_USER_WARNING\n        );\n        $contents = '';\n    }\n} else if (!isCommandLine() && $_SERVER['REQUEST_METHOD'] != 'POST') {\n    if (isset($_GET['action']) && $_GET['action'] == 'getConfig') {\n        /**\n         * Even if Fusion protocol is not supported for getConfig requests, they\n         * should be handled and answered with a json content type\n         */\n        $inventory_request->handleContentType('application/json');\n        $inventory_request->addError('Protocol not supported', 400);\n    } else {\n        // Method not allowed answer without content\n        $inventory_request->addError(null, 405);\n    }\n    $handle = false;\n} else {\n    if (isCommandLine()) {\n        $f = fopen('php://stdin', 'r');\n        $contents = '';\n        while ($line = fgets($f)) {\n            $contents .= $line;\n        }\n        fclose($f);\n    } else {\n        $contents = file_get_contents(\"php://input\");\n    }\n}\n\nif ($handle === true) {\n    try {\n        $inventory_request->handleRequest($contents);\n    } catch (\\Exception $e) {\n        $inventory_request->addError($e->getMessage());\n    }\n}\n\nif (isset($_GET['refused'])) {\n    $redirect_url = $refused->handleInventoryRequest($inventory_request);\n    Html::redirect($redirect_url);\n} else {\n    if (isCommandLine()) {\n        exit(0);\n    }\n    $headers = $inventory_request->getHeaders(true);\n    http_response_code($inventory_request->getHttpResponseCode());\n    foreach ($headers as $key => $value) {\n        header(sprintf('%1$s: %2$s', $key, $value));\n    }\n    echo $inventory_request->getResponse();\n}\n"], "fixing_code": ["<?php\n\n/**\n * ---------------------------------------------------------------------\n *\n * GLPI - Gestionnaire Libre de Parc Informatique\n *\n * http://glpi-project.org\n *\n * @copyright 2015-2022 Teclib' and contributors.\n * @copyright 2003-2014 by the INDEPNET Development Team.\n * @licence   https://www.gnu.org/licenses/gpl-3.0.html\n *\n * ---------------------------------------------------------------------\n *\n * LICENSE\n *\n * This file is part of GLPI.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * ---------------------------------------------------------------------\n */\n\nuse Glpi\\Inventory\\Request;\n\nif (!defined('GLPI_ROOT')) {\n    include(__DIR__ . '/../inc/includes.php');\n}\n\n$inventory_request = new Request();\n$inventory_request->handleHeaders();\n\n$handle = true;\nif (isset($_GET['refused'])) {\n    Session::checkRight(\"config\", READ);\n    $refused = new RefusedEquipment();\n    if ($refused->getFromDB($_GET['refused']) && ($inventory_file = $refused->getInventoryFileName()) !== null) {\n        $contents = file_get_contents($inventory_file);\n    } else {\n        trigger_error(\n            sprintf('Invalid RefusedEquipment \"%s\" or inventory file missing', $_GET['refused']),\n            E_USER_WARNING\n        );\n        $contents = '';\n    }\n} else if (!isCommandLine() && $_SERVER['REQUEST_METHOD'] != 'POST') {\n    if (isset($_GET['action']) && $_GET['action'] == 'getConfig') {\n        /**\n         * Even if Fusion protocol is not supported for getConfig requests, they\n         * should be handled and answered with a json content type\n         */\n        $inventory_request->handleContentType('application/json');\n        $inventory_request->addError('Protocol not supported', 400);\n    } else {\n        // Method not allowed answer without content\n        $inventory_request->addError(null, 405);\n    }\n    $handle = false;\n} else {\n    if (isCommandLine()) {\n        $f = fopen('php://stdin', 'r');\n        $contents = '';\n        while ($line = fgets($f)) {\n            $contents .= $line;\n        }\n        fclose($f);\n    } else {\n        $contents = file_get_contents(\"php://input\");\n    }\n}\n\nif ($handle === true) {\n    try {\n        $inventory_request->handleRequest($contents);\n    } catch (\\Exception $e) {\n        $inventory_request->addError($e->getMessage());\n    }\n}\n\nif (isset($_GET['refused'])) {\n    $redirect_url = $refused->handleInventoryRequest($inventory_request);\n    Html::redirect($redirect_url);\n} else {\n    if (isCommandLine()) {\n        exit(0);\n    }\n    $headers = $inventory_request->getHeaders(true);\n    http_response_code($inventory_request->getHttpResponseCode());\n    foreach ($headers as $key => $value) {\n        header(sprintf('%1$s: %2$s', $key, $value));\n    }\n    echo $inventory_request->getResponse();\n}\n"], "filenames": ["front/inventory.php"], "buggy_code_start_loc": [46], "buggy_code_end_loc": [46], "fixing_code_start_loc": [47], "fixing_code_end_loc": [48], "type": "NVD-CWE-noinfo", "message": "GLPI is a Free Asset and IT Management Software package, Data center management, ITIL Service Desk, licenses tracking and software auditing. In affected versions all GLPI instances with the native inventory used may leak sensitive information. The feature to get refused file is not authenticated. This issue has been addressed in version 10.0.2 and all affected users are advised to upgrade.", "other": {"cve": {"id": "CVE-2022-31068", "sourceIdentifier": "security-advisories@github.com", "published": "2022-06-28T18:15:08.487", "lastModified": "2022-07-07T16:46:41.933", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "GLPI is a Free Asset and IT Management Software package, Data center management, ITIL Service Desk, licenses tracking and software auditing. In affected versions all GLPI instances with the native inventory used may leak sensitive information. The feature to get refused file is not authenticated. This issue has been addressed in version 10.0.2 and all affected users are advised to upgrade."}, {"lang": "es", "value": "GLPI es un paquete de software gratuito de administraci\u00f3n de activos y TI, administraci\u00f3n de centros de datos, ITIL Service Desk, seguimiento de licencias y auditor\u00eda de software. En las versiones afectadas todas las instancias de GLPI con el inventario nativo usado pueden filtrar informaci\u00f3n confidencial. La funcionalidad para conseguir el archivo rechazado no est\u00e1 autenticada. Este problema ha sido abordado en la versi\u00f3n 10.0.2 y es recomendado a todos los usuarios afectados actualizar"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:glpi-project:glpi:*:*:*:*:*:*:*:*", "versionStartIncluding": "10.0.0", "versionEndExcluding": "10.0.2", "matchCriteriaId": "6CB71059-6156-42BE-8A8D-73F053C080C7"}]}]}], "references": [{"url": "https://github.com/glpi-project/glpi/commit/9953a644777e4167b06db9e14fc93b945a557be5", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/glpi-project/glpi/security/advisories/GHSA-g4hm-6vfr-q3wg", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/glpi-project/glpi/commit/9953a644777e4167b06db9e14fc93b945a557be5"}}