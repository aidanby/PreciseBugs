{"buggy_code": ["<?php\n/**\n * alert_rule_list.inc.php\n *\n * LibreNMS alert_rule_list modal\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * @link       https://www.librenms.org\n *\n * @copyright  2020 Thomas Berberich\n * @author     Thomas Berberich <sourcehhdoctor@gmail.com>\n */\n\nuse LibreNMS\\Alerting\\QueryBuilderParser;\n\nif (! Auth::user()->hasGlobalAdmin()) {\n    exit('ERROR: You need to be admin');\n}\n\n?>\n\n<div class=\"modal fade\" id=\"search_alert_rule_modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"search_alert_rule_list\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                <h5 class=\"modal-title\" id=\"search_alert_rule_list\">Running Alert rules</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"table-responsive\">\n                    <table id=\"alert_rule_list\" class=\"table table-condensed table-hover\">\n                        <thead>\n                            <tr>\n                                <th data-column-id=\"alert_name\" data-width=\"200px\">Name</th>\n                                <th data-column-id=\"alert_rule\">Rule</th>\n                                <th data-column-id=\"alert_severity\">Severity</th>\n                                <td data-column-id=\"alert_action\" data-formatter=\"alert_action\"></td>\n                            </tr>\n                        </thead>\n                        <?php\n                        $alert_rules = dbFetchRows('SELECT * FROM alert_rules order by name');\n                        foreach ($alert_rules as $rule) {\n                            if (empty($rule['builder'])) {\n                                $rule_display = $rule['rule'];\n                            } elseif ($rule_extra['options']['override_query'] === 'on') {\n                                $rule_display = 'Custom SQL Query';\n                            } else {\n                                $rule_display = QueryBuilderParser::fromJson($rule['builder'])->toSql(false);\n                            }\n                            echo \"\n                                <tr>\n                                    <td>{$rule['name']}</td>\n                                    <td><i>\" . htmlentities($rule_display) . \"</i></td>\n                                    <td>{$rule['severity']}</td>\n                                    <td>{$rule['id']}</td>\n                                </tr>\n                            \";\n                        }\n                        ?>\n                    </table>\n                    <script>\n                        var alert_grid = $(\"#alert_rule_list\").bootgrid({\n                            caseSensitive: false,\n                            formatters: {\n                                \"alert_action\": function (column, row) {\n                                    return \"<button type=\\\"button\\\" id=\\\"alert_rule_from_list\\\" name=\\\"alert_rule_from_list\\\" data-rule_id=\\\"\" + row.alert_action + \"\\\" class=\\\"btn btn-sm btn-primary alert_rule_from_list\\\">Select</button\";\n                                }\n                            },\n                            templates: {\n                                footer: \"<div id=\\\"{{ctx.id}}\\\" class=\\\"{{css.footer}}\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><p class=\\\"{{css.pagination}}\\\"></p></div></div></div>\"\n                            }\n                        }).on(\"loaded.rs.jquery.bootgrid\", function()\n                        {\n                            alert_grid.find(\".alert_rule_from_list\").on(\"click\", function(e) {\n                                var alert_rule_id = $(this).data(\"rule_id\");\n                                $.ajax({\n                                    type: \"POST\",\n                                    url: \"ajax_form.php\",\n                                    data: {type: 'sql-from-alert-rules', rule_id: alert_rule_id},\n                                    dataType: \"json\",\n                                    success: function (data) {\n                                        if (data.status == 'ok') {\n                                            $(\"#search_alert_rule_modal\").one('hidden.bs.modal', function(event) {\n                                                $('#create-alert').modal('show');\n                                                loadRule(data);\n                                            });\n                                            $(\"#search_alert_rule_modal\").modal('hide');\n                                        } else {\n                                            toastr.error(data.message);\n                                        }\n                                    },\n                                    error: function () {\n                                        toastr.error('Failed to process template');\n                                    }\n                                });\n                            }).end();\n                        });\n                    </script>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    $(\"#search_alert_rule_modal\").on('hidden.bs.modal', function(e) {\n        $(\"#alert_rule_id\").val('');\n        $(\"#rule_suggest\").val('');\n        $(\"#rule_display\").html('');\n    });\n</script>\n"], "fixing_code": ["<?php\n/**\n * alert_rule_list.inc.php\n *\n * LibreNMS alert_rule_list modal\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * @link       https://www.librenms.org\n *\n * @copyright  2020 Thomas Berberich\n * @author     Thomas Berberich <sourcehhdoctor@gmail.com>\n */\n\nuse LibreNMS\\Alerting\\QueryBuilderParser;\n\nif (! Auth::user()->hasGlobalAdmin()) {\n    exit('ERROR: You need to be admin');\n}\n\n?>\n\n<div class=\"modal fade\" id=\"search_alert_rule_modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"search_alert_rule_list\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                <h5 class=\"modal-title\" id=\"search_alert_rule_list\">Running Alert rules</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"table-responsive\">\n                    <table id=\"alert_rule_list\" class=\"table table-condensed table-hover\">\n                        <thead>\n                            <tr>\n                                <th data-column-id=\"alert_name\" data-width=\"200px\">Name</th>\n                                <th data-column-id=\"alert_rule\">Rule</th>\n                                <th data-column-id=\"alert_severity\">Severity</th>\n                                <td data-column-id=\"alert_action\" data-formatter=\"alert_action\"></td>\n                            </tr>\n                        </thead>\n                        <?php\n                        $alert_rules = dbFetchRows('SELECT * FROM alert_rules order by name');\n                        foreach ($alert_rules as $rule) {\n                            if (empty($rule['builder'])) {\n                                $rule_display = $rule['rule'];\n                            } elseif ($rule_extra['options']['override_query'] === 'on') {\n                                $rule_display = 'Custom SQL Query';\n                            } else {\n                                $rule_display = QueryBuilderParser::fromJson($rule['builder'])->toSql(false);\n                            }\n                            echo \"\n                                <tr>\n                                    <td>{$rule['name']}</td>\n                                    <td><i>\" . htmlentities(strip_tags($rule_display)) . \"</i></td>\n                                    <td>{$rule['severity']}</td>\n                                    <td>{$rule['id']}</td>\n                                </tr>\n                            \";\n                        }\n                        ?>\n                    </table>\n                    <script>\n                        var alert_grid = $(\"#alert_rule_list\").bootgrid({\n                            caseSensitive: false,\n                            formatters: {\n                                \"alert_action\": function (column, row) {\n                                    return \"<button type=\\\"button\\\" id=\\\"alert_rule_from_list\\\" name=\\\"alert_rule_from_list\\\" data-rule_id=\\\"\" + row.alert_action + \"\\\" class=\\\"btn btn-sm btn-primary alert_rule_from_list\\\">Select</button\";\n                                }\n                            },\n                            templates: {\n                                footer: \"<div id=\\\"{{ctx.id}}\\\" class=\\\"{{css.footer}}\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><p class=\\\"{{css.pagination}}\\\"></p></div></div></div>\"\n                            }\n                        }).on(\"loaded.rs.jquery.bootgrid\", function()\n                        {\n                            alert_grid.find(\".alert_rule_from_list\").on(\"click\", function(e) {\n                                var alert_rule_id = $(this).data(\"rule_id\");\n                                $.ajax({\n                                    type: \"POST\",\n                                    url: \"ajax_form.php\",\n                                    data: {type: 'sql-from-alert-rules', rule_id: alert_rule_id},\n                                    dataType: \"json\",\n                                    success: function (data) {\n                                        if (data.status == 'ok') {\n                                            $(\"#search_alert_rule_modal\").one('hidden.bs.modal', function(event) {\n                                                $('#create-alert').modal('show');\n                                                loadRule(data);\n                                            });\n                                            $(\"#search_alert_rule_modal\").modal('hide');\n                                        } else {\n                                            toastr.error(data.message);\n                                        }\n                                    },\n                                    error: function () {\n                                        toastr.error('Failed to process template');\n                                    }\n                                });\n                            }).end();\n                        });\n                    </script>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n    $(\"#search_alert_rule_modal\").on('hidden.bs.modal', function(e) {\n        $(\"#alert_rule_id\").val('');\n        $(\"#rule_suggest\").val('');\n        $(\"#rule_display\").html('');\n    });\n</script>\n"], "filenames": ["includes/html/modal/alert_rule_list.inc.php"], "buggy_code_start_loc": [65], "buggy_code_end_loc": [66], "fixing_code_start_loc": [65], "fixing_code_end_loc": [66], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository librenms/librenms prior to 22.2.2.", "other": {"cve": {"id": "CVE-2022-0772", "sourceIdentifier": "security@huntr.dev", "published": "2022-02-27T22:15:07.917", "lastModified": "2022-03-07T19:51:05.210", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository librenms/librenms prior to 22.2.2."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Almacenado en el repositorio de GitHub librenms/librenms versiones anteriores a 22.2.2."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:librenms:librenms:*:*:*:*:*:*:*:*", "versionEndExcluding": "22.2.2", "matchCriteriaId": "C6CFDACF-BFA5-46EE-918E-75B15F127EF2"}]}]}], "references": [{"url": "https://github.com/librenms/librenms/commit/703745d0ed3948623153117d761ce48514e2f281", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/faae29bd-c43a-468d-8af6-2b6aa4d40f09", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/librenms/librenms/commit/703745d0ed3948623153117d761ce48514e2f281"}}