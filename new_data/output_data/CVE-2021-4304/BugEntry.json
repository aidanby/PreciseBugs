{"buggy_code": ["######################################################################\n#\n#  EPrints Toolbox\n#\n######################################################################\n#\n#  __COPYRIGHT__\n#\n# Copyright 2000-2008 University of Southampton. All Rights Reserved.\n# \n#  __LICENSE__\n#\n######################################################################\n\nuse EPrints;\nuse EPrints::Toolbox;\nuse strict;\n\nmy $session = new EPrints::Session;\nexit( 0 ) unless( defined $session );\n\nmy $cmd = $session->param( \"verb\" );\nmy $username = $session->param( \"username\" );\nmy $password = $session->param( \"password\" );\n\nmy %opts = ();\n\nif( !$session->valid_login( $username, $password ) )\n{\n\ttoolbox_fail( $session, \"Invalid username/password\" );\n}\n\n$session->{current_user} = EPrints::DataObj::User::user_with_username( $session, $username );\n\nif( !$session->{current_user}->allow( \"toolbox\" ) )\n{\n\ttoolbox_fail( $session, \"User '$username' not authorised to use toolbox functions\" );\n}\n\n$opts{data_fn} = sub {\n\tmy( %opts ) = @_;\n\n\tmy $data = $session->param( \"data\" );\n\tif( EPrints::Utils::is_set( $data ) )\n\t{\n\t\treturn $data;\n\t}\n\n\tmy $fn = $opts{session}->param( \"datafile\" );\n\t$data = join( \"\", <$fn> );\n\treturn $data;\n};\n\n\n$opts{format} = $session->param( \"format\" );\n$opts{filename} = $session->param( \"filename\" );\n$opts{field} = $session->param( \"field\" );\n\nmy $eprintid = $session->param( \"eprint\" );\nif( EPrints::Utils::is_set( $eprintid ) )\n{\n\t$opts{eprint} = EPrints::DataObj::EPrint->new( $session, $eprintid );\n\tif( !defined $opts{eprint} )\n\t{\n\t\ttoolbox_fail( $session, \"Could not find eprint $eprintid\" );\n\t}\n}\n\nmy $docid = $session->param( \"document\" );\nif( EPrints::Utils::is_set( $docid ) )\n{\n\t$opts{document} = EPrints::DataObj::Document->new( $session, $docid );\n\tif( !defined $opts{document} )\n\t{\n\t\ttoolbox_fail( $session, \"Could not find document $docid\" );\n\t}\n}\n\n$opts{session} = $session;\n\nmy $fn_name = \"EPrints::Toolbox::tool_\".$cmd;\n\nmy( $rc, $output ) = eval \"$fn_name( \\%opts )\";\nif( $@ )\n{\n\ttoolbox_fail( $session, \"Command '$cmd' failed.\", [$@] );\n}\nif( $rc ) \n{\n\ttoolbox_fail( $session, \"Command Failed\", $output );\n}\n\n$session->send_http_header( content_type=>\"text/plain\" );\nprint $output;\n\n$session->terminate();\nexit;\n\nsub toolbox_fail\n{\n\tmy( $session, $msg, $problems ) = @_;\n\n\tmy $error = $session->make_element( \"eprints_toolbox_error\" );\n\tmy $message = $session->make_element( \"message\" );\n\t$error->appendChild( $message );\n\t$message->appendChild( $session->make_text( $msg ) );\n\tif( defined $problems )\n\t{\n\t\tforeach my $problem ( @{$problems} )\n\t\t{\n\t\t\tmy $problem_dom = $session->make_element( \"problem\" );\n\t\t\t$error->appendChild( $problem_dom );\n\t\t\t$problem_dom->appendChild( $session->make_text( $problem ) );\n\t\t}\n\t}\n\tEPrints::XML::tidy( $error );\n\t$session->send_http_header( content_type=>\"text/xml\" );\n\n\tprint EPrints::XML::to_string( $error );\n\t$session->terminate;\n\texit;\n}\n\n"], "fixing_code": ["######################################################################\n#\n#  EPrints Toolbox\n#\n######################################################################\n#\n#  __COPYRIGHT__\n#\n# Copyright 2000-2008 University of Southampton. All Rights Reserved.\n# \n#  __LICENSE__\n#\n######################################################################\n\nuse EPrints;\nuse EPrints::Toolbox;\nuse strict;\n\nmy $session = new EPrints::Session;\nexit( 0 ) unless( defined $session );\n\nmy $cmd = $session->param( \"verb\" );\nmy $username = $session->param( \"username\" );\nmy $password = $session->param( \"password\" );\n\nmy %opts = ();\n\nif ( $cmd !~ m/^[a-zA-Z0-9_]+$/ )\n{\n\ttoolbox_fail( $session, \"Invalid toolbox function\" );\n}\n\nif( !$session->valid_login( $username, $password ) )\n{\n\ttoolbox_fail( $session, \"Invalid username/password\" );\n}\n\n$session->{current_user} = EPrints::DataObj::User::user_with_username( $session, $username );\n\nif( !$session->{current_user}->allow( \"toolbox\" ) )\n{\n\ttoolbox_fail( $session, \"User '$username' not authorised to use toolbox functions\" );\n}\n\n$opts{data_fn} = sub {\n\tmy( %opts ) = @_;\n\n\tmy $data = $session->param( \"data\" );\n\tif( EPrints::Utils::is_set( $data ) )\n\t{\n\t\treturn $data;\n\t}\n\n\tmy $fn = $opts{session}->param( \"datafile\" );\n\t$data = join( \"\", <$fn> );\n\treturn $data;\n};\n\n\n$opts{format} = $session->param( \"format\" );\n$opts{filename} = $session->param( \"filename\" );\n$opts{field} = $session->param( \"field\" );\n\nmy $eprintid = $session->param( \"eprint\" );\nif( EPrints::Utils::is_set( $eprintid ) )\n{\n\t$opts{eprint} = EPrints::DataObj::EPrint->new( $session, $eprintid );\n\tif( !defined $opts{eprint} )\n\t{\n\t\ttoolbox_fail( $session, \"Could not find eprint $eprintid\" );\n\t}\n}\n\nmy $docid = $session->param( \"document\" );\nif( EPrints::Utils::is_set( $docid ) )\n{\n\t$opts{document} = EPrints::DataObj::Document->new( $session, $docid );\n\tif( !defined $opts{document} )\n\t{\n\t\ttoolbox_fail( $session, \"Could not find document $docid\" );\n\t}\n}\n\n$opts{session} = $session;\n\nmy $fn_name = \"EPrints::Toolbox::tool_\".$cmd;\n\nmy( $rc, $output ) = eval \"$fn_name( \\%opts )\";\nif( $@ )\n{\n\ttoolbox_fail( $session, \"Command '$cmd' failed.\", [$@] );\n}\nif( $rc ) \n{\n\ttoolbox_fail( $session, \"Command Failed\", $output );\n}\n\n$session->send_http_header( content_type=>\"text/plain\" );\nprint $output;\n\n$session->terminate();\nexit;\n\nsub toolbox_fail\n{\n\tmy( $session, $msg, $problems ) = @_;\n\n\tmy $error = $session->make_element( \"eprints_toolbox_error\" );\n\tmy $message = $session->make_element( \"message\" );\n\t$error->appendChild( $message );\n\t$message->appendChild( $session->make_text( $msg ) );\n\tif( defined $problems )\n\t{\n\t\tforeach my $problem ( @{$problems} )\n\t\t{\n\t\t\tmy $problem_dom = $session->make_element( \"problem\" );\n\t\t\t$error->appendChild( $problem_dom );\n\t\t\t$problem_dom->appendChild( $session->make_text( $problem ) );\n\t\t}\n\t}\n\tEPrints::XML::tidy( $error );\n\t$session->send_http_header( content_type=>\"text/xml\" );\n\n\tprint EPrints::XML::to_string( $error );\n\t$session->terminate;\n\texit;\n}\n\n"], "filenames": ["cgi/toolbox/toolbox"], "buggy_code_start_loc": [26], "buggy_code_end_loc": [26], "fixing_code_start_loc": [27], "fixing_code_end_loc": [32], "type": "CWE-77", "message": "A vulnerability was found in eprintsug ulcc-core. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file cgi/toolbox/toolbox. The manipulation of the argument password leads to command injection. The attack can be launched remotely. The name of the patch is 811edaae81eb044891594f00062a828f51b22cb1. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217447.", "other": {"cve": {"id": "CVE-2021-4304", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-05T10:15:09.887", "lastModified": "2023-01-11T19:05:12.987", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in eprintsug ulcc-core. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file cgi/toolbox/toolbox. The manipulation of the argument password leads to command injection. The attack can be launched remotely. The name of the patch is 811edaae81eb044891594f00062a828f51b22cb1. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217447."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ulcc-core_project:ulcc-core:*:*:*:*:*:*:*:*", "versionEndExcluding": "2021-02-05", "matchCriteriaId": "F6212B04-1562-4E12-AF14-FDFCBE0903C8"}]}]}], "references": [{"url": "https://github.com/eprintsug/ulcc-core/commit/811edaae81eb044891594f00062a828f51b22cb1", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217447", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217447", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/eprintsug/ulcc-core/commit/811edaae81eb044891594f00062a828f51b22cb1"}}