{"buggy_code": ["\n// Allow GitHub image rendering\n:imagesdir: ../../images\n\n_Users_ are entities with login accounts in the _{opennms-product-name}_ system.\nIdeally each user corresponds to a person.\nAn _{opennms-product-name}_ _User_ represents an actor which may be granted permissions in the system by associating _Security Roles_.\n_{opennms-product-name}_ stores by default _User_ information and credentials in a local embedded file based storage.\nCredentials and user details, e.g. contact information, descriptions or _Security Roles_ can be managed through the _Admin Section_ in the Web User Interface.\n\nBeside local _Users_, external authentication services including link:https://wiki.opennms.org/wiki/Spring_Security_and_LDAP[LDAP / LDAPS], link:https://wiki.opennms.org/wiki/Spring_Security_and_Radius[RADIUS], and link:https://wiki.opennms.org/wiki/Single_Sign_On[SSO] can be configured.\nConfiguration specifics for these services are outside the scope of this section.\n\nThe following paragraphs describe how to manage the embedded _User_ and _Security Roles_ in _{opennms-product-name}_.\n\n[[ga-role-user-management-users]]\n=== Users\n\nManaging _Users_ is done through the _Web User Interface_ and requires to login as a _User_ with administrative permissions.\nBy default the _admin_ user is used to initially create and modify _Users_.\nThe _User_, _Password_ and other detail descriptions are persisted in `users.xml` file.\nIt is not required to restart _{opennms-product-name}_ when _User_ attributes are changed.\n\nIn case administrative tasks should be delegated to an _User_ the _Security Role_ named _ROLE_ADMIN_ can be assigned.\n\nWARNING: Don't delete the _admin_ and _rtc_ user.\n         The _RTC_ user is used for the communication of the Real-Time Console on the start page to calculate the node and service availability.\n\nIMPORTANT: Change the default _admin_ password to a secure password.\n\n.How to set a new password for any user\n. Login as a *User* with administrative permissions\n. Choose *Configure OpenNMS* from the user specific main navigation which is named as your login user name\n. Choose *Configure Users, Groups and On-Call roles* and select *Configure Users*\n. Click the *Modify* icon next to an existing _User_ and select *Reset Password*\n. Set a new *Password*, *Confirm Password* and click *OK*\n. Click *Finish* to persist and apply the changes\n\n.How users can change their own password\n\n. Login with user name and old password\n. Choose *Change Password* from the user specific main navigation which is named as your login user name\n. Select *Change Password*\n. Identify yourself with the old password and set the new password and confirm\n. Click *Submit*\n. Logout and login with your new password\n\n.How to create or modify user\n\n. Login as a *User* with administrative permissions\n. Choose *Configure OpenNMS* from the user specific main navigation which is named as your login user name\n. Choose *Configure Users, Groups and On-Call roles* and select *Configure Users*\n. Use *Add new user* and type in a *login name* as _User ID_ and a *Password* with confirmation or click *Modify* next to an existing _User_\n. _Optional_: Fill in detailed _User Information_ to provide more context information around the new user in the system\n. _Optional_: Assign _Security Roles_ to give or remove permissions in the system\n. _Optional_: Provide _Notification Information_ which are used in _Notification_ targets to send messages to the _User_\n. _Optional_: Set a schedule when a _User_ should receive _Notifications_\n. Click *Finish* to persist and apply the changes\n\nNOTE: By default a new _User_ has the _Security Role_ similar to _ROLE_USER_ assigned.\n     Acknowledgment and working with _Alarms_ and _Notifications_ is possible.\n     The _Configure OpenNMS_ administration menu is not available.\n\n.How to delete existing user\n\n. Login as a *User* with administrative permissions\n. Choose *Configure OpenNMS* from the user specific main navigation which is named as your login user name\n. Choose *Configure Users, Groups and On-Call roles* and select *Configure Users*\n. Use the trash bin icon next to the _User_ to delete\n. Confirm delete request with *OK*\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.web.admin.users;\n\nimport java.io.IOException;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport org.opennms.netmgt.config.UserFactory;\nimport org.opennms.netmgt.config.UserManager;\nimport org.opennms.netmgt.config.users.Password;\nimport org.opennms.netmgt.config.users.User;\n\n/**\n * A servlet that handles adding a new user\n *\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @version $Id: $\n * @since 1.8.1\n */\npublic class AddNewUserServlet extends HttpServlet {\n    /**\n     * \n     */\n    private static final long serialVersionUID = 9221831285444697701L;\n\n    /** {@inheritDoc} */\n    @Override\n    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        try {\n            UserFactory.init();\n        } catch (Throwable e) {\n            throw new ServletException(\"AddNewUserServlet: Error initialising user factory.\" + e);\n        }\n        UserManager userFactory = UserFactory.getInstance();\n\n        String userID = request.getParameter(\"userID\");\n        String password = request.getParameter(\"pass1\");\n\n        boolean hasUser = false;\n        try {\n            hasUser = userFactory.hasUser(userID);\n        } catch (Throwable e) {\n            throw new ServletException(\"can't determine if user \" + userID + \" already exists in users.xml.\", e);\n        }\n\n        if (hasUser) {\n            RequestDispatcher dispatcher = this.getServletContext().getRequestDispatcher(\"/admin/userGroupView/users/newUser.jsp?action=redo\");\n            dispatcher.forward(request, response);\n        } else {\n            final Password pass = new Password();\n            pass.setEncryptedPassword(UserFactory.getInstance().encryptedPassword(password, true));\n            pass.setSalt(true);\n\n            final User newUser = new User();\n            newUser.setUserId(userID);\n            newUser.setPassword(pass);\n\n            final HttpSession userSession = request.getSession(false);\n            userSession.setAttribute(\"user.modifyUser.jsp\", newUser);\n\n            // forward the request for proper display\n            RequestDispatcher dispatcher = this.getServletContext().getRequestDispatcher(\"/admin/userGroupView/users/modifyUser.jsp\");\n            dispatcher.forward(request, response);\n        }\n    }\n}\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.web.admin.users;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.opennms.netmgt.config.UserFactory;\nimport org.opennms.netmgt.config.UserManager;\n\n/**\n * A servlet that handles renaming an existing user\n *\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @version $Id: $\n * @since 1.8.1\n */\npublic class RenameUserServlet extends HttpServlet {\n    /**\n     * \n     */\n    private static final long serialVersionUID = -560190996358287556L;\n\n    /** {@inheritDoc} */\n    @Override\n    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String userID = request.getParameter(\"userID\");\n        String newID = request.getParameter(\"newID\");\n\n        // now save to the xml file\n        try {\n            UserManager userFactory = UserFactory.getInstance();\n            userFactory.renameUser(userID, newID);\n        } catch (Throwable e) {\n            throw new ServletException(\"Error renaming user \" + userID + \" to \" + newID, e);\n        }\n\n        response.sendRedirect(\"list.jsp\");\n    }\n}\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2009-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.web.controller.admin.group;\n\nimport java.io.IOException;\nimport java.text.ChoiceFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Vector;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport org.opennms.core.spring.BeanUtils;\nimport org.opennms.core.utils.WebSecurityUtils;\nimport org.opennms.netmgt.config.UserManager;\nimport org.opennms.netmgt.config.users.DutySchedule;\nimport org.opennms.netmgt.dao.api.CategoryDao;\nimport org.opennms.web.group.WebGroupRepository;\nimport org.opennms.web.group.WebGroup;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.InitializingBean;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.servlet.ModelAndView;\nimport org.springframework.web.servlet.mvc.AbstractController;\n\n/**\n * GroupController\n *\n * @author brozow\n * @version $Id: $\n * @since 1.8.1\n */\npublic class GroupController extends AbstractController implements InitializingBean {\n\t\n\tprivate static final Logger LOG = LoggerFactory.getLogger(GroupController.class);\n    \n    @Autowired\n    private CategoryDao m_categoryDao;\n    \n    @Autowired\n    private UserManager m_userManager;\n    \n    @Autowired\n    private WebGroupRepository m_groupRepository;\n\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        BeanUtils.assertAutowiring(this);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,  HttpServletResponse response) throws Exception {\n        String operation = request.getParameter(\"operation\");\n        \n        if (!StringUtils.hasText(operation) && StringUtils.hasText(request.getParameter(\"groupName\"))) {\n            operation = \"show\";\n        }\n        \n        \n        LOG.debug(\"!!!! Calling operation {} in GroupController\", operation);\n        \n        if (\"create\".equalsIgnoreCase(operation)){\n            return createGroup(request, response);\n        } else if (\"addGroup\".equalsIgnoreCase(operation)){\n            return addGroup(request, response);\n        } else if (\"show\".equalsIgnoreCase(operation)){\n            return showGroup(request, response);\n        } else if (\"delete\".equalsIgnoreCase(operation)){\n            return deleteGroup(request, response);\n        } else if (\"edit\".equalsIgnoreCase(operation)){\n            return editGroup(request, response);\n        } else if (\"rename\".equalsIgnoreCase(operation)){\n            return renameGroup(request, response);\n        } else if (\"addDutySchedules\".equalsIgnoreCase(operation)){\n            return addDutySchedules(request, response);\n        } else if (\"removeDutySchedules\".equalsIgnoreCase(operation)){\n            return removeDutySchedules(request, response);\n        } else if (\"save\".equalsIgnoreCase(operation)) {\n            return saveGroup(request, response);\n        } else if (\"cancel\".equalsIgnoreCase(operation)){\n            return cancel(request, response);\n        } else {\n            return listGroups(request, response);\n        }\n    }\n    \n    private ModelAndView listGroups(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        return new ModelAndView(\"redirect:/admin/userGroupView/groups/list.htm\");\n    }\n\n    private ModelAndView showGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        String groupName = request.getParameter(\"groupName\");\n        if (!StringUtils.hasText(groupName)) {\n            throw new ServletException(\"The groupName parameter is required\");\n        }\n        \n        WebGroup group = m_groupRepository.getGroup(groupName);\n\n        \n        return new ModelAndView(\"/admin/userGroupView/groups/groupDetail\", \"group\", group);\n    }\n\n    private ModelAndView deleteGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        String groupName = request.getParameter(\"groupName\");\n        \n        if (StringUtils.hasText(groupName)) {\n            m_groupRepository.deleteGroup(groupName);\n        } \n        \n        return listGroups(request, response);\n    }\n\n    private ModelAndView renameGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        String oldName = request.getParameter(\"groupName\");\n        String newName = request.getParameter(\"newName\");\n        \n        if (StringUtils.hasText(oldName) && StringUtils.hasText(newName)) {\n            m_groupRepository.renameGroup(oldName, newName);\n        }\n        \n        return listGroups(request, response);\n    }\n\n    private ModelAndView addDutySchedules(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        HttpSession userSession = request.getSession(true);\n\n        if (userSession != null) {\n            //group.modifyGroup.jsp\n            WebGroup group = (WebGroup) userSession.getAttribute(\"group.modifyGroup.jsp\");\n\n            updateGroup(request, group);\n            \n            Vector<Object> newSchedule = new Vector<>();\n\n            int dutyAddCount = WebSecurityUtils.safeParseInt(request.getParameter(\"numSchedules\"));\n\n            for (int j = 0; j < dutyAddCount; j++) {\n                // add 7 false boolean values for each day of the week\n                for (int i = 0; i < 7; i++) {\n                    newSchedule.addElement(Boolean.FALSE);\n                }\n\n                // add two strings for the begin and end time\n                newSchedule.addElement(\"0\");\n                newSchedule.addElement(\"0\");\n\n                group.addDutySchedule((new DutySchedule(newSchedule)).toString());\n            }\n\n\n            userSession.setAttribute(\"group.modifyGroup.jsp\", group);\n\n        }\n\n        return new ModelAndView(\"admin/userGroupView/groups/modifyGroup\");\n\n    }\n\n    private ModelAndView removeDutySchedules(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        HttpSession userSession = request.getSession(true);\n\n        if (userSession != null) {\n            //group.modifyGroup.jsp\n            WebGroup newGroup = (WebGroup) userSession.getAttribute(\"group.modifyGroup.jsp\");\n\n            updateGroup(request, newGroup);\n\n            userSession.setAttribute(\"group.modifyGroup.jsp\", newGroup);\n\n        }\n\n        return new ModelAndView(\"admin/userGroupView/groups/modifyGroup\");\n\n    }\n\n    private ModelAndView editGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n\n        String groupName = request.getParameter(\"groupName\");\n        WebGroup group = m_groupRepository.getGroup(groupName);\n        return editGroup(request, group);\n    }\n\n    private ModelAndView editGroup(HttpServletRequest request, WebGroup group)\n            throws IOException {\n        HttpSession userSession = request.getSession(true);\n        userSession.setAttribute(\"group.modifyGroup.jsp\", group);\n        userSession.setAttribute(\"allCategories.modifyGroup.jsp\", m_categoryDao.getAllCategoryNames().toArray(new String[0]));\n        userSession.setAttribute(\"allUsers.modifyGroup.jsp\", m_userManager.getUserNames().toArray(new String[0]));\n\n        return new ModelAndView(\"admin/userGroupView/groups/modifyGroup\");\n    }\n\n    private ModelAndView saveGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        HttpSession session = request.getSession(false);\n\n        if (session != null) {\n            WebGroup newGroup = (WebGroup) session.getAttribute(\"group.modifyGroup.jsp\");\n            updateGroup(request, newGroup);\n            m_groupRepository.saveGroup(newGroup);\n\n        }\n        \n        return cancel(request, response);\n    }\n\n    private ModelAndView cancel(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        HttpSession session = request.getSession(false);\n\n        if (session != null) {\n            session.removeAttribute(\"group.modifyGroup.jsp\");\n            session.removeAttribute(\"allCategories.modifyGroup.jsp\");\n            session.removeAttribute(\"allUsers.modifyGroup.jsp\");\n        }\n\n        return listGroups(request, response);\n\n    }\n\n\n    private void updateGroup(HttpServletRequest request, WebGroup newGroup) {\n        String[] users = request.getParameterValues(\"selectedUsers\");\n        \n        List<String> userList = users == null ? Collections.<String>emptyList() : Arrays.asList(users);\n        \n        newGroup.setUsers(new ArrayList<String>(userList));\n\n        String[] selectedCategories = request.getParameterValues(\"selectedCategories\");\n        \n        List<String> categoryList = selectedCategories == null ? Collections.<String>emptyList() : Arrays.asList(selectedCategories);\n        \n        newGroup.setAuthorizedCategories(new ArrayList<String>(categoryList));\n        \n        Vector<Object> newSchedule = new Vector<>();\n        ChoiceFormat days = new ChoiceFormat(\"0#Mo|1#Tu|2#We|3#Th|4#Fr|5#Sa|6#Su\");\n\n        Collection<String> dutySchedules = newGroup.getDutySchedules();\n        dutySchedules.clear();\n\n        int dutyCount = WebSecurityUtils.safeParseInt(request.getParameter(\"dutySchedules\"));\n        for (int duties = 0; duties < dutyCount; duties++) {\n            newSchedule.clear();\n            String deleteFlag = request.getParameter(\"deleteDuty\" + duties);\n            // don't save any duties that were marked for deletion\n            if (deleteFlag == null) {\n                for (int i = 0; i < 7; i++) {\n                    String curDayFlag = request.getParameter(\"duty\" + duties + days.format(i));\n                    if (curDayFlag != null) {\n                        newSchedule.addElement(Boolean.TRUE);\n                    } else {\n                        newSchedule.addElement(Boolean.FALSE);\n                    }\n                }\n\n                newSchedule.addElement(request.getParameter(\"duty\" + duties + \"Begin\"));\n                newSchedule.addElement(request.getParameter(\"duty\" + duties + \"End\"));\n\n                DutySchedule newDuty = new DutySchedule(newSchedule);\n                dutySchedules.add(newDuty.toString());\n            }\n        }\n    }\n    \n    private ModelAndView createGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        return new ModelAndView(\"admin/userGroupView/groups/newGroup\");\n    }\n    \n    private ModelAndView addGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {    \n                \n        String groupName = request.getParameter(\"groupName\");\n        String groupComment = request.getParameter(\"groupComment\");\n        if (groupComment == null) {\n            groupComment = \"\";\n        }\n\n        boolean hasGroup = false;\n        try {\n            hasGroup = m_groupRepository.groupExists(groupName);\n        } catch (Throwable e) {\n            throw new ServletException(\"Can't determine if group \" + groupName + \" already exists in groups.xml.\", e);\n        }\n        \n        if (hasGroup) {\n            return new ModelAndView(\"admin/userGroupView/groups/newGroup\", \"action\", \"redo\");            \n        } else {\n            WebGroup newGroup = new WebGroup();\n            newGroup.setName(groupName);\n            newGroup.setComments(groupComment);\n            \n            return editGroup(request, newGroup);\n        }\n    }\n}\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Group Configuration\" />\n  <jsp:param name=\"headTitle\" value=\"List\" />\n  <jsp:param name=\"headTitle\" value=\"Groups\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Group List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n    function addNewGroup()\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"create\";\n        document.allGroups.submit();\n    }\n    \n    function detailGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"show\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function deleteGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"delete\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function modifyGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"edit\"\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n\n    function renameGroup(groupName)\n    {\n        var newName = prompt(\"Enter new name for group.\", groupName);\n\n        if (newName != null && newName != \"\")\n        {\n          document.allGroups.newName.value = newName;\n          document.allGroups.groupName.value=groupName;\n          document.allGroups.operation.value=\"rename\";\n          document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n          document.allGroups.submit();\n        }\n    }\n</script>\n\n<p>\n  Click on the <i>Group Name</i> link to view detailed information about a group.\n</p>\n\n<p>\n  <a href=\"javascript:addNewGroup()\">\n    <i class=\"fa fa-plus-circle fa-2x\"></i> Add new group\n  </a>\n</p>\n\n<form method=\"post\" name=\"allGroups\">\n  <input type=\"hidden\" name=\"operation\"/>\n  <input type=\"hidden\" name=\"groupName\"/>\n  <input type=\"hidden\" name=\"newName\"/>\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n  <div class=\"card\">\n    <table class=\"table table-sm table-bordered\">\n         <tr>\n          <th>Delete</th>\n          <th>Modify</th>\n          <th>Rename</th>\n          <th>Group Name</th>\n          <th>Comments</th>\n        </tr>\n         <c:forEach var=\"group\" varStatus=\"groupStatus\" items=\"${groups}\">\n         <tr class=\"divider ${groupStatus.index % 2 == 0 ?  'even' : 'odd'}\" id=\"group-${group.name}\">\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <a id=\"${group.name}.doDelete\" href=\"javascript:deleteGroup('${group.name}')\" onclick=\"return confirm('Are you sure you want to delete the group ${group.name}?')\"><i class=\"fa fa-trash-o fa-2x\"></i></a>              \n              </c:when>\n              <c:otherwise>\n                <i class=\"fa fa-trash-o fa-2x\" onclick=\"alert('Sorry, the ${group.name} group cannot be deleted.')\"></i>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <a id=\"${group.name}.doModify\" href=\"javascript:modifyGroup('${group.name}')\"><i class=\"fa fa-edit fa-2x\"></i></a>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"renameGroup('${group.name}')\">Rename</button>\n              </c:when>\n              <c:otherwise>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"alert('Sorry, the Admin group cannot be renamed.')\">Rename</button>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td>\n            <a href=\"javascript:detailGroup('${group.name}')\">${group.name}</a>\n          </td>\n            <td>\n              <c:choose>\n                <c:when test=\"${group.comments.isPresent()}\">\n                  ${group.comments.get()}\n                </c:when>\n                \n                <c:otherwise>\n                  No Comments\n                </c:otherwise>\n              </c:choose>\n            </td>\n          </tr>\n        </c:forEach>\n     </table>\n   </div>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New Group\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Groups\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/groups/list.htm'>Group List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New Group\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newGroupForm.groupName.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The group ID '\" + document.newGroupForm.groupName.value + \"' cannot be used. It may be confused with the administration group ID 'Admin'.\");\n        return false;\n    }\n    \n    document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n    document.newGroupForm.operation.value=\"addGroup\";\n    return true;\n  }    \n  function cancelGroup()\n  {\n      document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n      document.newGroupForm.operation.value=\"cancel\";\n      document.newGroupForm.submit();\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The group <%=request.getParameter(\"groupName\")%> already exists.\n        Please type in a different group ID.</span>\n    <%} else { %>\n      <span>Please enter a group ID below.</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" id=\"newGroupForm\" method=\"post\" name=\"newGroupForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"operation\" />\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n      <div class=\"form-group\">\n        <label for=\"groupName\" class=\"\">Group Name</label>\n      <input class=\"form-control\" id=\"groupName\" type=\"text\" name=\"groupName\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"groupComment\" class=\"\">Comment</label>\n      <input class=\"form-control\" id=\"groupComment\" type=\"text\" name=\"groupComment\"/>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary mr-2\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelGroup()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\"%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New User\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Users\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/users/list.jsp'>User List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New User\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newUserForm.userID.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The user ID '\" + document.newUserForm.userID.value + \"' cannot be used. It may be confused with the administration user ID 'admin'.\");\n        return false;\n    }\n    \n    if (document.newUserForm.pass1.value == document.newUserForm.pass2.value) \n    {\n      document.newUserForm.action=\"admin/userGroupView/users/addNewUser\";\n      return true;\n    } \n    else\n    {\n      alert(\"The two password fields do not match!\");\n      document.newUserForm.pass1.value = \"\";\n      document.newUserForm.pass2.value = \"\";\n      return false;\n    }\n  }    \n  function cancelUser()\n  {\n      window.location.href = \"admin/userGroupView/users/list.jsp\";\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The user <%=request.getParameter(\"userID\")%> already exists.\n        Please type in a different user ID.</span>\n    <%} else { %>\n      <span>Please enter a user ID and password below</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form class=\"form\" role=\"form\" id=\"newUserForm\" method=\"post\" name=\"newUserForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n      <div class=\"form-group\">\n        <label for=\"userID\" class=\"\">User ID</label>\n        <input id=\"userID\" type=\"text\" name=\"userID\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass1\" class=\"\">Password</label>\n        <input id=\"pass1\" type=\"password\" name=\"pass1\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass2\" class=\"\">Confirm Password</label>\n        <input id=\"pass2\" type=\"password\" name=\"pass2\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelUser()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n"], "fixing_code": ["\n// Allow GitHub image rendering\n:imagesdir: ../../images\n\n_Users_ are entities with login accounts in the _{opennms-product-name}_ system.\nIdeally each user corresponds to a person.\nAn _{opennms-product-name}_ _User_ represents an actor which may be granted permissions in the system by associating _Security Roles_.\n_{opennms-product-name}_ stores by default _User_ information and credentials in a local embedded file based storage.\nCredentials and user details, e.g. contact information, descriptions or _Security Roles_ can be managed through the _Admin Section_ in the Web User Interface.\n\nBeside local _Users_, external authentication services including link:https://wiki.opennms.org/wiki/Spring_Security_and_LDAP[LDAP / LDAPS], link:https://wiki.opennms.org/wiki/Spring_Security_and_Radius[RADIUS], and link:https://wiki.opennms.org/wiki/Single_Sign_On[SSO] can be configured.\nConfiguration specifics for these services are outside the scope of this section.\n\nThe following paragraphs describe how to manage the embedded _User_ and _Security Roles_ in _{opennms-product-name}_.\n\n[[ga-role-user-management-users]]\n=== Users\n\nManaging _Users_ is done through the _Web User Interface_ and requires to login as a _User_ with administrative permissions.\nBy default the _admin_ user is used to initially create and modify _Users_.\nThe _User_, _Password_ and other detail descriptions are persisted in `users.xml` file.\nIt is not required to restart _{opennms-product-name}_ when _User_ attributes are changed.\n\nIn case administrative tasks should be delegated to an _User_ the _Security Role_ named _ROLE_ADMIN_ can be assigned.\n\nWARNING: Don't delete the _admin_ and _rtc_ user.\n         The _RTC_ user is used for the communication of the Real-Time Console on the start page to calculate the node and service availability.\n\nIMPORTANT: Change the default _admin_ password to a secure password.\n\n.How to set a new password for any user\n. Login as a *User* with administrative permissions\n. Choose *Configure OpenNMS* from the user specific main navigation which is named as your login user name\n. Choose *Configure Users, Groups and On-Call roles* and select *Configure Users*\n. Click the *Modify* icon next to an existing _User_ and select *Reset Password*\n. Set a new *Password*, *Confirm Password* and click *OK*\n. Click *Finish* to persist and apply the changes\n\n.How users can change their own password\n\n. Login with user name and old password\n. Choose *Change Password* from the user specific main navigation which is named as your login user name\n. Select *Change Password*\n. Identify yourself with the old password and set the new password and confirm\n. Click *Submit*\n. Logout and login with your new password\n\n.How to create or modify user\n\n. Login as a *User* with administrative permissions\n. Choose *Configure OpenNMS* from the user specific main navigation which is named as your login user name\n. Choose *Configure Users, Groups and On-Call roles* and select *Configure Users*\n. Use *Add new user* and type in a *login name* as _User ID_ and a *Password* with confirmation or click *Modify* next to an existing _User_\n. _Optional_: Fill in detailed _User Information_ to provide more context information around the new user in the system\n. _Optional_: Assign _Security Roles_ to give or remove permissions in the system\n. _Optional_: Provide _Notification Information_ which are used in _Notification_ targets to send messages to the _User_\n. _Optional_: Set a schedule when a _User_ should receive _Notifications_\n. Click *Finish* to persist and apply the changes\n\nWARNING: Please note that angle brackets (<>), single (') and double quotation marks (\"), and the ampersand symbol (&) are not allowed to be used in the user ID.\n\nNOTE: By default a new _User_ has the _Security Role_ similar to _ROLE_USER_ assigned.\n     Acknowledgment and working with _Alarms_ and _Notifications_ is possible.\n     The _Configure OpenNMS_ administration menu is not available.\n\n.How to delete existing user\n\n. Login as a *User* with administrative permissions\n. Choose *Configure OpenNMS* from the user specific main navigation which is named as your login user name\n. Choose *Configure Users, Groups and On-Call roles* and select *Configure Users*\n. Use the trash bin icon next to the _User_ to delete\n. Confirm delete request with *OK*\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.web.admin.users;\n\nimport java.io.IOException;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport org.opennms.netmgt.config.UserFactory;\nimport org.opennms.netmgt.config.UserManager;\nimport org.opennms.netmgt.config.users.Password;\nimport org.opennms.netmgt.config.users.User;\n\n/**\n * A servlet that handles adding a new user\n *\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @version $Id: $\n * @since 1.8.1\n */\npublic class AddNewUserServlet extends HttpServlet {\n    /**\n     * \n     */\n    private static final long serialVersionUID = 9221831285444697701L;\n\n    /** {@inheritDoc} */\n    @Override\n    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        try {\n            UserFactory.init();\n        } catch (Throwable e) {\n            throw new ServletException(\"AddNewUserServlet: Error initialising user factory.\" + e);\n        }\n        UserManager userFactory = UserFactory.getInstance();\n\n        String userID = request.getParameter(\"userID\");\n\n        if (userID != null && userID.matches(\".*[&<>\\\"`']+.*\")) {\n            throw new ServletException(\"User ID must not contain any HTML markup.\");\n        }\n\n        String password = request.getParameter(\"pass1\");\n\n        boolean hasUser = false;\n        try {\n            hasUser = userFactory.hasUser(userID);\n        } catch (Throwable e) {\n            throw new ServletException(\"can't determine if user \" + userID + \" already exists in users.xml.\", e);\n        }\n\n        if (hasUser) {\n            RequestDispatcher dispatcher = this.getServletContext().getRequestDispatcher(\"/admin/userGroupView/users/newUser.jsp?action=redo\");\n            dispatcher.forward(request, response);\n        } else {\n            final Password pass = new Password();\n            pass.setEncryptedPassword(UserFactory.getInstance().encryptedPassword(password, true));\n            pass.setSalt(true);\n\n            final User newUser = new User();\n            newUser.setUserId(userID);\n            newUser.setPassword(pass);\n\n            final HttpSession userSession = request.getSession(false);\n            userSession.setAttribute(\"user.modifyUser.jsp\", newUser);\n\n            // forward the request for proper display\n            RequestDispatcher dispatcher = this.getServletContext().getRequestDispatcher(\"/admin/userGroupView/users/modifyUser.jsp\");\n            dispatcher.forward(request, response);\n        }\n    }\n}\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.web.admin.users;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.opennms.netmgt.config.UserFactory;\nimport org.opennms.netmgt.config.UserManager;\n\n/**\n * A servlet that handles renaming an existing user\n *\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @author <A HREF=\"mailto:jason@opennms.org\">Jason Johns </A>\n * @author <A HREF=\"http://www.opennms.org/\">OpenNMS </A>\n * @version $Id: $\n * @since 1.8.1\n */\npublic class RenameUserServlet extends HttpServlet {\n    /**\n     * \n     */\n    private static final long serialVersionUID = -560190996358287556L;\n\n    /** {@inheritDoc} */\n    @Override\n    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String userID = request.getParameter(\"userID\");\n        String newID = request.getParameter(\"newID\");\n\n        if (newID != null && newID.matches(\".*[&<>\\\"`']+.*\")) {\n            throw new ServletException(\"User ID must not contain any HTML markup.\");\n        }\n\n        // now save to the xml file\n        try {\n            UserManager userFactory = UserFactory.getInstance();\n            userFactory.renameUser(userID, newID);\n        } catch (Throwable e) {\n            throw new ServletException(\"Error renaming user \" + userID + \" to \" + newID, e);\n        }\n\n        response.sendRedirect(\"list.jsp\");\n    }\n}\n", "/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2009-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\npackage org.opennms.web.controller.admin.group;\n\nimport java.io.IOException;\nimport java.text.ChoiceFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Vector;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport org.opennms.core.spring.BeanUtils;\nimport org.opennms.core.utils.WebSecurityUtils;\nimport org.opennms.netmgt.config.UserManager;\nimport org.opennms.netmgt.config.users.DutySchedule;\nimport org.opennms.netmgt.dao.api.CategoryDao;\nimport org.opennms.web.group.WebGroupRepository;\nimport org.opennms.web.group.WebGroup;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.InitializingBean;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.servlet.ModelAndView;\nimport org.springframework.web.servlet.mvc.AbstractController;\n\n/**\n * GroupController\n *\n * @author brozow\n * @version $Id: $\n * @since 1.8.1\n */\npublic class GroupController extends AbstractController implements InitializingBean {\n\t\n\tprivate static final Logger LOG = LoggerFactory.getLogger(GroupController.class);\n    \n    @Autowired\n    private CategoryDao m_categoryDao;\n    \n    @Autowired\n    private UserManager m_userManager;\n    \n    @Autowired\n    private WebGroupRepository m_groupRepository;\n\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        BeanUtils.assertAutowiring(this);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,  HttpServletResponse response) throws Exception {\n        String operation = request.getParameter(\"operation\");\n        \n        if (!StringUtils.hasText(operation) && StringUtils.hasText(request.getParameter(\"groupName\"))) {\n            operation = \"show\";\n        }\n        \n        \n        LOG.debug(\"!!!! Calling operation {} in GroupController\", operation);\n        \n        if (\"create\".equalsIgnoreCase(operation)){\n            return createGroup(request, response);\n        } else if (\"addGroup\".equalsIgnoreCase(operation)){\n            return addGroup(request, response);\n        } else if (\"show\".equalsIgnoreCase(operation)){\n            return showGroup(request, response);\n        } else if (\"delete\".equalsIgnoreCase(operation)){\n            return deleteGroup(request, response);\n        } else if (\"edit\".equalsIgnoreCase(operation)){\n            return editGroup(request, response);\n        } else if (\"rename\".equalsIgnoreCase(operation)){\n            return renameGroup(request, response);\n        } else if (\"addDutySchedules\".equalsIgnoreCase(operation)){\n            return addDutySchedules(request, response);\n        } else if (\"removeDutySchedules\".equalsIgnoreCase(operation)){\n            return removeDutySchedules(request, response);\n        } else if (\"save\".equalsIgnoreCase(operation)) {\n            return saveGroup(request, response);\n        } else if (\"cancel\".equalsIgnoreCase(operation)){\n            return cancel(request, response);\n        } else {\n            return listGroups(request, response);\n        }\n    }\n    \n    private ModelAndView listGroups(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        return new ModelAndView(\"redirect:/admin/userGroupView/groups/list.htm\");\n    }\n\n    private ModelAndView showGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        String groupName = request.getParameter(\"groupName\");\n        if (!StringUtils.hasText(groupName)) {\n            throw new ServletException(\"The groupName parameter is required\");\n        }\n        \n        WebGroup group = m_groupRepository.getGroup(groupName);\n\n        \n        return new ModelAndView(\"/admin/userGroupView/groups/groupDetail\", \"group\", group);\n    }\n\n    private ModelAndView deleteGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        String groupName = request.getParameter(\"groupName\");\n        \n        if (StringUtils.hasText(groupName)) {\n            m_groupRepository.deleteGroup(groupName);\n        } \n        \n        return listGroups(request, response);\n    }\n\n    private ModelAndView renameGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        String oldName = request.getParameter(\"groupName\");\n        String newName = request.getParameter(\"newName\");\n\n        if (newName != null && newName.matches(\".*[&<>\\\"`']+.*\")) {\n            throw new ServletException(\"Group ID must not contain any HTML markup.\");\n        }\n\n        if (StringUtils.hasText(oldName) && StringUtils.hasText(newName)) {\n            m_groupRepository.renameGroup(oldName, newName);\n        }\n        \n        return listGroups(request, response);\n    }\n\n    private ModelAndView addDutySchedules(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        HttpSession userSession = request.getSession(true);\n\n        if (userSession != null) {\n            //group.modifyGroup.jsp\n            WebGroup group = (WebGroup) userSession.getAttribute(\"group.modifyGroup.jsp\");\n\n            updateGroup(request, group);\n            \n            Vector<Object> newSchedule = new Vector<>();\n\n            int dutyAddCount = WebSecurityUtils.safeParseInt(request.getParameter(\"numSchedules\"));\n\n            for (int j = 0; j < dutyAddCount; j++) {\n                // add 7 false boolean values for each day of the week\n                for (int i = 0; i < 7; i++) {\n                    newSchedule.addElement(Boolean.FALSE);\n                }\n\n                // add two strings for the begin and end time\n                newSchedule.addElement(\"0\");\n                newSchedule.addElement(\"0\");\n\n                group.addDutySchedule((new DutySchedule(newSchedule)).toString());\n            }\n\n\n            userSession.setAttribute(\"group.modifyGroup.jsp\", group);\n\n        }\n\n        return new ModelAndView(\"admin/userGroupView/groups/modifyGroup\");\n\n    }\n\n    private ModelAndView removeDutySchedules(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        HttpSession userSession = request.getSession(true);\n\n        if (userSession != null) {\n            //group.modifyGroup.jsp\n            WebGroup newGroup = (WebGroup) userSession.getAttribute(\"group.modifyGroup.jsp\");\n\n            updateGroup(request, newGroup);\n\n            userSession.setAttribute(\"group.modifyGroup.jsp\", newGroup);\n\n        }\n\n        return new ModelAndView(\"admin/userGroupView/groups/modifyGroup\");\n\n    }\n\n    private ModelAndView editGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n\n        String groupName = request.getParameter(\"groupName\");\n        WebGroup group = m_groupRepository.getGroup(groupName);\n        return editGroup(request, group);\n    }\n\n    private ModelAndView editGroup(HttpServletRequest request, WebGroup group)\n            throws IOException {\n        HttpSession userSession = request.getSession(true);\n        userSession.setAttribute(\"group.modifyGroup.jsp\", group);\n        userSession.setAttribute(\"allCategories.modifyGroup.jsp\", m_categoryDao.getAllCategoryNames().toArray(new String[0]));\n        userSession.setAttribute(\"allUsers.modifyGroup.jsp\", m_userManager.getUserNames().toArray(new String[0]));\n\n        return new ModelAndView(\"admin/userGroupView/groups/modifyGroup\");\n    }\n\n    private ModelAndView saveGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        HttpSession session = request.getSession(false);\n\n        if (session != null) {\n            WebGroup newGroup = (WebGroup) session.getAttribute(\"group.modifyGroup.jsp\");\n            updateGroup(request, newGroup);\n            m_groupRepository.saveGroup(newGroup);\n\n        }\n        \n        return cancel(request, response);\n    }\n\n    private ModelAndView cancel(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        \n        HttpSession session = request.getSession(false);\n\n        if (session != null) {\n            session.removeAttribute(\"group.modifyGroup.jsp\");\n            session.removeAttribute(\"allCategories.modifyGroup.jsp\");\n            session.removeAttribute(\"allUsers.modifyGroup.jsp\");\n        }\n\n        return listGroups(request, response);\n\n    }\n\n\n    private void updateGroup(HttpServletRequest request, WebGroup newGroup) {\n        String[] users = request.getParameterValues(\"selectedUsers\");\n        \n        List<String> userList = users == null ? Collections.<String>emptyList() : Arrays.asList(users);\n        \n        newGroup.setUsers(new ArrayList<String>(userList));\n\n        String[] selectedCategories = request.getParameterValues(\"selectedCategories\");\n        \n        List<String> categoryList = selectedCategories == null ? Collections.<String>emptyList() : Arrays.asList(selectedCategories);\n        \n        newGroup.setAuthorizedCategories(new ArrayList<String>(categoryList));\n        \n        Vector<Object> newSchedule = new Vector<>();\n        ChoiceFormat days = new ChoiceFormat(\"0#Mo|1#Tu|2#We|3#Th|4#Fr|5#Sa|6#Su\");\n\n        Collection<String> dutySchedules = newGroup.getDutySchedules();\n        dutySchedules.clear();\n\n        int dutyCount = WebSecurityUtils.safeParseInt(request.getParameter(\"dutySchedules\"));\n        for (int duties = 0; duties < dutyCount; duties++) {\n            newSchedule.clear();\n            String deleteFlag = request.getParameter(\"deleteDuty\" + duties);\n            // don't save any duties that were marked for deletion\n            if (deleteFlag == null) {\n                for (int i = 0; i < 7; i++) {\n                    String curDayFlag = request.getParameter(\"duty\" + duties + days.format(i));\n                    if (curDayFlag != null) {\n                        newSchedule.addElement(Boolean.TRUE);\n                    } else {\n                        newSchedule.addElement(Boolean.FALSE);\n                    }\n                }\n\n                newSchedule.addElement(request.getParameter(\"duty\" + duties + \"Begin\"));\n                newSchedule.addElement(request.getParameter(\"duty\" + duties + \"End\"));\n\n                DutySchedule newDuty = new DutySchedule(newSchedule);\n                dutySchedules.add(newDuty.toString());\n            }\n        }\n    }\n    \n    private ModelAndView createGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        return new ModelAndView(\"admin/userGroupView/groups/newGroup\");\n    }\n    \n    private ModelAndView addGroup(HttpServletRequest request, HttpServletResponse response) throws Exception {    \n                \n        String groupName = request.getParameter(\"groupName\");\n        String groupComment = request.getParameter(\"groupComment\");\n        if (groupComment == null) {\n            groupComment = \"\";\n        }\n\n        if (groupName != null && groupName.matches(\".*[&<>\\\"`']+.*\")) {\n            throw new ServletException(\"Group ID must not contain any HTML markup.\");\n        }\n\n        if (groupComment != null && groupComment.matches(\".*[&<>\\\"`']+.*\")) {\n            throw new ServletException(\"Group comment must not contain any HTML markup.\");\n        }\n\n        boolean hasGroup = false;\n        try {\n            hasGroup = m_groupRepository.groupExists(groupName);\n        } catch (Throwable e) {\n            throw new ServletException(\"Can't determine if group \" + groupName + \" already exists in groups.xml.\", e);\n        }\n        \n        if (hasGroup) {\n            return new ModelAndView(\"admin/userGroupView/groups/newGroup\", \"action\", \"redo\");            \n        } else {\n            WebGroup newGroup = new WebGroup();\n            newGroup.setName(groupName);\n            newGroup.setComments(groupComment);\n            \n            return editGroup(request, newGroup);\n        }\n    }\n}\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2017 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2017 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\" >\n  <jsp:param name=\"title\" value=\"Group Configuration\" />\n  <jsp:param name=\"headTitle\" value=\"List\" />\n  <jsp:param name=\"headTitle\" value=\"Groups\" />\n  <jsp:param name=\"headTitle\" value=\"Admin\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n  <jsp:param name=\"breadcrumb\" value=\"Group List\" />\n</jsp:include>\n\n<script type=\"text/javascript\" >\n    function addNewGroup()\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"create\";\n        document.allGroups.submit();\n    }\n    \n    function detailGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"show\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function deleteGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"delete\";\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n    \n    function modifyGroup(groupName)\n    {\n        document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n        document.allGroups.operation.value=\"edit\"\n        document.allGroups.groupName.value=groupName;\n        document.allGroups.submit();\n    }\n\n    function renameGroup(groupName)\n    {\n        var newName = prompt(\"Enter new name for group.\", groupName);\n\n        if (newName != null && newName != \"\") {\n          if (/.*[&<>\"`']+.*/.test(newName)) {\n            alert(\"The group ID must not contain any HTML markup.\");\n            return;\n          }\n          document.allGroups.newName.value = newName;\n          document.allGroups.groupName.value=groupName;\n          document.allGroups.operation.value=\"rename\";\n          document.allGroups.action=\"admin/userGroupView/groups/modifyGroup\";\n          document.allGroups.submit();\n        }\n    }\n</script>\n\n<p>\n  Click on the <i>Group Name</i> link to view detailed information about a group.\n</p>\n\n<p>\n  <a href=\"javascript:addNewGroup()\">\n    <i class=\"fa fa-plus-circle fa-2x\"></i> Add new group\n  </a>\n</p>\n\n<form method=\"post\" name=\"allGroups\">\n  <input type=\"hidden\" name=\"operation\"/>\n  <input type=\"hidden\" name=\"groupName\"/>\n  <input type=\"hidden\" name=\"newName\"/>\n  <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n  <div class=\"card\">\n    <table class=\"table table-sm table-bordered\">\n         <tr>\n          <th>Delete</th>\n          <th>Modify</th>\n          <th>Rename</th>\n          <th>Group Name</th>\n          <th>Comments</th>\n        </tr>\n         <c:forEach var=\"group\" varStatus=\"groupStatus\" items=\"${groups}\">\n         <tr class=\"divider ${groupStatus.index % 2 == 0 ?  'even' : 'odd'}\" id=\"group-${group.name}\">\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <a id=\"${group.name}.doDelete\" href=\"javascript:deleteGroup('${group.name}')\" onclick=\"return confirm('Are you sure you want to delete the group ${group.name}?')\"><i class=\"fa fa-trash-o fa-2x\"></i></a>              \n              </c:when>\n              <c:otherwise>\n                <i class=\"fa fa-trash-o fa-2x\" onclick=\"alert('Sorry, the ${group.name} group cannot be deleted.')\"></i>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <a id=\"${group.name}.doModify\" href=\"javascript:modifyGroup('${group.name}')\"><i class=\"fa fa-edit fa-2x\"></i></a>\n          </td>\n          <td width=\"5%\" class=\"text-center\">\n            <c:choose>\n              <c:when test='${group.name != \"Admin\"}'>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"renameGroup('${group.name}')\">Rename</button>\n              </c:when>\n              <c:otherwise>\n                <button id=\"${group.name}.doRename\" type=\"button\" class=\"btn btn-secondary\" name=\"rename\" onclick=\"alert('Sorry, the Admin group cannot be renamed.')\">Rename</button>\n              </c:otherwise>\n            </c:choose>\n          </td>\n          <td>\n            <a href=\"javascript:detailGroup('${group.name}')\">${group.name}</a>\n          </td>\n            <td>\n              <c:choose>\n                <c:when test=\"${group.comments.isPresent()}\">\n                  ${group.comments.get()}\n                </c:when>\n                \n                <c:otherwise>\n                  No Comments\n                </c:otherwise>\n              </c:choose>\n            </td>\n          </tr>\n        </c:forEach>\n     </table>\n   </div>\n</form>\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\" %>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New Group\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Groups\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/groups/list.htm'>Group List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New Group\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput()\n  {\n    var id = new String(document.newGroupForm.groupName.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The group ID '\" + document.newGroupForm.groupName.value + \"' cannot be used. It may be confused with the administration group ID 'Admin'.\");\n        return false;\n    }\n\n    if (/.*[&<>\"`']+.*/.test(id)) {\n        alert(\"The group ID must not contain any HTML markup.\");\n        return false;\n    }\n\n    var comment = new String(document.newGroupForm.groupComment.value);\n    if (/.*[&<>\"`']+.*/.test(comment)) {\n        alert(\"The group comment must not contain any HTML markup.\");\n        return false;\n    }\n\n    document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n    document.newGroupForm.operation.value=\"addGroup\";\n    return true;\n  }    \n  function cancelGroup()\n  {\n      document.newGroupForm.action=\"admin/userGroupView/groups/modifyGroup\";\n      document.newGroupForm.operation.value=\"cancel\";\n      document.newGroupForm.submit();\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The group <%=request.getParameter(\"groupName\")%> already exists.\n        Please type in a different group ID.</span>\n    <%} else { %>\n      <span>Please enter a group ID below.</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form role=\"form\" class=\"form\" id=\"newGroupForm\" method=\"post\" name=\"newGroupForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"operation\" />\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n\n      <div class=\"form-group\">\n        <label for=\"groupName\" class=\"\">Group Name</label>\n      <input class=\"form-control\" id=\"groupName\" type=\"text\" name=\"groupName\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"groupComment\" class=\"\">Comment</label>\n      <input class=\"form-control\" id=\"groupComment\" type=\"text\" name=\"groupComment\"/>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-secondary mr-2\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelGroup()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n", "<%--\n/*******************************************************************************\n * This file is part of OpenNMS(R).\n *\n * Copyright (C) 2002-2014 The OpenNMS Group, Inc.\n * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n *\n * OpenNMS(R) is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * OpenNMS(R) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with OpenNMS(R).  If not, see:\n *      http://www.gnu.org/licenses/\n *\n * For more information contact:\n *     OpenNMS(R) Licensing <license@opennms.org>\n *     http://www.opennms.org/\n *     http://www.opennms.com/\n *******************************************************************************/\n\n--%>\n\n<%@page language=\"java\" contentType=\"text/html\" session=\"true\"%>\n\n<jsp:include page=\"/includes/bootstrap.jsp\" flush=\"false\">\n\t<jsp:param name=\"title\" value=\"New User\" />\n\t<jsp:param name=\"headTitle\" value=\"New\" />\n\t<jsp:param name=\"headTitle\" value=\"Users\" />\n\t<jsp:param name=\"headTitle\" value=\"Admin\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/index.jsp'>Admin</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/index.jsp'>Users and Groups</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"<a href='admin/userGroupView/users/list.jsp'>User List</a>\" />\n\t<jsp:param name=\"breadcrumb\" value=\"New User\" />\n</jsp:include>\n\n<script type=\"text/javascript\">\n  function validateFormInput() \n  {\n    var id = new String(document.newUserForm.userID.value);\n    if (id.toLowerCase()==\"admin\")\n    {\n        alert(\"The user ID '\" + document.newUserForm.userID.value + \"' cannot be used. It may be confused with the administration user ID 'admin'.\");\n        return false;\n    }\n\n    if (/.*[&<>\"`']+.*/.test(id)) {\n        alert(\"The user ID must not contain any HTML markup.\");\n        return false;\n    }\n\n    if (document.newUserForm.pass1.value == document.newUserForm.pass2.value) \n    {\n      document.newUserForm.action=\"admin/userGroupView/users/addNewUser\";\n      return true;\n    } \n    else\n    {\n      alert(\"The two password fields do not match!\");\n      document.newUserForm.pass1.value = \"\";\n      document.newUserForm.pass2.value = \"\";\n      return false;\n    }\n  }    \n  function cancelUser()\n  {\n      window.location.href = \"admin/userGroupView/users/list.jsp\";\n  }\n</script>\n\n<div class=\"card\">\n  <div class=\"card-header\">\n    <%if (\"redo\".equals(request.getParameter(\"action\"))) { %>\n      <span>The user <%=request.getParameter(\"userID\")%> already exists.\n        Please type in a different user ID.</span>\n    <%} else { %>\n      <span>Please enter a user ID and password below</span>\n    <%}%>\n  </div>\n  <div class=\"card-body\">\n    <form class=\"form\" role=\"form\" id=\"newUserForm\" method=\"post\" name=\"newUserForm\" onsubmit=\"return validateFormInput();\">\n      <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n      <div class=\"form-group\">\n        <label for=\"userID\" class=\"\">User ID</label>\n        <input id=\"userID\" type=\"text\" name=\"userID\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass1\" class=\"\">Password</label>\n        <input id=\"pass1\" type=\"password\" name=\"pass1\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pass2\" class=\"\">Confirm Password</label>\n        <input id=\"pass2\" type=\"password\" name=\"pass2\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-secondary\">OK</button>\n      <button type=\"button\" class=\"btn btn-secondary\" onclick=\"cancelUser()\">Cancel</button>\n    </form>\n  </div> <!-- card-body -->\n</div> <!-- panel -->\n\n<jsp:include page=\"/includes/bootstrap-footer.jsp\" flush=\"false\" />\n"], "filenames": ["opennms-doc/guide-admin/src/asciidoc/text/user-management/users.adoc", "opennms-webapp/src/main/java/org/opennms/web/admin/users/AddNewUserServlet.java", "opennms-webapp/src/main/java/org/opennms/web/admin/users/RenameUserServlet.java", "opennms-webapp/src/main/java/org/opennms/web/controller/admin/group/GroupController.java", "opennms-webapp/src/main/webapp/WEB-INF/jsp/admin/userGroupView/groups/list.jsp", "opennms-webapp/src/main/webapp/WEB-INF/jsp/admin/userGroupView/groups/newGroup.jsp", "opennms-webapp/src/main/webapp/admin/userGroupView/users/newUser.jsp"], "buggy_code_start_loc": [59, 71, 62, 154, 80, 46, 54], "buggy_code_end_loc": [59, 71, 62, 314, 82, 55, 55], "fixing_code_start_loc": [60, 72, 63, 154, 80, 46, 54], "fixing_code_end_loc": [62, 77, 67, 327, 85, 66, 60], "type": "CWE-79", "message": "In OpenNMS Horizon, versions opennms-1-0-stable through opennms-27.1.0-1; OpenNMS Meridian, versions meridian-foundation-2015.1.0-1 through meridian-foundation-2019.1.18-1; meridian-foundation-2020.1.0-1 through meridian-foundation-2020.1.6-1 are vulnerable to Stored Cross-Site Scripting, since the function `validateFormInput()` performs improper validation checks on the input sent to the `groupName` and `groupComment` parameters. Due to this flaw, an authenticated attacker could inject arbitrary script and trick other admin users into downloading malicious files which can cause severe damage to the organization using opennms.", "other": {"cve": {"id": "CVE-2021-25933", "sourceIdentifier": "vulnerabilitylab@mend.io", "published": "2021-05-20T15:15:07.720", "lastModified": "2021-05-26T20:53:12.497", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In OpenNMS Horizon, versions opennms-1-0-stable through opennms-27.1.0-1; OpenNMS Meridian, versions meridian-foundation-2015.1.0-1 through meridian-foundation-2019.1.18-1; meridian-foundation-2020.1.0-1 through meridian-foundation-2020.1.6-1 are vulnerable to Stored Cross-Site Scripting, since the function `validateFormInput()` performs improper validation checks on the input sent to the `groupName` and `groupComment` parameters. Due to this flaw, an authenticated attacker could inject arbitrary script and trick other admin users into downloading malicious files which can cause severe damage to the organization using opennms."}, {"lang": "es", "value": "En OpenNMS Horizon, versiones opennms-1-0-stable hasta opennms-27.1.0-1;&#xa0;OpenNMS Meridian, versiones meridian-foundation-2015.1.0-1 hasta meridian-foundation-2019.1.18-1; versiones&#xa0;meridian-foundation-2020.1.0-1 hasta meridian-foundation-2020.1.6-1, son vulnerables a ataques de tipo Cross-Site Scripting almacenados, ya que la funci\u00f3n \"validateFormInput()\" lleva a cabo validaciones de comprobaci\u00f3n inapropiadas en la entrada enviada a los par\u00e1metros \"groupName\" y \"groupComment\".&#xa0;Debido a este fallo, un atacante autenticado podr\u00eda inyectar un script arbitrario y enga\u00f1ar a otros usuarios administradores para que descarguen archivos maliciosos que pueden causar da\u00f1os severos a la organizaci\u00f3n usando opennms"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:opennms:horizon:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.0", "versionEndExcluding": "27.1.1", "matchCriteriaId": "B38D9FCC-AF2B-46B6-9573-04EE36A2BAEB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:opennms:meridian:*:*:*:*:*:*:*:*", "versionStartIncluding": "2015.1.0", "versionEndExcluding": "2019.1.19", "matchCriteriaId": "CBFB1241-8D42-4F61-B855-210D963B4B4E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:opennms:meridian:*:*:*:*:*:*:*:*", "versionStartIncluding": "2020.1.0", "versionEndExcluding": "2020.1.7", "matchCriteriaId": "492F27E1-43CF-4823-B132-DC2730CB8CEA"}]}]}], "references": [{"url": "https://github.com/OpenNMS/opennms/commit/8a97e6869d6e49da18b208c837438ace80049c01,", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/OpenNMS/opennms/commit/eb08b5ed4c5548f3e941a1f0d0363ae4439fa98c", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/OpenNMS/opennms/commit/f3ebfa3da5352b4d57f238b54c6db315ad99f10e", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25933", "source": "vulnerabilitylab@mend.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/OpenNMS/opennms/commit/8a97e6869d6e49da18b208c837438ace80049c01,"}}