{"buggy_code": ["sudo: false\nos:\n  - linux\n  - osx\nlanguage: node_js\nnode_js:\n  - node\n  - '10'\n  - '9'\n  - '8'\n  - '7'\n  - '6'\n  - '5'\n  - '4'\n  - '0.12'\n  - '0.10'\nmatrix:\n  fast_finish: true\n  allow_failures:\n    - node_js: '0.8'\n", "/*!\n * merge-deep <https://github.com/jonschlinkert/merge-deep>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar union = require('arr-union');\nvar clone = require('clone-deep');\nvar typeOf = require('kind-of');\n\nmodule.exports = function mergeDeep(orig, objects) {\n  if (!isObject(orig) && !Array.isArray(orig)) {\n    orig = {};\n  }\n\n  var target = clone(orig);\n  var len = arguments.length;\n  var idx = 0;\n\n  while (++idx < len) {\n    var val = arguments[idx];\n\n    if (isObject(val) || Array.isArray(val)) {\n      merge(target, val);\n    }\n  }\n  return target;\n};\n\nfunction merge(target, obj) {\n  for (var key in obj) {\n    if (key === '__proto__' || !hasOwn(obj, key)) {\n      continue;\n    }\n\n    var oldVal = obj[key];\n    var newVal = target[key];\n\n    if (isObject(newVal) && isObject(oldVal)) {\n      target[key] = merge(newVal, oldVal);\n    } else if (Array.isArray(newVal)) {\n      target[key] = union([], newVal, oldVal);\n    } else {\n      target[key] = clone(oldVal);\n    }\n  }\n  return target;\n}\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction isObject(val) {\n  return typeOf(val) === 'object' || typeOf(val) === 'function';\n}\n"], "fixing_code": ["sudo: false\nos:\n  - linux\n  - osx\nlanguage: node_js\nnode_js:\n  - node\n  - '10'\n  - '9'\n  - '8'\n  - '7'\n  - '6'\n  - '5'\n  - '4'\n  - '0.12'\n  - '0.10'\nmatrix:\n  fast_finish: true\n  allow_failures:\n    - node_js: 'node'\n    - node_js: '0.8'\n", "/*!\n * merge-deep <https://github.com/jonschlinkert/merge-deep>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar union = require('arr-union');\nvar clone = require('clone-deep');\nvar typeOf = require('kind-of');\n\nmodule.exports = function mergeDeep(orig, objects) {\n  if (!isObject(orig) && !Array.isArray(orig)) {\n    orig = {};\n  }\n\n  var target = clone(orig);\n  var len = arguments.length;\n  var idx = 0;\n\n  while (++idx < len) {\n    var val = arguments[idx];\n\n    if (isObject(val) || Array.isArray(val)) {\n      merge(target, val);\n    }\n  }\n  return target;\n};\n\nfunction merge(target, obj) {\n  for (var key in obj) {\n    if (!isValidKey(key) || !hasOwn(obj, key)) {\n      continue;\n    }\n\n    var oldVal = obj[key];\n    var newVal = target[key];\n\n    if (isObject(newVal) && isObject(oldVal)) {\n      target[key] = merge(newVal, oldVal);\n    } else if (Array.isArray(newVal)) {\n      target[key] = union([], newVal, oldVal);\n    } else {\n      target[key] = clone(oldVal);\n    }\n  }\n  return target;\n}\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction isObject(val) {\n  return typeOf(val) === 'object' || typeOf(val) === 'function';\n}\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}"], "filenames": [".travis.yml", "index.js"], "buggy_code_start_loc": [19, 35], "buggy_code_end_loc": [19, 59], "fixing_code_start_loc": [20, 35], "fixing_code_end_loc": [21, 64], "type": "CWE-1321", "message": "The merge-deep library before 3.0.3 for Node.js can be tricked into overwriting properties of Object.prototype or adding new properties to it. These properties are then inherited by every object in the program, thus facilitating prototype-pollution attacks against applications using this library.", "other": {"cve": {"id": "CVE-2021-26707", "sourceIdentifier": "cve@mitre.org", "published": "2021-06-02T15:15:07.787", "lastModified": "2022-12-02T19:37:32.077", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The merge-deep library before 3.0.3 for Node.js can be tricked into overwriting properties of Object.prototype or adding new properties to it. These properties are then inherited by every object in the program, thus facilitating prototype-pollution attacks against applications using this library."}, {"lang": "es", "value": "La biblioteca merge-deep versiones anteriores a 3.0.3, para Node.js puede ser enga\u00f1ado para sobrescribir propiedades de Object.prototype o a\u00f1adirle nuevas propiedades. Estas propiedades son heredadas por todos los objetos del programa, facilitando as\u00ed los ataques de contaminaci\u00f3n de prototipos contra las aplicaciones que usan esta biblioteca"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:merge-deep_project:merge-deep:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "3.0.3", "matchCriteriaId": "8EBEF8AD-E84F-4EC1-9078-75BE5190A75B"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netapp:e-series_performance_analyzer:-:*:*:*:*:*:*:*", "matchCriteriaId": "24B8DB06-590A-4008-B0AB-FCD1401C77C6"}]}]}], "references": [{"url": "https://github.com/jonschlinkert/merge-deep/commit/11e5dd56de8a6aed0b1ed022089dbce6968d82a5", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20210716-0008/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://securitylab.github.com/advisories/GHSL-2020-160-merge-deep/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.npmjs.com/package/merge-deep", "source": "cve@mitre.org", "tags": ["Product", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jonschlinkert/merge-deep/commit/11e5dd56de8a6aed0b1ed022089dbce6968d82a5"}}