{"buggy_code": ["<?php\n/* Copyright (C) 2004       Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2012  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2011-2015  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Remy Younes             <ryounes@gmail.com>\n * Copyright (C) 2012-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@ltairis.fr>\n * Copyright (C) 2011-2016  Alexandre Spangaro      <aspangaro@zendsi.com>\n * Copyright (C) 2015       Ferran Marcet           <fmarcet@2byte.es>\n * Copyright (C) 2016       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/accountancy/admin/accountmodel.php\n *\t\t\\ingroup    Advanced accountancy\n *\t\t\\brief      Page to administer model of chart of accounts\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT . '/core/class/html.formaccounting.class.php';\n\n$langs->loadLangs(array(\"errors\",\"admin\",\"companies\",\"resource\",\"holiday\",\"compta\",\"accountancy\",\"hrm\"));\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=GETPOST('id','int');\n$rowid=GETPOST('rowid','alpha');\n$code=GETPOST('code','alpha');\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n$search_country_id = GETPOST('search_country_id','int');\n\n\n// Security check\nif ($user->societe_id > 0) accessforbidden();\nif (! $user->rights->accounting->chartofaccount) accessforbidden();\n\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n\n$tabname[31]= MAIN_DB_PREFIX.\"accounting_system\";\n$tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[31]= \"Pcg_version\";\n$tablib[32]= \"DictionaryAccountancyCategory\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[31]= \"SELECT s.rowid as rowid, pcg_version, s.label, s.fk_country as country_id, c.code as country_code, c.label as country, s.active FROM \".MAIN_DB_PREFIX.\"accounting_system as s, \".MAIN_DB_PREFIX.\"c_country as c WHERE s.fk_country=c.rowid and c.active=1\";\n$tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.sens, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[31]=\"pcg_version ASC\";\n$tabsqlsort[32]=\"position ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[31]= \"pcg_version,label,country_id,country\";\n$tabfield[32]= \"code,label,range_account,sens,category_type,formula,position,country_id,country\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[31]= \"pcg_version,label,country\";\n$tabfieldvalue[32]= \"code,label,range_account,sens,category_type,formula,position,country\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[31]= \"pcg_version,label,fk_country\";\n$tabfieldinsert[32]= \"code,label,range_account,sens,category_type,formula,position,fk_country\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[31]= \"\";\n$tabrowid[32]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[31]= ! empty($conf->accounting->enabled);\n$tabcond[32]= ! empty($conf->accounting->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[31] = array('pcg_version'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[31] = array();\n$tabfieldcheck[32] = array();\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n\t$search_country_id = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n\t$listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n\t$listfieldinsert=explode(',',$tabfieldinsert[$id]);\n\t$listfieldmodify=explode(',',$tabfieldinsert[$id]);\n\t$listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n\t// Check that all fields are filled\n\t$ok=1;\n\tforeach ($listfield as $f => $value)\n\t{\n\t\tif ($value == 'country_id' && in_array($tablib[$id],array('DictionaryVAT','DictionaryRegion','DictionaryCompanyType','DictionaryHolidayTypes','DictionaryRevenueStamp','DictionaryAccountancyCategory','Pcg_version'))) continue;\t\t// For some pages, country is not mandatory\n\t\tif ($value == 'country' && in_array($tablib[$id],array('DictionaryCanton','DictionaryCompanyType','DictionaryRevenueStamp'))) continue;\t\t// For some pages, country is not mandatory\n\t\tif ($value == 'localtax1' && empty($_POST['localtax1_type'])) continue;\n\t\tif ($value == 'localtax2' && empty($_POST['localtax2_type'])) continue;\n\t\tif ($value == 'color' && empty($_POST['color'])) continue;\n\t\tif ($value == 'formula' && empty($_POST['formula'])) continue;\n\t\tif ((! isset($_POST[$value]) || $_POST[$value]=='')\n\t\t\t&& (! in_array($listfield[$f], array('decalage','module','accountancy_code','accountancy_code_sell','accountancy_code_buy'))  // Fields that are not mandatory\n\t\t\t&& (! ($id == 10 && $listfield[$f] == 'code')) // Code is mandatory fir table 10\n\t\t\t)\n\t\t)\n\t\t{\n\t\t\t$ok=0;\n\t\t\t$fieldnamekey=$listfield[$f];\n\t\t\t// We take translate key of field\n\n\t\t\tif ($fieldnamekey == 'pcg_version')  $fieldnamekey='Pcg_version';\n\t\t\tif ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n\t\t\tif ($fieldnamekey == 'libelle_facture') $fieldnamekey = 'LabelOnDocuments';\n\t\t\tif ($fieldnamekey == 'nbjour')   $fieldnamekey='NbOfDays';\n\t\t\tif ($fieldnamekey == 'decalage') $fieldnamekey='Offset';\n\t\t\tif ($fieldnamekey == 'module')   $fieldnamekey='Module';\n\t\t\tif ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n\t\t\tif ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n\t\t\tif ($fieldnamekey == 'taux') $fieldnamekey = 'Rate';\n\t\t\tif ($fieldnamekey == 'type') $fieldnamekey = 'Type';\n\t\t\tif ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n\t\t\tif ($fieldnamekey == 'unicode') $fieldnamekey = 'Unicode';\n\t\t\tif ($fieldnamekey == 'deductible') $fieldnamekey = 'Deductible';\n\t\t\tif ($fieldnamekey == 'sortorder') $fieldnamekey = 'SortOrder';\n\t\t\tif ($fieldnamekey == 'category_type') $fieldnamekey = 'Calculated';\n\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n\t\t}\n\t}\n\t// Other checks\n\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_actioncomm\" && isset($_POST[\"type\"]) && in_array($_POST[\"type\"],array('system','systemauto'))) {\n\t\t$ok=0;\n\t\tsetEventMessages($langs->transnoentities('ErrorReservedTypeSystemSystemAuto'), null, 'errors');\n\t}\n\tif (isset($_POST[\"code\"]))\n\t{\n\t\tif ($_POST[\"code\"]=='0')\n\t\t{\n\t\t\t$ok=0;\n\t\t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n\t\t}\n\t\t/*if (!is_numeric($_POST['code']))\t// disabled, code may not be in numeric base\n    \t{\n\t    \t$ok = 0;\n\t    \t$msg .= $langs->transnoentities('ErrorFieldFormat', $langs->transnoentities('Code')).'<br>';\n\t    }*/\n\t}\n\tif (isset($_POST[\"country\"]) && ($_POST[\"country\"]=='0') && ($id != 2))\n\t{\n\t\tif (in_array($tablib[$id],array('DictionaryCompanyType','DictionaryHolidayTypes')))\t// Field country is no mandatory for such dictionaries\n\t\t{\n\t\t\t$_POST[\"country\"]='';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$ok=0;\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\",$langs->transnoentities(\"Country\")), null, 'errors');\n\t\t}\n\t}\n\tif ($id == 3 && ! is_numeric($_POST[\"code\"]))\n\t{\n\t   \t$ok=0;\n\t   \tsetEventMessages($langs->transnoentities(\"ErrorFieldMustBeANumeric\",$langs->transnoentities(\"Code\")), null, 'errors');\n\t}\n\n\t// Clean some parameters\n\tif (isset($_POST[\"localtax1\"]) && empty($_POST[\"localtax1\"])) $_POST[\"localtax1\"]='0';\t// If empty, we force to 0\n\tif (isset($_POST[\"localtax2\"]) && empty($_POST[\"localtax2\"])) $_POST[\"localtax2\"]='0';\t// If empty, we force to 0\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n\n\t// Si verif ok et action add, on ajoute la ligne\n\tif ($ok && GETPOST('actionadd'))\n\t{\n\t\tif ($tabrowid[$id])\n\t\t{\n\t\t\t// Recupere id libre pour insertion\n\t\t\t$newid=0;\n\t\t\t$sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n\t\t\t$result = $db->query($sql);\n\t\t\tif ($result)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($result);\n\t\t\t\t$newid=($obj->newid + 1);\n\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\n\t\t// Add new entry\n\t\t$sql = \"INSERT INTO \".$tabname[$id].\" (\";\n\t\t// List of fields\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $tabrowid[$id].\",\";\n\t\t$sql.= $tabfieldinsert[$id];\n\t\t$sql.=\",active)\";\n\t\t$sql.= \" VALUES(\";\n\n\t\t// List of values\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $newid.\",\";\n\t\t$i=0;\n\t\tforeach ($listfieldinsert as $f => $value)\n\t\t{\n\t\t\tif ($value == 'price' || preg_match('/^amount/i',$value) || $value == 'taux') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n\t\t\t}\n\t\t\telse if ($value == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.=\",1)\";\n\n\t\tdol_syslog(\"actionadd\", LOG_DEBUG);\n\t\t$result = $db->query($sql);\n\t\tif ($result)\t// Add is ok\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n\t\t\t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Si verif ok et action modify, on modifie la ligne\n\tif ($ok && GETPOST('actionmodify'))\n\t{\n\t\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\t\telse { $rowidcol=\"rowid\"; }\n\n\t\t// Modify entry\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET \";\n\t\t// Modifie valeur des champs\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n\t\t{\n\t\t\t$sql.= $tabrowid[$id].\"=\";\n\t\t\t$sql.= \"'\".$db->escape($rowid).\"', \";\n\t\t}\n\t\t$i = 0;\n\t\tforeach ($listfieldmodify as $field)\n\t\t{\n\t\t\tif ($field == 'price' || preg_match('/^amount/i',$field) || $field == 'taux') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n\t\t\t}\n\t\t\telse if ($field == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\t$sql.= $field.\"=\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n\t\tdol_syslog(\"actionmodify\", LOG_DEBUG);\n\t\t//print $sql;\n\t\t$resql = $db->query($sql);\n\t\tif (! $resql)\n\t\t{\n\t\t\tsetEventMessages($db->error(), null, 'errors');\n\t\t}\n\t}\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\t$sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n\tdol_syslog(\"delete\", LOG_DEBUG);\n\t$result = $db->query($sql);\n\tif (! $result)\n\t{\n\t\tif ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n}\n\n// activate\nif ($action == $acts[0])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// disable\nif ($action == $acts[1])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// favorite\nif ($action == 'activate_favorite')\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// disable favorite\nif ($action == 'disable_favorite')\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans($tablib[$id]);\n$linkback='';\n\nprint load_fiche_titre($titre,$linkback,'title_accountancy');\n\nif (empty($id))\n{\n\tprint $langs->trans(\"DictionaryDesc\");\n\tprint \" \".$langs->trans(\"OnlyActiveElementsAreShown\").\"<br>\\n\";\n}\nprint \"<br>\\n\";\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n\t// Complete requete recherche valeurs avec critere de tri\n\t$sql=$tabsql[$id];\n\n\tif ($search_country_id > 0)\n\t{\n\t\tif (preg_match('/ WHERE /',$sql)) $sql.= \" AND \";\n\t\telse $sql.=\" WHERE \";\n\t\t$sql.= \" c.rowid = \".$search_country_id;\n\t}\n\n\tif ($sortfield)\n\t{\n\t\t// If sort order is \"country\", we use country_code instead\n\t\tif ($sortfield == 'country') $sortfield='country_code';\n\t\t$sql.= \" ORDER BY \".$sortfield;\n\t\tif ($sortorder)\n\t\t{\n\t\t\t$sql.=\" \".strtoupper($sortorder);\n\t\t}\n\t\t$sql.=\", \";\n\t\t// Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n\t}\n\telse {\n\t\t$sql.=\" ORDER BY \";\n\t}\n\t$sql.=$tabsqlsort[$id];\n\t$sql.=$db->plimit($listlimit+1,$offset);\n\t//print $sql;\n\n\t$fieldlist=explode(',',$tabfield[$id]);\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\n\tprint '<div class=\"div-table-responsive\">';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\n\t// Form to add a new line\n\tif ($tabname[$id])\n\t{\n\t\t$alabelisused=0;\n\t\t$var=false;\n\n\t\t$fieldlist=explode(',',$tabfield[$id]);\n\n\t\t// Line for title\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\t$align=\"left\";\n\t\t\tif ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n\t\t\tif ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n\t\t\tif ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='right';\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\";}\n\t\t\tif ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\";}\n\t\t\tif ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n\t\t\tif ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n\t\t\tif ($fieldlist[$field]=='type')            {\n\t\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_paiement\") $valuetoshow=$form->textwithtooltip($langs->trans(\"Type\"),$langs->trans(\"TypePaymentDesc\"),2,1,img_help(1,''));\n\t\t\t\telse $valuetoshow=$langs->trans(\"Type\");\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n\t\t\t{\n\t\t\t\t$valuetoshow=$langs->trans(\"Label\");\n\t\t\t\tif ($id != 25) $valuetoshow.=\"*\";\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='libelle_facture') { $valuetoshow=$langs->trans(\"LabelOnDocuments\").\"*\"; }\n\t\t\tif ($fieldlist[$field]=='country')         {\n\t\t\t\tif (in_array('region_id',$fieldlist)) { print '<td>&nbsp;</td>'; continue; }\t\t// For region page, we do not show the country input\n\t\t\t\t$valuetoshow=$langs->trans(\"Country\");\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n\t\t\tif ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n\t\t\tif ($fieldlist[$field]=='width')           { $valuetoshow=$langs->trans(\"Width\"); }\n\t\t\tif ($fieldlist[$field]=='height')          { $valuetoshow=$langs->trans(\"Height\"); }\n\t\t\tif ($fieldlist[$field]=='unit')            { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n\t\t\tif ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $valuetoshow=''; }\n\t\t\tif ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_version' || $fieldlist[$field]=='fk_pcg_version') { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n\t\t\tif ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountparent\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n\t\t\tif ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n\t\t\tif ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\n\t\t\tif ($id == 2)\t// Special cas for state page\n\t\t\t{\n\t\t\t\tif ($fieldlist[$field]=='region_id') { $valuetoshow='&nbsp;'; $showfield=1; }\n\t\t\t\tif ($fieldlist[$field]=='region') { $valuetoshow=$langs->trans(\"Country\").'/'.$langs->trans(\"Region\"); $showfield=1; }\n\t\t\t}\n\n\t\t\tif ($valuetoshow != '')\n\t\t\t{\n\t\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\t\tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n\t\t\t\telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n\t\t\t\telse print $valuetoshow;\n\t\t\t\tprint '</td>';\n\t\t\t }\n\t\t\t if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n\t\t}\n\n\t\tprint '<td>';\n\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n\t\tprint '</td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Line to enter new values\n\t\tprint \"<tr \".$bcnd[$var].\">\";\n\n\t\t$obj = new stdClass();\n\t\t// If data was already input, we define them in obj to populate input fields.\n\t\tif (GETPOST('actionadd'))\n\t\t{\n\t\t\tforeach ($fieldlist as $key=>$val)\n\t\t\t{\n\t\t\t\tif (GETPOST($val))\n\t\t\t\t\t$obj->$val=GETPOST($val);\n\t\t\t}\n\t\t}\n\n\t\t$tmpaction = 'create';\n\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t$reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\tif ($id == 3) unset($fieldlist[2]);\n\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.'c_email_templates' && $action == 'edit')\n\t\t\t{\n\t\t\t\tfieldListAccountModel($fieldlist,$obj,$tabname[$id],'hide');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfieldListAccountModel($fieldlist,$obj,$tabname[$id],'add');\n\t\t\t}\n\t\t}\n\n\t\tprint '<td colspan=\"3\" align=\"right\">';\n\t\tif ($tabname[$id] != MAIN_DB_PREFIX.'c_email_templates' || $action != 'edit')\n\t\t{\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n\t\t}\n\t\tprint '</td>';\n\t\tprint \"</tr>\";\n\n\t\t$colspan=count($fieldlist)+3;\n\n\t\tif (! empty($alabelisused))  // If there is one label among fields, we show legend of *\n\t\t{\n\t\t\tprint '<tr><td colspan=\"'.$colspan.'\">* '.$langs->trans(\"LabelUsedByDefault\").'.</td></tr>';\n\t\t}\n\t\tprint '<tr><td colspan=\"'.$colspan.'\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n\t}\n\n\n\n\t// List of available values in database\n\tdol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\t$var=true;\n\n\t\t$param = '&id='.$id;\n\t\tif ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n\t\t$paramwithsearch = $param;\n\t\tif ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n\t\tif ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n\n\t\t// There is several pages\n\t\tif ($num > $listlimit)\n\t\t{\n\t\t\tprint '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n\t\t\tprint_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Title line with search boxes\n\t\tprint '<tr class=\"liste_titre liste_titre_add\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t$showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\n\t\t\tif ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\n\t\t\tif ($showfield)\n\t\t\t{\n\t\t\t\tif ($value == 'country')\n\t\t\t\t{\n\t\t\t\t\tprint '<td class=\"liste_titre\">';\n\t\t\t\t\tprint $form->select_country($search_country_id, 'search_country_id', '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<td class=\"liste_titre\"></td>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\" colspan=\"2\" align=\"right\">';\n\t\t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n\t\tprint $searchpicto;\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Title of lines\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\t\t\t$align=\"left\";\n\t\t\t$sortable=1;\n\t\t\t$valuetoshow='';\n\t\t\t/*\n            $tmparray=getLabelOfField($fieldlist[$field]);\n            $showfield=$tmp['showfield'];\n            $valuetoshow=$tmp['valuetoshow'];\n            $align=$tmp['align'];\n            $sortable=$tmp['sortable'];\n\t\t\t*/\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\tif ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n\t\t\tif ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n\t\t\tif ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='right';\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n\t\t\tif ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n\t\t\tif ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n\t\t\t{\n\t\t\t\t$valuetoshow=$langs->trans(\"Label\");\n\t\t\t   \tif ($id != 25) $valuetoshow.=\"*\";\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='libelle_facture') { $valuetoshow=$langs->trans(\"LabelOnDocuments\").\"*\"; }\n\t\t\tif ($fieldlist[$field]=='country')         { $valuetoshow=$langs->trans(\"Country\"); }\n\t\t\tif ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n\t\t\tif ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n\t\t\tif ($fieldlist[$field]=='width')           { $valuetoshow=$langs->trans(\"Width\"); }\n\t\t\tif ($fieldlist[$field]=='height')          { $valuetoshow=$langs->trans(\"Height\"); }\n\t\t\tif ($fieldlist[$field]=='unit')            { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n\t\t\tif ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\t\t\tif ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='fk_pcg_version')  { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n\t\t\tif ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountsparent\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n\t\t\tif ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n\t\t\tif ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\n\t\t\t// Affiche nom du champ\n\t\t\tif ($showfield)\n\t\t\t{\n\t\t\t\tprint getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n\t\t\t}\n\t\t}\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n\t\tprint getTitleFieldOfList('');\n\t\tprint getTitleFieldOfList('');\n\t\tprint '</tr>';\n\n\t\tif ($num)\n\t\t{\n\t\t\t// Lines with values\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t//print_r($obj);\n\t\t\t\tprint '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n\t\t\t\tif ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n\t\t\t\t{\n\t\t\t\t\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n\n\t\t\t\t\t$tmpaction='edit';\n\t\t\t\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\tif (empty($reshook)) fieldListAccountModel($fieldlist,$obj,$tabname[$id],'edit');\n\n\t\t\t\t\tprint '<td colspan=\"3\" align=\"right\"><a name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\">&nbsp;</a><input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\t\tprint '&nbsp;<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\"></td>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t  \t$tmpaction = 'view';\n\t\t\t\t\t$parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\tif (empty($reshook))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach ($fieldlist as $field => $value)\n\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t$showfield=1;\n\t\t\t\t\t\t\t$align=\"left\";\n\t\t\t\t\t\t\t$valuetoshow=$obj->{$fieldlist[$field]};\n\t\t\t\t\t\t\tif ($value == 'type_template')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($value == 'element')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($value == 'source')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = isset($sourceList[$valuetoshow])?$sourceList[$valuetoshow]:$valuetoshow;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($valuetoshow=='all') {\n\t\t\t\t\t\t\t\t$valuetoshow=$langs->trans('All');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='country') {\n\t\t\t\t\t\t\t\tif (empty($obj->country_code))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$valuetoshow='-';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$key=$langs->trans(\"Country\".strtoupper($obj->country_code));\n\t\t\t\t\t\t\t\t\t$valuetoshow=($key != \"Country\".strtoupper($obj->country_code)?$obj->country_code.\" - \".$key:$obj->country);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='recuperableonly' || $fieldlist[$field]=='type_cdr' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n\t\t\t\t\t\t\t\tif(empty($valuetoshow)) $valuetoshow = $langs->trans('None');\n\t\t\t\t\t\t\t\telseif($valuetoshow == 1) $valuetoshow = $langs->trans('AtEndOfMonth');\n\t\t\t\t\t\t\t\telseif($valuetoshow == 2) $valuetoshow = $langs->trans('CurrentNext');\n\t\t\t\t\t\t\t\t$align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='price' || preg_match('/^amount/i',$fieldlist[$field])) {\n\t\t\t\t\t\t\t\t$valuetoshow=price($valuetoshow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle_facture') {\n\t\t\t\t\t\t\t\t$langs->load(\"bills\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"PaymentCondition\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"PaymentCondition\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t\t$valuetoshow=nl2br($valuetoshow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_country') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Country\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"Country\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_availability') {\n\t\t\t\t\t\t\t\t$langs->load(\"propal\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"AvailabilityType\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"AvailabilityType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_actioncomm') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Action\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"Action\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (! empty($obj->code_iso) && $fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_currencies') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Currency\".strtoupper($obj->code_iso));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code_iso && $key != \"Currency\".strtoupper($obj->code_iso)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_typent') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_prospectlevel') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_civility') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Civility\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"Civility\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_type_contact') {\n\t\t\t\t\t\t\t\t$langs->load('agenda');\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_payment_term') {\n\t\t\t\t\t\t\t\t$langs->load(\"bills\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"PaymentConditionShort\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"PaymentConditionShort\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paiement') {\n\t\t\t\t\t\t\t\t$langs->load(\"bills\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"PaymentType\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"PaymentType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_reason') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"DemandReasonType\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"DemandReasonType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_method') {\n\t\t\t\t\t\t\t\t$langs->load(\"orders\");\n\t\t\t\t\t\t\t\t$key=$langs->trans($obj->code);\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != $obj->code)?$key:$obj->{$fieldlist[$field]};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_shipment_mode') {\n\t\t\t\t\t\t\t\t$langs->load(\"sendings\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"SendingMethod\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"SendingMethod\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field] == 'libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paper_format')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$key = $langs->trans('PaperFormat'.strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow = ($obj->code && $key != 'PaperFormat'.strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field] == 'label' && $tabname[$id] == MAIN_DB_PREFIX.'c_type_fees')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$langs->load('trips');\n\t\t\t\t\t\t\t\t$key = $langs->trans(strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow = ($obj->code && $key != strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') {\n\t\t\t\t\t\t\t\t$showfield=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='unicode') {\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->getCurrencySymbol($obj->code,1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t\t\t\t\t\t\t\t$langs->load(\"products\");\n\t\t\t\t\t\t\t\t$valuetoshow=$langs->trans($obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='short_label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t\t\t\t\t\t\t\t$langs->load(\"products\");\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->trans($obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (($fieldlist[$field] == 'unit') && ($tabname[$id] == MAIN_DB_PREFIX.'c_paper_format'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$key = $langs->trans('SizeUnit'.strtolower($obj->unit));\n\t\t\t\t\t\t\t\t$valuetoshow = ($obj->code && $key != 'SizeUnit'.strtolower($obj->unit) ? $key : $obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='taux') {\n\t\t\t\t\t\t\t\t$valuetoshow = price($valuetoshow, 0, $langs, 0, 0);\n\t\t\t\t\t\t\t\t$align=\"right\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (in_array($fieldlist[$field],array('recuperableonly')))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='accountancy_code' || $fieldlist[$field]=='accountancy_code_sell' || $fieldlist[$field]=='accountancy_code_buy') {\n\t\t\t\t\t\t\t\t$valuetoshow = length_accountg($valuetoshow);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$class='tddict';\n\t\t\t\t\t\t\tif ($fieldlist[$field] == 'tracking') $class.=' tdoverflowauto';\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Can an entry be erased or disabled ?\n\t\t\t\t\t$iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n\t\t\t\t\tif (isset($obj->code) && $id != 10)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'RECEP') { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'EF0')   { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($obj->type) && in_array($obj->type, array('system', 'systemauto'))) { $iserasable=0; }\n\t\t\t\t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO')) || in_array($obj->type, array('systemauto'))) { $canbedisabled=0; $canbedisabled = 0; }\n\t\t\t\t\t$canbemodified=$iserasable;\n\t\t\t\t\tif ($obj->code == 'RECEP') $canbemodified=1;\n\n\t\t\t\t\t$url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n\t\t\t\t\tif ($param) $url .= '&'.$param;\n\t\t\t\t\t$url.='&';\n\n\t\t\t\t\t// Active\n\t\t\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\t\t\tif ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n\t\t\t\t\telse\n\t\t\t\t \t{\n\t\t\t\t \t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO'))) print $langs->trans(\"AlwaysActive\");\n\t\t\t\t \t\telse if (isset($obj->type) && in_array($obj->type, array('systemauto')) && empty($obj->active)) print $langs->trans(\"Deprecated\");\n\t\t\t\t  \t\telse if (isset($obj->type) && in_array($obj->type, array('system')) && ! empty($obj->active) && $obj->code != 'AC_OTH') print $langs->trans(\"UsedOnlyWithTypeOption\");\n\t\t\t\t\t\telse print $langs->trans(\"AlwaysActive\");\n\t\t\t\t\t}\n\t\t\t\t\tprint \"</td>\";\n\n\t\t\t\t\t// Modify link\n\t\t\t\t\tif ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\t// Delete link\n\t\t\t\t\tif ($iserasable) print '<td align=\"center\"><a href=\"'.$url.'action=delete\">'.img_delete().'</a></td>';\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</table>';\n\tprint '</div>';\n\n\tprint '</form>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListAccountModel($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\t$formaccounting = new FormAccounting($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'country')\n\t\t{\n\t\t\tif (in_array('region_id',$fieldlist))\n\t\t\t{\n\t\t\t\tprint '<td>';\n\t\t\t\t//print join(',',$fieldlist);\n\t\t\t\tprint '</td>';\n\t\t\t\tcontinue;\n\t\t\t}\t// For state page, we do not show the country input (we link to region, not country)\n\t\t\tprint '<td>';\n\t\t\t$fieldname='country';\n\t\t\tprint $form->select_country((! empty($obj->country_code)?$obj->country_code:(! empty($obj->country)?$obj->country:'')), $fieldname, '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'country_id')\n\t\t{\n\t\t\tif (! in_array('country',$fieldlist))\t// If there is already a field country, we don't show country_id (avoid duplicate)\n\t\t\t{\n\t\t\t\t$country_id = (! empty($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : 0);\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$country_id.'\">';\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$formcompany->select_region($region_id,'region');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region_id')\n\t\t{\n\t\t\t$region_id = (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:0);\n\t\t\tprint '<td>';\n\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$region_id.'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $formadmin->select_language($conf->global->MAIN_LANG_DEFAULT,'lang');\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de template\n\t\telseif ($fieldlist[$field] == 'type_template')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('type_template', $elementList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'element')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('element', $elementList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\t// La source de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'source')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('source', $sourceList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'type' && $tabname == MAIN_DB_PREFIX.\"c_actioncomm\")\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint 'user<input type=\"hidden\" name=\"type\" value=\"user\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'recuperableonly' || $fieldlist[$field] == 'type_cdr' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n\t\t\tif ($fieldlist[$field] == 'type_cdr') print '<td align=\"center\">';\n\t\t\telse print '<td>';\n\t\t\tif ($fieldlist[$field] == 'type_cdr') {\n\t\t\t\tprint $form->selectarray($fieldlist[$field], array(0=>$langs->trans('None'), 1=>$langs->trans('AtEndOfMonth'), 2=>$langs->trans('CurrentNext')), (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\t} else {\n\t\t\t\tprint $form->selectyesno($fieldlist[$field],(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''),1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field],array('nbjour','decalage','taux','localtax1','localtax2'))) {\n\t\t\t$align=\"left\";\n\t\t\tif (in_array($fieldlist[$field],array('taux','localtax1','localtax2'))) $align=\"right\";\t// Fields aligned on right\n\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\tprint '<input type=\"text\" class=\"flat\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" size=\"3\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field], array('libelle_facture'))) {\n\t\t\tprint '<td><textarea cols=\"30\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea></td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field], array('content')))\n\t\t{\n\t\t\tif ($tabname == MAIN_DB_PREFIX.'c_email_templates')\n\t\t\t{\n\t\t\t\tprint '<td colspan=\"4\"></td></tr><tr class=\"pair nohover\"><td colspan=\"5\">';\t\t// To create an artificial CR for the current tr we are on\n\t\t\t}\n\t\t\telse print '<td>';\n\t\t\tif ($context != 'hide')\n\t\t\t{\n\t\t\t\t//print '<textarea cols=\"3\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea>';\n\t\t\t\t$okforextended=true;\n\t\t\t\tif ($tabname == MAIN_DB_PREFIX.'c_email_templates' && empty($conf->global->FCKEDITOR_ENABLE_MAIL)) $okforextended=false;\n\t\t\t\t$doleditor = new DolEditor($fieldlist[$field], (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), '', 140, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_5, '90%');\n\t\t\t\tprint $doleditor->Create(1);\n\t\t\t}\n\t\t\telse print '&nbsp;';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'price' || preg_match('/^amount/i',$fieldlist[$field])) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat\" value=\"'.price((! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'')).'\" size=\"8\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" size=\"10\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'accountancy_code' || $fieldlist[$field] == 'accountancy_code_sell' || $fieldlist[$field] == 'accountancy_code_buy')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t$accountancy_account = (! empty($obj->$fieldlist[$field]) ? $obj->$fieldlist[$field] : 0);\n\t\t\t\tprint $formaccounting->select_account($accountancy_account, $fieldlist[$field], 1, '', 1, 1, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<input type=\"text\" size=\"10\" class=\"flat\" value=\"'.(isset($obj->$fieldlist[$field])?$obj->$fieldlist[$field]:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code') $size='size=\"8\" ';\n\t\t\tif ($fieldlist[$field]=='position') $size='size=\"4\" ';\n\t\t\tif ($fieldlist[$field]=='libelle') $size='centpercent';\n\t\t\tif ($fieldlist[$field]=='tracking') $class='centpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.' class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2016\t\tJamal Elbaz\t\t\t<jamelbaz@gmail.pro>\n * Copyright (C) 2017\t\tAlexandre Spangaro\t<aspangaro@zendsi.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * \\file\thtdocs/accountancy/admin/categories.php\n * \\ingroup Advanced accountancy\n * \\brief\tPage to assign mass categories to accounts\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT . '/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT . '/accountancy/class/accountancycategory.class.php';\nrequire_once DOL_DOCUMENT_ROOT . '/core/class/html.formaccounting.class.php';\n\n$error = 0;\n\n$langs->load(\"bills\");\n$langs->load(\"accountancy\");\n\n$mesg = '';\n$id = GETPOST('id', 'int');\n$rowid = GETPOST('rowid', 'int');\n$cancel = GETPOST('cancel','alpha');\n$action = GETPOST('action','aZ09');\n$cat_id = GETPOST('account_category');\n$selectcpt = GETPOST('cpt_bk', 'array');\n$cpt_id = GETPOST('cptid');\n\nif ($cat_id == 0) {\n\t$cat_id = null;\n}\n\n// Security check\nif (empty($user->rights->accounting->chartofaccount))\n{\n\taccessforbidden();\n}\n\n$accountingcategory = new AccountancyCategory($db);\n\n// si ajout de comptes\nif (! empty($selectcpt)) {\n\t$cpts = array ();\n\tforeach ( $selectcpt as $selectedoption ) {\n\t\tif (! array_key_exists($selectedoption, $cpts))\n\t\t\t$cpts[$selectedoption] = \"'\" . $selectedoption . \"'\";\n\t}\n\n\t$return= $accountingcategory->updateAccAcc($cat_id, $cpts);\n\n\tif ($return<0) {\n\t\tsetEventMessages($langs->trans('errors'), $accountingcategory->errors, 'errors');\n\t} else {\n\t\tsetEventMessages($langs->trans('Saved'), null, 'mesgs');\n\t}\n}\nif ($action == 'delete') {\n\tif ($cpt_id) {\n\t\tif ($accountingcategory->deleteCptCat($cpt_id)) {\n\t\t\tsetEventMessages($langs->trans('CategoryDeleted'), null, 'mesgs');\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans('errors'), null, 'errors');\n\t\t}\n\t}\n}\n\n\n/*\n * View\n */\n$form = new Form($db);\n$formaccounting = new FormAccounting($db);\n\nllxheader('', $langs->trans('AccountingCategory'));\n\n$linkback = '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories_list.php?search_country_id='.$mysoc->country_id.'\">'.$langs->trans(\"BackToList\").'</a>';\n\nprint load_fiche_titre($langs->trans('AccountingCategory'), $linkback);\n\nprint '<form name=\"add\" action=\"' . $_SERVER[\"PHP_SELF\"] . '\" method=\"POST\">' . \"\\n\";\nprint '<input type=\"hidden\" name=\"token\" value=\"' . $_SESSION['newtoken'] . '\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"display\">';\n\ndol_fiche_head();\n\nprint '<table class=\"border\" width=\"100%\">';\n// Category\nprint '<tr><td class=\"titlefield\">' . $langs->trans(\"AccountingCategory\") . '</td>';\nprint '<td>';\n$formaccounting->select_accounting_category($cat_id, 'account_category', 1, 0, 0, 1);\nprint '<input class=\"button\" type=\"submit\" value=\"' . $langs->trans(\"Select\") . '\">';\nprint '</td></tr>';\n\nif (! empty($cat_id))\n{\n\t$return = $accountingcategory->getAccountsWithNoCategory($cat_id);\n\tif ($return < 0) {\n\t\tsetEventMessages(null, $accountingcategory->errors, 'errors');\n\t}\n\tprint '<tr><td>' . $langs->trans(\"AddAccountFromBookKeepingWithNoCategories\") . '</td>';\n\tprint '<td>';\n\n\t$arraykeyvalue=array();\n\tforeach($accountingcategory->lines_cptbk as $key => $val)\n\t{\n\t\t$arraykeyvalue[length_accountg($val->numero_compte)] = length_accountg($val->numero_compte) . ' (' . $val->label_compte . ($val->doc_ref?' '.$val->doc_ref:'').')';\n\t}\n\n\tif (is_array($accountingcategory->lines_cptbk) && count($accountingcategory->lines_cptbk) > 0) {\n\n\t\tprint $form->multiselectarray('cpt_bk', $arraykeyvalue, GETPOST('cpt_bk', 'array'), null, null, null, null, \"90%\");\n\t\tprint '<br>';\n\t\t/*print '<select class=\"flat minwidth200\" size=\"8\" name=\"cpt_bk[]\" multiple>';\n\t\tforeach ( $accountingcategory->lines_cptbk as $cpt ) {\n\t\t\tprint '<option value=\"' . length_accountg($cpt->numero_compte) . '\">' . length_accountg($cpt->numero_compte) . ' (' . $cpt->label_compte . ' ' . $cpt->doc_ref . ')</option>';\n\t\t}\n\t\tprint '</select><br>';\n\t\tprint ajax_combobox('cpt_bk');\n\t\t*/\n\t\tprint '<input class=\"button\" type=\"submit\" id=\"\" class=\"action-delete\" value=\"' . $langs->trans(\"Add\") . '\"> ';\n\t}\n\tprint '</td></tr>';\n}\n\nprint '</table>';\n\ndol_fiche_end();\n\nprint '</form>';\n\n\nif ($action == 'display' || $action == 'delete') {\n\n    print \"<table class='noborder' width='100%'>\\n\";\n    print '<tr class=\"liste_titre\">';\n\tprint '<td class=\"liste_titre\">'.$langs->trans(\"AccountAccounting\").\"</td>\";\n\tprint '<td class=\"liste_titre\" colspan=\"2\">'.$langs->trans(\"Label\").\"</td>\";\n\tprint \"</tr>\\n\";\n\n\tif (! empty($cat_id)) {\n\t\t$return = $accountingcategory->display($cat_id);\n\t\tif ($return < 0) {\n\t\t\tsetEventMessages(null, $accountingcategory->errors, 'errors');\n\t\t}\n\n\t\tif (is_array($accountingcategory->lines_display) && count($accountingcategory->lines_display) > 0) {\n\t\t\tforeach ( $accountingcategory->lines_display as $cpt ) {\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td>' . length_accountg($cpt->account_number) . '</td>';\n\t\t\t\tprint '<td>' . $cpt->label . '</td>';\n\t\t\t\tprint '<td align=\"right\">';\n\t\t\t\tprint \"<a href= '\".$_SERVER['PHP_SELF'].\"?action=delete&account_category=\" . $cat_id . \"&cptid=\" . $cpt->rowid.\"'>\";\n\t\t\t\tprint img_delete($langs->trans(\"DeleteFromCat\")).' ';\n\t\t\t\tprint $langs->trans(\"DeleteFromCat\").\"</a>\";\n\t\t\t\tprint \"</td>\";\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprint \"</table>\";\n}\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2004-2017  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2011-2017  Alexandre Spangaro      <aspangaro@zendsi.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/accountancy/admin/categories_list.php\n *\t\t\\ingroup    setup\n *\t\t\\brief      Page to administer data tables\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\n\n$langs->loadLangs(array(\"errors\",\"admin\",\"companies\",\"resource\",\"holiday\",\"accountancy\",\"hrm\"));\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=32;\n$rowid=GETPOST('rowid','alpha');\n$code=GETPOST('code','alpha');\n\n// Security access\nif (empty($user->rights->accounting->chartofaccount))\n{\n\taccessforbidden();\n}\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n$search_country_id = GETPOST('search_country_id','int');\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Sort order to show dictionary (0 is space). All other dictionaries (added by modules) will be at end of this.\n$taborder=array(32);\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[32]= \"DictionaryAccountancyCategory\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[32]=\"position ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[32]= \"code,label,range_account,category_type,formula,position,country\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[32]= \"code,label,range_account,category_type,formula,position,country_id\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[32]= \"code,label,range_account,category_type,formula,position,fk_country\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[32]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[32]= ! empty($conf->accounting->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'category_type'=>$langs->trans(\"SetToYesIfGroupIsComputationOfOtherGroups\"), 'formula'=>$langs->trans(\"EnterCalculationRuleIfPreviousFieldIsYes\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[32] = array();\n\n// Complete all arrays with entries found into modules\ncomplete_dictionary_with_modules($taborder,$tabname,$tablib,$tabsql,$tabsqlsort,$tabfield,$tabfieldvalue,$tabfieldinsert,$tabrowid,$tabcond,$tabhelp,$tabfieldcheck);\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n    $search_country_id = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n    $listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n    $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n    $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n    $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n    // Check that all fields are filled\n    $ok=1;\n    foreach ($listfield as $f => $value)\n    {\n\t\tif ($value == 'formula' && empty($_POST['formula'])) continue;\n\t\tif ($value == 'range_account' && empty($_POST['range_account'])) continue;\n\t\tif ($value == 'country' || $value == 'country_id') continue;\n\t\tif (! isset($_POST[$value]) || $_POST[$value]=='')\n        {\n            $ok=0;\n            $fieldnamekey=$listfield[$f];\n            // We take translate key of field\n            if ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n            if ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n            if ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n            if ($fieldnamekey == 'type') $fieldnamekey = 'Type';\n            if ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n\t\t\tif ($fieldnamekey == 'category_type') $fieldnamekey = 'Calculated';\n\n            setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n        }\n    }\n    if (isset($_POST[\"code\"]))\n    {\n    \tif ($_POST[\"code\"]=='0')\n    \t{\n        \t$ok=0;\n    \t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n        }\n    }\n    if (! is_numeric(GETPOST('position','alpha')))\n    {\n    \t$langs->load(\"errors\");\n   \t\t$ok=0;\n   \t\tsetEventMessages($langs->transnoentities('ErrorFieldMustBeANumeric', $langs->transnoentities(\"Position\")), null, 'errors');\n    }\n\n\t// Clean some parameters\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n\n    // Si verif ok et action add, on ajoute la ligne\n    if ($ok && GETPOST('actionadd','alpha'))\n    {\n        if ($tabrowid[$id])\n        {\n            // Recupere id libre pour insertion\n            $newid=0;\n            $sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n            $result = $db->query($sql);\n            if ($result)\n            {\n                $obj = $db->fetch_object($result);\n                $newid=($obj->newid + 1);\n\n            } else {\n                dol_print_error($db);\n            }\n        }\n\n        // Add new entry\n        $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n        // List of fields\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert)) $sql.= $tabrowid[$id].\",\";\n        $sql.= $tabfieldinsert[$id];\n        $sql.=\",active)\";\n        $sql.= \" VALUES(\";\n\n        // List of values\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert)) $sql.= $newid.\",\";\n        $i=0;\n        foreach ($listfieldinsert as $f => $value)\n        {\n            if ($value == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($i) $sql.=\",\";\n            if ($_POST[$listfieldvalue[$i]] == '' && ! $listfieldvalue[$i] == 'formula') $sql.=\"null\";  // For vat, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.=\",1)\";\n\n        dol_syslog(\"actionadd\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if ($result)\t// Add is ok\n        {\n            setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n        \t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n        }\n        else\n        {\n            if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n            }\n            else {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // Si verif ok et action modify, on modifie la ligne\n    if ($ok && GETPOST('actionmodify'))\n    {\n        if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n        else { $rowidcol=\"rowid\"; }\n\n        // Modify entry\n        $sql = \"UPDATE \".$tabname[$id].\" SET \";\n        // Modifie valeur des champs\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n        {\n            $sql.= $tabrowid[$id].\"=\";\n            $sql.= \"'\".$db->escape($rowid).\"', \";\n        }\n        $i = 0;\n        foreach ($listfieldmodify as $field)\n        {\n            if ($field == 'fk_country' && $_POST['country'] > 0) {\n            \t$_POST[$listfieldvalue[$i]] = $_POST['country'];\n            }\n            else if ($field == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($i) $sql.=\",\";\n            $sql.= $field.\"=\";\n            if ($_POST[$listfieldvalue[$i]] == '' && ! $listfieldvalue[$i] == 'range_account') $sql.=\"null\";  // For range_account, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n        dol_syslog(\"actionmodify\", LOG_DEBUG);\n        //print $sql;\n        $resql = $db->query($sql);\n        if (! $resql)\n        {\n            setEventMessages($db->error(), null, 'errors');\n        }\n    }\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    $sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n\n    dol_syslog(\"delete\", LOG_DEBUG);\n    $result = $db->query($sql);\n    if (! $result)\n    {\n        if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n        {\n            setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n        }\n        else\n        {\n            dol_print_error($db);\n        }\n    }\n}\n\n// activate\nif ($action == $acts[0])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n        $sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code = '\".$this->db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable\nif ($action == $acts[1])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code = '\".$this->db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// favorite\nif ($action == 'activate_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code = '\".$this->db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable favorite\nif ($action == 'disable_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\" = '\".$this->db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code = '\".$this->db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader('', $langs->trans('DictionaryAccountancyCategory'));\n\n$titre=$langs->trans($tablib[$id]);\n$linkback='';\n$titlepicto='title_setup';\n\nprint load_fiche_titre($titre, $linkback, $titlepicto);\n\nprint $langs->trans(\"AccountingAccountGroupsDesc\", $langs->transnoentitiesnoconv(\"ByPersonalizedAccountGroups\")).'<br><br>';\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id.($search_country_id>0?'&search_country_id='.$search_country_id:''), $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n    // Complete requete recherche valeurs avec critere de tri\n    $sql=$tabsql[$id];\n\n    if ($search_country_id > 0)\n    {\n        if (preg_match('/ WHERE /',$sql)) $sql.= \" AND \";\n        else $sql.=\" WHERE \";\n        $sql.= \" (a.fk_country = \".$search_country_id.\" OR a.fk_country = 0)\";\n    }\n\n    if ($sortfield)\n    {\n        // If sort order is \"country\", we use country_code instead\n    \tif ($sortfield == 'country') $sortfield='country_code';\n        $sql.= \" ORDER BY \".$sortfield;\n        if ($sortorder)\n        {\n            $sql.=\" \".strtoupper($sortorder);\n        }\n        $sql.=\", \";\n        // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n    }\n    else {\n        $sql.=\" ORDER BY \";\n    }\n    $sql.=$tabsqlsort[$id];\n    $sql.=$db->plimit($listlimit+1,$offset);\n    //print $sql;\n\n    $fieldlist=explode(',',$tabfield[$id]);\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n\tprint '<div class=\"div-table-responsive\">';\n    print '<table class=\"noborder\" width=\"100%\">';\n\n    // Form to add a new line\n    if ($tabname[$id])\n    {\n        $alabelisused=0;\n        $var=false;\n\n        $fieldlist=explode(',',$tabfield[$id]);\n\n        // Line for title\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            $align=\"left\";\n            if ($fieldlist[$field]=='type')            {\n\t\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_paiement\") $valuetoshow=$form->textwithtooltip($langs->trans(\"Type\"),$langs->trans(\"TypePaymentDesc\"),2,1,img_help(1,''));\n\t\t\t\telse $valuetoshow=$langs->trans(\"Type\");\n            }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n            \t$valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='libelle_facture') { $valuetoshow=$langs->trans(\"LabelOnDocuments\"); }\n            if ($fieldlist[$field]=='country')         {\n                $valuetoshow=$langs->trans(\"Country\");\n            }\n            if ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); }\n            if ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); }\n            if ($fieldlist[$field]=='pcg_version' || $fieldlist[$field]=='fk_pcg_version') { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Comment\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\n            if ($valuetoshow != '')\n            {\n                print '<td align=\"'.$align.'\">';\n            \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n            \telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n            \telse print $valuetoshow;\n                print '</td>';\n             }\n             if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n        }\n\n        print '<td>';\n        print '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n        print '</td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '</tr>';\n\n        // Line to enter new values\n        print '<tr class=\"oddeven nodrag nodrop nohover\">';\n\n        $obj = new stdClass();\n        // If data was already input, we define them in obj to populate input fields.\n        if (GETPOST('actionadd'))\n        {\n            foreach ($fieldlist as $key=>$val)\n            {\n                if (GETPOST($val) != '')\n                \t$obj->$val=GETPOST($val);\n            }\n        }\n\n        $tmpaction = 'create';\n        $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n        $reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n        $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n        if (empty($reshook))\n        {\n       \t\tfieldListAccountingCategories($fieldlist,$obj,$tabname[$id],'add');\n        }\n\n        print '<td colspan=\"4\" align=\"right\">';\n       \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n        print '</td>';\n        print \"</tr>\";\n\n        $colspan=count($fieldlist)+3;\n        if ($id == 32) $colspan++;\n\n        print '<tr><td colspan=\"'.$colspan.'\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n    }\n\n    // List of available record in database\n    dol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $num = $db->num_rows($resql);\n        $i = 0;\n        $var=true;\n\n        $param = '&id='.$id;\n        if ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n        $paramwithsearch = $param;\n        if ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n        if ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n        if (GETPOST('from','alpha')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n        // There is several pages\n        if ($num > $listlimit)\n        {\n            print '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n            print_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n            print '</td></tr>';\n        }\n\n        // Title line with search boxes\n        print '<tr class=\"liste_titre liste_titre_add liste_titre_filter\">';\n        $filterfound=0;\n        foreach ($fieldlist as $field => $value)\n        {\n            $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\n            if ($showfield)\n            {\n                if ($value == 'country')\n                {\n                    print '<td class=\"liste_titre\">';\n                    print $form->select_country($search_country_id, 'search_country_id', '', 28, 'maxwidth200 maxwidthonsmartphone');\n                    print '</td>';\n                    $filterfound++;\n                }\n                else\n                {\n                    print '<td class=\"liste_titre\"></td>';\n                }\n            }\n        }\n        print '<td class=\"liste_titre\"></td>';\n        print '<td class=\"liste_titre\"></td>';\n        print '<td class=\"liste_titre\"></td>';\n        print '<td class=\"liste_titre\" align=\"center\">';\n    \tif ($filterfound)\n    \t{\n        \t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n        \tprint $searchpicto;\n    \t}\n    \tprint '</td>';\n    \tprint '</tr>';\n\n    \t// Title of lines\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n            $align=\"left\";\n            $sortable=1;\n            $valuetoshow='';\n\n            $valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            if ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n            if ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n            if ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='center';\n            }\n            if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n            \t$valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='country')         { $valuetoshow=$langs->trans(\"Country\"); }\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n            if ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); $sortable=0; }\n            if ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='fk_pcg_version')  { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountsparent\"); }\n            if ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n            if ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n        \tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Comment\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n            // Affiche nom du champ\n            if ($showfield)\n            {\n                print getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n            }\n        }\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n        print getTitleFieldOfList('');\n        print getTitleFieldOfList('');\n        print getTitleFieldOfList('');\n        print '</tr>';\n\n        if ($num)\n        {\n            // Lines with values\n            while ($i < $num)\n            {\n                $obj = $db->fetch_object($resql);\n                //print_r($obj);\n                print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n                if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n                {\n                    $tmpaction='edit';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    // Show fields\n                    if (empty($reshook)) fieldListAccountingCategories($fieldlist,$obj,$tabname[$id],'edit');\n\n                    print '<td></td>';\n                    print '<td></td>';\n                    print '<td align=\"center\">';\n                    print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n                    print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n                    print '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                    print '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n                    print '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n                    print '</td>';\n                    print '<td></td>';\n                }\n                else\n                {\n\t              \t$tmpaction = 'view';\n                    $parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook))\n                    {\n                        foreach ($fieldlist as $field => $value)\n                        {\n\n                            $showfield=1;\n                        \t$align=\"left\";\n                            $valuetoshow=$obj->{$fieldlist[$field]};\n                            if ($value == 'category_type')\n                            {\n                                $valuetoshow = yn($valuetoshow);\n                            }\n                            else if ($valuetoshow=='all') {\n                                $valuetoshow=$langs->trans('All');\n                            }\n                            else if ($fieldlist[$field]=='country') {\n                                if (empty($obj->country_code))\n                                {\n                                    $valuetoshow='-';\n                                }\n                                else\n                                {\n                                    $key=$langs->trans(\"Country\".strtoupper($obj->country_code));\n                                    $valuetoshow=($key != \"Country\".strtoupper($obj->country_code)?$obj->country_code.\" - \".$key:$obj->country);\n                                }\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_country') {\n                                $key=$langs->trans(\"Country\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Country\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_availability') {\n                                $langs->load(\"propal\");\n                                $key=$langs->trans(\"AvailabilityType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"AvailabilityType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_actioncomm') {\n                                $key=$langs->trans(\"Action\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Action\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') {\n                                $showfield=0;\n                            }\n\n                            $class='tddict';\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n                        }\n                    }\n\n                    // Can an entry be erased or disabled ?\n                    $iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n                    if (isset($obj->code))\n                    {\n                    \tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n                    }\n\n                    $canbemodified=$iserasable;\n\n                    $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n                    if ($param) $url .= '&'.$param;\n                    $url.='&';\n\n                    // Active\n                    print '<td align=\"center\" class=\"nowrap\">';\n                    if ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n                    else\n                 \t{\n                    \tprint $langs->trans(\"AlwaysActive\");\n                    }\n                    print \"</td>\";\n\n                    // Modify link\n                    if ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n                    else print '<td>&nbsp;</td>';\n\n                    // Delete link\n                    if ($iserasable)\n                    {\n                        print '<td align=\"center\">';\n                        if ($user->admin) print '<a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n                        //else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n                        print '</td>';\n                    }\n                    else print '<td>&nbsp;</td>';\n\n                    // Link to setup the group\n                    print '<td class=\"center\">';\n                    if (empty($obj->formula))\n                    {\n                        print '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories.php?action=display&account_category='.$obj->rowid.'\">';\n                        print $langs->trans(\"ListOfAccounts\");\n                        print '</a>';\n                    }\n                    print '</td>';\n                }\n                print \"</tr>\\n\";\n                $i++;\n            }\n        }\n    }\n    else {\n        dol_print_error($db);\n    }\n\n    print '</table>';\n\tprint '</div>';\n\n    print '</form>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListAccountingCategories($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form, $mysoc;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\tif (! empty($conf->accounting->enabled)) $formaccounting = new FormAccounting($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'country')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$fieldname='country';\n\t\t\tif ($context == 'add')\n\t\t\t{\n\t\t\t\t$fieldname='country_id';\n\t\t\t\tprint $form->select_country(GETPOST('country_id','int'), $fieldname, '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $form->select_country((! empty($obj->country_code)?$obj->country_code:(! empty($obj->country)?$obj->country:$mysoc->country_code)), $fieldname, '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'country_id')\n\t\t{\n\t\t\tif (! in_array('country',$fieldlist))\t// If there is already a field country, we don't show country_id (avoid duplicate)\n\t\t\t{\n\t\t\t\t$country_id = (! empty($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : 0);\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$country_id.'\">';\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t}\n\t\telseif ($fieldlist[$field] == 'category_type') {\n\t\t    print '<td>';\n\t\t\tprint $form->selectyesno($fieldlist[$field],(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''),1);\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat minwidth100\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code') $class='maxwidth100';\n\t\t\tif ($fieldlist[$field]=='position') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='libelle') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2017\t\tAlexandre Spangaro   <aspangaro@zendsi.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * \\file\t\thtdocs/accountancy/admin/journals_list.php\n * \\ingroup\t\tAdvanced accountancy\n * \\brief\t\tSetup page to configure journals\n */\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/accountancy/class/accountingjournal.class.php';\n\n$langs->load(\"admin\");\n$langs->load(\"compta\");\n$langs->load(\"accountancy\");\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=GETPOST('id','int');\n$rowid=GETPOST('rowid','alpha');\n$code=GETPOST('code','alpha');\n\n// Security access\nif (empty($user->rights->accounting->chartofaccount))\n{\n\taccessforbidden();\n}\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\nif (empty($sortfield)) $sortfield='code';\nif (empty($sortorder)) $sortorder='ASC';\n\n$error = 0;\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Sort order to show dictionary (0 is space). All other dictionaries (added by modules) will be at end of this.\n$taborder=array(35);\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[35]= MAIN_DB_PREFIX.\"accounting_journal\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[35]= \"DictionaryAccountancyJournal\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[35]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.nature, a.active FROM \".MAIN_DB_PREFIX.\"accounting_journal as a\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[35]=\"code ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[35]= \"code,label,nature\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[35]= \"code,label,nature\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[35]= \"code,label,nature\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[35]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[35]= ! empty($conf->accounting->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[35] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[35] = array();\n\n// Complete all arrays with entries found into modules\ncomplete_dictionary_with_modules($taborder,$tabname,$tablib,$tabsql,$tabsqlsort,$tabfield,$tabfieldvalue,$tabfieldinsert,$tabrowid,$tabcond,$tabhelp,$tabfieldcheck);\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n\t// Must match ids defined into eldy.lib.php\n\t$sourceList = array(\n\t\t\t'1' => $langs->trans('AccountingJournalType1'),\n\t\t\t'2' => $langs->trans('AccountingJournalType2'),\n\t\t\t'3' => $langs->trans('AccountingJournalType3'),\n\t\t\t'4' => $langs->trans('AccountingJournalType4'),\n\t\t\t'5' => $langs->trans('AccountingJournalType5'),\n\t\t\t'9' => $langs->trans('AccountingJournalType9')\n\t);\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n\t$search_country_id = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n\t$listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n\t$listfieldinsert=explode(',',$tabfieldinsert[$id]);\n\t$listfieldmodify=explode(',',$tabfieldinsert[$id]);\n\t$listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n\t// Check that all fields are filled\n\t$ok=1;\n\tforeach ($listfield as $f => $value)\n\t{\n\t\tif ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n\t\tif ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n\t\tif ($fieldnamekey == 'nature') $fieldnamekey = 'Nature';\n\t}\n\t// Other checks\n\tif (isset($_POST[\"code\"]))\n\t{\n\t\tif ($_POST[\"code\"]=='0')\n\t\t{\n\t\t\t$ok=0;\n\t\t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n\t\t}\n\t\t/*if (!is_numeric($_POST['code']))\t// disabled, code may not be in numeric base\n    \t{\n\t    \t$ok = 0;\n\t    \t$msg .= $langs->transnoentities('ErrorFieldFormat', $langs->transnoentities('Code')).'<br>';\n\t    }*/\n\t}\n\tif (! GETPOST('label','alpha'))\n\t{\n\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Label\")), null, 'errors');\n\t\t$ok=0;\n\t}\n\n\t// Clean some parameters\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n\n\t// Si verif ok et action add, on ajoute la ligne\n\tif ($ok && GETPOST('actionadd'))\n\t{\n\t\tif ($tabrowid[$id])\n\t\t{\n\t\t\t// Recupere id libre pour insertion\n\t\t\t$newid=0;\n\t\t\t$sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n\t\t\t$result = $db->query($sql);\n\t\t\tif ($result)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($result);\n\t\t\t\t$newid=($obj->newid + 1);\n\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\n\t\t// Add new entry\n\t\t$sql = \"INSERT INTO \".$tabname[$id].\" (\";\n\t\t// List of fields\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $tabrowid[$id].\",\";\n\t\t$sql.= $tabfieldinsert[$id];\n\t\t$sql.=\",active,entity)\";\n\t\t$sql.= \" VALUES(\";\n\n\t\t// List of values\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $newid.\",\";\n\t\t$i=0;\n\t\tforeach ($listfieldinsert as $f => $value)\n\t\t{\n\t\t\tif ($value == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";  // For vat, we want/accept code = ''\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.=\",1,\".$conf->entity.\")\";\n\n\t\tdol_syslog(\"actionadd\", LOG_DEBUG);\n\t\t$result = $db->query($sql);\n\t\tif ($result)\t// Add is ok\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n\t\t\t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Si verif ok et action modify, on modifie la ligne\n\tif ($ok && GETPOST('actionmodify'))\n\t{\n\t\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\t\telse { $rowidcol=\"rowid\"; }\n\n\t\t// Modify entry\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET \";\n\t\t// Modifie valeur des champs\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n\t\t{\n\t\t\t$sql.= $tabrowid[$id].\"=\";\n\t\t\t$sql.= \"'\".$db->escape($rowid).\"', \";\n\t\t}\n\t\t$i = 0;\n\t\tforeach ($listfieldmodify as $field)\n\t\t{\n\t\t\tif ($field == 'price' || preg_match('/^amount/i',$field) || $field == 'taux') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n\t\t\t}\n\t\t\telse if ($field == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\t$sql.= $field.\"=\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '' && ! ($listfieldvalue[$i] == 'code' && $id == 10)) $sql.=\"null\";  // For vat, we want/accept code = ''\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\t\t$sql.=\" AND entity = \".$conf->entity;\n\n\t\tdol_syslog(\"actionmodify\", LOG_DEBUG);\n\t\t//print $sql;\n\t\t$resql = $db->query($sql);\n\t\tif (! $resql)\n\t\t{\n\t\t\tsetEventMessages($db->error(), null, 'errors');\n\t\t}\n\t}\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\t$sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t$sql.=\" AND entity = \".$conf->entity;\n\n\tdol_syslog(\"delete\", LOG_DEBUG);\n\t$result = $db->query($sql);\n\tif (! $result)\n\t{\n\t\tif ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n}\n\n// activate\nif ($action == $acts[0])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code='\".$code.\"'\";\n\t}\n\t$sql.=\" AND entity = \".$conf->entity;\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// disable\nif ($action == $acts[1])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code='\".$code.\"'\";\n\t}\n\t$sql.=\" AND entity = \".$conf->entity;\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans(\"DictionarySetup\");\n$linkback='';\nif ($id)\n{\n\t$titre.=' - '.$langs->trans($tablib[$id]);\n\t$titlepicto='title_accountancy';\n}\n\nprint load_fiche_titre($titre,$linkback,$titlepicto);\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n\t// Complete requete recherche valeurs avec critere de tri\n\t$sql=$tabsql[$id];\n\t$sql.= \" WHERE a.entity = \".$conf->entity;\n\n\tif ($sortfield)\n\t{\n\t\t// If sort order is \"country\", we use country_code instead\n\t\tif ($sortfield == 'country') $sortfield='country_code';\n\t\t$sql.= \" ORDER BY \".$sortfield;\n\t\tif ($sortorder)\n\t\t{\n\t\t\t$sql.=\" \".strtoupper($sortorder);\n\t\t}\n\t\t$sql.=\", \";\n\t\t// Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n\t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n\t}\n\telse {\n\t\t$sql.=\" ORDER BY \";\n\t}\n\t$sql.=$tabsqlsort[$id];\n\t$sql.=$db->plimit($listlimit+1,$offset);\n\n\t$fieldlist=explode(',',$tabfield[$id]);\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n\tprint '<div class=\"div-table-responsive\">';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\n\t// Form to add a new line\n\tif ($tabname[$id])\n\t{\n\t\t$alabelisused=0;\n\t\t$var=false;\n\n\t\t$fieldlist=explode(',',$tabfield[$id]);\n\n\t\t// Line for title\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\t$align=\"left\";\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n\t\t\t{\n\t\t\t\t$valuetoshow=$langs->trans(\"Label\");\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='nature')          { $valuetoshow=$langs->trans(\"Nature\"); }\n\n\t\t\tif ($valuetoshow != '')\n\t\t\t{\n\t\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\t\tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n\t\t\t\telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n\t\t\t\telse print $valuetoshow;\n\t\t\t\tprint '</td>';\n\t\t\t }\n\t\t\t if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n\t\t}\n\n\t\tprint '<td>';\n\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n\t\tprint '</td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Line to enter new values\n\t\tprint '<tr class=\"oddeven nodrag nodrap nohover\">';\n\n\t\t$obj = new stdClass();\n\t\t// If data was already input, we define them in obj to populate input fields.\n\t\tif (GETPOST('actionadd'))\n\t\t{\n\t\t\tforeach ($fieldlist as $key=>$val)\n\t\t\t{\n\t\t\t\tif (GETPOST($val) != '')\n\t\t\t\t\t$obj->$val=GETPOST($val);\n\t\t\t}\n\t\t}\n\n\t\t$tmpaction = 'create';\n\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t$reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\tif (empty($reshook))\n\t\t{\n\t   \t\tfieldListJournal($fieldlist,$obj,$tabname[$id],'add');\n\t\t}\n\n\t\tprint '<td colspan=\"4\" align=\"right\">';\n\t   \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n\t\tprint '</td>';\n\t\tprint \"</tr>\";\n\n\t\tprint '<tr><td colspan=\"7\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n\t}\n\n\n\n\t// List of available record in database\n\tdol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\t$var=true;\n\n\t\t$param = '&id='.$id;\n\t\tif ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n\t\t$paramwithsearch = $param;\n\t\tif ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n\t\tif ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n\t\tif (GETPOST('from')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n\n\t\t// There is several pages\n\t\tif ($num > $listlimit)\n\t\t{\n\t\t\tprint '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n\t\t\tprint_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Title line with search boxes\n\t\tprint '<tr class=\"liste_titre_filter liste_titre_add\">';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\" align=\"center\">';\n\t\tif ($filterfound)\n\t\t{\n\t\t\t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n\t\t\tprint $searchpicto;\n\t\t}\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Title of lines\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\t\t\t$align=\"left\";\n\t\t\t$sortable=1;\n\t\t\t$valuetoshow='';\n\t\t\t/*\n            $tmparray=getLabelOfField($fieldlist[$field]);\n            $showfield=$tmp['showfield'];\n            $valuetoshow=$tmp['valuetoshow'];\n            $align=$tmp['align'];\n            $sortable=$tmp['sortable'];\n\t\t\t*/\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') { $valuetoshow=$langs->trans(\"Label\"); }\n\t\t\tif ($fieldlist[$field]=='nature')          { $valuetoshow=$langs->trans(\"Nature\"); }\n\n\t\t\t// Affiche nom du champ\n\t\t\tif ($showfield)\n\t\t\t{\n\t\t\t\tprint getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n\t\t\t}\n\t\t}\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n\t\tprint getTitleFieldOfList('');\n\t\tprint getTitleFieldOfList('');\n\t\tprint getTitleFieldOfList('');\n\t\tprint '</tr>';\n\n\t\tif ($num)\n\t\t{\n\t\t\t// Lines with values\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t//print_r($obj);\n\t\t\t\tprint '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n\t\t\t\tif ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n\t\t\t\t{\n\t\t\t\t\t$tmpaction='edit';\n\t\t\t\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\t// Show fields\n\t\t\t\t\tif (empty($reshook)) fieldListJournal($fieldlist,$obj,$tabname[$id],'edit');\n\n\t\t\t\t\tprint '<td align=\"center\" colspan=\"4\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t\t\tprint '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t  \t$tmpaction = 'view';\n\t\t\t\t\t$parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\tif (empty($reshook))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach ($fieldlist as $field => $value)\n\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t$showfield=1;\n\t\t\t\t\t\t\t$align=\"left\";\n\t\t\t\t\t\t\t$valuetoshow=$obj->{$fieldlist[$field]};\n\t\t\t\t\t\t\tif ($valuetoshow=='all') {\n\t\t\t\t\t\t\t\t$valuetoshow=$langs->trans('All');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='nature' && $tabname[$id]==MAIN_DB_PREFIX.'accounting_journal') {\n\t\t\t\t\t\t\t\t$langs->load(\"accountancy\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"AccountingJournalType\".strtoupper($obj->nature));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->nature && $key != \"AccountingJournalType\".strtoupper($obj->nature)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$class='tddict';\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Can an entry be erased or disabled ?\n\t\t\t\t\t$iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n\t\t\t\t\tif (isset($obj->code) && $id != 10)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'RECEP') { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'EF0')   { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\t$canbemodified=$iserasable;\n\n\t\t\t\t\t$url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n\t\t\t\t\tif ($param) $url .= '&'.$param;\n\t\t\t\t\t$url.='&';\n\n\t\t\t\t\t// Active\n\t\t\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\t\t\tif ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n\t\t\t\t\telse\n\t\t\t\t \t{\n\t\t\t\t \t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO'))) print $langs->trans(\"AlwaysActive\");\n\t\t\t\t \t\telse if (isset($obj->type) && in_array($obj->type, array('systemauto')) && empty($obj->active)) print $langs->trans(\"Deprecated\");\n\t\t\t\t  \t\telse if (isset($obj->type) && in_array($obj->type, array('system')) && ! empty($obj->active) && $obj->code != 'AC_OTH') print $langs->trans(\"UsedOnlyWithTypeOption\");\n\t\t\t\t\t\telse print $langs->trans(\"AlwaysActive\");\n\t\t\t\t\t}\n\t\t\t\t\tprint \"</td>\";\n\n\t\t\t\t\t// Modify link\n\t\t\t\t\tif ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\t// Delete link\n\t\t\t\t\tif ($iserasable)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<td align=\"center\">';\n\t\t\t\t\t\tif ($user->admin) print '<a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n\t\t\t\t\t\t//else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t}\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\tprint '<td></td>';\n\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</table>';\n\tprint '</div>';\n\n\tprint '</form>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListJournal($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form, $mysoc;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'nature')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('nature', $sourceList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat minwidth100\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code')  $class='maxwidth100';\n\t\t\tif ($fieldlist[$field]=='label') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n", "<?php\n/* Copyright (C) 2004\t\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2004-2015\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2016\tJuanjo Menent\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2011-2015\tPhilippe Grand\t\t\t<philippe.grand@atoo-net.com>\n * Copyright (C) 2011\t\tRemy Younes\t\t\t\t<ryounes@gmail.com>\n * Copyright (C) 2012-2015\tMarcos Garc\u00eda\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2012\t\tChristophe Battarel\t\t<christophe.battarel@ltairis.fr>\n * Copyright (C) 2011-2016\tAlexandre Spangaro\t\t<aspangaro.dolibarr@gmail.com>\n * Copyright (C) 2015\t\tFerran Marcet\t\t\t<fmarcet@2byte.es>\n * Copyright (C) 2016\t\tRapha\u00ebl Doursenaud\t\t<rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/admin/dict.php\n *\t\t\\ingroup    setup\n *\t\t\\brief      Page to administer data tables\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT . '/core/class/html.formaccounting.class.php';\n\n$langs->load(\"errors\");\n$langs->load(\"admin\");\n$langs->load(\"main\");\n$langs->load(\"companies\");\n$langs->load(\"resource\");\n$langs->load(\"holiday\");\n$langs->load(\"accountancy\");\n$langs->load(\"hrm\");\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=GETPOST('id','int');\n$rowid=GETPOST('rowid','alpha');\n$entity=GETPOST('entity','int');\n$code=GETPOST('code','alpha');\n\n$allowed=$user->admin;\nif ($id == 7 && ! empty($user->rights->accounting->chartofaccount)) $allowed=1;     // Tax page allowed to manager of chart account\nif ($id == 10 && ! empty($user->rights->accounting->chartofaccount)) $allowed=1;    // Vat page allowed to manager of chart account\nif (! $allowed) accessforbidden();\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\t// To avoid too long dictionaries\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n$search_country_id = GETPOST('search_country_id','int');\nif ($search_country_id == '' && ($id == 2 || $id == 3 || $id == 10))\t// Not a so good idea to force on current country for all dictionaries. Some tables have entries that are for all countries, we must be able to see them, so this is done for dedicated dictionaries only.\n{\n\t$search_country_id = $mysoc->country_id;\n}\n$search_code = GETPOST('search_code','alpha');\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Sort order to show dictionary (0 is space). All other dictionaries (added by modules) will be at end of this.\n$taborder=array(9,0,4,3,2,0,1,8,19,16,27,0,5,11,0,33,34,0,6,0,29,0,7,24,28,17,35,36,0,10,23,12,13,0,14,0,22,20,18,21,0,15,30,0,26,0,);\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[1] = MAIN_DB_PREFIX.\"c_forme_juridique\";\n$tabname[2] = MAIN_DB_PREFIX.\"c_departements\";\n$tabname[3] = MAIN_DB_PREFIX.\"c_regions\";\n$tabname[4] = MAIN_DB_PREFIX.\"c_country\";\n$tabname[5] = MAIN_DB_PREFIX.\"c_civility\";\n$tabname[6] = MAIN_DB_PREFIX.\"c_actioncomm\";\n$tabname[7] = MAIN_DB_PREFIX.\"c_chargesociales\";\n$tabname[8] = MAIN_DB_PREFIX.\"c_typent\";\n$tabname[9] = MAIN_DB_PREFIX.\"c_currencies\";\n$tabname[10]= MAIN_DB_PREFIX.\"c_tva\";\n$tabname[11]= MAIN_DB_PREFIX.\"c_type_contact\";\n$tabname[12]= MAIN_DB_PREFIX.\"c_payment_term\";\n$tabname[13]= MAIN_DB_PREFIX.\"c_paiement\";\n$tabname[14]= MAIN_DB_PREFIX.\"c_ecotaxe\";\n$tabname[15]= MAIN_DB_PREFIX.\"c_paper_format\";\n$tabname[16]= MAIN_DB_PREFIX.\"c_prospectlevel\";\n$tabname[17]= MAIN_DB_PREFIX.\"c_type_fees\";\n$tabname[18]= MAIN_DB_PREFIX.\"c_shipment_mode\";\n$tabname[19]= MAIN_DB_PREFIX.\"c_effectif\";\n$tabname[20]= MAIN_DB_PREFIX.\"c_input_method\";\n$tabname[21]= MAIN_DB_PREFIX.\"c_availability\";\n$tabname[22]= MAIN_DB_PREFIX.\"c_input_reason\";\n$tabname[23]= MAIN_DB_PREFIX.\"c_revenuestamp\";\n$tabname[24]= MAIN_DB_PREFIX.\"c_type_resource\";\n//$tabname[25]= MAIN_DB_PREFIX.\"c_email_templates\";\n$tabname[26]= MAIN_DB_PREFIX.\"c_units\";\n$tabname[27]= MAIN_DB_PREFIX.\"c_stcomm\";\n$tabname[28]= MAIN_DB_PREFIX.\"c_holiday_types\";\n$tabname[29]= MAIN_DB_PREFIX.\"c_lead_status\";\n$tabname[30]= MAIN_DB_PREFIX.\"c_format_cards\";\n//$tabname[31]= MAIN_DB_PREFIX.\"accounting_system\";\n//$tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";\n$tabname[33]= MAIN_DB_PREFIX.\"c_hrm_department\";\n$tabname[34]= MAIN_DB_PREFIX.\"c_hrm_function\";\n$tabname[35]= MAIN_DB_PREFIX.\"c_exp_tax_cat\";\n$tabname[36]= MAIN_DB_PREFIX.\"c_exp_tax_range\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[1] = \"DictionaryCompanyJuridicalType\";\n$tablib[2] = \"DictionaryCanton\";\n$tablib[3] = \"DictionaryRegion\";\n$tablib[4] = \"DictionaryCountry\";\n$tablib[5] = \"DictionaryCivility\";\n$tablib[6] = \"DictionaryActions\";\n$tablib[7] = \"DictionarySocialContributions\";\n$tablib[8] = \"DictionaryCompanyType\";\n$tablib[9] = \"DictionaryCurrency\";\n$tablib[10]= \"DictionaryVAT\";\n$tablib[11]= \"DictionaryTypeContact\";\n$tablib[12]= \"DictionaryPaymentConditions\";\n$tablib[13]= \"DictionaryPaymentModes\";\n$tablib[14]= \"DictionaryEcotaxe\";\n$tablib[15]= \"DictionaryPaperFormat\";\n$tablib[16]= \"DictionaryProspectLevel\";\n$tablib[17]= \"DictionaryFees\";\n$tablib[18]= \"DictionarySendingMethods\";\n$tablib[19]= \"DictionaryStaff\";\n$tablib[20]= \"DictionaryOrderMethods\";\n$tablib[21]= \"DictionaryAvailability\";\n$tablib[22]= \"DictionarySource\";\n$tablib[23]= \"DictionaryRevenueStamp\";\n$tablib[24]= \"DictionaryResourceType\";\n//$tablib[25]= \"DictionaryEMailTemplates\";\n$tablib[26]= \"DictionaryUnits\";\n$tablib[27]= \"DictionaryProspectStatus\";\n$tablib[28]= \"DictionaryHolidayTypes\";\n$tablib[29]= \"DictionaryOpportunityStatus\";\n$tablib[30]= \"DictionaryFormatCards\";\n//$tablib[31]= \"DictionaryAccountancysystem\";\n//$tablib[32]= \"DictionaryAccountancyCategory\";\n$tablib[33]= \"DictionaryDepartment\";\n$tablib[34]= \"DictionaryFunction\";\n$tablib[35]= \"DictionaryExpenseTaxCat\";\n$tablib[36]= \"DictionaryExpenseTaxRange\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[1] = \"SELECT f.rowid as rowid, f.code, f.libelle, c.code as country_code, c.label as country, f.active FROM \".MAIN_DB_PREFIX.\"c_forme_juridique as f, \".MAIN_DB_PREFIX.\"c_country as c WHERE f.fk_pays=c.rowid\";\n$tabsql[2] = \"SELECT d.rowid as rowid, d.code_departement as code, d.nom as libelle, d.fk_region as region_id, r.nom as region, c.code as country_code, c.label as country, d.active FROM \".MAIN_DB_PREFIX.\"c_departements as d, \".MAIN_DB_PREFIX.\"c_regions as r, \".MAIN_DB_PREFIX.\"c_country as c WHERE d.fk_region=r.code_region and r.fk_pays=c.rowid and r.active=1 and c.active=1\";\n$tabsql[3] = \"SELECT r.rowid as rowid, r.code_region as code, r.nom as libelle, r.fk_pays as country_id, c.code as country_code, c.label as country, r.active FROM \".MAIN_DB_PREFIX.\"c_regions as r, \".MAIN_DB_PREFIX.\"c_country as c WHERE r.fk_pays=c.rowid and c.active=1\";\n$tabsql[4] = \"SELECT c.rowid as rowid, c.code, c.label, c.active, c.favorite FROM \".MAIN_DB_PREFIX.\"c_country AS c\";\n$tabsql[5] = \"SELECT c.rowid as rowid, c.code as code, c.label, c.active FROM \".MAIN_DB_PREFIX.\"c_civility AS c\";\n$tabsql[6] = \"SELECT a.id    as rowid, a.code as code, a.libelle AS libelle, a.type, a.active, a.module, a.color, a.position FROM \".MAIN_DB_PREFIX.\"c_actioncomm AS a\";\n$tabsql[7] = \"SELECT a.id    as rowid, a.code as code, a.libelle AS libelle, a.accountancy_code as accountancy_code, a.deductible, c.code as country_code, c.label as country, a.fk_pays as country_id, a.active FROM \".MAIN_DB_PREFIX.\"c_chargesociales AS a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_pays=c.rowid and c.active=1\";\n$tabsql[8] = \"SELECT t.id\t as rowid, t.code as code, t.libelle, t.fk_country as country_id, c.code as country_code, c.label as country, t.position, t.active FROM \".MAIN_DB_PREFIX.\"c_typent as t LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON t.fk_country=c.rowid\";\n$tabsql[9] = \"SELECT c.code_iso as code, c.label, c.unicode, c.active FROM \".MAIN_DB_PREFIX.\"c_currencies AS c\";\n$tabsql[10]= \"SELECT t.rowid, t.code, t.taux, t.localtax1_type, t.localtax1, t.localtax2_type, t.localtax2, c.label as country, c.code as country_code, t.fk_pays as country_id, t.recuperableonly, t.note, t.active, t.accountancy_code_sell, t.accountancy_code_buy FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c WHERE t.fk_pays=c.rowid\";\n$tabsql[11]= \"SELECT t.rowid as rowid, t.element, t.source, t.code, t.libelle, t.position, t.active FROM \".MAIN_DB_PREFIX.\"c_type_contact AS t\";\n$tabsql[12]= \"SELECT c.rowid as rowid, c.code, c.libelle, c.libelle_facture, c.nbjour, c.type_cdr, c.decalage, c.active, c.sortorder, c.entity FROM \".MAIN_DB_PREFIX.\"c_payment_term AS c WHERE c.entity = \" . getEntity($tabname[12]);\n$tabsql[13]= \"SELECT c.id    as rowid, c.code, c.libelle, c.type, c.active, c.entity FROM \".MAIN_DB_PREFIX.\"c_paiement AS c WHERE c.entity = \" . getEntity($tabname[13]);\n$tabsql[14]= \"SELECT e.rowid as rowid, e.code as code, e.libelle, e.price, e.organization, e.fk_pays as country_id, c.code as country_code, c.label as country, e.active FROM \".MAIN_DB_PREFIX.\"c_ecotaxe AS e, \".MAIN_DB_PREFIX.\"c_country as c WHERE e.fk_pays=c.rowid and c.active=1\";\n$tabsql[15]= \"SELECT rowid   as rowid, code, label as libelle, width, height, unit, active FROM \".MAIN_DB_PREFIX.\"c_paper_format\";\n$tabsql[16]= \"SELECT code, label as libelle, sortorder, active FROM \".MAIN_DB_PREFIX.\"c_prospectlevel\";\n$tabsql[17]= \"SELECT id      as rowid, code, label, accountancy_code, active FROM \".MAIN_DB_PREFIX.\"c_type_fees\";\n$tabsql[18]= \"SELECT rowid   as rowid, code, libelle, tracking, active FROM \".MAIN_DB_PREFIX.\"c_shipment_mode\";\n$tabsql[19]= \"SELECT id      as rowid, code, libelle, active FROM \".MAIN_DB_PREFIX.\"c_effectif\";\n$tabsql[20]= \"SELECT rowid   as rowid, code, libelle, active FROM \".MAIN_DB_PREFIX.\"c_input_method\";\n$tabsql[21]= \"SELECT c.rowid as rowid, code, label, active FROM \".MAIN_DB_PREFIX.\"c_availability AS c\";\n$tabsql[22]= \"SELECT rowid   as rowid, code, label, active FROM \".MAIN_DB_PREFIX.\"c_input_reason\";\n$tabsql[23]= \"SELECT t.rowid as rowid, t.taux, t.revenuestamp_type, c.label as country, c.code as country_code, t.fk_pays as country_id, t.note, t.active, t.accountancy_code_sell, t.accountancy_code_buy FROM \".MAIN_DB_PREFIX.\"c_revenuestamp as t, \".MAIN_DB_PREFIX.\"c_country as c WHERE t.fk_pays=c.rowid\";\n$tabsql[24]= \"SELECT rowid   as rowid, code, label, active FROM \".MAIN_DB_PREFIX.\"c_type_resource\";\n//$tabsql[25]= \"SELECT rowid   as rowid, label, type_template, private, position, topic, content_lines, content, active FROM \".MAIN_DB_PREFIX.\"c_email_templates WHERE entity IN (\".getEntity('email_template').\")\";\n$tabsql[26]= \"SELECT rowid   as rowid, code, label, short_label, active FROM \".MAIN_DB_PREFIX.\"c_units\";\n$tabsql[27]= \"SELECT id      as rowid, code, libelle, active FROM \".MAIN_DB_PREFIX.\"c_stcomm\";\n$tabsql[28]= \"SELECT h.rowid as rowid, h.code, h.label, h.affect, h.delay, h.newbymonth, h.fk_country as country_id, c.code as country_code, c.label as country, h.active FROM \".MAIN_DB_PREFIX.\"c_holiday_types as h LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON h.fk_country=c.rowid\";\n$tabsql[29]= \"SELECT rowid   as rowid, code, label, percent, position, active FROM \".MAIN_DB_PREFIX.\"c_lead_status\";\n$tabsql[30]= \"SELECT rowid, code, name, paper_size, orientation, metric, leftmargin, topmargin, nx, ny, spacex, spacey, width, height, font_size, custom_x, custom_y, active FROM \".MAIN_DB_PREFIX.\"c_format_cards\";\n//$tabsql[31]= \"SELECT s.rowid as rowid, pcg_version, s.label, s.active FROM \".MAIN_DB_PREFIX.\"accounting_system as s\";\n//$tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.sens, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";\n$tabsql[33]= \"SELECT rowid, pos, code, label, active FROM \".MAIN_DB_PREFIX.\"c_hrm_department\";\n$tabsql[34]= \"SELECT rowid, pos, code, label, c_level, active FROM \".MAIN_DB_PREFIX.\"c_hrm_function\";\n$tabsql[35]= \"SELECT c.rowid, c.label, c.active, c.entity FROM \".MAIN_DB_PREFIX.\"c_exp_tax_cat c\";\n$tabsql[36]= \"SELECT r.rowid, r.fk_c_exp_tax_cat, r.range_ik, r.active, r.entity FROM \".MAIN_DB_PREFIX.\"c_exp_tax_range r\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[1] =\"country ASC, code ASC\";\n$tabsqlsort[2] =\"country ASC, code ASC\";\n$tabsqlsort[3] =\"country ASC, code ASC\";\n$tabsqlsort[4] =\"code ASC\";\n$tabsqlsort[5] =\"label ASC\";\n$tabsqlsort[6] =\"a.type ASC, a.module ASC, a.position ASC, a.code ASC\";\n$tabsqlsort[7] =\"country ASC, code ASC, a.libelle ASC\";\n$tabsqlsort[8] =\"country DESC,\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?' t.position ASC,':'').\" libelle ASC\";\n$tabsqlsort[9] =\"label ASC\";\n$tabsqlsort[10]=\"country ASC, code ASC, taux ASC, recuperableonly ASC, localtax1 ASC, localtax2 ASC\";\n$tabsqlsort[11]=\"t.element ASC, t.source ASC, t.position ASC, t.code ASC\";\n$tabsqlsort[12]=\"sortorder ASC, code ASC\";\n$tabsqlsort[13]=\"code ASC\";\n$tabsqlsort[14]=\"country ASC, e.organization ASC, code ASC\";\n$tabsqlsort[15]=\"rowid ASC\";\n$tabsqlsort[16]=\"sortorder ASC\";\n$tabsqlsort[17]=\"code ASC\";\n$tabsqlsort[18]=\"code ASC, libelle ASC\";\n$tabsqlsort[19]=\"id ASC\";\n$tabsqlsort[20]=\"code ASC, libelle ASC\";\n$tabsqlsort[21]=\"code ASC, label ASC\";\n$tabsqlsort[22]=\"code ASC, label ASC\";\n$tabsqlsort[23]=\"country ASC, taux ASC\";\n$tabsqlsort[24]=\"code ASC,label ASC\";\n//$tabsqlsort[25]=\"label ASC\";\n$tabsqlsort[26]=\"code ASC\";\n$tabsqlsort[27]=\"code ASC\";\n$tabsqlsort[28]=\"country ASC, code ASC\";\n$tabsqlsort[29]=\"position ASC\";\n$tabsqlsort[30]=\"code ASC\";\n//$tabsqlsort[31]=\"pcg_version ASC\";\n//$tabsqlsort[32]=\"position ASC\";\n$tabsqlsort[33]=\"code ASC\";\n$tabsqlsort[34]=\"code ASC\";\n$tabsqlsort[35]=\"c.label ASC\";\n$tabsqlsort[36]=\"r.fk_c_exp_tax_cat ASC, r.range_ik ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[1] = \"code,libelle,country\";\n$tabfield[2] = \"code,libelle,region_id,region,country\";   // \"code,libelle,region,country_code-country\"\n$tabfield[3] = \"code,libelle,country_id,country\";\n$tabfield[4] = \"code,label\";\n$tabfield[5] = \"code,label\";\n$tabfield[6] = \"code,libelle,type,color,position\";\n$tabfield[7] = \"code,libelle,country,accountancy_code,deductible\";\n$tabfield[8] = \"code,libelle,country_id,country\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?',position':'');\n$tabfield[9] = \"code,label,unicode\";\n$tabfield[10]= \"country_id,country,code,taux,localtax1_type,localtax1,localtax2_type,localtax2,recuperableonly,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfield[11]= \"element,source,code,libelle,position\";\n$tabfield[12]= \"code,libelle,libelle_facture,nbjour,type_cdr,decalage,sortorder,entity\";\n$tabfield[13]= \"code,libelle,type,entity\";\n$tabfield[14]= \"code,libelle,price,organization,country_id,country\";\n$tabfield[15]= \"code,libelle,width,height,unit\";\n$tabfield[16]= \"code,libelle,sortorder\";\n$tabfield[17]= \"code,label,accountancy_code\";\n$tabfield[18]= \"code,libelle,tracking\";\n$tabfield[19]= \"code,libelle\";\n$tabfield[20]= \"code,libelle\";\n$tabfield[21]= \"code,label\";\n$tabfield[22]= \"code,label\";\n$tabfield[23]= \"country_id,country,taux,revenuestamp_type,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfield[24]= \"code,label\";\n//$tabfield[25]= \"label,type_template,private,position,topic,content_lines,content\";\n$tabfield[26]= \"code,label,short_label\";\n$tabfield[27]= \"code,libelle\";\n$tabfield[28]= \"code,label,affect,delay,newbymonth,country_id,country\";\n$tabfield[29]= \"code,label,percent,position\";\n$tabfield[30]= \"code,name,paper_size,orientation,metric,leftmargin,topmargin,nx,ny,spacex,spacey,width,height,font_size,custom_x,custom_y\";\n//$tabfield[31]= \"pcg_version,label\";\n//$tabfield[32]= \"code,label,range_account,sens,category_type,formula,position,country_id,country\";\n$tabfield[33]= \"code,label\";\n$tabfield[34]= \"code,label\";\n$tabfield[35]= \"label\";\n$tabfield[36]= \"range_ik,fk_c_exp_tax_cat\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[1] = \"code,libelle,country\";\n$tabfieldvalue[2] = \"code,libelle,region\";   // \"code,libelle,region\"\n$tabfieldvalue[3] = \"code,libelle,country\";\n$tabfieldvalue[4] = \"code,label\";\n$tabfieldvalue[5] = \"code,label\";\n$tabfieldvalue[6] = \"code,libelle,type,color,position\";\n$tabfieldvalue[7] = \"code,libelle,country,accountancy_code,deductible\";\n$tabfieldvalue[8] = \"code,libelle,country\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?',position':'');\n$tabfieldvalue[9] = \"code,label,unicode\";\n$tabfieldvalue[10]= \"country,code,taux,localtax1_type,localtax1,localtax2_type,localtax2,recuperableonly,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldvalue[11]= \"element,source,code,libelle,position\";\n$tabfieldvalue[12]= \"code,libelle,libelle_facture,nbjour,type_cdr,decalage,sortorder\";\n$tabfieldvalue[13]= \"code,libelle,type\";\n$tabfieldvalue[14]= \"code,libelle,price,organization,country\";\n$tabfieldvalue[15]= \"code,libelle,width,height,unit\";\n$tabfieldvalue[16]= \"code,libelle,sortorder\";\n$tabfieldvalue[17]= \"code,label,accountancy_code\";\n$tabfieldvalue[18]= \"code,libelle,tracking\";\n$tabfieldvalue[19]= \"code,libelle\";\n$tabfieldvalue[20]= \"code,libelle\";\n$tabfieldvalue[21]= \"code,label\";\n$tabfieldvalue[22]= \"code,label\";\n$tabfieldvalue[23]= \"country,taux,revenuestamp_type,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldvalue[24]= \"code,label\";\n//$tabfieldvalue[25]= \"label,type_template,private,position,topic,content_lines,content\";\n$tabfieldvalue[26]= \"code,label,short_label\";\n$tabfieldvalue[27]= \"code,libelle\";\n$tabfieldvalue[28]= \"code,label,affect,delay,newbymonth,country\";\n$tabfieldvalue[29]= \"code,label,percent,position\";\n$tabfieldvalue[30]= \"code,name,paper_size,orientation,metric,leftmargin,topmargin,nx,ny,spacex,spacey,width,height,font_size,custom_x,custom_y\";\n//$tabfieldvalue[31]= \"pcg_version,label\";\n//$tabfieldvalue[32]= \"code,label,range_account,sens,category_type,formula,position,country\";\n$tabfieldvalue[33]= \"code,label\";\n$tabfieldvalue[34]= \"code,label\";\n$tabfieldvalue[35]= \"label\";\n$tabfieldvalue[36]= \"range_ik,fk_c_exp_tax_cat\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[1] = \"code,libelle,fk_pays\";\n$tabfieldinsert[2] = \"code_departement,nom,fk_region\";\n$tabfieldinsert[3] = \"code_region,nom,fk_pays\";\n$tabfieldinsert[4] = \"code,label\";\n$tabfieldinsert[5] = \"code,label\";\n$tabfieldinsert[6] = \"code,libelle,type,color,position\";\n$tabfieldinsert[7] = \"code,libelle,fk_pays,accountancy_code,deductible\";\n$tabfieldinsert[8] = \"code,libelle,fk_country\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?',position':'');\n$tabfieldinsert[9] = \"code_iso,label,unicode\";\n$tabfieldinsert[10]= \"fk_pays,code,taux,localtax1_type,localtax1,localtax2_type,localtax2,recuperableonly,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldinsert[11]= \"element,source,code,libelle,position\";\n$tabfieldinsert[12]= \"code,libelle,libelle_facture,nbjour,type_cdr,decalage,sortorder,entity\";\n$tabfieldinsert[13]= \"code,libelle,type,entity\";\n$tabfieldinsert[14]= \"code,libelle,price,organization,fk_pays\";\n$tabfieldinsert[15]= \"code,label,width,height,unit\";\n$tabfieldinsert[16]= \"code,label,sortorder\";\n$tabfieldinsert[17]= \"code,label,accountancy_code\";\n$tabfieldinsert[18]= \"code,libelle,tracking\";\n$tabfieldinsert[19]= \"code,libelle\";\n$tabfieldinsert[20]= \"code,libelle\";\n$tabfieldinsert[21]= \"code,label\";\n$tabfieldinsert[22]= \"code,label\";\n$tabfieldinsert[23]= \"fk_pays,taux,revenuestamp_type,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldinsert[24]= \"code,label\";\n//$tabfieldinsert[25]= \"label,type_template,private,position,topic,content_lines,content,entity\";\n$tabfieldinsert[26]= \"code,label,short_label\";\n$tabfieldinsert[27]= \"code,libelle\";\n$tabfieldinsert[28]= \"code,label,affect,delay,newbymonth,fk_country\";\n$tabfieldinsert[29]= \"code,label,percent,position\";\n$tabfieldinsert[30]= \"code,name,paper_size,orientation,metric,leftmargin,topmargin,nx,ny,spacex,spacey,width,height,font_size,custom_x,custom_y\";\n//$tabfieldinsert[31]= \"pcg_version,label\";\n//$tabfieldinsert[32]= \"code,label,range_account,sens,category_type,formula,position,fk_country\";\n$tabfieldinsert[33]= \"code,label\";\n$tabfieldinsert[34]= \"code,label\";\n$tabfieldinsert[35]= \"label\";\n$tabfieldinsert[36]= \"range_ik,fk_c_exp_tax_cat\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[1] = \"\";\n$tabrowid[2] = \"\";\n$tabrowid[3] = \"\";\n$tabrowid[4] = \"rowid\";\n$tabrowid[5] = \"rowid\";\n$tabrowid[6] = \"id\";\n$tabrowid[7] = \"id\";\n$tabrowid[8] = \"id\";\n$tabrowid[9] = \"code_iso\";\n$tabrowid[10]= \"\";\n$tabrowid[11]= \"rowid\";\n$tabrowid[12]= \"rowid\";\n$tabrowid[13]= \"id\";\n$tabrowid[14]= \"\";\n$tabrowid[15]= \"\";\n$tabrowid[16]= \"code\";\n$tabrowid[17]= \"id\";\n$tabrowid[18]= \"rowid\";\n$tabrowid[19]= \"id\";\n$tabrowid[20]= \"\";\n$tabrowid[21]= \"rowid\";\n$tabrowid[22]= \"rowid\";\n$tabrowid[23]= \"\";\n$tabrowid[24]= \"\";\n//$tabrowid[25]= \"\";\n$tabrowid[26]= \"\";\n$tabrowid[27]= \"id\";\n$tabrowid[28]= \"\";\n$tabrowid[29]= \"\";\n$tabrowid[30]= \"\";\n//$tabrowid[31]= \"\";\n//$tabrowid[32]= \"\";\n$tabrowid[33]= \"rowid\";\n$tabrowid[34]= \"rowid\";\n$tabrowid[35]= \"\";\n$tabrowid[36]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[1] = (! empty($conf->societe->enabled));\n$tabcond[2] = true;\n$tabcond[3] = true;\n$tabcond[4] = true;\n$tabcond[5] = (! empty($conf->societe->enabled) || ! empty($conf->adherent->enabled));\n$tabcond[6] = ! empty($conf->agenda->enabled);\n$tabcond[7] = ! empty($conf->tax->enabled);\n$tabcond[8] = ! empty($conf->societe->enabled);\n$tabcond[9] = true;\n$tabcond[10]= true;\n$tabcond[11]= (! empty($conf->societe->enabled));\n$tabcond[12]= (! empty($conf->commande->enabled) || ! empty($conf->propal->enabled) || ! empty($conf->facture->enabled) || ! empty($conf->fournisseur->enabled));\n$tabcond[13]= (! empty($conf->commande->enabled) || ! empty($conf->propal->enabled) || ! empty($conf->facture->enabled) || ! empty($conf->fournisseur->enabled));\n$tabcond[14]= (! empty($conf->product->enabled) && ! empty($conf->ecotax->enabled));\n$tabcond[15]= true;\n$tabcond[16]= (! empty($conf->societe->enabled) && empty($conf->global->SOCIETE_DISABLE_PROSPECTS));\n$tabcond[17]= (! empty($conf->deplacement->enabled) || ! empty($conf->expensereport->enabled));\n$tabcond[18]= ! empty($conf->expedition->enabled);\n$tabcond[19]= ! empty($conf->societe->enabled);\n$tabcond[20]= ! empty($conf->fournisseur->enabled);\n$tabcond[21]= ! empty($conf->propal->enabled);\n$tabcond[22]= (! empty($conf->commande->enabled) || ! empty($conf->propal->enabled));\n$tabcond[23]= true;\n$tabcond[24]= ! empty($conf->resource->enabled);\n//$tabcond[25]= true; // && ! empty($conf->global->MAIN_EMAIL_EDIT_TEMPLATE_FROM_DIC);\n$tabcond[26]= ! empty($conf->product->enabled);\n$tabcond[27]= ! empty($conf->societe->enabled);\n$tabcond[28]= ! empty($conf->holiday->enabled);\n$tabcond[29]= ! empty($conf->projet->enabled);\n$tabcond[30]= ! empty($conf->label->enabled);\n//$tabcond[31]= ! empty($conf->accounting->enabled);\n//$tabcond[32]= ! empty($conf->accounting->enabled);\n$tabcond[33]= ! empty($conf->hrm->enabled);\n$tabcond[34]= ! empty($conf->hrm->enabled);\n$tabcond[35]= ! empty($conf->expensereport->enabled);\n$tabcond[36]= ! empty($conf->expensereport->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[1]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[2]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[3]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[4]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[5]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[6]  = array('code'=>$langs->trans(\"EnterAnyCode\"), 'color'=>$langs->trans(\"ColorFormat\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[7]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[8]  = array('code'=>$langs->trans(\"EnterAnyCode\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[9]  = array('code'=>$langs->trans(\"EnterAnyCode\"), 'unicode'=>$langs->trans(\"UnicodeCurrency\"));\n$tabhelp[10] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'taux'=>$langs->trans(\"SellTaxRate\"), 'recuperableonly'=>$langs->trans(\"RecuperableOnly\"), 'localtax1_type'=>$langs->trans(\"LocalTaxDesc\"), 'localtax2_type'=>$langs->trans(\"LocalTaxDesc\"));\n$tabhelp[11] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[12] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'type_cdr'=>$langs->trans(\"TypeCdr\"));\n$tabhelp[13] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[14] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[15] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[16] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[17] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[18] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'tracking'=>$langs->trans(\"UrlTrackingDesc\"));\n$tabhelp[19] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[20] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[21] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[22] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[23] = array('revenuestamp_type'=>'FixedOfPercent');\n$tabhelp[24] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n//$tabhelp[25] = array('topic'=>$langs->trans('SeeSubstitutionVars'),'content'=>$langs->trans('SeeSubstitutionVars'),'content_lines'=>$langs->trans('SeeSubstitutionVars'),'type_template'=>$langs->trans(\"TemplateForElement\"),'private'=>$langs->trans(\"TemplateIsVisibleByOwnerOnly\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[26] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[27] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[28] = array('affect'=>$langs->trans(\"FollowedByACounter\"),'delay'=>$langs->trans(\"MinimumNoticePeriod\"), 'newbymonth'=>$langs->trans(\"NbAddedAutomatically\"));\n$tabhelp[29] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'percent'=>$langs->trans(\"OpportunityPercent\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[30] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'name'=>$langs->trans(\"LabelName\"), 'paper_size'=>$langs->trans(\"LabelPaperSize\"));\n//$tabhelp[31] = array('pcg_version'=>$langs->trans(\"EnterAnyCode\"));\n//$tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[33] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[34] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[35]= array();\n$tabhelp[36]= array('range_ik'=>$langs->trans('PrevRangeToThisRange'));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[1]  = array();\n$tabfieldcheck[2]  = array();\n$tabfieldcheck[3]  = array();\n$tabfieldcheck[4]  = array();\n$tabfieldcheck[5]  = array();\n$tabfieldcheck[6]  = array();\n$tabfieldcheck[7]  = array();\n$tabfieldcheck[8]  = array();\n$tabfieldcheck[9]  = array();\n$tabfieldcheck[10] = array();\n$tabfieldcheck[11] = array();\n$tabfieldcheck[12] = array();\n$tabfieldcheck[13] = array();\n$tabfieldcheck[14] = array();\n$tabfieldcheck[15] = array();\n$tabfieldcheck[16] = array();\n$tabfieldcheck[17] = array();\n$tabfieldcheck[18] = array();\n$tabfieldcheck[19] = array();\n$tabfieldcheck[20] = array();\n$tabfieldcheck[21] = array();\n$tabfieldcheck[22] = array();\n$tabfieldcheck[23] = array();\n$tabfieldcheck[24] = array();\n//$tabfieldcheck[25] = array();\n$tabfieldcheck[26] = array();\n$tabfieldcheck[27] = array();\n$tabfieldcheck[28] = array();\n$tabfieldcheck[29] = array();\n$tabfieldcheck[30] = array();\n//$tabfieldcheck[31] = array();\n//$tabfieldcheck[32] = array();\n$tabfieldcheck[33] = array();\n$tabfieldcheck[34] = array();\n$tabfieldcheck[35]= array();\n$tabfieldcheck[36]= array();\n\n// Complete all arrays with entries found into modules\ncomplete_dictionary_with_modules($taborder,$tabname,$tablib,$tabsql,$tabsqlsort,$tabfield,$tabfieldvalue,$tabfieldinsert,$tabrowid,$tabcond,$tabhelp,$tabfieldcheck);\n\n\n// Defaut sortorder\nif (empty($sortfield))\n{\n    $tmp1 = explode(',',$tabsqlsort[$id]);\n    $tmp2 = explode(' ',$tmp1[0]);\n    $sortfield=preg_replace('/^.*\\./', '', $tmp2[0]);\n}\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\nif ($id == 11)\n{\n\t$langs->load(\"orders\");\n\t$langs->load(\"contracts\");\n\t$langs->load(\"projects\");\n\t$langs->load(\"propal\");\n\t$langs->load(\"bills\");\n\t$langs->load(\"interventions\");\n\t$elementList = array(\n\t\t\t''\t\t\t\t    => '',\n            'societe'           => $langs->trans('ThirdParty'),\n//\t\t\t'proposal'          => $langs->trans('Proposal'),\n//\t\t\t'order'             => $langs->trans('Order'),\n//\t\t\t'invoice'           => $langs->trans('Bill'),\n\t\t\t'invoice_supplier'  => $langs->trans('SupplierBill'),\n\t\t\t'order_supplier'    => $langs->trans('SupplierOrder'),\n//\t\t\t'intervention'      => $langs->trans('InterventionCard'),\n//\t\t\t'contract'          => $langs->trans('Contract'),\n\t\t\t'project'           => $langs->trans('Project'),\n\t\t\t'project_task'      => $langs->trans('Task'),\n\t\t\t'agenda'\t\t\t=> $langs->trans('Agenda'),\n\t\t\t// old deprecated\n\t\t\t'contrat'           => $langs->trans('Contract'),\n\t\t\t'propal'            => $langs->trans('Proposal'),\n\t\t\t'commande'          => $langs->trans('Order'),\n\t\t\t'facture'           => $langs->trans('Bill'),\n\t\t\t'resource'           => $langs->trans('Resource'),\n//\t\t\t'facture_fourn'     => $langs->trans('SupplierBill'),\n\t\t\t'fichinter'         => $langs->trans('InterventionCard')\n\t);\n\tif (! empty($conf->global->MAIN_SUPPORT_SHARED_CONTACT_BETWEEN_THIRDPARTIES)) $elementList[\"societe\"] = $langs->trans('ThirdParty');\n\n\tcomplete_elementList_with_modules($elementList);\n\n\tasort($elementList);\n\t$sourceList = array(\n\t\t\t'internal' => $langs->trans('Internal'),\n\t\t\t'external' => $langs->trans('External')\n\t);\n}\n\n// Define localtax_typeList (used for dictionary \"llx_c_tva\")\n$localtax_typeList = array();\nif ($id == 10)\n{\n\t$localtax_typeList = array(\n\t\t\t\"0\" => $langs->trans(\"No\"),\n\t\t\t\"1\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 1)\",\t//$langs->trans(\"%ageOnAllWithoutVAT\"),\n\t\t\t\"2\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 2)\",\t//$langs->trans(\"%ageOnAllBeforeVAT\"),\n\t\t\t\"3\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 3)\",\t//$langs->trans(\"%ageOnProductsWithoutVAT\"),\n\t\t\t\"4\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 4)\",\t//$langs->trans(\"%ageOnProductsBeforeVAT\"),\n\t\t\t\"5\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 5)\",\t//$langs->trans(\"%ageOnServiceWithoutVAT\"),\n\t\t\t\"6\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 6)\"\t//$langs->trans(\"%ageOnServiceBeforeVAT\"),\n\t);\n}\n\n\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n    $search_country_id = '';\n    $search_code = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n    $listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n    $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n    $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n    $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n    // Check that all fields are filled\n    $ok=1;\n    foreach ($listfield as $f => $value)\n    {\n        if ($value == 'country_id' && in_array($tablib[$id],array('DictionaryVAT','DictionaryRegion','DictionaryCompanyType','DictionaryHolidayTypes','DictionaryRevenueStamp','DictionaryAccountancysystem','DictionaryAccountancyCategory'))) continue;\t\t// For some pages, country is not mandatory\n    \tif ($value == 'country' && in_array($tablib[$id],array('DictionaryCanton','DictionaryCompanyType','DictionaryRevenueStamp'))) continue;\t\t// For some pages, country is not mandatory\n        if ($value == 'localtax1' && empty($_POST['localtax1_type'])) continue;\n        if ($value == 'localtax2' && empty($_POST['localtax2_type'])) continue;\n        if ($value == 'color' && empty($_POST['color'])) continue;\n\t\tif ($value == 'formula' && empty($_POST['formula'])) continue;\n\t\tif ($value == 'sortorder') continue;\t\t// For a column name 'sortorder', we use the field name 'position'\n\t\tif ((! isset($_POST[$value]) || $_POST[$value]=='')\n        \t&& (! in_array($listfield[$f], array('decalage','module','accountancy_code','accountancy_code_sell','accountancy_code_buy'))  // Fields that are not mandatory\n        \t&& (! ($id == 10 && $listfield[$f] == 'code')) // Code is mandatory fir table 10\n        \t)\n\t\t)\n        {\n            $ok=0;\n            $fieldnamekey=$listfield[$f];\n            // We take translate key of field\n            if ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n            if ($fieldnamekey == 'libelle_facture') $fieldnamekey = 'LabelOnDocuments';\n            if ($fieldnamekey == 'nbjour')   $fieldnamekey='NbOfDays';\n            if ($fieldnamekey == 'decalage') $fieldnamekey='Offset';\n            if ($fieldnamekey == 'module')   $fieldnamekey='Module';\n            if ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n            if ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n            if ($fieldnamekey == 'taux') $fieldnamekey = 'Rate';\n            if ($fieldnamekey == 'type') $fieldnamekey = 'Type';\n            if ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n            if ($fieldnamekey == 'unicode') $fieldnamekey = 'Unicode';\n            if ($fieldnamekey == 'deductible') $fieldnamekey = 'Deductible';\n            if ($fieldnamekey == 'sortorder') $fieldnamekey = 'SortOrder';\n\t\t\tif ($fieldnamekey == 'category_type') $fieldnamekey = 'Calculated';\n\t\t\tif ($fieldnamekey == 'revenuestamp_type') $fieldnamekey = 'TypeOfRevenueStamp';\n\n            setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n        }\n    }\n    // Other checks\n    if (GETPOST('actionadd') && $tabname[$id] == MAIN_DB_PREFIX.\"c_actioncomm\" && isset($_POST[\"type\"]) && in_array($_POST[\"type\"],array('system','systemauto'))) {\n        $ok=0;\n        setEventMessages($langs->transnoentities('ErrorReservedTypeSystemSystemAuto'), null, 'errors');\n    }\n    if (isset($_POST[\"code\"]))\n    {\n    \tif ($_POST[\"code\"]=='0')\n    \t{\n        \t$ok=0;\n    \t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n        }\n        /*if (!is_numeric($_POST['code']))\t// disabled, code may not be in numeric base\n    \t{\n\t    \t$ok = 0;\n\t    \t$msg .= $langs->transnoentities('ErrorFieldFormat', $langs->transnoentities('Code')).'<br>';\n\t    }*/\n    }\n    if (isset($_POST[\"country\"]) && ($_POST[\"country\"]=='0') && ($id != 2))\n    {\n    \tif (in_array($tablib[$id],array('DictionaryCompanyType','DictionaryHolidayTypes')))\t// Field country is no mandatory for such dictionaries\n    \t{\n    \t\t$_POST[\"country\"]='';\n    \t}\n    \telse\n    \t{\n        \t$ok=0;\n        \tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\",$langs->transnoentities(\"Country\")), null, 'errors');\n    \t}\n    }\n    if ($id == 3 && ! is_numeric($_POST[\"code\"]))\n    {\n       \t$ok=0;\n       \tsetEventMessages($langs->transnoentities(\"ErrorFieldMustBeANumeric\",$langs->transnoentities(\"Code\")), null, 'errors');\n    }\n\n\t// Clean some parameters\n    if ((! empty($_POST[\"localtax1_type\"]) || ($_POST['localtax1_type'] == '0')) && empty($_POST[\"localtax1\"])) $_POST[\"localtax1\"]='0';\t// If empty, we force to 0\n    if ((! empty($_POST[\"localtax2_type\"]) || ($_POST['localtax2_type'] == '0')) && empty($_POST[\"localtax2\"])) $_POST[\"localtax2\"]='0';\t// If empty, we force to 0\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n    if ($id == 10 && isset($_POST[\"code\"]))  // Spaces are not allowed into code\n    {\n        $_POST[\"code\"]=preg_replace('/\\s/','',$_POST[\"code\"]);\n    }\n\n    // Si verif ok et action add, on ajoute la ligne\n    if ($ok && GETPOST('actionadd'))\n    {\n        if ($tabrowid[$id])\n        {\n            // Recupere id libre pour insertion\n            $newid=0;\n            $sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n            $result = $db->query($sql);\n            if ($result)\n            {\n                $obj = $db->fetch_object($result);\n                $newid=($obj->newid + 1);\n\n            } else {\n                dol_print_error($db);\n            }\n        }\n\n        // Add new entry\n        $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n        // List of fields\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $tabrowid[$id].\",\";\n        $sql.= $tabfieldinsert[$id];\n        $sql.=\",active)\";\n        $sql.= \" VALUES(\";\n\n        // List of values\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $newid.\",\";\n        $i=0;\n        foreach ($listfieldinsert as $f => $value)\n        {\n            if ($value == 'price' || preg_match('/^amount/i',$value) || $value == 'taux') {\n            \t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n            }\n            else if ($value == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = getEntity($tabname[$id]);\n            }\n            if ($i) $sql.=\",\";\n            if ($listfieldvalue[$i] == 'sortorder')\t\t// For column name 'sortorder', we use the field name 'position'\n            {\n            \t$sql.=\"'\".(int) $db->escape($_POST['position']).\"'\";\n            }\n            elseif ($_POST[$listfieldvalue[$i]] == '' && ! ($listfieldvalue[$i] == 'code' && $id == 10)) $sql.=\"null\";  // For vat, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.=\",1)\";\n\n        dol_syslog(\"actionadd\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if ($result)\t// Add is ok\n        {\n            setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n        \t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n        }\n        else\n        {\n            if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n            }\n            else {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // Si verif ok et action modify, on modifie la ligne\n    if ($ok && GETPOST('actionmodify'))\n    {\n        if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n        else { $rowidcol=\"rowid\"; }\n\n        // Modify entry\n        $sql = \"UPDATE \".$tabname[$id].\" SET \";\n        // Modifie valeur des champs\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n        {\n            $sql.= $tabrowid[$id].\"=\";\n            $sql.= \"'\".$db->escape($rowid).\"', \";\n        }\n        $i = 0;\n        foreach ($listfieldmodify as $field)\n        {\n            if ($field == 'price' || preg_match('/^amount/i',$field) || $field == 'taux') {\n            \t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n            }\n            else if ($field == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = getEntity($tabname[$id]);\n            }\n            if ($i) $sql.=\",\";\n            $sql.= $field.\"=\";\n            if ($listfieldvalue[$i] == 'sortorder')\t\t// For column name 'sortorder', we use the field name 'position'\n            {\n            \t$sql.=\"'\".(int) $db->escape($_POST['position']).\"'\";\n            }\n            elseif ($_POST[$listfieldvalue[$i]] == '' && ! ($listfieldvalue[$i] == 'code' && $id == 10)) $sql.=\"null\";  // For vat, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n        if (in_array('entity', $listfieldmodify)) $sql.= \" AND entity = '\".getEntity($tabname[$id]).\"'\";\n\n        dol_syslog(\"actionmodify\", LOG_DEBUG);\n        //print $sql;\n        $resql = $db->query($sql);\n        if (! $resql)\n        {\n            setEventMessages($db->error(), null, 'errors');\n        }\n    }\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    $sql = \"DELETE FROM \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n\n    dol_syslog(\"delete\", LOG_DEBUG);\n    $result = $db->query($sql);\n    if (! $result)\n    {\n        if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n        {\n            setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n        }\n        else\n        {\n            dol_print_error($db);\n        }\n    }\n}\n\n// activate\nif ($action == $acts[0])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable\nif ($action == $acts[1])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// favorite\nif ($action == 'activate_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable favorite\nif ($action == 'disable_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans(\"DictionarySetup\");\n$linkback='';\nif ($id)\n{\n    $titre.=' - '.$langs->trans($tablib[$id]);\n    $linkback='<a href=\"'.$_SERVER['PHP_SELF'].'\">'.$langs->trans(\"BackToDictionaryList\").'</a>';\n}\n$titlepicto='title_setup';\nif ($id == 10 && GETPOST('from') == 'accountancy')\n{\n    $titre=$langs->trans(\"MenuVatAccounts\");\n    $titlepicto='title_accountancy';\n}\nif ($id == 7 && GETPOST('from') == 'accountancy')\n{\n    $titre=$langs->trans(\"MenuTaxAccounts\");\n    $titlepicto='title_accountancy';\n}\n\nprint load_fiche_titre($titre,$linkback,$titlepicto);\n\nif (empty($id))\n{\n    print $langs->trans(\"DictionaryDesc\");\n    print \" \".$langs->trans(\"OnlyActiveElementsAreShown\").\"<br>\\n\";\n}\nprint \"<br>\\n\";\n\n\n$param = '&id='.$id;\nif ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\nif ($search_code != '')     $param.= '&search_code='.urlencode($search_country_id);\nif ($entity != '') $param.= '&entity=' . (int) $entity;\n$paramwithsearch = $param;\nif ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\nif ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\nif (GETPOST('from')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'rowid='.$rowid.'&code='.urlencode($code).$paramwithsearch, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n    // Complete requete recherche valeurs avec critere de tri\n    $sql=$tabsql[$id];\n\n    if (! preg_match('/ WHERE /',$sql)) $sql.= \" WHERE 1 = 1\";\n    if ($search_country_id > 0) $sql.= \" AND c.rowid = \".$search_country_id;\n    if ($search_code != '' && $id != 9)     $sql.= natural_search(\"code\", $search_code);\n    if ($search_code != '' && $id == 9)     $sql.= natural_search(\"code_iso\", $search_code);\n\n    if ($sortfield)\n    {\n        // If sort order is \"country\", we use country_code instead\n    \tif ($sortfield == 'country') $sortfield='country_code';\n        $sql.= \" ORDER BY \".$sortfield;\n        if ($sortorder)\n        {\n            $sql.=\" \".strtoupper($sortorder);\n        }\n        $sql.=\", \";\n        // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n    }\n    else {\n        $sql.=\" ORDER BY \";\n    }\n    $sql.=$tabsqlsort[$id];\n    $sql.=$db->plimit($listlimit+1,$offset);\n    //print $sql;\n\n    if (empty($tabfield[$id]))\n    {\n    \tdol_print_error($db, 'The table with id '.$id.' has no array tabfield defined');\n    \texit;\n    }\n    $fieldlist=explode(',',$tabfield[$id]);\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n    // Form to add a new line\n    if ($tabname[$id])\n    {\n        $alabelisused=0;\n        $withentity=null;\n\n        $fieldlist=explode(',',$tabfield[$id]);\n\n\t    print '<div class=\"div-table-responsive-no-min\">';\n        print '<table class=\"noborder\" width=\"100%\">';\n\n        // Line for title\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n        \tif ($fieldlist[$field] == 'entity') {\n        \t\t$withentity = getEntity($tabname[$id]);\n        \t\tcontinue;\n        \t}\n\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            $class='';\n            if ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n            if ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n            if ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$class='center';\n            }\n            if ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $class=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\"; $class=\"center\"; }\n            if ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $class=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\"; $class=\"center\"; }\n            if ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n            if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n            if ($fieldlist[$field]=='type')            {\n\t\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_paiement\") $valuetoshow=$form->textwithtooltip($langs->trans(\"Type\"),$langs->trans(\"TypePaymentDesc\"),2,1,img_help(1,''));\n\t\t\t\telse $valuetoshow=$langs->trans(\"Type\");\n            }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); $class='width100'; }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n            \tif ($id != 25) $valuetoshow=$form->textwithtooltip($langs->trans(\"Label\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n            \telse $valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='libelle_facture') {\n                $valuetoshow=$form->textwithtooltip($langs->trans(\"LabelOnDocuments\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n            }\n            if ($fieldlist[$field]=='country')         {\n                if (in_array('region_id',$fieldlist)) { print '<td>&nbsp;</td>'; continue; }\t\t// For region page, we do not show the country input\n                $valuetoshow=$langs->trans(\"Country\");\n            }\n            if ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $class=\"center\"; }\n            if ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n            if ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $class=\"center\"; }\n            if ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n            if ($fieldlist[$field]=='width' || $fieldlist[$field]=='nx')    { $valuetoshow=$langs->trans(\"Width\"); }\n            if ($fieldlist[$field]=='height' || $fieldlist[$field]=='ny')   { $valuetoshow=$langs->trans(\"Height\"); }\n            if ($fieldlist[$field]=='unit' || $fieldlist[$field]=='metric') { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $valuetoshow=''; }\n            if ($fieldlist[$field]=='accountancy_code') { $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell') { $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); }\n            if ($fieldlist[$field]=='accountancy_code_buy') { $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); }\n            if ($fieldlist[$field]=='pcg_version' || $fieldlist[$field]=='fk_pcg_version') { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountparent\"); }\n            if ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n            if ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n            if ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n\t        if ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\t\t\tif ($fieldlist[$field]=='paper_size')      { $valuetoshow=$langs->trans(\"PaperSize\"); }\n\t\t\tif ($fieldlist[$field]=='orientation')     { $valuetoshow=$langs->trans(\"Orientation\"); }\n\t\t\tif ($fieldlist[$field]=='leftmargin')      { $valuetoshow=$langs->trans(\"LeftMargin\"); }\n\t\t\tif ($fieldlist[$field]=='topmargin')       { $valuetoshow=$langs->trans(\"TopMargin\"); }\n\t\t\tif ($fieldlist[$field]=='spacex')          { $valuetoshow=$langs->trans(\"SpaceX\"); }\n\t\t\tif ($fieldlist[$field]=='spacey')          { $valuetoshow=$langs->trans(\"SpaceY\"); }\n\t\t\tif ($fieldlist[$field]=='font_size')       { $valuetoshow=$langs->trans(\"FontSize\"); }\n\t\t\tif ($fieldlist[$field]=='custom_x')        { $valuetoshow=$langs->trans(\"CustomX\"); }\n\t\t\tif ($fieldlist[$field]=='custom_y')        { $valuetoshow=$langs->trans(\"CustomY\"); }\n\t\t\tif ($fieldlist[$field]=='percent')         { $valuetoshow=$langs->trans(\"Percentage\"); }\n\t\t\tif ($fieldlist[$field]=='affect')          { $valuetoshow=$langs->trans(\"WithCounter\"); }\n\t\t\tif ($fieldlist[$field]=='delay')           { $valuetoshow=$langs->trans(\"NoticePeriod\"); }\n\t\t\tif ($fieldlist[$field]=='newbymonth')      { $valuetoshow=$langs->trans(\"NewByMonth\"); }\n\t\t\tif ($fieldlist[$field]=='fk_tva')          { $valuetoshow=$langs->trans(\"VAT\"); }\n\t\t\tif ($fieldlist[$field]=='range_ik')        { $valuetoshow=$langs->trans(\"RangeIk\"); }\n\t\t\tif ($fieldlist[$field]=='fk_c_exp_tax_cat')  { $valuetoshow=$langs->trans(\"CarCategory\"); }\n\t\t\tif ($fieldlist[$field]=='revenuestamp_type') { $valuetoshow=$langs->trans('TypeOfRevenueStamp'); }\n\n            if ($id == 2)\t// Special cas for state page\n            {\n            \tif ($fieldlist[$field]=='region_id') { $valuetoshow='&nbsp;'; $showfield=1; }\n\t            if ($fieldlist[$field]=='region') { $valuetoshow=$langs->trans(\"Country\").'/'.$langs->trans(\"Region\"); $showfield=1; }\n            }\n\n            if ($valuetoshow != '')\n            {\n                print '<td'.($class?' class=\"'.$class.'\"':'').'>';\n            \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n            \telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n            \telse print $valuetoshow;\n                print '</td>';\n             }\n             if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n        }\n\n        if ($id == 4) print '<td></td>';\n        print '<td>';\n        print '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n        if (! is_null($withentity))\n        \tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$withentity.'\">';\n        print '</td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '</tr>';\n\n        // Line to enter new values\n        print '<!-- line to add new entry --><tr class=\"oddeven nodrag nodrop nohover\">';\n\n        $obj = new stdClass();\n        // If data was already input, we define them in obj to populate input fields.\n        if (GETPOST('actionadd'))\n        {\n            foreach ($fieldlist as $key=>$val)\n            {\n                if (GETPOST($val) != '')\n                \t$obj->$val=GETPOST($val);\n            }\n        }\n\n        $tmpaction = 'create';\n        $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n        $reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n        $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n        if ($id == 3) unset($fieldlist[2]); // Remove field ??? if dictionary Regions\n\n        if (empty($reshook))\n        {\n       \t\tfieldList($fieldlist, $obj, $tabname[$id], 'add');\n        }\n\n        if ($id == 4) print '<td></td>';\n        print '<td colspan=\"3\" align=\"center\">';\n        if ($action != 'edit')\n        {\n        \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n        }\n        print '</td>';\n        print \"</tr>\";\n\n        $colspan=count($fieldlist)+3;\n        if ($id == 4) $colspan++;\n\n        print '</table>';\n\t\tprint '</div>';\n    }\n\n    print '</form>';\n\n    print '<br>';\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n    // List of available record in database\n    dol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $num = $db->num_rows($resql);\n        $i = 0;\n\n        // There is several pages\n        if ($num > $listlimit || $page)\n        {\n            print_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n            print '<div class=\"clearboth\"></div>';\n        }\n\n\t    print '<div class=\"div-table-responsive\">';\n        print '<table class=\"noborder\" width=\"100%\">';\n\n        // Title line with search boxes\n        print '<tr class=\"liste_titre_filter\">';\n        $filterfound=0;\n        foreach ($fieldlist as $field => $value)\n        {\n        \tif ($fieldlist[$field] == 'entity') continue;\n\n            $showfield=1;\t// By default\n\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\n            if ($showfield)\n            {\n                if ($value == 'country')\n                {\n                    print '<td class=\"liste_titre\">';\n                    print $form->select_country($search_country_id, 'search_country_id', '', 28, 'maxwidth150 maxwidthonsmartphone');\n                    print '</td>';\n                    $filterfound++;\n                }\n                elseif ($value == 'code')\n                {\n                    print '<td class=\"liste_titre\">';\n                    print '<input type=\"text\" class=\"maxwidth100\" name=\"search_code\" value=\"'.dol_escape_htmltag($search_code).'\">';\n                    print '</td>';\n                    $filterfound++;\n                }\n                else\n                {\n                    print '<td class=\"liste_titre\">';\n                    print '</td>';\n                }\n            }\n        }\n        if ($id == 4) print '<td></td>';\n        print '<td class=\"liste_titre\"></td>';\n    \tprint '<td class=\"liste_titre\" colspan=\"2\" align=\"right\">';\n    \tif ($filterfound)\n    \t{\n        \t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n        \tprint $searchpicto;\n    \t}\n    \tprint '</td>';\n        print '</tr>';\n\n        // Title of lines\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n        \tif ($fieldlist[$field] == 'entity') continue;\n\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n            $align=\"left\";\n            $sortable=1;\n            $valuetoshow='';\n            /*\n            $tmparray=getLabelOfField($fieldlist[$field]);\n            $showfield=$tmp['showfield'];\n            $valuetoshow=$tmp['valuetoshow'];\n            $align=$tmp['align'];\n            $sortable=$tmp['sortable'];\n\t\t\t*/\n            $valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            if ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n            if ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n            if ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='center';\n            }\n            if ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n            if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n            if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n            if ($fieldlist[$field]=='position')        { $align='right'; }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n                //if ($id != 25) $valuetoshow=$form->textwithtooltip($langs->trans(\"Label\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n                //else $valuetoshow=$langs->trans(\"Label\");\n                $valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='libelle_facture') {\n                //$valuetoshow=$form->textwithtooltip($langs->trans(\"LabelOnDocuments\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n                $valuetoshow=$langs->trans(\"LabelOnDocuments\");\n            }\n            if ($fieldlist[$field]=='country')         { $valuetoshow=$langs->trans(\"Country\"); }\n            if ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $align=\"center\"; }\n            if ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n            if ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $align=\"center\"; }\n            if ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n            if ($fieldlist[$field]=='width' || $fieldlist[$field]=='nx') { $valuetoshow=$langs->trans(\"Width\"); }\n            if ($fieldlist[$field]=='height' || $fieldlist[$field]=='ny') { $valuetoshow=$langs->trans(\"Height\"); }\n            if ($fieldlist[$field]=='unit' || $fieldlist[$field]=='metric') { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n            if ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); $sortable=0; }\n            if ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='fk_pcg_version')  { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountsparent\"); }\n            if ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n            if ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n            if ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n            if ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\t\t\tif ($fieldlist[$field]=='paper_size')      { $valuetoshow=$langs->trans(\"PaperSize\"); }\n\t\t\tif ($fieldlist[$field]=='orientation')     { $valuetoshow=$langs->trans(\"Orientation\"); }\n\t\t\tif ($fieldlist[$field]=='leftmargin')      { $valuetoshow=$langs->trans(\"LeftMargin\"); }\n\t\t\tif ($fieldlist[$field]=='topmargin')       { $valuetoshow=$langs->trans(\"TopMargin\"); }\n\t\t\tif ($fieldlist[$field]=='spacex')          { $valuetoshow=$langs->trans(\"SpaceX\"); }\n\t\t\tif ($fieldlist[$field]=='spacey')          { $valuetoshow=$langs->trans(\"SpaceY\"); }\n\t\t\tif ($fieldlist[$field]=='font_size')       { $valuetoshow=$langs->trans(\"FontSize\"); }\n\t\t\tif ($fieldlist[$field]=='custom_x')        { $valuetoshow=$langs->trans(\"CustomX\"); }\n\t\t\tif ($fieldlist[$field]=='custom_y')        { $valuetoshow=$langs->trans(\"CustomY\"); }\n\t\t\tif ($fieldlist[$field]=='percent')         { $valuetoshow=$langs->trans(\"Percentage\"); }\n\t\t\tif ($fieldlist[$field]=='affect')          { $valuetoshow=$langs->trans(\"WithCounter\"); }\n\t\t\tif ($fieldlist[$field]=='delay')           { $valuetoshow=$langs->trans(\"NoticePeriod\"); }\n\t\t\tif ($fieldlist[$field]=='newbymonth')      { $valuetoshow=$langs->trans(\"NewByMonth\"); }\n\t\t\tif ($fieldlist[$field]=='fk_tva')          { $valuetoshow=$langs->trans(\"VAT\"); }\n\t\t\tif ($fieldlist[$field]=='range_ik')        { $valuetoshow=$langs->trans(\"RangeIk\"); }\n\t\t\tif ($fieldlist[$field]=='fk_c_exp_tax_cat')  { $valuetoshow=$langs->trans(\"CarCategory\"); }\n\t\t\tif ($fieldlist[$field]=='revenuestamp_type') { $valuetoshow=$langs->trans('TypeOfRevenueStamp'); }\n\n            // Affiche nom du champ\n            if ($showfield)\n            {\n                print getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n            }\n        }\n\t\t// Favorite - Only activated on country dictionary\n        if ($id == 4) print getTitleFieldOfList($langs->trans(\"Favorite\"), 0, $_SERVER[\"PHP_SELF\"], \"favorite\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n        print getTitleFieldOfList('');\n        print getTitleFieldOfList('');\n        print '</tr>';\n\n        if ($num)\n        {\n            // Lines with values\n            while ($i < $num)\n            {\n                $obj = $db->fetch_object($resql);\n                //print_r($obj);\n                print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n                if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n                {\n                    $tmpaction='edit';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    // Show fields\n                    if (empty($reshook)) {\n                    \t$withentity = fieldList($fieldlist, $obj, $tabname[$id], 'edit');\n                    }\n\n                    print '<td colspan=\"3\" align=\"center\">';\n                    print '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n                    print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n                    print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n                    if (! is_null($withentity))\n                    \tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$withentity.'\">';\n                    print '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                    print '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n                    print '</td>';\n                }\n                else\n                {\n\t              \t$tmpaction = 'view';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook))\n                    {\n                    \t$withentity=null;\n\n                        foreach ($fieldlist as $field => $value)\n                        {\n                        \t//var_dump($fieldlist);\n                        \t$showfield=1;\n                        \t$align=\"left\";\n                        \t$valuetoshow=$obj->{$fieldlist[$field]};\n\n                        \tif ($fieldlist[$field] == 'entity') {\n                        \t\t$withentity = $valuetoshow;\n                        \t\tcontinue;\n                        \t}\n\n                            if ($value == 'element')\n                            {\n                                $valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n                            }\n                            else if ($value == 'source')\n                            {\n                                $valuetoshow = isset($sourceList[$valuetoshow])?$sourceList[$valuetoshow]:$valuetoshow;\n                            }\n                            else if ($valuetoshow=='all') {\n                                $valuetoshow=$langs->trans('All');\n                            }\n                            else if ($fieldlist[$field]=='country') {\n                                if (empty($obj->country_code))\n                                {\n                                    $valuetoshow='-';\n                                }\n                                else\n                                {\n                                    $key=$langs->trans(\"Country\".strtoupper($obj->country_code));\n                                    $valuetoshow=($key != \"Country\".strtoupper($obj->country_code)?$obj->country_code.\" - \".$key:$obj->country);\n                                }\n                            }\n                            else if ($fieldlist[$field]=='recuperableonly' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n                                $valuetoshow=yn($valuetoshow);\n                                $align=\"center\";\n                            }\n                            else if ($fieldlist[$field]=='type_cdr') {\n                \t\t\t\tif(empty($valuetoshow)) $valuetoshow = $langs->trans('None');\n                \t\t\t\telseif($valuetoshow == 1) $valuetoshow = $langs->trans('AtEndOfMonth');\n                \t\t\t\telseif($valuetoshow == 2) $valuetoshow = $langs->trans('CurrentNext');\n                                $align=\"center\";\n                            }\n                            else if ($fieldlist[$field]=='price' || preg_match('/^amount/i',$fieldlist[$field])) {\n                                $valuetoshow=price($valuetoshow);\n                            }\n                            if ($value == 'private')\n                            {\n                                $valuetoshow = yn($elementList[$valuetoshow]);\n                            }\n                            else if ($fieldlist[$field]=='libelle_facture') {\n                                $langs->load(\"bills\");\n                                $key=$langs->trans(\"PaymentCondition\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"PaymentCondition\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                                $valuetoshow=nl2br($valuetoshow);\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_country') {\n                                $key=$langs->trans(\"Country\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Country\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_availability') {\n                                $langs->load(\"propal\");\n                                $key=$langs->trans(\"AvailabilityType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"AvailabilityType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_actioncomm') {\n                                $key=$langs->trans(\"Action\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Action\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if (! empty($obj->code_iso) && $fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_currencies') {\n                                $key=$langs->trans(\"Currency\".strtoupper($obj->code_iso));\n                                $valuetoshow=($obj->code_iso && $key != \"Currency\".strtoupper($obj->code_iso)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_typent') {\n                                $key=$langs->trans(strtoupper($obj->code));\n                                $valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_prospectlevel') {\n                                $key=$langs->trans(strtoupper($obj->code));\n                                $valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_civility') {\n                                $key=$langs->trans(\"Civility\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Civility\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_type_contact') {\n                            \t$langs->load('agenda');\n                                $key=$langs->trans(\"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_payment_term') {\n                                $langs->load(\"bills\");\n                                $key=$langs->trans(\"PaymentConditionShort\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"PaymentConditionShort\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paiement') {\n                                $langs->load(\"bills\");\n                                $key=$langs->trans(\"PaymentType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"PaymentType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_reason') {\n                                $key=$langs->trans(\"DemandReasonType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"DemandReasonType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_method') {\n                                $langs->load(\"orders\");\n                                $key=$langs->trans($obj->code);\n                                $valuetoshow=($obj->code && $key != $obj->code)?$key:$obj->{$fieldlist[$field]};\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_shipment_mode') {\n                                $langs->load(\"sendings\");\n                                $key=$langs->trans(\"SendingMethod\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"SendingMethod\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field] == 'libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paper_format')\n                            {\n                                $key = $langs->trans('PaperFormat'.strtoupper($obj->code));\n                                $valuetoshow = ($obj->code && $key != 'PaperFormat'.strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field] == 'label' && $tabname[$id] == MAIN_DB_PREFIX.'c_type_fees')\n                            {\n                                $langs->load('trips');\n                                $key = $langs->trans(strtoupper($obj->code));\n                                $valuetoshow = ($obj->code && $key != strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') {\n                                $showfield=0;\n                            }\n                            else if ($fieldlist[$field]=='unicode') {\n                            \t$valuetoshow = $langs->getCurrencySymbol($obj->code,1);\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t                            $langs->load(\"products\");\n\t                            $valuetoshow=$langs->trans($obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='short_label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t                            $langs->load(\"products\");\n\t                            $valuetoshow = $langs->trans($obj->{$fieldlist[$field]});\n                            }\n                            else if (($fieldlist[$field] == 'unit') && ($tabname[$id] == MAIN_DB_PREFIX.'c_paper_format'))\n                            {\n                            \t$key = $langs->trans('SizeUnit'.strtolower($obj->unit));\n                                $valuetoshow = ($obj->code && $key != 'SizeUnit'.strtolower($obj->unit) ? $key : $obj->{$fieldlist[$field]});\n                            }\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='localtax1' || $fieldlist[$field]=='localtax2') {\n\t\t\t\t\t\t\t    $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='localtax1_type') {\n                              if ($obj->localtax1 != 0)\n\t\t\t\t\t\t\t    $valuetoshow=$localtax_typeList[$valuetoshow];\n\t\t\t\t\t\t\t  else\n\t\t\t\t\t\t\t    $valuetoshow = '';\n\t\t\t\t\t\t\t  $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='localtax2_type') {\n\t\t\t\t\t\t\t if ($obj->localtax2 != 0)\n\t\t\t\t\t\t\t    $valuetoshow=$localtax_typeList[$valuetoshow];\n\t\t\t\t\t\t\t  else\n\t\t\t\t\t\t\t    $valuetoshow = '';\n\t\t\t\t\t\t\t  $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='taux') {\n                                $valuetoshow = price($valuetoshow, 0, $langs, 0, 0);\n\t\t\t\t\t\t\t    $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (in_array($fieldlist[$field],array('recuperableonly')))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='accountancy_code' || $fieldlist[$field]=='accountancy_code_sell' || $fieldlist[$field]=='accountancy_code_buy') {\n                                $valuetoshow = length_accountg($valuetoshow);\n                            }\n\t\t\t\t\t\t\telseif ($fieldlist[$field] == 'fk_tva')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach ($form->cache_vatrates as $key => $Tab)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif ($form->cache_vatrates[$key]['rowid'] == $valuetoshow)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$valuetoshow = $form->cache_vatrates[$key]['libtva'];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telseif ($fieldlist[$field] == 'fk_c_exp_tax_cat')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = getDictvalue(MAIN_DB_PREFIX.'c_exp_tax_cat', 'label', $valuetoshow);\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->trans($valuetoshow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telseif ($tabname[$id] == MAIN_DB_PREFIX.'c_exp_tax_cat')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->trans($valuetoshow);\n\t\t\t\t\t\t\t}\n\n                            $class='tddict';\n                            if ($fieldlist[$field] == 'note' && $id == 10) $class.=' tdoverflowmax200';\n                            if ($fieldlist[$field] == 'tracking') $class.=' tdoverflowauto';\n                            if ($fieldlist[$field] == 'code') $class.=' width100';\n                            if ($fieldlist[$field] == 'position') $class.=' right';\n                            if ($fieldlist[$field] == 'localtax1_type') $class.=' nowrap';\n                            if ($fieldlist[$field] == 'localtax2_type') $class.=' nowrap';\n                            // Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n                        }\n                    }\n\n                    // Can an entry be erased or disabled ?\n                    $iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n                    if (isset($obj->code) && $id != 10)\n                    {\n                    \tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n                    \telse if ($obj->code == 'RECEP') { $iserasable = 0; $canbedisabled = 0; }\n                    \telse if ($obj->code == 'EF0')   { $iserasable = 0; $canbedisabled = 0; }\n                    }\n\n                    if (isset($obj->type) && in_array($obj->type, array('system', 'systemauto'))) { $iserasable=0; }\n                    if (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO')) || in_array($obj->type, array('systemauto'))) { $canbedisabled=0; $canbedisabled = 0; }\n                    $canbemodified=$iserasable;\n                    if ($obj->code == 'RECEP') $canbemodified=1;\n                    if ($tabname[$id] == MAIN_DB_PREFIX.\"c_actioncomm\") $canbemodified=1;\n\n                    // Url\n                    $rowidcol=$tabrowid[$id];\n                    // If rowidcol not defined\n                    if (empty($rowidcol) || in_array($id, array(6,7,8,13,17,19,27))) $rowidcol='rowid';\n                    $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.((! empty($obj->{$rowidcol}) || $obj->{$rowidcol} == '0')?$obj->{$rowidcol}:(! empty($obj->code)?urlencode($obj->code):'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n                    if (! empty($param)) $url .= '&'.$param;\n                    if (! is_null($withentity)) $url .= '&entity='.$withentity;\n                    $url.='&';\n\n\t\t\t\t\t// Favorite\n\t\t\t\t\t// Only activated on country dictionary\n                    if ($id == 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\t\t\t\tif ($iserasable) print '<a href=\"'.$url.'action='.$acts[$obj->favorite].'_favorite\">'.$actl[$obj->favorite].'</a>';\n\t\t\t\t\t\telse print $langs->trans(\"AlwaysActive\");\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t}\n\n                    // Active\n                    print '<td align=\"center\" class=\"nowrap\">';\n                    if ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n                    else\n                 \t{\n                 \t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO'))) print $langs->trans(\"AlwaysActive\");\n                 \t\telse if (isset($obj->type) && in_array($obj->type, array('systemauto')) && empty($obj->active)) print $langs->trans(\"Deprecated\");\n                  \t\telse if (isset($obj->type) && in_array($obj->type, array('system')) && ! empty($obj->active) && $obj->code != 'AC_OTH') print $langs->trans(\"UsedOnlyWithTypeOption\");\n                    \telse print $langs->trans(\"AlwaysActive\");\n                    }\n                    print \"</td>\";\n\n                    // Modify link\n                    if ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n                    else print '<td>&nbsp;</td>';\n\n                    // Delete link\n                    if ($iserasable)\n                    {\n                        print '<td align=\"center\">';\n                        if ($user->admin) print '<a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n                        //else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n                        print '</td>';\n                    }\n                    else print '<td>&nbsp;</td>';\n\n                    print \"</tr>\\n\";\n                }\n                $i++;\n            }\n        }\n\n        print '</table>';\n        print '</div>';\n    }\n    else {\n        dol_print_error($db);\n    }\n\n\n    print '</form>';\n}\nelse\n{\n    /*\n     * Show list of dictionary to show\n     */\n\n    $lastlineisempty=false;\n\n\tprint '<div class=\"div-table-responsive-no-min\">';\n    print '<table class=\"noborder\" width=\"100%\">';\n    print '<tr class=\"liste_titre\">';\n    //print '<td>'.$langs->trans(\"Module\").'</td>';\n    print '<td colspan=\"2\">'.$langs->trans(\"Dictionary\").'</td>';\n    print '<td>'.$langs->trans(\"Table\").'</td>';\n    print '</tr>';\n\n    $showemptyline='';\n    foreach ($taborder as $i)\n    {\n        if (isset($tabname[$i]) && empty($tabcond[$i])) continue;\n\n        if ($i)\n        {\n        \tif ($showemptyline)\n        \t{\n\n        \t\tprint '<tr class=\"oddeven\"><td width=\"30%\">&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>';\n        \t\t$showemptyline=0;\n        \t}\n\n\n            $value=$tabname[$i];\n            print '<tr class=\"oddeven\"><td width=\"50%\">';\n            if (! empty($tabcond[$i]))\n            {\n                print '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$i.'\">'.$langs->trans($tablib[$i]).'</a>';\n            }\n            else\n            {\n                print $langs->trans($tablib[$i]);\n            }\n            print '</td>';\n            print '<td>';\n            /*if (empty($tabcond[$i]))\n             {\n             print info_admin($langs->trans(\"DictionaryDisabledSinceNoModuleNeedIt\"),1);\n             }*/\n            print '</td>';\n            print '<td>'.$tabname[$i].'</td></tr>';\n            $lastlineisempty=false;\n        }\n        else\n        {\n            if (! $lastlineisempty)\n            {\n                $showemptyline=1;\n                $lastlineisempty=true;\n            }\n        }\n    }\n    print '</table>';\n    print '</div>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tstring\t\t\t\t\t\t'' or value of entity into table\n */\nfunction fieldList($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db,$mysoc;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\tif (! empty($conf->accounting->enabled)) $formaccounting = new FormAccounting($db);\n\n\t$withentity='';\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'entity') {\n\t\t\t$withentity = $obj->{$fieldlist[$field]};\n\t\t\tcontinue;\n\t\t}\n\n\t    if (in_array($fieldlist[$field], array('code', 'libelle', 'type')) && $tabname == MAIN_DB_PREFIX.\"c_actioncomm\" && in_array($obj->type, array('system','systemauto')))\n        {\n            $hidden = (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'');\n            print '<td>';\n            print '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$hidden.'\">';\n            print $langs->trans($hidden);\n            print '</td>';\n        }\n\t    elseif ($fieldlist[$field] == 'country')\n\t\t{\n\t\t\tif (in_array('region_id',$fieldlist))\n\t\t\t{\n\t\t\t\tprint '<td>';\n\t\t\t\t//print join(',',$fieldlist);\n\t\t\t\tprint '</td>';\n\t\t\t\tcontinue;\n\t\t\t}\t// For state page, we do not show the country input (we link to region, not country)\n\t\t\tprint '<td>';\n\t\t\t$fieldname='country';\n\t\t\tprint $form->select_country((! empty($obj->country_code)?$obj->country_code:(! empty($obj->country)?$obj->country:'')), $fieldname, '', 28, 'maxwidth150 maxwidthonsmartphone');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'country_id')\n\t\t{\n\t\t\tif (! in_array('country',$fieldlist))\t// If there is already a field country, we don't show country_id (avoid duplicate)\n\t\t\t{\n\t\t\t\t$country_id = (! empty($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : 0);\n\t\t\t\tprint '<td class=\"tdoverflowmax100\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$country_id.'\">';\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$formcompany->select_region($region_id,'region');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region_id')\n\t\t{\n\t\t\t$region_id = (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:0);\n\t\t\tprint '<td>';\n\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$region_id.'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $formadmin->select_language($conf->global->MAIN_LANG_DEFAULT,'lang');\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'element')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('element', $elementList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\t// La source de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'source')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('source', $sourceList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'private')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectyesno(\"private\",(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'type' && $tabname == MAIN_DB_PREFIX.\"c_actioncomm\")\n\t\t{\n\t\t\t$type = (! empty($obj->type)?$obj->type:'user'); // Check if type is different of 'user' (external module)\n\t\t\tprint '<td>';\n\t\t\tprint $type.'<input type=\"hidden\" name=\"type\" value=\"'.$type.'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'recuperableonly' || $fieldlist[$field] == 'type_cdr' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n\t\t    if ($fieldlist[$field] == 'type_cdr') print '<td align=\"center\">';\n\t\t    else print '<td>';\n\t\t\tif ($fieldlist[$field] == 'type_cdr') {\n\t\t\t\tprint $form->selectarray($fieldlist[$field], array(0=>$langs->trans('None'), 1=>$langs->trans('AtEndOfMonth'), 2=>$langs->trans('CurrentNext')), (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\t} else {\n\t\t\t\tprint $form->selectyesno($fieldlist[$field],(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''),1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field],array('nbjour','decalage','taux','localtax1','localtax2'))) {\n\t\t\t$align=\"left\";\n\t\t\tif (in_array($fieldlist[$field],array('taux','localtax1','localtax2'))) $align=\"center\";\t// Fields aligned on right\n\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\tprint '<input type=\"text\" class=\"flat\" value=\"'.(isset($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : '').'\" size=\"3\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field], array('libelle_facture'))) {\n\t\t    print '<td>';\n\t\t    $transfound=0;\n\t        // Special case for labels\n\t        if ($tabname == MAIN_DB_PREFIX.'c_payment_term')\n\t        {\n\t            $langs->load(\"bills\");\n\t            $transkey=\"PaymentCondition\".strtoupper($obj->code);\n    \t        if ($langs->trans($transkey) != $transkey)\n                {\n                    $transfound=1;\n                    print $form->textwithpicto($langs->trans($transkey), $langs->trans(\"GoIntoTranslationMenuToChangeThis\"));\n                }\n\t        }\n\t\t    if (! $transfound)\n\t\t    {\n\t\t        print '<textarea cols=\"30\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea>';\n\t\t    }\n\t\t    print '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'price' || preg_match('/^amount/i',$fieldlist[$field])) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat minwidth75\" value=\"'.price((! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'')).'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td class=\"maxxxx\"><input type=\"text\" class=\"flat minwidth75\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field]=='unit') {\n\t\t\tprint '<td>';\n\t\t\t$units = array(\n\t\t\t\t\t'mm' => $langs->trans('SizeUnitmm'),\n\t\t\t\t\t'cm' => $langs->trans('SizeUnitcm'),\n\t\t\t\t\t'point' => $langs->trans('SizeUnitpoint'),\n\t\t\t\t\t'inch' => $langs->trans('SizeUnitinch')\n\t\t\t);\n\t\t\tprint $form->selectarray('unit', $units, (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), 0, 0, 0);\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de taxe locale\n\t\telseif ($fieldlist[$field] == 'localtax1_type' || $fieldlist[$field] == 'localtax2_type')\n\t\t{\n\t\t\tprint '<td align=\"center\">';\n\t\t\tprint $form->selectarray($fieldlist[$field], $localtax_typeList, (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'accountancy_code' || $fieldlist[$field] == 'accountancy_code_sell' || $fieldlist[$field] == 'accountancy_code_buy')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t    $fieldname = $fieldlist[$field];\n\t\t\t\t$accountancy_account = (! empty($obj->$fieldname) ? $obj->$fieldname : 0);\n\t\t\t\tprint $formaccounting->select_account($accountancy_account, '.'.$fieldlist[$field], 1, '', 1, 1, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    $fieldname = $fieldlist[$field];\n\t\t\t    print '<input type=\"text\" size=\"10\" class=\"flat\" value=\"'.(isset($obj->$fieldname)?$obj->$fieldname:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'fk_tva')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->load_tva('fk_tva', $obj->taux, $mysoc, new Societe($db), 0, 0, '', false, -1);\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'fk_c_exp_tax_cat')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectExpenseCategories($obj->fk_c_exp_tax_cat);\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'fk_range')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectExpenseRanges($obj->fk_range);\n\t\t\tprint '</td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($fieldlist[$field]=='sortorder') $fieldlist[$field]='position';\n\n\t\t\t$classtd=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code') $classtd='width100';\n\t\t\tif ($fieldlist[$field]=='affect') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='delay') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='position') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='tracking') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $class='maxwidth50';\n\t\t\tprint '<td class=\"'.$classtd.'\">';\n\t\t\t$transfound=0;\n\t\t\tif (in_array($fieldlist[$field], array('label','libelle')))\n\t\t\t{\n\t\t\t    $transkey='';\n\t\t\t    // Special case for labels\n\t\t\t    if ($tabname == MAIN_DB_PREFIX.'c_civility') {\n\t\t\t        $transkey=\"Civility\".strtoupper($obj->code);\n\t\t\t    }\n\t\t\t    if ($tabname == MAIN_DB_PREFIX.'c_payment_term') {\n\t\t\t        $langs->load(\"bills\");\n\t\t\t        $transkey=\"PaymentCondition\".strtoupper($obj->code);\n\t\t\t    }\n\t\t\t    if ($transkey && $langs->trans($transkey) != $transkey)\n\t\t\t    {\n\t\t\t        $transfound=1;\n\t\t\t        print $form->textwithpicto($langs->trans($transkey), $langs->trans(\"GoIntoTranslationMenuToChangeThis\"));\n\t\t\t    }\n\t\t\t}\n\t\t\tif (! $transfound)\n\t\t\t{\n                print '<input type=\"text\" class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t}\n\n\treturn $withentity;\n}\n\n", "<?php\n/* Copyright (C) 2004       Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2012  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2011-2017  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Remy Younes             <ryounes@gmail.com>\n * Copyright (C) 2012-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@ltairis.fr>\n * Copyright (C) 2011-2016  Alexandre Spangaro      <aspangaro.dolibarr@gmail.com>\n * Copyright (C) 2015       Ferran Marcet           <fmarcet@2byte.es>\n * Copyright (C) 2016       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/admin/mails_templates.php\n *\t\t\\ingroup    core\n *\t\t\\brief      Page to administer emails templates\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\n\n// Load traductions files requiredby by page\n$langs->loadLangs(array(\"errors\",\"admin\",\"mails\",\"languages\"));\n\n$action     = GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm    = GETPOST('confirm','alpha');\t\t\t\t\t\t\t\t\t\t\t\t// Result of a confirmation\n\n$id\t\t\t= GETPOST('id','int');\n$rowid\t\t= GETPOST('rowid','alpha');\n$search_label=GETPOST('search_label','alpha');\n$search_type_template=GETPOST('search_type_template','alpha');\n$search_lang=GETPOST('search_lang','alpha');\n$search_fk_user=GETPOST('search_fk_user','intcomma');\n$search_topic=GETPOST('search_topic','alpha');\n\nif (! empty($user->socid)) accessforbidden();\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset','alpha');\n$listlimit =GETPOST('listlimit','alpha')>0?GETPOST('listlimit','alpha'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\nif (empty($sortfield)) $sortfield='label, lang, position';\nif (empty($sortorder)) $sortorder='ASC';\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('emailtemplates'));\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[25]= MAIN_DB_PREFIX.\"c_email_templates\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[25]=\"label ASC, lang ASC, position ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[25]= \"label,type_template,lang,fk_user,private,position,topic,joinfiles,content\";\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) $tabfield[25].=',content_lines';\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[25]= \"label,type_template,fk_user,lang,private,position,topic,joinfiles,content\";\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) $tabfieldvalue[25].=',content_lines';\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[25]= \"label,type_template,fk_user,lang,private,position,topic,joinfiles,content\";\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) $tabfieldinsert[25].=',content_lines';\n$tabfieldinsert[25].=',entity';     // Must be at end because not into other arrays\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[25]= true;\n\n// List of help for fields\n// Set MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES to allow edit of template for lines\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n$formmail=new FormMail($db);\nif (empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES))\n{\n    $tmp=FormMail::getAvailableSubstitKey('formemail');\n    $tmp['__(AnyTranslationKey)__']='Translation';\n    $helpsubstit = $langs->trans(\"AvailableVariables\").':<br>';\n    $helpsubstitforlines = $langs->trans(\"AvailableVariables\").':<br>';\n    foreach($tmp as $key => $val)\n    {\n    \t$helpsubstit.=$key.' -> '.$val.'<br>';\n    \t$helpsubstitforlines.=$key.' -> '.$val.'<br>';\n    }\n}\nelse\n{\n    $tmp=FormMail::getAvailableSubstitKey('formemailwithlines');\n    $tmp['__(AnyTranslationKey)__']='Translation';\n    $helpsubstit = $langs->trans(\"AvailableVariables\").':<br>';\n    $helpsubstitforlines = $langs->trans(\"AvailableVariables\").':<br>';\n    foreach($tmp as $key => $val)\n    {\n    \t$helpsubstit.=$key.' -> '.$val.'<br>';\n    }\n    $tmp=FormMail::getAvailableSubstitKey('formemailforlines');\n    foreach($tmp as $key => $val)\n    {\n    \t$helpsubstitforlines.=$key.' -> '.$val.'<br>';\n    }\n}\n\n\n$tabhelp=array();\n$tabhelp[25] = array('topic'=>$helpsubstit,'joinfiles'=>$langs->trans('AttachMainDocByDefault'), 'content'=>$helpsubstit,'content_lines'=>$helpsubstitforlines,'type_template'=>$langs->trans(\"TemplateForElement\"),'private'=>$langs->trans(\"TemplateIsVisibleByOwnerOnly\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[25] = array();\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n// We save list of template email Dolibarr can manage. This list can found by a grep into code on \"->param['models']\"\n$elementList = array();\nif ($conf->propal->enabled)            $elementList['propal_send']=$langs->trans('MailToSendProposal');\nif ($conf->commande->enabled)          $elementList['order_send']=$langs->trans('MailToSendOrder');\nif ($conf->facture->enabled)           $elementList['facture_send']=$langs->trans('MailToSendInvoice');\nif ($conf->expedition->enabled)        $elementList['shipping_send']=$langs->trans('MailToSendShipment');\nif ($conf->ficheinter->enabled)        $elementList['fichinter_send']=$langs->trans('MailToSendIntervention');\nif ($conf->supplier_proposal->enabled) $elementList['supplier_proposal_send']=$langs->trans('MailToSendSupplierRequestForQuotation');\nif ($conf->fournisseur->enabled)       $elementList['order_supplier_send']=$langs->trans('MailToSendSupplierOrder');\nif ($conf->fournisseur->enabled)       $elementList['invoice_supplier_send']=$langs->trans('MailToSendSupplierInvoice');\nif ($conf->societe->enabled)           $elementList['thirdparty']=$langs->trans('MailToThirdparty');\nif ($conf->adherent->enabled)          $elementList['member']=$langs->trans('MailToMember');\nif ($conf->contrat->enabled)           $elementList['contract']=$langs->trans('MailToSendContract');\n$elementList['user']=$langs->trans('MailToUser');\n$elementList['all'] =$langs->trans('VisibleEverywhere');\n$elementList['none']=$langs->trans('VisibleNowhere');\n\n\n$parameters=array('elementList'=>$elementList);\n$reshook=$hookmanager->executeHooks('emailElementlist',$parameters);    // Note that $action and $object may have been modified by some hooks\nif ($reshook == 0) {\n\tforeach ($hookmanager->resArray as $item => $value) {\n\t\t$elementList[$item] = $value;\n\t}\n}\n\n$id = 25;\n\n\n/*\n * Actions\n */\n\nif (GETPOST('cancel','alpha')) { $action='list'; $massaction=''; }\nif (! GETPOST('confirmmassaction','alpha') && $massaction != 'presend' && $massaction != 'confirm_presend') { $massaction=''; }\n\n$parameters=array();\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n    // Purge search criteria\n    if (GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter.x','alpha') ||GETPOST('button_removefilter','alpha')) // All tests are required to be compatible with all browsers\n    {\n        $search_label='';\n        $search_type_template='';\n        $search_lang='';\n        $search_fk_user='';\n        $search_topic='';\n        $toselect='';\n        $search_array_options=array();\n    }\n\n    // Actions add or modify an entry into a dictionary\n    if (GETPOST('actionadd') || GETPOST('actionmodify'))\n    {\n        $listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n        $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n        $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n        $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n        // Check that all fields are filled\n        $ok=1;\n        foreach ($listfield as $f => $value)\n        {\n        \t// Not mandatory fields\n            if ($value == 'joinfiles') continue;\n            if ($value == 'content') continue;\n            if ($value == 'content_lines') continue;\n\n            if (GETPOST('actionmodify') && $value == 'topic') $_POST['topic']=$_POST['topic-'.$rowid];\n\n            if ((! isset($_POST[$value]) || $_POST[$value]=='' || $_POST[$value]=='-1') && $value != 'lang' && $value != 'fk_user' && $value != 'position')\n            {\n                $ok=0;\n                $fieldnamekey=$listfield[$f];\n                // We take translate key of field\n                if ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n                if ($fieldnamekey == 'libelle_facture') $fieldnamekey = 'LabelOnDocuments';\n                if ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n                if ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n                if ($fieldnamekey == 'type_template') $fieldnamekey = 'TypeOfTemplate';\n                if ($fieldnamekey == 'fk_user') $fieldnamekey = 'Owner';\n                if ($fieldnamekey == 'private') $fieldnamekey = 'Private';\n                if ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n                if ($fieldnamekey == 'topic') $fieldnamekey = 'Topic';\n\n                setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n            }\n        }\n\n        // Si verif ok et action add, on ajoute la ligne\n        if ($ok && GETPOST('actionadd'))\n        {\n            // Add new entry\n            $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n            // List of fields\n            $sql.= $tabfieldinsert[$id];\n            $sql.=\",active)\";\n            $sql.= \" VALUES(\";\n\n            // List of values\n            $i=0;\n            foreach ($listfieldinsert as $f => $value)\n            {\n            \t//var_dump($i.' - '.$listfieldvalue[$i].' - '.$_POST[$listfieldvalue[$i]].' - '.$value);\n            \t$keycode=$listfieldvalue[$i];\n            \tif ($value == 'lang') $keycode='langcode';\n                if ($value == 'entity') $_POST[$keycode] = $conf->entity;\n                if ($i) $sql.=\",\";\n                if ($value == 'fk_user' && ! ($_POST[$keycode] > 0)) $_POST[$keycode]='';\n                if ($value == 'private' && ! is_numeric($_POST[$keycode])) $_POST[$keycode]='0';\n                if ($value == 'position' && ! is_numeric($_POST[$keycode])) $_POST[$keycode]='1';\n                if ($_POST[$keycode] == '' && $keycode != 'langcode') $sql.=\"null\";\t\t// lang must be '' if not defined so the unique key that include lang will work\n                elseif ($_POST[$keycode] == '0' && $keycode == 'langcode') $sql.=\"null\";\n                else $sql.=\"'\".$db->escape($_POST[$keycode]).\"'\";\n                $i++;\n            }\n            $sql.=\",1)\";\n\n            dol_syslog(\"actionadd\", LOG_DEBUG);\n            $result = $db->query($sql);\n            if ($result)\t// Add is ok\n            {\n                setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n            \t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n            }\n            else\n            {\n                if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                    setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n                }\n                else {\n                    dol_print_error($db);\n                }\n            }\n        }\n\n        // Si verif ok et action modify, on modifie la ligne\n        if ($ok && GETPOST('actionmodify'))\n        {\n            $rowidcol=\"rowid\";\n\n            // Modify entry\n            $sql = \"UPDATE \".$tabname[$id].\" SET \";\n            // Modifie valeur des champs\n            $i = 0;\n            foreach ($listfieldmodify as $field)\n            {\n            \t$keycode=$listfieldvalue[$i];\n            \tif ($field == 'lang') $keycode='langcode';\n\n                if ($field == 'fk_user' && ! ($_POST['fk_user'] > 0)) $_POST['fk_user']='';\n            \tif ($field == 'topic') $_POST['topic']=$_POST['topic-'.$rowid];\n            \tif ($field == 'joinfiles') $_POST['joinfiles']=$_POST['joinfiles-'.$rowid];\n            \tif ($field == 'content') $_POST['content']=$_POST['content-'.$rowid];\n            \tif ($field == 'content_lines') $_POST['content_lines']=$_POST['content_lines-'.$rowid];\n                if ($field == 'entity') $_POST[$keycode] = $conf->entity;\n                if ($i) $sql.=\",\";\n                $sql.= $field.\"=\";\n                if ($_POST[$keycode] == '' || ($keycode == 'langcode' && empty($_POST[$keycode]))) $sql.=\"null\";  // For vat, we want/accept code = ''\n                else $sql.=\"'\".$db->escape($_POST[$keycode]).\"'\";\n                $i++;\n            }\n            $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n            dol_syslog(\"actionmodify\", LOG_DEBUG);\n            //print $sql;\n            $resql = $db->query($sql);\n            if ($resql)\n            {\n            \tsetEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n            }\n            else\n            {\n                setEventMessages($db->error(), null, 'errors');\n            }\n        }\n    }\n\n    if ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n    {\n        $rowidcol=\"rowid\";\n\n        $sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n        dol_syslog(\"delete\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if (! $result)\n        {\n            if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n            {\n                setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n            }\n            else\n            {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // activate\n    if ($action == $acts[0])\n    {\n        $rowidcol=\"rowid\";\n\n        $sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n        $result = $db->query($sql);\n        if (!$result)\n        {\n            dol_print_error($db);\n        }\n    }\n\n    // disable\n    if ($action == $acts[1])\n    {\n        $rowidcol=\"rowid\";\n\n        $sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n        $result = $db->query($sql);\n        if (!$result)\n        {\n            dol_print_error($db);\n        }\n    }\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans(\"EMailsSetup\");\n$linkback='';\n$titlepicto='title_setup';\n\nprint load_fiche_titre($titre,$linkback,$titlepicto);\n\n$head = email_admin_prepare_head();\n\ndol_fiche_head($head, 'templates', '', -1);\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n\n$sql=\"SELECT rowid as rowid, label, type_template, lang, fk_user, private, position, topic, joinfiles, content_lines, content, active\";\n$sql.=\" FROM \".MAIN_DB_PREFIX.\"c_email_templates\";\n$sql.=\" WHERE entity IN (\".getEntity('email_template').\")\";\nif (! $user->admin)\n{\n\t$sql.=\" AND (private = 0 OR (private = 1 AND fk_user = \".$user->id.\"))\";\t// Show only public and private to me\n\t$sql.=\" AND (active = 1 OR fk_user = \".$user->id.\")\";\t\t\t\t\t\t// Show only active or owned by me\n}\nif (empty($conf->global->MAIN_MULTILANGS))\n{\n\t$sql.= \" AND (lang = '\".$langs->defaultlang.\"' OR lang IS NULL OR lang = '')\";\n}\nif ($search_label) $sql.=natural_search('label', $search_label);\nif ($search_type_template != '' && $search_type_template != '-1') $sql.=natural_search('type_template', $search_type_template);\nif ($search_lang) $sql.=natural_search('lang', $search_lang);\nif ($search_fk_user != '' && $search_fk_user != '-1') $sql.=natural_search('fk_user', $search_fk_user, 2);\nif ($search_topic) $sql.=natural_search('topic', $search_topic);\nif ($sortfield)\n{\n    // If sort order is \"country\", we use country_code instead\n\tif ($sortfield == 'country') $sortfield='country_code';\n    $sql.= \" ORDER BY \".$sortfield;\n    if ($sortorder)\n    {\n        $sql.=\" \".strtoupper($sortorder);\n    }\n    $sql.=\", \";\n    // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n    $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n    $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n}\nelse {\n    $sql.=\" ORDER BY \";\n}\n$sql.=$tabsqlsort[$id];\n$sql.=$db->plimit($listlimit+1,$offset);\n//print $sql;\n\n$fieldlist=explode(',',$tabfield[$id]);\n\n// Form to add a new line\n$alabelisused=0;\n$var=false;\n\nprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\nprint '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\nprint '<div class=\"div-table-responsive-no-min\">';\nprint '<table class=\"noborder\" width=\"100%\">';\n\n// Line to enter new values (title)\nprint '<tr class=\"liste_titre\">';\nforeach ($fieldlist as $field => $value)\n{\n        // Determine le nom du champ par rapport aux noms possibles\n        // dans les dictionnaires de donnees\n        $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n        $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n        $align=\"left\";\n        if ($fieldlist[$field]=='fk_user')         { $valuetoshow=$langs->trans(\"Owner\");}\n        if ($fieldlist[$field]=='lang')            { $valuetoshow=(empty($conf->global->MAIN_MULTILANGS) ? '&nbsp;' : $langs->trans(\"Language\")); }\n        if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n        if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n        if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') { $valuetoshow=$langs->trans(\"Label\"); }\n        if ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n    \tif ($fieldlist[$field]=='private')         { $align='center'; }\n    \tif ($fieldlist[$field]=='position')        { $align='center'; }\n\n    \tif ($fieldlist[$field]=='topic')           { $valuetoshow=''; }\n    \tif ($fieldlist[$field]=='joinfiles')       { $valuetoshow=''; }\n    \tif ($fieldlist[$field]=='content')         { $valuetoshow=''; }\n    \tif ($fieldlist[$field]=='content_lines')   { $valuetoshow=''; }\n\n        if ($valuetoshow != '')\n        {\n            print '<td align=\"'.$align.'\">';\n        \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n        \telse if (! empty($tabhelp[$id][$value]))\n        \t{\n        \t    if (in_array($value, array('topic'))) print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, $value);   // Tooltip on click\n        \t    else print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2);                             // Tooltip on hover\n        \t}\n        \telse print $valuetoshow;\n            print '</td>';\n         }\n         if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n}\nprint '<td>';\nprint '<input type=\"hidden\" name=\"id\" value=\"' . $id . '\">';\nprint '</td>';\nprint '</tr>';\n\n$obj = new stdClass();\n// If data was already input, we define them in obj to populate input fields.\nif (GETPOST('actionadd'))\n{\n\tforeach ($fieldlist as $key => $val) {\n\t\tif (GETPOST($val) != '')\n\t\t\t$obj->$val = GETPOST($val);\n\t}\n}\n\n$tmpaction = 'create';\n$parameters = array(\n\t'fieldlist' => $fieldlist,\n\t'tabname' => $tabname[$id]\n);\n$reshook = $hookmanager->executeHooks('createDictionaryFieldlist', $parameters, $obj, $tmpaction); // Note that $action and $object may have been modified by some hooks\n$error = $hookmanager->error;\n$errors = $hookmanager->errors;\n\n\n// Line to enter new values (input fields)\nprint \"<tr \" . $bcnd[$var] . \">\";\n\nif (empty($reshook))\n{\n\tif ($action == 'edit') {\n\t\tfieldList($fieldlist, $obj, $tabname[$id], 'hide');\n\t} else {\n\t\tfieldList($fieldlist, $obj, $tabname[$id], 'add');\n\t}\n}\n\nprint '<td align=\"right\">';\nprint '</td>';\nprint \"</tr>\";\n\n$fieldsforcontent = array('topic', 'joinfiles', 'content');\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) { $fieldsforcontent = array('content','content_lines'); }\nforeach ($fieldsforcontent as $tmpfieldlist)\n{\n\tprint '<tr class=\"impair nodrag nodrop nohover\"><td colspan=\"6\" class=\"nobottom\">';\n\t// Label\n\tif ($tmpfieldlist == 'topic')\n\t{\n\t\tprint '<strong>' . $form->textwithpicto($langs->trans(\"Topic\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n\t}\n\tif ($tmpfieldlist == 'joinfiles')\n\t{\n\t\tprint '<strong>' . $form->textwithpicto($langs->trans(\"FilesAttachedToEmail\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n\t}\n\tif ($tmpfieldlist == 'content')\n\t\tprint $form->textwithpicto($langs->trans(\"Content\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist);\n\tif ($tmpfieldlist == 'content_lines')\n\t\tprint $form->textwithpicto($langs->trans(\"ContentForLines\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '<br>';\n\t// Input field\n\tif ($tmpfieldlist == 'topic') {\n\t\tprint '<input type=\"text\" class=\"flat minwidth500\" name=\"'.$tmpfieldlist.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n\t}\n\telse if ($tmpfieldlist == 'joinfiles') {\n\t\tprint '<input type=\"text\" class=\"flat maxwidth50\" name=\"'.$tmpfieldlist.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n\t}\n\telse\n\t{\n\t\tif ($context != 'hide') {\n\t\t\t// print '<textarea cols=\"3\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea>';\n\t\t\t$okforextended = true;\n\t\t\tif (empty($conf->global->FCKEDITOR_ENABLE_MAIL))\n\t\t\t\t$okforextended = false;\n\t\t\t$doleditor = new DolEditor($tmpfieldlist, (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : ''), '', 120, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_4, '90%');\n\t\t\tprint $doleditor->Create(1);\n\t\t}\n\t\telse\n\t\t\tprint '&nbsp;';\n\t}\n\tprint '</td>';\n\tif ($tmpfieldlist == 'topic') {\n\t\tprint '<td align=\"center\" rowspan=\"' . (count($fieldsforcontent)) . '\">';\n\t\tif ($action != 'edit') {\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"' . $langs->trans(\"Add\") . '\">';\n\t\t}\n\t\tprint '</td>';\n\t}\n\t// else print '<td></td>';\n\tprint '</tr>';\n}\n\n\n\n$colspan=count($fieldlist)+1;\n//print '<tr><td colspan=\"'.$colspan.'\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n\nprint '</table>';\nprint '</div>';\n\nprint '</form>';\n\nprint '<br>';\n\n\nprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\nprint '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\nprint '<div class=\"div-table-responsive-no-min\">';\nprint '<table class=\"noborder\" width=\"100%\">';\n\n// List of available record in database\ndol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n$resql=$db->query($sql);\nif ($resql)\n{\n    $num = $db->num_rows($resql);\n    $i = 0;\n    $var=true;\n\n    $param = '&id='.$id;\n    $paramwithsearch = $param;\n    if ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n    if ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n    if (GETPOST('from')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n\n    // There is several pages\n    if ($num > $listlimit)\n    {\n        print '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n        print_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n        print '</td></tr>';\n    }\n\n\n    // Title line with search boxes\n    print '<tr class=\"liste_titre\">';\n    $filterfound=0;\n    foreach ($fieldlist as $field => $value)\n    {\n        if ($value == 'label') print '<td class=\"liste_titre\"><input type=\"text\" name=\"search_label\" value=\"'.dol_escape_htmltag($search_label).'\"></td>';\n        elseif ($value == 'lang')\n        {\n        \tprint '<td class=\"liste_titre\">';\n        \tprint $formadmin->select_language($search_lang, 'search_lang', 0, null, 1);\n        \tprint '</td>';\n        }\n        elseif ($value == 'fk_user')\n        {\n        \tprint '<td class=\"liste_titre\">';\n        \t$restrictid=array();\n        \tif (! $user->admin) $restrictid=array($user->id);\n        \t//var_dump($restrictid);\n        \tprint $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, 'hierarchyme', null, 0, 0, 1, '', 0, '', 'maxwidth200');\n        \tprint '</td>';\n        }\n        elseif ($value == 'topic') print '<td class=\"liste_titre\"><input type=\"text\" name=\"search_topic\" value=\"'.dol_escape_htmltag($search_topic).'\"></td>';\n        elseif ($value == 'type_template')\n        {\n        \tprint '<td class=\"liste_titre\">'.$form->selectarray('search_type_template', $elementList, $search_type_template, 1, 0, 0, '', 0, 0, 0, '', 'maxwidth100onsmartphone').'</td>';\n        }\n        elseif (! in_array($value, array('content', 'content_lines'))) print '<td class=\"liste_titre\"></td>';\n    }\n    if (empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) print '<td class=\"liste_titre\"></td>';\n    // Action column\n    print '<td class=\"liste_titre\" align=\"right\" width=\"64\">';\n    $searchpicto=$form->showFilterButtons();\n    print $searchpicto;\n    print '</td>';\n    print '</tr>';\n\n    // Title of lines\n    print '<tr class=\"liste_titre\">';\n    foreach ($fieldlist as $field => $value)\n    {\n        // Determine le nom du champ par rapport aux noms possibles\n        // dans les dictionnaires de donnees\n        $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n        $align=\"left\";\n        $sortable=1;\n        $valuetoshow='';\n        /*\n        $tmparray=getLabelOfField($fieldlist[$field]);\n        $showfield=$tmp['showfield'];\n        $valuetoshow=$tmp['valuetoshow'];\n        $align=$tmp['align'];\n        $sortable=$tmp['sortable'];\n\t\t*/\n        $valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n        $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n        if ($fieldlist[$field]=='fk_user')         { $valuetoshow=$langs->trans(\"Owner\"); }\n        if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n        if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n        if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') { $valuetoshow=$langs->trans(\"Label\"); }\n    \tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\tif ($fieldlist[$field]=='private')         { $align='center'; }\n\t\tif ($fieldlist[$field]=='position')        { $align='center'; }\n\n\t\tif ($fieldlist[$field]=='joinfiles')       { $valuetoshow=$langs->trans(\"FilesAttachedToEmail\"); $align='center'; }\n\t\tif ($fieldlist[$field]=='content')         { $valuetoshow=$langs->trans(\"Content\"); $showfield=0;}\n\t\tif ($fieldlist[$field]=='content_lines')   { $valuetoshow=$langs->trans(\"ContentLines\"); $showfield=0; }\n\n        // Affiche nom du champ\n        if ($showfield)\n        {\n            if (! empty($tabhelp[$id][$value]))\n            {\n                if (in_array($value, array('topic'))) $valuetoshow = $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, 'tooltip'.$value);   // Tooltip on click\n                else $valuetoshow = $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, '', 1);\t// Tooltip on hover\n            }\n            print getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n        }\n    }\n\n    print getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n    print getTitleFieldOfList('');\n    print '</tr>';\n\n    if ($num)\n    {\n        // Lines with values\n        while ($i < $num)\n        {\n            $obj = $db->fetch_object($resql);\n\n            print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n\n            if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n            {\n            \t$tmpaction='edit';\n                $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                // Show fields\n                if (empty($reshook)) fieldList($fieldlist,$obj,$tabname[$id],'edit');\n\n                print '<td></td><td></td><td></td>';\n                print '<td align=\"center\">';\n                print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n                print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n                print '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                print '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n                print '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n                print '</td>';\n\n                $fieldsforcontent = array('topic', 'joinfiles', 'content');\n                if (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES))\n                {\n                    $fieldsforcontent = array('topic', 'joinfiles', 'content', 'content_lines');\n                }\n                foreach ($fieldsforcontent as $tmpfieldlist)\n                {\n                    $showfield = 1;\n                    $align = \"left\";\n                    $valuetoshow = $obj->{$tmpfieldlist};\n\n                    $class = 'tddict';\n                    // Show value for field\n                    if ($showfield) {\n\t\t\t\t\t\t// Show line for topic, joinfiles and content\n                        print '</tr><tr class=\"oddeven\" nohover tr-'.$tmpfieldlist.'-'.$rowid.' \">';\n                        print '<td colspan=\"8\">';\n                        if ($tmpfieldlist == 'topic')\n                        {\n\t                        print '<strong>' . $form->textwithpicto($langs->trans(\"Topic\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n    \t                    print '<input type=\"text\" class=\"flat minwidth500\" name=\"'.$tmpfieldlist.'-'.$rowid.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n                        }\n                        if ($tmpfieldlist == 'joinfiles')\n                        {\n                        \tprint '<strong>' . $form->textwithpicto($langs->trans(\"FilesAttachedToEmail\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n                        \tprint '<input type=\"text\" class=\"flat maxwidth50\" name=\"'.$tmpfieldlist.'-'.$rowid.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n                        }\n                        if ($tmpfieldlist == 'content')\n                        {\n                        \t$okforextended = true;\n                        \tif (empty($conf->global->FCKEDITOR_ENABLE_MAIL)) $okforextended = false;\n                        \t$doleditor = new DolEditor($tmpfieldlist.'-'.$rowid, (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : ''), '', 140, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_6, '90%');\n                        \tprint $doleditor->Create(1);\n                        }\n                        print '</td>';\n                        print '<td></td>';\n                        print '<td></td>';\n                    }\n                }\n            }\n            else\n            {\n              \t$tmpaction = 'view';\n                $parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                if (empty($reshook))\n                {\n                    foreach ($fieldlist as $field => $value)\n                    {\n                        if (in_array($fieldlist[$field], array('content','content_lines'))) continue;\n                        $showfield=1;\n                    \t$align=\"left\";\n                        $valuetoshow=$obj->{$fieldlist[$field]};\n                        if ($value == 'type_template')\n                        {\n                            $valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n                        }\n                        if ($value == 'lang' && $valuetoshow)\n                        {\n                        \t$valuetoshow = $valuetoshow.' - '.$langs->trans(\"Language_\".$valuetoshow);\n                        }\n                        if ($value == 'fk_user')\n                        {\n                        \tif ($valuetoshow > 0)\n                        \t{\n                        \t\t$fuser=new User($db);\n                        \t\t$fuser->fetch($valuetoshow);\n                        \t\t$valuetoshow = $fuser->getNomUrl(1);\n                        \t}\n                        }\n                        if ($value == 'private')\n                        {\n                        \t$align=\"center\";\n                        \tif ($valuetoshow) $valuetoshow=yn($valuetoshow);\n                        \telse $valuetoshow='';\n                        }\n                        if ($value == 'position')\n                        {\n                        \t$align=\"center\";\n                        }\n                        if ($value == 'joinfiles')\n                        {\n                        \t$align=\"center\";\n                        \tif ($valuetoshow) $valuetoshow=1;\n                        \telse $valuetoshow='';\n                        }\n\n                        $class='tddict';\n\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\tif ($showfield)\n\t\t\t\t\t\t{\n                           \tprint '<!-- '.$fieldlist[$field].' -->';\n                           \tprint '<td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n\t\t\t\t\t\t}\n                    }\n                }\n\n                // Can an entry be erased or disabled ?\n                $iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n                if (! $user->admin && $obj->fk_user != $user->id)\n                {\n                \t$iserasable=0;\n                \t$canbedisabled=0;\n                \t$canbemodified=0;\n                }\n\n                $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n                if ($param) $url .= '&'.$param;\n                $url.='&';\n\n                // Status / Active\n                print '<td align=\"center\" class=\"nowrap\">';\n                if ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n                print \"</td>\";\n\n                // Modify link / Delete link\n                print '<td align=\"center\" width=\"64\">';\n                if ($canbemodified) print '<a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a>';\n                if ($iserasable)\n                {\n                    print ' &nbsp; <a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n                    //else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n                }\n                print '</td>';\n\n\n                /*\n                $fieldsforcontent = array('content');\n                if (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES))\n                {\n                    $fieldsforcontent = array('content', 'content_lines');\n                }\n                foreach ($fieldsforcontent as $tmpfieldlist)\n                {\n                    $showfield = 1;\n                    $align = \"left\";\n                    $valuetoshow = $obj->{$tmpfieldlist};\n\n                    $class = 'tddict';\n                    // Show value for field\n                    if ($showfield) {\n\n                        print '</tr><tr class=\"oddeven\" nohover tr-'.$tmpfieldlist.'-'.$i.' \"><td colspan=\"5\">'; // To create an artificial CR for the current tr we are on\n                        $okforextended = true;\n                        if (empty($conf->global->FCKEDITOR_ENABLE_MAIL))\n                            $okforextended = false;\n                        $doleditor = new DolEditor($tmpfieldlist.'-'.$i, (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : ''), '', 140, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_6, '90%', 1);\n                        print $doleditor->Create(1);\n                        print '</td>';\n                        print '<td></td><td></td><td></td>';\n\n                    }\n                }*/\n            }\n            print \"</tr>\\n\";\n\n\n            $i++;\n        }\n    }\n}\nelse {\n    dol_print_error($db);\n}\n\nprint '</table>';\nprint '</div>';\n\nprint '</form>';\n\n\ndol_fiche_end();\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldList($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf, $langs, $user, $db;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'fk_user')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif ($user->admin)\n\t\t\t{\n\t\t\t\tprint $form->select_dolusers($obj->{$fieldlist[$field]}, 'fk_user', 1, null, 0, '', null, 0, 0, 1, '', 0, '', 'maxwidth200');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($context == 'add')\t// I am not admin and we show the add form\n\t\t\t\t{\n\t\t\t\t\tprint $user->getNomUrl(1);\t\t// Me\n\t\t\t\t\t$forcedvalue=$user->id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif ($obj && ! empty($obj->{$fieldlist[$field]}) && $obj->{$fieldlist[$field]} > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$fuser=new User($db);\n\t\t\t\t\t\t$fuser->fetch($obj->{$fieldlist[$field]});\n\t\t\t\t\t\tprint $fuser->getNomUrl(1);\n\t\t\t\t\t\t$forcedvalue=$fuser->id;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$forcedvalue=$obj->{$fieldlist[$field]};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$keyname=$fieldlist[$field];\n\t\t\t\tprint '<input type=\"hidden\" value=\"'.$forcedvalue.'\" name=\"'.$keyname.'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif (! empty($conf->global->MAIN_MULTILANGS))\n\t\t\t{\n\t\t\t\t$selectedlang = $langs->defaultlang;\n\t\t\t\tif ($context == 'edit') $selectedlang = $obj->{$fieldlist[$field]};\n\t\t\t\tprint $formadmin->select_language($selectedlang, 'langcode', 0, null, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! empty($obj->{$fieldlist[$field]}))\n\t\t\t\t{\n\t\t\t\t\tprint $obj->{$fieldlist[$field]}.' - '.$langs->trans('Language_'.$obj->{$fieldlist[$field]});\n\t\t\t\t}\n\t\t\t\t$keyname=$fieldlist[$field];\n\t\t\t\tif ($keyname == 'lang') $keyname='langcode';\t// Avoid conflict with lang param\n\t\t\t\tprint '<input type=\"hidden\" value=\"'.$obj->{$fieldlist[$field]}.'\" name=\"'.$keyname.'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de template\n\t\telseif ($fieldlist[$field] == 'type_template')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif ($context == 'edit' && ! empty($obj->{$fieldlist[$field]}) && ! in_array($obj->{$fieldlist[$field]}, array_keys($elementList)))\n\t\t\t{\n\t\t\t\t// Current tempalte type is an unknown type, so we must keep it as it is.\n\t\t\t\tprint '<input type=\"hidden\" name=\"type_template\" value=\"'.$obj->{$fieldlist[$field]}.'\">';\n\t\t\t\tprint $obj->{$fieldlist[$field]};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $form->selectarray('type_template', $elementList, (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), 1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($context == 'add' && in_array($fieldlist[$field], array('topic', 'joinfiles', 'content', 'content_lines'))) continue;\n\t\telseif ($context == 'edit' && in_array($fieldlist[$field], array('topic', 'joinfiles', 'content', 'content_lines'))) continue;\n\t\telseif ($context == 'hide' && in_array($fieldlist[$field], array('topic', 'joinfiles', 'content', 'content_lines'))) continue;\n\t\telse\n\t\t{\n\t\t\t$size=''; $class=''; $classtd='';\n\t\t\tif ($fieldlist[$field]=='code') $class='maxwidth100';\n\t\t\tif ($fieldlist[$field]=='private') { $class='maxwidth50'; $classtd='center'; }\n\t\t\tif ($fieldlist[$field]=='position') { $class='maxwidth50'; $classtd='center'; }\n\t\t\tif ($fieldlist[$field]=='libelle') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='topic') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\n\t\t\tprint '<td'.($classtd?' class=\"'.$classtd.'\"':'').'>';\n\t\t\tif ($fieldlist[$field]=='private')\n\t\t\t{\n\t\t\t\tif (empty($user->admin))\n\t\t\t\t{\n\t\t\t\t\tprint $form->selectyesno($fieldlist[$field], '1', 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//print '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"1\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t\t\tprint $form->selectyesno($fieldlist[$field], (isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2004-2017 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/admin/website.php\n *\t\t\\ingroup    setup\n *\t\t\\brief      Page to administer web sites\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/website.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/website/class/website.class.php';\n\n$langs->load(\"errors\");\n$langs->load(\"admin\");\n$langs->load(\"companies\");\n$langs->load(\"website\");\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$backtopage = GETPOST('backtopage', 'alpha');\n\n$rowid=GETPOST('rowid','alpha');\n\n$id=1;\n\nif (!$user->admin) accessforbidden();\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$status = 1;\n\n// Load variable for pagination\n$limit = GETPOST('limit','int')?GETPOST('limit','int'):$conf->liste_limit;\n$sortfield = GETPOST('sortfield','alpha');\n$sortorder = GETPOST('sortorder','alpha');\n$page = GETPOST('page','int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $limit * $page;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[1] = MAIN_DB_PREFIX.\"website\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[1] = \"Websites\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[1] = \"SELECT f.rowid as rowid, f.entity, f.ref, f.description, f.virtualhost, f.status FROM \".MAIN_DB_PREFIX.'website as f WHERE f.entity IN ('.getEntity('website').')';\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[1] =\"ref ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[1] = \"ref,description,virtualhost\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[1] = \"ref,description,virtualhost\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[1] = \"ref,description,virtualhost,entity\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[1] = \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[1] = (! empty($conf->website->enabled));\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[1]  = array('ref'=>$langs->trans(\"EnterAnyCode\"), 'virtualhost'=>$langs->trans(\"SetHereVirtualHost\", DOL_DATA_ROOT.'/website/<i>websiteref</i>'));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[1]  = array();\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n\n/*\n * Actions\n */\n\n// Actions add or modify a website\nif (GETPOST('actionadd','alpha') || GETPOST('actionmodify','alpha'))\n{\n    $listfield=explode(',',$tabfield[$id]);\n    $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n    $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n    $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n    // Check that all fields are filled\n    $ok=1;\n    foreach ($listfield as $f => $value)\n    {\n    \tif ($value == 'ref' && (! isset($_POST[$value]) || $_POST[$value]==''))\n\t    {\n    \t    $ok=0;\n        \t$fieldnamekey=$listfield[$f];\n\t        setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n\t        break;\n    \t}\n\t\telseif ($value == 'ref' && ! preg_match('/^[a-z0-9_\\-\\.]+$/i', $_POST[$value]))\n\t    {\n\t\t\t$ok=0;\n    \t    $fieldnamekey=$listfield[$f];\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldCanNotContainSpecialCharacters\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n\t\t\tbreak;\n\t    }\n    }\n\n    // Clean parameters\n    if (! empty($_POST['ref']))\n    {\n    \t$websitekey=strtolower($_POST['ref']);\n    }\n\n    // Si verif ok et action add, on ajoute la ligne\n    if ($ok && GETPOST('actionadd','alpha'))\n    {\n        if ($tabrowid[$id])\n        {\n            // Recupere id libre pour insertion\n            $newid=0;\n            $sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n            $result = $db->query($sql);\n            if ($result)\n            {\n                $obj = $db->fetch_object($result);\n                $newid=($obj->newid + 1);\n\n            } else {\n                dol_print_error($db);\n            }\n        }\n\n        /* $website=new Website($db);\n        $website->ref=\n        $website->description=\n        $website->virtualhost=\n        $website->create($user); */\n\n        // Add new entry\n        $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n        // List of fields\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $tabrowid[$id].\",\";\n        $sql.= $tabfieldinsert[$id];\n        $sql.=\",status)\";\n        $sql.= \" VALUES(\";\n\n        // List of values\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $newid.\",\";\n        $i=0;\n        foreach ($listfieldinsert as $f => $value)\n        {\n            if ($value == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($value == 'ref') {\n            \t$_POST[$listfieldvalue[$i]] = strtolower($_POST[$listfieldvalue[$i]]);\n            }\n            if ($i) $sql.=\",\";\n            if ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.=\",1)\";\n\n        dol_syslog(\"actionadd\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if ($result)\t// Add is ok\n        {\n            setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n        \tunset($_POST);\t// Clean $_POST array, we keep only\n        }\n        else\n        {\n            if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n            }\n            else {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // Si verif ok et action modify, on modifie la ligne\n    if ($ok && GETPOST('actionmodify','alpha'))\n    {\n        if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n        else { $rowidcol=\"rowid\"; }\n\n        $db->begin();\n\n        $website=new Website($db);\n        $rowid=GETPOST('rowid','int');\n        $website->fetch($rowid);\n\n        // Modify entry\n        $sql = \"UPDATE \".$tabname[$id].\" SET \";\n        // Modifie valeur des champs\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n        {\n            $sql.= $tabrowid[$id].\"=\";\n            $sql.= \"'\".$db->escape($rowid).\"', \";\n        }\n        $i = 0;\n        foreach ($listfieldmodify as $field)\n        {\n            if ($field == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($i) $sql.=\",\";\n            $sql.= $field.\"=\";\n            if ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n        dol_syslog(\"actionmodify\", LOG_DEBUG);\n        //print $sql;\n        $resql = $db->query($sql);\n        if ($resql)\n        {\n            $newname = dol_sanitizeFileName(GETPOST('ref','aZ09'));\n            if ($newname != $website->ref)\n            {\n\t            $srcfile=DOL_DATA_ROOT.'/website/'.$website->ref;\n\t            $destfile=DOL_DATA_ROOT.'/website/'.$newname;\n\n            \tif (dol_is_dir($destfile))\n            \t{\n            \t\t$error++;\n            \t\tsetEventMessages($langs->trans('ErrorDirAlreadyExists', $destfile), null, 'errors');\n            \t}\n            \telse\n            \t{\n\t                @rename($srcfile, $destfile);\n\n\t\t            // We must now rename $website->ref into $newname inside files\n\t\t            $arrayreplacement = array($website->ref.'/htmlheader.html' => $newname.'/htmlheader.html');\n\t\t            $listofilestochange = dol_dir_list($destfile, 'files', 0, '\\.php$');\n\t\t\t\t\tforeach ($listofilestochange as $key => $value)\n\t\t            {\n\t\t            \tdolReplaceInFile($value['fullname'], $arrayreplacement);\n\t\t            }\n            \t}\n            }\n        }\n        else\n        {\n        \t$error++;\n            setEventMessages($db->lasterror(), null, 'errors');\n        }\n\n        if (! $error)\n        {\n        \t$db->commit();\n        }\n        else\n        {\n        \t$db->rollback();\n        }\n    }\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel','alpha'))\n{\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    $website = new Website($db);\n    $website->fetch($rowid);\n\n    if ($website->id > 0)\n    {\n\t    $sql = \"DELETE from \".MAIN_DB_PREFIX.\"website_page WHERE fk_website ='\".$rowid.\"'\";\n\t    $result = $db->query($sql);\n\n\t    $sql = \"DELETE from \".MAIN_DB_PREFIX.\"website WHERE rowid ='\".$rowid.\"'\";\n\t    $result = $db->query($sql);\n\t    if (! $result)\n\t    {\n\t        if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n\t        {\n\t            setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n\t        }\n\t        else\n\t        {\n\t            dol_print_error($db);\n\t        }\n\t    }\n\n\t    if ($website->ref)\n\t    {\n\t    \tdol_delete_dir_recursive($conf->website->dir_output.'/'.$website->ref);\n\t    }\n    }\n    else\n    {\n    \tdol_print_error($db, 'Failed to load website with id '.$rowid);\n    }\n}\n\n// activate\nif ($action == $acts[0])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n        $sql = \"UPDATE \".$tabname[$id].\" SET status = 1 WHERE rowid ='\".$rowid.\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable\nif ($action == $acts[1])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n        $sql = \"UPDATE \".$tabname[$id].\" SET status = 0 WHERE rowid ='\".$rowid.\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader('', $langs->trans(\"WebsiteSetup\"));\n\n$titre=$langs->trans(\"WebsiteSetup\");\n$linkback='<a href=\"'.($backtopage?$backtopage:DOL_URL_ROOT.'/admin/modules.php').'\">'.$langs->trans(\"BackToModuleList\").'</a>';\nprint load_fiche_titre($titre,$linkback,'title_setup');\n\nprint $langs->trans(\"WebsiteSetupDesc\").'<br>';\nprint \"<br>\\n\";\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid, $langs->trans('DeleteWebsite'), $langs->trans('ConfirmDeleteWebsite'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show website list\n */\nif ($id)\n{\n    // Complete requete recherche valeurs avec critere de tri\n    $sql=$tabsql[$id];\n\n    if ($sortfield)\n    {\n        // If sort order is \"country\", we use country_code instead\n        $sql.= \" ORDER BY \".$sortfield;\n        if ($sortorder)\n        {\n            $sql.=\" \".strtoupper($sortorder);\n        }\n        $sql.=\", \";\n        // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n    }\n    else {\n        $sql.=\" ORDER BY \";\n    }\n    $sql.=$tabsqlsort[$id];\n    $sql.=$db->plimit($limit+1, $offset);\n    //print $sql;\n\n    $fieldlist=explode(',',$tabfield[$id]);\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<table class=\"noborder\" width=\"100%\">';\n\n    // Form to add a new line\n    if ($tabname[$id])\n    {\n        $alabelisused=0;\n        $var=false;\n\n        $fieldlist=explode(',',$tabfield[$id]);\n\n        // Line for title\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            $align='';\n            if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n            if ($valuetoshow != '')\n            {\n                print '<td class=\"'.$align.'\">';\n            \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n            \telseif (! empty($tabhelp[$id][$value]))\n           \t\t{\n           \t\t\tif ($value == 'virtualhost') print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, 'tooltipvirtual');\n           \t\t\telse print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value]);\n           \t\t}\n            \telse print $valuetoshow;\n                print '</td>';\n             }\n             if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n        }\n\n        print '<td colspan=\"4\">';\n        print '</td>';\n        print '</tr>';\n\n        // Line to enter new values\n        print \"<tr \".$bcnd[$var].\">\";\n\n        $obj = new stdClass();\n        // If data was already input, we define them in obj to populate input fields.\n        if (GETPOST('actionadd','alpha'))\n        {\n            foreach ($fieldlist as $key=>$val)\n            {\n                if (GETPOST($val,'alpha'))\n                \t$obj->$val=GETPOST($val);\n            }\n        }\n\n        $tmpaction = 'create';\n        $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n        $reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n        $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n        if (empty($reshook))\n        {\n       \t\tfieldListWebsites($fieldlist,$obj,$tabname[$id],'add');\n        }\n\n        print '<td colspan=\"3\" align=\"right\">';\n        if ($action != 'edit')\n        {\n        \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n        }\n        print '</td>';\n        print \"</tr>\";\n\n        $colspan=count($fieldlist)+2;\n    }\n\n    print '</table>';\n    print '</form>';\n\n\n    // List of websites in database\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $num = $db->num_rows($resql);\n        $i = 0;\n        if ($num)\n        {\n            print '<br>';\n\n            print '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\">';\n            print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n            print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n            print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n\n            print '<table class=\"noborder\" width=\"100%\">';\n\n            // Title of lines\n            print '<tr class=\"liste_titre\">';\n            foreach ($fieldlist as $field => $value)\n            {\n                // Determine le nom du champ par rapport aux noms possibles\n                // dans les dictionnaires de donnees\n                $showfield=1;\t\t\t\t\t\t\t  \t// Par defaut\n                $align=\"left\";\n                $sortable=1;\n                $valuetoshow='';\n                /*\n                $tmparray=getLabelOfField($fieldlist[$field]);\n                $showfield=$tmp['showfield'];\n                $valuetoshow=$tmp['valuetoshow'];\n                $align=$tmp['align'];\n                $sortable=$tmp['sortable'];\n\t\t\t\t*/\n                $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n                $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n                if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n                if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n                if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\n                // Affiche nom du champ\n                if ($showfield)\n                {\n                    print getTitleFieldOfList($valuetoshow,0,$_SERVER[\"PHP_SELF\"],($sortable?$fieldlist[$field]:''),($page?'page='.$page.'&':''),\"\",\"align=\".$align,$sortfield,$sortorder);\n                }\n            }\n\n\t\t\tprint getTitleFieldOfList($langs->trans(\"Status\"),0,$_SERVER[\"PHP_SELF\"],\"status\",($page?'page='.$page.'&':''),\"\",'align=\"center\"',$sortfield,$sortorder);\n            print getTitleFieldOfList('');\n            print getTitleFieldOfList('');\n            print '</tr>';\n\n            // Lines with values\n            while ($i < $num)\n            {\n\n                $obj = $db->fetch_object($resql);\n                //print_r($obj);\n                print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n                if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n                {\n                    $tmpaction='edit';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook)) fieldListWebsites($fieldlist,$obj,$tabname[$id],'edit');\n\n                    print '<td colspan=\"3\" align=\"right\"><a name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\">&nbsp;</a><input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                    print '&nbsp;<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\"></td>';\n                }\n                else\n                {\n\t              \t$tmpaction = 'view';\n                    $parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook))\n                    {\n                        foreach ($fieldlist as $field => $value)\n                        {\n                            $showfield=1;\n                        \t$align=\"left\";\n                        \t$fieldname=$fieldlist[$field];\n                            $valuetoshow=$obj->$fieldname;\n\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<td align=\"'.$align.'\">'.$valuetoshow.'</td>';\n                        }\n                    }\n\n                    // Can an entry be erased or disabled ?\n                    $iserasable=1; $isdisable=1;\t\t// true by default\n                    if ($obj->status) $iserasable=0;\t// We can't delete a website on. Disable it first.\n\n                    $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&amp;code='.(! empty($obj->code)?urlencode($obj->code):'').'&amp;';\n\n                    // Active\n                    print '<td align=\"center\" class=\"nowrap\">';\n                    print '<a href=\"'.$url.'action='.$acts[$obj->status].'\">'.$actl[$obj->status].'</a>';\n                    print \"</td>\";\n\n                    // Modify link\n                    print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n\n                    // Delete link\n                    if ($iserasable) print '<td align=\"center\"><a href=\"'.$url.'action=delete\">'.img_delete().'</a></td>';\n                    else print '<td align=\"center\">'.img_delete($langs->trans(\"DisableSiteFirst\"), 'class=\"opacitymedium\"').'</td>';\n\n                    print \"</tr>\\n\";\n                }\n                $i++;\n            }\n\n            print '</table>';\n\n            print '</form>';\n        }\n    }\n    else {\n        dol_print_error($db);\n    }\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListWebsites($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t    $fieldname = $fieldlist[$field];\n\t\tif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $formadmin->select_language($conf->global->MAIN_LANG_DEFAULT,'lang');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->$fieldname)) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat\" value=\"'.(! empty($obj->$fieldname)?$obj->$fieldname:'').'\" size=\"10\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size='';\n\t\t\tif ($fieldlist[$field]=='code') $size='size=\"8\" ';\n\t\t\tif ($fieldlist[$field]=='position') $size='size=\"4\" ';\n\t\t\tif ($fieldlist[$field]=='libelle') $size='size=\"32\" ';\n\t\t\tif ($fieldlist[$field]=='tracking') $size='size=\"92\" ';\n\t\t\tif ($fieldlist[$field]=='sortorder') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.' class=\"flat\" value=\"'.(isset($obj->$fieldname)?$obj->$fieldname:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2000-2007\tRodolphe Quiedeville\t\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2018\tLaurent Destailleur\t\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tSebastien Di Cintio\t\t\t<sdicintio@ressource-toi.org>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2004\t\tChristophe Combelles\t\t\t<ccomb@free.fr>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2008\t\tRaphael Bertrand (Resultic)\t<raphael.bertrand@resultic.fr>\n * Copyright (C) 2010-2018\tJuanjo Menent\t\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013\t\tC\u00e9dric Salvador\t\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2013-2017\tAlexandre Spangaro\t\t\t<aspangaro@zendsi.com>\n * Copyright (C) 2014\t\tC\u00e9dric GROSS\t\t\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tMarcos Garc\u00eda\t\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t\t<jfefe@aternatik.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\\file\t\t\thtdocs/core/lib/functions.lib.php\n *\t\\brief\t\t\tA set of functions for Dolibarr\n *\t\t\t\t\tThis file contains all frequently used functions.\n */\n\ninclude_once DOL_DOCUMENT_ROOT .'/core/lib/json.lib.php';\n\n\n/**\n * Function to return value of a static property when class\n * name is dynamically defined (not hard coded).\n * This is because $myclass::$myvar works from PHP 5.3.0+ only\n *\n * @param\tstring \t$class\t\tClass name\n * @param \tstring \t$member\t\tName of property\n * @return \tmixed\t\t\t\tReturn value of static property\n * @deprecated Dolibarr now requires 5.3.0+, use $class::$property syntax\n * @see https://php.net/manual/language.oop5.static.php\n */\nfunction getStaticMember($class, $member)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\t// This part is deprecated. Uncomment if for php 5.2.*, and comment next isset class::member\n\t/*if (version_compare(phpversion(), '5.3.0', '<'))\n\t{\n\t\tif (is_object($class)) $class = get_class($class);\n\t\t$classObj = new ReflectionClass($class);\n\t\t$result = null;\n\n\t\t$found=0;\n\t\tforeach($classObj->getStaticProperties() as $prop => $value)\n\t\t{\n\t\t\tif ($prop == $member)\n\t\t\t{\n\t\t\t\t$result = $value;\n\t\t\t\t$found++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ($found) return $result;\n\t}*/\n\n\tif (isset($class::$member)) return $class::$member;\n\tdol_print_error('','Try to get a static member \"'.$member.'\" in class \"'.$class.'\" that does not exists or is not static.');\n\treturn null;\n}\n\n\n/**\n * Return a DoliDB instance (database handler).\n *\n * @param   string\t$type\t\tType of database (mysql, pgsql...)\n * @param\tstring\t$host\t\tAddress of database server\n * @param\tstring\t$user\t\tNom de l'utilisateur autorise\n * @param\tstring\t$pass\t\tMot de passe\n * @param\tstring\t$name\t\tNom de la database\n * @param\tint\t\t$port\t\tPort of database server\n * @return\tDoliDB\t\t\t\tA DoliDB instance\n */\nfunction getDoliDBInstance($type, $host, $user, $pass, $name, $port)\n{\n\trequire_once DOL_DOCUMENT_ROOT .\"/core/db/\".$type.'.class.php';\n\n\t$class='DoliDB'.ucfirst($type);\n\t$dolidb=new $class($type, $host, $user, $pass, $name, $port);\n\treturn $dolidb;\n}\n\n/**\n * \tGet list of entity id to use.\n *\n * \t@param\tstring\t$element\t\tCurrent element\n *\t\t\t\t\t\t\t\t\t'societe', 'socpeople', 'actioncomm', 'agenda', 'resource',\n *\t\t\t\t\t\t\t\t\t'product', 'productprice', 'stock',\n *\t\t\t\t\t\t\t\t\t'propal', 'supplier_proposal', 'facture', 'facture_fourn', 'payment_various',\n *\t\t\t\t\t\t\t\t\t'categorie', 'bank_account', 'bank_account', 'adherent', 'user',\n *\t\t\t\t\t\t\t\t\t'commande', 'commande_fournisseur', 'expedition', 'intervention', 'survey',\n *\t\t\t\t\t\t\t\t\t'contract', 'tax', 'expensereport', 'holiday', 'multicurrency', 'project',\n *\t\t\t\t\t\t\t\t\t'email_template', 'event', 'donation'\n *\t\t\t\t\t\t\t\t\t'c_paiement', 'c_payment_term', ...\n * \t@param\tint\t\t$shared\t\t\t0=Return id of current entity only,\n * \t\t\t\t\t\t\t\t\t1=Return id of current entity + shared entities (default)\n *  @param\tint\t\t$forceentity\tEntity id\n * \t@return\tmixed\t\t\t\tEntity id(s) to use\n */\nfunction getEntity($element, $shared=1, $forceentity=null)\n{\n\tglobal $conf, $mc;\n\n\t// For backward compatibilty\n\tif ($element == 'actioncomm') $element='agenda';\n\tif ($element == 'fichinter')  $element='intervention';\n\tif ($element == 'categorie')  $element='category';\n\n\tif (is_object($mc))\n\t{\n\t\treturn $mc->getEntity($element, $shared, $forceentity);\n\t}\n\telse\n\t{\n\t\t$out='';\n\t\t$addzero = array('user', 'usergroup', 'c_email_templates', 'email_template', 'default_values');\n\t\tif (in_array($element, $addzero)) $out.= '0,';\n\t\t$out.= $conf->entity;\n\t\treturn $out;\n\t}\n}\n\n/**\n * Return information about user browser\n *\n * Returns array with the following format:\n * array(\n *  'browsername' => Browser name (firefox|chrome|iceweasel|epiphany|safari|opera|ie|unknown)\n *  'browserversion' => Browser version. Empty if unknown\n *  'browseros' => Set with mobile OS (android|blackberry|ios|palm|symbian|webos|maemo|windows|unknown)\n *  'layout' => (tablet|phone|classic)\n *  'phone' => empty if not mobile, (android|blackberry|ios|palm|unknown) if mobile\n *  'tablet' => true/false\n * )\n *\n * @param string $user_agent Content of $_SERVER[\"HTTP_USER_AGENT\"] variable\n * @return\tarray Check function documentation\n */\nfunction getBrowserInfo($user_agent)\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/includes/mobiledetect/mobiledetectlib/Mobile_Detect.php';\n\n\t$name='unknown';\n\t$version='';\n\t$os='unknown';\n\t$phone = '';\n\n\t$detectmobile = new Mobile_Detect(null, $user_agent);\n\t$tablet = $detectmobile->isTablet();\n\n\tif ($detectmobile->isMobile()) {\n\n\t\t$phone = 'unknown';\n\n\t\t// If phone/smartphone, we set phone os name.\n\t\tif ($detectmobile->is('AndroidOS')) {\n\t\t\t$os = $phone = 'android';\n\t\t} elseif ($detectmobile->is('BlackBerryOS')) {\n\t\t\t$os = $phone = 'blackberry';\n\t\t} elseif ($detectmobile->is('iOS')) {\n\t\t\t$os = 'ios';\n\t\t\t$phone = 'iphone';\n\t\t} elseif ($detectmobile->is('PalmOS')) {\n\t\t\t$os = $phone = 'palm';\n\t\t} elseif ($detectmobile->is('SymbianOS')) {\n\t\t\t$os = 'symbian';\n\t\t} elseif ($detectmobile->is('webOS')) {\n\t\t\t$os = 'webos';\n\t\t} elseif ($detectmobile->is('MaemoOS')) {\n\t\t\t$os = 'maemo';\n\t\t} elseif ($detectmobile->is('WindowsMobileOS') || $detectmobile->is('WindowsPhoneOS')) {\n\t\t\t$os = 'windows';\n\t\t}\n\t}\n\n\t// OS\n\tif (preg_match('/linux/i', $user_agent))\t\t\t{ $os='linux'; }\n\telseif (preg_match('/macintosh/i', $user_agent))\t{ $os='macintosh'; }\n\telseif (preg_match('/windows/i', $user_agent))\t\t{ $os='windows'; }\n\n\t// Name\n\tif (preg_match('/firefox(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))      { $name='firefox';   $version=$reg[2]; }\n\telseif (preg_match('/edge(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))     { $name='edge';      $version=$reg[2]; }\n\telseif (preg_match('/chrome(\\/|\\s)([\\d\\.]+)/i', $user_agent, $reg))   { $name='chrome';    $version=$reg[2]; }    // we can have 'chrome (Mozilla...) chrome x.y' in one string\n\telseif (preg_match('/chrome/i', $user_agent, $reg))                   { $name='chrome'; }\n\telseif (preg_match('/iceweasel/i', $user_agent))                      { $name='iceweasel'; }\n\telseif (preg_match('/epiphany/i', $user_agent))                       { $name='epiphany';  }\n\telseif (preg_match('/safari(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))   { $name='safari';    $version=$reg[2]; }\t// Safari is often present in string for mobile but its not.\n\telseif (preg_match('/opera(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))    { $name='opera';     $version=$reg[2]; }\n\telseif (preg_match('/(MSIE\\s([0-9]+\\.[0-9]))|.*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/(Windows NT\\s([0-9]+\\.[0-9])).*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/l(i|y)n(x|ks)(\\(|\\/|\\s)*([\\d\\.]+)/i', $user_agent, $reg)) { $name='lynxlinks'; $version=$reg[4]; }\n\n\tif ($tablet) {\n\t\t$layout = 'tablet';\n\t} elseif ($phone) {\n\t\t$layout = 'phone';\n\t} else {\n\t\t$layout = 'classic';\n\t}\n\n\treturn array(\n\t\t'browsername' => $name,\n\t\t'browserversion' => $version,\n\t\t'browseros' => $os,\n\t\t'layout' => $layout,\n\t\t'phone' => $phone,\n\t\t'tablet' => $tablet\n\t);\n}\n\n/**\n *  Function called at end of web php process\n *\n *  @return\tvoid\n */\nfunction dol_shutdown()\n{\n\tglobal $conf,$user,$langs,$db;\n\t$disconnectdone=false; $depth=0;\n\tif (is_object($db) && ! empty($db->connected)) { $depth=$db->transaction_opened; $disconnectdone=$db->close(); }\n\tdol_syslog(\"--- End access to \".$_SERVER[\"PHP_SELF\"].(($disconnectdone && $depth)?' (Warn: db disconnection forced, transaction depth was '.$depth.')':''), (($disconnectdone && $depth)?LOG_WARNING:LOG_INFO));\n}\n\n/**\n * Return true if we are in a context of submitting a parameter\n *\n * @param \tstring\t$paramname\t\tName or parameter to test\n * @return \tboolean\t\t\t\t\tTrue if we have just submit a POST or GET request with the parameter provided (even if param is empty)\n */\nfunction GETPOSTISSET($paramname)\n{\n\treturn (isset($_POST[$paramname]) || isset($_GET[$paramname]));\n}\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['creatform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param\tstring\t$paramname   Name of parameter to found\n *  @param\tstring\t$check\t     Type of check\n *                                  ''=no check (deprecated)\n *                                  'none'=no check (only for param that should have very rich content)\n *                                  'int'=check it's numeric (integer or float)\n *                                  'alpha'=check it's text and sign\n *                                  'aZ'=check it's a-z only\n *                                  'aZ09'=check it's simple alpha string (recommended for keys)\n *                                  'array'=check it's array\n *                                  'san_alpha'=Use filter_var with FILTER_SANITIZE_STRING (do not use this for free text string)\n *                                  'nohtml', 'alphanohtml'=check there is no html content\n *                                  'custom'= custom filter specify $filter and $options)\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get, 4 = post then get then cookie)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @param\tstring\t$noreplace\t Force disable of replacement of __xxx__ strings.\n *  @return string|string[]      Value found (string or array), or '' if check fails\n */\nfunction GETPOST($paramname, $check='none', $method=0, $filter=NULL, $options=NULL, $noreplace=0)\n{\n\tglobal $mysoc,$user,$conf;\n\n\tif (empty($paramname)) return 'BadFirstParameterForGETPOST';\n\tif (empty($check))\n\t{\n\t\tdol_syslog(\"Deprecated use of GETPOST, called with 1st param = \".$paramname.\" and 2nd param is '', when calling page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t// Enable this line to know who call the GETPOST with '' $check parameter.\n\t\t//var_dump(debug_backtrace()[0]);\n\t}\n\n\tif (empty($method)) $out = isset($_GET[$paramname])?$_GET[$paramname]:(isset($_POST[$paramname])?$_POST[$paramname]:'');\n\telseif ($method==1) $out = isset($_GET[$paramname])?$_GET[$paramname]:'';\n\telseif ($method==2) $out = isset($_POST[$paramname])?$_POST[$paramname]:'';\n\telseif ($method==3) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:'');\n\telseif ($method==4) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:(isset($_COOKIE[$paramname])?$_COOKIE[$paramname]:''));\n\telse return 'BadThirdParameterForGETPOST';\n\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n\n\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t// Clean $relativepathstring\n\t\tif (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t//var_dump($relativepathstring);\n\t\t//var_dump($user->default_values);\n\n\t\t// Code for search criteria persistence.\n\t\t// Retrieve values if restore_lastsearch_values is set and there is saved values\n\t\tif (! empty($_GET['restore_lastsearch_values']) && ! empty($_SESSION['lastsearch_values_'.$relativepathstring]))        // Keep $_GET here\n\t\t{\n\t\t\t$tmp=json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t\t\tif (is_array($tmp))\n\t\t\t{\n\t\t\t\tforeach($tmp as $key => $val)\n\t\t\t\t{\n\t\t\t\t\tif ($key == $paramname)\n\t\t\t\t\t{\n\t\t\t\t\t\t$out=$val;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Else, retreive default values if we are not doing a sort\n\t\telseif (! isset($_GET['sortfield']))\t// If we did a click on a field to sort, we do no apply default values. Same if option MAIN_ENABLE_DEFAULT_VALUES is not set\n\t\t{\n\t\t\tif (! empty($_GET['action']) && $_GET['action'] == 'create' && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t{\n\t\t\t\t// Search default value from $object->field\n\t\t\t\tglobal $object;\n\t\t\t\tif (is_object($object) && isset($object->fields[$paramname]['default']))\n\t\t\t\t{\n\t\t\t\t\t$out = $object->fields[$paramname]['default'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_ENABLE_DEFAULT_VALUES))\n\t\t\t{\n\t\t\t\tif (! empty($_GET['action']) && $_GET['action'] == 'create' && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t\t{\n\t\t\t\t\t// Now search in setup to overwrite default values\n\t\t\t\t\tif (! empty($user->default_values))\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t{\n\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['createform'] as $defkey => $defval)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave=explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave=explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru=0;\n\t\t\t\t\t\t\t\t\tforeach($tmpqueryarraytohave as $tmpquerytohave)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! in_array($tmpquerytohave, $tmpqueryarraywehave)) $foundintru=1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (! $foundintru) $qualified=1;\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse $qualified = 1;\n\n\t\t\t\t\t\t\t\tif ($qualified)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t//var_dump($user->default_values[$relativepathstring][$defkey]['createform']);\n\t\t\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform'][$defkey][$paramname]))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$out = $user->default_values[$relativepathstring]['createform'][$defkey][$paramname];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Management of default search_filters and sort order\n\t\t\t\t//elseif (preg_match('/list.php$/', $_SERVER[\"PHP_SELF\"]) && ! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t\telseif (! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t\t{\n\t\t\t\t\tif (! empty($user->default_values))\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t{\n\t\t\t\t\t\t//var_dump($user->default_values[$relativepathstring]);\n\t\t\t\t\t\tif ($paramname == 'sortfield' || $paramname == 'sortorder')\t\t\t// Sorted on which fields ? ASC or DESC ?\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['sortorder']))\t// Even if paramname is sortfield, data are stored into ['sortorder...']\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['sortorder'] as $defkey => $defval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\t\tif ($defkey != '_noquery_')\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave=explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave=explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t\t$foundintru=0;\n\t\t\t\t\t\t\t\t\t\tforeach($tmpqueryarraytohave as $tmpquerytohave)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! in_array($tmpquerytohave, $tmpqueryarraywehave)) $foundintru=1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (! $foundintru) $qualified=1;\n\t\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse $qualified = 1;\n\n\t\t\t\t\t\t\t\t\tif ($qualified)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['sortorder'][$defkey] as $key => $val)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif ($out) $out.=', ';\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortfield')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$out.=dol_string_nospecial($key, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortorder')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$out.=dol_string_nospecial($val, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//break;\t// No break for sortfield and sortorder so we can cumulate fields (is it realy usefull ?)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telseif (isset($user->default_values[$relativepathstring]['filters']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['filters'] as $defkey => $defval)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave=explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave=explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru=0;\n\t\t\t\t\t\t\t\t\tforeach($tmpqueryarraytohave as $tmpquerytohave)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! in_array($tmpquerytohave, $tmpqueryarraywehave)) $foundintru=1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (! $foundintru) $qualified=1;\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse $qualified = 1;\n\n\t\t\t\t\t\t\t\tif ($qualified)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (isset($_POST['sall']) || isset($_POST['search_all']) || isset($_GET['sall']) || isset($_GET['search_all']))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// We made a search from quick search menu, do we still use default filter ?\n\t\t\t\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_DEFAULT_FILTER_FOR_QUICK_SEARCH))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Substitution variables for GETPOST (used to get final url with variable parameters or final default value with variable paramaters)\n\t// Example of variables: __DAY__, __MONTH__, __YEAR__, __MYCOMPANY_COUNTRY_ID__, __USER_ID__, ...\n\t// We do this only if var is a GET. If it is a POST, may be we want to post the text with vars as the setup text.\n\tif (! is_array($out) && empty($_POST[$paramname]) && empty($noreplace))\n\t{\n\t\t$maxloop=20; $loopnb=0;    // Protection against infinite loop\n\t\twhile (preg_match('/__([A-Z0-9]+_?[A-Z0-9]+)__/i', $out, $reg) && ($loopnb < $maxloop))    // Detect '__ABCDEF__' as key 'ABCDEF' and '__ABC_DEF__' as key 'ABC_DEF'. Detection is also correct when 2 vars are side by side.\n\t\t{\n\t\t\t\t$loopnb++; $newout = '';\n\n\t\t\t\tif ($reg[1] == 'DAY')                { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mday']; }\n\t\t\t\telseif ($reg[1] == 'MONTH')          { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mon'];  }\n\t\t\t\telseif ($reg[1] == 'YEAR')           { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['year']; }\n\t\t\t\telseif ($reg[1] == 'PREVIOUS_DAY')   { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n\t\t\t\telseif ($reg[1] == 'PREVIOUS_MONTH') { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n\t\t\t\telseif ($reg[1] == 'PREVIOUS_YEAR')  { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] - 1); }\n\t\t\t\telseif ($reg[1] == 'NEXT_DAY')       { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n\t\t\t\telseif ($reg[1] == 'NEXT_MONTH')     { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n\t\t\t\telseif ($reg[1] == 'NEXT_YEAR')      { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] + 1); }\n\t\t\t\telseif ($reg[1] == 'MYCOMPANY_COUNTRY_ID' || $reg[1] == 'MYCOUNTRY_ID' || $reg[1] == 'MYCOUNTRYID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $mysoc->country_id;\n\t\t\t\t}\n\t\t\t\telseif ($reg[1] == 'USER_ID' || $reg[1] == 'USERID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $user->id;\n\t\t\t\t}\n\t\t\t\telseif ($reg[1] == 'USER_SUPERVISOR_ID' || $reg[1] == 'SUPERVISOR_ID' || $reg[1] == 'SUPERVISORID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $user->fk_user;\n\t\t\t\t}\n\t\t\t\telseif ($reg[1] == 'ENTITY_ID' || $reg[1] == 'ENTITYID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $conf->entity;\n\t\t\t\t}\n\t\t\t\telse $newout = '';     // Key not found, we replace with empty string\n\t\t\t\t//var_dump('__'.$reg[1].'__ -> '.$newout);\n\t\t\t\t$out = preg_replace('/__'.preg_quote($reg[1],'/').'__/', $newout, $out);\n\t\t}\n\t}\n\n\t// Check is done after replacement\n\tswitch ($check)\n\t{\n\t\tcase 'none':\n\t\t\tbreak;\n\t\tcase 'int':    // Check param is a numeric value (integer but also float or hexadecimal)\n\t\t\tif (! is_numeric($out)) { $out=''; }\n\t\t\tbreak;\n\t\tcase 'intcomma':\n\t\t\tif (preg_match('/[^0-9,-]+/i',$out)) $out='';\n\t\t\tbreak;\n\t\tcase 'alpha':\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\tif (preg_match('/\"/',$out)) $out='';\n\t\t\t\telse if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'san_alpha':\n\t\t\t$out=filter_var($out,FILTER_SANITIZE_STRING);\n\t\t\tbreak;\n\t\tcase 'aZ':\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\tif (preg_match('/[^a-z]+/i',$out)) $out='';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'aZ09':\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\tif (preg_match('/[^a-z0-9_\\-\\.]+/i',$out)) $out='';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'array':\n\t\t\tif (! is_array($out) || empty($out)) $out=array();\n\t\t\tbreak;\n\t\tcase 'nohtml':\t\t// Recommended for most scalar parameters\n\t\t\t$out=dol_string_nohtmltag($out, 0);\n\t\t\tbreak;\n\t\tcase 'alphanohtml':\t// Recommended for search parameters\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\tif (preg_match('/\"/',$out)) $out='';\n\t\t\t\telse if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t\t\t\t$out=dol_string_nohtmltag($out);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'custom':\n\t\t\tif (empty($filter)) return 'BadFourthParameterForGETPOST';\n\t\t\t$out=filter_var($out, $filter, $options);\n\t\t\tbreak;\n\t}\n\n\t// Code for search criteria persistence.\n\t// Save data into session if key start with 'search_' or is 'smonth', 'syear', 'month', 'year'\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n\t\t//if (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder', 'sortfield\", 'smonth', 'syear', 'month', 'year')))\n\t\tif (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder','sortfield')))\n\t\t{\n\t\t\t//var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n\n\t\t\t// We save search key only if:\n\t\t\t// - not empty, or\n\t\t\t// - if value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n\n\t\t\t//if (! empty($out) || ! empty($user->default_values[$relativepathstring]['filters'][$paramname]))\n\t\t\tif (! empty($out))\n\t\t\t{\n\t\t\t\t$user->lastsearch_values_tmp[$relativepathstring][$paramname]=$out;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $out;\n}\n\n\n/**\n *  Return a prefix to use for this Dolibarr instance, for session/cookie names or email id.\n *  This prefix is valid in a web context only and is unique for instance and avoid conflict\n *  between multi-instances, even when having two instances with one root dir or two instances\n *  in virtual servers.\n *\n *  @param  string  $mode       \t\t\t'' (prefix for session name) or 'email' (prefix for email id)\n *  @return\tstring      \t\t\t\t\tA calculated prefix\n */\nif (! function_exists('dol_getprefix'))\n{\n\tfunction dol_getprefix($mode='')\n\t{\n\t\tglobal $conf;\n\n\t\t// If MAIL_PREFIX_FOR_EMAIL_ID is set and prefix is for email\n\t\tif ($mode == 'email' && ! empty($conf->global->MAIL_PREFIX_FOR_EMAIL_ID))\n\t\t{\n\t\t\tif ($conf->global->MAIL_PREFIX_FOR_EMAIL_ID != 'SERVER_NAME') return $conf->global->MAIL_PREFIX_FOR_EMAIL_ID;\n\t\t\telse if (isset($_SERVER[\"SERVER_NAME\"])) return $_SERVER[\"SERVER_NAME\"];\n\t\t}\n\n\t\tif (isset($_SERVER[\"SERVER_NAME\"]) && isset($_SERVER[\"DOCUMENT_ROOT\"]))\n\t\t{\n\t\t\treturn dol_hash($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t\t\t// Use this for a \"readable\" cookie name\n\t\t\t//return dol_sanitizeFileName($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t\t}\n\t\telse return dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t}\n}\n\n/**\n *\tMake an include_once using default root and alternate root if it fails.\n *  To link to a core file, use include(DOL_DOCUMENT_ROOT.'/pathtofile')\n *  To link to a module file from a module file, use include './mymodulefile';\n *  To link to a module file from a core file, then this function can be used (call by hook / trigger / speciales pages)\n *\n * \t@param\tstring\t$relpath\tRelative path to file (Ie: mydir/myfile, ../myfile, ...)\n * \t@param\tstring\t$classname\tClass name (deprecated)\n *  @return bool                True if load is a success, False if it fails\n */\nfunction dol_include_once($relpath, $classname='')\n{\n\tglobal $conf,$langs,$user,$mysoc;   // Do not remove this. They must be defined for files we include. Other globals var must be retreived with $GLOBALS['var']\n\n\t$fullpath = dol_buildpath($relpath);\n\n\tif (!file_exists($fullpath)) {\n\t\tdol_syslog('functions::dol_include_once Tried to load unexisting file: '.$relpath, LOG_ERR);\n\t\treturn false;\n\t}\n\n\tif (! empty($classname) && ! class_exists($classname)) {\n\t\treturn include $fullpath;\n\t} else {\n\t\treturn include_once $fullpath;\n\t}\n}\n\n\n/**\n *\tReturn path of url or filesystem. Return alternate root if exists.\n *\n * \t@param\tstring\t$path\t\t\t\t\t\tRelative path to file (if mode=0) or relative url (if mode=1). Ie: mydir/myfile, ../myfile\n *  @param\tint\t\t$type\t\t\t\t\t\t0=Used for a Filesystem path, 1=Used for an URL path (output relative), 2=Used for an URL path (output full path using same host that current url), 3=Used for an URL path (output full path using host defined into $dolibarr_main_url_root of conf file)\n *  @param\tint\t\t$returnemptyifnotfound\t\t0:If $type==0 and if file was not found into alternate dir, return default path into main dir (no test on it)\n *  \t\t\t\t\t\t\t\t\t\t\t1:If $type==0 and if file was not found into alternate dir, return empty string\n *  \t\t\t\t\t\t\t\t\t\t\t2:If $type==0 and if file was not found into alternate dir, test into main dir, return default path if found, empty string if not found\n *  @return string\t\t\t\t\t\t\t\tFull filesystem path (if path=0), Full url path (if mode=1)\n */\nfunction dol_buildpath($path, $type=0, $returnemptyifnotfound=0)\n{\n\tglobal $conf;\n\n\t$path=preg_replace('/^\\//','',$path);\n\n\tif (empty($type))\t// For a filesystem path\n\t{\n\t\t$res = DOL_DOCUMENT_ROOT.'/'.$path;\t\t// Standard default path\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path))\n\t\t\t{\n\t\t\t\t$res=$dirroot.'/'.$path;\n\t\t\t\treturn $res;\n\t\t\t}\n\t\t}\n\t\tif ($returnemptyifnotfound)\t\t\t\t\t\t\t\t// Not found into alternate dir\n\t\t{\n\t\t\tif ($returnemptyifnotfound == 1 || ! file_exists($res)) return '';\n\t\t}\n\t}\n\telse\t\t\t\t// For an url path\n\t{\n\t\t// We try to get local path of file on filesystem from url\n\t\t// Note that trying to know if a file on disk exist by forging path on disk from url\n\t\t// works only for some web server and some setup. This is bugged when\n\t\t// using proxy, rewriting, virtual path, etc...\n\t\t$res='';\n\t\tif ($type == 1) $res = DOL_URL_ROOT.'/'.$path;\t\t\t// Standard value\n\t\tif ($type == 2) $res = DOL_MAIN_URL_ROOT.'/'.$path;\t\t// Standard value\n\t\tif ($type == 3) $res = DOL_URL_ROOT.'/'.$path;\n\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main')\n\t\t\t{\n\t\t\t\tif ($type == 3)\n\t\t\t\t{\n\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t$urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t\t\t$urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreg_match('/^([^\\?]+(\\.css\\.php|\\.css|\\.js\\.php|\\.js|\\.png|\\.jpg|\\.php)?)/i',$path,$regs);    // Take part before '?'\n\t\t\tif (! empty($regs[1]))\n\t\t\t{\n\t\t\t\t//print $key.'-'.$dirroot.'/'.$path.'-'.$conf->file->dol_url_root[$type].'<br>'.\"\\n\";\n\t\t\t\tif (file_exists($dirroot.'/'.$regs[1]))\n\t\t\t\t{\n\t\t\t\t\tif ($type == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_MAIN_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t\t$urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t\t\t\t$urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).$conf->file->dol_url_root[$key].'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $res;\n}\n\n/**\n *\tCreate a clone of instance of object (new instance with same value for properties)\n *  With native = 0: Property that are reference are also new object (true clone). This means $this->db is not valid.\n *  With native = 1: Use PHP clone. Property that are reference are same pointer. This means $this->db is still valid.\n *\n * \t@param\tobject\t$object\t\tObject to clone\n *  @param\tint\t\t$native\t\tNative method or true method\n *\t@return object\t\t\t\tObject clone\n *  @see https://php.net/manual/language.oop5.cloning.php\n */\nfunction dol_clone($object, $native=0)\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tif (empty($native))\n\t{\n\t\t$myclone=unserialize(serialize($object));\n\t}\n\telse\n\t{\n\t\t$myclone = clone $object;     // PHP clone is a shallow copy only, not a real clone, so properties of references will keep references (refer to the same target/variable)\n\t}\n\n\treturn $myclone;\n}\n\n/**\n *\tOptimize a size for some browsers (phone, smarphone, ...)\n *\n * \t@param\tint\t\t$size\t\tSize we want\n * \t@param\tstring\t$type\t\tType of optimizing:\n * \t\t\t\t\t\t\t\t'' = function used to define a size for truncation\n * \t\t\t\t\t\t\t\t'width' = function is used to define a width\n *\t@return int\t\t\t\t\tNew size after optimizing\n */\nfunction dol_size($size,$type='')\n{\n\tglobal $conf;\n\tif (empty($conf->dol_optimize_smallscreen)) return $size;\n\tif ($type == 'width' && $size > 250) return 250;\n\telse return 10;\n}\n\n\n/**\n *\tClean a string to use it as a file name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizePathName\n */\nfunction dol_sanitizeFileName($str,$newstr='_',$unaccent=1)\n{\n\t$filesystem_forbidden_chars = array('<','>','/','\\\\','?','*','|','\"','\u00b0');\n\treturn dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string to use it as a path name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizeFileName\n */\nfunction dol_sanitizePathName($str,$newstr='_',$unaccent=1)\n{\n\t$filesystem_forbidden_chars = array('<','>','?','*','|','\"','\u00b0');\n\treturn dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string from all accent characters to be used as ref, login or by dol_sanitizeFileName\n *\n *\t@param\tstring\t$str\t\t\tString to clean\n *\t@return string   \t       \t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_nospecial\n */\nfunction dol_string_unaccent($str)\n{\n\tif (utf8_check($str))\n\t{\n\t\t// See http://www.utf8-chartable.de/\n\t\t$string = rawurlencode($str);\n\t\t$replacements = array(\n\t\t'%C3%80' => 'A','%C3%81' => 'A','%C3%82' => 'A','%C3%83' => 'A','%C3%84' => 'A','%C3%85' => 'A',\n\t\t'%C3%88' => 'E','%C3%89' => 'E','%C3%8A' => 'E','%C3%8B' => 'E',\n\t\t'%C3%8C' => 'I','%C3%8D' => 'I','%C3%8E' => 'I','%C3%8F' => 'I',\n\t\t'%C3%92' => 'O','%C3%93' => 'O','%C3%94' => 'O','%C3%95' => 'O','%C3%96' => 'O',\n\t\t'%C3%99' => 'U','%C3%9A' => 'U','%C3%9B' => 'U','%C3%9C' => 'U',\n\t\t'%C3%A0' => 'a','%C3%A1' => 'a','%C3%A2' => 'a','%C3%A3' => 'a','%C3%A4' => 'a','%C3%A5' => 'a',\n\t\t'%C3%A7' => 'c',\n\t\t'%C3%A8' => 'e','%C3%A9' => 'e','%C3%AA' => 'e','%C3%AB' => 'e',\n\t\t'%C3%AC' => 'i','%C3%AD' => 'i','%C3%AE' => 'i','%C3%AF' => 'i',\n\t\t'%C3%B1' => 'n',\n\t\t'%C3%B2' => 'o','%C3%B3' => 'o','%C3%B4' => 'o','%C3%B5' => 'o','%C3%B6' => 'o',\n\t\t'%C3%B9' => 'u','%C3%BA' => 'u','%C3%BB' => 'u','%C3%BC' => 'u',\n\t\t'%C3%BF' => 'y'\n\t\t);\n\t\t$string=strtr($string, $replacements);\n\t\treturn rawurldecode($string);\n\t}\n\telse\n\t{\n\t\t// See http://www.ascii-code.com/\n\t\t$string = strtr(\n\t\t\t$str,\n\t\t\t\"\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC7\n\t\t\t\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\n\t\t\t\\xD2\\xD3\\xD4\\xD5\\xD8\\xD9\\xDA\\xDB\\xDD\n\t\t\t\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE7\\xE8\\xE9\\xEA\\xEB\n\t\t\t\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF8\n\t\t\t\\xF9\\xFA\\xFB\\xFC\\xFD\\xFF\",\n\t\t\t\"AAAAAAC\n\t\t\tEEEEIIIIDN\n\t\t\tOOOOOUUUY\n\t\t\taaaaaaceeee\n\t\t\tiiiidnooooo\n\t\t\tuuuuyy\"\n\t\t);\n\t\t$string = strtr($string, array(\"\\xC4\"=>\"Ae\", \"\\xC6\"=>\"AE\", \"\\xD6\"=>\"Oe\", \"\\xDC\"=>\"Ue\", \"\\xDE\"=>\"TH\", \"\\xDF\"=>\"ss\", \"\\xE4\"=>\"ae\", \"\\xE6\"=>\"ae\", \"\\xF6\"=>\"oe\", \"\\xFC\"=>\"ue\", \"\\xFE\"=>\"th\"));\n\t\treturn $string;\n\t}\n}\n\n/**\n *\tClean a string from all punctuation characters to use it as a ref or login.\n *  This is a more complete function than dol_sanitizeFileName.\n *\n *\t@param\tstring\t$str            \tString to clean\n * \t@param\tstring\t$newstr\t\t\t\tString to replace forbidden chars with\n *  @param  array\t$badcharstoreplace  List of forbidden characters\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_unaccent\n */\nfunction dol_string_nospecial($str,$newstr='_',$badcharstoreplace='')\n{\n\t$forbidden_chars_to_replace=array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \",\", \";\", \"=\", '\u00b0');  // more complete than dol_sanitizeFileName\n\t$forbidden_chars_to_remove=array();\n\tif (is_array($badcharstoreplace)) $forbidden_chars_to_replace=$badcharstoreplace;\n\t//$forbidden_chars_to_remove=array(\"(\",\")\");\n\n\treturn str_replace($forbidden_chars_to_replace,$newstr,str_replace($forbidden_chars_to_remove,\"\",$str));\n}\n\n\n/**\n * Encode string for xml usage\n *\n * @param \tstring\t$string\t\tString to encode\n * @return\tstring\t\t\t\tString encoded\n */\nfunction dolEscapeXML($string)\n{\n\treturn strtr($string, array('\\''=>'&apos;','\"'=>'&quot;','&'=>'&amp;','<'=>'&lt;','>'=>'&gt;'));\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t$mode\t\t\t\t0=Escape also ' and \" into ', 1=Escape ' but not \" for usage into 'string', 2=Escape \" but not ' for usage into \"string\", 3=Escape ' and \" with \\\n *  @param\t\tint\t\t$noescapebackslashn\t0=Escape also \\n. 1=Do not escape \\n.\n *  @return     string     \t\t \t\t\t\tEscaped string. Both ' and \" are escaped into ' if they are escaped.\n */\nfunction dol_escape_js($stringtoescape, $mode=0, $noescapebackslashn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$substitjs=array(\"&#039;\"=>\"\\\\'\",\"\\r\"=>'\\\\r');\n\t//$substitjs['</']='<\\/';\t// We removed this. Should be useless.\n\tif (empty($noescapebackslashn)) { $substitjs[\"\\n\"]='\\\\n'; $substitjs['\\\\']='\\\\\\\\'; }\n\tif (empty($mode)) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\'\"; }\n\telse if ($mode == 1) $substitjs[\"'\"]=\"\\\\'\";\n\telse if ($mode == 2) { $substitjs['\"']='\\\\\"'; }\n\telse if ($mode == 3) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\\\\"\"; }\n\treturn strtr($stringtoescape, $substitjs);\n}\n\n\n/**\n *  Returns text escaped for inclusion in HTML alt or title tags, or into values of HTML input fields.\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t\t$keepb\t\t\t\t1=Preserve b tags (otherwise, remove them)\n *  @param      int         $keepn              1=Preserve \\r\\n strings (otherwise, replace them with escaped value)\n *  @return     string     \t\t\t\t \t\tEscaped string\n *  @see\t\tdol_string_nohtmltag\n */\nfunction dol_escape_htmltag($stringtoescape, $keepb=0, $keepn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$tmp=html_entity_decode($stringtoescape, ENT_COMPAT, 'UTF-8');\t\t// TODO Use htmlspecialchars_decode instead, that make only required change for html tags\n\tif (! $keepb) $tmp=strtr($tmp, array(\"<b>\"=>'','</b>'=>''));\n\tif (! $keepn) $tmp=strtr($tmp, array(\"\\r\"=>'\\\\r',\"\\n\"=>'\\\\n'));\n\treturn htmlentities($tmp, ENT_COMPAT, 'UTF-8');\t\t\t\t\t\t// TODO Use htmlspecialchars instead, that make only required change for html tags\n}\n\n\n/**\n * Convert a string to lower. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtolower($utf8_string)\n{\n\treturn mb_strtolower($utf8_string, \"UTF-8\");\n}\n\n/**\n * Convert a string to upper. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtoupper($utf8_string)\n{\n\treturn mb_strtoupper($utf8_string, \"UTF-8\");\n}\n\n\n/**\n *\tWrite log message into outputs. Possible outputs can be:\n *\tSYSLOG_HANDLERS = [\"mod_syslog_file\"]  \t\tfile name is then defined by SYSLOG_FILE\n *\tSYSLOG_HANDLERS = [\"mod_syslog_syslog\"]  \tfacility is then defined by SYSLOG_FACILITY\n *  Warning, syslog functions are bugged on Windows, generating memory protection faults. To solve\n *  this, use logging to files instead of syslog (see setup of module).\n *  Note: If constant 'SYSLOG_FILE_NO_ERROR' defined, we never output any error message when writing to log fails.\n *  Note: You can get log message into html sources by adding parameter &logtohtml=1 (constant MAIN_LOGTOHTML must be set)\n *  This function works only if syslog module is enabled.\n * \tThis must not use any call to other function calling dol_syslog (avoid infinite loop).\n *\n * \t@param  string\t\t$message\t\t\t\tLine to log. ''=Show nothing\n *  @param  int\t\t\t$level\t\t\t\t\tLog level\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Windows LOG_ERR=4, LOG_WARNING=5, LOG_NOTICE=LOG_INFO=6, LOG_DEBUG=6 si define_syslog_variables ou PHP 5.3+, 7 si dolibarr\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Linux   LOG_ERR=3, LOG_WARNING=4, LOG_INFO=6, LOG_DEBUG=7\n *  @param\tint\t\t\t$ident\t\t\t\t\t1=Increase ident of 1, -1=Decrease ident of 1\n *  @param\tstring\t\t$suffixinfilename\t\tWhen output is a file, append this suffix into default log filename.\n *  @param\tstring\t\t$restricttologhandler\tOutput log only for this log handler\n *  @return\tvoid\n */\nfunction dol_syslog($message, $level = LOG_INFO, $ident = 0, $suffixinfilename='', $restricttologhandler='')\n{\n\tglobal $conf, $user;\n\n\t// If syslog module enabled\n\tif (empty($conf->syslog->enabled)) return;\n\n\tif (! empty($message))\n\t{\n\t\t// Test log level\n\t\t$logLevels = array(LOG_EMERG, LOG_ALERT, LOG_CRIT, LOG_ERR, LOG_WARNING, LOG_NOTICE, LOG_INFO, LOG_DEBUG);\n\t\tif (!in_array($level, $logLevels, true))\n\t\t{\n\t\t\tthrow new Exception('Incorrect log level');\n\t\t}\n\t\tif ($level > $conf->global->SYSLOG_LEVEL) return;\n\n\t\t// If adding log inside HTML page is required\n\t\tif (! empty($_REQUEST['logtohtml']) && (! empty($conf->global->MAIN_ENABLE_LOG_TO_HTML) || ! empty($conf->global->MAIN_LOGTOHTML)))   // MAIN_LOGTOHTML kept for backward compatibility\n\t\t{\n\t\t\t$conf->logbuffer[] = dol_print_date(time(),\"%Y-%m-%d %H:%M:%S\").\" \".$message;\n\t\t}\n\n\t\t//TODO: Remove this. MAIN_ENABLE_LOG_INLINE_HTML should be deprecated and use a log handler dedicated to HTML output\n\t\t// If enable html log tag enabled and url parameter log defined, we show output log on HTML comments\n\t\tif (! empty($conf->global->MAIN_ENABLE_LOG_INLINE_HTML) && ! empty($_GET[\"log\"]))\n\t\t{\n\t\t\tprint \"\\n\\n<!-- Log start\\n\";\n\t\t\tprint $message.\"\\n\";\n\t\t\tprint \"Log end -->\\n\";\n\t\t}\n\n\t\t$data = array(\n\t\t\t'message' => $message,\n\t\t\t'script' => (isset($_SERVER['PHP_SELF'])? basename($_SERVER['PHP_SELF'],'.php') : false),\n\t\t\t'level' => $level,\n\t\t\t'user' => ((is_object($user) && $user->id) ? $user->login : false),\n\t\t\t'ip' => false\n\t\t);\n\n\t\t// This is when server run behind a reverse proxy\n\t\tif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) $data['ip'] = $_SERVER['HTTP_X_FORWARDED_FOR'].(empty($_SERVER[\"REMOTE_ADDR\"])?'':'->'.$_SERVER['REMOTE_ADDR']);\n\t\t// This is when server run normally on a server\n\t\telse if (! empty($_SERVER[\"REMOTE_ADDR\"])) $data['ip'] = $_SERVER['REMOTE_ADDR'];\n\t\t// This is when PHP session is ran inside a web server but not inside a client request (example: init code of apache)\n\t\telse if (! empty($_SERVER['SERVER_ADDR'])) $data['ip'] = $_SERVER['SERVER_ADDR'];\n\t\t// This is when PHP session is ran outside a web server, like from Windows command line (Not always defined, but useful if OS defined it).\n\t\telse if (! empty($_SERVER['COMPUTERNAME'])) $data['ip'] = $_SERVER['COMPUTERNAME'].(empty($_SERVER['USERNAME'])?'':'@'.$_SERVER['USERNAME']);\n\t\t// This is when PHP session is ran outside a web server, like from Linux command line (Not always defined, but usefull if OS defined it).\n\t\telse if (! empty($_SERVER['LOGNAME'])) $data['ip'] = '???@'.$_SERVER['LOGNAME'];\n\t\t// Loop on each log handler and send output\n\t\tforeach ($conf->loghandlers as $loghandlerinstance)\n\t\t{\n\t\t\tif ($restricttologhandler && $loghandlerinstance->code != $restricttologhandler) continue;\n\t\t\t$loghandlerinstance->export($data,$suffixinfilename);\n\t\t}\n\t\tunset($data);\n\t}\n\n\tif (! empty($ident))\n\t{\n\t\tforeach ($conf->loghandlers as $loghandlerinstance)\n\t\t{\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n}\n\n\n/**\n *\tShow tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs. Currently initialized by calling a function xxx_admin_prepare_head\n *\t@param\tstring\t$active     \t\tActive tab name (document', 'info', 'ldap', ....)\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n * \t@return\tvoid\n */\nfunction dol_fiche_head($links=array(), $active='0', $title='', $notab=0, $picto='', $pictoisfullpath=0, $morehtmlright='', $morecss='')\n{\n\tprint dol_get_fiche_head($links, $active, $title, $notab, $picto, $pictoisfullpath, $morehtmlright, $morecss);\n}\n\n/**\n *  Show tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs\n *\t@param\tstring\t$active     \t\tActive tab name\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n * \t@return\tstring\n */\nfunction dol_get_fiche_head($links=array(), $active='', $title='', $notab=0, $picto='', $pictoisfullpath=0, $morehtmlright='', $morecss='')\n{\n\tglobal $conf, $langs, $hookmanager;\n\n\t$out=\"\\n\".'<div class=\"tabs\" data-role=\"controlgroup\" data-type=\"horizontal\">'.\"\\n\";\n\n\tif ($morehtmlright) $out.='<div class=\"inline-block floatright tabsElem\">'.$morehtmlright.'</div>';\t// Output right area first so when space is missing, text is in front of tabs and not under.\n\n\t// Show title\n\t$showtitle=1;\n\tif (! empty($conf->dol_optimize_smallscreen)) $showtitle=0;\n\tif (! empty($title) && $showtitle)\n\t{\n\t\t$limittitle=30;\n\t\t$out.='<a class=\"tabTitle\">';\n\t\tif ($picto) $out.=img_picto($title,($pictoisfullpath?'':'object_').$picto,'',$pictoisfullpath).' ';\n\t\t$out.='<span class=\"tabTitleText\">'.dol_trunc($title,$limittitle).'</span>';\n\t\t$out.='</a>';\n\t}\n\n\t// Define max of key (max may be higher than sizeof because of hole due to module disabling some tabs).\n\t$maxkey=-1;\n\tif (is_array($links) && ! empty($links))\n\t{\n\t\t$keys=array_keys($links);\n\t\tif (count($keys)) $maxkey=max($keys);\n\t}\n\n\tif (! empty($conf->dol_optimize_smallscreen)) $conf->global->MAIN_MAXTABS_IN_CARD=2;\n\n\t// Show tabs\n\t$bactive=false;\n\t// if =0 we don't use the feature\n\t$limittoshow=(empty($conf->global->MAIN_MAXTABS_IN_CARD)?99:$conf->global->MAIN_MAXTABS_IN_CARD);\n\t$displaytab=0;\n\t$nbintab=0;\n\t$popuptab=0; $outmore='';\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t// If active tab is already present\n\t\t\tif ($i >= $limittoshow) $limittoshow--;\n\t\t}\n\t}\n\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t$isactive=true;\n\t\t\t$bactive=true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$isactive=false;\n\t\t}\n\n\t\tif ($i < $limittoshow || $isactive)\n\t\t{\n\t\t\t$out.='<div class=\"inline-block tabsElem'.($isactive ? ' tabsElemActive' : '').((! $isactive && ! empty($conf->global->MAIN_HIDE_INACTIVETAB_ON_PRINT))?' hideonprint':'').'\"><!-- id tab = '.(empty($links[$i][2])?'':$links[$i][2]).' -->';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t{\n\t\t\t\t\t$out.='<a class=\"tabimage'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t{\n\t\t\t\t//print \"x $i $active \".$links[$i][2].\" z\";\n\t\t\t\tif ($isactive)\n\t\t\t\t{\n\t\t\t\t\t$out.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabactive tab inline-block'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t\t$out.=$links[$i][1];\n\t\t\t\t\t$out.='</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabunactive tab inline-block'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t\t$out.=$links[$i][1];\n\t\t\t\t\t$out.='</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.='</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// The popup with the other tabs\n\t\t\tif (! $popuptab)\n\t\t\t{\n\t\t\t\t$popuptab=1;\n\t\t\t\t$outmore.='<div class=\"popuptabset wordwrap\">';\t// The css used to hide/show popup\n\t\t\t}\n\t\t\t$outmore.='<div class=\"popuptab wordwrap\" style=\"display:inherit;\">';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t\t$outmore.='<a class=\"tabimage'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\telse\n\t\t\t\t\t$outmore.='<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t{\n\t\t\t\t$outmore.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"wordwrap inline-block'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t$outmore.=preg_replace('/([a-z])\\/([a-z])/i', '\\\\1 / \\\\2', $links[$i][1]);\t// Replace x/y with x / y to allow wrap on long composed texts.\n\t\t\t\t$outmore.='</a>'.\"\\n\";\n\t\t\t}\n\t\t\t$outmore.='</div>';\n\n\t\t\t$nbintab++;\n\t\t}\n\t\t$displaytab=$i;\n\t}\n\tif ($popuptab) $outmore.='</div>';\n\n\tif ($displaytab > $limittoshow)\n\t{\n\t\t$left=($langs->trans(\"DIRECTION\") == 'rtl'?'right':'left');\n\t\t$right=($langs->trans(\"DIRECTION\") == 'rtl'?'left':'right');\n\n\t\t$tabsname=str_replace(\"@\", \"\", $picto);\n\t\t$out.='<div id=\"moretabs'.$tabsname.'\" class=\"inline-block tabsElem\">';\n\t\t$out.='<a href=\"#\" class=\"tab moretab inline-block tabunactive reposition\">'.$langs->trans(\"More\").'... ('.$nbintab.')</a>';\n\t\t$out.='<div id=\"moretabsList'.$tabsname.'\" style=\"position: absolute; '.$left.': -999em; text-align: '.$left.'; margin:0px; padding:2px\">';\n\t\t$out.=$outmore;\n\t\t$out.='</div>';\n\t\t$out.='<div></div>';\n\t\t$out.=\"</div>\\n\";\n\n\t\t$out.=\"<script>\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseenter( function() { console.log('mouseenter \".$left.\"'); $('#moretabsList\".$tabsname.\"').css('\".$left.\"','auto');});\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseleave( function() { console.log('mouseleave \".$left.\"'); $('#moretabsList\".$tabsname.\"').css('\".$left.\"','-999em');});\";\n\t\t$out.=\"</script>\";\n\t}\n\n\t$out.=\"</div>\\n\";\n\n\tif (! $notab || $notab == -1) $out.=\"\\n\".'<div class=\"tabBar'.($notab == -1 ? '' : ' tabBarWithBottom').'\">'.\"\\n\";\n\n\t$parameters=array('tabname' => $active, 'out' => $out);\n\t$reshook=$hookmanager->executeHooks('printTabsHead',$parameters);\t// This hook usage is called just before output the head of tabs. Take also a look at \"completeTabsHead\"\n\tif ($reshook > 0)\n\t{\n\t\t$out = $hookmanager->resPrint;\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Show tab footer of a card\n *\n *  @param\tint\t\t$notab       -1 or 0=Add tab footer, 1=no tab footer\n *  @return\tvoid\n */\nfunction dol_fiche_end($notab=0)\n{\n\tprint dol_get_fiche_end($notab);\n}\n\n/**\n *\tReturn tab footer of a card\n *\n *\t@param  int\t\t$notab\t\t-1 or 0=Add tab footer, 1=no tab footer\n *  @return\tstring\n */\nfunction dol_get_fiche_end($notab=0)\n{\n\tif (! $notab || $notab == -1) return \"\\n</div>\\n\";\n\telse return '';\n}\n\n/**\n *  Show tab footer of a card.\n *  Note: $object->next_prev_filter can be set to restrict select to find next or previous record by $form->showrefnav.\n *\n *  @param\tObject\t$object\t\t\tObject to show\n *  @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link\n *  @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar\n *  @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1)\n *  @param\tstring\t$fieldid   \t\tNom du champ en base a utiliser pour select next et previous (we make the select max and min on this field). Use 'none' for no prev/next search.\n *  @param\tstring\t$fieldref   \tNom du champ objet ref (object->ref) a utiliser pour select next et previous\n *  @param\tstring\t$morehtmlref  \tMore html to show after ref\n *  @param\tstring\t$moreparam  \tMore param to add in nav link url.\n *\t@param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name\n *\t@param\tstring\t$morehtmlleft\tMore html code to show before ref\n *\t@param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows\n *  @param  int     $onlybanner     Put this to 1, if the card will contains only a banner (this add css 'arearefnobottom' on div)\n *\t@param\tstring\t$morehtmlright\tMore html code to show before navigation arrows\n *  @return\tvoid\n */\nfunction dol_banner_tab($object, $paramid, $morehtml='', $shownav=1, $fieldid='rowid', $fieldref='ref', $morehtmlref='', $moreparam='', $nodbprefix=0, $morehtmlleft='', $morehtmlstatus='', $onlybanner=0, $morehtmlright='')\n{\n\tglobal $conf, $form, $user, $langs;\n\n\t$error = 0;\n\n\t$maxvisiblephotos=1;\n\t$showimage=1;\n\t$showbarcode=empty($conf->barcode->enabled)?0:($object->barcode?1:0);\n\tif (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\t$modulepart='unknown';\n\n\tif ($object->element == 'societe')         $modulepart='societe';\n\tif ($object->element == 'contact')         $modulepart='contact';\n\tif ($object->element == 'member')          $modulepart='memberphoto';\n\tif ($object->element == 'user')            $modulepart='userphoto';\n\tif ($object->element == 'product')         $modulepart='product';\n\n\tif (class_exists(\"Imagick\"))\n\t{\n\t\tif ($object->element == 'propal')            $modulepart='propal';\n\t\tif ($object->element == 'commande')          $modulepart='commande';\n\t\tif ($object->element == 'facture')           $modulepart='facture';\n\t\tif ($object->element == 'fichinter')         $modulepart='ficheinter';\n\t\tif ($object->element == 'contrat')           $modulepart='contract';\n\t\tif ($object->element == 'supplier_proposal') $modulepart='supplier_proposal';\n\t\tif ($object->element == 'order_supplier')    $modulepart='supplier_order';\n\t\tif ($object->element == 'invoice_supplier')  $modulepart='supplier_invoice';\n\t\tif ($object->element == 'expensereport')     $modulepart='expensereport';\n\t}\n\n\tif ($object->element == 'product')\n\t{\n\t\t$width=80; $cssclass='photoref';\n\t\t$showimage=$object->is_photo_available($conf->product->multidir_output[$object->entity]);\n\t\t$maxvisiblephotos=(isset($conf->global->PRODUCT_MAX_VISIBLE_PHOTO)?$conf->global->PRODUCT_MAX_VISIBLE_PHOTO:5);\n\t\tif ($conf->browser->phone) $maxvisiblephotos=1;\n\t\tif ($showimage) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$object->show_photos($conf->product->multidir_output[$object->entity],'small',$maxvisiblephotos,0,0,0,$width,0).'</div>';\n\t\telse\n\t\t{\n\t\t\tif (!empty($conf->global->PRODUCT_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto='';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t}\n\t\t\t//elseif ($conf->browser->layout != 'phone') {    // Show no photo link\n\t\t\t\t$nophoto='/public/theme/common/nophoto.png';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.DOL_URL_ROOT.$nophoto.'\"></div>';\n\t\t\t//}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($showimage)\n\t\t{\n\t\t\tif ($modulepart != 'unknown')\n\t\t\t{\n\t\t\t\t$phototoshow='';\n\t\t\t\t// Check if a preview file is available\n\t\t\t\tif (in_array($modulepart, array('propal', 'commande', 'facture', 'ficheinter', 'contract', 'supplier_order', 'supplier_proposal', 'supplier_invoice', 'expensereport')) && class_exists(\"Imagick\"))\n\t\t\t\t{\n\t\t\t\t\t$objectref = dol_sanitizeFileName($object->ref);\n\t\t\t\t\t$dir_output = $conf->$modulepart->dir_output . \"/\";\n\t\t\t\t\tif (in_array($modulepart, array('invoice_supplier', 'supplier_invoice')))\n\t\t\t\t\t{\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 2, 0, 0, $object, $modulepart).$objectref;\t\t// the objectref dir is not include into get_exdir when used with level=2, so we add it here\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 0, 0, 0, $object, $modulepart);\n\t\t\t\t\t}\n\n\t\t\t\t\t$filepath = $dir_output . $subdir . \"/\";\n\t\t\t\t\t$file = $filepath . $objectref . \".pdf\";\n\t\t\t\t\t$relativepath = $subdir.'/'.$objectref.'.pdf';\n\n\t\t\t\t\t// Define path to preview pdf file (preview precompiled \"file.ext\" are \"file.ext_preview.png\")\n\t\t\t\t\t$fileimage = $file.'_preview.png';              // If PDF has 1 page\n\t\t\t\t\t$fileimagebis = $file.'_preview-0.png';         // If PDF has more than one page\n\t\t\t\t\t$relativepathimage = $relativepath.'_preview.png';\n\n\t\t\t\t\t// Si fichier PDF existe\n\t\t\t\t\tif (file_exists($file))\n\t\t\t\t\t{\n\t\t\t\t\t\t$encfile = urlencode($file);\n\t\t\t\t\t\t// Conversion du PDF en image png si fichier png non existant\n\t\t\t\t\t\tif ( (! file_exists($fileimage) || (filemtime($fileimage) < filemtime($file)))\n\t\t\t\t\t\t  && (! file_exists($fileimagebis) || (filemtime($fileimagebis) < filemtime($file)))\n\t\t\t\t\t\t   )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_PDF_THUMBS))\t\t// If you experienc trouble with pdf thumb generation and imagick, you can disable here.\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$ret = dol_convert_file($file, 'png', $fileimage);\n\t\t\t\t\t\t\t\tif ($ret < 0) $error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$heightforphotref=70;\n\t\t\t\t\t\tif (! empty($conf->dol_optimize_smallscreen)) $heightforphotref=60;\n\t\t\t\t\t\t// Si fichier png PDF d'1 page trouve\n\t\t\t\t\t\tif (file_exists($fileimage))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t\t\t\t$phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($relativepathimage).'\">';\n\t\t\t\t\t\t\t$phototoshow.= '</div></div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Si fichier png PDF de plus d'1 page trouve\n\t\t\t\t\t\telseif (file_exists($fileimagebis))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$preview = preg_replace('/\\.png/','',$relativepathimage) . \"-0.png\";\n\t\t\t\t\t\t\t$phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t\t\t\t$phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($preview).'\"><p>';\n\t\t\t\t\t\t\t$phototoshow.= '</div></div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (! $phototoshow)\n\t\t\t\t{\n\t\t\t\t\t$phototoshow = $form->showphoto($modulepart,$object,0,0,0,'photoref','small',1,0,$maxvisiblephotos);\n\t\t\t\t}\n\n\t\t\t\tif ($phototoshow)\n\t\t\t\t{\n\t\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\t\t$morehtmlleft.=$phototoshow;\n\t\t\t\t\t$morehtmlleft.='</div>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $phototoshow)      // Show No photo link (picto of pbject)\n\t\t\t{\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\tif ($object->element == 'action')\n\t\t\t\t{\n\t\t\t\t\t$width=80;\n\t\t\t\t\t$cssclass='photorefcenter';\n\t\t\t\t\t$nophoto=img_picto('', 'title_agenda', '', false, 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$width=14; $cssclass='photorefcenter';\n\t\t\t\t\t$picto = $object->picto;\n\t\t\t\t\tif ($object->element == 'project' && ! $object->public) $picto = 'project'; // instead of projectpub\n\t\t\t\t\t$nophoto=img_picto('', 'object_'.$picto, '', false, 1);\n\t\t\t\t}\n\t\t\t\t$morehtmlleft.='<!-- No photo to show -->';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.$nophoto.'\"></div></div>';\n\n\t\t\t\t$morehtmlleft.='</div>';\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($showbarcode) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$form->showbarcode($object).'</div>';\n\n\tif ($object->element == 'societe')\n\t{\n\t\tif (! empty($conf->use_javascript_ajax) && $user->rights->societe->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE))\n\t\t{\n\t\t   \t$morehtmlstatus.=ajax_object_onoff($object, 'status', 'status', 'InActivity', 'ActivityCeased');\n\t\t}\n\t\telse {\n\t\t\t$morehtmlstatus.=$object->getLibStatut(6);\n\t\t}\n\t}\n\telseif ($object->element == 'product')\n\t{\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").') ';\n\t\tif (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus.=ajax_object_onoff($object, 'status', 'tosell', 'ProductStatusOnSell', 'ProductStatusNotOnSell');\n\t\t} else {\n\t\t\t$morehtmlstatus.='<span class=\"statusrefsell\">'.$object->getLibStatut(5,0).'</span>';\n\t\t}\n\t\t$morehtmlstatus.=' &nbsp; ';\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").') ';\n\t\tif (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus.=ajax_object_onoff($object, 'status_buy', 'tobuy', 'ProductStatusOnBuy', 'ProductStatusNotOnBuy');\n\t\t} else {\n\t\t\t$morehtmlstatus.='<span class=\"statusrefbuy\">'.$object->getLibStatut(5,1).'</span>';\n\t\t}\n\t}\n\telseif (in_array($object->element, array('facture', 'invoice', 'invoice_supplier', 'chargesociales', 'loan')))\n\t{\n\t\t$tmptxt=$object->getLibStatut(6, $object->totalpaye);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5, $object->totalpaye);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\telseif ($object->element == 'contrat' || $object->element == 'contract')\n\t{\n\t\tif ($object->statut == 0) $morehtmlstatus.=$object->getLibStatut(5);\n\t\telse $morehtmlstatus.=$object->getLibStatut(4);\n\t}\n\telseif ($object->element == 'facturerec')\n\t{\n\t\tif ($object->frequency == 0) $morehtmlstatus.=$object->getLibStatut(2);\n\t\telse $morehtmlstatus.=$object->getLibStatut(5);\n\t}\n\telseif ($object->element == 'project_task')\n\t{\n\t\t$object->fk_statut = 1;\n\t\tif ($object->progress > 0) $object->fk_statut = 2;\n\t\tif ($object->progress >= 100) $object->fk_statut = 3;\n\t\t$tmptxt=$object->getLibStatut(5);\n\t\t$morehtmlstatus.=$tmptxt;\t\t// No status on task\n\t}\n\telse { // Generic case\n\t\t$tmptxt=$object->getLibStatut(6);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\n\t// Add if object was dispatched \"into accountancy\"\n\tif (! empty($conf->accounting->enabled) && in_array($object->element, array('bank', 'facture', 'invoice', 'invoice_supplier', 'expensereport')))\n\t{\n\t\tif (method_exists($object, 'getVentilExportCompta'))\n\t\t{\n\t\t\t$accounted = $object->getVentilExportCompta();\n\t\t\t$langs->load(\"accountancy\");\n\t\t\t$morehtmlstatus.='</div><div class=\"statusref statusrefbis\">'.($accounted > 0 ? $langs->trans(\"Accounted\") : $langs->trans(\"NotYetAccounted\"));\n\t\t}\n\t}\n\n\t// Add alias for thirdparty\n\tif (! empty($object->name_alias)) $morehtmlref.='<div class=\"refidno\">'.$object->name_alias.'</div>';\n\n\t// Add label\n\tif ($object->element == 'product' || $object->element == 'bank_account' || $object->element == 'project_task')\n\t{\n\t\tif (! empty($object->label)) $morehtmlref.='<div class=\"refidno\">'.$object->label.'</div>';\n\t}\n\n\tif (method_exists($object, 'getBannerAddress') && $object->element != 'product' && $object->element != 'bookmark' && $object->element != 'ecm_directories' && $object->element != 'ecm_files')\n\t{\n\t\t$morehtmlref.='<div class=\"refidno\">';\n\t\t$morehtmlref.=$object->getBannerAddress('refaddress',$object);\n\t\t$morehtmlref.='</div>';\n\t}\n\tif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID) && in_array($object->element, array('societe', 'contact', 'member', 'product')))\n\t{\n\t\t$morehtmlref.='<div style=\"clear: both;\"></div><div class=\"refidno\">';\n\t\t$morehtmlref.=$langs->trans(\"TechnicalID\").': '.$object->id;\n\t\t$morehtmlref.='</div>';\n\t}\n\n\tprint '<div class=\"'.($onlybanner?'arearefnobottom ':'arearef ').'heightref valignmiddle\" width=\"100%\">';\n\tprint $form->showrefnav($object, $paramid, $morehtml, $shownav, $fieldid, $fieldref, $morehtmlref, $moreparam, $nodbprefix, $morehtmlleft, $morehtmlstatus, $morehtmlright);\n\tprint '</div>';\n\tprint '<div class=\"underrefbanner clearboth\"></div>';\n}\n\n/**\n * Show a string with the label tag dedicated to the HTML edit field.\n *\n * @param\tstring\t$langkey\t\tTranslation key\n * @param \tstring\t$fieldkey\t\tKey of the html select field the text refers to\n * @param\tint\t\t$fieldrequired\t1=Field is mandatory\n * @deprecated Form::editfieldkey\n */\nfunction fieldLabel($langkey, $fieldkey, $fieldrequired=0)\n{\n\tglobal $conf, $langs;\n\t$ret='';\n\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\tif (($conf->dol_use_jmobile != 4)) $ret.='<label for=\"'.$fieldkey.'\">';\n\t$ret.=$langs->trans($langkey);\n\tif (($conf->dol_use_jmobile != 4)) $ret.='</label>';\n\tif ($fieldrequired) $ret.='</span>';\n\treturn $ret;\n}\n\n/**\n * Return string to add class property on html element with pair/impair.\n *\n * @param\tstring\t$var\t\t\t0 or 1\n * @param\tstring\t$moreclass\t\tMore class to add\n * @return\tstring\t\t\t\t\tString to add class onto HTML element\n */\nfunction dol_bc($var,$moreclass='')\n{\n\tglobal $bc;\n\t$ret=' '.$bc[$var];\n\tif ($moreclass) $ret=preg_replace('/class=\\\"/','class=\"'.$moreclass.' ',$ret);\n\treturn $ret;\n}\n\n/**\n *      Return a formated address (part address/zip/town/state) according to country rules\n *\n *      @param  Object\t\t$object\t\t\tA company or contact object\n * \t    @param\tint\t\t\t$withcountry\t\t1=Add country into address string\n *      @param\tstring\t\t$sep\t\t\t\tSeparator to use to build string\n *      @param\tTranslate\t$outputlangs\t\tObject lang that contains language for text translation.\n *      @param\tint\t\t$mode\t\t0=Standard output, 1=Remove address\n *      @return string\t\t\t\t\t\tFormated string\n *      @see dol_print_address\n */\nfunction dol_format_address($object, $withcountry=0, $sep=\"\\n\", $outputlangs='', $mode=0)\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\t$countriesusingstate=array('AU','CA','US','IN','GB','ES','UK','TR');    // See also MAIN_FORCE_STATE_INTO_ADDRESS\n\n\t// Address\n\tif (empty($mode)) {\n\t\t$ret .= $object->address;\n\t}\n\t// Zip/Town/State\n\tif (in_array($object->country_code,array('AU', 'CA', 'US')) || ! empty($conf->global->MAIN_FORCE_STATE_INTO_ADDRESS))   \t// US: title firstname name \\n address lines \\n town, state, zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret?\", \":'').$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('GB','UK'))) // UK: title firstname name \\n address lines \\n town state \\n zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret ? $sep : '' ).$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('ES','TR'))) // ES: title firstname name \\n address lines \\n zip town \\n state \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->zip;\n\t\t$ret .= ($object->town?(($object->zip?' ':'').$object->town):'');\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=\"\\n\".$object->state;\n\t\t}\n\t}\n\telse if (in_array($object->country_code,array('IT'))) // IT: tile firstname name\\n address lines \\n zip (Code Departement) \\n country\n\t{\n                $ret .= ($ret ? $sep : '' ).$object->zip;\n                $ret .= ($object->town?(($object->zip?' ':'').$object->town):'');\n                $ret .= ($object->departement_id?(' ('.($object->departement_id).')'):'');\n\t}\n\telse                                        \t\t// Other: title firstname name \\n address lines \\n zip town \\n country\n\t{\n\t\t$ret .= $object->zip ? (($ret ? $sep : '' ).$object->zip) : '';\n\t\t$ret .= ($object->town?(($object->zip?' ':($ret ? $sep : '' )).$object->town):'');\n\t\tif ($object->state && in_array($object->country_code,$countriesusingstate))\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif ($withcountry) $ret.=($object->country_code?($ret?$sep:'').$outputlangs->convToOutputCharset($outputlangs->transnoentitiesnoconv(\"Country\".$object->country_code)):'');\n\n\treturn $ret;\n}\n\n\n\n/**\n *\tFormat a string.\n *\n *\t@param\tstring\t$fmt\t\tFormat of strftime function (http://php.net/manual/fr/function.strftime.php)\n *  @param\tint\t\t$ts\t\t\tTimesamp (If is_gmt is true, timestamp is already includes timezone and daylight saving offset, if is_gmt is false, timestamp is a GMT timestamp and we must compensate with server PHP TZ)\n *  @param\tint\t\t$is_gmt\t\tSee comment of timestamp parameter\n *\t@return\tstring\t\t\t\tA formatted string\n */\nfunction dol_strftime($fmt, $ts=false, $is_gmt=false)\n{\n\tif ((abs($ts) <= 0x7FFFFFFF)) { // check if number in 32-bit signed range\n\t\treturn ($is_gmt)? @gmstrftime($fmt,$ts): @strftime($fmt,$ts);\n\t}\n\telse return 'Error date into a not supported range';\n}\n\n/**\n *\tOutput date in a string format according to outputlangs (or langs if not defined).\n * \tReturn charset is always UTF-8, except if encodetoouput is defined. In this case charset is output charset\n *\n *\t@param\tint\t\t\t$time\t\t\tGM Timestamps date\n *\t@param\tstring\t\t$format      \tOutput date format (tag of strftime function)\n *\t\t\t\t\t\t\t\t\t\t\"%d %b %Y\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M:%S\",\n *                                      \"%B\"=Long text of month, \"%A\"=Long text of day, \"%b\"=Short text of month, \"%a\"=Short text of day\n *\t\t\t\t\t\t\t\t\t\t\"day\", \"daytext\", \"dayhour\", \"dayhourldap\", \"dayhourtext\", \"dayrfc\", \"dayhourrfc\", \"...reduceformat\"\n * \t@param\tstring\t\t$tzoutput\t\ttrue or 'gmt' => string is for Greenwich location\n * \t\t\t\t\t\t\t\t\t\tfalse or 'tzserver' => output string is for local PHP server TZ usage\n * \t\t\t\t\t\t\t\t\t\t'tzuser' => output string is for user TZ (current browser TZ with current dst) => In a future, we should have same behaviour than 'tzuserrel'\n *                                      'tzuserrel' => output string is for user TZ (current browser TZ with dst or not, depending on date position) (TODO not implemented yet)\n *\t@param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *  @param  boolean\t\t$encodetooutput false=no convert into output pagecode\n * \t@return string      \t\t\t\tFormated date or '' if time is null\n *\n *  @see        dol_mktime, dol_stringtotime, dol_getdate\n */\nfunction dol_print_date($time,$format='',$tzoutput='tzserver',$outputlangs='',$encodetooutput=false)\n{\n\tglobal $conf,$langs;\n\n\t// Clean parameters\n\t$to_gmt=false;\n\t$offsettz=$offsetdst=0;\n\tif ($tzoutput)\n\t{\n\t\t$to_gmt=true;\t// For backward compatibility\n\t\tif (is_string($tzoutput))\n\t\t{\n\t\t\tif ($tzoutput == 'tzserver')\n\t\t\t{\n\t\t\t\t$to_gmt=false;\n\t\t\t\t$offsettzstring=@date_default_timezone_get();\t\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=0;\n\t\t\t\t$offsetdst=0;\n\t\t\t}\n\t\t\telseif ($tzoutput == 'tzuser' || $tzoutput == 'tzuserrel')\n\t\t\t{\n\t\t\t\t$to_gmt=true;\n\t\t\t\t$offsettzstring=(empty($_SESSION['dol_tz_string'])?'UTC':$_SESSION['dol_tz_string']);\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\t\t// Will not be used anymore\n\t\t\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\t// Will not be used anymore\n\t\t\t}\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif (! $format) $format='daytextshort';\n\t$reduceformat=(! empty($conf->dol_optimize_smallscreen) && in_array($format,array('day','dayhour')))?1:0;\n\t$formatwithoutreduce = preg_replace('/reduceformat/','',$format);\n\tif ($formatwithoutreduce != $format) { $format = $formatwithoutreduce; $reduceformat=1; }  // so format 'dayreduceformat' is processed like day\n\n\t// Change predefined format into computer format. If found translation in lang file we use it, otherwise we use default.\n\t// TODO Add format daysmallyear and dayhoursmallyear\n\tif ($format == 'day')\t\t\t\t$format=($outputlangs->trans(\"FormatDateShort\")!=\"FormatDateShort\"?$outputlangs->trans(\"FormatDateShort\"):$conf->format_date_short);\n\telse if ($format == 'hour')\t\t\t$format=($outputlangs->trans(\"FormatHourShort\")!=\"FormatHourShort\"?$outputlangs->trans(\"FormatHourShort\"):$conf->format_hour_short);\n\telse if ($format == 'hourduration')\t$format=($outputlangs->trans(\"FormatHourShortDuration\")!=\"FormatHourShortDuration\"?$outputlangs->trans(\"FormatHourShortDuration\"):$conf->format_hour_short_duration);\n\telse if ($format == 'daytext')\t\t\t $format=($outputlangs->trans(\"FormatDateText\")!=\"FormatDateText\"?$outputlangs->trans(\"FormatDateText\"):$conf->format_date_text);\n\telse if ($format == 'daytextshort')\t$format=($outputlangs->trans(\"FormatDateTextShort\")!=\"FormatDateTextShort\"?$outputlangs->trans(\"FormatDateTextShort\"):$conf->format_date_text_short);\n\telse if ($format == 'dayhour')\t\t\t $format=($outputlangs->trans(\"FormatDateHourShort\")!=\"FormatDateHourShort\"?$outputlangs->trans(\"FormatDateHourShort\"):$conf->format_date_hour_short);\n\telse if ($format == 'dayhoursec')\t\t $format=($outputlangs->trans(\"FormatDateHourSecShort\")!=\"FormatDateHourSecShort\"?$outputlangs->trans(\"FormatDateHourSecShort\"):$conf->format_date_hour_sec_short);\n\telse if ($format == 'dayhourtext')\t\t $format=($outputlangs->trans(\"FormatDateHourText\")!=\"FormatDateHourText\"?$outputlangs->trans(\"FormatDateHourText\"):$conf->format_date_hour_text);\n\telse if ($format == 'dayhourtextshort') $format=($outputlangs->trans(\"FormatDateHourTextShort\")!=\"FormatDateHourTextShort\"?$outputlangs->trans(\"FormatDateHourTextShort\"):$conf->format_date_hour_text_short);\n\t// Format not sensitive to language\n\telse if ($format == 'dayhourlog')\t\t $format='%Y%m%d%H%M%S';\n\telse if ($format == 'dayhourldap')\t\t $format='%Y%m%d%H%M%SZ';\n\telse if ($format == 'dayhourxcard')\t$format='%Y%m%dT%H%M%SZ';\n\telse if ($format == 'dayxcard')\t \t$format='%Y%m%d';\n\telse if ($format == 'dayrfc')\t\t\t $format='%Y-%m-%d';             // DATE_RFC3339\n\telse if ($format == 'dayhourrfc')\t\t $format='%Y-%m-%dT%H:%M:%SZ';   // DATETIME RFC3339\n\telse if ($format == 'standard')\t\t$format='%Y-%m-%d %H:%M:%S';\n\n\tif ($reduceformat)\n\t{\n\t\t$format=str_replace('%Y','%y',$format);\n\t\t$format=str_replace('yyyy','yy',$format);\n\t}\n\n\t// If date undefined or \"\", we return \"\"\n\tif (dol_strlen($time) == 0) return '';\t\t// $time=0 allowed (it means 01/01/1970 00:00:00)\n\n\t// Clean format\n\tif (preg_match('/%b/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%b','__b__',$format);\n\t\t$format=str_replace('%B','__B__',$format);\n\t}\n\tif (preg_match('/%a/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%a','__a__',$format);\n\t\t$format=str_replace('%A','__A__',$format);\n\t}\n\n\t// Analyze date\n\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+) ?([0-9]+)?:?([0-9]+)?:?([0-9]+)?/i',$time,$reg)\n\t|| preg_match('/^([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])$/i',$time,$reg))\t// Deprecated. Ex: 1970-01-01, 1970-01-01 01:00:00, 19700101010000\n\t{\n\t\t// TODO Remove this.\n\t\t// This part of code should not be used.\n\t\tdol_syslog(\"Functions.lib::dol_print_date function call with deprecated value of time in page \".$_SERVER[\"PHP_SELF\"], LOG_ERR);\n\t\t// Date has format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS' or 'YYYYMMDDHHMMSS'\n\t\t$syear\t= (! empty($reg[1]) ? $reg[1] : '');\n\t\t$smonth\t= (! empty($reg[2]) ? $reg[2] : '');\n\t\t$sday\t= (! empty($reg[3]) ? $reg[3] : '');\n\t\t$shour\t= (! empty($reg[4]) ? $reg[4] : '');\n\t\t$smin\t= (! empty($reg[5]) ? $reg[5] : '');\n\t\t$ssec\t= (! empty($reg[6]) ? $reg[6] : '');\n\n\t\t$time=dol_mktime($shour,$smin,$ssec,$smonth,$sday,$syear,true);\n\t\t$ret=adodb_strftime($format, $time+$offsettz+$offsetdst, $to_gmt);\n\t}\n\telse\n\t{\n\t\t// Date is a timestamps\n\t\tif ($time < 100000000000)\t// Protection against bad date values\n\t\t{\n\t\t\t$timetouse = $time+$offsettz+$offsetdst;\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t\t$ret=adodb_strftime($format, $timetouse, $to_gmt);\n\t\t}\n\t\telse $ret='Bad value '.$time.' for date';\n\t}\n\n\tif (preg_match('/__b__/i',$format))\n\t{\n\t\t$timetouse = $time+$offsettz+$offsetdst;\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t// Here ret is string in PHP setup language (strftime was used). Now we convert to $outputlangs.\n\t\t$month=adodb_strftime('%m', $timetouse);\n\t\t$month=sprintf(\"%02d\", $month);\t// $month may be return with format '06' on some installation and '6' on other, so we force it to '06'.\n\t\tif ($encodetooutput)\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentities('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentities('MonthShort'.$month);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentitiesnoconv('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentitiesnoconv('MonthShort'.$month);\n\t\t}\n\t\t//print 'monthtext='.$monthtext.' monthtextshort='.$monthtextshort;\n\t\t$ret=str_replace('__b__',$monthtextshort,$ret);\n\t\t$ret=str_replace('__B__',$monthtext,$ret);\n\t\t//print 'x'.$outputlangs->charset_output.'-'.$ret.'x';\n\t\t//return $ret;\n\t}\n\tif (preg_match('/__a__/i',$format))\n\t{\n\t\t$timetouse = $time+$offsettz+$offsetdst;\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t$w=adodb_strftime('%w', $timetouse);\t\t\t\t\t\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\t\t$dayweek=$outputlangs->transnoentitiesnoconv('Day'.$w);\n\t\t$ret=str_replace('__A__',$dayweek,$ret);\n\t\t$ret=str_replace('__a__',dol_substr($dayweek,0,3),$ret);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn an array with locale date info.\n *  PHP getdate is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *  WARNING: This function always use PHP server timezone to return locale informations !!!\n *  Usage must be avoid.\n *  FIXME: Replace this with PHP date function and a parameter $gm\n *\n *\t@param\tint\t\t\t$timestamp      Timestamp\n *\t@param\tboolean\t\t$fast           Fast mode\n *\t@return\tarray\t\t\t\t\t\tArray of informations\n *\t\t\t\t\t\t\t\t\t\tIf no fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'wday' => $dow,\t\t0=sunday, 6=saturday\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'weekday' => gmdate('l',$_day_power*(3+$dow)),\n *\t\t\t\t\t\t\t\t\t\t'month' => gmdate('F',mktime(0,0,0,$month,2,1971)),\n *\t\t\t\t\t\t\t\t\t\tIf fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'leap' => $leaf,\n *\t\t\t\t\t\t\t\t\t\t'ndays' => $ndays\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_mktime\n */\nfunction dol_getdate($timestamp,$fast=false)\n{\n\tglobal $conf;\n\n\t$usealternatemethod=false;\n\tif ($timestamp <= 0) $usealternatemethod=true;\t\t\t\t// <= 1970\n\tif ($timestamp >= 2145913200) $usealternatemethod=true;\t\t// >= 2038\n\n\tif ($usealternatemethod)\n\t{\n\t\t$arrayinfo=adodb_getdate($timestamp,$fast);\n\t}\n\telse\n\t{\n\t\t$arrayinfo=getdate($timestamp);\n\t}\n\n\treturn $arrayinfo;\n}\n\n/**\n *\tReturn a timestamp date built from detailed informations (by default a local PHP server timestamp)\n * \tReplace function mktime not available under Windows if year < 1970\n *\tPHP mktime is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *\n * \t@param\tint\t\t\t$hour\t\t\tHour\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$minute\t\t\tMinute\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$second\t\t\tSecond\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$month\t\t\tMonth (1 to 12)\n *\t@param\tint\t\t\t$day\t\t\tDay (1 to 31)\n *\t@param\tint\t\t\t$year\t\t\tYear\n *\t@param\tmixed\t\t$gm\t\t\t\tTrue or 1 or 'gmt'=Input informations are GMT values\n *\t\t\t\t\t\t\t\t\t\tFalse or 0 or 'server' = local to server TZ\n *\t\t\t\t\t\t\t\t\t\t'user' = local to user TZ\n *\t\t\t\t\t\t\t\t\t\t'tz,TimeZone' = use specified timezone\n *\t@param\tint\t\t\t$check\t\t\t0=No check on parameters (Can use day 32, etc...)\n *\t@return\tint|string\t\t\t\t\tDate as a timestamp, '' or false if error\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_getdate\n */\nfunction dol_mktime($hour,$minute,$second,$month,$day,$year,$gm=false,$check=1)\n{\n\tglobal $conf;\n\t//print \"- \".$hour.\",\".$minute.\",\".$second.\",\".$month.\",\".$day.\",\".$year.\",\".$_SERVER[\"WINDIR\"].\" -\";\n\n\t// Clean parameters\n\tif ($hour   == -1 || empty($hour)) $hour=0;\n\tif ($minute == -1 || empty($minute)) $minute=0;\n\tif ($second == -1 || empty($second)) $second=0;\n\n\t// Check parameters\n\tif ($check)\n\t{\n\t\tif (! $month || ! $day)  return '';\n\t\tif ($day   > 31) return '';\n\t\tif ($month > 12) return '';\n\t\tif ($hour  < 0 || $hour   > 24) return '';\n\t\tif ($minute< 0 || $minute > 60) return '';\n\t\tif ($second< 0 || $second > 60) return '';\n\t}\n\n\tif (method_exists('DateTime','getTimestamp'))\n\t{\n\t\tif (empty($gm) || $gm === 'server')\n\t\t{\n\t\t\t$default_timezone=@date_default_timezone_get();\t\t// Example 'Europe/Berlin'\n\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t}\n\t\telse if ($gm === 'user')\n\t\t{\n\t\t\t// We use dol_tz_string first because it is more reliable.\n\t\t\t$default_timezone=(empty($_SESSION[\"dol_tz_string\"])?@date_default_timezone_get():$_SESSION[\"dol_tz_string\"]);\t\t// Example 'Europe/Berlin'\n\t\t\ttry {\n\t\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning dol_tz_string contains an invalid value \".$_SESSION[\"dol_tz_string\"], LOG_WARNING);\n\t\t\t\t$default_timezone=@date_default_timezone_get();\n\t\t\t}\n\t\t}\n\t\telse if (strrpos($gm, \"tz,\") !== false)\n\t\t{\n\t\t\t$timezone=str_replace(\"tz,\", \"\", $gm);  // Example 'tz,Europe/Berlin'\n\t\t\ttry\n\t\t\t{\n\t\t\t\t$localtz = new DateTimeZone($timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning passed timezone contains an invalid value \".$timezone, LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($localtz)) {\n\t\t\t$localtz = new DateTimeZone('UTC');\n\t\t}\n\t\t//var_dump($localtz);\n\t\t//var_dump($year.'-'.$month.'-'.$day.'-'.$hour.'-'.$minute);\n\t\t$dt = new DateTime(null,$localtz);\n\t\t$dt->setDate($year,$month,$day);\n\t\t$dt->setTime((int) $hour, (int) $minute, (int) $second);\n\t\t$date=$dt->getTimestamp();\t// should include daylight saving time\n\t\t//var_dump($date);\n\t\treturn $date;\n\t}\n\telse\n\t{\n\t\tdol_print_error('','PHP version must be 5.3+');\n\t\treturn '';\n\t}\n}\n\n\n/**\n *\tReturn date for now. In most cases, we use this function without parameters (that means GMT time).\n *\n * \t@param\tstring\t\t$mode\t'gmt' => we return GMT timestamp,\n * \t\t\t\t\t\t\t\t'tzserver' => we add the PHP server timezone\n *  \t\t\t\t\t\t\t'tzref' => we add the company timezone\n * \t\t\t\t\t\t\t\t'tzuser' => we add the user timezone\n *\t@return int   $date\tTimestamp\n */\nfunction dol_now($mode='gmt')\n{\n\t$ret=0;\n\n\t// Note that gmmktime and mktime return same value (GMT) when used without parameters\n\t//if ($mode == 'gmt') $ret=gmmktime(); // Strict Standards: gmmktime(): You should be using the time() function instead\n\tif ($mode == 'gmt') $ret=time();\t// Time for now at greenwich.\n\telse if ($mode == 'tzserver')\t\t// Time for now with PHP server timezone added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getServerTimeZoneInt('now');    // Contains tz+dayling saving time\n\t\t$ret=(int) dol_now('gmt')+($tzsecond*3600);\n\t}\n\t/*else if ($mode == 'tzref')\t\t\t\t// Time for now with parent company timezone is added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getParentCompanyTimeZoneInt();    // Contains tz+dayling saving time\n\t\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t}*/\n\telse if ($mode == 'tzuser')\t\t\t\t// Time for now with user timezone added\n\t{\n\t\t//print 'eeee'.time().'-'.mktime().'-'.gmmktime();\n\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\n\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\n\t\t$ret=(int) dol_now('gmt')+($offsettz+$offsetdst);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n * Return string with formated size\n *\n * @param\tint\t\t$size\t\tSize to print\n * @param\tint\t\t$shortvalue\tTell if we want long value to use another unit (Ex: 1.5Kb instead of 1500b)\n * @param\tint\t\t$shortunit\tUse short value of size unit\n * @return\tstring\t\t\t\tLink\n */\nfunction dol_print_size($size,$shortvalue=0,$shortunit=0)\n{\n\tglobal $conf,$langs;\n\t$level=1024;\n\n\tif (! empty($conf->dol_optimize_smallscreen)) $shortunit=1;\n\n\t// Set value text\n\tif (empty($shortvalue) || $size < ($level*10))\n\t{\n\t\t$ret=$size;\n\t\t$textunitshort=$langs->trans(\"b\");\n\t\t$textunitlong=$langs->trans(\"Bytes\");\n\t}\n\telse\n\t{\n\t\t$ret=round($size/$level,0);\n\t\t$textunitshort=$langs->trans(\"Kb\");\n\t\t$textunitlong=$langs->trans(\"KiloBytes\");\n\t}\n\t// Use long or short text unit\n\tif (empty($shortunit)) { $ret.=' '.$textunitlong; }\n\telse { $ret.=' '.$textunitshort; }\n\n\treturn $ret;\n}\n\n/**\n * Show Url link\n *\n * @param\tstring\t\t$url\t\tUrl to show\n * @param\tstring\t\t$target\t\tTarget for link\n * @param\tint\t\t\t$max\t\tMax number of characters to show\n * @param\tint\t\t\t$withpicto\tWith picto\n * @return\tstring\t\t\t\t\tHTML Link\n */\nfunction dol_print_url($url,$target='_blank',$max=32,$withpicto=0)\n{\n\tglobal $langs;\n\n\tif (empty($url)) return '';\n\n\t$link='<a href=\"';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=$url;\n\t$link.='\"';\n\tif ($target) $link.=' target=\"'.$target.'\"';\n\t$link.='>';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=dol_trunc($url,$max);\n\t$link.='</a>';\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"Url\"), 'object_globe.png').' ':'').$link.'</div>';\n}\n\n/**\n * Show EMail link\n *\n * @param\tstring\t\t$email\t\t\tEMail to show (only email, without 'Name of recipient' before)\n * @param \tint\t\t\t$cid \t\t\tId of contact if known\n * @param \tint\t\t\t$socid \t\t\tId of third party if known\n * @param \tint\t\t\t$addlink\t\t0=no link, 1=email has a html email link (+ link to create action if constant AGENDA_ADDACTIONFOREMAIL is on)\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @param\tint\t\t\t$showinvalid\tShow warning if syntax email is wrong\n * @param\tint\t\t\t$withpicto\t\tShow picto\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_email($email,$cid=0,$socid=0,$addlink=0,$max=64,$showinvalid=1,$withpicto=0)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newemail=$email;\n\n\tif (empty($email)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newemail='<a style=\"text-overflow: ellipsis;\" href=\"';\n\t\tif (! preg_match('/^mailto:/i',$email)) $newemail.='mailto:';\n\t\t$newemail.=$email;\n\t\t$newemail.='\">';\n\t\t$newemail.=dol_trunc($email,$max);\n\t\t$newemail.='</a>';\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_EMAIL'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFOREMAIL)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newemail='<div>'.$newemail.' '.$link.'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\t}\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"EMail\"), 'object_email.png').' ':'').$newemail.'</div>';\n}\n\n/**\n * Show Skype link\n *\n * @param\tstring\t\t$skype\t\t\tSkype to show (only skype, without 'Name of recipient' before)\n * @param\tint \t\t$cid \t\t\tId of contact if known\n * @param\tint \t\t$socid \t\t\tId of third party if known\n * @param\tint \t\t$addlink\t\t0=no link to create action\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_skype($skype,$cid=0,$socid=0,$addlink=0,$max=64)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newskype=$skype;\n\n\tif (empty($skype)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newskype =img_picto($langs->trans(\"Skype\"), 'object_skype.png');\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.='<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?call\" alt=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_callbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>&nbsp;&nbsp;&nbsp;<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?chat\" alt=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_chatbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>';\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_SKYPE'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORSKYPE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\t$newskype='<div class=\"divskype nowrap\">'.$newskype.($link?' '.$link:'').'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$newskype.=img_warning($langs->trans(\"ErrorBadSkype\",$skype));\n\t}\n\treturn $newskype;\n}\n\n/**\n * \tFormat phone numbers according to country\n *\n * \t@param  string  $phone          Phone number to format\n * \t@param  string  $countrycode    Country code to use for formatting\n * \t@param \tint\t\t$cid \t\t    Id of contact if known\n * \t@param \tint\t\t$socid          Id of third party if known\n * \t@param \tstring\t$addlink\t    ''=no link to create action, 'AC_TEL'=add link to clicktodial (if module enabled) and add link to create event (if conf->global->AGENDA_ADDACTIONFORPHONE set)\n * \t@param \tstring\t$separ \t\t    Separation between numbers for a better visibility example : xx.xx.xx.xx.xx\n *  @param\tstring  $withpicto      Show picto\n *  @param\tstring\t$titlealt\t    Text to show on alt\n *  @param  int     $adddivfloat    Add div float around phone.\n * \t@return string \t\t\t\t    Formated phone number\n */\nfunction dol_print_phone($phone,$countrycode='',$cid=0,$socid=0,$addlink='',$separ=\"&nbsp;\",$withpicto='',$titlealt='',$adddivfloat=0)\n{\n\tglobal $conf,$user,$langs,$mysoc;\n\n\t// Clean phone parameter\n\t$phone = preg_replace(\"/[\\s.-]/\",\"\",trim($phone));\n\tif (empty($phone)) { return ''; }\n\tif (empty($countrycode)) $countrycode=$mysoc->country_code;\n\n\t// Short format for small screens\n\tif ($conf->dol_optimize_smallscreen) $separ='';\n\n\t$newphone=$phone;\n\tif (strtoupper($countrycode) == \"FR\")\n\t{\n\t\t// France\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,2).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 7)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 9)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,3).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 11)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2).$separ.substr($newphone,9,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 12)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,4).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2).$separ.substr($newphone,10,2);\n\t\t}\n\t}\n\n\tif (strtoupper($countrycode) == \"CA\")\n\t{\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone=($separ!=''?'(':'').substr($newphone,0,3).($separ!=''?')':'').$separ.substr($newphone,3,3).($separ!=''?'-':'').substr($newphone,6,4);\n\t\t}\n\t}\n\n\tif (! empty($addlink))\t// Link on phone number (+ link to add action if conf->global->AGENDA_ADDACTIONFORPHONE set)\n\t{\n\t\tif (! empty($conf->browser->phone) || (! empty($conf->clicktodial->enabled) && ! empty($conf->global->CLICKTODIAL_USE_TEL_LINK_ON_PHONE_NUMBERS)))\t// If phone or option for, we use link of phone\n\t\t{\n\t\t\t$newphone ='<a href=\"tel:'.$phone.'\"';\n\t\t\t$newphone.='>'.$phone.'</a>';\n\t\t}\n\t\telse if (! empty($conf->clicktodial->enabled) && $addlink == 'AC_TEL')\t\t// If click to dial, we use click to dial url\n\t\t{\n\t\t\tif (empty($user->clicktodial_loaded)) $user->fetch_clicktodial();\n\n\t\t\t// Define urlmask\n\t\t\t$urlmask='ErrorClickToDialModuleNotConfigured';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_URL)) $urlmask=$conf->global->CLICKTODIAL_URL;\n\t\t\tif (! empty($user->clicktodial_url)) $urlmask=$user->clicktodial_url;\n\n\t\t\t$clicktodial_poste=(! empty($user->clicktodial_poste)?urlencode($user->clicktodial_poste):'');\n\t\t\t$clicktodial_login=(! empty($user->clicktodial_login)?urlencode($user->clicktodial_login):'');\n\t\t\t$clicktodial_password=(! empty($user->clicktodial_password)?urlencode($user->clicktodial_password):'');\n\t\t\t// This line is for backward compatibility\n\t\t\t$url = sprintf($urlmask, urlencode($phone), $clicktodial_poste, $clicktodial_login, $clicktodial_password);\n\t\t\t// Thoose lines are for substitution\n\t\t\t$substitarray=array('__PHONEFROM__'=>$clicktodial_poste,\n\t\t\t\t\t\t\t\t'__PHONETO__'=>urlencode($phone),\n\t\t\t\t\t\t\t\t'__LOGIN__'=>$clicktodial_login,\n\t\t\t\t\t\t\t\t'__PASS__'=>$clicktodial_password);\n\t\t\t$url = make_substitutions($url, $substitarray);\n\t\t\t$newphonesav=$newphone;\n\t\t\t$newphone ='<a href=\"'.$url.'\"';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_FORCENEWTARGET)) $newphone.=' target=\"_blank\"';\n\t\t\t$newphone.='>'.$newphonesav.'</a>';\n\t\t}\n\n\t\t//if (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\tif (! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_TEL'; $link='';\n\t\t\tif ($addlink == 'AC_FAX') $type='AC_FAX';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORPHONE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.($cid?'&amp;contactid='.$cid:'').($socid?'&amp;socid='.$socid:'').'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newphone='<div>'.$newphone.' '.$link.'</div>';\n\t\t}\n\t}\n\n\tif (empty($titlealt))\n\t{\n\t\t$titlealt=($withpicto=='fax'?$langs->trans(\"Fax\"):$langs->trans(\"Phone\"));\n\t}\n\t$rep='';\n\t$picto = '';\n\tif($withpicto){\n\t\tif($withpicto=='fax'){\n\t\t\t$picto = 'phoning_fax';\n\t\t}elseif($withpicto=='phone'){\n\t\t\t$picto = 'phoning';\n\t\t}elseif($withpicto=='mobile'){\n\t\t\t$picto = 'phoning_mobile';\n\t\t}else{\n\t\t\t$picto = '';\n\t\t}\n\t}\n\tif ($adddivfloat) $rep.='<div class=\"nospan float\" style=\"margin-right: 10px\">';\n\telse $rep.='<span style=\"margin-right: 10px;\">';\n\t$rep.=($withpicto?img_picto($titlealt, 'object_'.$picto.'.png').' ':'').$newphone;\n\tif ($adddivfloat) $rep.='</div>';\n\telse $rep.='</span>';\n\treturn $rep;\n}\n\n/**\n * \tReturn an IP formated to be shown on screen\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@param\tint\t\t$mode\t\t0=return IP + country/flag, 1=return only country/flag, 2=return only IP\n * \t@return string \t\t\t\tFormated IP, with country if GeoIP module is enabled\n */\nfunction dol_print_ip($ip,$mode=0)\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\n\tif (empty($mode)) $ret.=$ip;\n\n\tif ($mode != 2)\n\t{\n\t\t$countrycode=dolGetCountryCodeFromIp($ip);\n\t\tif ($countrycode)\t// If success, countrycode is us, fr, ...\n\t\t{\n\t\t\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/common/flags/'.$countrycode.'.png'))\n\t\t\t{\n\t\t\t\t$ret.=' '.img_picto($countrycode.' '.$langs->trans(\"AccordingToGeoIPDatabase\"),DOL_URL_ROOT.'/theme/common/flags/'.$countrycode.'.png','',1);\n\t\t\t}\n\t\t\telse $ret.=' ('.$countrycode.')';\n\t\t}\n\t}\n\n\treturn $ret;\n}\n\n/**\n * \tReturn a country code from IP. Empty string if not found.\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@return string \t\t\t\tCountry code ('us', 'fr', ...)\n */\nfunction dolGetCountryCodeFromIp($ip)\n{\n\tglobal $conf;\n\n\t$countrycode='';\n\n\tif (! empty($conf->geoipmaxmind->enabled))\n\t{\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';    Note that this must be downloaded datafile (not same than datafile provided with ubuntu packages)\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t//print 'ip='.$ip.' databaseType='.$geoip->gi->databaseType.\" GEOIP_CITY_EDITION_REV1=\".GEOIP_CITY_EDITION_REV1.\"\\n\";\n\t\t//print \"geoip_country_id_by_addr=\".geoip_country_id_by_addr($geoip->gi,$ip).\"\\n\";\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t}\n\n\treturn $countrycode;\n}\n\n\n/**\n *  Return country code for current user.\n *  If software is used inside a local network, detection may fails (we need a public ip)\n *\n *  @return     string      Country code (fr, es, it, us, ...)\n */\nfunction dol_user_country()\n{\n\tglobal $conf,$langs,$user;\n\n\t//$ret=$user->xxx;\n\t$ret='';\n\tif (! empty($conf->geoipmaxmind->enabled))\n\t{\n\t\t$ip=$_SERVER[\"REMOTE_ADDR\"];\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t\t$ret=$countrycode;\n\t}\n\treturn $ret;\n}\n\n/**\n *  Format address string\n *\n *  @param\tstring\t$address    Address\n *  @param  int\t\t$htmlid     Html ID (for example 'gmap')\n *  @param  int\t\t$mode       thirdparty|contact|member|other\n *  @param  int\t\t$id         Id of object\n *  @param\tint\t\t$noprint\tNo output. Result is the function return\n *  @param  string  $charfornl  Char to use instead of nl2br. '' means we use a standad nl2br.\n *  @return string|void\t\t\tNothing if noprint is 0, formatted address if noprint is 1\n *  @see dol_format_address\n */\nfunction dol_print_address($address, $htmlid, $mode, $id, $noprint=0, $charfornl='')\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$out = '';\n\n\tif ($address)\n\t{\n\t\tif ($hookmanager) {\n\t\t\t$parameters = array('element' => $mode, 'id' => $id);\n\t\t\t$reshook = $hookmanager->executeHooks('printAddress', $parameters, $address);\n\t\t\t$out.=$hookmanager->resPrint;\n\t\t}\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tif (empty($charfornl)) $out.=nl2br($address);\n\t\t\telse $out.=preg_replace('/[\\r\\n]+/', $charfornl, $address);\n\n\t\t\t$showgmap=$showomap=0;\n\n\t\t\t// TODO Add a hook here\n\t\t\tif (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS)) $showgmap=1;\n\t\t\tif ($mode=='contact' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_CONTACTS)) $showgmap=1;\n\t\t\tif ($mode=='member' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_MEMBERS)) $showgmap=1;\n\t\t\tif (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS)) $showomap=1;\n\t\t\tif ($mode=='contact' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_CONTACTS)) $showomap=1;\n\t\t\tif ($mode=='member' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_MEMBERS)) $showomap=1;\n\n\t\t\tif ($showgmap)\n\t\t\t{\n\t\t\t\t$url=dol_buildpath('/google/gmaps.php?mode='.$mode.'&id='.$id,1);\n\t\t\t\t$out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t\tif ($showomap)\n\t\t\t{\n\t\t\t\t$url=dol_buildpath('/openstreetmap/maps.php?mode='.$mode.'&id='.$id,1);\n\t\t\t\t$out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'_openstreetmap\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t}\n\t}\n\tif ($noprint) return $out;\n\telse print $out;\n}\n\n\n/**\n *\tReturn true if email syntax is ok\n *\n *\t@param\t    string\t\t$address    \t\t\temail (Ex: \"toto@examle.com\", \"John Do <johndo@example.com>\")\n *  @param\t\tint\t\t\t$acceptsupervisorkey\tIf 1, the special string '__SUPERVISOREMAIL__' is also accepted as valid\n *\t@return     boolean     \t\t\t\t\t\ttrue if email syntax is OK, false if KO or empty string\n */\nfunction isValidEmail($address, $acceptsupervisorkey=0)\n{\n\tif ($acceptsupervisorkey && $address == '__SUPERVISOREMAIL__') return true;\n\tif (filter_var($address, FILTER_VALIDATE_EMAIL)) return true;\n\n\treturn false;\n}\n\n/**\n *  Return true if phone number syntax is ok\n *  TODO Decide what to do with this\n *\n *  @param\tstring\t\t$phone\t\tphone (Ex: \"0601010101\")\n *  @return boolean     \t\t\ttrue if phone syntax is OK, false if KO or empty string\n */\nfunction isValidPhone($phone)\n{\n\treturn true;\n}\n\n\n/**\n * Make a strlen call. Works even if mbstring module not enabled\n *\n * @param   string\t\t$string\t\t\t\tString to calculate length\n * @param   string\t\t$stringencoding\t\tEncoding of string\n * @return  int\t\t\t\t\t\t\t\tLength of string\n */\nfunction dol_strlen($string,$stringencoding='UTF-8')\n{\n\tif (function_exists('mb_strlen')) return mb_strlen($string,$stringencoding);\n\telse return strlen($string);\n}\n\n/**\n * Make a substring. Works even in mbstring module is not enabled.\n *\n * @param\tstring\t$string\t\t\t\tString to scan\n * @param\tstring\t$start\t\t\t\tStart position\n * @param\tint\t\t$length\t\t\t\tLength\n * @param   string\t$stringencoding\t\tPage code used for input string encoding\n * @return  string\t\t\t\t\t\tsubstring\n */\nfunction dol_substr($string,$start,$length,$stringencoding='')\n{\n\tglobal $langs;\n\n\tif (empty($stringencoding)) $stringencoding=$langs->charset_output;\n\n\t$ret='';\n\tif (function_exists('mb_substr'))\n\t{\n\t\t$ret=mb_substr($string,$start,$length,$stringencoding);\n\t}\n\telse\n\t{\n\t\t$ret=substr($string,$start,$length);\n\t}\n\treturn $ret;\n}\n\n\n/**\n *  Show a javascript graph.\n *  Do not use this function anymore. Use DolGraph class instead.\n *\n *  @param\t\tstring\t$htmlid\t\t\tHtml id name\n *  @param\t\tint\t\t$width\t\t\tWidth in pixel\n *  @param\t\tint\t\t$height\t\t\tHeight in pixel\n *  @param\t\tarray\t$data\t\t\tData array\n *  @param\t\tint\t\t$showlegend\t\t1 to show legend, 0 otherwise\n *  @param\t\tstring\t$type\t\t\tType of graph ('pie', 'barline')\n *  @param\t\tint\t\t$showpercent\tShow percent (with type='pie' only)\n *  @param\t\tstring\t$url\t\t\tParam to add an url to click values\n *  @param\t\tint\t\t$combineother\t0=No combine, 0.05=Combine if lower than 5%\n *  @param      int     $shownographyet Show graph to say there is not enough data\n *  @return\t\tvoid\n *  @deprecated\n *  @see DolGraph\n */\nfunction dol_print_graph($htmlid,$width,$height,$data,$showlegend=0,$type='pie',$showpercent=0,$url='',$combineother=0.05,$shownographyet=0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\tglobal $theme_datacolor;    // To have var kept when function is called several times\n\n\tif ($shownographyet)\n\t{\n\t\tprint '<div class=\"nographyet\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\t\tprint '<div class=\"nographyettext\">'.$langs->trans(\"NotEnoughDataYet\").'</div>';\n\t\treturn;\n\t}\n\n\tif (empty($conf->use_javascript_ajax)) return;\n\t$jsgraphlib='flot';\n\t$datacolor=array();\n\n\t// Load colors of theme into $datacolor array\n\t$color_file = DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/graph-color.php\";\n\tif (is_readable($color_file))\n\t{\n\t\tinclude_once $color_file;\n\t\tif (isset($theme_datacolor))\n\t\t{\n\t\t\t$datacolor=array();\n\t\t\tforeach($theme_datacolor as $val)\n\t\t\t{\n\t\t\t\t$datacolor[]=\"#\".sprintf(\"%02x\",$val[0]).sprintf(\"%02x\",$val[1]).sprintf(\"%02x\",$val[2]);\n\t\t\t}\n\t\t}\n\t}\n\tprint '<div id=\"'.$htmlid.'\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\n\t// We use Flot js lib\n\tif ($jsgraphlib == 'flot')\n\t{\n\t\tif ($type == 'pie')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>val)\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = '.json_encode($data['series']).';\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot($(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tpie: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tradius: 0.8,';\n\t\t\tif ($combineother)\n\t\t\t{\n\t\t\t\tprint '\n\t\t\t\t\t\t\t\tcombine: {\n\t\t\t\t\t\t\t\t \tthreshold: '.$combineother.'\n\t\t\t\t\t\t\t\t},';\n\t\t\t}\n\t\t\tprint '\n\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tradius: 0.9,\n\t\t\t\t\t\t\t\t\tformatter: function(label, series) {\n\t\t\t\t\t\t\t\t\t\tvar percent=Math.round(series.percent);\n\t\t\t\t\t\t\t\t\t\tvar number=series.data[0][1];\n\t\t\t\t\t\t\t\t\t\treturn \\'';\n\t\t\t\t\t\t\t\t\t\tprint '<div style=\"font-size:8pt;text-align:center;padding:2px;color:black;\">';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '<a style=\"color: #FFFFFF;\" border=\"0\" href=\"'.$url.'\">';\n\t\t\t\t\t\t\t\t\t\tprint '\\'+'.($showlegend?'number':'label+\\' \\'+number');\n\t\t\t\t\t\t\t\t\t\tif (! empty($showpercent)) print '+\\'<br/>\\'+percent+\\'%\\'';\n\t\t\t\t\t\t\t\t\t\tprint '+\\'';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '</a>';\n\t\t\t\t\t\t\t\t\t\tprint '</div>\\';\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbackground: {\n\t\t\t\t\t\t\t\t\t\topacity: 0.0,\n\t\t\t\t\t\t\t\t\t\tcolor: \\'#000000\\'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.(! empty($data['seriescolor']) ? json_encode($data['seriescolor']) : json_encode($datacolor)).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').', position: \\'ne\\' }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse if ($type == 'barline')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>array(0=>y1,1=>y2,...)) with same nb of value than into xlabel\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif ($data['seriestype'][$i]=='line') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ bars: { stack: 0, show: true, barWidth: 0.9, align: \\'center\\' }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tif ($outputserie) print ', ';\n\t\t\t\t//print '];\n\t\t\t\t//var datalines = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif (empty($data['seriestype'][$i]) || $data['seriestype'][$i]=='bar') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ lines: { show: true }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tprint '];\n\t\t\t\tvar dataticks = '.json_encode($data['xlabel']).'\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot(jQuery(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tstack: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.json_encode($datacolor).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').'},\n\t\t\t\t\t\txaxis: {ticks: dataticks}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse print 'BadValueForParameterType';\n\t}\n}\n\n/**\n *\tTruncate a string to a particular length adding '...' if string larger than length.\n * \tIf length = max length+1, we do no truncate to avoid having just 1 char replaced with '...'.\n *  MAIN_DISABLE_TRUNC=1 can disable all truncings\n *\n *\t@param\tstring\t$string\t\t\t\tString to truncate\n *\t@param  int\t\t$size\t\t\t\tMax string size visible (excluding ...). 0 for no limit. WARNING: Final string size can have 3 more chars (if we added ..., or if size was max+1 or max+2 or max+3 so it does not worse to replace with ...)\n *\t@param\tstring\t$trunc\t\t\t\tWhere to trunc: right, left, middle (size must be a 2 power), wrap\n * \t@param\tstring\t$stringencoding\t\tTell what is source string encoding\n *  @param\tint\t\t$nodot\t\t\t\tTruncation do not add ... after truncation. So it's an exact truncation.\n *  @param  int     $display            Trunc is use to display and can be changed for small screen. TODO Remove this param (must be dealt with CSS)\n *\t@return string\t\t\t\t\t\tTruncated string. WARNING: length is never higher than $size if $nodot is set, but can be 3 chars higher otherwise.\n */\nfunction dol_trunc($string,$size=40,$trunc='right',$stringencoding='UTF-8',$nodot=0, $display=0)\n{\n\tglobal $conf;\n\n\tif ($size==0 || ! empty($conf->global->MAIN_DISABLE_TRUNC)) return $string;\n\n\tif (empty($stringencoding)) $stringencoding='UTF-8';\n\t// reduce for small screen\n\tif ($conf->dol_optimize_smallscreen==1 && $display==1) $size = round($size/3);\n\n\t// We go always here\n\tif ($trunc == 'right')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).($nodot?'':'...');\n\t\telse\n\t\t//return 'u'.$size.'-'.$newstring.'-'.dol_strlen($newstring,$stringencoding).'-'.$string;\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'middle')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > 2 && dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\t{\n\t\t\t$size1=round($size/2);\n\t\t\t$size2=round($size/2);\n\t\t\treturn dol_substr($newstring,0,$size1,$stringencoding).'...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size2,$size2,$stringencoding);\n\t\t}\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'left')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn '...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size,$size,$stringencoding);\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'wrap')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).\"\\n\".dol_trunc(dol_substr($newstring,$size,dol_strlen($newstring,$stringencoding)-$size,$stringencoding),$size,$trunc);\n\t\telse\n\t\treturn $string;\n\t}\n\telse return 'BadParam3CallingDolTrunc';\n}\n\n/**\n *\tShow picto whatever it's its name (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on title tag for tooltip. Not used if param notitle is set to 1.\n *\t@param      string\t\t$picto       \t\tName of image file to show ('filenew', ...)\n *\t\t\t\t\t\t\t\t\t\t\t\tIf no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                  \t\t\tExample: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                  \t\t\tExample: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                  \t\t\tExample: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\t\tint\t\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\t\tint\t\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *  @param\t\tstring\t\t$alt\t\t\t\tForce alt for bind peoplae\n *  @param\t\tstring\t\t$morecss\t\t\tAdd more class css on img tag (For example 'myclascss')\n *  @return     string       \t\t\t\t    Return img tag\n *  @see        #img_object, #img_picto_common\n */\nfunction img_picto($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0, $alt='', $morecss='')\n{\n\tglobal $conf, $langs;\n\n\t// Define fullpathpicto to use into src\n\tif ($pictoisfullpath)\n\t{\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t$fullpathpicto = $picto;\n\t}\n\telse\n\t{\n\t\t//if (in_array($picto, array('switch_off', 'switch_on', 'off', 'on')))\n\t\tif (in_array($picto, array('switch_off', 'switch_on', 'off', 'on')))\n\t\t{\n\t\t\t$fakey = $picto; $facolor=''; $fasize='';\n\t\t\tif ($picto == 'switch_off') { $fakey = 'fa-toggle-off'; $facolor='#999';    $fasize='2em'; }\n\t\t\tif ($picto == 'switch_on')  { $fakey = 'fa-toggle-on';  $facolor='#227722'; $fasize='2em'; }\n\t\t\tif ($picto == 'off') { $fakey = 'fa-square-o'; $fasize='1.3em'; }\n\t\t\tif ($picto == 'on')  { $fakey = 'fa-check-square-o'; $fasize='1.3em'; }\n\t\t\t$enabledisablehtml='';\n\t\t\t$enabledisablehtml.='<span class=\"fa '.$fakey.' valignmiddle'.($morecss?' '.$morecss:'').'\" style=\"'.($fasize?('font-size: '.$fasize.';'):'').($facolor?(' color: '.$facolor.';'):'').'\" alt=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\"'.($moreatt?' '.$moreatt:'').'\">';\n\t\t\tif (! empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) $enabledisablehtml.=$titlealt;\n\t\t\t$enabledisablehtml.='</span>';\n\t\t\treturn $enabledisablehtml;\n\t\t}\n\n\t\t// We forge fullpathpicto for image to $path/img/$picto. By default, we take DOL_URL_ROOT/theme/$conf->theme/img/$picto\n\t\t$url = DOL_URL_ROOT;\n\t\t$theme = $conf->theme;\n\n\t\t$path = 'theme/'.$theme;\n\t\tif (! empty($conf->global->MAIN_OVERWRITE_THEME_PATH)) $path = $conf->global->MAIN_OVERWRITE_THEME_PATH.'/theme/'.$theme;\t// If the theme does not have the same name as the module\n\t\telse if (! empty($conf->global->MAIN_OVERWRITE_THEME_RES)) $path = $conf->global->MAIN_OVERWRITE_THEME_RES.'/theme/'.$conf->global->MAIN_OVERWRITE_THEME_RES;  // To allow an external module to overwrite image resources whatever is activated theme\n\t\telse if (! empty($conf->modules_parts['theme']) && array_key_exists($theme, $conf->modules_parts['theme'])) $path = $theme.'/theme/'.$theme;\t// If the theme have the same name as the module\n\n\t\t// If we ask an image into $url/$mymodule/img (instead of default path)\n\t\tif (preg_match('/^([^@]+)@([^@]+)$/i',$picto,$regs))\n\t\t{\n\t\t\t$picto = $regs[1];\n\t\t\t$path = $regs[2];\t// $path is $mymodule\n\t\t}\n\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t// If alt path are defined, define url where img file is, according to physical path\n\t\tforeach ($conf->file->dol_document_root as $type => $dirroot)\t// ex: array([\"main\"]=>\"/home/maindir/htdocs\", [\"alt0\"]=>\"/home/moddir0/htdocs\", ...)\n\t\t{\n\t\t\tif ($type == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path.'/img/'.$picto))\t// This need a lot of time, that's why enabling alternative dir like \"custom\" dir is not recommanded\n\t\t\t{\n\t\t\t\t$url=DOL_URL_ROOT.$conf->file->dol_url_root[$type];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// $url is '' or '/custom', $path is current theme or\n\t\t$fullpathpicto = $url.'/'.$path.'/img/'.$picto;\n\t}\n\n\tif ($srconly) return $fullpathpicto;\n\telse\n\t{\n\t\t// tag title is used for tooltip on <a>, tag alt can be used with very simple text on image for bind people\n\t\t//$tmparray=array(0=>$titlealt);\n\t\t//if (empty($notitle) && preg_match('/:[^\\s0-9]/',$titlealt)) $tmparray=explode(':',$titlealt);\t\t// We explode if we have TextA:TextB. Not if we have TextA: TextB\n\t\t//$title=$tmparray[0];\n\t\t//$alt=empty($tmparray[1])?'':$tmparray[1];\n\t\t$title=$titlealt;\n\t\treturn '<img src=\"'.$fullpathpicto.'\" alt=\"'.dol_escape_htmltag($alt).'\"'.(($notitle || empty($title))?'':' title=\"'.dol_escape_htmltag($title).'\"').($moreatt?' '.$moreatt:' class=\"inline-block\"').'>';\t// Alt is used for accessibility, title for popup\n\t}\n}\n\n/**\n *\tShow a picto called object_picto (generic function)\n *\n *\t@param\tstring\t$titlealt\t\t\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$picto\t\t\t\tName of image to show object_picto (example: user, group, action, bill, contract, propal, product, ...)\n *\t\t\t\t\t\t\t\t\t\tFor external modules use imagename@mymodule to search into directory \"img\" of module.\n *\t@param\tstring\t$moreatt\t\t\tAdd more attribute on img tag (ie: class=\"datecallink\")\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\tint\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\tint\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *\t@return\tstring\t\t\t\t\t\tReturn img tag\n *\t@see\t#img_picto, #img_picto_common\n */\nfunction img_object($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0)\n{\n\treturn img_picto($titlealt, 'object_'.$picto, $moreatt, $pictoisfullpath, $srconly, $notitle);\n}\n\n/**\n *\tShow weather picto\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_weather($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\t$path = DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/weather/'.$picto;\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow picto (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_picto_common($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\tif ($pictoisfullpath) $path = $picto;\n\telse\n\t{\n\t\t$path = DOL_URL_ROOT.'/theme/common/'.$picto;\n\n\t\tif (! empty($conf->global->MAIN_MODULE_CAN_OVERWRITE_COMMONICONS))\n\t\t{\n\t\t\t$themepath = DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/'.$picto;\n\n\t\t\tif (file_exists($themepath)) $path = $themepath;\n\t\t}\n\t}\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow logo action\n *\n *\t@param\tstring\t\t$titlealt       Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t\t$numaction   \tAction id or code to show\n *\t@return string      \t\t\t\tReturn an img tag\n */\nfunction img_action($titlealt, $numaction)\n{\n\tglobal $conf, $langs;\n\n\tif (empty($titlealt) || $titlealt == 'default')\n\t{\n\t\tif ($numaction == '-1' || $numaction == 'ST_NO')\t\t\t{ $numaction = -1; $titlealt = $langs->transnoentitiesnoconv('ChangeDoNotContact'); }\n\t\telseif ($numaction ==  '0' || $numaction == 'ST_NEVER') \t{ $numaction = 0; $titlealt = $langs->transnoentitiesnoconv('ChangeNeverContacted'); }\n\t\telseif ($numaction ==  '1' || $numaction == 'ST_TODO')  \t{ $numaction = 1; $titlealt = $langs->transnoentitiesnoconv('ChangeToContact'); }\n\t\telseif ($numaction ==  '2' || $numaction == 'ST_PEND')  \t{ $numaction = 2; $titlealt = $langs->transnoentitiesnoconv('ChangeContactInProcess'); }\n\t\telseif ($numaction ==  '3' || $numaction == 'ST_DONE')  \t{ $numaction = 3; $titlealt = $langs->transnoentitiesnoconv('ChangeContactDone'); }\n\t\telse { $titlealt = $langs->transnoentitiesnoconv('ChangeStatus '.$numaction); $numaction = 0; }\n\t}\n\tif (! is_numeric($numaction)) $numaction=0;\n\n\treturn img_picto($titlealt, 'stcomm'.$numaction.'.png');\n}\n\n/**\n *  Show pdf logo\n *\n *  @param\tstring\t\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  int\t\t    $size       Taille de l'icone : 3 = 16x16px , 2 = 14x14px\n *  @return string      \t\t\tRetourne tag img\n */\nfunction img_pdf($titlealt = 'default', $size = 3)\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Show');\n\n\treturn img_picto($titlealt, 'pdf'.$size.'.png');\n}\n\n/**\n *\tShow logo +\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_add($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Add');\n\n\treturn img_picto($titlealt, 'edit_add.png', $other);\n}\n/**\n *\tShow logo -\n *\n *\t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_remove($titlealt = 'default', $other='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Remove');\n\n\treturn img_picto($titlealt, 'edit_remove.png', $other);\n}\n\n/**\n *\tShow logo editer/modifier fiche\n *\n *\t@param  string\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit($titlealt = 'default', $float = 0, $other = 'class=\"pictoedit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Modify');\n\n\treturn img_picto($titlealt, 'edit.png', ($float ? 'style=\"float: '.($langs->tab_translate[\"DIRECTION\"] == 'rtl'?'left':'right').'\"' : \"\") . ($other?' '.$other:''));\n}\n\n/**\n *\tShow logo view card\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_view($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('View');\n\n\t$moreatt = ($float ? 'style=\"float: right\" ' : '').$other;\n\n\treturn img_picto($titlealt, 'view.png', $moreatt);\n}\n\n/**\n *  Show delete logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_delete($titlealt = 'default', $other = 'class=\"pictodelete\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Delete');\n\n\treturn img_picto($titlealt, 'delete.png', $other);\n}\n\n/**\n *  Show printer logo\n *\n *  @param  string  $titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  string  $other      Add more attributes on img\n *  @return string              Retourne tag img\n */\nfunction img_printer($titlealt = \"default\", $other='')\n{\n\tglobal $conf,$langs;\n\tif ($titlealt==\"default\") $titlealt=$langs->trans(\"Print\");\n\treturn img_picto($titlealt,'printer.png',$other);\n}\n\n/**\n *  Show split logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_split($titlealt = 'default', $other = 'class=\"pictosplit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Split');\n\n\treturn img_picto($titlealt, 'split.png', $other);\n}\n\n/**\n *\tShow help logo with cursor \"?\"\n *\n * \t@param\tint              \t$usehelpcursor\t\t1=Use help cursor, 2=Use click pointer cursor, 0=No specific cursor\n * \t@param\tint|string\t        $usealttitle\t\tText to use as alt title\n * \t@return string            \t           \t\t\tReturn tag img\n */\nfunction img_help($usehelpcursor = 1, $usealttitle = 1)\n{\n\tglobal $conf, $langs;\n\n\tif ($usealttitle)\n\t{\n\t\tif (is_string($usealttitle)) $usealttitle = dol_escape_htmltag($usealttitle);\n\t\telse $usealttitle = $langs->trans('Info');\n\t}\n\n\treturn img_picto($usealttitle, 'info.png', 'style=\"vertical-align: middle;'.($usehelpcursor == 1 ? ' cursor: help': ($usehelpcursor == 2 ? ' cursor: pointer':'')).'\"');\n}\n\n/**\n *\tShow info logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_info($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Informations');\n\n\treturn img_picto($titlealt, 'info.png', 'style=\"vertical-align: middle;\"');\n}\n\n/**\n *\tShow warning logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"'). If 1, add float: right. Can't be \"class\" attribute.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_warning($titlealt = 'default', $moreatt = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Warning');\n\n\t//return '<div class=\"imglatecoin\">'.img_picto($titlealt, 'warning_white.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): '')).'</div>';\n\treturn img_picto($titlealt, 'warning.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): ''));\n}\n\n/**\n *  Show error logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_error($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Error');\n\n\treturn img_picto($titlealt, 'error.png', 'class=\"valigntextbottom\"');\n}\n\n/**\n *\tShow next logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n*\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_next($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Next');\n\n\t//return img_picto($titlealt, 'next.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-right paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow previous logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_previous($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Previous');\n\n\t//return img_picto($titlealt, 'previous.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-left paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow down arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected   Selected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_down($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Down');\n\n\treturn img_picto($titlealt, ($selected ? '1downarrow_selected.png' : '1downarrow.png'), 'class=\"imgdown'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow top arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_up($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Up');\n\n\treturn img_picto($titlealt, ($selected ? '1uparrow_selected.png' : '1uparrow.png'), 'class=\"imgup'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow left arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_left($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Left');\n\n\treturn img_picto($titlealt, ($selected ? '1leftarrow_selected.png' : '1leftarrow.png'), $moreatt);\n}\n\n/**\n *\tShow right arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_right($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Right');\n\n\treturn img_picto($titlealt, ($selected ? '1rightarrow_selected.png' : '1rightarrow.png'), $moreatt);\n}\n\n/**\n *\tShow tick logo if allowed\n *\n *\t@param\tstring\t$allow\t\tAllow\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_allow($allow, $titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Active');\n\n\tif ($allow == 1) return img_picto($titlealt, 'tick.png');\n\n\treturn '-';\n}\n\n\n/**\n *\tShow MIME img of a file\n *\n *\t@param\tstring\t$file\t\tFilename\n * \t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param\tstring\t$morecss\tMore css\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_mime($file, $titlealt = '', $morecss='')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$mimetype = dol_mimetype($file, '', 1);\n\t$mimeimg = dol_mimetype($file, '', 2);\n\t$mimefa = dol_mimetype($file, '', 4);\n\n\tif (empty($titlealt)) $titlealt = 'Mime type: '.$mimetype;\n\n\t//return img_picto_common($titlealt, 'mime/'.$mimeimg, 'class=\"'.$morecss.'\"');\n\treturn '<i class=\"fa fa-'.$mimefa.' paddingright\"></i>';\n}\n\n\n/**\n *\tShow phone logo.\n *  Use img_picto instead.\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$option\t\tOption\n *\t@return string      \t\tReturn img tag\n *  @deprecated\n *  @see img_picto\n */\nfunction img_phone($titlealt = 'default', $option = 0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Call');\n\n\tif ($option == 1) $img = 'call';\n\telse $img = 'call_out';\n\n\treturn img_picto($titlealt, $img);\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_search($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'search.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_searchclear($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'searchclear.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *\tShow information for admin users or standard users\n *\n *\t@param\tstring\t$text\t\t\tText info\n *\t@param  integer\t$infoonimgalt\tInfo is shown only on alt of star picto, otherwise it is show on output after the star picto\n *\t@param\tint\t\t$nodiv\t\t\tNo div\n *  @param  string  $admin          '1'=Info for admin users. '0'=Info for standard users (change only the look), 'xxx'=Other\n *  @param\tstring\t$morecss\t\tMore CSS\n *\t@return\tstring\t\t\t\t\tString with info text\n */\nfunction info_admin($text, $infoonimgalt = 0, $nodiv=0, $admin='1', $morecss='')\n{\n\tglobal $conf, $langs;\n\n\tif ($infoonimgalt)\n\t{\n\t\treturn img_picto($text, 'info', 'class=\"hideonsmartphone'.($morecss?' '.$morecss:'').'\"');\n\t}\n\n\treturn ($nodiv?'':'<div class=\"'.(empty($admin)?'':($admin=='1'?'info':$admin)).' hideonsmartphone'.($morecss?' '.$morecss:'').'\">').'<span class=\"fa fa-info-circle\" title=\"'.dol_escape_htmltag($admin?$langs->trans('InfoAdmin'):$langs->trans('Note')).'\"></span> '.$text.($nodiv?'':'</div>');\n}\n\n\n/**\n *\tAffiche message erreur system avec toutes les informations pour faciliter le diagnostic et la remontee des bugs.\n *\tOn doit appeler cette fonction quand une erreur technique bloquante est rencontree.\n *\tToutefois, il faut essayer de ne l'appeler qu'au sein de pages php, les classes devant\n *\trenvoyer leur erreur par l'intermediaire de leur propriete \"error\".\n *\n *\t@param\t \tDoliDB\t$db      \tDatabase handler\n *\t@param  \tmixed\t$error\t\tString or array of errors strings to show\n *  @param\t\tarray\t$errors\t\tArray of errors\n *\t@return \tvoid\n *  @see    \tdol_htmloutput_errors\n */\nfunction dol_print_error($db='',$error='',$errors=null)\n{\n\tglobal $conf,$langs,$argv;\n\tglobal $dolibarr_main_prod;\n\n\t$out = '';\n\t$syslog = '';\n\n\t// Si erreur intervenue avant chargement langue\n\tif (! $langs)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT .'/core/class/translate.class.php';\n\t\t$langs = new Translate('', $conf);\n\t\t$langs->load(\"main\");\n\t}\n\t$langs->load(\"main\");\n\t$langs->load(\"errors\");\n\n\tif ($_SERVER['DOCUMENT_ROOT'])    // Mode web\n\t{\n\t\t$out.=$langs->trans(\"DolibarrHasDetectedError\").\".<br>\\n\";\n\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"You use an experimental or develop level of features, so please do NOT report any bugs, except if problem is confirmed moving option MAIN_FEATURES_LEVEL back to 0.<br>\\n\";\n\t\t$out.=$langs->trans(\"InformationToHelpDiagnose\").\":<br>\\n\";\n\n\t\t$out.=\"<b>\".$langs->trans(\"Date\").\":</b> \".dol_print_date(time(),'dayhourlog').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Dolibarr\").\":</b> \".DOL_VERSION.\"<br>\\n\";\n\t\tif (isset($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"<b>\".$langs->trans(\"LevelOfFeature\").\":</b> \".$conf->global->MAIN_FEATURES_LEVEL.\"<br>\\n\";\n\t\tif (function_exists(\"phpversion\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"PHP\").\":</b> \".phpversion().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"Server\").\":</b> \".$_SERVER[\"SERVER_SOFTWARE\"].\"<br>\\n\";\n\t\tif (function_exists(\"php_uname\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"OS\").\":</b> \".php_uname().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"UserAgent\").\":</b> \".$_SERVER[\"HTTP_USER_AGENT\"].\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"RequestedUrl\").\":</b> \".dol_htmlentities($_SERVER[\"REQUEST_URI\"],ENT_COMPAT,'UTF-8').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Referer\").\":</b> \".(isset($_SERVER[\"HTTP_REFERER\"])?dol_htmlentities($_SERVER[\"HTTP_REFERER\"],ENT_COMPAT,'UTF-8'):'').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"MenuManager\").\":</b> \".(isset($conf->standard_menu)?$conf->standard_menu:'').\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$syslog.=\"url=\".dol_escape_htmltag($_SERVER[\"REQUEST_URI\"]);\n\t\t$syslog.=\", query_string=\".dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\t}\n\telse                              // Mode CLI\n\t{\n\t\t$out.='> '.$langs->transnoentities(\"ErrorInternalErrorDetected\").\":\\n\".$argv[0].\"\\n\";\n\t\t$syslog.=\"pid=\".dol_getmypid();\n\t}\n\n\tif (is_object($db))\n\t{\n\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"DatabaseTypeManager\").\":</b> \".$db->type.\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"RequestLastAccessInError\").\":</b> \".($db->lastqueryerror()?dol_escape_htmltag($db->lastqueryerror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"ReturnCodeLastAccessInError\").\":</b> \".($db->lasterrno()?dol_escape_htmltag($db->lasterrno()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"InformationLastAccessInError\").\":</b> \".($db->lasterror()?dol_escape_htmltag($db->lasterror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<br>\\n\";\n\t\t}\n\t\telse                            // Mode CLI\n\t\t{\n\t\t\t// No dol_escape_htmltag for output, we are in CLI mode\n\t\t\t$out.='> '.$langs->transnoentities(\"DatabaseTypeManager\").\":\\n\".$db->type.\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"RequestLastAccessInError\").\":\\n\".($db->lastqueryerror()?$db->lastqueryerror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"ReturnCodeLastAccessInError\").\":\\n\".($db->lasterrno()?$db->lasterrno():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"InformationLastAccessInError\").\":\\n\".($db->lasterror()?$db->lasterror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\n\t\t}\n\t\t$syslog.=\", sql=\".$db->lastquery();\n\t\t$syslog.=\", db_error=\".$db->lasterror();\n\t}\n\n\tif ($error || $errors)\n\t{\n\t\t$langs->load(\"errors\");\n\n\t\t// Merge all into $errors array\n\t\tif (is_array($error) && is_array($errors)) $errors=array_merge($error,$errors);\n\t\telseif (is_array($error)) $errors=$error;\n\t\telseif (is_array($errors)) $errors=array_merge(array($error),$errors);\n\t\telse $errors=array_merge(array($error));\n\n\t\tforeach($errors as $msg)\n\t\t{\n\t\t\tif (empty($msg)) continue;\n\t\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t\t{\n\t\t\t\t$out.=\"<b>\".$langs->trans(\"Message\").\":</b> \".dol_escape_htmltag($msg).\"<br>\\n\" ;\n\t\t\t}\n\t\t\telse                        // Mode CLI\n\t\t\t{\n\t\t\t\t$out.='> '.$langs->transnoentities(\"Message\").\":\\n\".$msg.\"\\n\" ;\n\t\t\t}\n\t\t\t$syslog.=\", msg=\".$msg;\n\t\t}\n\t}\n\tif (empty($dolibarr_main_prod) && $_SERVER['DOCUMENT_ROOT'] && function_exists('xdebug_print_function_stack') && function_exists('xdebug_call_file'))\n\t{\n\t\txdebug_print_function_stack();\n\t\t$out.='<b>XDebug informations:</b>'.\"<br>\\n\";\n\t\t$out.='File: '.xdebug_call_file().\"<br>\\n\";\n\t\t$out.='Line: '.xdebug_call_line().\"<br>\\n\";\n\t\t$out.='Function: '.xdebug_call_function().\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t}\n\n\tif (empty($dolibarr_main_prod)) print $out;\n\telse\n\t{\n\t\tprint $langs->trans(\"DolibarrHasDetectedError\").'. ';\n\t\tprint $langs->trans(\"YouCanSetOptionDolibarrMainProdToZero\");\n\t\tdefine(\"MAIN_CORE_ERROR\", 1);\n\t}\n\t//else print 'Sorry, an error occured but the parameter $dolibarr_main_prod is defined in conf file so no message is reported to your browser. Please read the log file for error message.';\n\tdol_syslog(\"Error \".$syslog, LOG_ERR);\n}\n\n/**\n * Show a public email and error code to contact if technical error\n *\n * @param\tstring\t$prefixcode\t\tPrefix of public error code\n * @param   string  $errormessage   Complete error message\n * @param\tarray\t$errormessages\tArray of error messages\n * @return\tvoid\n */\nfunction dol_print_error_email($prefixcode, $errormessage='', $errormessages=array())\n{\n\tglobal $langs,$conf;\n\n\t$langs->load(\"errors\");\n\t$now=dol_now();\n\tprint '<br><div class=\"center login_main_message\"><div class=\"error\">';\n\tprint $langs->trans(\"ErrorContactEMail\", $conf->global->MAIN_INFO_SOCIETE_MAIL, $prefixcode.dol_print_date($now,'%Y%m%d'));\n\tif ($errormessage) print '<br><br>'.$errormessage;\n\tif (is_array($errormessages) && count($errormessages))\n\t{\n\t\tforeach($errormessages as $mesgtoshow)\n\t\t{\n\t\t\tprint '<br><br>'.$mesgtoshow;\n\t\t}\n\t}\n\tprint '</div></div>';\n}\n\n/**\n *\tShow title line of an array\n *\n *\t@param\tstring\t$name        Label of field\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  Options of attribute td (\"\" by defaut, example: 'align=\"center\"')\n *\t@param  string\t$sortfield   Current field used to sort\n *\t@param  string\t$sortorder   Current sort order\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *  @param\tstring\t$tooltip\t Tooltip\n *\t@return\tvoid\n */\nfunction print_liste_field_titre($name, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $moreattrib=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\", $tooltip=\"\")\n{\n\tprint getTitleFieldOfList($name, 0, $file, $field, $begin, $moreparam, $moreattrib, $sortfield, $sortorder, $prefix, 0, $tooltip);\n}\n\n/**\n *\tGet title line of an array\n *\n *\t@param\tstring\t$name        \t\tTranslation key of field\n *\t@param\tint\t\t$thead\t\t \t\t0=To use with standard table format, 1=To use inside <thead><tr>, 2=To use with <div>\n *\t@param\tstring\t$file        \t\tUrl used when we click on sort picto\n *\t@param\tstring\t$field       \t\tField to use for new sorting. Empty if this field is not sortable.\n *\t@param\tstring\t$begin       \t\t(\"\" by defaut)\n *\t@param\tstring\t$moreparam   \t\tAdd more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  \t\tAdd more attributes on th (\"\" by defaut, example: 'align=\"center\"'). To add more css class, use param $prefix.\n *\t@param  string\t$sortfield   \t\tCurrent field used to sort (Ex: 'd.datep,d.id')\n *\t@param  string\t$sortorder   \t\tCurrent sort order (Ex: 'asc,desc')\n *  @param\tstring\t$prefix\t\t \t\tPrefix for css. Use space after prefix to add your own CSS tag, for example 'mycss '.\n *  @param\tstring\t$disablesortlink\t1=Disable sort link\n *  @param\tstring\t$tooltip\t \t\tTooltip\n *\t@return\tstring\n */\nfunction getTitleFieldOfList($name, $thead=0, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $moreattrib=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\", $disablesortlink=0, $tooltip='')\n{\n\tglobal $conf, $langs, $form;\n\t//print \"$name, $file, $field, $begin, $options, $moreattrib, $sortfield, $sortorder<br>\\n\";\n\n\t$sortorder=strtoupper($sortorder);\n\t$out='';\n\t$sortimg='';\n\n\t$tag='th';\n\tif ($thead==2) $tag='div';\n\n\t$tmpsortfield=explode(',',$sortfield);\n\t$sortfield1=trim($tmpsortfield[0]);    // If $sortfield is 'd.datep,d.id', it becomes 'd.datep'\n\t$tmpfield=explode(',',$field);\n\t$field1=trim($tmpfield[0]);            // If $field is 'd.datep,d.id', it becomes 'd.datep'\n\n\t//var_dump('field='.$field.' field1='.$field1.' sortfield='.$sortfield.' sortfield1='.$sortfield1);\n\t// If field is used as sort criteria we use a specific css class liste_titre_sel\n\t// Example if (sortfield,field)=(\"nom\",\"xxx.nom\") or (sortfield,field)=(\"nom\",\"nom\")\n\tif ($field1 && ($sortfield1 == $field1 || $sortfield1 == preg_replace(\"/^[^\\.]+\\./\",\"\",$field1))) $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre_sel\" '. $moreattrib.'>';\n\telse $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre\" '. $moreattrib.'>';\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\tif ($field1 != $sortfield1) // We are on another field\n\t\t{\n\t\t\tif (preg_match('/^DESC/', $sortorder)) $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">';\n\t\t\telse $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t\telse                      // We are of first sorting criteria\n\t\t{\n\t\t\tif (preg_match('/^ASC/', $sortorder)) $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=desc&begin='.$begin.$options.'\">';\n\t\t\telse $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t}\n\n\tif ($tooltip) $out.=$form->textwithpicto($langs->trans($name), $langs->trans($tooltip));\n\telse $out.=$langs->trans($name);\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$out.='</a>';\n\t}\n\n\tif (empty($thead) && $field)    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\t//print \"&nbsp;\";\n\t\t//$sortimg.= '<img width=\"2\" src=\"'.DOL_URL_ROOT.'/theme/common/transparent.png\" alt=\"\">';\n\t\t//$sortimg.= '<span class=\"nowrap\">';\n\n\t\tif (! $sortorder || $field1 != $sortfield1)\n\t\t{\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (preg_match('/^DESC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",1).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_up(\"Z-A\",0).'</span>';\n\t\t\t}\n\t\t\tif (preg_match('/^ASC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",1).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_down(\"A-Z\",0).'</span>';\n\t\t\t}\n\t\t}\n\n\t\t//$sortimg.= '</span>';\n\t}\n\n\t$out.=$sortimg;\n\n\t$out.='</'.$tag.'>';\n\n\treturn $out;\n}\n\n/**\n *\tShow a title.\n *\n *\t@param\tstring\t$title\t\t\tTitle to show\n *\t@return\tstring\t\t\t\t\tTitle to show\n *  @deprecated\t\t\t\t\t\tUse load_fiche_titre instead\n *  @see load_fiche_titre\n */\nfunction print_titre($title)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tprint '<div class=\"titre\">'.$title.'</div>';\n}\n\n/**\n *\tShow a title with picto\n *\n *\t@param\tstring\t$title\t\t\t\tTitle to show\n *\t@param\tstring\t$mesg\t\t\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n * \t@return\tvoid\n *  @deprecated Use print load_fiche_titre instead\n */\nfunction print_fiche_titre($title, $mesg='', $picto='title_generic.png', $pictoisfullpath=0, $id='')\n{\n\tprint load_fiche_titre($title, $mesg, $picto, $pictoisfullpath, $id);\n}\n\n/**\n *\tLoad a title with picto\n *\n *\t@param\tstring\t$titre\t\t\t\tTitle to show\n *\t@param\tstring\t$morehtmlright\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n *  @param  string  $morecssontable     More css on table\n *\t@param\tstring\t$morehtmlcenter\t\tAdded message to show on center\n * \t@return\tstring\n *  @see print_barre_liste\n */\nfunction load_fiche_titre($titre, $morehtmlright='', $picto='title_generic.png', $pictoisfullpath=0, $id=0, $morecssontable='', $morehtmlcenter='')\n{\n\tglobal $conf;\n\n\t$return='';\n\n\tif ($picto == 'setup') $picto='title.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title.png') $picto='title.gif';\n\n\t$return.= \"\\n\";\n\t$return.= '<table '.($id?'id=\"'.$id.'\" ':'').'summary=\"\" class=\"centpercent notopnoleftnoright'.($morecssontable?' '.$morecssontable:'').'\" style=\"margin-bottom: 2px;\"><tr>';\n\tif ($picto) $return.= '<td class=\"nobordernopadding widthpictotitle\" valign=\"middle\">'.img_picto('',$picto, 'class=\"valignmiddle widthpictotitle\" id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\t$return.= '<td class=\"nobordernopadding\" valign=\"middle\">';\n\t$return.= '<div class=\"titre\">'.$titre.'</div>';\n\t$return.= '</td>';\n\tif (dol_strlen($morehtmlcenter))\n\t{\n\t\t$return.= '<td class=\"nobordernopadding\" align=\"center\" valign=\"middle\">'.$morehtmlcenter.'</td>';\n\t}\n\tif (dol_strlen($morehtmlright))\n\t{\n\t\t$return.= '<td class=\"nobordernopadding titre_right wordbreak\" align=\"right\" valign=\"middle\">'.$morehtmlright.'</td>';\n\t}\n\t$return.= '</tr></table>'.\"\\n\";\n\n\treturn $return;\n}\n\n/**\n *\tPrint a title with navigation controls for pagination\n *\n *\t@param\tstring\t    $titre\t\t\t\tTitle to show (required)\n *\t@param\tint   \t    $page\t\t\t\tNumero of page to show in navigation links (required)\n *\t@param\tstring\t    $file\t\t\t\tUrl of page (required)\n *\t@param\tstring\t    $options         \tMore parameters for links ('' by default, does not include sortfield neither sortorder). Value must be 'urlencoded' before calling function.\n *\t@param\tstring    \t$sortfield       \tField to sort on ('' by default)\n *\t@param\tstring\t    $sortorder       \tOrder to sort ('' by default)\n *\t@param\tstring\t    $morehtmlcenter     String in the middle ('' by default). We often find here string $massaction comming from $form->selectMassAction()\n *\t@param\tint\t\t    $num\t\t\t\tNumber of records found by select with limit+1\n *\t@param\tint|string  $totalnboflines\t\tTotal number of records/lines for all pages (if known). Use a negative value of number to not show number. Use '' if unknown.\n *\t@param\tstring\t    $picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t    $pictoisfullpath\t1=Icon name is a full absolute url of image\n *  @param\tstring\t    $morehtmlright\t\t\tMore html to show\n *  @param  string      $morecss            More css to the table\n *  @param  int         $limit              Max number of lines (-1 = use default, 0 = no limit, > 0 = limit).\n *  @param  int         $hideselectlimit    Force to hide select limit\n *  @param  int         $hidenavigation     Force to hide all navigation tools\n *\t@return\tvoid\n */\nfunction print_barre_liste($titre, $page, $file, $options='', $sortfield='', $sortorder='', $morehtmlcenter='', $num=-1, $totalnboflines='', $picto='title_generic.png', $pictoisfullpath=0, $morehtmlright='', $morecss='', $limit=-1, $hideselectlimit=0, $hidenavigation=0)\n{\n\tglobal $conf,$langs;\n\n\t$savlimit = $limit;\n\t$savtotalnboflines = $totalnboflines;\n\t$totalnboflines=abs($totalnboflines);\n\n\tif ($picto == 'setup') $picto='title_setup.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title_generic.png') $picto='title.gif';\n\tif ($limit < 0) $limit = $conf->liste_limit;\n\tif ($savlimit != 0 && (($num > $limit) || ($num == -1) || ($limit == 0)))\n\t{\n\t\t$nextpage = 1;\n\t}\n\telse\n\t{\n\t\t$nextpage = 0;\n\t}\n\t//print 'totalnboflines='.$totalnboflines.'-savlimit='.$savlimit.'-limit='.$limit.'-num='.$num.'-nextpage='.$nextpage;\n\n\tprint \"\\n\";\n\tprint \"<!-- Begin title '\".$titre.\"' -->\\n\";\n\tprint '<table width=\"100%\" border=\"0\" class=\"notopnoleftnoright'.($morecss?' '.$morecss:'').'\" style=\"margin-bottom: 6px;\"><tr>';\n\n\t// Left\n\t//if ($picto && $titre) print '<td class=\"nobordernopadding hideonsmartphone\" width=\"40\" align=\"left\" valign=\"middle\">'.img_picto('', $picto, 'id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\tprint '<td class=\"nobordernopadding valignmiddle\">';\n\tif ($picto && $titre) print img_picto('', $picto, 'class=\"hideonsmartphone valignmiddle\" id=\"pictotitle\"', $pictoisfullpath);\n\tprint '<div class=\"titre inline-block\">'.$titre;\n\tif (!empty($titre) && $savtotalnboflines >= 0 && (string) $savtotalnboflines != '') print ' ('.$totalnboflines.')';\n\tprint '</div></td>';\n\n\t// Center\n\tif ($morehtmlcenter)\n\t{\n\t\tprint '<td class=\"nobordernopadding center valignmiddle\">'.$morehtmlcenter.'</td>';\n\t}\n\n\t// Right\n\tprint '<td class=\"nobordernopadding valignmiddle\" align=\"right\">';\n\tif ($sortfield) $options .= \"&sortfield=\".urlencode($sortfield);\n\tif ($sortorder) $options .= \"&sortorder=\".urlencode($sortorder);\n\t// Show navigation bar\n\t$pagelist = '';\n\tif ($savlimit != 0 && ($page > 0 || $num > $limit))\n\t{\n\t\tif ($totalnboflines)\t// If we know total nb of lines\n\t\t{\n\t\t\t// Define nb of extra page links before and after selected page + ... + first or last\n\t\t\t$maxnbofpage=(empty($conf->dol_optimize_smallscreen) ? 4 : 1);\n\n\t\t\tif ($limit > 0) $nbpages=ceil($totalnboflines/$limit);\n\t\t\telse $nbpages=1;\n\t\t\t$cpt=($page-$maxnbofpage);\n\t\t\tif ($cpt < 0) { $cpt=0; }\n\n\t\t\tif ($cpt>=1)\n\t\t\t{\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=0'.$options.'\">1</a></li>';\n\t\t\t\tif ($cpt > 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=1'.$options.'\">2</a></li>';\n\t\t\t}\n\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif ($cpt==$page)\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).'</span></li>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.$cpt.$options.'\">'.($cpt+1).'</a></li>';\n\t\t\t\t}\n\t\t\t\t$cpt++;\n\t\t\t}\n\t\t\twhile ($cpt < $nbpages && $cpt<=$page+$maxnbofpage);\n\n\t\t\tif ($cpt<$nbpages)\n\t\t\t{\n\t\t\t\tif ($cpt<$nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == $nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-2).$options.'\">'.($nbpages - 1).'</a></li>';\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).\"</li>\";\n\t\t}\n\t}\n\n\tprint_fleche_navigation($page, $file, $options, $nextpage, $pagelist, $morehtmlright, $savlimit, $totalnboflines, $hideselectlimit);\t\t// output the div and ul for previous/last completed with page numbers into $pagelist\n\n\tprint '</td>';\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"<!-- End title -->\\n\\n\";\n}\n\n/**\n *\tFunction to show navigation arrows into lists\n *\n *\t@param\tint\t\t\t\t$page\t\t\t\tNumber of page\n *\t@param\tstring\t\t\t$file\t\t\t\tPage URL (in most cases provided with $_SERVER[\"PHP_SELF\"])\n *\t@param\tstring\t\t\t$options         \tOther url paramaters to propagate (\"\" by default, may include sortfield and sortorder)\n *\t@param\tinteger\t\t\t$nextpage\t    \tDo we show a next page button\n *\t@param\tstring\t\t\t$betweenarrows\t\tHTML content to show between arrows. MUST contains '<li> </li>' tags or '<li><span> </span></li>'.\n *  @param\tstring\t\t\t$afterarrows\t\tHTML content to show after arrows. Must NOT contains '<li> </li>' tags.\n *  @param  int             $limit              Max nb of record to show  (-1 = no combo with limit, 0 = no limit, > 0 = limit)\n *\t@param\tint\t\t        $totalnboflines\t\tTotal number of records/lines for all pages (if known)\n *  @param  int             $hideselectlimit    Force to hide select limit\n *\t@return\tvoid\n */\nfunction print_fleche_navigation($page, $file, $options='', $nextpage=0, $betweenarrows='', $afterarrows='', $limit=-1, $totalnboflines=0, $hideselectlimit=0)\n{\n\tglobal $conf, $langs;\n\n\tprint '<div class=\"pagination\"><ul>';\n\tif ((int) $limit >= 0 && empty($hideselectlimit))\n\t{\n\t\t$pagesizechoices='10:10,20:20,30:30,40:40,50:50,100:100,250:250,500:500,1000:1000,5000:5000';\n\t\t//$pagesizechoices.=',0:'.$langs->trans(\"All\");     // Not yet supported\n\t\t//$pagesizechoices.=',2:2';\n\t\tif (! empty($conf->global->MAIN_PAGESIZE_CHOICES)) $pagesizechoices=$conf->global->MAIN_PAGESIZE_CHOICES;\n\n\t\tprint '<li class=\"pagination\">';\n\t\tprint '<select class=\"flat selectlimit\" name=\"limit\" title=\"'.dol_escape_htmltag($langs->trans(\"MaxNbOfRecordPerPage\")).'\">';\n\t\t$tmpchoice=explode(',',$pagesizechoices);\n\t\t$tmpkey=$limit.':'.$limit;\n\t\tif (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n\t\t$tmpkey=$conf->liste_limit.':'.$conf->liste_limit;\n\t\tif (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n\t\tasort($tmpchoice, SORT_NUMERIC);\n\t\t$found=false;\n\t\tforeach($tmpchoice as $val)\n\t\t{\n\t\t\t$selected='';\n\t\t\t$tmp=explode(':',$val);\n\t\t\t$key=$tmp[0];\n\t\t\t$val=$tmp[1];\n\t\t\tif ($key != '' && $val != '')\n\t\t\t{\n\t\t\t\tif ((int) $key == (int) $limit)\n\t\t\t\t{\n\t\t\t\t\t$selected = ' selected=\"selected\"';\n\t\t\t\t\t$found = true;\n\t\t\t\t}\n\t\t\t\tprint '<option name=\"'.$key.'\"'.$selected.'>'.dol_escape_htmltag($val).'</option>'.\"\\n\";\n\t\t\t}\n\t\t}\n\t\tprint '</select>';\n\t\tif ($conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint '<!-- JS CODE TO ENABLE select limit to launch submit of page -->\n            \t\t<script type=\"text/javascript\">\n                \tjQuery(document).ready(function () {\n            \t  \t\tjQuery(\".selectlimit\").change(function() {\n                            console.log(\"Change limit. Send submit\");\n                            $(this).parents(\\'form:first\\').submit();\n            \t  \t\t});\n                \t});\n            \t\t</script>\n                ';\n\t\t}\n\t\tprint '</li>';\n\t}\n\tif ($page > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationprevious\" href=\"'.$file.'?page='.($page-1).$options.'\"><i class=\"fa fa-chevron-left\" title=\"'.dol_escape_htmltag($langs->trans(\"Previous\")).'\"></i></a></li>';\n\t}\n\tif ($betweenarrows)\n\t{\n\t\tprint $betweenarrows;\n\t}\n\tif ($nextpage > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationnext\" href=\"'.$file.'?page='.($page+1).$options.'\"><i class=\"fa fa-chevron-right\" title=\"'.dol_escape_htmltag($langs->trans(\"Next\")).'\"></i></a></li>';\n\t}\n\tif ($afterarrows)\n\t{\n\t\tprint '<li class=\"paginationafterarrows\">';\n\t\tprint $afterarrows;\n\t\tprint '</li>';\n\t}\n\tprint '</ul></div>'.\"\\n\";\n}\n\n\n/**\n *\tReturn a string with VAT rate label formated for view output\n *\tUsed into pdf and HTML pages\n *\n *\t@param\tstring\t$rate\t\t\tRate value to format ('19.6', '19,6', '19.6%', '19,6%', '19.6 (CODEX)', ...)\n *  @param\tboolean\t$addpercent\t\tAdd a percent % sign in output\n *\t@param\tint\t\t$info_bits\t\tMiscellaneous information on vat (0=Default, 1=French NPR vat)\n *\t@param\tint\t\t$usestarfornpr\t-1=Never show, 0 or 1=Use '*' for NPR vat rates\n *  @return\tstring\t\t\t\t\tString with formated amounts ('19,6' or '19,6%' or '8.5% (NPR)' or '8.5% *' or '19,6 (CODEX)')\n */\nfunction vatrate($rate, $addpercent=false, $info_bits=0, $usestarfornpr=0)\n{\n\t$morelabel='';\n\n\tif (preg_match('/%/',$rate))\n\t{\n\t\t$rate=str_replace('%','',$rate);\n\t\t$addpercent=true;\n\t}\n\tif (preg_match('/\\((.*)\\)/',$rate,$reg))\n\t{\n\t\t$morelabel=' ('.$reg[1].')';\n\t\t$rate=preg_replace('/\\s*'.preg_quote($morelabel,'/').'/','',$rate);\n\t}\n\tif (preg_match('/\\*/',$rate))\n\t{\n\t\t$rate=str_replace('*','',$rate);\n\t\t$info_bits |= 1;\n\t}\n\n\t// If rate is '9/9/9' we don't change it.  If rate is '9.000' we apply price()\n\tif (! preg_match('/\\//', $rate)) $ret=price($rate,0,'',0,0).($addpercent?'%':'');\n\telse\n\t{\n\t\t// TODO Split on / and output with a price2num to have clean numbers without ton of 000.\n\t\t$ret=$rate.($addpercent?'%':'');\n\t}\n\tif (($info_bits & 1) && $usestarfornpr >= 0) $ret.=' *';\n\t$ret.=$morelabel;\n\treturn $ret;\n}\n\n\n/**\n *\t\tFunction to format a value into an amount for visual output\n *\t\tFunction used into PDF and HTML pages\n *\n *\t\t@param\tfloat\t\t$amount\t\t\tAmount to format\n *\t\t@param\tinteger\t\t$form\t\t\tType of format, HTML or not (not by default)\n *\t\t@param\tTranslate\t$outlangs\t\tObject langs for output\n *\t\t@param\tint\t\t\t$trunc\t\t\t1=Truncate if there is more decimals than MAIN_MAX_DECIMALS_SHOWN (default), 0=Does not truncate. Deprecated because amount are rounded (to unit or total amount accurancy) before beeing inserted into database or after a computation, so this parameter should be useless.\n *\t\t@param\tint\t\t\t$rounding\t\tMinimum number of decimal to show. If 0, no change, if -1, we use min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOTAL)\n *\t\t@param\tint\t\t\t$forcerounding\tForce the number of decimal to forcerounding decimal (-1=do not force)\n *\t\t@param\tstring\t\t$currency_code\tTo add currency symbol (''=add nothing, 'auto'=Use default currency, 'XXX'=add currency symbols for XXX currency)\n *\t\t@return\tstring\t\t\t\t\t\tChaine avec montant formate\n *\n *\t\t@see\tprice2num\t\t\t\t\tRevert function of price\n */\nfunction price($amount, $form=0, $outlangs='', $trunc=1, $rounding=-1, $forcerounding=-1, $currency_code='')\n{\n\tglobal $langs,$conf;\n\n\t// Clean parameters\n\tif (empty($amount)) $amount=0;\t// To have a numeric value if amount not defined or = ''\n\t$amount = (is_numeric($amount)?$amount:0); // Check if amount is numeric, for example, an error occured when amount value = o (letter) instead 0 (number)\n\tif ($rounding < 0) $rounding=min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOT);\n\t$nbdecimal=$rounding;\n\n\t// Output separators by default (french)\n\t$dec=','; $thousand=' ';\n\n\t// If $outlangs not forced, we use use language\n\tif (! is_object($outlangs)) $outlangs=$langs;\n\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$outlangs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$outlangs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telse if ($thousand == 'Space') $thousand=' ';\n\t//print \"outlangs=\".$outlangs->defaultlang.\" amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t//print \"amount=\".$amount.\"-\";\n\t$amount = str_replace(',','.',$amount);\t// should be useless\n\t//print $amount.\"-\";\n\t$datas = explode('.',$amount);\n\t$decpart = isset($datas[1])?$datas[1]:'';\n\t$decpart = preg_replace('/0+$/i','',$decpart);\t// Supprime les 0 de fin de partie decimale\n\t//print \"decpart=\".$decpart.\"<br>\";\n\t$end='';\n\n\t// We increase nbdecimal if there is more decimal than asked (to not loose information)\n\tif (dol_strlen($decpart) > $nbdecimal) $nbdecimal=dol_strlen($decpart);\n\t// Si on depasse max\n\tif ($trunc && $nbdecimal > $conf->global->MAIN_MAX_DECIMALS_SHOWN)\n\t{\n\t\t$nbdecimal=$conf->global->MAIN_MAX_DECIMALS_SHOWN;\n\t\tif (preg_match('/\\.\\.\\./i',$conf->global->MAIN_MAX_DECIMALS_SHOWN))\n\t\t{\n\t\t\t// Si un affichage est tronque, on montre des ...\n\t\t\t$end='...';\n\t\t}\n\t}\n\n\t// If force rounding\n\tif ($forcerounding >= 0) $nbdecimal = $forcerounding;\n\n\t// Format number\n\t$output=number_format($amount, $nbdecimal, $dec, $thousand);\n\tif ($form)\n\t{\n\t\t$output=preg_replace('/\\s/','&nbsp;',$output);\n\t\t$output=preg_replace('/\\'/','&#039;',$output);\n\t}\n\t// Add symbol of currency if requested\n\t$cursymbolbefore=$cursymbolafter='';\n\tif ($currency_code)\n\t{\n\t\tif ($currency_code == 'auto') $currency_code=$conf->currency;\n\n\t\t$listofcurrenciesbefore=array('USD','GBP','AUD','MXN','PEN','CNY');\n\t\tif (in_array($currency_code,$listofcurrenciesbefore)) $cursymbolbefore.=$outlangs->getCurrencySymbol($currency_code);\n\t\telse\n\t\t{\n\t\t\t$tmpcur=$outlangs->getCurrencySymbol($currency_code);\n\t\t\t$cursymbolafter.=($tmpcur == $currency_code ? ' '.$tmpcur : $tmpcur);\n\t\t}\n\t}\n\t$output=$cursymbolbefore.$output.$end.($cursymbolafter?' ':'').$cursymbolafter;\n\n\treturn $output;\n}\n\n/**\n *\tFunction that return a number with universal decimal format (decimal separator is '.') from an amount typed by a user.\n *\tFunction to use on each input amount before any numeric test or database insert\n *\n *\t@param\tfloat\t$amount\t\t\tAmount to convert/clean\n *\t@param\tstring\t$rounding\t\t''=No rounding\n * \t\t\t\t\t\t\t\t\t'MU'=Round to Max unit price (MAIN_MAX_DECIMALS_UNIT)\n *\t\t\t\t\t\t\t\t\t'MT'=Round to Max for totals with Tax (MAIN_MAX_DECIMALS_TOT)\n *\t\t\t\t\t\t\t\t\t'MS'=Round to Max for stock quantity (MAIN_MAX_DECIMALS_STOCK)\n * \t@param\tint\t\t$alreadysqlnb\tPut 1 if you know that content is already universal format number\n *\t@return\tstring\t\t\t\t\tAmount with universal numeric format (Example: '99.99999') or unchanged text if conversion fails.\n *\n *\t@see    price\t\t\t\t\tOpposite function of price2num\n */\nfunction price2num($amount,$rounding='',$alreadysqlnb=0)\n{\n\tglobal $langs,$conf;\n\n\t// Round PHP function does not allow number like '1,234.56' nor '1.234,56' nor '1 234,56'\n\t// Numbers must be '1234.56'\n\t// Decimal delimiter for PHP and database SQL requests must be '.'\n\t$dec=','; $thousand=' ';\n\tif ($langs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$langs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($langs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$langs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telseif ($thousand == 'Space') $thousand=' ';\n\t//print \"amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t// Convert value to universal number format (no thousand separator, '.' as decimal separator)\n\tif ($alreadysqlnb != 1)\t// If not a PHP number or unknown, we change format\n\t{\n\t\t//print 'PP'.$amount.' - '.$dec.' - '.$thousand.' - '.intval($amount).'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be like defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,$nbofdec,$dec,$thousand);\n\t\t}\n\t\t//print \"QQ\".$amount.'<br>';\n\n\t\t// Now make replace (the main goal of function)\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\t// Now, make a rounding if required\n\tif ($rounding)\n\t{\n\t\t$nbofdectoround='';\n\t\tif ($rounding == 'MU')     $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_UNIT;\n\t\telseif ($rounding == 'MT') $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_TOT;\n\t\telseif ($rounding == 'MS') $nbofdectoround=empty($conf->global->MAIN_MAX_DECIMALS_STOCK)?5:$conf->global->MAIN_MAX_DECIMALS_STOCK;\n\t\telseif (is_numeric($rounding))  $nbofdectoround=$rounding; \t// For admin info page\n\t\t//print \"RR\".$amount.' - '.$nbofdectoround.'<br>';\n\t\tif (dol_strlen($nbofdectoround)) $amount = round($amount,$nbofdectoround);\t// $nbofdectoround can be 0.\n\t\telse return 'ErrorBadParameterProvidedToFunction';\n\t\t//print 'SS'.$amount.' - '.$nbofdec.' - '.$dec.' - '.$thousand.' - '.$nbofdectoround.'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,min($nbofdec,$nbofdectoround),$dec,$thousand);\t\t// Convert amount to format with dolibarr dec and thousand\n\t\t}\n\t\t//print \"TT\".$amount.'<br>';\n\n\t\t// Always make replace because each math function (like round) replace\n\t\t// with local values and we want a number that has a SQL string format x.y\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\treturn $amount;\n}\n\n\n/**\n * Output a dimension with best unit\n *\n * @param   float       $dimension      Dimension\n * @param   int         $unit           Unit of dimension (0, -3, ...)\n * @param   string      $type           'weight', 'volume', ...\n * @param   Translate   $outputlangs    Translate language object\n * @param   int         $round          -1 = non rounding, x = number of decimal\n * @param   string      $forceunitoutput    'no' or numeric (-3, -6, ...) compared to $unit\n * @return  string                      String to show dimensions\n */\nfunction showDimensionInBestUnit($dimension, $unit, $type, $outputlangs, $round=-1, $forceunitoutput='no')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\tif (($forceunitoutput == 'no' && $dimension < 1/10000) || (is_numeric($forceunitoutput) && $forceunitoutput == -6))\n\t{\n\t\t$dimension = $dimension * 1000000;\n\t\t$unit = $unit - 6;\n\t}\n\telseif (($forceunitoutput == 'no' && $dimension < 1/10) || (is_numeric($forceunitoutput) && $forceunitoutput == -3))\n\t{\n\t\t$dimension = $dimension * 1000;\n\t\t$unit = $unit - 3;\n\t}\n\telseif (($forceunitoutput == 'no' && $dimension > 100000000) || (is_numeric($forceunitoutput) && $forceunitoutput == 6))\n\t{\n\t\t$dimension = $dimension / 1000000;\n\t\t$unit = $unit + 6;\n\t}\n\telseif (($forceunitoutput == 'no' && $dimension > 100000) || (is_numeric($forceunitoutput) && $forceunitoutput == 3))\n\t{\n\t\t$dimension = $dimension / 1000;\n\t\t$unit = $unit + 3;\n\t}\n\n\t$ret=price($dimension, 0, $outputlangs, 0, 0, $round).' '.measuring_units_string($unit, $type);\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn localtax rate for a particular vat, when selling a product with vat $vatrate, from a $thirdparty_buyer to a $thirdparty_seller\n *  Note: This function applies same rules than get_default_tva\n *\n * \t@param\tfloat\t\t$vatrate\t\t        Vat rate. Can be '8.5' or '8.5 (VATCODEX)' for example\n * \t@param  int\t\t\t$local\t\t         \tLocal tax to search and return (1 or 2 return only tax rate 1 or tax rate 2)\n *  @param  Societe\t\t$thirdparty_buyer    \tObject of buying third party\n *  @param\tSociete\t\t$thirdparty_seller\t\tObject of selling third party ($mysoc if not defined)\n *  @param\tint\t\t\t$vatnpr\t\t\t\t\tIf vat rate is NPR or not\n * \t@return\tmixed\t\t\t   \t\t\t\t\t0 if not found, localtax rate if found\n *  @see get_default_tva\n */\nfunction get_localtax($vatrate, $local, $thirdparty_buyer=\"\", $thirdparty_seller=\"\", $vatnpr=0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\tif (empty($thirdparty_seller) || ! is_object($thirdparty_seller)) $thirdparty_seller=$mysoc;\n\n\tdol_syslog(\"get_localtax tva=\".$vatrate.\" local=\".$local.\" thirdparty_buyer id=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->id:'').\"/country_code=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->country_code:'').\" thirdparty_seller id=\".$thirdparty_seller->id.\"/country_code=\".$thirdparty_seller->country_code.\" thirdparty_seller localtax1_assuj=\".$thirdparty_seller->localtax1_assuj.\"  thirdparty_seller localtax2_assuj=\".$thirdparty_seller->localtax2_assuj);\n\n\t$vatratecleaned = $vatrate;\n\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t{\n\t\t$vatratecleaned = trim($reg[1]);\n\t\t$vatratecode = $reg[2];\n\t}\n\n\t/*if ($thirdparty_buyer->country_code != $thirdparty_seller->country_code)\n\t{\n\t\treturn 0;\n\t}*/\n\n\t// Some test to guess with no need to make database access\n\tif ($mysoc->country_code == 'ES') // For spain localtaxes 1 and 2, tax is qualified if buyer use local tax\n\t{\n\t\tif ($local == 1)\n\t\t{\n\t\t\tif (! $mysoc->localtax1_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\t}\n\t\t}\n\n\t\tif ($local == 2)\n\t\t{\n\t\t\tif (! $mysoc->localtax2_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax2_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax2_assuj) return 0;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($local == 1 && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\tif ($local == 2 && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t}\n\n\t// For some country MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY is forced to on.\n\tif (in_array($mysoc->country_code, array('ES')))\n\t{\n\t\t$conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY = 1;\n\t}\n\n\t// Search local taxes\n\tif (! empty($conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY))\n\t{\n\t\tif ($local==1)\n\t\t{\n\t\t\tif ($thirdparty_seller != $mysoc)\n\t\t\t{\n\t\t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t{\n\t\t\t\t\treturn $thirdparty_seller->localtax1_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  // i am the seller\n\t\t\t{\n\t\t\t\tif (!isOnlyOneLocalTax($local))  // TODO If seller is me, why not always returning this, even if there is only one locatax vat.\n\t\t\t\t{\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($local==2)\n\t\t{\n\t\t\tif ($thirdparty_seller != $mysoc)\n\t\t\t{\n\t\t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t// TODO We should also return value defined on thirdparty only if defined\n\t\t\t\t{\n\t\t\t\t\treturn $thirdparty_seller->localtax2_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  // i am the seller\n\t\t\t{\n\t\t\t\tif (in_array($mysoc->country_code, array('ES')))\n\t\t\t\t{\n\t\t\t\t\treturn $thirdparty_buyer->localtax2_value;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// By default, search value of local tax on line of common tax\n\t$sql  = \"SELECT t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n   \t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n   \t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$thirdparty_seller->country_code.\"'\";\n   \t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n   \tif ($vatratecode) $sql.= \" AND t.code ='\".$vatratecode.\"'\";\t\t// If we have the code, we use it in priority\n   \telse $sql.= \" AND t.recuperableonly ='\".$vatnpr.\"'\";\n   \tdol_syslog(\"get_localtax\", LOG_DEBUG);\n   \t$resql=$db->query($sql);\n\n   \tif ($resql)\n   \t{\n   \t\t$obj = $db->fetch_object($resql);\n   \t\tif ($local==1) return $obj->localtax1;\n   \t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n}\n\n\n/**\n * Return true if LocalTax (1 or 2) is unique.\n * Example: If localtax1 is 5 on line with highest common vat rate, return true\n * Example: If localtax1 is 5:8:15 on line with highest common vat rate, return false\n *\n * @param   int \t$local\tLocal tax to test (1 or 2)\n * @return  boolean \t\tTrue if LocalTax have multiple values, False if not\n */\nfunction isOnlyOneLocalTax($local)\n{\n\t$tax=get_localtax_by_third($local);\n\n\t$valors=explode(\":\", $tax);\n\n\tif (count($valors)>1)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\n\n/**\n * Get values of localtaxes (1 or 2) for company country for the common vat with the highest value\n *\n * @param\tint\t\t$local \tLocalTax to get\n * @return\tnumber\t\t\tValues of localtax\n */\nfunction get_localtax_by_third($local)\n{\n\tglobal $db, $mysoc;\n\t$sql =\"SELECT t.localtax1, t.localtax2 \";\n\t$sql.=\" FROM \".MAIN_DB_PREFIX.\"c_tva as t inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=t.fk_pays\";\n\t$sql.=\" WHERE c.code = '\".$mysoc->country_code.\"' AND t.active = 1 AND t.taux=(\";\n\t$sql.=\"  SELECT max(tt.taux) FROM \".MAIN_DB_PREFIX.\"c_tva as tt inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=tt.fk_pays\";\n\t$sql.=\"  WHERE c.code = '\".$mysoc->country_code.\"' AND tt.active = 1\";\n\t$sql.=\"  )\";\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local==1) return $obj->localtax1;\n\t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n\n}\n\n\n/**\n *  Get vat main information from Id.\n *  You can call getLocalTaxesFromRate after to get other fields.\n *\n *  @param\tint|string  $vatrate\t\t    VAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray       \t  \t\t\t\tarray('rowid'=> , 'code'=> ...)\n *  @see getLocalTaxesFromRate\n */\nfunction getTaxesFromId($vatrate, $buyer=null, $seller=null, $firstparamisid=1)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getTaxesFromId vatrowid=\".$vatrate);\n\n\t// Search local taxes\n\t$sql = \"SELECT t.rowid, t.code, t.taux as rate, t.recuperableonly as npr, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n\telse\n\t{\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t\t{\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\tif ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n\t\telse $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n\t\t$sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n\t}\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) return array('rowid'=>$obj->rowid, 'code'=>$obj->code, 'rate'=>$obj->rate, 'npr'=>$obj->npr, 'accountancy_code_sell'=>$obj->accountancy_code_sell, 'accountancy_code_buy'=>$obj->accountancy_code_buy);\n\t\telse return array();\n\t}\n\telse dol_print_error($db);\n\n\treturn array();\n}\n\n/**\n *  Get type and rate of localtaxes for a particular vat rate/country of a thirdparty.\n *  This does not take into account the seller setup if subject to vat or not, only country.\n *  TODO\n *  This function is ALSO called to retrieve type for building PDF. Such call of function must be removed.\n *  Instead this function must be called when adding a line to get the array of localtax and type, and then\n *  provide it to the function calcul_price_total.\n *\n *  @param\tint|string  $vatrate\t\t\tVAT ID or Rate+Code. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tint\t\t    $local              Number of localtax (1 or 2, or 0 to return 1 & 2)\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is ID into table instead of Rate+code (use this if you can)\n *  @return\tarray    \t    \t\t\t\tarray(localtax_type1(1-6/0 if not found), rate localtax1, localtax_type2, rate localtax2, accountancycodecust, accountancycodesupp)\n *  @see getTaxesFromId\n */\nfunction getLocalTaxesFromRate($vatrate, $local, $buyer, $seller, $firstparamisid=0)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getLocalTaxesFromRate vatrate=\".$vatrate.\" local=\".$local);\n\n\t// Search local taxes\n\t$sql  = \"SELECT t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n\telse\n\t{\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t\t{\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\tif ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n\t\telse $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n\t\t$sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n\t}\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local == 1)\n\t\t{\n\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t}\n\t\telseif ($local == 2)\n\t\t{\n\t\t\treturn array($obj->localtax2_type, get_localtax($vatrate, $local, $buyer, $seller),$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, 1, $buyer, $seller), $obj->localtax2_type, get_localtax($vatrate, 2, $buyer, $seller), $obj->accountancy_code_sell,$obj->accountancy_code_buy);\n\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn vat rate of a product in a particular selling country or default country vat if product is unknown\n *  Function called by get_default_tva\n *\n *  @param\tint\t\t\t$idprod          \tId of product or 0 if not a predefined product\n *  @param  Societe\t\t$thirdparty_seller  Thirdparty with a ->country_code defined (FR, US, IT, ...)\n *\t@param\tint\t\t\t$idprodfournprice\tId product_fournisseur_price (for \"supplier\" order/invoice)\n *  @return float|string   \t\t\t\t    Vat rate to use with format 5.0 or '5.0 (XXX)'\n *  @see get_product_localtax_for_country\n */\nfunction get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice=0)\n{\n\tglobal $db,$conf,$mysoc;\n\n\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\tif ($idprodfournprice > 0)     // We want vat for product for a \"supplier\" order or invoice\n\t\t\t{\n\t\t\t\t$product->get_buyprice($idprodfournprice,0,0,0);\n\t\t\t\t$ret=$product->vatrate_supplier;\n\t\t\t\tif ($product->default_vat_code) $ret.=' ('.$product->default_vat_code.')';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$ret=$product->tva_tx;    // Default vat of product we defined\n\t\t\t\tif ($product->default_vat_code) $ret.=' ('.$product->default_vat_code.')';\n\t\t\t}\n\t\t\t$found=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product. Vat for couple countrycode/product is a feature not implemeted yet.\n\t\t\t// May be usefull/required if hidden option SERVICE_ARE_ECOMMERCE_200238EC is on\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS))\n\t\t{\n\t\t\t// If vat of product for the country not found or not defined, we return the first higher vat of country.\n\t\t\t$sql = \"SELECT taux as vat_rate\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t\t$sql.= \" ORDER BY t.taux DESC, t.code ASC, t.recuperableonly ASC\";\n\t\t\t$sql.= $db->plimit(1);\n\n\t\t\t$resql=$db->query($sql);\n\t\t\tif ($resql)\n\t\t\t{\n\t\t\t\t$obj=$db->fetch_object($resql);\n\t\t\t\tif ($obj)\n\t\t\t\t{\n\t\t\t\t\t$ret=$obj->vat_rate;\n\t\t\t\t}\n\t\t\t\t$db->free($sql);\n\t\t\t}\n\t\t\telse dol_print_error($db);\n\t\t}\n\t\telse $ret=$conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS;    // Forced value if autodetect fails\n\t}\n\n\tdol_syslog(\"get_product_vat_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tReturn localtax vat rate of a product in a particular selling country or default country vat if product is unknown\n *\n *  @param\tint\t\t$idprod         \t\tId of product\n *  @param  int\t\t$local          \t\t1 for localtax1, 2 for localtax 2\n *  @param  Societe\t$thirdparty_seller    \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *  @return int             \t\t\t\t<0 if KO, Vat rate if OK\n *  @see get_product_vat_for_country\n */\nfunction get_product_localtax_for_country($idprod, $local, $thirdparty_seller)\n{\n\tglobal $db,$mysoc;\n\n\tif (! class_exists('Product')) {\n\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t}\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\t/* Not defined yet, so we don't use this\n\t\t\tif ($local==1) $ret=$product->localtax1_tx;\n\t\t\telseif ($local==2) $ret=$product->localtax2_tx;\n\t\t\t$found=1;\n\t\t\t*/\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product\n\n\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\t// If vat of product for the country not found or not defined, we return higher vat of country.\n\t\t$sql = \"SELECT taux as vat_rate, localtax1, localtax2\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t$sql.= \" ORDER BY t.taux DESC, t.recuperableonly ASC\";\n\t\t$sql.= $db->plimit(1);\n\n\t\t$resql=$db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$obj=$db->fetch_object($resql);\n\t\t\tif ($obj)\n\t\t\t{\n\t\t\t\tif ($local==1) $ret=$obj->localtax1;\n\t\t\t\telseif ($local==2) $ret=$obj->localtax2;\n\t\t\t}\n\t\t}\n\t\telse dol_print_error($db);\n\t}\n\n\tdol_syslog(\"get_product_localtax_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tFunction that return vat rate of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier ou entreprise sans num TVA intra) alors TVA par defaut=TVA du produit vendu. Fin de regle\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise avec num TVA) intra alors TVA par defaut=0. Fin de regle\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tObjet societe vendeuse\n *\t@param  Societe\t\t$thirdparty_buyer   \tObjet societe acheteuse\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@param\tint\t\t\t$idprodfournprice\t\tId product_fournisseur_price (for supplier order/invoice)\n *\t@return float|string   \t\t\t\t      \tVat rate to use with format 5.0 or '5.0 (XXX)', -1 if we can't guess it\n *  @see get_default_npr, get_default_localtax\n */\nfunction get_default_tva(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $conf;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\n\t// Note: possible values for tva_assuj are 0/1 or franchise/reel\n\t$seller_use_vat=((is_numeric($thirdparty_seller->tva_assuj) && ! $thirdparty_seller->tva_assuj) || (! is_numeric($thirdparty_seller->tva_assuj) && $thirdparty_seller->tva_assuj=='franchise'))?0:1;\n\n\t$seller_country_code = $thirdparty_seller->country_code;\n\t$seller_in_cee = isInEEC($thirdparty_seller);\n\n\t$buyer_country_code = $thirdparty_buyer->country_code;\n\t$buyer_in_cee = isInEEC($thirdparty_buyer);\n\n\tdol_syslog(\"get_default_tva: seller use vat=\".$seller_use_vat.\", seller country=\".$seller_country_code.\", seller in cee=\".$seller_in_cee.\", buyer country=\".$buyer_country_code.\", buyer in cee=\".$buyer_in_cee.\", idprod=\".$idprod.\", idprodfournprice=\".$idprodfournprice.\", SERVICE_ARE_ECOMMERCE_200238EC=\".(! empty($conf->global->SERVICES_ARE_ECOMMERCE_200238EC)?$conf->global->SERVICES_ARE_ECOMMERCE_200238EC:''));\n\n\t// If services are eServices according to EU Council Directive 2002/38/EC (http://ec.europa.eu/taxation_customs/taxation/vat/traders/e-commerce/article_1610_en.htm)\n\t// we use the buyer VAT.\n\tif (! empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC))\n\t{\n\t\tif ($seller_in_cee && $buyer_in_cee && ! $thirdparty_buyer->isACompany())\n\t\t{\n\t\t\t//print 'VATRULE 0';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_buyer,$idprodfournprice);\n\t\t}\n\t}\n\n\t// If seller does not use VAT\n\tif (! $seller_use_vat)\n\t{\n\t\t//print 'VATRULE 1';\n\t\treturn 0;\n\t}\n\n\t// Le test ci-dessus ne devrait pas etre necessaire. Me signaler l'exemple du cas juridique concerne si le test suivant n'est pas suffisant.\n\n\t// Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\tif (($seller_country_code == $buyer_country_code)\n\t|| (in_array($seller_country_code,array('FR,MC')) && in_array($buyer_country_code,array('FR','MC')))) // Warning ->country_code not always defined\n\t{\n\t\t//print 'VATRULE 2';\n\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t}\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t// Not supported\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\tif (($seller_in_cee && $buyer_in_cee))\n\t{\n\t\t$isacompany=$thirdparty_buyer->isACompany();\n\t\tif ($isacompany)\n\t\t{\n\t\t\t//print 'VATRULE 3';\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//print 'VATRULE 4';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t\t}\n\t}\n\n\t// Sinon la TVA proposee par defaut=0. Fin de regle.\n\t// Rem: Cela signifie qu'au moins un des 2 est hors Communaute europeenne et que le pays differe\n\t//print 'VATRULE 5';\n\treturn 0;\n}\n\n\n/**\n *\tFonction qui renvoie si tva doit etre tva percue recuperable\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param  int\t\t\t$idprod                 Id product\n *  @param\tint\t\t\t$idprodfournprice\t\tId supplier price for product\n *\t@return float       \t\t\t        \t0 or 1\n *  @see get_default_tva, get_default_localtax\n */\nfunction get_default_npr(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $db;\n\n\tif ($idprodfournprice > 0)\n\t{\n\t\tif (! class_exists('ProductFournisseur'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/fourn/class/fournisseur.product.class.php';\n\t\t$prodprice = new ProductFournisseur($db);\n\t\t$prodprice->fetch_product_fournisseur_price($idprodfournprice);\n\t\treturn $prodprice->fourn_tva_npr;\n\t}\n\telseif ($idprod > 0)\n\t{\n\t\tif (! class_exists('Product'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t\t$prod = new Product($db);\n\t\t$prod->fetch($idprod);\n\t\treturn $prod->tva_npr;\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tFunction that return localtax of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param\tint\t\t\t$local\t\t\t\t\tLocaltax to process (1 or 2)\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@return integer        \t\t\t\t       \tlocaltax, -1 si ne peut etre determine\n *  @see get_default_tva, get_default_npr\n */\nfunction get_default_localtax($thirdparty_seller, $thirdparty_buyer, $local, $idprod=0)\n{\n\tglobal $mysoc;\n\n\tif (!is_object($thirdparty_seller)) return -1;\n\tif (!is_object($thirdparty_buyer)) return -1;\n\n\tif ($local==1) // Localtax 1\n\t{\n\t\tif ($mysoc->country_code == 'ES')\n\t\t{\n\t\t\tif (is_numeric($thirdparty_buyer->localtax1_assuj) && ! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Si vendeur non assujeti a Localtax1, localtax1 par default=0\n\t\t\tif (is_numeric($thirdparty_seller->localtax1_assuj) && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\tif (! is_numeric($thirdparty_seller->localtax1_assuj) && $thirdparty_seller->localtax1_assuj=='localtax1off') return 0;\n\t\t}\n\t}\n\telseif ($local==2) //I Localtax 2\n\t{\n\t\t// Si vendeur non assujeti a Localtax2, localtax2 par default=0\n\t\tif (is_numeric($thirdparty_seller->localtax2_assuj) && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t\tif (! is_numeric($thirdparty_seller->localtax2_assuj) && $thirdparty_seller->localtax2_assuj=='localtax2off') return 0;\n\t}\n\n\tif ($thirdparty_seller->country_code == $thirdparty_buyer->country_code)\n\t{\n\t\treturn get_product_localtax_for_country($idprod, $local, $thirdparty_seller);\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn yes or no in current language\n *\n *\t@param\tstring\t$yesno\t\t\tValue to test (1, 'yes', 'true' or 0, 'no', 'false')\n *\t@param\tinteger\t$case\t\t\t1=Yes/No, 0=yes/no, 2=Disabled checkbox, 3=Disabled checkbox + Yes/No\n *\t@param\tint\t\t$color\t\t\t0=texte only, 1=Text is formated with a color font style ('ok' or 'error'), 2=Text is formated with 'ok' color.\n *\t@return\tstring\t\t\t\t\tHTML string\n */\nfunction yn($yesno, $case=1, $color=0)\n{\n\tglobal $langs;\n\t$result='unknown'; $classname='';\n\tif ($yesno == 1 || strtolower($yesno) == 'yes' || strtolower($yesno) == 'true') \t// A mettre avant test sur no a cause du == 0\n\t{\n\t\t$result=$langs->trans('yes');\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"Yes\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"1\" checked disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"1\" checked disabled> '.$result;\n\n\t\t$classname='ok';\n\t}\n\telseif ($yesno == 0 || strtolower($yesno) == 'no' || strtolower($yesno) == 'false')\n\t{\n\t\t$result=$langs->trans(\"no\");\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"No\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"0\" disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"0\" disabled> '.$result;\n\n\t\tif ($color == 2) $classname='ok';\n\t\telse $classname='error';\n\t}\n\tif ($color) return '<font class=\"'.$classname.'\">'.$result.'</font>';\n\treturn $result;\n}\n\n\n/**\n *\tReturn a path to have a the directory according to object where files are stored.\n *  New usage:       $conf->module->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)\n *         or:       $conf->module->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)     if multidir_output not defined.\n *  Example our with new usage:       $object is invoice -> 'INYYMM-ABCD'\n *  Example our with old usage:       '015' with level 3->\"0/1/5/\", '015' with level 1->\"5/\", 'ABC-1' with level 3 ->\"0/0/1/\"\n *\n *\t@param\tstring\t$num            Id of object (deprecated, $object will be used in future)\n *\t@param  int\t\t$level\t\t    Level of subdirs to return (1, 2 or 3 levels). (deprecated, global option will be used in future)\n * \t@param\tint\t\t$alpha\t\t    0=Keep number only to forge path, 1=Use alpha part afer the - (By default, use 0). (deprecated, global option will be used in future)\n *  @param  int\t\t$withoutslash   0=With slash at end (except if '/', we return ''), 1=without slash at end\n *  @param\tObject\t$object\t\t\tObject\n *  @param\tstring\t$modulepart\t\tType of object ('invoice_supplier, 'donation', 'invoice', ...')\n *  @return\tstring\t\t\t\t\tDir to use ending. Example '' or '1/' or '1/2/'\n */\nfunction get_exdir($num, $level, $alpha, $withoutslash, $object, $modulepart)\n{\n\tglobal $conf;\n\n\t$path = '';\n\n\t$arrayforoldpath=array('cheque','user','category','holiday','supplier_invoice','invoice_supplier','mailing','supplier_payment');\n\tif (! empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) $arrayforoldpath[]='product';\n\tif (! empty($level) && in_array($modulepart, $arrayforoldpath))\n\t{\n\t\t// This part should be removed once all code is using \"get_exdir\" to forge path, with all parameters provided.\n\t\tif (empty($alpha)) $num = preg_replace('/([^0-9])/i','',$num);\n\t\telse $num = preg_replace('/^.*\\-/i','',$num);\n\t\t$num = substr(\"000\".$num, -$level);\n\t\tif ($level == 1) $path = substr($num,0,1);\n\t\tif ($level == 2) $path = substr($num,1,1).'/'.substr($num,0,1);\n\t\tif ($level == 3) $path = substr($num,2,1).'/'.substr($num,1,1).'/'.substr($num,0,1);\n\t}\n\telse\n\t{\n\t\t// TODO\n\t\t// We will enhance here a common way of forging path for document storage\n\t\t// Here, object->id, object->ref and modulepart are required.\n\t\tif (in_array($modulepart, array('thirdparty','contact','member','propal','proposal','commande','order','facture','invoice','shipment')))\n\t\t{\n\t\t\t$path=($object->ref?$object->ref:$object->id);\n\t\t}\n\t}\n\n\tif (empty($withoutslash) && ! empty($path)) $path.='/';\n\n\treturn $path;\n}\n\n/**\n *\tCreation of a directory (this can create recursive subdir)\n *\n *\t@param\tstring\t$dir\t\tDirectory to create (Separator must be '/'. Example: '/mydir/mysubdir')\n *\t@param\tstring\t$dataroot\tData root directory (To avoid having the data root in the loop. Using this will also lost the warning on first dir PHP has no permission when open_basedir is used)\n *  @param\tint\t\t$newmask\tMask for new file (Defaults to $conf->global->MAIN_UMASK or 0755 if unavailable). Example: '0444'\n *\t@return int         \t\t< 0 if KO, 0 = already exists, > 0 if OK\n */\nfunction dol_mkdir($dir, $dataroot='', $newmask=null)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"functions.lib::dol_mkdir: dir=\".$dir,LOG_INFO);\n\n\t$dir_osencoded=dol_osencode($dir);\n\tif (@is_dir($dir_osencoded)) return 0;\n\n\t$nberr=0;\n\t$nbcreated=0;\n\n\t$ccdir='';\n\tif (! empty($dataroot)) {\n\t\t// Remove data root from loop\n\t\t$dir = str_replace($dataroot.'/', '', $dir);\n\t\t$ccdir = $dataroot.'/';\n\t}\n\n\t$cdir = explode(\"/\", $dir);\n\t$num=count($cdir);\n\tfor ($i = 0; $i < $num; $i++)\n\t{\n\t\tif ($i > 0) $ccdir .= '/'.$cdir[$i];\n\t\telse $ccdir .= $cdir[$i];\n\t\tif (preg_match(\"/^.:$/\",$ccdir,$regs)) continue;\t// Si chemin Windows incomplet, on poursuit par rep suivant\n\n\t\t// Attention, le is_dir() peut echouer bien que le rep existe.\n\t\t// (ex selon config de open_basedir)\n\t\tif ($ccdir)\n\t\t{\n\t\t\t$ccdir_osencoded=dol_osencode($ccdir);\n\t\t\tif (! @is_dir($ccdir_osencoded))\n\t\t\t{\n\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' does not exists or is outside open_basedir PHP setting.\",LOG_DEBUG);\n\n\t\t\t\tumask(0);\n\t\t\t\t$dirmaskdec=octdec($newmask);\n\t\t\t\tif (empty($newmask)) {\n\t\t\t\t\t$dirmaskdec = empty( $conf->global->MAIN_UMASK ) ? octdec( '0755' ) : octdec( $conf->global->MAIN_UMASK );\n\t\t\t\t}\n\t\t\t\t$dirmaskdec |= octdec('0111');  // Set x bit required for directories\n\t\t\t\tif (! @mkdir($ccdir_osencoded, $dirmaskdec))\n\t\t\t\t{\n\t\t\t\t\t// Si le is_dir a renvoye une fausse info, alors on passe ici.\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Fails to create directory '\".$ccdir.\"' or directory already exists.\",LOG_WARNING);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' created\",LOG_DEBUG);\n\t\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignore\n\t\t\t\t\t$nbcreated++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignores\n\t\t\t}\n\t\t}\n\t}\n\treturn ($nberr ? -$nberr : $nbcreated);\n}\n\n\n/**\n *\tReturn picto saying a field is required\n *\n *\t@return  string\t\tChaine avec picto obligatoire\n */\nfunction picto_required()\n{\n\treturn '<span class=\"fieldrequired\">*</span>';\n}\n\n\n/**\n *\tClean a string from all HTML tags and entities.\n *  This function differs from strip_tags because:\n *  - <br> are replace with \\n\n *  - if entities are found, they are decoded before the strip\n *  - you can decide to convert line feed into spaces\n *\n *\t@param\tstring\t$stringtoclean\t\tString to clean\n *\t@param\tinteger\t$removelinefeed\t\t1=Replace also new lines by a space, 0=Only last one are removed\n *  @param  string\t$pagecodeto      \tEncoding of input/output string\n *\t@return string\t    \t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag strip_tags\n */\nfunction dol_string_nohtmltag($stringtoclean,$removelinefeed=1,$pagecodeto='UTF-8')\n{\n\t// TODO Try to replace with  strip_tags($stringtoclean)\n\t$pattern = \"/<[^<>]+>/\";\n\t$stringtoclean = preg_replace('/<br[^>]*>/', \"\\n\", $stringtoclean);\n\t$temp = dol_html_entity_decode($stringtoclean,ENT_COMPAT,$pagecodeto);\n\n\t// Exemple of $temp: <a href=\"/myurl\" title=\"<u>A title</u>\">0000-021</a>\n\t$temp = preg_replace($pattern,\"\",$temp);    // pass 1\n\t// $temp after pass 1: <a href=\"/myurl\" title=\"A title\">0000-021\n\t$temp = preg_replace($pattern,\"\",$temp);    // pass 2\n\t// $temp after pass 2: 0000-021\n\n\t// Supprime aussi les retours\n\tif ($removelinefeed) $temp=str_replace(array(\"\\r\\n\",\"\\r\",\"\\n\"),\" \",$temp);\n\n\t// et les espaces doubles\n\twhile(strpos($temp,\"  \"))\n\t{\n\t\t$temp = str_replace(\"  \",\" \",$temp);\n\t}\n\n\treturn trim($temp);\n}\n\n\n/**\n * Return first line of text. Cut will depends if content is HTML or not.\n *\n * @param \tstring\t$text\t\tInput text\n * @param\tint\t\t$nboflines  Nb of lines to get (default is 1 = first line only)\n * @return\tstring\t\t\t\tOutput text\n * @see dol_nboflines_bis, dol_string_nohtmltag, dol_escape_htmltag\n */\nfunction dolGetFirstLineOfText($text, $nboflines=1)\n{\n\tif ($nboflines == 1)\n\t{\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$firstline=preg_replace('/<br[^>]*>.*$/s','',$text);\t\t// The s pattern modifier means the . can match newline characters\n\t\t\t$firstline=preg_replace('/<div[^>]*>.*$/s','',$firstline);\t// The s pattern modifier means the . can match newline characters\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$firstline=preg_replace('/[\\n\\r].*/','',$text);\n\t\t}\n\t\treturn $firstline.((strlen($firstline) != strlen($text))?'...':'');\n\t}\n\telse\n\t{\n\t\t$ishtml=0;\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$text=preg_replace('/\\n/','',$text);\n\t\t\t$ishtml=1;\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\n\t\t$text = strtr($text, $repTable);\n\t\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t$firstline='';\n\t\t$i=0;\n\t\t$nba = count($a);\t// 2x nb of lines in $a because $a contains also a line for each new line separator\n\t\twhile (($i < $nba) && ($i < ($nboflines * 2)))\n\t\t{\n\t\t\tif ($i % 2 == 0) $firstline .= $a[$i];\n\t\t\telseif (($i < (($nboflines * 2) - 1)) && ($i < ($nba - 1))) $firstline .= ($ishtml?\"<br>\\n\":\"\\n\");\n\t\t\t$i++;\n\t\t}\n\t\tunset($a);\n\t\treturn $firstline.(($i < $nba)?'...':'');\n\t}\n}\n\n\n/**\n * Replace CRLF in string with a HTML BR tag\n *\n * @param\tstring\t$stringtoencode\t\tString to encode\n * @param\tint     $nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br\n * @param   bool\t$forxml             false=Use <br>, true=Use <br />\n * @return\tstring\t\t\t\t\t\tString encoded\n * @see dol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nl2br($stringtoencode,$nl2brmode=0,$forxml=false)\n{\n\tif (!$nl2brmode) {\n\t\treturn nl2br($stringtoencode, $forxml);\n\t} else {\n\t\t$ret=preg_replace('/(\\r\\n|\\r|\\n)/i', ($forxml?'<br />':'<br>'), $stringtoencode);\n\t\treturn $ret;\n\t}\n}\n\n\n/**\n *\tThis function is called to encode a string into a HTML string but differs from htmlentities because\n * \ta detection is done before to see if text is already HTML or not. Also, all entities but &,<,> are converted.\n *  This permits to encode special chars to entities with no double encoding for already encoded HTML strings.\n * \tThis function also remove last EOL or BR if $removelasteolbr=1 (default).\n *  For PDF usage, you can show text by 2 ways:\n *              - writeHTMLCell -> param must be encoded into HTML.\n *              - MultiCell -> param must not be encoded into HTML.\n *              Because writeHTMLCell convert also \\n into <br>, if function\n *              is used to build PDF, nl2brmode must be 1.\n *\n *\t@param\tstring\t$stringtoencode\t\tString to encode\n *\t@param\tint\t\t$nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br (for use with FPDF writeHTMLCell function for example)\n *  @param  string\t$pagecodefrom       Pagecode stringtoencode is encoded\n *  @param\tint\t\t$removelasteolbr\t1=Remove last br or lasts \\n (default), 0=Do nothing\n *  @return\tstring\t\t\t\t\t\tString encoded\n */\nfunction dol_htmlentitiesbr($stringtoencode, $nl2brmode=0, $pagecodefrom='UTF-8', $removelasteolbr=1)\n{\n\t$newstring=$stringtoencode;\n\tif (dol_textishtml($stringtoencode))\t// Check if text is already HTML or not\n\t{\n\t\t$newstring=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i','<br>',$newstring);\t// Replace \"<br type=\"_moz\" />\" by \"<br>\". It's same and avoid pb with FPDF.\n\t\tif ($removelasteolbr) $newstring=preg_replace('/<br>$/i','',$newstring);\t// Remove last <br> (remove only last one)\n\t\t$newstring=strtr($newstring,array('&'=>'__and__','<'=>'__lt__','>'=>'__gt__','\"'=>'__dquot__'));\n\t\t$newstring=dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom);\t// Make entity encoding\n\t\t$newstring=strtr($newstring,array('__and__'=>'&','__lt__'=>'<','__gt__'=>'>','__dquot__'=>'\"'));\n\t}\n\telse\n\t{\n\t\tif ($removelasteolbr) $newstring=preg_replace('/(\\r\\n|\\r|\\n)$/i','',$newstring);\t// Remove last \\n (may remove several)\n\t\t$newstring=dol_nl2br(dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom),$nl2brmode);\n\t}\n\t// Other substitutions that htmlentities does not do\n\t//$newstring=str_replace(chr(128),'&euro;',$newstring);\t// 128 = 0x80. Not in html entity table.     // Seems useles with TCPDF. Make bug with UTF8 languages\n\treturn $newstring;\n}\n\n/**\n *\tThis function is called to decode a HTML string (it decodes entities and br tags)\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@param\tstring\t$pagecodeto\t\t\tPage code for result\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlentitiesbr_decode($stringtodecode,$pagecodeto='UTF-8')\n{\n\t$ret=dol_html_entity_decode($stringtodecode,ENT_COMPAT,$pagecodeto);\n\t$ret=preg_replace('/'.\"\\r\\n\".'<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"<br>\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\r\\n\".'/i',\"\\r\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\n\".'/i',\"\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"\\n\",$ret);\n\treturn $ret;\n}\n\n/**\n *\tThis function remove all ending \\n and br at end\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlcleanlastbr($stringtodecode)\n{\n\t$ret=preg_replace('/(<br>|<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>|'.\"\\n\".'|'.\"\\r\".')+$/i',\"\",$stringtodecode);\n\treturn $ret;\n}\n\n/**\n * Replace html_entity_decode functions to manage errors\n *\n * @param   string\t$a\t\tOperand a\n * @param   string\t$b\t\tOperand b (ENT_QUOTES=convert simple and double quotes)\n * @param   string\t$c\t\tOperand c\n * @return  string\t\t\tString decoded\n */\nfunction dol_html_entity_decode($a,$b,$c='UTF-8')\n{\n\treturn html_entity_decode($a,$b,$c);\n}\n\n/**\n * Replace htmlentities functions.\n * Goal of this function is to be sure to have default values of htmlentities that match what we need.\n *\n * @param   string  $string         The input string to encode\n * @param   int     $flags          Flags (see PHP doc above)\n * @param   string  $encoding       Encoding page code\n * @param   bool    $double_encode  When double_encode is turned off, PHP will not encode existing html entities\n * @return  string  $ret            Encoded string\n */\nfunction dol_htmlentities($string, $flags=null, $encoding='UTF-8', $double_encode=false)\n{\n\treturn htmlentities($string, $flags, $encoding, $double_encode);\n}\n\n/**\n *\tCheck if a string is a correct iso string\n *\tIf not, it will we considered not HTML encoded even if it is by FPDF.\n *\tExample, if string contains euro symbol that has ascii code 128\n *\n *\t@param\tstring\t$s      String to check\n *\t@return\tint     \t\t0 if bad iso, 1 if good iso\n */\nfunction dol_string_is_good_iso($s)\n{\n\t$len=dol_strlen($s);\n\t$ok=1;\n\tfor($scursor=0;$scursor<$len;$scursor++)\n\t{\n\t\t$ordchar=ord($s{$scursor});\n\t\t//print $scursor.'-'.$ordchar.'<br>';\n\t\tif ($ordchar < 32 && $ordchar != 13 && $ordchar != 10) { $ok=0; break; }\n\t\tif ($ordchar > 126 && $ordchar < 160) { $ok=0; break; }\n\t}\n\treturn $ok;\n}\n\n\n/**\n *\tReturn nb of lines of a clear text\n *\n *\t@param\tstring\t$s\t\t\tString to check\n * \t@param\tint     $maxchar\tNot yet used\n *\t@return\tint\t\t\t\t\tNumber of lines\n *  @see\tdol_nboflines_bis, dolGetFirstLineOfText\n */\nfunction dol_nboflines($s,$maxchar=0)\n{\n\tif ($s == '') return 0;\n\t$arraystring=explode(\"\\n\",$s);\n\t$nb=count($arraystring);\n\n\treturn $nb;\n}\n\n\n/**\n *\tReturn nb of lines of a formated text with \\n and <br> (WARNING: string must not have mixed \\n and br separators)\n *\n *\t@param\tstring\t$text      \t\tText\n *\t@param\tint\t\t$maxlinesize  \tLargeur de ligne en caracteres (ou 0 si pas de limite - defaut)\n * \t@param\tstring\t$charset\t\tGive the charset used to encode the $text variable in memory.\n *\t@return int\t\t\t\t\t\tNumber of lines\n *\t@see\tdol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nboflines_bis($text,$maxlinesize=0,$charset='UTF-8')\n{\n\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\tif (dol_textishtml($text)) $repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\n\t$text = strtr($text, $repTable);\n\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t$nblines = (int) floor((count($a)+1)/2);\n\t// count possible auto line breaks\n\tif($maxlinesize)\n\t{\n\t\tforeach ($a as $line)\n\t\t{\n\t\t\tif (dol_strlen($line)>$maxlinesize)\n\t\t\t{\n\t\t\t\t//$line_dec = html_entity_decode(strip_tags($line));\n\t\t\t\t$line_dec = html_entity_decode($line);\n\t\t\t\tif(dol_strlen($line_dec)>$maxlinesize)\n\t\t\t\t{\n\t\t\t\t\t$line_dec=wordwrap($line_dec,$maxlinesize,'\\n',true);\n\t\t\t\t\t$nblines+=substr_count($line_dec,'\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunset($a);\n\treturn $nblines;\n}\n\n/**\n *\t Same function than microtime in PHP 5 but compatible with PHP4\n *\n * @return\t\tfloat\t\tTime (millisecondes) with microsecondes in decimal part\n * @deprecated Dolibarr does not support PHP4, you should use native function\n * @see microtime()\n */\nfunction dol_microtime_float()\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\treturn microtime(true);\n}\n\n/**\n *\tReturn if a text is a html content\n *\n *\t@param\tstring\t$msg\t\tContent to check\n *\t@param\tint\t\t$option\t\t0=Full detection, 1=Fast check\n *\t@return\tboolean\t\t\t\ttrue/false\n *\t@see\tdol_concatdesc\n */\nfunction dol_textishtml($msg,$option=0)\n{\n\tif ($option == 1)\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<br/i',$msg))\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<(b|em|i|u)>/i',$msg))\t\treturn true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)>/i',$msg)) \t  return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*>/i',$msg)) return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*\\/>/i',$msg)) return true;\n\t\telseif (preg_match('/<img\\s+[^<>]*src[^<>]*>/i',$msg)) return true;\t// must accept <img src=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<a\\s+[^<>]*href[^<>]*>/i',$msg)) return true;\t// must accept <a href=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<h[0-9]>/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/&[A-Z0-9]{1,6};/i',$msg))\treturn true;    // Html entities names (http://www.w3schools.com/tags/ref_entities.asp)\n\t\telseif (preg_match('/&#[0-9]{2,3};/i',$msg))\treturn true;    // Html entities numbers (http://www.w3schools.com/tags/ref_entities.asp)\n\t\treturn false;\n\t}\n}\n\n/**\n *  Concat 2 descriptions with a new line between them (second operand after first one with appropriate new line separator)\n *  text1 html + text2 html => text1 + '<br>' + text2\n *  text1 html + text2 txt  => text1 + '<br>' + dol_nl2br(text2)\n *  text1 txt  + text2 html => dol_nl2br(text1) + '<br>' + text2\n *  text1 txt  + text2 txt  => text1 + '\\n' + text2\n *\n *  @param\tstring\t$text1\t\tText 1\n *  @param\tstring\t$text2\t\tText 2\n *  @param  bool\t$forxml     false=Use <br>, true=Use <br />\n *  @return\tstring\t\t\t\tText 1 + new line + Text2\n *  @see    dol_textishtml\n */\nfunction dol_concatdesc($text1,$text2,$forxml=false)\n{\n\t$ret='';\n\t$ret.= (! dol_textishtml($text1) && dol_textishtml($text2))?dol_nl2br($text1, 0, $forxml):$text1;\n\t$ret.= (! empty($text1) && ! empty($text2)) ? ((dol_textishtml($text1) || dol_textishtml($text2))?($forxml?\"<br \\>\\n\":\"<br>\\n\") : \"\\n\") : \"\";\n\t$ret.= (dol_textishtml($text1) && ! dol_textishtml($text2))?dol_nl2br($text2, 0, $forxml):$text2;\n\treturn $ret;\n}\n\n\n/**\n * Return array of possible common substitutions. This includes several families like: 'system', 'mycompany', 'object', 'objectamount', 'date', 'user'\n *\n * @param\tTranslate\t$outputlangs\tOutput language\n * @param   int         $onlykey        1=Do not calculate some heavy values of keys (performance enhancement when we need only the keys), 2=Values are trunc and html sanitized (to use for help tooltip)\n * @param   array       $exclude        Array of family keys we want to exclude. For example array('system', 'mycompany', 'object', 'objectamount', 'date', 'user', ...)\n * @param   Object      $object         Object for keys on object\n * @return\tarray\t\t\t\t\t\tArray of substitutions\n * @see setSubstitFromObject\n */\nfunction getCommonSubstitutionArray($outputlangs, $onlykey=0, $exclude=null, $object=null)\n{\n\tglobal $db, $conf, $mysoc, $user;\n\n\t$substitutionarray=array();\n\n\tif (empty($exclude) || ! in_array('system', $exclude))\n\t{\n\t\t$substitutionarray['__(AnyTranslationKey)__']=$outputlangs->trans('TranslationOfKey');\n\t\t$substitutionarray['__[AnyConstantKey]__']=$outputlangs->trans('ValueOfConstant');\n\t\t$substitutionarray['__DOL_MAIN_URL_ROOT__']=DOL_MAIN_URL_ROOT;\n\t}\n\tif ((empty($exclude) || ! in_array('mycompany', $exclude)) && is_object($mysoc))\n\t{\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__MYCOMPANY_NAME__'    => $mysoc->name,\n\t\t\t'__MYCOMPANY_EMAIL__'   => $mysoc->email,\n\t\t\t'__MYCOMPANY_PROFID1__' => $mysoc->idprof1,\n\t\t\t'__MYCOMPANY_PROFID2__' => $mysoc->idprof2,\n\t\t\t'__MYCOMPANY_PROFID3__' => $mysoc->idprof3,\n\t\t\t'__MYCOMPANY_PROFID4__' => $mysoc->idprof4,\n\t\t\t'__MYCOMPANY_PROFID5__' => $mysoc->idprof5,\n\t\t\t'__MYCOMPANY_PROFID6__' => $mysoc->idprof6,\n\t\t\t'__MYCOMPANY_CAPITAL__' => $mysoc->capital,\n\t\t\t'__MYCOMPANY_FULLADDRESS__' => $mysoc->getFullAddress(1, ', '),\n\t\t\t'__MYCOMPANY_ADDRESS__' => $mysoc->address,\n\t\t\t'__MYCOMPANY_ZIP__'     => $mysoc->zip,\n\t\t\t'__MYCOMPANY_TOWN__'    => $mysoc->town,\n\t\t\t'__MYCOMPANY_COUNTRY__'    => $mysoc->country,\n\t\t\t'__MYCOMPANY_COUNTRY_ID__' => $mysoc->country_id\n\t\t));\n\t}\n\tif (($onlykey || is_object($object)) && (empty($exclude) || ! in_array('object', $exclude)))\n\t{\n\t\tif ($onlykey)\n\t\t{\n\t\t\t$substitutionarray['__ID__'] = '__ID__';\n\t\t\t$substitutionarray['__REF__'] = '__REF__';\n\t\t\t$substitutionarray['__REFCLIENT__'] = '__REFCLIENT__';\n\t\t\t$substitutionarray['__REFSUPPLIER__'] = '__REFSUPPLIER__';\n\t\t\t$substitutionarray['__EXTRAFIELD_XXX__'] = '__EXTRAFIELD_XXX__';\n\n\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = '__THIRDPARTY_ID__';\n\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = '__THIRDPARTY_NAME__';\n\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = '__THIRDPARTY_EMAIL__';\n\n\t\t\tif (is_object($object) && $object->element == 'shipping')\n\t\t\t{\n\t\t\t\t$substitutionarray['__MEMBER_CIVILITY__'] = '__MEMBER_CIVILITY__';\n\t\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__'] = '__MEMBER_FIRSTNAME__';\n\t\t\t\t$substitutionarray['__MEMBER_LASTNAME__'] = '__MEMBER_LASTNAME__';\n\t\t\t}\n\t\t\t$substitutionarray['__PROJECT_ID__'] = '__PROJECT_ID__';\n\t\t\t$substitutionarray['__PROJECT_REF__'] = '__PROJECT_REF__';\n\t\t\t$substitutionarray['__PROJECT_NAME__'] = '__PROJECT_NAME__';\n\n\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = 'Highest date planned for a service start';\n\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = 'Highest date and hour planned for service start';\n\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = 'Lowest data for planned expiration of service';\n\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = 'Lowest date and hour for planned expiration of service';\n\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = 'LinkToPayOnlineIfApplicable';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT__'] = 'Security key (if key is not unique per record)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_MEMBER__'] = 'Security key for payment on a member subscription (one key per member)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_ORDER__'] = 'Security key for payment on an order';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_INVOICE__'] = 'Security key for payment on an invoice';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_CONTRACTLINE__'] = 'Security key for payment on a a service';\n\n\t\t\tif (is_object($object) && $object->element == 'shipping')\n\t\t\t{\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__']='Shipping tacking number';\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__']='Shipping tracking url';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$substitutionarray['__ID__'] = $object->id;\n\t\t\t$substitutionarray['__REF__'] = $object->ref;\n\t\t\t$substitutionarray['__REFCLIENT__'] = (isset($object->ref_client) ? $object->ref_client : (isset($object->ref_customer) ? $object->ref_customer : ''));\n\t\t\t$substitutionarray['__REFSUPPLIER__'] = (isset($object->ref_supplier) ? $object->ref_supplier : '');\n\n\t\t\t// TODO USe this ?\n\t\t\t$msgishtml = 0;\n\n\t\t\t$birthday = dol_print_date($object->birth,'day');\n\n\t\t\tif (method_exists($object, 'getCivilityLabel')) $substitutionarray['__MEMBER_CIVILITY__'] = $object->getCivilityLabel();\n\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__']=$msgishtml?dol_htmlentitiesbr($object->firstname):$object->firstname;\n\t\t\t$substitutionarray['__MEMBER_LASTNAME__']=$msgishtml?dol_htmlentitiesbr($object->lastname):$object->lastname;\n\t\t\tif (method_exists($object, 'getFullName')) $substitutionarray['__MEMBER_FULLNAME__']=$msgishtml?dol_htmlentitiesbr($object->getFullName($outputlangs)):$object->getFullName($outputlangs);\n\t\t\t$substitutionarray['__MEMBER_COMPANY__']=$msgishtml?dol_htmlentitiesbr($object->societe):$object->societe;\n\t\t\t$substitutionarray['__MEMBER_ADDRESS__']=$msgishtml?dol_htmlentitiesbr($object->address):$object->address;\n\t\t\t$substitutionarray['__MEMBER_ZIP__']=$msgishtml?dol_htmlentitiesbr($object->zip):$object->zip;\n\t\t\t$substitutionarray['__MEMBER_TOWN__']=$msgishtml?dol_htmlentitiesbr($object->town):$object->town;\n\t\t\t$substitutionarray['__MEMBER_COUNTRY__']=$msgishtml?dol_htmlentitiesbr($object->country):$object->country;\n\t\t\t$substitutionarray['__MEMBER_EMAIL__']=$msgishtml?dol_htmlentitiesbr($object->email):$object->email;\n\t\t\t$substitutionarray['__MEMBER_BIRTH__']=$msgishtml?dol_htmlentitiesbr($birthday):$birthday;\n\t\t\t$substitutionarray['__MEMBER_PHOTO__']=$msgishtml?dol_htmlentitiesbr($object->photo):$object->photo;\n\t\t\t$substitutionarray['__MEMBER_LOGIN__']=$msgishtml?dol_htmlentitiesbr($object->login):$object->login;\n\t\t\t$substitutionarray['__MEMBER_PASSWORD__']=$msgishtml?dol_htmlentitiesbr($object->pass):$object->pass;\n\t\t\t$substitutionarray['__MEMBER_PHONE__']=$msgishtml?dol_htmlentitiesbr($object->phone):$object->phone;\n\t\t\t$substitutionarray['__MEMBER_PHONEPRO__']=$msgishtml?dol_htmlentitiesbr($object->phone_perso):$object->phone_perso;\n\t\t\t$substitutionarray['__MEMBER_PHONEMOBILE__']=$msgishtml?dol_htmlentitiesbr($object->phone_mobile):$object->phone_mobile;\n\n\t\t\tif (is_object($object) && $object->element == 'societe')\n\t\t\t{\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object)?$object->id:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object)?$object->name:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object)?$object->name_alias:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object)?$object->email:'');\n\t\t\t}\n\t\t\telseif (is_object($object->thirdparty) && $object->thirdparty->id > 0)\n\t\t\t{\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object->thirdparty)?$object->thirdparty->id:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object->thirdparty)?$object->thirdparty->name:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object->thirdparty)?$object->thirdparty->name_alias:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object->thirdparty)?$object->thirdparty->email:'');\n\t\t\t}\n\n\t\t\tif (is_object($object->projet) && $object->projet->id > 0)\n\t\t\t{\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = (is_object($object->projet)?$object->projet->id:'');\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = (is_object($object->projet)?$object->projet->ref:'');\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = (is_object($object->projet)?$object->projet->title:'');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'shipping')\n\t\t\t{\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__']=$object->tracking_number;\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__']=$object->tracking_url;\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'contrat' && is_array($object->lines))\n\t\t\t{\n\t\t\t\t$dateplannedstart='';\n\t\t\t\t$datenextexpiration='';\n\t\t\t\tforeach($object->lines as $line)\n\t\t\t\t{\n\t\t\t\t\tif ($line->date_ouverture_prevue > $dateplannedstart) $dateplannedstart = $line->date_ouverture_prevue;\n\t\t\t\t\tif ($line->statut == 4 && $line->date_fin_prevue && (! $datenextexpiration || $line->date_fin_prevue < $datenextexpiration)) $datenextexpiration = $line->date_fin_prevue;\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = dol_print_date($dateplannedstart, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = dol_print_date($dateplannedstart, 'standard');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = dol_print_date($datenextexpiration, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = dol_print_date($datenextexpiration, 'standard');\n\t\t\t}\n\n\t\t\t// Create dynamic tags for __EXTRAFIELD_FIELD__\n\t\t\tif ($object->table_element && $object->id > 0)\n\t\t\t{\n\t\t\t\t$extrafieldstmp = new ExtraFields($db);\n\t\t\t\t$extralabels = $extrafieldstmp->fetch_name_optionals_label($object->table_element, true);\n\t\t\t\t$object->fetch_optionals($object->id, $extralabels);\n\t\t\t\tforeach ($extrafieldstmp->attribute_label as $key => $label) {\n\t\t\t\t\t$substitutionarray['__EXTRAFIELD_' . strtoupper($key) . '__'] = $object->array_options['options_' . $key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = 'TODO';\n\t\t}\n\t}\n\tif (empty($exclude) || ! in_array('objectamount', $exclude))\n\t{\n\t\t$substitutionarray['__DATE_YMD__']        = is_object($object)?(isset($object->date) ? dol_print_date($object->date, 'day', 0, $outputlangs) : '') : '';\n\t\t$substitutionarray['__DATE_DUE_YMD__']    = is_object($object)?(isset($object->date_lim_reglement)? dol_print_date($object->date_lim_reglement, 'day', 0, $outputlangs) : '') : '';\n\t\t$substitutionarray['__AMOUNT__']          = is_object($object)?$object->total_ttc:'';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX__'] = is_object($object)?$object->total_ht:'';\n\t\t$substitutionarray['__AMOUNT_VAT__']      = is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n \t\tif ($onlykey != 2 || $mysoc->useLocalTax(1)) $substitutionarray['__AMOUNT_TAX2__']     = is_object($object)?($object->total_localtax1?$object->total_localtax1:$object->total_localtax1):'';\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(2)) $substitutionarray['__AMOUNT_TAX3__']     = is_object($object)?($object->total_localtax2?$object->total_localtax2:$object->total_localtax2):'';\n\n\t\t/* TODO Add key for multicurrency\n    \t$substitutionarray['__AMOUNT_FORMATED__']          = is_object($object)?price($object->total_ttc, 0, $outputlangs, 0, 0, -1, $conf->currency_code):'';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX_FORMATED__'] = is_object($object)?price($object->total_ht, 0, $outputlangs, 0, 0, -1, $conf->currency_code):'';\n        $substitutionarray['__AMOUNT_VAT_FORMATED__']      = is_object($object)?($object->total_vat?price($object->total_vat, 0, $outputlangs, 0, 0, -1, $conf->currency_code):price($object->total_tva, 0, $outputlangs, 0, 0, -1, $conf->currency_code)):'';\n\t\t*/\n\t\t// For backward compatibility\n\t\tif ($onlykey != 2)\n\t\t{\n\t\t\t$substitutionarray['__TOTAL_TTC__']    = is_object($object)?$object->total_ttc:'';\n\t\t\t$substitutionarray['__TOTAL_HT__']     = is_object($object)?$object->total_ht:'';\n\t\t\t$substitutionarray['__TOTAL_VAT__']    = is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n\t\t}\n\t}\n\n\tif (empty($exclude) || ! in_array('date', $exclude))\n\t{\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t$tmp=dol_getdate(dol_now(), true);\n\t\t$tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp3=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp4=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp5=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__DAY__' => (string) $tmp['mday'],\n\t\t\t'__MONTH__' => (string) $tmp['mon'],\n\t\t\t'__YEAR__' => (string) $tmp['year'],\n\t\t\t'__PREVIOUS_DAY__' => (string) $tmp2['day'],\n\t\t\t'__PREVIOUS_MONTH__' => (string) $tmp3['month'],\n\t\t\t'__PREVIOUS_YEAR__' => (string) ($tmp['year'] - 1),\n\t\t\t'__NEXT_DAY__' => (string) $tmp4['day'],\n\t\t\t'__NEXT_MONTH__' => (string) $tmp5['month'],\n\t\t\t'__NEXT_YEAR__' => (string) ($tmp['year'] + 1),\n\t\t));\n\t}\n\n\tif (empty($exclude) || ! in_array('user', $exclude))\n\t{\n\t\t// Add SIGNATURE into substitutionarray first, so, when we will make the substitution,\n\t\t// this will also replace var found into content of signature\n\t\t$signature = $user->signature;\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__USER_SIGNATURE__' => (string) (($signature && empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN)) ? ($onlykey == 2 ? dol_trunc(dol_string_nohtmltag($signature), 30) : $signature) : '')\n\t\t)\n\t\t\t);\n\t\t// For backward compatibility\n\t\tif ($onlykey != 2)\n\t\t{\n\t\t\t$substitutionarray['__SIGNATURE__'] = (string) (($signature && empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN)) ? ($onlykey == 2 ? dol_trunc(dol_string_nohtmltag($signature), 30) : $signature) : '');\n\t\t}\n\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__USER_ID__' => (string) $user->id,\n\t\t\t'__USER_LOGIN__' => (string) $user->login,\n\t\t\t'__USER_LASTNAME__' => (string) $user->lastname,\n\t\t\t'__USER_FIRSTNAME__' => (string) $user->firstname,\n\t\t\t'__USER_FULLNAME__' => (string) $user->getFullName($outputlangs),\n\t\t\t'__USER_SUPERVISOR_ID__' => (string) ($user->fk_user ? $user->fk_user : '0')\n\t\t\t)\n\t\t);\n\t}\n\tif (! empty($conf->multicompany->enabled))\n\t{\n\t\t$substitutionarray=array_merge($substitutionarray, array('__ENTITY_ID__' => $conf->entity));\n\t}\n\n\treturn $substitutionarray;\n}\n\n/**\n *  Make substitution into a text string, replacing keys with vals from $substitutionarray (oldval=>newval),\n *  and texts like __(TranslationKey|langfile)__ and __[ConstantKey]__ are also replaced.\n *  Example of usage:\n *  $substitutionarray = getCommonSubstitutionArray($langs, 0, null, $thirdparty);\n *  complete_substitutions_array($substitutionarray, $langs, $thirdparty);\n *  $mesg = make_substitutions($mesg, $substitutionarray, $langs);\n *\n *  @param\tstring\t\t$text\t      \t\t\tSource string in which we must do substitution\n *  @param  array\t\t$substitutionarray\t\tArray with key->val to substitute. Example: array('__MYKEY__' => 'MyVal', ...)\n *  @param\tTranslate\t$outputlangs\t\t\tOutput language\n * \t@return string  \t\t    \t\t\t\tOutput string after substitutions\n *  @see\tcomplete_substitutions_array\n */\nfunction make_substitutions($text, $substitutionarray, $outputlangs=null)\n{\n\tglobal $conf, $langs;\n\n\tif (! is_array($substitutionarray)) return 'ErrorBadParameterSubstitutionArrayWhenCalling_make_substitutions';\n\n\tif (empty($outputlangs)) $outputlangs=$langs;\n\n\t// Make substitution for language keys\n\tif (is_object($outputlangs))\n\t{\n\t\twhile (preg_match('/__\\(([^\\)]+)\\)__/', $text, $reg))\n\t\t{\n\t\t\t$msgishtml = 0;\n\t\t\tif (dol_textishtml($text,1)) $msgishtml = 1;\n\n\t\t\t// If key is __(TranslationKey|langfile)__, then force load of langfile.lang\n\t\t\t$tmp=explode('|',$reg[1]);\n\t\t\tif (! empty($tmp[1])) $outputlangs->load($tmp[1]);\n\n\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $msgishtml?dol_htmlentitiesbr($outputlangs->transnoentitiesnoconv($reg[1])):$outputlangs->transnoentitiesnoconv($reg[1]), $text);\n\t\t}\n\t}\n\n\t// Make substitution for constant keys. Must be after the substitution of translation, so if text of translation contains a constant,\n\t// it is also converted.\n\twhile (preg_match('/__\\[([^\\]]+)\\]__/', $text, $reg))\n\t{\n\t\t$msgishtml = 0;\n\t\tif (dol_textishtml($text,1)) $msgishtml = 1;\n\n\t\t$keyfound = $reg[1];\n\t\tif (preg_match('/(_pass|password|secret|_key|key$)/i', $keyfound)) $newval = '*****forbidden*****';\n\t\telse $newval=empty($conf->global->$keyfound)?'':$conf->global->$keyfound;\n\t\t$text = preg_replace('/__\\['.preg_quote($keyfound, '/').'\\]__/', $msgishtml?dol_htmlentitiesbr($newval):$newval, $text);\n\t}\n\n\t// Make substitition for array $substitutionarray\n\tforeach ($substitutionarray as $key => $value)\n\t{\n\t\tif ($key == '__SIGNATURE__' && (! empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) $value='';\t\t// Protection\n\t\tif ($key == '__USER_SIGNATURE__' && (! empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) $value='';\t// Protection\n\n\t\t$text=str_replace(\"$key\",\"$value\",$text);\t// We must keep the \" to work when value is 123.5 for example\n\t}\n\n\treturn $text;\n}\n\n/**\n *  Complete the $substitutionarray with more entries coming from external module that had set the \"substitutions=1\" into module_part array.\n *  In this case, method completesubstitutionarray provided by module is called.\n *\n *  @param  array\t\t$substitutionarray\t\tArray substitution old value => new value value\n *  @param  Translate\t$outputlangs            Output language\n *  @param  Object\t\t$object                 Source object\n *  @param  mixed\t\t$parameters       \t\tAdd more parameters (useful to pass product lines)\n *  @param  string      $callfunc               What is the name of the custom function that will be called? (default: completesubstitutionarray)\n *  @return\tvoid\n *  @see \tmake_substitutions\n */\nfunction complete_substitutions_array(&$substitutionarray, $outputlangs, $object=null, $parameters=null, $callfunc=\"completesubstitutionarray\")\n{\n\tglobal $conf,$user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t// Add a substitution key for each extrafields, using key __EXTRA_XXX__\n\t// TODO Remove this. Already available into the getCommonSubstitutionArray used to build the substitution array.\n\t/*if (is_object($object) && is_array($object->array_options))\n\t{\n\t\tforeach($object->array_options as $key => $val)\n\t\t{\n\t\t\t$keyshort=preg_replace('/^(options|extra)_/','',$key);\n\t\t\t$substitutionarray['__EXTRAFIELD_'.$keyshort.'__']=$val;\n\t\t\t// For backward compatibiliy\n\t\t\t$substitutionarray['%EXTRA_'.$keyshort.'%']=$val;\n\t\t}\n\t}*/\n\n\t// Check if there is external substitution to do, requested by plugins\n\t$dirsubstitutions=array_merge(array(),(array) $conf->modules_parts['substitutions']);\n\n\tforeach($dirsubstitutions as $reldir)\n\t{\n\t\t$dir=dol_buildpath($reldir,0);\n\n\t\t// Check if directory exists\n\t\tif (! dol_is_dir($dir)) continue;\n\n\t\t$substitfiles=dol_dir_list($dir,'files',0,'functions_');\n\t\tforeach($substitfiles as $substitfile)\n\t\t{\n\t\t\tif (preg_match('/functions_(.*)\\.lib\\.php/i',$substitfile['name'],$reg))\n\t\t\t{\n\t\t\t\t$module=$reg[1];\n\n\t\t\t\tdol_syslog(\"Library functions_\".$substitfile['name'].\" found into \".$dir);\n\t\t\t\t// Include the user's functions file\n\t\t\t\trequire_once $dir.$substitfile['name'];\n\t\t\t\t// Call the user's function, and only if it is defined\n\t\t\t\t$function_name=$module.\"_\".$callfunc;\n\t\t\t\tif (function_exists($function_name)) $function_name($substitutionarray,$outputlangs,$object,$parameters);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t$date_start    Start date\n *    @param    int\t$date_end      End date\n *    @param    string\t\t$format        Output format\n *    @param\tTranslate\t$outputlangs   Output language\n *    @return\tvoid\n */\nfunction print_date_range($date_start,$date_end,$format = '',$outputlangs='')\n{\n\tprint get_date_range($date_start,$date_end,$format,$outputlangs);\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t\t\t$date_start    \t\tStart date\n *    @param    int\t\t\t$date_end      \t\tEnd date\n *    @param    string\t\t$format        \t\tOutput format\n *    @param\tTranslate\t$outputlangs   \t\tOutput language\n *    @param\tinteger\t\t$withparenthesis\t1=Add parenthesis, 0=non parenthesis\n *    @return\tstring\t\t\t\t\t\t\tString\n */\nfunction get_date_range($date_start,$date_end,$format = '',$outputlangs='', $withparenthesis=1)\n{\n\tglobal $langs;\n\n\t$out='';\n\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\n\tif ($date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFromTo',dol_print_date($date_start, $format, false, $outputlangs),dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif ($date_start && ! $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFrom',dol_print_date($date_start, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif (! $date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateUntil',dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return firstname and lastname in correct order\n *\n * @param\tstring\t$firstname\t\tFirstname\n * @param\tstring\t$lastname\t\tLastname\n * @param\tint\t\t$nameorder\t\t-1=Auto, 0=Lastname+Firstname, 1=Firstname+Lastname, 2=Firstname\n * @return\tstring\t\t\t\t\tFirstname + lastname or Lastname + firstname\n */\nfunction dolGetFirstLastname($firstname,$lastname,$nameorder=-1)\n{\n\tglobal $conf;\n\n\t$ret='';\n\t// If order not defined, we use the setup\n\tif ($nameorder < 0) $nameorder=$conf->global->MAIN_FIRSTNAME_NAME_POSITION;\n\tif ($nameorder && ((string) $nameorder != '2'))\n\t{\n\t\t$ret.=$firstname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$lastname;\n\t}\n\telse if ($nameorder == 2)\n\t{\n\t   $ret.=$firstname;\n\t}\n\telse\n\t{\n\t\t$ret.=$lastname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$firstname;\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tSet event message in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *  Note: Prefer to use setEventMessages instead.\n *\n *\t@param\tmixed\t$mesgs\t\t\tMessage string or array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessage($mesgs, $style='mesgs')\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\t\tThis is not deprecated, it is used by setEventMessages function\n\tif (! is_array($mesgs))\t\t// If mesgs is a string\n\t{\n\t\tif ($mesgs) $_SESSION['dol_events'][$style][] = $mesgs;\n\t}\n\telse\t\t\t\t\t\t// If mesgs is an array\n\t{\n\t\tforeach($mesgs as $mesg)\n\t\t{\n\t\t\tif ($mesg) $_SESSION['dol_events'][$style][] = $mesg;\n\t\t}\n\t}\n}\n\n/**\n *\tSet event messages in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *\n *\t@param\tstring\t$mesg\t\t\tMessage string\n *\t@param\tarray\t$mesgs\t\t\tMessage array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessages($mesg, $mesgs, $style='mesgs')\n{\n\tif (! in_array((string) $style, array('mesgs','warnings','errors'))) dol_print_error('','Bad parameter style='.$style.' for setEventMessages');\n\tif (empty($mesgs)) setEventMessage($mesg, $style);\n\telse\n\t{\n\t\tif (! empty($mesg) && ! in_array($mesg, $mesgs)) setEventMessage($mesg, $style);\t// Add message string if not already into array\n\t\tsetEventMessage($mesgs, $style);\n\t}\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function, so there is\n *  no need to call it explicitely.\n *\n *  @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n *  @return\tvoid\n *  @see    \t\t\t\t\t\t\t\t\tdol_htmloutput_mesg\n */\nfunction dol_htmloutput_events($disabledoutputofmessages=0)\n{\n\t// Show mesgs\n\tif (isset($_SESSION['dol_events']['mesgs'])) {\n\t\tif (empty($disabledoutputofmessages)) dol_htmloutput_mesg('', $_SESSION['dol_events']['mesgs']);\n\t\tunset($_SESSION['dol_events']['mesgs']);\n\t}\n\n\t// Show errors\n\tif (isset($_SESSION['dol_events']['errors'])) {\n\t\tif (empty($disabledoutputofmessages)) dol_htmloutput_mesg('', $_SESSION['dol_events']['errors'], 'error');\n\t\tunset($_SESSION['dol_events']['errors']);\n\t}\n\n\t// Show warnings\n\tif (isset($_SESSION['dol_events']['warnings'])) {\n\t\tif (empty($disabledoutputofmessages)) dol_htmloutput_mesg('', $_SESSION['dol_events']['warnings'], 'warning');\n\t\tunset($_SESSION['dol_events']['warnings']);\n\t}\n}\n\n/**\n *\tGet formated messages to output (Used to show messages on html output).\n *  This include also the translation of the message key.\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string\t\t$style          Style of message output ('ok' or 'error')\n *  @param  int\t\t\t$keepembedded   Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tstring\t\t\t\t\t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction get_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tglobal $conf, $langs;\n\n\t$ret=0; $return='';\n\t$out='';\n\t$divstart=$divend='';\n\n\t// If inline message with no format, we add it.\n\tif ((empty($conf->use_javascript_ajax) || ! empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) || $keepembedded) && ! preg_match('/<div class=\".*\">/i',$out))\n\t{\n\t\t$divstart='<div class=\"'.$style.' clearboth\">';\n\t\t$divend='</div>';\n\t}\n\n\tif ((is_array($mesgarray) && count($mesgarray)) || $mesgstring)\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$out.=$divstart;\n\t\tif (is_array($mesgarray) && count($mesgarray))\n\t\t{\n\t\t\tforeach($mesgarray as $message)\n\t\t\t{\n\t\t\t\t$ret++;\n\t\t\t\t$out.= $langs->trans($message);\n\t\t\t\tif ($ret < count($mesgarray)) $out.= \"<br>\\n\";\n\t\t\t}\n\t\t}\n\t\tif ($mesgstring)\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$ret++;\n\t\t\t$out.= $langs->trans($mesgstring);\n\t\t}\n\t\t$out.=$divend;\n\t}\n\n\tif ($out)\n\t{\n\t\tif (! empty($conf->use_javascript_ajax) && empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && empty($keepembedded))\n\t\t{\n\t\t\t$return = '<script type=\"text/javascript\">\n\t\t\t\t\t$(document).ready(function() {\n\t\t\t\t\t\tvar block = '.(! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI)?\"true\":\"false\").'\n\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t$.dolEventValid(\"\",\"'.dol_escape_js($out).'\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* jnotify(message, preset of message type, keepmessage) */\n\t\t\t\t\t\t\t$.jnotify(\"'.dol_escape_js($out).'\",\n\t\t\t\t\t\t\t\"'.($style==\"ok\" ? 3000 : $style).'\",\n\t\t\t\t\t\t\t'.($style==\"ok\" ? \"false\" : \"true\").',\n\t\t\t\t\t\t\t{ remove: function (){} } );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t</script>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$return = $out;\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n *  Get formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring         Error message\n *  @param  array\t$mesgarray          Error messages array\n *  @param  int\t\t$keepembedded       Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return string                \t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction get_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\treturn get_htmloutput_mesg($mesgstring, $mesgarray,'error',$keepembedded);\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string      $style          Which style to use ('ok', 'warning', 'error')\n *  @param  int         $keepembedded   Set to 1 if message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction dol_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tif (empty($mesgstring) && (! is_array($mesgarray) || count($mesgarray) == 0)) return;\n\n\t$iserror=0;\n\t$iswarning=0;\n\tif (is_array($mesgarray))\n\t{\n\t\tforeach($mesgarray as $val)\n\t\t{\n\t\t\tif ($val && preg_match('/class=\"error\"/i',$val)) { $iserror++; break; }\n\t\t\tif ($val && preg_match('/class=\"warning\"/i',$val)) { $iswarning++; break; }\n\t\t}\n\t}\n\telse if ($mesgstring && preg_match('/class=\"error\"/i',$mesgstring)) $iserror++;\n\telse if ($mesgstring && preg_match('/class=\"warning\"/i',$mesgstring)) $iswarning++;\n\tif ($style=='error') $iserror++;\n\tif ($style=='warning') $iswarning++;\n\n\tif ($iserror || $iswarning)\n\t{\n\t\t// Remove div from texts\n\t\t$mesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$mesgstring);\n\t\t$mesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$mesgstring);\n\t\t$mesgstring=preg_replace('/<\\/div>/','',$mesgstring);\n\t\t// Remove div from texts array\n\t\tif (is_array($mesgarray))\n\t\t{\n\t\t\t$newmesgarray=array();\n\t\t\tforeach($mesgarray as $val)\n\t\t\t{\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$val);\n\t\t\t\t$tmpmesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$tmpmesgstring);\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div>/','',$tmpmesgstring);\n\t\t\t\t$newmesgarray[]=$tmpmesgstring;\n\t\t\t}\n\t\t\t$mesgarray=$newmesgarray;\n\t\t}\n\t\tprint get_htmloutput_mesg($mesgstring,$mesgarray,($iserror?'error':'warning'),$keepembedded);\n\t}\n\telse print get_htmloutput_mesg($mesgstring,$mesgarray,'ok',$keepembedded);\n}\n\n/**\n *  Print formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring          Error message\n *  @param  array\t$mesgarray           Error messages array\n *  @param  int\t\t$keepembedded        Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction dol_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\tdol_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n * \tAdvanced sort array by second index function, which produces ascending (default)\n *  or descending output and uses optionally natural case insensitive sorting (which\n *  can be optionally case sensitive as well).\n *\n *  @param      array\t\t$array      \t\tArray to sort (array of array('key','otherkey1','otherkey2'...))\n *  @param      string\t\t$index\t\t\t\tKey in array to use for sorting criteria\n *  @param      int\t\t\t$order\t\t\t\tSort order ('asc' or 'desc')\n *  @param      int\t\t\t$natsort\t\t\t1=use \"natural\" sort (natsort), 0=use \"standard\" sort (asort)\n *  @param      int\t\t\t$case_sensitive\t\t1=sort is case sensitive, 0=not case sensitive\n *  @param\t\tint\t\t\t$keepindex\t\t\tIf 0 and index key of array to sort is a numeric, than index will be rewrote. If 1 or index key is not numeric, key for index is kept after sorting.\n *  @return     array\t\t\t\t\t\t\tSorted array\n */\nfunction dol_sort_array(&$array, $index, $order='asc', $natsort=0, $case_sensitive=0, $keepindex=0)\n{\n\t// Clean parameters\n\t$order=strtolower($order);\n\n\t$sizearray=count($array);\n\tif (is_array($array) && $sizearray>0)\n\t{\n\t\t$temp = array();\n\t\tforeach(array_keys($array) as $key) $temp[$key]=$array[$key][$index];\n\n\t\tif (!$natsort) ($order=='asc') ? asort($temp) : arsort($temp);\n\t\telse\n\t\t{\n\t\t\t($case_sensitive) ? natsort($temp) : natcasesort($temp);\n\t\t\tif($order!='asc') $temp=array_reverse($temp,TRUE);\n\t\t}\n\n\t\t$sorted = array();\n\n\t\tforeach(array_keys($temp) as $key)\n\t\t{\n\t\t\t(is_numeric($key) && empty($keepindex)) ? $sorted[]=$array[$key] : $sorted[$key]=$array[$key];\n\t\t}\n\n\t\treturn $sorted;\n\t}\n\treturn $array;\n}\n\n\n/**\n *      Check if a string is in UTF8\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is UTF8 or ISO compatible with UTF8, False if not (ISO with special char or Binary)\n */\nfunction utf8_check($str)\n{\n\t// We must use here a binary strlen function (so not dol_strlen)\n\t$strLength = dol_strlen($str);\n\tfor ($i=0; $i<$strLength; $i++)\n\t{\n\t\tif (ord($str[$i]) < 0x80) continue; // 0bbbbbbb\n\t\telseif ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; // 110bbbbb\n\t\telseif ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; // 1110bbbb\n\t\telseif ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; // 11110bbb\n\t\telseif ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; // 111110bb\n\t\telseif ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; // 1111110b\n\t\telse return false; // Does not match any model\n\t\tfor ($j=0; $j<$n; $j++) { // n bytes matching 10bbbbbb follow ?\n\t\t\tif ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n/**\n *      Return a string encoded into OS filesystem encoding. This function is used to define\n * \t    value to pass to filesystem PHP functions.\n *\n *      @param\tstring\t$str        String to encode (UTF-8)\n * \t\t@return\tstring\t\t\t\tEncoded string (UTF-8, ISO-8859-1)\n */\nfunction dol_osencode($str)\n{\n\tglobal $conf;\n\n\t$tmp=ini_get(\"unicode.filesystem_encoding\");\t\t\t\t\t\t// Disponible avec PHP 6.0\n\tif (empty($tmp) && ! empty($_SERVER[\"WINDIR\"])) $tmp='iso-8859-1';\t// By default for windows\n\tif (empty($tmp)) $tmp='utf-8';\t\t\t\t\t\t\t\t\t\t// By default for other\n\tif (! empty($conf->global->MAIN_FILESYSTEM_ENCODING)) $tmp=$conf->global->MAIN_FILESYSTEM_ENCODING;\n\n\tif ($tmp == 'iso-8859-1') return utf8_decode($str);\n\treturn $str;\n}\n\n\n/**\n *      Return an id or code from a code or id.\n *      Store also Code-Id into a cache to speed up next request on same key.\n *\n * \t\t@param\tDoliDB\t$db\t\t\t\tDatabase handler\n * \t\t@param\tstring\t$key\t\t\tCode or Id to get Id or Code\n * \t\t@param\tstring\t$tablename\t\tTable name without prefix\n * \t\t@param\tstring\t$fieldkey\t\tField to search the key into\n * \t\t@param\tstring\t$fieldid\t\tField to get\n *      @param  int\t\t$entityfilter\tFilter by entity\n *      @return int\t\t\t\t\t\t<0 if KO, Id of code if OK\n *      @see $langs->getLabelFromKey\n */\nfunction dol_getIdFromCode($db, $key, $tablename, $fieldkey='code', $fieldid='id', $entityfilter=0)\n{\n\tglobal $cache_codes;\n\n\t// If key empty\n\tif ($key == '') return '';\n\n\t// Check in cache\n\tif (isset($cache_codes[$tablename][$key]))\t// Can be defined to 0 or ''\n\t{\n\t\treturn $cache_codes[$tablename][$key];   // Found in cache\n\t}\n\n\t$sql = \"SELECT \".$fieldid.\" as valuetoget\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.$tablename;\n\t$sql.= \" WHERE \".$fieldkey.\" = '\".$db->escape($key).\"'\";\n\tif (! empty($entityfilter))\n\t\t$sql.= \" AND entity IN (\" . getEntity($tablename) . \")\";\n\n\tdol_syslog('dol_getIdFromCode', LOG_DEBUG);\n\t$resql = $db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) $cache_codes[$tablename][$key]=$obj->valuetoget;\n\t\telse $cache_codes[$tablename][$key]='';\n\t\t$db->free($resql);\n\t\treturn $cache_codes[$tablename][$key];\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\n\n/**\n * Verify if condition in string is ok or not\n *\n * @param \tstring\t\t$strRights\t\tString with condition to check\n * @return \tboolean\t\t\t\t\t\tTrue or False. Return true if strRights is ''\n */\nfunction verifCond($strRights)\n{\n\tglobal $user,$conf,$langs;\n\tglobal $leftmenu;\n\tglobal $rights;    // To export to dol_eval function\n\n\t//print $strRights.\"<br>\\n\";\n\t$rights = true;\n\tif ($strRights != '')\n\t{\n\t\t//$tab_rights = explode('&&', $strRights);\n\t\t//$i = 0;\n\t\t//while (($i < count($tab_rights)) && ($rights == true)) {\n\t\t$str = 'if(!(' . $strRights . ')) { $rights = false; }';\n\t\tdol_eval($str);\n\t\t//\t$i++;\n\t\t//}\n\t}\n\treturn $rights;\n}\n\n/**\n * Replace eval function to add more security.\n * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n *\n * @param \tstring\t$s\t\t\t\tString to evaluate\n * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n * @param   int     $hideerrors     1=Hide errors\n * @return\tmixed\t\t\t\t\tNothing or return of eval\n */\nfunction dol_eval($s, $returnvalue=0, $hideerrors=1)\n{\n\t// Only global variables can be changed by eval function and returned to caller\n\tglobal $db, $langs, $user, $conf;\n\tglobal $mainmenu, $leftmenu;\n\tglobal $rights;\n\tglobal $object;\n\tglobal $mysoc;\n\n\tglobal $obj;       // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n\tglobal $soc;       // For backward compatibility\n\n\t//print $s.\"<br>\\n\";\n\tif ($returnvalue)\n\t{\n\t\tif ($hideerrors) return @eval('return '.$s.';');\n\t\telse return eval('return '.$s.';');\n\t}\n\telse\n\t{\n\t\tif ($hideerrors) @eval($s);\n\t\telse eval($s);\n\t}\n}\n\n/**\n * Return if var element is ok\n *\n * @param   string      $element    Variable to check\n * @return  boolean                 Return true of variable is not empty\n */\nfunction dol_validElement($element)\n{\n\treturn (trim($element) != '');\n}\n\n/**\n * \tReturn img flag of country for a language code or country code\n *\n * \t@param\tstring\t$codelang\tLanguage code (en_IN, fr_CA...) or Country code (IN, FR)\n *  @param\tstring\t$moreatt\t\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n * \t@return\tstring\t\t\t\tHTML img string with flag.\n */\nfunction picto_from_langcode($codelang, $moreatt = '')\n{\n\tglobal $langs;\n\n\tif (empty($codelang)) return '';\n\n\tif (empty($codelang)) return '';\n\n\tif ($codelang == 'auto')\n\t{\n\t\treturn img_picto_common($langs->trans('AutoDetectLang'), 'flags/int.png', $moreatt);\n\t}\n\n\t$langtocountryflag = array(\n\t\t'ar_AR' => '',\n\t\t'ca_ES' => 'catalonia',\n\t\t'da_DA' => 'dk',\n\t\t'fr_CA' => 'mq',\n\t\t'sv_SV' => 'se'\n\t);\n\n\tif (isset($langtocountryflag[$codelang])) $flagImage = $langtocountryflag[$codelang];\n\telse\n\t{\n\t\t$tmparray = explode('_', $codelang);\n\t\t$flagImage = empty($tmparray[1]) ? $tmparray[0] : $tmparray[1];\n\t}\n\n\treturn img_picto_common($codelang, 'flags/'.strtolower($flagImage).'.png', $moreatt);\n}\n\n/**\n *  Complete or removed entries into a head array (used to build tabs).\n *  For example, with value added by external modules. Such values are declared into $conf->modules_parts['tab'].\n *  Or by change using hook completeTabsHead\n *\n *  @param\tConf\t\t\t$conf           Object conf\n *  @param  Translate\t\t$langs          Object langs\n *  @param  object|null\t\t$object         Object object\n *  @param  array\t\t\t$head          \tObject head\n *  @param  int\t\t\t\t$h\t\t\t\tNew position to fill\n *  @param  string\t\t\t$type           Value for object where objectvalue can be\n *                              \t\t\t'thirdparty'       to add a tab in third party view\n *\t\t                        \t      \t'intervention'     to add a tab in intervention view\n *     \t\t                    \t     \t'supplier_order'   to add a tab in supplier order view\n *          \t\t            \t        'supplier_invoice' to add a tab in supplier invoice view\n *                  \t\t    \t        'invoice'          to add a tab in customer invoice view\n *                          \t\t\t    'order'            to add a tab in customer order view\n *                          \t\t\t\t'contract'\t\t   to add a tabl in contract view\n *                      \t\t\t        'product'          to add a tab in product view\n *                              \t\t\t'propal'           to add a tab in propal view\n *                              \t\t\t'user'             to add a tab in user view\n *                              \t\t\t'group'            to add a tab in group view\n * \t\t        \t               \t     \t'member'           to add a tab in fundation member view\n *      \t\t                        \t'categories_x'\t   to add a tab in category view ('x': type of category (0=product, 1=supplier, 2=customer, 3=member)\n *      \t\t\t\t\t\t\t\t\t'ecm'\t\t\t   to add a tab for another ecm view\n *                                          'stock'            to add a tab for warehouse view\n *  @param  string\t\t$mode  \t        \t'add' to complete head, 'remove' to remove entries\n *\t@return\tvoid\n */\nfunction complete_head_from_modules($conf,$langs,$object,&$head,&$h,$type,$mode='add')\n{\n\tglobal $hookmanager;\n\n\tif (isset($conf->modules_parts['tabs'][$type]) && is_array($conf->modules_parts['tabs'][$type]))\n\t{\n\t\tforeach ($conf->modules_parts['tabs'][$type] as $value)\n\t\t{\n\t\t\t$values=explode(':',$value);\n\n\t\t\tif ($mode == 'add' && ! preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif (count($values) == 6)       // new declaration with permissions:  $value='objecttype:+tabname1:Title1:langfile@mymodule:$user->rights->mymodule->read:/mymodule/mynewtab1.php?id=__ID__'\n\t\t\t\t{\n\t\t\t\t\tif ($values[0] != $type) continue;\n\n\t\t\t\t\tif (verifCond($values[4]))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[5]), 1);\n\t\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t\t$h++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (count($values) == 5)       // deprecated\n\t\t\t\t{\n\t\t\t\t\tdol_syslog('Passing 5\u00a0values in tabs module_parts is deprecated. Please update to 6 with permissions.', LOG_WARNING);\n\n\t\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t{\n\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t}\n\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[4]), 1);\n\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t$h++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($mode == 'remove' && preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t$tabname=str_replace('-','',$values[1]);\n\t\t\t\tforeach($head as $key => $val)\n\t\t\t\t{\n\t\t\t\t\t$condition = (! empty($values[3]) ? verifCond($values[3]) : 1);\n\t\t\t\t\tif ($head[$key][2]==$tabname && $condition)\n\t\t\t\t\t{\n\t\t\t\t\t\tunset($head[$key]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// No need to make a return $head. Var is modified as a reference\n\tif (! empty($hookmanager))\n\t{\n\t\t$parameters=array('object' => $object, 'mode' => $mode, 'head'=>$head);\n\t\t$reshook=$hookmanager->executeHooks('completeTabsHead',$parameters);\n\t\tif ($reshook > 0)\n\t\t{\n\t\t\t$head = $hookmanager->resArray;\n\t\t}\n\t}\n}\n\n/**\n * Print common footer :\n * \t\tconf->global->MAIN_HTML_FOOTER\n *      js for switch of menu hider\n * \t\tjs for conf->global->MAIN_GOOGLE_AN_ID\n * \t\tjs for conf->global->MAIN_SHOW_TUNING_INFO or $_SERVER[\"MAIN_SHOW_TUNING_INFO\"]\n * \t\tjs for conf->logbuffer\n *\n * @param\tstring\t$zone\t'private' (for private pages) or 'public' (for public pages)\n * @return\tvoid\n */\nfunction printCommonFooter($zone='private')\n{\n\tglobal $conf, $hookmanager;\n\tglobal $micro_start_time;\n\n\tif ($zone == 'private') print \"\\n\".'<!-- Common footer for private page -->'.\"\\n\";\n\telse print \"\\n\".'<!-- Common footer for public page -->'.\"\\n\";\n\n\t$parameters=array();\n\t$reshook=$hookmanager->executeHooks('printCommonFooter',$parameters);    // Note that $action and $object may have been modified by some hooks\n\tif (empty($reshook))\n\t{\n\t\tif (! empty($conf->global->MAIN_HTML_FOOTER)) print $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\n\t\tprint \"\\n\";\n\t\tif (! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\tprint '<script type=\"text/javascript\" language=\"javascript\">'.\"\\n\";\n\n\t\t\tif ($zone == 'private' && empty($conf->dol_use_jmobile))\n\t\t\t{\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '/* JS CODE TO ENABLE to enable handler to switch left menu page (menuhider) */'.\"\\n\";\n\t\t\t\tprint 'jQuery(\".menuhider\").click(function() {';\n\t\t\t\tprint '  console.log(\"We click on .menuhider\");'.\"\\n\";\n\t\t\t\t//print \"  $('.side-nav').animate({width:'toggle'},200);\\n\";     // OK with eldy theme but not with md\n\t\t\t\tprint \"  $('.side-nav').toggle()\\n\";\n\t\t\t\tprint \"  $('.login_block').toggle()\\n\";\n\t\t\t\tprint '});'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Google Analytics (need Google module)\n\t\t\tif (! empty($conf->google->enabled) && ! empty($conf->global->MAIN_GOOGLE_AN_ID))\n\t\t\t{\n\t\t\t\tif (($conf->dol_use_jmobile != 4))\n\t\t\t\t{\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint \"/* JS CODE TO ENABLE for google analtics tag */\\n\";\n\t\t\t\t\tprint '  var _gaq = _gaq || [];'.\"\\n\";\n\t\t\t\t\tprint '  _gaq.push([\\'_setAccount\\', \\''.$conf->global->MAIN_GOOGLE_AN_ID.'\\']);'.\"\\n\";\n\t\t\t\t\tprint '  _gaq.push([\\'_trackPageview\\']);'.\"\\n\";\n\t\t\t\t\tprint ''.\"\\n\";\n\t\t\t\t\tprint '  (function() {'.\"\\n\";\n\t\t\t\t\tprint '    var ga = document.createElement(\\'script\\'); ga.type = \\'text/javascript\\'; ga.async = true;'.\"\\n\";\n\t\t\t\t\tprint '    ga.src = (\\'https:\\' == document.location.protocol ? \\'https://ssl\\' : \\'http://www\\') + \\'.google-analytics.com/ga.js\\';'.\"\\n\";\n\t\t\t\t\tprint '    var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(ga, s);'.\"\\n\";\n\t\t\t\t\tprint '  })();'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// End of tuning\n\t\t\tif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']) || ! empty($conf->global->MAIN_SHOW_TUNING_INFO))\n\t\t\t{\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint \"/* JS CODE TO ENABLE to add memory info */\\n\";\n\t\t\t\tprint 'window.console && console.log(\"';\n\t\t\t\tif (! empty($conf->global->MEMCACHED_SERVER)) print 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n\t\t\t\tprint 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED)?$conf->global->MAIN_OPTIMIZE_SPEED:'off');\n\t\t\t\tif (! empty($micro_start_time))   // Works only if MAIN_SHOW_TUNING_INFO is defined at $_SERVER level. Not in global variable.\n\t\t\t\t{\n\t\t\t\t\t$micro_end_time = microtime(true);\n\t\t\t\t\tprint ' - Build time: '.ceil(1000*($micro_end_time-$micro_start_time)).' ms';\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"memory_get_usage\"))\n\t\t\t\t{\n\t\t\t\t\tprint ' - Mem: '.memory_get_usage();\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"xdebug_memory_usage\"))\n\t\t\t\t{\n\t\t\t\t\tprint ' - XDebug time: '.ceil(1000*xdebug_time_index()).' ms';\n\t\t\t\t\tprint ' - XDebug mem: '.xdebug_memory_usage();\n\t\t\t\t\tprint ' - XDebug mem peak: '.xdebug_peak_memory_usage();\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"zend_loader_file_encoded\"))\n\t\t\t\t{\n\t\t\t\t\tprint ' - Zend encoded file: '.(zend_loader_file_encoded()?'yes':'no');\n\t\t\t\t}\n\t\t\t\tprint '\");'.\"\\n\";\n\t\t\t}\n\n\t\t\tprint \"\\n\".'</script>'.\"\\n\";\n\t\t}\n\n\t\t// Add Xdebug coverage of code\n\t\tif (defined('XDEBUGCOVERAGE'))\n\t\t{\n\t\t\tprint_r(xdebug_get_code_coverage());\n\t\t}\n\n\t\t// If there is some logs in buffer to show\n\t\tif (count($conf->logbuffer))\n\t\t{\n\t\t\tprint \"\\n\";\n\t\t\tprint \"<!-- Start of log output\\n\";\n\t\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\t\tforeach($conf->logbuffer as $logline)\n\t\t\t{\n\t\t\t\tprint $logline.\"<br>\\n\";\n\t\t\t}\n\t\t\t//print '</div>'.\"\\n\";\n\t\t\tprint \"End of log output -->\\n\";\n\t\t}\n\t}\n}\n\n/**\n * Split a string with 2 keys into key array.\n * For example: \"A=1;B=2;C=2\" is exploded into array('A'=>1,'B'=>2,'C'=>3)\n *\n * @param \tstring\t$string\t\tString to explode\n * @param \tstring\t$delimiter\tDelimiter between each couple of data\n * @param \tstring\t$kv\t\t\tDelimiter between key and value\n * @return\tarray\t\t\t\tArray of data exploded\n */\nfunction dolExplodeIntoArray($string, $delimiter = ';', $kv = '=')\n{\n\tif ($a = explode($delimiter, $string))\n\t{\n\t\t$ka = array();\n\t\tforeach ($a as $s) { // each part\n\t\t\tif ($s) {\n\t\t\t\tif ($pos = strpos($s, $kv)) { // key/value delimiter\n\t\t\t\t\t$ka[trim(substr($s, 0, $pos))] = trim(substr($s, $pos + strlen($kv)));\n\t\t\t\t} else { // key delimiter not found\n\t\t\t\t\t$ka[] = trim($s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ka;\n\t}\n\treturn array();\n}\n\n\n/**\n * Set focus onto field with selector (similar behaviour of 'autofocus' HTML5 tag)\n *\n * @param \tstring\t$selector\tSelector ('#id' or 'input[name=\"ref\"]') to use to find the HTML input field that must get the autofocus. You must use a CSS selector, so unique id preceding with the '#' char.\n * @return\tstring\t\t\t\tHTML code to set focus\n */\nfunction dol_set_focus($selector)\n{\n\tprint \"\\n\".'<!-- Set focus onto a specific field -->'.\"\\n\";\n\tprint '<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function() { jQuery(\"'.dol_escape_js($selector).'\").focus(); });</script>'.\"\\n\";\n}\n\n\n/**\n * Return getmypid() or random PID when function is disabled\n * Some web hosts disable this php function for security reasons\n * and sometimes we can't redeclare function\n *\n * @return\tint\n */\nfunction dol_getmypid()\n{\n\tif (! function_exists('getmypid')) {\n\t\treturn mt_rand(1,32768);\n\t} else {\n\t\treturn getmypid();\n\t}\n}\n\n\n/**\n * Generate natural SQL search string for a criteria (this criteria can be tested on one or several fields)\n *\n * @param \tstring|string[]\t$fields \tString or array of strings, filled with the name of all fields in the SQL query we must check (combined with a OR). Example: array(\"p.field1\",\"p.field2\")\n * @param \tstring \t\t\t$value \t\tThe value to look for.\n *                          \t\t    If param $mode is 0, can contains several keywords separated with a space or |\n *                                         like \"keyword1 keyword2\" = We want record field like keyword1 AND field like keyword2\n *                                         or like \"keyword1|keyword2\" = We want record field like keyword1 OR field like keyword2\n *                             \t\t\tIf param $mode is 1, can contains an operator <, > or = like \"<10\" or \">=100.5 < 1000\"\n *                             \t\t\tIf param $mode is 2, can contains a list of int id separated by comma like \"1,3,4\"\n *                             \t\t\tIf param $mode is 3, can contains a list of string separated by comma like \"a,b,c\"\n * @param\tinteger\t\t\t$mode\t\t0=value is list of keyword strings, 1=value is a numeric test (Example \">5.5 <10\"), 2=value is a list of id separated with comma (Example '1,3,4')\n * @param\tinteger\t\t\t$nofirstand\t1=Do not output the first 'AND'\n * @return \tstring \t\t\t$res \t\tThe statement to append to the SQL query\n */\nfunction natural_search($fields, $value, $mode=0, $nofirstand=0)\n{\n\tglobal $db,$langs;\n\n\t$value=trim($value);\n\n\tif ($mode == 0)\n\t{\n\t\t$value=preg_replace('/\\*/','%',$value);\t// Replace * with %\n\t}\n\tif ($mode == 1)\n\t{\n\t\t$value=preg_replace('/([<>=]+)\\s+([0-9'.preg_quote($langs->trans(\"DecimalSeparator\"),'/').'\\-])/','\\1\\2',$value);\t// Clean string '< 10' into '<10' so we can the explode on space to get all tests to do\n\t}\n\n\t$value = preg_replace('/\\s*\\|\\s*/','|', $value);\n\n\t$crits = explode(' ', $value);\n\t$res = '';\n\tif (! is_array($fields)) $fields = array($fields);\n\n\t$nboffields = count($fields);\n\t$end2 = count($crits);\n\t$j = 0;\n\tforeach ($crits as $crit)\n\t{\n\t\t$i = 0; $i2 = 0;\n\t\t$newres = '';\n\t\tforeach ($fields as $field)\n\t\t{\n\t\t\tif ($mode == 1)\n\t\t\t{\n\t\t\t\t$operator='=';\n\t\t\t\t$newcrit = preg_replace('/([<>=]+)/','',trim($crit));\n\n\t\t\t\tpreg_match('/([<>=]+)/',trim($crit), $reg);\n\t\t\t\tif ($reg[1])\n\t\t\t\t{\n\t\t\t\t\t$operator = $reg[1];\n\t\t\t\t}\n\t\t\t\tif ($newcrit != '')\n\t\t\t\t{\n\t\t\t\t\t$numnewcrit = price2num($newcrit);\n\t\t\t\t\tif (is_numeric($numnewcrit))\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . ' '.$operator.' '.$numnewcrit;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . '1 = 2';\t// force false\n\t\t\t\t\t}\n\t\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($mode == 2)\n\t\t\t{\n\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . \" IN (\" . $db->escape(trim($crit)) . \")\";\n\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t}\n\t\t\telse if ($mode == 3)\n\t\t\t{\n\t\t\t\t$tmparray=explode(',',trim($crit));\n\t\t\t\tif (count($tmparray))\n\t\t\t\t{\n\t\t\t\t\t$listofcodes='';\n\t\t\t\t\tforeach($tmparray as $val)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($val)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$listofcodes.=($listofcodes?',':'');\n\t\t\t\t\t\t\t$listofcodes.=\"'\".$db->escape(trim($val)).\"'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . \" IN (\" . $listofcodes . \")\";\n\t\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t\t}\n\t\t\t}\n\t\t\telse    // $mode=0\n\t\t\t{\n\t\t\t\t$textcrit = '';\n\t\t\t\t$tmpcrits = explode('|',$crit);\n\t\t\t\t$i3 = 0;\n\t\t\t\tforeach($tmpcrits as $tmpcrit)\n\t\t\t\t{\n\t\t\t\t\tif(empty($tmpcrit)) continue;\n\n\t\t\t\t\t$newres .= (($i2 > 0 || $i3 > 0) ? ' OR ' : '');\n\n\t\t\t\t\tif (preg_match('/\\.(id|rowid)$/', $field))\t// Special case for rowid that is sometimes a ref so used as a search field\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= $field . \" = \" . (is_numeric(trim($tmpcrit))?trim($tmpcrit):'0');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= $field . \" LIKE '\";\n\n\t\t\t\t\t\t$tmpcrit=trim($tmpcrit);\n\t\t\t\t\t\t$tmpcrit2=$tmpcrit;\n\t\t\t\t\t\t$tmpbefore='%'; $tmpafter='%';\n\t\t\t\t\t\tif (preg_match('/^[\\^\\$]/', $tmpcrit))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$tmpbefore='';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/^[\\^\\$]/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (preg_match('/[\\^\\$]$/', $tmpcrit))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$tmpafter='';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/[\\^\\$]$/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$newres .= $tmpbefore;\n\t\t\t\t\t\t$newres .= $db->escape($tmpcrit2);\n\t\t\t\t\t\t$newres .= $tmpafter;\n\t\t\t\t\t\t$newres .= \"'\";\n\t\t\t\t\t\tif ($tmpcrit2 == '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$newres .= ' OR ' . $field . \" IS NULL\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$i3++;\n\t\t\t\t}\n\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tif ($newres) $res = $res . ($res ? ' AND ' : '') . ($i2 > 1 ? '(' : '') .$newres . ($i2 > 1 ? ')' : '');\n\t\t$j++;\n\t}\n\t$res = ($nofirstand?\"\":\" AND \").\"(\" . $res . \")\";\n\t//print 'xx'.$res.'yy';\n\treturn $res;\n}\n\n/**\n * Return string with full Url\n *\n * @param   Object\t$object\t\tObject\n * @return\tstring\t\t\t\tUrl string\n */\nfunction showDirectDownloadLink($object)\n{\n\tglobal $conf, $langs;\n\n\t$out='';\n\t$url = $object->getLastMainDocLink($object->element);\n\n\tif ($url)\n\t{\n\t\t$out.= img_picto('','object_globe.png').' '.$langs->trans(\"DirectDownloadLink\").'<br>';\n\t\t$out.= '<input type=\"text\" id=\"directdownloadlink\" class=\"quatrevingtpercent\" value=\"'.$url.'\">';\n\t\t$out.= ajax_autoselect(\"directdownloadlink\", 0);\n\t}\n\treturn $out;\n}\n\n/**\n * Return the filename of file to get the thumbs\n *\n * @param   string  $file           Original filename (full or relative path)\n * @param   string  $extName        Extension to differenciate thumb file name ('', '_small', '_mini')\n * @param   string  $extImgTarget   Force image extension for thumbs. Use '' to keep same extension than original image (default).\n * @return  string                  New file name (full or relative path, including the thumbs/)\n */\nfunction getImageFileNameForSize($file, $extName, $extImgTarget='')\n{\n\t$dirName = dirname($file);\n\tif ($dirName == '.') $dirName='';\n\n\t$fileName = preg_replace('/(\\.gif|\\.jpeg|\\.jpg|\\.png|\\.bmp)$/i','',$file);\t// We remove extension, whatever is its case\n\t$fileName = basename($fileName);\n\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpg$/i',$file)?'.jpg':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpeg$/i',$file)?'.jpeg':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.gif$/i',$file)?'.gif':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.png$/i',$file)?'.png':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.bmp$/i',$file)?'.bmp':'');\n\n\tif (! $extImgTarget) return $file;\n\n\t$subdir='';\n\tif ($extName) $subdir = 'thumbs/';\n\n\treturn ($dirName?$dirName.'/':'').$subdir.$fileName.$extName.$extImgTarget; // New filename for thumb\n}\n\n\n/**\n * Return URL we can use for advanced preview links\n *\n * @param   string    $modulepart     propal, facture, facture_fourn, ...\n * @param   string    $relativepath   Relative path of docs.\n * @param\tint\t\t  $alldata\t\t  Return array with all components (1 is recommended, then use a simple a href link with the class, target and mime attribute added. 'documentpreview' css class is handled by jquery code into main.inc.php)\n * @param\tstring\t  $param\t\t  More param on http links\n * @return  string|array              Output string with href link or array with all components of link\n */\nfunction getAdvancedPreviewUrl($modulepart, $relativepath, $alldata=0, $param='')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->use_javascript_ajax)) return '';\n\n\t$mime_preview = array('bmp', 'jpeg', 'png', 'gif', 'tiff', 'pdf', 'plain', 'css', 'svg+xml');\n\t//$mime_preview[]='vnd.oasis.opendocument.presentation';\n\t//$mime_preview[]='archive';\n\t$num_mime = array_search(dol_mimetype($relativepath, '', 1), $mime_preview);\n\n\tif ($alldata == 1)\n\t{\n\t\tif ($num_mime !== false) return array('target'=>'_blank', 'css'=>'documentpreview', 'url'=>DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath), 'mime'=>dol_mimetype($relativepath), );\n\t\telse return array();\n\t}\n\n\t// old behavior\n\tif ($num_mime !== false) return 'javascript:document_preview(\\''.dol_escape_js(DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param?'&'.$param:'')).'\\', \\''.dol_mimetype($relativepath).'\\', \\''.dol_escape_js($langs->trans('Preview')).'\\')';\n\telse return '';\n}\n\n\n/**\n *\tReturn mime type of a file\n *\n *\t@param\tstring\t$file\t\tFilename we looking for MIME type\n *  @param  string\t$default    Default mime type if extension not found in known list\n * \t@param\tint\t\t$mode    \t0=Return full mime, 1=otherwise short mime string, 2=image for mime type, 3=source language, 4=css of font fa\n *\t@return string \t\t    \tReturn a mime type family (text/xxx, application/xxx, image/xxx, audio, video, archive)\n *  @see    image_format_supported (images.lib.php)\n */\nfunction dol_mimetype($file, $default='application/octet-stream', $mode=0)\n{\n\t$mime=$default;\n\t$imgmime='other.png';\n\t$famime='file-o';\n\t$srclang='';\n\n\t$tmpfile=preg_replace('/\\.noexe$/','',$file);\n\n\t// Text files\n\tif (preg_match('/\\.txt$/i',$tmpfile))         \t\t\t   { $mime='text/plain';    $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.rtx$/i',$tmpfile))                      { $mime='text/richtext'; $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.csv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/csv';      $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.tsv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/tab-separated-values'; $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.(cf|conf|log)$/i',$tmpfile))            { $mime='text/plain';    $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.ini$/i',$tmpfile))                      { $mime='text/plain';    $imgmime='text.png'; $srclang='ini'; $famime='file-text-o'; }\n\tif (preg_match('/\\.css$/i',$tmpfile))                      { $mime='text/css';      $imgmime='css.png'; $srclang='css'; $famime='file-text-o'; }\n\t// Certificate files\n\tif (preg_match('/\\.(crt|cer|key|pub)$/i',$tmpfile))        { $mime='text/plain';    $imgmime='text.png'; $famime='file-text-o'; }\n\t// HTML/XML\n\tif (preg_match('/\\.(html|htm|shtml)$/i',$tmpfile))         { $mime='text/html';     $imgmime='html.png'; $srclang='html'; $famime='file-text-o'; }\n\tif (preg_match('/\\.(xml|xhtml)$/i',$tmpfile))              { $mime='text/xml';      $imgmime='other.png'; $srclang='xml'; $famime='file-text-o'; }\n\t// Languages\n\tif (preg_match('/\\.bas$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='bas';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(c)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='c';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(cpp)$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='text.png'; $srclang='cpp';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(h)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='h';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(java|jsp)$/i',$tmpfile))               { $mime='text/plain'; $imgmime='text.png'; $srclang='java';  $famime='file-code-o'; }\n\tif (preg_match('/\\.php([0-9]{1})?$/i',$tmpfile))           { $mime='text/plain'; $imgmime='php.png'; $srclang='php';  $famime='file-code-o'; }\n\tif (preg_match('/\\.phtml$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='php.png'; $srclang='php';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(pl|pm)$/i',$tmpfile))                  { $mime='text/plain'; $imgmime='pl.png'; $srclang='perl';  $famime='file-code-o'; }\n\tif (preg_match('/\\.sql$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='sql';  $famime='file-code-o'; }\n\tif (preg_match('/\\.js$/i',$tmpfile))                       { $mime='text/x-javascript'; $imgmime='jscript.png'; $srclang='js';  $famime='file-code-o'; }\n\t// Open office\n\tif (preg_match('/\\.odp$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.presentation'; $imgmime='ooffice.png'; $famime='file-powerpoint-o'; }\n\tif (preg_match('/\\.ods$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.spreadsheet';  $imgmime='ooffice.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.odt$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.text';         $imgmime='ooffice.png'; $famime='file-word-o'; }\n\t// MS Office\n\tif (preg_match('/\\.mdb$/i',$tmpfile))\t\t\t\t\t   { $mime='application/msaccess'; $imgmime='mdb.png'; $famime='file-o'; }\n\tif (preg_match('/\\.doc(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; $famime='file-word-o'; }\n\tif (preg_match('/\\.dot(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; $famime='file-word-o'; }\n\tif (preg_match('/\\.xlt(x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.xla(m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.xls$/i',$tmpfile))\t\t\t           { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.xls(b|m|x)$/i',$tmpfile))\t\t\t   { $mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.pps(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-powerpoint'; $imgmime='ppt.png'; $famime='file-powerpoint-o'; }\n\tif (preg_match('/\\.ppt(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/x-mspowerpoint'; $imgmime='ppt.png'; $famime='file-powerpoint-o'; }\n\t// Other\n\tif (preg_match('/\\.pdf$/i',$tmpfile))                      { $mime='application/pdf'; $imgmime='pdf.png'; $famime='file-pdf-o'; }\n\t// Scripts\n\tif (preg_match('/\\.bat$/i',$tmpfile))                      { $mime='text/x-bat';  $imgmime='script.png'; $srclang='dos'; $famime='file-code-o'; }\n\tif (preg_match('/\\.sh$/i',$tmpfile))                       { $mime='text/x-sh';   $imgmime='script.png'; $srclang='bash'; $famime='file-code-o'; }\n\tif (preg_match('/\\.ksh$/i',$tmpfile))                      { $mime='text/x-ksh';  $imgmime='script.png'; $srclang='bash'; $famime='file-code-o'; }\n\tif (preg_match('/\\.bash$/i',$tmpfile))                     { $mime='text/x-bash'; $imgmime='script.png'; $srclang='bash'; $famime='file-code-o'; }\n\t// Images\n\tif (preg_match('/\\.ico$/i',$tmpfile))                      { $mime='image/x-icon'; $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.(jpg|jpeg)$/i',$tmpfile))\t\t\t   { $mime='image/jpeg';   $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.png$/i',$tmpfile))\t\t\t\t\t   { $mime='image/png';    $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.gif$/i',$tmpfile))\t\t\t\t\t   { $mime='image/gif';    $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.bmp$/i',$tmpfile))\t\t\t\t\t   { $mime='image/bmp';    $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.(tif|tiff)$/i',$tmpfile))\t\t\t   { $mime='image/tiff';   $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.svg$/i',$tmpfile))\t\t\t\t\t   { $mime='image/svg+xml';$imgmime='image.png'; $famime='file-image-o'; }\n\t// Calendar\n\tif (preg_match('/\\.vcs$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.ics$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; $famime='file-text-o'; }\n\t// Other\n\tif (preg_match('/\\.torrent$/i',$tmpfile))\t\t\t\t   { $mime='application/x-bittorrent'; $imgmime='other.png'; $famime='file-o'; }\n\t// Audio\n\tif (preg_match('/\\.(mp3|ogg|au|wav|wma|mid)$/i',$tmpfile)) { $mime='audio'; $imgmime='audio.png'; $famime='file-audio-o'; }\n\t// Video\n\tif (preg_match('/\\.ogv$/i',$tmpfile))                      { $mime='video/ogg';       $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.webm$/i',$tmpfile))                     { $mime='video/webm';      $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.avi$/i',$tmpfile))                      { $mime='video/x-msvideo'; $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.divx$/i',$tmpfile))                     { $mime='video/divx';      $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.xvid$/i',$tmpfile))                     { $mime='video/xvid';      $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.(wmv|mpg|mpeg)$/i',$tmpfile))           { $mime='video';           $imgmime='video.png'; $famime='file-video-o'; }\n\t// Archive\n\tif (preg_match('/\\.(zip|rar|gz|tgz|z|cab|bz2|7z|tar|lzh)$/i',$tmpfile))   { $mime='archive'; $imgmime='archive.png'; $famime='file-archive-o'; }    // application/xxx where zzz is zip, ...\n\t// Exe\n\tif (preg_match('/\\.(exe|com)$/i',$tmpfile))                { $mime='application/octet-stream'; $imgmime='other.png'; $famime='file-o'; }\n\t// Lib\n\tif (preg_match('/\\.(dll|lib|o|so|a)$/i',$tmpfile))         { $mime='library'; $imgmime='library.png'; $famime='file-o'; }\n\t// Err\n\tif (preg_match('/\\.err$/i',$tmpfile))                      { $mime='error'; $imgmime='error.png'; $famime='file-text-o'; }\n\n\t// Return string\n\tif ($mode == 1)\n\t{\n\t\t$tmp=explode('/',$mime);\n\t\treturn (! empty($tmp[1])?$tmp[1]:$tmp[0]);\n\t}\n\tif ($mode == 2)\n\t{\n\t\treturn $imgmime;\n\t}\n\tif ($mode == 3)\n\t{\n\t\treturn $srclang;\n\t}\n\tif ($mode == 4)\n\t{\n\t\treturn $famime;\n\t}\n\treturn $mime;\n}\n\n/**\n * Return value from dictionary\n *\n * @param string\t$tablename\t\tname of dictionary\n * @param string\t$field\t\t\tthe value to return\n * @param int\t\t$id\t\t\t\tid of line\n * @param bool\t\t$checkentity\tadd filter on entity\n * @param string\t$rowidfield\t\tname of the column rowid\n */\nfunction getDictvalue($tablename, $field, $id, $checkentity=false, $rowidfield='rowid')\n{\n\tglobal $dictvalues,$db,$langs;\n\n\tif (!isset($dictvalues[$tablename]))\n\t{\n\t\t$dictvalues[$tablename] = array();\n\t\t$sql = 'SELECT * FROM '.$tablename.' WHERE 1';\n\t\tif ($checkentity) $sql.= ' entity IN (0,'.getEntity('').')';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$dictvalues[$tablename][$obj->{$rowidfield}] = $obj;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tif (!empty($dictvalues[$tablename][$id])) return $dictvalues[$tablename][$id]->{$field}; // Found\n\telse // Not found\n\t{\n\t\tif ($id > 0) return $id;\n\t\treturn '';\n\t}\n}\n\n/**\n *\tReturn true if the color is light\n *\n *  @param\tstring\t$stringcolor\t\tString with hex (FFFFFF) or comma RGB ('255,255,255')\n *  @return\tint\t\t\t\t\t\t\t-1 : Error with argument passed |0 : color is dark | 1 : color is light\n */\nfunction colorIsLight($stringcolor)\n{\n\t$res = -1;\n\tif (!empty($stringcolor))\n\t{\n\t\t$res = 0;\n\t\t$tmp=explode(',', $stringcolor);\n\t\tif (count($tmp) > 1)   // This is a comma RGB ('255','255','255')\n\t\t{\n\t\t\t$r = $tmp[0];\n\t\t\t$g = $tmp[1];\n\t\t\t$b = $tmp[2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$hexr=$stringcolor[0].$stringcolor[1];\n\t\t\t$hexg=$stringcolor[2].$stringcolor[3];\n\t\t\t$hexb=$stringcolor[4].$stringcolor[5];\n\t\t\t$r = hexdec($hexr);\n\t\t\t$g = hexdec($hexg);\n\t\t\t$b = hexdec($hexb);\n\t\t}\n\t\t$bright = (max($r, $g, $b) + min($r, $g, $b)) / 510.0;    // HSL algorithm\n\t\tif ($bright > 0.6) $res = 1;\n\t}\n\treturn $res;\n}\n\n/**\n * Function to test if an entry is enabled or not\n *\n * @param\tstring\t\t$type_user\t\t\t\t\t0=We test for internal user, 1=We test for external user\n * @param\tarray\t\t$menuentry\t\t\t\t\tArray for feature entry to test\n * @param\tarray\t\t$listofmodulesforexternal\tArray with list of modules allowed to external users\n * @return\tint\t\t\t\t\t\t\t\t\t\t0=Hide, 1=Show, 2=Show gray\n */\nfunction isVisibleToUserType($type_user, &$menuentry, &$listofmodulesforexternal)\n{\n\tglobal $conf;\n\n\t//print 'type_user='.$type_user.' module='.$menuentry['module'].' enabled='.$menuentry['enabled'].' perms='.$menuentry['perms'];\n\t//print 'ok='.in_array($menuentry['module'], $listofmodulesforexternal);\n\tif (empty($menuentry['enabled'])) return 0;\t// Entry disabled by condition\n\tif ($type_user && $menuentry['module'])\n\t{\n\t\t$tmploops=explode('|',$menuentry['module']);\n\t\t$found=0;\n\t\tforeach($tmploops as $tmploop)\n\t\t{\n\t\t\tif (in_array($tmploop, $listofmodulesforexternal)) {\n\t\t\t\t$found++; break;\n\t\t\t}\n\t\t}\n\t\tif (! $found) return 0;\t// Entry is for menus all excluded to external users\n\t}\n\tif (! $menuentry['perms'] && $type_user) return 0; \t\t\t\t\t\t\t\t\t\t\t// No permissions and user is external\n\tif (! $menuentry['perms'] && ! empty($conf->global->MAIN_MENU_HIDE_UNAUTHORIZED))\treturn 0;\t// No permissions and option to hide when not allowed, even for internal user, is on\n\tif (! $menuentry['perms']) return 2;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// No permissions and user is external\n\treturn 1;\n}\n"], "fixing_code": ["<?php\n/* Copyright (C) 2004       Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2012  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2011-2015  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Remy Younes             <ryounes@gmail.com>\n * Copyright (C) 2012-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@ltairis.fr>\n * Copyright (C) 2011-2016  Alexandre Spangaro      <aspangaro@zendsi.com>\n * Copyright (C) 2015       Ferran Marcet           <fmarcet@2byte.es>\n * Copyright (C) 2016       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/accountancy/admin/accountmodel.php\n *\t\t\\ingroup    Advanced accountancy\n *\t\t\\brief      Page to administer model of chart of accounts\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT . '/core/class/html.formaccounting.class.php';\n\n$langs->loadLangs(array(\"errors\",\"admin\",\"companies\",\"resource\",\"holiday\",\"compta\",\"accountancy\",\"hrm\"));\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=31;\n$rowid=GETPOST('rowid','alpha');\n$code=GETPOST('code','alpha');\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'aZ09comma');\n$sortorder = GETPOST(\"sortorder\",'aZ09comma');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n$search_country_id = GETPOST('search_country_id','int');\n\n\n// Security check\nif ($user->societe_id > 0) accessforbidden();\nif (! $user->rights->accounting->chartofaccount) accessforbidden();\n\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n\n$tabname[31]= MAIN_DB_PREFIX.\"accounting_system\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[31]= \"Pcg_version\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[31]= \"SELECT s.rowid as rowid, pcg_version, s.label, s.fk_country as country_id, c.code as country_code, c.label as country, s.active FROM \".MAIN_DB_PREFIX.\"accounting_system as s, \".MAIN_DB_PREFIX.\"c_country as c WHERE s.fk_country=c.rowid and c.active=1\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[31]=\"pcg_version ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[31]= \"pcg_version,label,country_id,country\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[31]= \"pcg_version,label,country\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[31]= \"pcg_version,label,fk_country\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[31]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[31]= ! empty($conf->accounting->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[31] = array('pcg_version'=>$langs->trans(\"EnterAnyCode\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[31] = array();\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n\t$search_country_id = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n\t$listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n\t$listfieldinsert=explode(',',$tabfieldinsert[$id]);\n\t$listfieldmodify=explode(',',$tabfieldinsert[$id]);\n\t$listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n\t// Check that all fields are filled\n\t$ok=1;\n\tforeach ($listfield as $f => $value)\n\t{\n\t\tif ($value == 'country_id' && in_array($tablib[$id],array('DictionaryVAT','DictionaryRegion','DictionaryCompanyType','DictionaryHolidayTypes','DictionaryRevenueStamp','DictionaryAccountancyCategory','Pcg_version'))) continue;\t\t// For some pages, country is not mandatory\n\t\tif ($value == 'country' && in_array($tablib[$id],array('DictionaryCanton','DictionaryCompanyType','DictionaryRevenueStamp'))) continue;\t\t// For some pages, country is not mandatory\n\t\tif ($value == 'localtax1' && empty($_POST['localtax1_type'])) continue;\n\t\tif ($value == 'localtax2' && empty($_POST['localtax2_type'])) continue;\n\t\tif ($value == 'color' && empty($_POST['color'])) continue;\n\t\tif ($value == 'formula' && empty($_POST['formula'])) continue;\n\t\tif ((! isset($_POST[$value]) || $_POST[$value]=='')\n\t\t\t&& (! in_array($listfield[$f], array('decalage','module','accountancy_code','accountancy_code_sell','accountancy_code_buy'))  // Fields that are not mandatory\n\t\t\t&& (! ($id == 10 && $listfield[$f] == 'code')) // Code is mandatory fir table 10\n\t\t\t)\n\t\t)\n\t\t{\n\t\t\t$ok=0;\n\t\t\t$fieldnamekey=$listfield[$f];\n\t\t\t// We take translate key of field\n\n\t\t\tif ($fieldnamekey == 'pcg_version')  $fieldnamekey='Pcg_version';\n\t\t\tif ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n\t\t\tif ($fieldnamekey == 'libelle_facture') $fieldnamekey = 'LabelOnDocuments';\n\t\t\tif ($fieldnamekey == 'nbjour')   $fieldnamekey='NbOfDays';\n\t\t\tif ($fieldnamekey == 'decalage') $fieldnamekey='Offset';\n\t\t\tif ($fieldnamekey == 'module')   $fieldnamekey='Module';\n\t\t\tif ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n\t\t\tif ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n\t\t\tif ($fieldnamekey == 'taux') $fieldnamekey = 'Rate';\n\t\t\tif ($fieldnamekey == 'type') $fieldnamekey = 'Type';\n\t\t\tif ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n\t\t\tif ($fieldnamekey == 'unicode') $fieldnamekey = 'Unicode';\n\t\t\tif ($fieldnamekey == 'deductible') $fieldnamekey = 'Deductible';\n\t\t\tif ($fieldnamekey == 'sortorder') $fieldnamekey = 'SortOrder';\n\t\t\tif ($fieldnamekey == 'category_type') $fieldnamekey = 'Calculated';\n\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n\t\t}\n\t}\n\t// Other checks\n\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_actioncomm\" && isset($_POST[\"type\"]) && in_array($_POST[\"type\"],array('system','systemauto'))) {\n\t\t$ok=0;\n\t\tsetEventMessages($langs->transnoentities('ErrorReservedTypeSystemSystemAuto'), null, 'errors');\n\t}\n\tif (isset($_POST[\"code\"]))\n\t{\n\t\tif ($_POST[\"code\"]=='0')\n\t\t{\n\t\t\t$ok=0;\n\t\t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n\t\t}\n\t\t/*if (!is_numeric($_POST['code']))\t// disabled, code may not be in numeric base\n    \t{\n\t    \t$ok = 0;\n\t    \t$msg .= $langs->transnoentities('ErrorFieldFormat', $langs->transnoentities('Code')).'<br>';\n\t    }*/\n\t}\n\tif (isset($_POST[\"country\"]) && ($_POST[\"country\"]=='0') && ($id != 2))\n\t{\n\t\tif (in_array($tablib[$id],array('DictionaryCompanyType','DictionaryHolidayTypes')))\t// Field country is no mandatory for such dictionaries\n\t\t{\n\t\t\t$_POST[\"country\"]='';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$ok=0;\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\",$langs->transnoentities(\"Country\")), null, 'errors');\n\t\t}\n\t}\n\tif ($id == 3 && ! is_numeric($_POST[\"code\"]))\n\t{\n\t   \t$ok=0;\n\t   \tsetEventMessages($langs->transnoentities(\"ErrorFieldMustBeANumeric\",$langs->transnoentities(\"Code\")), null, 'errors');\n\t}\n\n\t// Clean some parameters\n\tif (isset($_POST[\"localtax1\"]) && empty($_POST[\"localtax1\"])) $_POST[\"localtax1\"]='0';\t// If empty, we force to 0\n\tif (isset($_POST[\"localtax2\"]) && empty($_POST[\"localtax2\"])) $_POST[\"localtax2\"]='0';\t// If empty, we force to 0\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n\n\t// Si verif ok et action add, on ajoute la ligne\n\tif ($ok && GETPOST('actionadd'))\n\t{\n\t\tif ($tabrowid[$id])\n\t\t{\n\t\t\t// Recupere id libre pour insertion\n\t\t\t$newid=0;\n\t\t\t$sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n\t\t\t$result = $db->query($sql);\n\t\t\tif ($result)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($result);\n\t\t\t\t$newid=($obj->newid + 1);\n\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\n\t\t// Add new entry\n\t\t$sql = \"INSERT INTO \".$tabname[$id].\" (\";\n\t\t// List of fields\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $tabrowid[$id].\",\";\n\t\t$sql.= $tabfieldinsert[$id];\n\t\t$sql.=\",active)\";\n\t\t$sql.= \" VALUES(\";\n\n\t\t// List of values\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $newid.\",\";\n\t\t$i=0;\n\t\tforeach ($listfieldinsert as $f => $value)\n\t\t{\n\t\t\tif ($value == 'price' || preg_match('/^amount/i',$value) || $value == 'taux') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n\t\t\t}\n\t\t\telse if ($value == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.=\",1)\";\n\n\t\tdol_syslog(\"actionadd\", LOG_DEBUG);\n\t\t$result = $db->query($sql);\n\t\tif ($result)\t// Add is ok\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n\t\t\t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Si verif ok et action modify, on modifie la ligne\n\tif ($ok && GETPOST('actionmodify'))\n\t{\n\t\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\t\telse { $rowidcol=\"rowid\"; }\n\n\t\t// Modify entry\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET \";\n\t\t// Modifie valeur des champs\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n\t\t{\n\t\t\t$sql.= $tabrowid[$id].\"=\";\n\t\t\t$sql.= \"'\".$db->escape($rowid).\"', \";\n\t\t}\n\t\t$i = 0;\n\t\tforeach ($listfieldmodify as $field)\n\t\t{\n\t\t\tif ($field == 'price' || preg_match('/^amount/i',$field) || $field == 'taux') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n\t\t\t}\n\t\t\telse if ($field == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\t$sql.= $field.\"=\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n\t\tdol_syslog(\"actionmodify\", LOG_DEBUG);\n\t\t//print $sql;\n\t\t$resql = $db->query($sql);\n\t\tif (! $resql)\n\t\t{\n\t\t\tsetEventMessages($db->error(), null, 'errors');\n\t\t}\n\t}\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\t$sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n\tdol_syslog(\"delete\", LOG_DEBUG);\n\t$result = $db->query($sql);\n\tif (! $result)\n\t{\n\t\tif ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n}\n\n// activate\nif ($action == $acts[0])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// disable\nif ($action == $acts[1])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// favorite\nif ($action == 'activate_favorite')\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// disable favorite\nif ($action == 'disable_favorite')\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code='\".$code.\"'\";\n\t}\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans($tablib[$id]);\n$linkback='';\n\nprint load_fiche_titre($titre,$linkback,'title_accountancy');\n\nif (empty($id))\n{\n\tprint $langs->trans(\"DictionaryDesc\");\n\tprint \" \".$langs->trans(\"OnlyActiveElementsAreShown\").\"<br>\\n\";\n}\nprint \"<br>\\n\";\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.urlencode($page).'&':'').'sortfield='.urlencode($sortfield).'&sortorder='.urlencode($sortorder).'&rowid='.urlencode($rowid).'&code='.urlencode($code).'&id='.urlencode($id), $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n\t// Complete requete recherche valeurs avec critere de tri\n\t$sql=$tabsql[$id];\n\n\tif ($search_country_id > 0)\n\t{\n\t\tif (preg_match('/ WHERE /',$sql)) $sql.= \" AND \";\n\t\telse $sql.=\" WHERE \";\n\t\t$sql.= \" c.rowid = \".$search_country_id;\n\t}\n\n\t// If sort order is \"country\", we use country_code instead\n\tif ($sortfield == 'country') $sortfield='country_code';\n\t$sql.=$db->order($sortfield,$sortorder);\n\t$sql.=$db->plimit($listlimit+1,$offset);\n\t//print $sql;\n\n\t$fieldlist=explode(',',$tabfield[$id]);\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\n\tprint '<div class=\"div-table-responsive\">';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\n\t// Form to add a new line\n\tif ($tabname[$id])\n\t{\n\t\t$alabelisused=0;\n\t\t$var=false;\n\n\t\t$fieldlist=explode(',',$tabfield[$id]);\n\n\t\t// Line for title\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\t$align=\"left\";\n\t\t\tif ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n\t\t\tif ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n\t\t\tif ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='right';\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\";}\n\t\t\tif ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\";}\n\t\t\tif ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n\t\t\tif ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n\t\t\tif ($fieldlist[$field]=='type')            {\n\t\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_paiement\") $valuetoshow=$form->textwithtooltip($langs->trans(\"Type\"),$langs->trans(\"TypePaymentDesc\"),2,1,img_help(1,''));\n\t\t\t\telse $valuetoshow=$langs->trans(\"Type\");\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n\t\t\t{\n\t\t\t\t$valuetoshow=$langs->trans(\"Label\");\n\t\t\t\tif ($id != 25) $valuetoshow.=\"*\";\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='libelle_facture') { $valuetoshow=$langs->trans(\"LabelOnDocuments\").\"*\"; }\n\t\t\tif ($fieldlist[$field]=='country')         {\n\t\t\t\tif (in_array('region_id',$fieldlist)) { print '<td>&nbsp;</td>'; continue; }\t\t// For region page, we do not show the country input\n\t\t\t\t$valuetoshow=$langs->trans(\"Country\");\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n\t\t\tif ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n\t\t\tif ($fieldlist[$field]=='width')           { $valuetoshow=$langs->trans(\"Width\"); }\n\t\t\tif ($fieldlist[$field]=='height')          { $valuetoshow=$langs->trans(\"Height\"); }\n\t\t\tif ($fieldlist[$field]=='unit')            { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n\t\t\tif ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $valuetoshow=''; }\n\t\t\tif ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_version' || $fieldlist[$field]=='fk_pcg_version') { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n\t\t\tif ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountparent\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n\t\t\tif ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n\t\t\tif ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\n\t\t\tif ($id == 2)\t// Special cas for state page\n\t\t\t{\n\t\t\t\tif ($fieldlist[$field]=='region_id') { $valuetoshow='&nbsp;'; $showfield=1; }\n\t\t\t\tif ($fieldlist[$field]=='region') { $valuetoshow=$langs->trans(\"Country\").'/'.$langs->trans(\"Region\"); $showfield=1; }\n\t\t\t}\n\n\t\t\tif ($valuetoshow != '')\n\t\t\t{\n\t\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\t\tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n\t\t\t\telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n\t\t\t\telse print $valuetoshow;\n\t\t\t\tprint '</td>';\n\t\t\t }\n\t\t\t if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n\t\t}\n\n\t\tprint '<td>';\n\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n\t\tprint '</td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Line to enter new values\n\t\tprint \"<tr \".$bcnd[$var].\">\";\n\n\t\t$obj = new stdClass();\n\t\t// If data was already input, we define them in obj to populate input fields.\n\t\tif (GETPOST('actionadd'))\n\t\t{\n\t\t\tforeach ($fieldlist as $key=>$val)\n\t\t\t{\n\t\t\t\tif (GETPOST($val))\n\t\t\t\t\t$obj->$val=GETPOST($val);\n\t\t\t}\n\t\t}\n\n\t\t$tmpaction = 'create';\n\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t$reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\tif ($id == 3) unset($fieldlist[2]);\n\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.'c_email_templates' && $action == 'edit')\n\t\t\t{\n\t\t\t\tfieldListAccountModel($fieldlist,$obj,$tabname[$id],'hide');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfieldListAccountModel($fieldlist,$obj,$tabname[$id],'add');\n\t\t\t}\n\t\t}\n\n\t\tprint '<td colspan=\"3\" align=\"right\">';\n\t\tif ($tabname[$id] != MAIN_DB_PREFIX.'c_email_templates' || $action != 'edit')\n\t\t{\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n\t\t}\n\t\tprint '</td>';\n\t\tprint \"</tr>\";\n\n\t\t$colspan=count($fieldlist)+3;\n\n\t\tif (! empty($alabelisused))  // If there is one label among fields, we show legend of *\n\t\t{\n\t\t\tprint '<tr><td colspan=\"'.$colspan.'\">* '.$langs->trans(\"LabelUsedByDefault\").'.</td></tr>';\n\t\t}\n\t\tprint '<tr><td colspan=\"'.$colspan.'\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n\t}\n\n\n\n\t// List of available values in database\n\tdol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\t$var=true;\n\n\t\t$param = '&id='.$id;\n\t\tif ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n\t\t$paramwithsearch = $param;\n\t\tif ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n\t\tif ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n\n\t\t// There is several pages\n\t\tif ($num > $listlimit)\n\t\t{\n\t\t\tprint '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n\t\t\tprint_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Title line with search boxes\n\t\tprint '<tr class=\"liste_titre liste_titre_add\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t$showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\n\t\t\tif ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\n\t\t\tif ($showfield)\n\t\t\t{\n\t\t\t\tif ($value == 'country')\n\t\t\t\t{\n\t\t\t\t\tprint '<td class=\"liste_titre\">';\n\t\t\t\t\tprint $form->select_country($search_country_id, 'search_country_id', '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprint '<td class=\"liste_titre\"></td>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\" colspan=\"2\" align=\"right\">';\n\t\t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n\t\tprint $searchpicto;\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Title of lines\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\t\t\t$align=\"left\";\n\t\t\t$sortable=1;\n\t\t\t$valuetoshow='';\n\t\t\t/*\n            $tmparray=getLabelOfField($fieldlist[$field]);\n            $showfield=$tmp['showfield'];\n            $valuetoshow=$tmp['valuetoshow'];\n            $align=$tmp['align'];\n            $sortable=$tmp['sortable'];\n\t\t\t*/\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\tif ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n\t\t\tif ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n\t\t\tif ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='right';\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $align=\"center\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\"; $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n\t\t\tif ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n\t\t\tif ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n\t\t\t{\n\t\t\t\t$valuetoshow=$langs->trans(\"Label\");\n\t\t\t   \tif ($id != 25) $valuetoshow.=\"*\";\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='libelle_facture') { $valuetoshow=$langs->trans(\"LabelOnDocuments\").\"*\"; }\n\t\t\tif ($fieldlist[$field]=='country')         { $valuetoshow=$langs->trans(\"Country\"); }\n\t\t\tif ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n\t\t\tif ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $align=\"center\"; }\n\t\t\tif ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n\t\t\tif ($fieldlist[$field]=='width')           { $valuetoshow=$langs->trans(\"Width\"); }\n\t\t\tif ($fieldlist[$field]=='height')          { $valuetoshow=$langs->trans(\"Height\"); }\n\t\t\tif ($fieldlist[$field]=='unit')            { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n\t\t\tif ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\t\t\tif ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='fk_pcg_version')  { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n\t\t\tif ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountsparent\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n\t\t\tif ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n\t\t\tif ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n\t\t\tif ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\n\t\t\t// Affiche nom du champ\n\t\t\tif ($showfield)\n\t\t\t{\n\t\t\t\tprint getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n\t\t\t}\n\t\t}\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n\t\tprint getTitleFieldOfList('');\n\t\tprint getTitleFieldOfList('');\n\t\tprint '</tr>';\n\n\t\tif ($num)\n\t\t{\n\t\t\t// Lines with values\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t//print_r($obj);\n\t\t\t\tprint '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n\t\t\t\tif ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n\t\t\t\t{\n\t\t\t\t\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n\n\t\t\t\t\t$tmpaction='edit';\n\t\t\t\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\tif (empty($reshook)) fieldListAccountModel($fieldlist,$obj,$tabname[$id],'edit');\n\n\t\t\t\t\tprint '<td colspan=\"3\" align=\"right\"><a name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\">&nbsp;</a><input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\t\tprint '&nbsp;<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\"></td>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t  \t$tmpaction = 'view';\n\t\t\t\t\t$parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\tif (empty($reshook))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach ($fieldlist as $field => $value)\n\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t$showfield=1;\n\t\t\t\t\t\t\t$align=\"left\";\n\t\t\t\t\t\t\t$valuetoshow=$obj->{$fieldlist[$field]};\n\t\t\t\t\t\t\tif ($value == 'type_template')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($value == 'element')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($value == 'source')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = isset($sourceList[$valuetoshow])?$sourceList[$valuetoshow]:$valuetoshow;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($valuetoshow=='all') {\n\t\t\t\t\t\t\t\t$valuetoshow=$langs->trans('All');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='country') {\n\t\t\t\t\t\t\t\tif (empty($obj->country_code))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$valuetoshow='-';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$key=$langs->trans(\"Country\".strtoupper($obj->country_code));\n\t\t\t\t\t\t\t\t\t$valuetoshow=($key != \"Country\".strtoupper($obj->country_code)?$obj->country_code.\" - \".$key:$obj->country);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='recuperableonly' || $fieldlist[$field]=='type_cdr' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n\t\t\t\t\t\t\t\tif(empty($valuetoshow)) $valuetoshow = $langs->trans('None');\n\t\t\t\t\t\t\t\telseif($valuetoshow == 1) $valuetoshow = $langs->trans('AtEndOfMonth');\n\t\t\t\t\t\t\t\telseif($valuetoshow == 2) $valuetoshow = $langs->trans('CurrentNext');\n\t\t\t\t\t\t\t\t$align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='price' || preg_match('/^amount/i',$fieldlist[$field])) {\n\t\t\t\t\t\t\t\t$valuetoshow=price($valuetoshow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle_facture') {\n\t\t\t\t\t\t\t\t$langs->load(\"bills\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"PaymentCondition\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"PaymentCondition\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t\t$valuetoshow=nl2br($valuetoshow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_country') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Country\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"Country\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_availability') {\n\t\t\t\t\t\t\t\t$langs->load(\"propal\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"AvailabilityType\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"AvailabilityType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_actioncomm') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Action\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"Action\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (! empty($obj->code_iso) && $fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_currencies') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Currency\".strtoupper($obj->code_iso));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code_iso && $key != \"Currency\".strtoupper($obj->code_iso)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_typent') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_prospectlevel') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_civility') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"Civility\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"Civility\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_type_contact') {\n\t\t\t\t\t\t\t\t$langs->load('agenda');\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_payment_term') {\n\t\t\t\t\t\t\t\t$langs->load(\"bills\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"PaymentConditionShort\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"PaymentConditionShort\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paiement') {\n\t\t\t\t\t\t\t\t$langs->load(\"bills\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"PaymentType\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"PaymentType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_reason') {\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"DemandReasonType\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"DemandReasonType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_method') {\n\t\t\t\t\t\t\t\t$langs->load(\"orders\");\n\t\t\t\t\t\t\t\t$key=$langs->trans($obj->code);\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != $obj->code)?$key:$obj->{$fieldlist[$field]};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_shipment_mode') {\n\t\t\t\t\t\t\t\t$langs->load(\"sendings\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"SendingMethod\".strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->code && $key != \"SendingMethod\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field] == 'libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paper_format')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$key = $langs->trans('PaperFormat'.strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow = ($obj->code && $key != 'PaperFormat'.strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field] == 'label' && $tabname[$id] == MAIN_DB_PREFIX.'c_type_fees')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$langs->load('trips');\n\t\t\t\t\t\t\t\t$key = $langs->trans(strtoupper($obj->code));\n\t\t\t\t\t\t\t\t$valuetoshow = ($obj->code && $key != strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') {\n\t\t\t\t\t\t\t\t$showfield=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='unicode') {\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->getCurrencySymbol($obj->code,1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t\t\t\t\t\t\t\t$langs->load(\"products\");\n\t\t\t\t\t\t\t\t$valuetoshow=$langs->trans($obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='short_label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t\t\t\t\t\t\t\t$langs->load(\"products\");\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->trans($obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (($fieldlist[$field] == 'unit') && ($tabname[$id] == MAIN_DB_PREFIX.'c_paper_format'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$key = $langs->trans('SizeUnit'.strtolower($obj->unit));\n\t\t\t\t\t\t\t\t$valuetoshow = ($obj->code && $key != 'SizeUnit'.strtolower($obj->unit) ? $key : $obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='taux') {\n\t\t\t\t\t\t\t\t$valuetoshow = price($valuetoshow, 0, $langs, 0, 0);\n\t\t\t\t\t\t\t\t$align=\"right\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (in_array($fieldlist[$field],array('recuperableonly')))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='accountancy_code' || $fieldlist[$field]=='accountancy_code_sell' || $fieldlist[$field]=='accountancy_code_buy') {\n\t\t\t\t\t\t\t\t$valuetoshow = length_accountg($valuetoshow);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$class='tddict';\n\t\t\t\t\t\t\tif ($fieldlist[$field] == 'tracking') $class.=' tdoverflowauto';\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Can an entry be erased or disabled ?\n\t\t\t\t\t$iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n\t\t\t\t\tif (isset($obj->code) && $id != 10)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'RECEP') { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'EF0')   { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isset($obj->type) && in_array($obj->type, array('system', 'systemauto'))) { $iserasable=0; }\n\t\t\t\t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO')) || in_array($obj->type, array('systemauto'))) { $canbedisabled=0; $canbedisabled = 0; }\n\t\t\t\t\t$canbemodified=$iserasable;\n\t\t\t\t\tif ($obj->code == 'RECEP') $canbemodified=1;\n\n\t\t\t\t\t$url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n\t\t\t\t\tif ($param) $url .= '&'.$param;\n\t\t\t\t\t$url.='&';\n\n\t\t\t\t\t// Active\n\t\t\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\t\t\tif ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n\t\t\t\t\telse\n\t\t\t\t \t{\n\t\t\t\t \t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO'))) print $langs->trans(\"AlwaysActive\");\n\t\t\t\t \t\telse if (isset($obj->type) && in_array($obj->type, array('systemauto')) && empty($obj->active)) print $langs->trans(\"Deprecated\");\n\t\t\t\t  \t\telse if (isset($obj->type) && in_array($obj->type, array('system')) && ! empty($obj->active) && $obj->code != 'AC_OTH') print $langs->trans(\"UsedOnlyWithTypeOption\");\n\t\t\t\t\t\telse print $langs->trans(\"AlwaysActive\");\n\t\t\t\t\t}\n\t\t\t\t\tprint \"</td>\";\n\n\t\t\t\t\t// Modify link\n\t\t\t\t\tif ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\t// Delete link\n\t\t\t\t\tif ($iserasable) print '<td align=\"center\"><a href=\"'.$url.'action=delete\">'.img_delete().'</a></td>';\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</table>';\n\tprint '</div>';\n\n\tprint '</form>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListAccountModel($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\t$formaccounting = new FormAccounting($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'country')\n\t\t{\n\t\t\tif (in_array('region_id',$fieldlist))\n\t\t\t{\n\t\t\t\tprint '<td>';\n\t\t\t\t//print join(',',$fieldlist);\n\t\t\t\tprint '</td>';\n\t\t\t\tcontinue;\n\t\t\t}\t// For state page, we do not show the country input (we link to region, not country)\n\t\t\tprint '<td>';\n\t\t\t$fieldname='country';\n\t\t\tprint $form->select_country((! empty($obj->country_code)?$obj->country_code:(! empty($obj->country)?$obj->country:'')), $fieldname, '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'country_id')\n\t\t{\n\t\t\tif (! in_array('country',$fieldlist))\t// If there is already a field country, we don't show country_id (avoid duplicate)\n\t\t\t{\n\t\t\t\t$country_id = (! empty($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : 0);\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$country_id.'\">';\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$formcompany->select_region($region_id,'region');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region_id')\n\t\t{\n\t\t\t$region_id = (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:0);\n\t\t\tprint '<td>';\n\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$region_id.'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $formadmin->select_language($conf->global->MAIN_LANG_DEFAULT,'lang');\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de template\n\t\telseif ($fieldlist[$field] == 'type_template')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('type_template', $elementList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'element')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('element', $elementList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\t// La source de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'source')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('source', $sourceList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'type' && $tabname == MAIN_DB_PREFIX.\"c_actioncomm\")\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint 'user<input type=\"hidden\" name=\"type\" value=\"user\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'recuperableonly' || $fieldlist[$field] == 'type_cdr' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n\t\t\tif ($fieldlist[$field] == 'type_cdr') print '<td align=\"center\">';\n\t\t\telse print '<td>';\n\t\t\tif ($fieldlist[$field] == 'type_cdr') {\n\t\t\t\tprint $form->selectarray($fieldlist[$field], array(0=>$langs->trans('None'), 1=>$langs->trans('AtEndOfMonth'), 2=>$langs->trans('CurrentNext')), (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\t} else {\n\t\t\t\tprint $form->selectyesno($fieldlist[$field],(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''),1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field],array('nbjour','decalage','taux','localtax1','localtax2'))) {\n\t\t\t$align=\"left\";\n\t\t\tif (in_array($fieldlist[$field],array('taux','localtax1','localtax2'))) $align=\"right\";\t// Fields aligned on right\n\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\tprint '<input type=\"text\" class=\"flat\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" size=\"3\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field], array('libelle_facture'))) {\n\t\t\tprint '<td><textarea cols=\"30\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea></td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field], array('content')))\n\t\t{\n\t\t\tif ($tabname == MAIN_DB_PREFIX.'c_email_templates')\n\t\t\t{\n\t\t\t\tprint '<td colspan=\"4\"></td></tr><tr class=\"pair nohover\"><td colspan=\"5\">';\t\t// To create an artificial CR for the current tr we are on\n\t\t\t}\n\t\t\telse print '<td>';\n\t\t\tif ($context != 'hide')\n\t\t\t{\n\t\t\t\t//print '<textarea cols=\"3\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea>';\n\t\t\t\t$okforextended=true;\n\t\t\t\tif ($tabname == MAIN_DB_PREFIX.'c_email_templates' && empty($conf->global->FCKEDITOR_ENABLE_MAIL)) $okforextended=false;\n\t\t\t\t$doleditor = new DolEditor($fieldlist[$field], (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), '', 140, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_5, '90%');\n\t\t\t\tprint $doleditor->Create(1);\n\t\t\t}\n\t\t\telse print '&nbsp;';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'price' || preg_match('/^amount/i',$fieldlist[$field])) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat\" value=\"'.price((! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'')).'\" size=\"8\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" size=\"10\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'accountancy_code' || $fieldlist[$field] == 'accountancy_code_sell' || $fieldlist[$field] == 'accountancy_code_buy')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t\t$accountancy_account = (! empty($obj->$fieldlist[$field]) ? $obj->$fieldlist[$field] : 0);\n\t\t\t\tprint $formaccounting->select_account($accountancy_account, $fieldlist[$field], 1, '', 1, 1, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<input type=\"text\" size=\"10\" class=\"flat\" value=\"'.(isset($obj->$fieldlist[$field])?$obj->$fieldlist[$field]:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code') $size='size=\"8\" ';\n\t\t\tif ($fieldlist[$field]=='position') $size='size=\"4\" ';\n\t\t\tif ($fieldlist[$field]=='libelle') $size='centpercent';\n\t\t\tif ($fieldlist[$field]=='tracking') $class='centpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.' class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2016\t\tJamal Elbaz\t\t\t<jamelbaz@gmail.pro>\n * Copyright (C) 2017\t\tAlexandre Spangaro\t<aspangaro@zendsi.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * \\file\thtdocs/accountancy/admin/categories.php\n * \\ingroup Advanced accountancy\n * \\brief\tPage to assign mass categories to accounts\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT . '/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT . '/accountancy/class/accountancycategory.class.php';\nrequire_once DOL_DOCUMENT_ROOT . '/core/class/html.formaccounting.class.php';\n\n$error = 0;\n\n$langs->load(\"bills\");\n$langs->load(\"accountancy\");\n\n$mesg = '';\n$id = GETPOST('id', 'int');\n$rowid = GETPOST('rowid', 'int');\n$cancel = GETPOST('cancel','alpha');\n$action = GETPOST('action','aZ09');\n$cat_id = GETPOST('account_category');\n$selectcpt = GETPOST('cpt_bk', 'array');\n$cpt_id = GETPOST('cptid');\n\nif ($cat_id == 0) {\n\t$cat_id = null;\n}\n\n// Security check\nif (empty($user->rights->accounting->chartofaccount))\n{\n\taccessforbidden();\n}\n\n$accountingcategory = new AccountancyCategory($db);\n\n// si ajout de comptes\nif (! empty($selectcpt)) {\n\t$cpts = array ();\n\tforeach ( $selectcpt as $selectedoption ) {\n\t\tif (! array_key_exists($selectedoption, $cpts))\n\t\t\t$cpts[$selectedoption] = \"'\" . $selectedoption . \"'\";\n\t}\n\n\t$return= $accountingcategory->updateAccAcc($cat_id, $cpts);\n\n\tif ($return<0) {\n\t\tsetEventMessages($langs->trans('errors'), $accountingcategory->errors, 'errors');\n\t} else {\n\t\tsetEventMessages($langs->trans('Saved'), null, 'mesgs');\n\t}\n}\nif ($action == 'delete') {\n\tif ($cpt_id) {\n\t\tif ($accountingcategory->deleteCptCat($cpt_id)) {\n\t\t\tsetEventMessages($langs->trans('CategoryDeleted'), null, 'mesgs');\n\t\t} else {\n\t\t\tsetEventMessages($langs->trans('errors'), null, 'errors');\n\t\t}\n\t}\n}\n\n\n/*\n * View\n */\n$form = new Form($db);\n$formaccounting = new FormAccounting($db);\n\nllxheader('', $langs->trans('AccountingCategory'));\n\n$linkback = '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories_list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\nprint load_fiche_titre($langs->trans('AccountingCategory'), $linkback);\n\nprint '<form name=\"add\" action=\"' . $_SERVER[\"PHP_SELF\"] . '\" method=\"POST\">' . \"\\n\";\nprint '<input type=\"hidden\" name=\"token\" value=\"' . $_SESSION['newtoken'] . '\">';\nprint '<input type=\"hidden\" name=\"action\" value=\"display\">';\n\ndol_fiche_head();\n\nprint '<table class=\"border\" width=\"100%\">';\n// Category\nprint '<tr><td class=\"titlefield\">' . $langs->trans(\"AccountingCategory\") . '</td>';\nprint '<td>';\n$formaccounting->select_accounting_category($cat_id, 'account_category', 1, 0, 0, 1);\nprint '<input class=\"button\" type=\"submit\" value=\"' . $langs->trans(\"Select\") . '\">';\nprint '</td></tr>';\n\nif (! empty($cat_id))\n{\n\t$return = $accountingcategory->getAccountsWithNoCategory($cat_id);\n\tif ($return < 0) {\n\t\tsetEventMessages(null, $accountingcategory->errors, 'errors');\n\t}\n\tprint '<tr><td>' . $langs->trans(\"AddAccountFromBookKeepingWithNoCategories\") . '</td>';\n\tprint '<td>';\n\n\t$arraykeyvalue=array();\n\tforeach($accountingcategory->lines_cptbk as $key => $val)\n\t{\n\t\t$arraykeyvalue[length_accountg($val->numero_compte)] = length_accountg($val->numero_compte) . ' (' . $val->label_compte . ($val->doc_ref?' '.$val->doc_ref:'').')';\n\t}\n\n\tif (is_array($accountingcategory->lines_cptbk) && count($accountingcategory->lines_cptbk) > 0) {\n\n\t\tprint $form->multiselectarray('cpt_bk', $arraykeyvalue, GETPOST('cpt_bk', 'array'), null, null, null, null, \"90%\");\n\t\tprint '<br>';\n\t\t/*print '<select class=\"flat minwidth200\" size=\"8\" name=\"cpt_bk[]\" multiple>';\n\t\tforeach ( $accountingcategory->lines_cptbk as $cpt ) {\n\t\t\tprint '<option value=\"' . length_accountg($cpt->numero_compte) . '\">' . length_accountg($cpt->numero_compte) . ' (' . $cpt->label_compte . ' ' . $cpt->doc_ref . ')</option>';\n\t\t}\n\t\tprint '</select><br>';\n\t\tprint ajax_combobox('cpt_bk');\n\t\t*/\n\t\tprint '<input class=\"button\" type=\"submit\" id=\"\" class=\"action-delete\" value=\"' . $langs->trans(\"Add\") . '\"> ';\n\t}\n\tprint '</td></tr>';\n}\n\nprint '</table>';\n\ndol_fiche_end();\n\nprint '</form>';\n\n\nif ($action == 'display' || $action == 'delete') {\n\n    print \"<table class='noborder' width='100%'>\\n\";\n    print '<tr class=\"liste_titre\">';\n\tprint '<td class=\"liste_titre\">'.$langs->trans(\"AccountAccounting\").\"</td>\";\n\tprint '<td class=\"liste_titre\" colspan=\"2\">'.$langs->trans(\"Label\").\"</td>\";\n\tprint \"</tr>\\n\";\n\n\tif (! empty($cat_id)) {\n\t\t$return = $accountingcategory->display($cat_id);\n\t\tif ($return < 0) {\n\t\t\tsetEventMessages(null, $accountingcategory->errors, 'errors');\n\t\t}\n\n\t\tif (is_array($accountingcategory->lines_display) && count($accountingcategory->lines_display) > 0) {\n\t\t\tforeach ( $accountingcategory->lines_display as $cpt ) {\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td>' . length_accountg($cpt->account_number) . '</td>';\n\t\t\t\tprint '<td>' . $cpt->label . '</td>';\n\t\t\t\tprint '<td align=\"right\">';\n\t\t\t\tprint \"<a href= '\".$_SERVER['PHP_SELF'].\"?action=delete&account_category=\" . $cat_id . \"&cptid=\" . $cpt->rowid.\"'>\";\n\t\t\t\tprint img_delete($langs->trans(\"DeleteFromCat\")).' ';\n\t\t\t\tprint $langs->trans(\"DeleteFromCat\").\"</a>\";\n\t\t\t\tprint \"</td>\";\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprint \"</table>\";\n}\n\nllxFooter();\n\n$db->close();\n", "<?php\n/* Copyright (C) 2004-2017  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2011-2017  Alexandre Spangaro      <aspangaro@zendsi.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/accountancy/admin/categories_list.php\n *\t\t\\ingroup    setup\n *\t\t\\brief      Page to administer data tables\n */\n\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\n\n$langs->loadLangs(array(\"errors\",\"admin\",\"companies\",\"resource\",\"holiday\",\"accountancy\",\"hrm\"));\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=32;\n$rowid=GETPOST('rowid','alpha');\n$code=GETPOST('code','alpha');\n\n// Security access\nif (empty($user->rights->accounting->chartofaccount))\n{\n\taccessforbidden();\n}\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'aZ09comma');\n$sortorder = GETPOST(\"sortorder\",'aZ09comma');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n$search_country_id = GETPOST('search_country_id','int');\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Sort order to show dictionary (0 is space). All other dictionaries (added by modules) will be at end of this.\n$taborder=array(32);\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[32]= \"DictionaryAccountancyCategory\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[32]=\"position ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[32]= \"code,label,range_account,category_type,formula,position,country\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[32]= \"code,label,range_account,category_type,formula,position,country_id\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[32]= \"code,label,range_account,category_type,formula,position,fk_country\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[32]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[32]= ! empty($conf->accounting->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'category_type'=>$langs->trans(\"SetToYesIfGroupIsComputationOfOtherGroups\"), 'formula'=>$langs->trans(\"EnterCalculationRuleIfPreviousFieldIsYes\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[32] = array();\n\n// Complete all arrays with entries found into modules\ncomplete_dictionary_with_modules($taborder,$tabname,$tablib,$tabsql,$tabsqlsort,$tabfield,$tabfieldvalue,$tabfieldinsert,$tabrowid,$tabcond,$tabhelp,$tabfieldcheck);\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n    $search_country_id = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n    $listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n    $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n    $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n    $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n    // Check that all fields are filled\n    $ok=1;\n    foreach ($listfield as $f => $value)\n    {\n\t\tif ($value == 'formula' && empty($_POST['formula'])) continue;\n\t\tif ($value == 'range_account' && empty($_POST['range_account'])) continue;\n\t\tif ($value == 'country' || $value == 'country_id') continue;\n\t\tif (! isset($_POST[$value]) || $_POST[$value]=='')\n        {\n            $ok=0;\n            $fieldnamekey=$listfield[$f];\n            // We take translate key of field\n            if ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n            if ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n            if ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n            if ($fieldnamekey == 'type') $fieldnamekey = 'Type';\n            if ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n\t\t\tif ($fieldnamekey == 'category_type') $fieldnamekey = 'Calculated';\n\n            setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n        }\n    }\n    if (isset($_POST[\"code\"]))\n    {\n    \tif ($_POST[\"code\"]=='0')\n    \t{\n        \t$ok=0;\n    \t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n        }\n    }\n    if (! is_numeric(GETPOST('position','alpha')))\n    {\n    \t$langs->load(\"errors\");\n   \t\t$ok=0;\n   \t\tsetEventMessages($langs->transnoentities('ErrorFieldMustBeANumeric', $langs->transnoentities(\"Position\")), null, 'errors');\n    }\n\n\t// Clean some parameters\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n\n    // Si verif ok et action add, on ajoute la ligne\n    if ($ok && GETPOST('actionadd','alpha'))\n    {\n        if ($tabrowid[$id])\n        {\n            // Recupere id libre pour insertion\n            $newid=0;\n            $sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n            $result = $db->query($sql);\n            if ($result)\n            {\n                $obj = $db->fetch_object($result);\n                $newid=($obj->newid + 1);\n\n            } else {\n                dol_print_error($db);\n            }\n        }\n\n        // Add new entry\n        $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n        // List of fields\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert)) $sql.= $tabrowid[$id].\",\";\n        $sql.= $tabfieldinsert[$id];\n        $sql.=\",active)\";\n        $sql.= \" VALUES(\";\n\n        // List of values\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert)) $sql.= $newid.\",\";\n        $i=0;\n        foreach ($listfieldinsert as $f => $value)\n        {\n            if ($value == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($i) $sql.=\",\";\n            if ($_POST[$listfieldvalue[$i]] == '' && ! $listfieldvalue[$i] == 'formula') $sql.=\"null\";  // For vat, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.=\",1)\";\n\n        dol_syslog(\"actionadd\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if ($result)\t// Add is ok\n        {\n            setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n        \t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n        }\n        else\n        {\n            if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n            }\n            else {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // Si verif ok et action modify, on modifie la ligne\n    if ($ok && GETPOST('actionmodify'))\n    {\n        if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n        else { $rowidcol=\"rowid\"; }\n\n        // Modify entry\n        $sql = \"UPDATE \".$tabname[$id].\" SET \";\n        // Modifie valeur des champs\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n        {\n            $sql.= $tabrowid[$id].\"=\";\n            $sql.= \"'\".$db->escape($rowid).\"', \";\n        }\n        $i = 0;\n        foreach ($listfieldmodify as $field)\n        {\n            if ($field == 'fk_country' && $_POST['country'] > 0) {\n            \t$_POST[$listfieldvalue[$i]] = $_POST['country'];\n            }\n            else if ($field == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($i) $sql.=\",\";\n            $sql.= $field.\"=\";\n            if ($_POST[$listfieldvalue[$i]] == '' && ! $listfieldvalue[$i] == 'range_account') $sql.=\"null\";  // For range_account, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n        dol_syslog(\"actionmodify\", LOG_DEBUG);\n        //print $sql;\n        $resql = $db->query($sql);\n        if (! $resql)\n        {\n            setEventMessages($db->error(), null, 'errors');\n        }\n    }\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    $sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n\n    dol_syslog(\"delete\", LOG_DEBUG);\n    $result = $db->query($sql);\n    if (! $result)\n    {\n        if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n        {\n            setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n        }\n        else\n        {\n            dol_print_error($db);\n        }\n    }\n}\n\n// activate\nif ($action == $acts[0])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n        $sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code = '\".$db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable\nif ($action == $acts[1])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code = '\".$db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// favorite\nif ($action == 'activate_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code = '\".$db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable favorite\nif ($action == 'disable_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\" = '\".$db->escape($rowid).\"'\";\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code = '\".$db->escape($code).\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader('', $langs->trans('DictionaryAccountancyCategory'));\n\n$titre=$langs->trans($tablib[$id]);\n$linkback='';\n$titlepicto='title_setup';\n\nprint load_fiche_titre($titre, $linkback, $titlepicto);\n\nprint $langs->trans(\"AccountingAccountGroupsDesc\", $langs->transnoentitiesnoconv(\"ByPersonalizedAccountGroups\")).'<br><br>';\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id.($search_country_id>0?'&search_country_id='.$search_country_id:''), $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n    // Complete requete recherche valeurs avec critere de tri\n    $sql=$tabsql[$id];\n\n    if ($search_country_id > 0)\n    {\n        if (preg_match('/ WHERE /',$sql)) $sql.= \" AND \";\n        else $sql.=\" WHERE \";\n        $sql.= \" (a.fk_country = \".$search_country_id.\" OR a.fk_country = 0)\";\n    }\n\n    // If sort order is \"country\", we use country_code instead\n    if ($sortfield == 'country') $sortfield='country_code';\n    $sql.=$db->order($sortfield,$sortorder);\n    $sql.=$db->plimit($listlimit+1,$offset);\n    //print $sql;\n\n    $fieldlist=explode(',',$tabfield[$id]);\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n\tprint '<div class=\"div-table-responsive\">';\n    print '<table class=\"noborder\" width=\"100%\">';\n\n    // Form to add a new line\n    if ($tabname[$id])\n    {\n        $alabelisused=0;\n        $var=false;\n\n        $fieldlist=explode(',',$tabfield[$id]);\n\n        // Line for title\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            $align=\"left\";\n            if ($fieldlist[$field]=='type')            {\n\t\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_paiement\") $valuetoshow=$form->textwithtooltip($langs->trans(\"Type\"),$langs->trans(\"TypePaymentDesc\"),2,1,img_help(1,''));\n\t\t\t\telse $valuetoshow=$langs->trans(\"Type\");\n            }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n            \t$valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='libelle_facture') { $valuetoshow=$langs->trans(\"LabelOnDocuments\"); }\n            if ($fieldlist[$field]=='country')         {\n                $valuetoshow=$langs->trans(\"Country\");\n            }\n            if ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); }\n            if ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); }\n            if ($fieldlist[$field]=='pcg_version' || $fieldlist[$field]=='fk_pcg_version') { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Comment\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\n            if ($valuetoshow != '')\n            {\n                print '<td align=\"'.$align.'\">';\n            \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n            \telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n            \telse print $valuetoshow;\n                print '</td>';\n             }\n             if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n        }\n\n        print '<td>';\n        print '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n        print '</td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '</tr>';\n\n        // Line to enter new values\n        print '<tr class=\"oddeven nodrag nodrop nohover\">';\n\n        $obj = new stdClass();\n        // If data was already input, we define them in obj to populate input fields.\n        if (GETPOST('actionadd'))\n        {\n            foreach ($fieldlist as $key=>$val)\n            {\n                if (GETPOST($val) != '')\n                \t$obj->$val=GETPOST($val);\n            }\n        }\n\n        $tmpaction = 'create';\n        $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n        $reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n        $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n        if (empty($reshook))\n        {\n       \t\tfieldListAccountingCategories($fieldlist,$obj,$tabname[$id],'add');\n        }\n\n        print '<td colspan=\"4\" align=\"right\">';\n       \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n        print '</td>';\n        print \"</tr>\";\n\n        $colspan=count($fieldlist)+3;\n        if ($id == 32) $colspan++;\n\n        print '<tr><td colspan=\"'.$colspan.'\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n    }\n\n    // List of available record in database\n    dol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $num = $db->num_rows($resql);\n        $i = 0;\n        $var=true;\n\n        $param = '&id='.$id;\n        if ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n        $paramwithsearch = $param;\n        if ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n        if ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n        if (GETPOST('from','alpha')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n        // There is several pages\n        if ($num > $listlimit)\n        {\n            print '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n            print_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n            print '</td></tr>';\n        }\n\n        // Title line with search boxes\n        print '<tr class=\"liste_titre liste_titre_add liste_titre_filter\">';\n        $filterfound=0;\n        foreach ($fieldlist as $field => $value)\n        {\n            $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\n            if ($showfield)\n            {\n                if ($value == 'country')\n                {\n                    print '<td class=\"liste_titre\">';\n                    print $form->select_country($search_country_id, 'search_country_id', '', 28, 'maxwidth200 maxwidthonsmartphone');\n                    print '</td>';\n                    $filterfound++;\n                }\n                else\n                {\n                    print '<td class=\"liste_titre\"></td>';\n                }\n            }\n        }\n        print '<td class=\"liste_titre\"></td>';\n        print '<td class=\"liste_titre\"></td>';\n        print '<td class=\"liste_titre\"></td>';\n        print '<td class=\"liste_titre\" align=\"center\">';\n    \tif ($filterfound)\n    \t{\n        \t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n        \tprint $searchpicto;\n    \t}\n    \tprint '</td>';\n    \tprint '</tr>';\n\n    \t// Title of lines\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n            $align=\"left\";\n            $sortable=1;\n            $valuetoshow='';\n\n            $valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            if ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n            if ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n            if ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='center';\n            }\n            if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n            \t$valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='country')         { $valuetoshow=$langs->trans(\"Country\"); }\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n            if ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); $sortable=0; }\n            if ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='fk_pcg_version')  { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountsparent\"); }\n            if ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n            if ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n        \tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Comment\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n            // Affiche nom du champ\n            if ($showfield)\n            {\n                print getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n            }\n        }\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n        print getTitleFieldOfList('');\n        print getTitleFieldOfList('');\n        print getTitleFieldOfList('');\n        print '</tr>';\n\n        if ($num)\n        {\n            // Lines with values\n            while ($i < $num)\n            {\n                $obj = $db->fetch_object($resql);\n                //print_r($obj);\n                print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n                if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n                {\n                    $tmpaction='edit';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    // Show fields\n                    if (empty($reshook)) fieldListAccountingCategories($fieldlist,$obj,$tabname[$id],'edit');\n\n                    print '<td></td>';\n                    print '<td></td>';\n                    print '<td align=\"center\">';\n                    print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n                    print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n                    print '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                    print '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n                    print '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n                    print '</td>';\n                    print '<td></td>';\n                }\n                else\n                {\n\t              \t$tmpaction = 'view';\n                    $parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook))\n                    {\n                        foreach ($fieldlist as $field => $value)\n                        {\n\n                            $showfield=1;\n                        \t$align=\"left\";\n                            $valuetoshow=$obj->{$fieldlist[$field]};\n                            if ($value == 'category_type')\n                            {\n                                $valuetoshow = yn($valuetoshow);\n                            }\n                            else if ($valuetoshow=='all') {\n                                $valuetoshow=$langs->trans('All');\n                            }\n                            else if ($fieldlist[$field]=='country') {\n                                if (empty($obj->country_code))\n                                {\n                                    $valuetoshow='-';\n                                }\n                                else\n                                {\n                                    $key=$langs->trans(\"Country\".strtoupper($obj->country_code));\n                                    $valuetoshow=($key != \"Country\".strtoupper($obj->country_code)?$obj->country_code.\" - \".$key:$obj->country);\n                                }\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_country') {\n                                $key=$langs->trans(\"Country\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Country\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_availability') {\n                                $langs->load(\"propal\");\n                                $key=$langs->trans(\"AvailabilityType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"AvailabilityType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_actioncomm') {\n                                $key=$langs->trans(\"Action\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Action\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') {\n                                $showfield=0;\n                            }\n\n                            $class='tddict';\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n                        }\n                    }\n\n                    // Can an entry be erased or disabled ?\n                    $iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n                    if (isset($obj->code))\n                    {\n                    \tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n                    }\n\n                    $canbemodified=$iserasable;\n\n                    $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n                    if ($param) $url .= '&'.$param;\n                    $url.='&';\n\n                    // Active\n                    print '<td align=\"center\" class=\"nowrap\">';\n                    if ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n                    else\n                 \t{\n                    \tprint $langs->trans(\"AlwaysActive\");\n                    }\n                    print \"</td>\";\n\n                    // Modify link\n                    if ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n                    else print '<td>&nbsp;</td>';\n\n                    // Delete link\n                    if ($iserasable)\n                    {\n                        print '<td align=\"center\">';\n                        if ($user->admin) print '<a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n                        //else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n                        print '</td>';\n                    }\n                    else print '<td>&nbsp;</td>';\n\n                    // Link to setup the group\n                    print '<td class=\"center\">';\n                    if (empty($obj->formula))\n                    {\n                        print '<a href=\"'.DOL_URL_ROOT.'/accountancy/admin/categories.php?action=display&save_lastsearch_values=1&account_category='.$obj->rowid.'\">';\n                        print $langs->trans(\"ListOfAccounts\");\n                        print '</a>';\n                    }\n                    print '</td>';\n                }\n                print \"</tr>\\n\";\n                $i++;\n            }\n        }\n    }\n    else {\n        dol_print_error($db);\n    }\n\n    print '</table>';\n\tprint '</div>';\n\n    print '</form>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListAccountingCategories($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form, $mysoc;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\tif (! empty($conf->accounting->enabled)) $formaccounting = new FormAccounting($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'country')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$fieldname='country';\n\t\t\tif ($context == 'add')\n\t\t\t{\n\t\t\t\t$fieldname='country_id';\n\t\t\t\tprint $form->select_country(GETPOST('country_id','int'), $fieldname, '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $form->select_country((! empty($obj->country_code)?$obj->country_code:(! empty($obj->country)?$obj->country:$mysoc->country_code)), $fieldname, '', 28, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'country_id')\n\t\t{\n\t\t\tif (! in_array('country',$fieldlist))\t// If there is already a field country, we don't show country_id (avoid duplicate)\n\t\t\t{\n\t\t\t\t$country_id = (! empty($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : 0);\n\t\t\t\tprint '<td>';\n\t\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$country_id.'\">';\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t}\n\t\telseif ($fieldlist[$field] == 'category_type') {\n\t\t    print '<td>';\n\t\t\tprint $form->selectyesno($fieldlist[$field],(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''),1);\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat minwidth100\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code') $class='maxwidth100';\n\t\t\tif ($fieldlist[$field]=='position') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='libelle') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2017\t\tAlexandre Spangaro   <aspangaro@zendsi.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * \\file\t\thtdocs/accountancy/admin/journals_list.php\n * \\ingroup\t\tAdvanced accountancy\n * \\brief\t\tSetup page to configure journals\n */\nrequire '../../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/accountancy/class/accountingjournal.class.php';\n\n$langs->load(\"admin\");\n$langs->load(\"compta\");\n$langs->load(\"accountancy\");\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=35;\n$rowid=GETPOST('rowid','alpha');\n$code=GETPOST('code','alpha');\n\n// Security access\nif (empty($user->rights->accounting->chartofaccount))\n{\n\taccessforbidden();\n}\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\nif (empty($sortfield)) $sortfield='code';\nif (empty($sortorder)) $sortorder='ASC';\n\n$error = 0;\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Sort order to show dictionary (0 is space). All other dictionaries (added by modules) will be at end of this.\n$taborder=array(35);\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[35]= MAIN_DB_PREFIX.\"accounting_journal\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[35]= \"DictionaryAccountancyJournal\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[35]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.nature, a.active FROM \".MAIN_DB_PREFIX.\"accounting_journal as a\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[35]=\"code ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[35]= \"code,label,nature\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[35]= \"code,label,nature\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[35]= \"code,label,nature\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[35]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[35]= ! empty($conf->accounting->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[35] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[35] = array();\n\n// Complete all arrays with entries found into modules\ncomplete_dictionary_with_modules($taborder,$tabname,$tablib,$tabsql,$tabsqlsort,$tabfield,$tabfieldvalue,$tabfieldinsert,$tabrowid,$tabcond,$tabhelp,$tabfieldcheck);\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n\t// Must match ids defined into eldy.lib.php\n\t$sourceList = array(\n\t\t\t'1' => $langs->trans('AccountingJournalType1'),\n\t\t\t'2' => $langs->trans('AccountingJournalType2'),\n\t\t\t'3' => $langs->trans('AccountingJournalType3'),\n\t\t\t'4' => $langs->trans('AccountingJournalType4'),\n\t\t\t'5' => $langs->trans('AccountingJournalType5'),\n\t\t\t'9' => $langs->trans('AccountingJournalType9')\n\t);\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n\t$search_country_id = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n\t$listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n\t$listfieldinsert=explode(',',$tabfieldinsert[$id]);\n\t$listfieldmodify=explode(',',$tabfieldinsert[$id]);\n\t$listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n\t// Check that all fields are filled\n\t$ok=1;\n\tforeach ($listfield as $f => $value)\n\t{\n\t\tif ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n\t\tif ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n\t\tif ($fieldnamekey == 'nature') $fieldnamekey = 'Nature';\n\t}\n\t// Other checks\n\tif (isset($_POST[\"code\"]))\n\t{\n\t\tif ($_POST[\"code\"]=='0')\n\t\t{\n\t\t\t$ok=0;\n\t\t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n\t\t}\n\t\t/*if (!is_numeric($_POST['code']))\t// disabled, code may not be in numeric base\n    \t{\n\t    \t$ok = 0;\n\t    \t$msg .= $langs->transnoentities('ErrorFieldFormat', $langs->transnoentities('Code')).'<br>';\n\t    }*/\n\t}\n\tif (! GETPOST('label','alpha'))\n\t{\n\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentitiesnoconv(\"Label\")), null, 'errors');\n\t\t$ok=0;\n\t}\n\n\t// Clean some parameters\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n\n\t// Si verif ok et action add, on ajoute la ligne\n\tif ($ok && GETPOST('actionadd'))\n\t{\n\t\tif ($tabrowid[$id])\n\t\t{\n\t\t\t// Recupere id libre pour insertion\n\t\t\t$newid=0;\n\t\t\t$sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n\t\t\t$result = $db->query($sql);\n\t\t\tif ($result)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($result);\n\t\t\t\t$newid=($obj->newid + 1);\n\n\t\t\t} else {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\n\t\t// Add new entry\n\t\t$sql = \"INSERT INTO \".$tabname[$id].\" (\";\n\t\t// List of fields\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $tabrowid[$id].\",\";\n\t\t$sql.= $tabfieldinsert[$id];\n\t\t$sql.=\",active,entity)\";\n\t\t$sql.= \" VALUES(\";\n\n\t\t// List of values\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n\t\t\t$sql.= $newid.\",\";\n\t\t$i=0;\n\t\tforeach ($listfieldinsert as $f => $value)\n\t\t{\n\t\t\tif ($value == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";  // For vat, we want/accept code = ''\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.=\",1,\".$conf->entity.\")\";\n\n\t\tdol_syslog(\"actionadd\", LOG_DEBUG);\n\t\t$result = $db->query($sql);\n\t\tif ($result)\t// Add is ok\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n\t\t\t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdol_print_error($db);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Si verif ok et action modify, on modifie la ligne\n\tif ($ok && GETPOST('actionmodify'))\n\t{\n\t\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\t\telse { $rowidcol=\"rowid\"; }\n\n\t\t// Modify entry\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET \";\n\t\t// Modifie valeur des champs\n\t\tif ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n\t\t{\n\t\t\t$sql.= $tabrowid[$id].\"=\";\n\t\t\t$sql.= \"'\".$db->escape($rowid).\"', \";\n\t\t}\n\t\t$i = 0;\n\t\tforeach ($listfieldmodify as $field)\n\t\t{\n\t\t\tif ($field == 'price' || preg_match('/^amount/i',$field) || $field == 'taux') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n\t\t\t}\n\t\t\telse if ($field == 'entity') {\n\t\t\t\t$_POST[$listfieldvalue[$i]] = $conf->entity;\n\t\t\t}\n\t\t\tif ($i) $sql.=\",\";\n\t\t\t$sql.= $field.\"=\";\n\t\t\tif ($_POST[$listfieldvalue[$i]] == '' && ! ($listfieldvalue[$i] == 'code' && $id == 10)) $sql.=\"null\";  // For vat, we want/accept code = ''\n\t\t\telse $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n\t\t\t$i++;\n\t\t}\n\t\t$sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\t\t$sql.=\" AND entity = \".$conf->entity;\n\n\t\tdol_syslog(\"actionmodify\", LOG_DEBUG);\n\t\t//print $sql;\n\t\t$resql = $db->query($sql);\n\t\tif (! $resql)\n\t\t{\n\t\t\tsetEventMessages($db->error(), null, 'errors');\n\t\t}\n\t}\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n\t//$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\t$sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t$sql.=\" AND entity = \".$conf->entity;\n\n\tdol_syslog(\"delete\", LOG_DEBUG);\n\t$result = $db->query($sql);\n\tif (! $result)\n\t{\n\t\tif ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n\t\t{\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n}\n\n// activate\nif ($action == $acts[0])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code='\".$code.\"'\";\n\t}\n\t$sql.=\" AND entity = \".$conf->entity;\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n// disable\nif ($action == $acts[1])\n{\n\tif ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n\telse { $rowidcol=\"rowid\"; }\n\n\tif ($rowid) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\t}\n\telseif ($code) {\n\t\t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code='\".$code.\"'\";\n\t}\n\t$sql.=\" AND entity = \".$conf->entity;\n\n\t$result = $db->query($sql);\n\tif (!$result)\n\t{\n\t\tdol_print_error($db);\n\t}\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans(\"DictionarySetup\");\n$linkback='';\nif ($id)\n{\n\t$titre.=' - '.$langs->trans($tablib[$id]);\n\t$titlepicto='title_accountancy';\n}\n\nprint load_fiche_titre($titre,$linkback,$titlepicto);\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n\tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n\t// Complete requete recherche valeurs avec critere de tri\n\t$sql=$tabsql[$id];\n\t$sql.= \" WHERE a.entity = \".$conf->entity;\n\n\t// If sort order is \"country\", we use country_code instead\n\tif ($sortfield == 'country') $sortfield='country_code';\n\t$sql.=$db->order($sortfield,$sortorder);\n\t$sql.=$db->plimit($listlimit+1,$offset);\n\n\t$fieldlist=explode(',',$tabfield[$id]);\n\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n\tprint '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n\tprint '<div class=\"div-table-responsive\">';\n\tprint '<table class=\"noborder\" width=\"100%\">';\n\n\t// Form to add a new line\n\tif ($tabname[$id])\n\t{\n\t\t$alabelisused=0;\n\t\t$var=false;\n\n\t\t$fieldlist=explode(',',$tabfield[$id]);\n\n\t\t// Line for title\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\t$align=\"left\";\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n\t\t\t{\n\t\t\t\t$valuetoshow=$langs->trans(\"Label\");\n\t\t\t}\n\t\t\tif ($fieldlist[$field]=='nature')          { $valuetoshow=$langs->trans(\"Nature\"); }\n\n\t\t\tif ($valuetoshow != '')\n\t\t\t{\n\t\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\t\tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n\t\t\t\telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n\t\t\t\telse print $valuetoshow;\n\t\t\t\tprint '</td>';\n\t\t\t }\n\t\t\t if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n\t\t}\n\n\t\tprint '<td>';\n\t\tprint '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n\t\tprint '</td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '<td style=\"min-width: 26px;\"></td>';\n\t\tprint '</tr>';\n\n\t\t// Line to enter new values\n\t\tprint '<tr class=\"oddeven nodrag nodrap nohover\">';\n\n\t\t$obj = new stdClass();\n\t\t// If data was already input, we define them in obj to populate input fields.\n\t\tif (GETPOST('actionadd'))\n\t\t{\n\t\t\tforeach ($fieldlist as $key=>$val)\n\t\t\t{\n\t\t\t\tif (GETPOST($val) != '')\n\t\t\t\t\t$obj->$val=GETPOST($val);\n\t\t\t}\n\t\t}\n\n\t\t$tmpaction = 'create';\n\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t$reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\tif (empty($reshook))\n\t\t{\n\t   \t\tfieldListJournal($fieldlist,$obj,$tabname[$id],'add');\n\t\t}\n\n\t\tprint '<td colspan=\"4\" align=\"right\">';\n\t   \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n\t\tprint '</td>';\n\t\tprint \"</tr>\";\n\n\t\tprint '<tr><td colspan=\"7\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n\t}\n\n\n\n\t// List of available record in database\n\tdol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$num = $db->num_rows($resql);\n\t\t$i = 0;\n\t\t$var=true;\n\n\t\t$param = '&id='.$id;\n\t\tif ($search_country_id > 0) $param.= '&search_country_id='.$search_country_id;\n\t\t$paramwithsearch = $param;\n\t\tif ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n\t\tif ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n\t\tif (GETPOST('from')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n\n\t\t// There is several pages\n\t\tif ($num > $listlimit)\n\t\t{\n\t\t\tprint '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n\t\t\tprint_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n\t\t\tprint '</td></tr>';\n\t\t}\n\n\t\t// Title line with search boxes\n\t\tprint '<tr class=\"liste_titre_filter liste_titre_add\">';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\"></td>';\n\t\tprint '<td class=\"liste_titre\" align=\"center\">';\n\t\tif ($filterfound)\n\t\t{\n\t\t\t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n\t\t\tprint $searchpicto;\n\t\t}\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\t// Title of lines\n\t\tprint '<tr class=\"liste_titre\">';\n\t\tforeach ($fieldlist as $field => $value)\n\t\t{\n\t\t\t// Determine le nom du champ par rapport aux noms possibles\n\t\t\t// dans les dictionnaires de donnees\n\t\t\t$showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n\t\t\t$align=\"left\";\n\t\t\t$sortable=1;\n\t\t\t$valuetoshow='';\n\t\t\t/*\n            $tmparray=getLabelOfField($fieldlist[$field]);\n            $showfield=$tmp['showfield'];\n            $valuetoshow=$tmp['valuetoshow'];\n            $align=$tmp['align'];\n            $sortable=$tmp['sortable'];\n\t\t\t*/\n\t\t\t$valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n\t\t\t$valuetoshow=$langs->trans($valuetoshow);   // try to translate\n\t\t\tif ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') { $valuetoshow=$langs->trans(\"Label\"); }\n\t\t\tif ($fieldlist[$field]=='nature')          { $valuetoshow=$langs->trans(\"Nature\"); }\n\n\t\t\t// Affiche nom du champ\n\t\t\tif ($showfield)\n\t\t\t{\n\t\t\t\tprint getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n\t\t\t}\n\t\t}\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n\t\tprint getTitleFieldOfList('');\n\t\tprint getTitleFieldOfList('');\n\t\tprint getTitleFieldOfList('');\n\t\tprint '</tr>';\n\n\t\tif ($num)\n\t\t{\n\t\t\t// Lines with values\n\t\t\twhile ($i < $num)\n\t\t\t{\n\t\t\t\t$obj = $db->fetch_object($resql);\n\t\t\t\t//print_r($obj);\n\t\t\t\tprint '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n\t\t\t\tif ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n\t\t\t\t{\n\t\t\t\t\t$tmpaction='edit';\n\t\t\t\t\t$parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\t// Show fields\n\t\t\t\t\tif (empty($reshook)) fieldListJournal($fieldlist,$obj,$tabname[$id],'edit');\n\n\t\t\t\t\tprint '<td align=\"center\" colspan=\"4\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n\t\t\t\t\tprint '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n\t\t\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t\t\tprint '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t  \t$tmpaction = 'view';\n\t\t\t\t\t$parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n\t\t\t\t\t$reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n\t\t\t\t\t$error=$hookmanager->error; $errors=$hookmanager->errors;\n\n\t\t\t\t\tif (empty($reshook))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach ($fieldlist as $field => $value)\n\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t$showfield=1;\n\t\t\t\t\t\t\t$align=\"left\";\n\t\t\t\t\t\t\t$valuetoshow=$obj->{$fieldlist[$field]};\n\t\t\t\t\t\t\tif ($valuetoshow=='all') {\n\t\t\t\t\t\t\t\t$valuetoshow=$langs->trans('All');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='nature' && $tabname[$id]==MAIN_DB_PREFIX.'accounting_journal') {\n\t\t\t\t\t\t\t\t$langs->load(\"accountancy\");\n\t\t\t\t\t\t\t\t$key=$langs->trans(\"AccountingJournalType\".strtoupper($obj->nature));\n\t\t\t\t\t\t\t\t$valuetoshow=($obj->nature && $key != \"AccountingJournalType\".strtoupper($obj->nature)?$key:$obj->{$fieldlist[$field]});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$class='tddict';\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Can an entry be erased or disabled ?\n\t\t\t\t\t$iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n\t\t\t\t\tif (isset($obj->code) && $id != 10)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'RECEP') { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t\telse if ($obj->code == 'EF0')   { $iserasable = 0; $canbedisabled = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\t$canbemodified=$iserasable;\n\n\t\t\t\t\t$url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n\t\t\t\t\tif ($param) $url .= '&'.$param;\n\t\t\t\t\t$url.='&';\n\n\t\t\t\t\t// Active\n\t\t\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\t\t\tif ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n\t\t\t\t\telse\n\t\t\t\t \t{\n\t\t\t\t \t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO'))) print $langs->trans(\"AlwaysActive\");\n\t\t\t\t \t\telse if (isset($obj->type) && in_array($obj->type, array('systemauto')) && empty($obj->active)) print $langs->trans(\"Deprecated\");\n\t\t\t\t  \t\telse if (isset($obj->type) && in_array($obj->type, array('system')) && ! empty($obj->active) && $obj->code != 'AC_OTH') print $langs->trans(\"UsedOnlyWithTypeOption\");\n\t\t\t\t\t\telse print $langs->trans(\"AlwaysActive\");\n\t\t\t\t\t}\n\t\t\t\t\tprint \"</td>\";\n\n\t\t\t\t\t// Modify link\n\t\t\t\t\tif ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\t// Delete link\n\t\t\t\t\tif ($iserasable)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<td align=\"center\">';\n\t\t\t\t\t\tif ($user->admin) print '<a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n\t\t\t\t\t\t//else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t}\n\t\t\t\t\telse print '<td>&nbsp;</td>';\n\n\t\t\t\t\tprint '<td></td>';\n\n\t\t\t\t\tprint '</td>';\n\t\t\t\t}\n\n\t\t\t\tprint \"</tr>\\n\";\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tdol_print_error($db);\n\t}\n\n\tprint '</table>';\n\tprint '</div>';\n\n\tprint '</form>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListJournal($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form, $mysoc;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'nature')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('nature', $sourceList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat minwidth100\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code')  $class='maxwidth100';\n\t\t\tif ($fieldlist[$field]=='label') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n", "<?php\n/* Copyright (C) 2004\t\tRodolphe Quiedeville\t<rodolphe@quiedeville.org>\n * Copyright (C) 2004-2015\tLaurent Destailleur\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2016\tJuanjo Menent\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2011-2015\tPhilippe Grand\t\t\t<philippe.grand@atoo-net.com>\n * Copyright (C) 2011\t\tRemy Younes\t\t\t\t<ryounes@gmail.com>\n * Copyright (C) 2012-2015\tMarcos Garc\u00eda\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2012\t\tChristophe Battarel\t\t<christophe.battarel@ltairis.fr>\n * Copyright (C) 2011-2016\tAlexandre Spangaro\t\t<aspangaro.dolibarr@gmail.com>\n * Copyright (C) 2015\t\tFerran Marcet\t\t\t<fmarcet@2byte.es>\n * Copyright (C) 2016\t\tRapha\u00ebl Doursenaud\t\t<rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/admin/dict.php\n *\t\t\\ingroup    setup\n *\t\t\\brief      Page to administer data tables\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nif (! empty($conf->accounting->enabled)) require_once DOL_DOCUMENT_ROOT . '/core/class/html.formaccounting.class.php';\n\n$langs->load(\"errors\");\n$langs->load(\"admin\");\n$langs->load(\"main\");\n$langs->load(\"companies\");\n$langs->load(\"resource\");\n$langs->load(\"holiday\");\n$langs->load(\"accountancy\");\n$langs->load(\"hrm\");\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$id=GETPOST('id','int');\n$rowid=GETPOST('rowid','alpha');\n$entity=GETPOST('entity','int');\n$code=GETPOST('code','alpha');\n\n$allowed=$user->admin;\nif ($id == 7 && ! empty($user->rights->accounting->chartofaccount)) $allowed=1;     // Tax page allowed to manager of chart account\nif ($id == 10 && ! empty($user->rights->accounting->chartofaccount)) $allowed=1;    // Vat page allowed to manager of chart account\nif (! $allowed) accessforbidden();\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset');\n$listlimit=GETPOST('listlimit')>0?GETPOST('listlimit'):1000;\t// To avoid too long dictionaries\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n$search_country_id = GETPOST('search_country_id','int');\nif ($search_country_id == '' && ($id == 2 || $id == 3 || $id == 10))\t// Not a so good idea to force on current country for all dictionaries. Some tables have entries that are for all countries, we must be able to see them, so this is done for dedicated dictionaries only.\n{\n\t$search_country_id = $mysoc->country_id;\n}\n$search_code = GETPOST('search_code','alpha');\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// This page is a generic page to edit dictionaries\n// Put here declaration of dictionaries properties\n\n// Sort order to show dictionary (0 is space). All other dictionaries (added by modules) will be at end of this.\n$taborder=array(9,0,4,3,2,0,1,8,19,16,27,0,5,11,0,33,34,0,6,0,29,0,7,24,28,17,35,36,0,10,23,12,13,0,14,0,22,20,18,21,0,15,30,0,26,0,);\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[1] = MAIN_DB_PREFIX.\"c_forme_juridique\";\n$tabname[2] = MAIN_DB_PREFIX.\"c_departements\";\n$tabname[3] = MAIN_DB_PREFIX.\"c_regions\";\n$tabname[4] = MAIN_DB_PREFIX.\"c_country\";\n$tabname[5] = MAIN_DB_PREFIX.\"c_civility\";\n$tabname[6] = MAIN_DB_PREFIX.\"c_actioncomm\";\n$tabname[7] = MAIN_DB_PREFIX.\"c_chargesociales\";\n$tabname[8] = MAIN_DB_PREFIX.\"c_typent\";\n$tabname[9] = MAIN_DB_PREFIX.\"c_currencies\";\n$tabname[10]= MAIN_DB_PREFIX.\"c_tva\";\n$tabname[11]= MAIN_DB_PREFIX.\"c_type_contact\";\n$tabname[12]= MAIN_DB_PREFIX.\"c_payment_term\";\n$tabname[13]= MAIN_DB_PREFIX.\"c_paiement\";\n$tabname[14]= MAIN_DB_PREFIX.\"c_ecotaxe\";\n$tabname[15]= MAIN_DB_PREFIX.\"c_paper_format\";\n$tabname[16]= MAIN_DB_PREFIX.\"c_prospectlevel\";\n$tabname[17]= MAIN_DB_PREFIX.\"c_type_fees\";\n$tabname[18]= MAIN_DB_PREFIX.\"c_shipment_mode\";\n$tabname[19]= MAIN_DB_PREFIX.\"c_effectif\";\n$tabname[20]= MAIN_DB_PREFIX.\"c_input_method\";\n$tabname[21]= MAIN_DB_PREFIX.\"c_availability\";\n$tabname[22]= MAIN_DB_PREFIX.\"c_input_reason\";\n$tabname[23]= MAIN_DB_PREFIX.\"c_revenuestamp\";\n$tabname[24]= MAIN_DB_PREFIX.\"c_type_resource\";\n//$tabname[25]= MAIN_DB_PREFIX.\"c_email_templates\";\n$tabname[26]= MAIN_DB_PREFIX.\"c_units\";\n$tabname[27]= MAIN_DB_PREFIX.\"c_stcomm\";\n$tabname[28]= MAIN_DB_PREFIX.\"c_holiday_types\";\n$tabname[29]= MAIN_DB_PREFIX.\"c_lead_status\";\n$tabname[30]= MAIN_DB_PREFIX.\"c_format_cards\";\n//$tabname[31]= MAIN_DB_PREFIX.\"accounting_system\";\n//$tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";\n$tabname[33]= MAIN_DB_PREFIX.\"c_hrm_department\";\n$tabname[34]= MAIN_DB_PREFIX.\"c_hrm_function\";\n$tabname[35]= MAIN_DB_PREFIX.\"c_exp_tax_cat\";\n$tabname[36]= MAIN_DB_PREFIX.\"c_exp_tax_range\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[1] = \"DictionaryCompanyJuridicalType\";\n$tablib[2] = \"DictionaryCanton\";\n$tablib[3] = \"DictionaryRegion\";\n$tablib[4] = \"DictionaryCountry\";\n$tablib[5] = \"DictionaryCivility\";\n$tablib[6] = \"DictionaryActions\";\n$tablib[7] = \"DictionarySocialContributions\";\n$tablib[8] = \"DictionaryCompanyType\";\n$tablib[9] = \"DictionaryCurrency\";\n$tablib[10]= \"DictionaryVAT\";\n$tablib[11]= \"DictionaryTypeContact\";\n$tablib[12]= \"DictionaryPaymentConditions\";\n$tablib[13]= \"DictionaryPaymentModes\";\n$tablib[14]= \"DictionaryEcotaxe\";\n$tablib[15]= \"DictionaryPaperFormat\";\n$tablib[16]= \"DictionaryProspectLevel\";\n$tablib[17]= \"DictionaryFees\";\n$tablib[18]= \"DictionarySendingMethods\";\n$tablib[19]= \"DictionaryStaff\";\n$tablib[20]= \"DictionaryOrderMethods\";\n$tablib[21]= \"DictionaryAvailability\";\n$tablib[22]= \"DictionarySource\";\n$tablib[23]= \"DictionaryRevenueStamp\";\n$tablib[24]= \"DictionaryResourceType\";\n//$tablib[25]= \"DictionaryEMailTemplates\";\n$tablib[26]= \"DictionaryUnits\";\n$tablib[27]= \"DictionaryProspectStatus\";\n$tablib[28]= \"DictionaryHolidayTypes\";\n$tablib[29]= \"DictionaryOpportunityStatus\";\n$tablib[30]= \"DictionaryFormatCards\";\n//$tablib[31]= \"DictionaryAccountancysystem\";\n//$tablib[32]= \"DictionaryAccountancyCategory\";\n$tablib[33]= \"DictionaryDepartment\";\n$tablib[34]= \"DictionaryFunction\";\n$tablib[35]= \"DictionaryExpenseTaxCat\";\n$tablib[36]= \"DictionaryExpenseTaxRange\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[1] = \"SELECT f.rowid as rowid, f.code, f.libelle, c.code as country_code, c.label as country, f.active FROM \".MAIN_DB_PREFIX.\"c_forme_juridique as f, \".MAIN_DB_PREFIX.\"c_country as c WHERE f.fk_pays=c.rowid\";\n$tabsql[2] = \"SELECT d.rowid as rowid, d.code_departement as code, d.nom as libelle, d.fk_region as region_id, r.nom as region, c.code as country_code, c.label as country, d.active FROM \".MAIN_DB_PREFIX.\"c_departements as d, \".MAIN_DB_PREFIX.\"c_regions as r, \".MAIN_DB_PREFIX.\"c_country as c WHERE d.fk_region=r.code_region and r.fk_pays=c.rowid and r.active=1 and c.active=1\";\n$tabsql[3] = \"SELECT r.rowid as rowid, r.code_region as code, r.nom as libelle, r.fk_pays as country_id, c.code as country_code, c.label as country, r.active FROM \".MAIN_DB_PREFIX.\"c_regions as r, \".MAIN_DB_PREFIX.\"c_country as c WHERE r.fk_pays=c.rowid and c.active=1\";\n$tabsql[4] = \"SELECT c.rowid as rowid, c.code, c.label, c.active, c.favorite FROM \".MAIN_DB_PREFIX.\"c_country AS c\";\n$tabsql[5] = \"SELECT c.rowid as rowid, c.code as code, c.label, c.active FROM \".MAIN_DB_PREFIX.\"c_civility AS c\";\n$tabsql[6] = \"SELECT a.id    as rowid, a.code as code, a.libelle AS libelle, a.type, a.active, a.module, a.color, a.position FROM \".MAIN_DB_PREFIX.\"c_actioncomm AS a\";\n$tabsql[7] = \"SELECT a.id    as rowid, a.code as code, a.libelle AS libelle, a.accountancy_code as accountancy_code, a.deductible, c.code as country_code, c.label as country, a.fk_pays as country_id, a.active FROM \".MAIN_DB_PREFIX.\"c_chargesociales AS a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_pays=c.rowid and c.active=1\";\n$tabsql[8] = \"SELECT t.id\t as rowid, t.code as code, t.libelle, t.fk_country as country_id, c.code as country_code, c.label as country, t.position, t.active FROM \".MAIN_DB_PREFIX.\"c_typent as t LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON t.fk_country=c.rowid\";\n$tabsql[9] = \"SELECT c.code_iso as code, c.label, c.unicode, c.active FROM \".MAIN_DB_PREFIX.\"c_currencies AS c\";\n$tabsql[10]= \"SELECT t.rowid, t.code, t.taux, t.localtax1_type, t.localtax1, t.localtax2_type, t.localtax2, c.label as country, c.code as country_code, t.fk_pays as country_id, t.recuperableonly, t.note, t.active, t.accountancy_code_sell, t.accountancy_code_buy FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c WHERE t.fk_pays=c.rowid\";\n$tabsql[11]= \"SELECT t.rowid as rowid, t.element, t.source, t.code, t.libelle, t.position, t.active FROM \".MAIN_DB_PREFIX.\"c_type_contact AS t\";\n$tabsql[12]= \"SELECT c.rowid as rowid, c.code, c.libelle, c.libelle_facture, c.nbjour, c.type_cdr, c.decalage, c.active, c.sortorder, c.entity FROM \".MAIN_DB_PREFIX.\"c_payment_term AS c WHERE c.entity = \" . getEntity($tabname[12]);\n$tabsql[13]= \"SELECT c.id    as rowid, c.code, c.libelle, c.type, c.active, c.entity FROM \".MAIN_DB_PREFIX.\"c_paiement AS c WHERE c.entity = \" . getEntity($tabname[13]);\n$tabsql[14]= \"SELECT e.rowid as rowid, e.code as code, e.libelle, e.price, e.organization, e.fk_pays as country_id, c.code as country_code, c.label as country, e.active FROM \".MAIN_DB_PREFIX.\"c_ecotaxe AS e, \".MAIN_DB_PREFIX.\"c_country as c WHERE e.fk_pays=c.rowid and c.active=1\";\n$tabsql[15]= \"SELECT rowid   as rowid, code, label as libelle, width, height, unit, active FROM \".MAIN_DB_PREFIX.\"c_paper_format\";\n$tabsql[16]= \"SELECT code, label as libelle, sortorder, active FROM \".MAIN_DB_PREFIX.\"c_prospectlevel\";\n$tabsql[17]= \"SELECT id      as rowid, code, label, accountancy_code, active FROM \".MAIN_DB_PREFIX.\"c_type_fees\";\n$tabsql[18]= \"SELECT rowid   as rowid, code, libelle, tracking, active FROM \".MAIN_DB_PREFIX.\"c_shipment_mode\";\n$tabsql[19]= \"SELECT id      as rowid, code, libelle, active FROM \".MAIN_DB_PREFIX.\"c_effectif\";\n$tabsql[20]= \"SELECT rowid   as rowid, code, libelle, active FROM \".MAIN_DB_PREFIX.\"c_input_method\";\n$tabsql[21]= \"SELECT c.rowid as rowid, code, label, active FROM \".MAIN_DB_PREFIX.\"c_availability AS c\";\n$tabsql[22]= \"SELECT rowid   as rowid, code, label, active FROM \".MAIN_DB_PREFIX.\"c_input_reason\";\n$tabsql[23]= \"SELECT t.rowid as rowid, t.taux, t.revenuestamp_type, c.label as country, c.code as country_code, t.fk_pays as country_id, t.note, t.active, t.accountancy_code_sell, t.accountancy_code_buy FROM \".MAIN_DB_PREFIX.\"c_revenuestamp as t, \".MAIN_DB_PREFIX.\"c_country as c WHERE t.fk_pays=c.rowid\";\n$tabsql[24]= \"SELECT rowid   as rowid, code, label, active FROM \".MAIN_DB_PREFIX.\"c_type_resource\";\n//$tabsql[25]= \"SELECT rowid   as rowid, label, type_template, private, position, topic, content_lines, content, active FROM \".MAIN_DB_PREFIX.\"c_email_templates WHERE entity IN (\".getEntity('email_template').\")\";\n$tabsql[26]= \"SELECT rowid   as rowid, code, label, short_label, active FROM \".MAIN_DB_PREFIX.\"c_units\";\n$tabsql[27]= \"SELECT id      as rowid, code, libelle, active FROM \".MAIN_DB_PREFIX.\"c_stcomm\";\n$tabsql[28]= \"SELECT h.rowid as rowid, h.code, h.label, h.affect, h.delay, h.newbymonth, h.fk_country as country_id, c.code as country_code, c.label as country, h.active FROM \".MAIN_DB_PREFIX.\"c_holiday_types as h LEFT JOIN \".MAIN_DB_PREFIX.\"c_country as c ON h.fk_country=c.rowid\";\n$tabsql[29]= \"SELECT rowid   as rowid, code, label, percent, position, active FROM \".MAIN_DB_PREFIX.\"c_lead_status\";\n$tabsql[30]= \"SELECT rowid, code, name, paper_size, orientation, metric, leftmargin, topmargin, nx, ny, spacex, spacey, width, height, font_size, custom_x, custom_y, active FROM \".MAIN_DB_PREFIX.\"c_format_cards\";\n//$tabsql[31]= \"SELECT s.rowid as rowid, pcg_version, s.label, s.active FROM \".MAIN_DB_PREFIX.\"accounting_system as s\";\n//$tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.sens, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";\n$tabsql[33]= \"SELECT rowid, pos, code, label, active FROM \".MAIN_DB_PREFIX.\"c_hrm_department\";\n$tabsql[34]= \"SELECT rowid, pos, code, label, c_level, active FROM \".MAIN_DB_PREFIX.\"c_hrm_function\";\n$tabsql[35]= \"SELECT c.rowid, c.label, c.active, c.entity FROM \".MAIN_DB_PREFIX.\"c_exp_tax_cat c\";\n$tabsql[36]= \"SELECT r.rowid, r.fk_c_exp_tax_cat, r.range_ik, r.active, r.entity FROM \".MAIN_DB_PREFIX.\"c_exp_tax_range r\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[1] =\"country ASC, code ASC\";\n$tabsqlsort[2] =\"country ASC, code ASC\";\n$tabsqlsort[3] =\"country ASC, code ASC\";\n$tabsqlsort[4] =\"code ASC\";\n$tabsqlsort[5] =\"label ASC\";\n$tabsqlsort[6] =\"a.type ASC, a.module ASC, a.position ASC, a.code ASC\";\n$tabsqlsort[7] =\"country ASC, code ASC, a.libelle ASC\";\n$tabsqlsort[8] =\"country DESC,\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?' t.position ASC,':'').\" libelle ASC\";\n$tabsqlsort[9] =\"label ASC\";\n$tabsqlsort[10]=\"country ASC, code ASC, taux ASC, recuperableonly ASC, localtax1 ASC, localtax2 ASC\";\n$tabsqlsort[11]=\"t.element ASC, t.source ASC, t.position ASC, t.code ASC\";\n$tabsqlsort[12]=\"sortorder ASC, code ASC\";\n$tabsqlsort[13]=\"code ASC\";\n$tabsqlsort[14]=\"country ASC, e.organization ASC, code ASC\";\n$tabsqlsort[15]=\"rowid ASC\";\n$tabsqlsort[16]=\"sortorder ASC\";\n$tabsqlsort[17]=\"code ASC\";\n$tabsqlsort[18]=\"code ASC, libelle ASC\";\n$tabsqlsort[19]=\"id ASC\";\n$tabsqlsort[20]=\"code ASC, libelle ASC\";\n$tabsqlsort[21]=\"code ASC, label ASC\";\n$tabsqlsort[22]=\"code ASC, label ASC\";\n$tabsqlsort[23]=\"country ASC, taux ASC\";\n$tabsqlsort[24]=\"code ASC,label ASC\";\n//$tabsqlsort[25]=\"label ASC\";\n$tabsqlsort[26]=\"code ASC\";\n$tabsqlsort[27]=\"code ASC\";\n$tabsqlsort[28]=\"country ASC, code ASC\";\n$tabsqlsort[29]=\"position ASC\";\n$tabsqlsort[30]=\"code ASC\";\n//$tabsqlsort[31]=\"pcg_version ASC\";\n//$tabsqlsort[32]=\"position ASC\";\n$tabsqlsort[33]=\"code ASC\";\n$tabsqlsort[34]=\"code ASC\";\n$tabsqlsort[35]=\"c.label ASC\";\n$tabsqlsort[36]=\"r.fk_c_exp_tax_cat ASC, r.range_ik ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[1] = \"code,libelle,country\";\n$tabfield[2] = \"code,libelle,region_id,region,country\";   // \"code,libelle,region,country_code-country\"\n$tabfield[3] = \"code,libelle,country_id,country\";\n$tabfield[4] = \"code,label\";\n$tabfield[5] = \"code,label\";\n$tabfield[6] = \"code,libelle,type,color,position\";\n$tabfield[7] = \"code,libelle,country,accountancy_code,deductible\";\n$tabfield[8] = \"code,libelle,country_id,country\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?',position':'');\n$tabfield[9] = \"code,label,unicode\";\n$tabfield[10]= \"country_id,country,code,taux,localtax1_type,localtax1,localtax2_type,localtax2,recuperableonly,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfield[11]= \"element,source,code,libelle,position\";\n$tabfield[12]= \"code,libelle,libelle_facture,nbjour,type_cdr,decalage,sortorder,entity\";\n$tabfield[13]= \"code,libelle,type,entity\";\n$tabfield[14]= \"code,libelle,price,organization,country_id,country\";\n$tabfield[15]= \"code,libelle,width,height,unit\";\n$tabfield[16]= \"code,libelle,sortorder\";\n$tabfield[17]= \"code,label,accountancy_code\";\n$tabfield[18]= \"code,libelle,tracking\";\n$tabfield[19]= \"code,libelle\";\n$tabfield[20]= \"code,libelle\";\n$tabfield[21]= \"code,label\";\n$tabfield[22]= \"code,label\";\n$tabfield[23]= \"country_id,country,taux,revenuestamp_type,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfield[24]= \"code,label\";\n//$tabfield[25]= \"label,type_template,private,position,topic,content_lines,content\";\n$tabfield[26]= \"code,label,short_label\";\n$tabfield[27]= \"code,libelle\";\n$tabfield[28]= \"code,label,affect,delay,newbymonth,country_id,country\";\n$tabfield[29]= \"code,label,percent,position\";\n$tabfield[30]= \"code,name,paper_size,orientation,metric,leftmargin,topmargin,nx,ny,spacex,spacey,width,height,font_size,custom_x,custom_y\";\n//$tabfield[31]= \"pcg_version,label\";\n//$tabfield[32]= \"code,label,range_account,sens,category_type,formula,position,country_id,country\";\n$tabfield[33]= \"code,label\";\n$tabfield[34]= \"code,label\";\n$tabfield[35]= \"label\";\n$tabfield[36]= \"range_ik,fk_c_exp_tax_cat\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[1] = \"code,libelle,country\";\n$tabfieldvalue[2] = \"code,libelle,region\";   // \"code,libelle,region\"\n$tabfieldvalue[3] = \"code,libelle,country\";\n$tabfieldvalue[4] = \"code,label\";\n$tabfieldvalue[5] = \"code,label\";\n$tabfieldvalue[6] = \"code,libelle,type,color,position\";\n$tabfieldvalue[7] = \"code,libelle,country,accountancy_code,deductible\";\n$tabfieldvalue[8] = \"code,libelle,country\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?',position':'');\n$tabfieldvalue[9] = \"code,label,unicode\";\n$tabfieldvalue[10]= \"country,code,taux,localtax1_type,localtax1,localtax2_type,localtax2,recuperableonly,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldvalue[11]= \"element,source,code,libelle,position\";\n$tabfieldvalue[12]= \"code,libelle,libelle_facture,nbjour,type_cdr,decalage,sortorder\";\n$tabfieldvalue[13]= \"code,libelle,type\";\n$tabfieldvalue[14]= \"code,libelle,price,organization,country\";\n$tabfieldvalue[15]= \"code,libelle,width,height,unit\";\n$tabfieldvalue[16]= \"code,libelle,sortorder\";\n$tabfieldvalue[17]= \"code,label,accountancy_code\";\n$tabfieldvalue[18]= \"code,libelle,tracking\";\n$tabfieldvalue[19]= \"code,libelle\";\n$tabfieldvalue[20]= \"code,libelle\";\n$tabfieldvalue[21]= \"code,label\";\n$tabfieldvalue[22]= \"code,label\";\n$tabfieldvalue[23]= \"country,taux,revenuestamp_type,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldvalue[24]= \"code,label\";\n//$tabfieldvalue[25]= \"label,type_template,private,position,topic,content_lines,content\";\n$tabfieldvalue[26]= \"code,label,short_label\";\n$tabfieldvalue[27]= \"code,libelle\";\n$tabfieldvalue[28]= \"code,label,affect,delay,newbymonth,country\";\n$tabfieldvalue[29]= \"code,label,percent,position\";\n$tabfieldvalue[30]= \"code,name,paper_size,orientation,metric,leftmargin,topmargin,nx,ny,spacex,spacey,width,height,font_size,custom_x,custom_y\";\n//$tabfieldvalue[31]= \"pcg_version,label\";\n//$tabfieldvalue[32]= \"code,label,range_account,sens,category_type,formula,position,country\";\n$tabfieldvalue[33]= \"code,label\";\n$tabfieldvalue[34]= \"code,label\";\n$tabfieldvalue[35]= \"label\";\n$tabfieldvalue[36]= \"range_ik,fk_c_exp_tax_cat\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[1] = \"code,libelle,fk_pays\";\n$tabfieldinsert[2] = \"code_departement,nom,fk_region\";\n$tabfieldinsert[3] = \"code_region,nom,fk_pays\";\n$tabfieldinsert[4] = \"code,label\";\n$tabfieldinsert[5] = \"code,label\";\n$tabfieldinsert[6] = \"code,libelle,type,color,position\";\n$tabfieldinsert[7] = \"code,libelle,fk_pays,accountancy_code,deductible\";\n$tabfieldinsert[8] = \"code,libelle,fk_country\".(! empty($conf->global->SOCIETE_SORT_ON_TYPEENT)?',position':'');\n$tabfieldinsert[9] = \"code_iso,label,unicode\";\n$tabfieldinsert[10]= \"fk_pays,code,taux,localtax1_type,localtax1,localtax2_type,localtax2,recuperableonly,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldinsert[11]= \"element,source,code,libelle,position\";\n$tabfieldinsert[12]= \"code,libelle,libelle_facture,nbjour,type_cdr,decalage,sortorder,entity\";\n$tabfieldinsert[13]= \"code,libelle,type,entity\";\n$tabfieldinsert[14]= \"code,libelle,price,organization,fk_pays\";\n$tabfieldinsert[15]= \"code,label,width,height,unit\";\n$tabfieldinsert[16]= \"code,label,sortorder\";\n$tabfieldinsert[17]= \"code,label,accountancy_code\";\n$tabfieldinsert[18]= \"code,libelle,tracking\";\n$tabfieldinsert[19]= \"code,libelle\";\n$tabfieldinsert[20]= \"code,libelle\";\n$tabfieldinsert[21]= \"code,label\";\n$tabfieldinsert[22]= \"code,label\";\n$tabfieldinsert[23]= \"fk_pays,taux,revenuestamp_type,accountancy_code_sell,accountancy_code_buy,note\";\n$tabfieldinsert[24]= \"code,label\";\n//$tabfieldinsert[25]= \"label,type_template,private,position,topic,content_lines,content,entity\";\n$tabfieldinsert[26]= \"code,label,short_label\";\n$tabfieldinsert[27]= \"code,libelle\";\n$tabfieldinsert[28]= \"code,label,affect,delay,newbymonth,fk_country\";\n$tabfieldinsert[29]= \"code,label,percent,position\";\n$tabfieldinsert[30]= \"code,name,paper_size,orientation,metric,leftmargin,topmargin,nx,ny,spacex,spacey,width,height,font_size,custom_x,custom_y\";\n//$tabfieldinsert[31]= \"pcg_version,label\";\n//$tabfieldinsert[32]= \"code,label,range_account,sens,category_type,formula,position,fk_country\";\n$tabfieldinsert[33]= \"code,label\";\n$tabfieldinsert[34]= \"code,label\";\n$tabfieldinsert[35]= \"label\";\n$tabfieldinsert[36]= \"range_ik,fk_c_exp_tax_cat\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[1] = \"\";\n$tabrowid[2] = \"\";\n$tabrowid[3] = \"\";\n$tabrowid[4] = \"rowid\";\n$tabrowid[5] = \"rowid\";\n$tabrowid[6] = \"id\";\n$tabrowid[7] = \"id\";\n$tabrowid[8] = \"id\";\n$tabrowid[9] = \"code_iso\";\n$tabrowid[10]= \"\";\n$tabrowid[11]= \"rowid\";\n$tabrowid[12]= \"rowid\";\n$tabrowid[13]= \"id\";\n$tabrowid[14]= \"\";\n$tabrowid[15]= \"\";\n$tabrowid[16]= \"code\";\n$tabrowid[17]= \"id\";\n$tabrowid[18]= \"rowid\";\n$tabrowid[19]= \"id\";\n$tabrowid[20]= \"\";\n$tabrowid[21]= \"rowid\";\n$tabrowid[22]= \"rowid\";\n$tabrowid[23]= \"\";\n$tabrowid[24]= \"\";\n//$tabrowid[25]= \"\";\n$tabrowid[26]= \"\";\n$tabrowid[27]= \"id\";\n$tabrowid[28]= \"\";\n$tabrowid[29]= \"\";\n$tabrowid[30]= \"\";\n//$tabrowid[31]= \"\";\n//$tabrowid[32]= \"\";\n$tabrowid[33]= \"rowid\";\n$tabrowid[34]= \"rowid\";\n$tabrowid[35]= \"\";\n$tabrowid[36]= \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[1] = (! empty($conf->societe->enabled));\n$tabcond[2] = true;\n$tabcond[3] = true;\n$tabcond[4] = true;\n$tabcond[5] = (! empty($conf->societe->enabled) || ! empty($conf->adherent->enabled));\n$tabcond[6] = ! empty($conf->agenda->enabled);\n$tabcond[7] = ! empty($conf->tax->enabled);\n$tabcond[8] = ! empty($conf->societe->enabled);\n$tabcond[9] = true;\n$tabcond[10]= true;\n$tabcond[11]= (! empty($conf->societe->enabled));\n$tabcond[12]= (! empty($conf->commande->enabled) || ! empty($conf->propal->enabled) || ! empty($conf->facture->enabled) || ! empty($conf->fournisseur->enabled));\n$tabcond[13]= (! empty($conf->commande->enabled) || ! empty($conf->propal->enabled) || ! empty($conf->facture->enabled) || ! empty($conf->fournisseur->enabled));\n$tabcond[14]= (! empty($conf->product->enabled) && ! empty($conf->ecotax->enabled));\n$tabcond[15]= true;\n$tabcond[16]= (! empty($conf->societe->enabled) && empty($conf->global->SOCIETE_DISABLE_PROSPECTS));\n$tabcond[17]= (! empty($conf->deplacement->enabled) || ! empty($conf->expensereport->enabled));\n$tabcond[18]= ! empty($conf->expedition->enabled);\n$tabcond[19]= ! empty($conf->societe->enabled);\n$tabcond[20]= ! empty($conf->fournisseur->enabled);\n$tabcond[21]= ! empty($conf->propal->enabled);\n$tabcond[22]= (! empty($conf->commande->enabled) || ! empty($conf->propal->enabled));\n$tabcond[23]= true;\n$tabcond[24]= ! empty($conf->resource->enabled);\n//$tabcond[25]= true; // && ! empty($conf->global->MAIN_EMAIL_EDIT_TEMPLATE_FROM_DIC);\n$tabcond[26]= ! empty($conf->product->enabled);\n$tabcond[27]= ! empty($conf->societe->enabled);\n$tabcond[28]= ! empty($conf->holiday->enabled);\n$tabcond[29]= ! empty($conf->projet->enabled);\n$tabcond[30]= ! empty($conf->label->enabled);\n//$tabcond[31]= ! empty($conf->accounting->enabled);\n//$tabcond[32]= ! empty($conf->accounting->enabled);\n$tabcond[33]= ! empty($conf->hrm->enabled);\n$tabcond[34]= ! empty($conf->hrm->enabled);\n$tabcond[35]= ! empty($conf->expensereport->enabled);\n$tabcond[36]= ! empty($conf->expensereport->enabled);\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[1]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[2]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[3]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[4]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[5]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[6]  = array('code'=>$langs->trans(\"EnterAnyCode\"), 'color'=>$langs->trans(\"ColorFormat\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[7]  = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[8]  = array('code'=>$langs->trans(\"EnterAnyCode\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[9]  = array('code'=>$langs->trans(\"EnterAnyCode\"), 'unicode'=>$langs->trans(\"UnicodeCurrency\"));\n$tabhelp[10] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'taux'=>$langs->trans(\"SellTaxRate\"), 'recuperableonly'=>$langs->trans(\"RecuperableOnly\"), 'localtax1_type'=>$langs->trans(\"LocalTaxDesc\"), 'localtax2_type'=>$langs->trans(\"LocalTaxDesc\"));\n$tabhelp[11] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[12] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'type_cdr'=>$langs->trans(\"TypeCdr\"));\n$tabhelp[13] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[14] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[15] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[16] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[17] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[18] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'tracking'=>$langs->trans(\"UrlTrackingDesc\"));\n$tabhelp[19] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[20] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[21] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[22] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[23] = array('revenuestamp_type'=>'FixedOfPercent');\n$tabhelp[24] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n//$tabhelp[25] = array('topic'=>$langs->trans('SeeSubstitutionVars'),'content'=>$langs->trans('SeeSubstitutionVars'),'content_lines'=>$langs->trans('SeeSubstitutionVars'),'type_template'=>$langs->trans(\"TemplateForElement\"),'private'=>$langs->trans(\"TemplateIsVisibleByOwnerOnly\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[26] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[27] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[28] = array('affect'=>$langs->trans(\"FollowedByACounter\"),'delay'=>$langs->trans(\"MinimumNoticePeriod\"), 'newbymonth'=>$langs->trans(\"NbAddedAutomatically\"));\n$tabhelp[29] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'percent'=>$langs->trans(\"OpportunityPercent\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n$tabhelp[30] = array('code'=>$langs->trans(\"EnterAnyCode\"), 'name'=>$langs->trans(\"LabelName\"), 'paper_size'=>$langs->trans(\"LabelPaperSize\"));\n//$tabhelp[31] = array('pcg_version'=>$langs->trans(\"EnterAnyCode\"));\n//$tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[33] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[34] = array('code'=>$langs->trans(\"EnterAnyCode\"));\n$tabhelp[35]= array();\n$tabhelp[36]= array('range_ik'=>$langs->trans('PrevRangeToThisRange'));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[1]  = array();\n$tabfieldcheck[2]  = array();\n$tabfieldcheck[3]  = array();\n$tabfieldcheck[4]  = array();\n$tabfieldcheck[5]  = array();\n$tabfieldcheck[6]  = array();\n$tabfieldcheck[7]  = array();\n$tabfieldcheck[8]  = array();\n$tabfieldcheck[9]  = array();\n$tabfieldcheck[10] = array();\n$tabfieldcheck[11] = array();\n$tabfieldcheck[12] = array();\n$tabfieldcheck[13] = array();\n$tabfieldcheck[14] = array();\n$tabfieldcheck[15] = array();\n$tabfieldcheck[16] = array();\n$tabfieldcheck[17] = array();\n$tabfieldcheck[18] = array();\n$tabfieldcheck[19] = array();\n$tabfieldcheck[20] = array();\n$tabfieldcheck[21] = array();\n$tabfieldcheck[22] = array();\n$tabfieldcheck[23] = array();\n$tabfieldcheck[24] = array();\n//$tabfieldcheck[25] = array();\n$tabfieldcheck[26] = array();\n$tabfieldcheck[27] = array();\n$tabfieldcheck[28] = array();\n$tabfieldcheck[29] = array();\n$tabfieldcheck[30] = array();\n//$tabfieldcheck[31] = array();\n//$tabfieldcheck[32] = array();\n$tabfieldcheck[33] = array();\n$tabfieldcheck[34] = array();\n$tabfieldcheck[35]= array();\n$tabfieldcheck[36]= array();\n\n// Complete all arrays with entries found into modules\ncomplete_dictionary_with_modules($taborder,$tabname,$tablib,$tabsql,$tabsqlsort,$tabfield,$tabfieldvalue,$tabfieldinsert,$tabrowid,$tabcond,$tabhelp,$tabfieldcheck);\n\n\n// Defaut sortorder\nif (empty($sortfield))\n{\n    $tmp1 = explode(',',$tabsqlsort[$id]);\n    $tmp2 = explode(' ',$tmp1[0]);\n    $sortfield=preg_replace('/^.*\\./', '', $tmp2[0]);\n}\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\nif ($id == 11)\n{\n\t$langs->load(\"orders\");\n\t$langs->load(\"contracts\");\n\t$langs->load(\"projects\");\n\t$langs->load(\"propal\");\n\t$langs->load(\"bills\");\n\t$langs->load(\"interventions\");\n\t$elementList = array(\n\t\t\t''\t\t\t\t    => '',\n            'societe'           => $langs->trans('ThirdParty'),\n//\t\t\t'proposal'          => $langs->trans('Proposal'),\n//\t\t\t'order'             => $langs->trans('Order'),\n//\t\t\t'invoice'           => $langs->trans('Bill'),\n\t\t\t'invoice_supplier'  => $langs->trans('SupplierBill'),\n\t\t\t'order_supplier'    => $langs->trans('SupplierOrder'),\n//\t\t\t'intervention'      => $langs->trans('InterventionCard'),\n//\t\t\t'contract'          => $langs->trans('Contract'),\n\t\t\t'project'           => $langs->trans('Project'),\n\t\t\t'project_task'      => $langs->trans('Task'),\n\t\t\t'agenda'\t\t\t=> $langs->trans('Agenda'),\n\t\t\t// old deprecated\n\t\t\t'contrat'           => $langs->trans('Contract'),\n\t\t\t'propal'            => $langs->trans('Proposal'),\n\t\t\t'commande'          => $langs->trans('Order'),\n\t\t\t'facture'           => $langs->trans('Bill'),\n\t\t\t'resource'           => $langs->trans('Resource'),\n//\t\t\t'facture_fourn'     => $langs->trans('SupplierBill'),\n\t\t\t'fichinter'         => $langs->trans('InterventionCard')\n\t);\n\tif (! empty($conf->global->MAIN_SUPPORT_SHARED_CONTACT_BETWEEN_THIRDPARTIES)) $elementList[\"societe\"] = $langs->trans('ThirdParty');\n\n\tcomplete_elementList_with_modules($elementList);\n\n\tasort($elementList);\n\t$sourceList = array(\n\t\t\t'internal' => $langs->trans('Internal'),\n\t\t\t'external' => $langs->trans('External')\n\t);\n}\n\n// Define localtax_typeList (used for dictionary \"llx_c_tva\")\n$localtax_typeList = array();\nif ($id == 10)\n{\n\t$localtax_typeList = array(\n\t\t\t\"0\" => $langs->trans(\"No\"),\n\t\t\t\"1\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 1)\",\t//$langs->trans(\"%ageOnAllWithoutVAT\"),\n\t\t\t\"2\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 2)\",\t//$langs->trans(\"%ageOnAllBeforeVAT\"),\n\t\t\t\"3\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 3)\",\t//$langs->trans(\"%ageOnProductsWithoutVAT\"),\n\t\t\t\"4\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 4)\",\t//$langs->trans(\"%ageOnProductsBeforeVAT\"),\n\t\t\t\"5\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 5)\",\t//$langs->trans(\"%ageOnServiceWithoutVAT\"),\n\t\t\t\"6\" => $langs->trans(\"Yes\").' ('.$langs->trans(\"Type\").\" 6)\"\t//$langs->trans(\"%ageOnServiceBeforeVAT\"),\n\t);\n}\n\n\n\n/*\n * Actions\n */\n\nif (GETPOST('button_removefilter') || GETPOST('button_removefilter.x') || GETPOST('button_removefilter_x'))\n{\n    $search_country_id = '';\n    $search_code = '';\n}\n\n// Actions add or modify an entry into a dictionary\nif (GETPOST('actionadd') || GETPOST('actionmodify'))\n{\n    $listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n    $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n    $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n    $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n    // Check that all fields are filled\n    $ok=1;\n    foreach ($listfield as $f => $value)\n    {\n        if ($value == 'country_id' && in_array($tablib[$id],array('DictionaryVAT','DictionaryRegion','DictionaryCompanyType','DictionaryHolidayTypes','DictionaryRevenueStamp','DictionaryAccountancysystem','DictionaryAccountancyCategory'))) continue;\t\t// For some pages, country is not mandatory\n    \tif ($value == 'country' && in_array($tablib[$id],array('DictionaryCanton','DictionaryCompanyType','DictionaryRevenueStamp'))) continue;\t\t// For some pages, country is not mandatory\n        if ($value == 'localtax1' && empty($_POST['localtax1_type'])) continue;\n        if ($value == 'localtax2' && empty($_POST['localtax2_type'])) continue;\n        if ($value == 'color' && empty($_POST['color'])) continue;\n\t\tif ($value == 'formula' && empty($_POST['formula'])) continue;\n\t\tif ($value == 'sortorder') continue;\t\t// For a column name 'sortorder', we use the field name 'position'\n\t\tif ((! isset($_POST[$value]) || $_POST[$value]=='')\n        \t&& (! in_array($listfield[$f], array('decalage','module','accountancy_code','accountancy_code_sell','accountancy_code_buy'))  // Fields that are not mandatory\n        \t&& (! ($id == 10 && $listfield[$f] == 'code')) // Code is mandatory fir table 10\n        \t)\n\t\t)\n        {\n            $ok=0;\n            $fieldnamekey=$listfield[$f];\n            // We take translate key of field\n            if ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n            if ($fieldnamekey == 'libelle_facture') $fieldnamekey = 'LabelOnDocuments';\n            if ($fieldnamekey == 'nbjour')   $fieldnamekey='NbOfDays';\n            if ($fieldnamekey == 'decalage') $fieldnamekey='Offset';\n            if ($fieldnamekey == 'module')   $fieldnamekey='Module';\n            if ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n            if ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n            if ($fieldnamekey == 'taux') $fieldnamekey = 'Rate';\n            if ($fieldnamekey == 'type') $fieldnamekey = 'Type';\n            if ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n            if ($fieldnamekey == 'unicode') $fieldnamekey = 'Unicode';\n            if ($fieldnamekey == 'deductible') $fieldnamekey = 'Deductible';\n            if ($fieldnamekey == 'sortorder') $fieldnamekey = 'SortOrder';\n\t\t\tif ($fieldnamekey == 'category_type') $fieldnamekey = 'Calculated';\n\t\t\tif ($fieldnamekey == 'revenuestamp_type') $fieldnamekey = 'TypeOfRevenueStamp';\n\n            setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n        }\n    }\n    // Other checks\n    if (GETPOST('actionadd') && $tabname[$id] == MAIN_DB_PREFIX.\"c_actioncomm\" && isset($_POST[\"type\"]) && in_array($_POST[\"type\"],array('system','systemauto'))) {\n        $ok=0;\n        setEventMessages($langs->transnoentities('ErrorReservedTypeSystemSystemAuto'), null, 'errors');\n    }\n    if (isset($_POST[\"code\"]))\n    {\n    \tif ($_POST[\"code\"]=='0')\n    \t{\n        \t$ok=0;\n    \t\tsetEventMessages($langs->transnoentities('ErrorCodeCantContainZero'), null, 'errors');\n        }\n        /*if (!is_numeric($_POST['code']))\t// disabled, code may not be in numeric base\n    \t{\n\t    \t$ok = 0;\n\t    \t$msg .= $langs->transnoentities('ErrorFieldFormat', $langs->transnoentities('Code')).'<br>';\n\t    }*/\n    }\n    if (isset($_POST[\"country\"]) && ($_POST[\"country\"]=='0') && ($id != 2))\n    {\n    \tif (in_array($tablib[$id],array('DictionaryCompanyType','DictionaryHolidayTypes')))\t// Field country is no mandatory for such dictionaries\n    \t{\n    \t\t$_POST[\"country\"]='';\n    \t}\n    \telse\n    \t{\n        \t$ok=0;\n        \tsetEventMessages($langs->transnoentities(\"ErrorFieldRequired\",$langs->transnoentities(\"Country\")), null, 'errors');\n    \t}\n    }\n    if ($id == 3 && ! is_numeric($_POST[\"code\"]))\n    {\n       \t$ok=0;\n       \tsetEventMessages($langs->transnoentities(\"ErrorFieldMustBeANumeric\",$langs->transnoentities(\"Code\")), null, 'errors');\n    }\n\n\t// Clean some parameters\n    if ((! empty($_POST[\"localtax1_type\"]) || ($_POST['localtax1_type'] == '0')) && empty($_POST[\"localtax1\"])) $_POST[\"localtax1\"]='0';\t// If empty, we force to 0\n    if ((! empty($_POST[\"localtax2_type\"]) || ($_POST['localtax2_type'] == '0')) && empty($_POST[\"localtax2\"])) $_POST[\"localtax2\"]='0';\t// If empty, we force to 0\n\tif ($_POST[\"accountancy_code\"] <= 0) $_POST[\"accountancy_code\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_sell\"] <= 0) $_POST[\"accountancy_code_sell\"]='';\t// If empty, we force to null\n\tif ($_POST[\"accountancy_code_buy\"] <= 0) $_POST[\"accountancy_code_buy\"]='';\t// If empty, we force to null\n    if ($id == 10 && isset($_POST[\"code\"]))  // Spaces are not allowed into code\n    {\n        $_POST[\"code\"]=preg_replace('/\\s/','',$_POST[\"code\"]);\n    }\n\n    // Si verif ok et action add, on ajoute la ligne\n    if ($ok && GETPOST('actionadd'))\n    {\n        if ($tabrowid[$id])\n        {\n            // Recupere id libre pour insertion\n            $newid=0;\n            $sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n            $result = $db->query($sql);\n            if ($result)\n            {\n                $obj = $db->fetch_object($result);\n                $newid=($obj->newid + 1);\n\n            } else {\n                dol_print_error($db);\n            }\n        }\n\n        // Add new entry\n        $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n        // List of fields\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $tabrowid[$id].\",\";\n        $sql.= $tabfieldinsert[$id];\n        $sql.=\",active)\";\n        $sql.= \" VALUES(\";\n\n        // List of values\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $newid.\",\";\n        $i=0;\n        foreach ($listfieldinsert as $f => $value)\n        {\n            if ($value == 'price' || preg_match('/^amount/i',$value) || $value == 'taux') {\n            \t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n            }\n            else if ($value == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = getEntity($tabname[$id]);\n            }\n            if ($i) $sql.=\",\";\n            if ($listfieldvalue[$i] == 'sortorder')\t\t// For column name 'sortorder', we use the field name 'position'\n            {\n            \t$sql.=\"'\".(int) $db->escape($_POST['position']).\"'\";\n            }\n            elseif ($_POST[$listfieldvalue[$i]] == '' && ! ($listfieldvalue[$i] == 'code' && $id == 10)) $sql.=\"null\";  // For vat, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.=\",1)\";\n\n        dol_syslog(\"actionadd\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if ($result)\t// Add is ok\n        {\n            setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n        \t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n        }\n        else\n        {\n            if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n            }\n            else {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // Si verif ok et action modify, on modifie la ligne\n    if ($ok && GETPOST('actionmodify'))\n    {\n        if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n        else { $rowidcol=\"rowid\"; }\n\n        // Modify entry\n        $sql = \"UPDATE \".$tabname[$id].\" SET \";\n        // Modifie valeur des champs\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n        {\n            $sql.= $tabrowid[$id].\"=\";\n            $sql.= \"'\".$db->escape($rowid).\"', \";\n        }\n        $i = 0;\n        foreach ($listfieldmodify as $field)\n        {\n            if ($field == 'price' || preg_match('/^amount/i',$field) || $field == 'taux') {\n            \t$_POST[$listfieldvalue[$i]] = price2num($_POST[$listfieldvalue[$i]],'MU');\n            }\n            else if ($field == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = getEntity($tabname[$id]);\n            }\n            if ($i) $sql.=\",\";\n            $sql.= $field.\"=\";\n            if ($listfieldvalue[$i] == 'sortorder')\t\t// For column name 'sortorder', we use the field name 'position'\n            {\n            \t$sql.=\"'\".(int) $db->escape($_POST['position']).\"'\";\n            }\n            elseif ($_POST[$listfieldvalue[$i]] == '' && ! ($listfieldvalue[$i] == 'code' && $id == 10)) $sql.=\"null\";  // For vat, we want/accept code = ''\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n        if (in_array('entity', $listfieldmodify)) $sql.= \" AND entity = '\".getEntity($tabname[$id]).\"'\";\n\n        dol_syslog(\"actionmodify\", LOG_DEBUG);\n        //print $sql;\n        $resql = $db->query($sql);\n        if (! $resql)\n        {\n            setEventMessages($db->error(), null, 'errors');\n        }\n    }\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel'))\n{\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    $sql = \"DELETE FROM \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n\n    dol_syslog(\"delete\", LOG_DEBUG);\n    $result = $db->query($sql);\n    if (! $result)\n    {\n        if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n        {\n            setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n        }\n        else\n        {\n            dol_print_error($db);\n        }\n    }\n}\n\n// activate\nif ($action == $acts[0])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable\nif ($action == $acts[1])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// favorite\nif ($action == 'activate_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 1 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable favorite\nif ($action == 'disable_favorite')\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n    elseif ($code) {\n    \t$sql = \"UPDATE \".$tabname[$id].\" SET favorite = 0 WHERE code='\".dol_escape_htmltag($code).\"'\".($entity != '' ? \" AND entity = \" . (int) $entity : '');\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans(\"DictionarySetup\");\n$linkback='';\nif ($id)\n{\n    $titre.=' - '.$langs->trans($tablib[$id]);\n    $linkback='<a href=\"'.$_SERVER['PHP_SELF'].'\">'.$langs->trans(\"BackToDictionaryList\").'</a>';\n}\n$titlepicto='title_setup';\nif ($id == 10 && GETPOST('from') == 'accountancy')\n{\n    $titre=$langs->trans(\"MenuVatAccounts\");\n    $titlepicto='title_accountancy';\n}\nif ($id == 7 && GETPOST('from') == 'accountancy')\n{\n    $titre=$langs->trans(\"MenuTaxAccounts\");\n    $titlepicto='title_accountancy';\n}\n\nprint load_fiche_titre($titre,$linkback,$titlepicto);\n\nif (empty($id))\n{\n    print $langs->trans(\"DictionaryDesc\");\n    print \" \".$langs->trans(\"OnlyActiveElementsAreShown\").\"<br>\\n\";\n}\nprint \"<br>\\n\";\n\n\n$param = '&id='.urlencode($id);\nif ($search_country_id > 0) $param.= '&search_country_id='.urlencode($search_country_id);\nif ($search_code != '')     $param.= '&search_code='.urlencode($search_country_id);\nif ($entity != '') $param.= '&entity=' . (int) $entity;\n$paramwithsearch = $param;\nif ($sortorder) $paramwithsearch.= '&sortorder='.urlencode($sortorder);\nif ($sortfield) $paramwithsearch.= '&sortfield='.urlencode($sortfield);\nif (GETPOST('from')) $paramwithsearch.= '&from='.urlencode(GETPOST('from','alpha'));\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'rowid='.$rowid.'&code='.urlencode($code).$paramwithsearch, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show a dictionary\n */\nif ($id)\n{\n    // Complete requete recherche valeurs avec critere de tri\n    $sql=$tabsql[$id];\n\n    if (! preg_match('/ WHERE /',$sql)) $sql.= \" WHERE 1 = 1\";\n    if ($search_country_id > 0) $sql.= \" AND c.rowid = \".$search_country_id;\n    if ($search_code != '' && $id != 9)     $sql.= natural_search(\"code\", $search_code);\n    if ($search_code != '' && $id == 9)     $sql.= natural_search(\"code_iso\", $search_code);\n\n    if ($sortfield)\n    {\n        // If sort order is \"country\", we use country_code instead\n    \tif ($sortfield == 'country') $sortfield='country_code';\n        $sql.= \" ORDER BY \".$db->escape($sortfield);\n        if ($sortorder)\n        {\n        \t$sql.=\" \".strtoupper($db->escape($sortorder));\n        }\n        $sql.=\", \";\n        // Clear the required sort criteria for the tabsqlsort to be able to force it with selected value\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);\n        $tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);\n    }\n    else {\n        $sql.=\" ORDER BY \";\n    }\n    $sql.=$tabsqlsort[$id];\n    $sql.=$db->plimit($listlimit+1,$offset);\n    //print $sql;\n\n    if (empty($tabfield[$id]))\n    {\n    \tdol_print_error($db, 'The table with id '.$id.' has no array tabfield defined');\n    \texit;\n    }\n    $fieldlist=explode(',',$tabfield[$id]);\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n    // Form to add a new line\n    if ($tabname[$id])\n    {\n        $alabelisused=0;\n        $withentity=null;\n\n        $fieldlist=explode(',',$tabfield[$id]);\n\n\t    print '<div class=\"div-table-responsive-no-min\">';\n        print '<table class=\"noborder\" width=\"100%\">';\n\n        // Line for title\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n        \tif ($fieldlist[$field] == 'entity') {\n        \t\t$withentity = getEntity($tabname[$id]);\n        \t\tcontinue;\n        \t}\n\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            $class='';\n            if ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n            if ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n            if ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$class='center';\n            }\n            if ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $class=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\"; $class=\"center\"; }\n            if ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $class=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\"; $class=\"center\"; }\n            if ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n            if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n            if ($fieldlist[$field]=='type')            {\n\t\t\t\tif ($tabname[$id] == MAIN_DB_PREFIX.\"c_paiement\") $valuetoshow=$form->textwithtooltip($langs->trans(\"Type\"),$langs->trans(\"TypePaymentDesc\"),2,1,img_help(1,''));\n\t\t\t\telse $valuetoshow=$langs->trans(\"Type\");\n            }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); $class='width100'; }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n            \tif ($id != 25) $valuetoshow=$form->textwithtooltip($langs->trans(\"Label\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n            \telse $valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='libelle_facture') {\n                $valuetoshow=$form->textwithtooltip($langs->trans(\"LabelOnDocuments\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n            }\n            if ($fieldlist[$field]=='country')         {\n                if (in_array('region_id',$fieldlist)) { print '<td>&nbsp;</td>'; continue; }\t\t// For region page, we do not show the country input\n                $valuetoshow=$langs->trans(\"Country\");\n            }\n            if ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $class=\"center\"; }\n            if ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n            if ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $class=\"center\"; }\n            if ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n            if ($fieldlist[$field]=='width' || $fieldlist[$field]=='nx')    { $valuetoshow=$langs->trans(\"Width\"); }\n            if ($fieldlist[$field]=='height' || $fieldlist[$field]=='ny')   { $valuetoshow=$langs->trans(\"Height\"); }\n            if ($fieldlist[$field]=='unit' || $fieldlist[$field]=='metric') { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $valuetoshow=''; }\n            if ($fieldlist[$field]=='accountancy_code') { $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell') { $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); }\n            if ($fieldlist[$field]=='accountancy_code_buy') { $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); }\n            if ($fieldlist[$field]=='pcg_version' || $fieldlist[$field]=='fk_pcg_version') { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountparent\"); }\n            if ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n            if ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n            if ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n\t        if ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\t\t\tif ($fieldlist[$field]=='paper_size')      { $valuetoshow=$langs->trans(\"PaperSize\"); }\n\t\t\tif ($fieldlist[$field]=='orientation')     { $valuetoshow=$langs->trans(\"Orientation\"); }\n\t\t\tif ($fieldlist[$field]=='leftmargin')      { $valuetoshow=$langs->trans(\"LeftMargin\"); }\n\t\t\tif ($fieldlist[$field]=='topmargin')       { $valuetoshow=$langs->trans(\"TopMargin\"); }\n\t\t\tif ($fieldlist[$field]=='spacex')          { $valuetoshow=$langs->trans(\"SpaceX\"); }\n\t\t\tif ($fieldlist[$field]=='spacey')          { $valuetoshow=$langs->trans(\"SpaceY\"); }\n\t\t\tif ($fieldlist[$field]=='font_size')       { $valuetoshow=$langs->trans(\"FontSize\"); }\n\t\t\tif ($fieldlist[$field]=='custom_x')        { $valuetoshow=$langs->trans(\"CustomX\"); }\n\t\t\tif ($fieldlist[$field]=='custom_y')        { $valuetoshow=$langs->trans(\"CustomY\"); }\n\t\t\tif ($fieldlist[$field]=='percent')         { $valuetoshow=$langs->trans(\"Percentage\"); }\n\t\t\tif ($fieldlist[$field]=='affect')          { $valuetoshow=$langs->trans(\"WithCounter\"); }\n\t\t\tif ($fieldlist[$field]=='delay')           { $valuetoshow=$langs->trans(\"NoticePeriod\"); }\n\t\t\tif ($fieldlist[$field]=='newbymonth')      { $valuetoshow=$langs->trans(\"NewByMonth\"); }\n\t\t\tif ($fieldlist[$field]=='fk_tva')          { $valuetoshow=$langs->trans(\"VAT\"); }\n\t\t\tif ($fieldlist[$field]=='range_ik')        { $valuetoshow=$langs->trans(\"RangeIk\"); }\n\t\t\tif ($fieldlist[$field]=='fk_c_exp_tax_cat')  { $valuetoshow=$langs->trans(\"CarCategory\"); }\n\t\t\tif ($fieldlist[$field]=='revenuestamp_type') { $valuetoshow=$langs->trans('TypeOfRevenueStamp'); }\n\n            if ($id == 2)\t// Special cas for state page\n            {\n            \tif ($fieldlist[$field]=='region_id') { $valuetoshow='&nbsp;'; $showfield=1; }\n\t            if ($fieldlist[$field]=='region') { $valuetoshow=$langs->trans(\"Country\").'/'.$langs->trans(\"Region\"); $showfield=1; }\n            }\n\n            if ($valuetoshow != '')\n            {\n                print '<td'.($class?' class=\"'.$class.'\"':'').'>';\n            \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n            \telse if (! empty($tabhelp[$id][$value])) print $form->textwithpicto($valuetoshow,$tabhelp[$id][$value]);\n            \telse print $valuetoshow;\n                print '</td>';\n             }\n             if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n        }\n\n        if ($id == 4) print '<td></td>';\n        print '<td>';\n        print '<input type=\"hidden\" name=\"id\" value=\"'.$id.'\">';\n        if (! is_null($withentity))\n        \tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$withentity.'\">';\n        print '</td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '<td style=\"min-width: 26px;\"></td>';\n        print '</tr>';\n\n        // Line to enter new values\n        print '<!-- line to add new entry --><tr class=\"oddeven nodrag nodrop nohover\">';\n\n        $obj = new stdClass();\n        // If data was already input, we define them in obj to populate input fields.\n        if (GETPOST('actionadd'))\n        {\n            foreach ($fieldlist as $key=>$val)\n            {\n                if (GETPOST($val) != '')\n                \t$obj->$val=GETPOST($val);\n            }\n        }\n\n        $tmpaction = 'create';\n        $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n        $reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n        $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n        if ($id == 3) unset($fieldlist[2]); // Remove field ??? if dictionary Regions\n\n        if (empty($reshook))\n        {\n       \t\tfieldList($fieldlist, $obj, $tabname[$id], 'add');\n        }\n\n        if ($id == 4) print '<td></td>';\n        print '<td colspan=\"3\" align=\"center\">';\n        if ($action != 'edit')\n        {\n        \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n        }\n        print '</td>';\n        print \"</tr>\";\n\n        $colspan=count($fieldlist)+3;\n        if ($id == 4) $colspan++;\n\n        print '</table>';\n\t\tprint '</div>';\n    }\n\n    print '</form>';\n\n    print '<br>';\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\n    // List of available record in database\n    dol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $num = $db->num_rows($resql);\n        $i = 0;\n\n        // There is several pages\n        if ($num > $listlimit || $page)\n        {\n            print_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n            print '<div class=\"clearboth\"></div>';\n        }\n\n\t    print '<div class=\"div-table-responsive\">';\n        print '<table class=\"noborder\" width=\"100%\">';\n\n        // Title line with search boxes\n        print '<tr class=\"liste_titre_filter\">';\n        $filterfound=0;\n        foreach ($fieldlist as $field => $value)\n        {\n        \tif ($fieldlist[$field] == 'entity') continue;\n\n            $showfield=1;\t// By default\n\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n\n            if ($showfield)\n            {\n                if ($value == 'country')\n                {\n                    print '<td class=\"liste_titre\">';\n                    print $form->select_country($search_country_id, 'search_country_id', '', 28, 'maxwidth150 maxwidthonsmartphone');\n                    print '</td>';\n                    $filterfound++;\n                }\n                elseif ($value == 'code')\n                {\n                    print '<td class=\"liste_titre\">';\n                    print '<input type=\"text\" class=\"maxwidth100\" name=\"search_code\" value=\"'.dol_escape_htmltag($search_code).'\">';\n                    print '</td>';\n                    $filterfound++;\n                }\n                else\n                {\n                    print '<td class=\"liste_titre\">';\n                    print '</td>';\n                }\n            }\n        }\n        if ($id == 4) print '<td></td>';\n        print '<td class=\"liste_titre\"></td>';\n    \tprint '<td class=\"liste_titre\" colspan=\"2\" align=\"right\">';\n    \tif ($filterfound)\n    \t{\n        \t$searchpicto=$form->showFilterAndCheckAddButtons(0);\n        \tprint $searchpicto;\n    \t}\n    \tprint '</td>';\n        print '</tr>';\n\n        // Title of lines\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n        \tif ($fieldlist[$field] == 'entity') continue;\n\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n            $align=\"left\";\n            $sortable=1;\n            $valuetoshow='';\n            /*\n            $tmparray=getLabelOfField($fieldlist[$field]);\n            $showfield=$tmp['showfield'];\n            $valuetoshow=$tmp['valuetoshow'];\n            $align=$tmp['align'];\n            $sortable=$tmp['sortable'];\n\t\t\t*/\n            $valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            if ($fieldlist[$field]=='source')          { $valuetoshow=$langs->trans(\"Contact\"); }\n            if ($fieldlist[$field]=='price')           { $valuetoshow=$langs->trans(\"PriceUHT\"); }\n            if ($fieldlist[$field]=='taux')            {\n\t\t\t\tif ($tabname[$id] != MAIN_DB_PREFIX.\"c_revenuestamp\") $valuetoshow=$langs->trans(\"Rate\");\n\t\t\t\telse $valuetoshow=$langs->trans(\"Amount\");\n\t\t\t\t$align='center';\n            }\n            if ($fieldlist[$field]=='localtax1_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 2\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax1')       { $valuetoshow=$langs->trans(\"Rate\").\" 2\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax2_type')  { $valuetoshow=$langs->trans(\"UseLocalTax\").\" 3\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='localtax2')       { $valuetoshow=$langs->trans(\"Rate\").\" 3\"; $align=\"center\"; $sortable=0; }\n            if ($fieldlist[$field]=='organization')    { $valuetoshow=$langs->trans(\"Organization\"); }\n            if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n            if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n            if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n            if ($fieldlist[$field]=='position')        { $align='right'; }\n            if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label')\n            {\n                //if ($id != 25) $valuetoshow=$form->textwithtooltip($langs->trans(\"Label\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n                //else $valuetoshow=$langs->trans(\"Label\");\n                $valuetoshow=$langs->trans(\"Label\");\n            }\n            if ($fieldlist[$field]=='libelle_facture') {\n                //$valuetoshow=$form->textwithtooltip($langs->trans(\"LabelOnDocuments\"), $langs->trans(\"LabelUsedByDefault\"),2,1,img_help(1,''));\n                $valuetoshow=$langs->trans(\"LabelOnDocuments\");\n            }\n            if ($fieldlist[$field]=='country')         { $valuetoshow=$langs->trans(\"Country\"); }\n            if ($fieldlist[$field]=='recuperableonly') { $valuetoshow=$langs->trans(\"NPR\"); $align=\"center\"; }\n            if ($fieldlist[$field]=='nbjour')          { $valuetoshow=$langs->trans(\"NbOfDays\"); }\n            if ($fieldlist[$field]=='type_cdr')        { $valuetoshow=$langs->trans(\"AtEndOfMonth\"); $align=\"center\"; }\n            if ($fieldlist[$field]=='decalage')        { $valuetoshow=$langs->trans(\"Offset\"); }\n            if ($fieldlist[$field]=='width' || $fieldlist[$field]=='nx') { $valuetoshow=$langs->trans(\"Width\"); }\n            if ($fieldlist[$field]=='height' || $fieldlist[$field]=='ny') { $valuetoshow=$langs->trans(\"Height\"); }\n            if ($fieldlist[$field]=='unit' || $fieldlist[$field]=='metric') { $valuetoshow=$langs->trans(\"MeasuringUnit\"); }\n            if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') { $showfield=0; }\n            if ($fieldlist[$field]=='accountancy_code'){ $valuetoshow=$langs->trans(\"AccountancyCode\"); }\n            if ($fieldlist[$field]=='accountancy_code_sell'){ $valuetoshow=$langs->trans(\"AccountancyCodeSell\"); $sortable=0; }\n            if ($fieldlist[$field]=='accountancy_code_buy'){ $valuetoshow=$langs->trans(\"AccountancyCodeBuy\"); $sortable=0; }\n\t\t\tif ($fieldlist[$field]=='fk_pcg_version')  { $valuetoshow=$langs->trans(\"Pcg_version\"); }\n            if ($fieldlist[$field]=='account_parent')  { $valuetoshow=$langs->trans(\"Accountsparent\"); }\n            if ($fieldlist[$field]=='pcg_type')        { $valuetoshow=$langs->trans(\"Pcg_type\"); }\n            if ($fieldlist[$field]=='pcg_subtype')     { $valuetoshow=$langs->trans(\"Pcg_subtype\"); }\n            if ($fieldlist[$field]=='sortorder')       { $valuetoshow=$langs->trans(\"SortOrder\"); }\n            if ($fieldlist[$field]=='short_label')     { $valuetoshow=$langs->trans(\"ShortLabel\"); }\n\t\t\tif ($fieldlist[$field]=='range_account')   { $valuetoshow=$langs->trans(\"Range\"); }\n\t\t\tif ($fieldlist[$field]=='sens')            { $valuetoshow=$langs->trans(\"Sens\"); }\n\t\t\tif ($fieldlist[$field]=='category_type')   { $valuetoshow=$langs->trans(\"Calculated\"); }\n\t\t\tif ($fieldlist[$field]=='formula')         { $valuetoshow=$langs->trans(\"Formula\"); }\n\t\t\tif ($fieldlist[$field]=='paper_size')      { $valuetoshow=$langs->trans(\"PaperSize\"); }\n\t\t\tif ($fieldlist[$field]=='orientation')     { $valuetoshow=$langs->trans(\"Orientation\"); }\n\t\t\tif ($fieldlist[$field]=='leftmargin')      { $valuetoshow=$langs->trans(\"LeftMargin\"); }\n\t\t\tif ($fieldlist[$field]=='topmargin')       { $valuetoshow=$langs->trans(\"TopMargin\"); }\n\t\t\tif ($fieldlist[$field]=='spacex')          { $valuetoshow=$langs->trans(\"SpaceX\"); }\n\t\t\tif ($fieldlist[$field]=='spacey')          { $valuetoshow=$langs->trans(\"SpaceY\"); }\n\t\t\tif ($fieldlist[$field]=='font_size')       { $valuetoshow=$langs->trans(\"FontSize\"); }\n\t\t\tif ($fieldlist[$field]=='custom_x')        { $valuetoshow=$langs->trans(\"CustomX\"); }\n\t\t\tif ($fieldlist[$field]=='custom_y')        { $valuetoshow=$langs->trans(\"CustomY\"); }\n\t\t\tif ($fieldlist[$field]=='percent')         { $valuetoshow=$langs->trans(\"Percentage\"); }\n\t\t\tif ($fieldlist[$field]=='affect')          { $valuetoshow=$langs->trans(\"WithCounter\"); }\n\t\t\tif ($fieldlist[$field]=='delay')           { $valuetoshow=$langs->trans(\"NoticePeriod\"); }\n\t\t\tif ($fieldlist[$field]=='newbymonth')      { $valuetoshow=$langs->trans(\"NewByMonth\"); }\n\t\t\tif ($fieldlist[$field]=='fk_tva')          { $valuetoshow=$langs->trans(\"VAT\"); }\n\t\t\tif ($fieldlist[$field]=='range_ik')        { $valuetoshow=$langs->trans(\"RangeIk\"); }\n\t\t\tif ($fieldlist[$field]=='fk_c_exp_tax_cat')  { $valuetoshow=$langs->trans(\"CarCategory\"); }\n\t\t\tif ($fieldlist[$field]=='revenuestamp_type') { $valuetoshow=$langs->trans('TypeOfRevenueStamp'); }\n\n            // Affiche nom du champ\n            if ($showfield)\n            {\n                print getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n            }\n        }\n\t\t// Favorite - Only activated on country dictionary\n        if ($id == 4) print getTitleFieldOfList($langs->trans(\"Favorite\"), 0, $_SERVER[\"PHP_SELF\"], \"favorite\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n\n\t\tprint getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n        print getTitleFieldOfList('');\n        print getTitleFieldOfList('');\n        print '</tr>';\n\n        if ($num)\n        {\n            // Lines with values\n            while ($i < $num)\n            {\n                $obj = $db->fetch_object($resql);\n                //print_r($obj);\n                print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n                if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n                {\n                    $tmpaction='edit';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    // Show fields\n                    if (empty($reshook)) {\n                    \t$withentity = fieldList($fieldlist, $obj, $tabname[$id], 'edit');\n                    }\n\n                    print '<td colspan=\"3\" align=\"center\">';\n                    print '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n                    print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n                    print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n                    if (! is_null($withentity))\n                    \tprint '<input type=\"hidden\" name=\"entity\" value=\"'.$withentity.'\">';\n                    print '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                    print '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n                    print '</td>';\n                }\n                else\n                {\n\t              \t$tmpaction = 'view';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook))\n                    {\n                    \t$withentity=null;\n\n                        foreach ($fieldlist as $field => $value)\n                        {\n                        \t//var_dump($fieldlist);\n                        \t$showfield=1;\n                        \t$align=\"left\";\n                        \t$valuetoshow=$obj->{$fieldlist[$field]};\n\n                        \tif ($fieldlist[$field] == 'entity') {\n                        \t\t$withentity = $valuetoshow;\n                        \t\tcontinue;\n                        \t}\n\n                            if ($value == 'element')\n                            {\n                                $valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n                            }\n                            else if ($value == 'source')\n                            {\n                                $valuetoshow = isset($sourceList[$valuetoshow])?$sourceList[$valuetoshow]:$valuetoshow;\n                            }\n                            else if ($valuetoshow=='all') {\n                                $valuetoshow=$langs->trans('All');\n                            }\n                            else if ($fieldlist[$field]=='country') {\n                                if (empty($obj->country_code))\n                                {\n                                    $valuetoshow='-';\n                                }\n                                else\n                                {\n                                    $key=$langs->trans(\"Country\".strtoupper($obj->country_code));\n                                    $valuetoshow=($key != \"Country\".strtoupper($obj->country_code)?$obj->country_code.\" - \".$key:$obj->country);\n                                }\n                            }\n                            else if ($fieldlist[$field]=='recuperableonly' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n                                $valuetoshow=yn($valuetoshow);\n                                $align=\"center\";\n                            }\n                            else if ($fieldlist[$field]=='type_cdr') {\n                \t\t\t\tif(empty($valuetoshow)) $valuetoshow = $langs->trans('None');\n                \t\t\t\telseif($valuetoshow == 1) $valuetoshow = $langs->trans('AtEndOfMonth');\n                \t\t\t\telseif($valuetoshow == 2) $valuetoshow = $langs->trans('CurrentNext');\n                                $align=\"center\";\n                            }\n                            else if ($fieldlist[$field]=='price' || preg_match('/^amount/i',$fieldlist[$field])) {\n                                $valuetoshow=price($valuetoshow);\n                            }\n                            if ($value == 'private')\n                            {\n                                $valuetoshow = yn($elementList[$valuetoshow]);\n                            }\n                            else if ($fieldlist[$field]=='libelle_facture') {\n                                $langs->load(\"bills\");\n                                $key=$langs->trans(\"PaymentCondition\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"PaymentCondition\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                                $valuetoshow=nl2br($valuetoshow);\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_country') {\n                                $key=$langs->trans(\"Country\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Country\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_availability') {\n                                $langs->load(\"propal\");\n                                $key=$langs->trans(\"AvailabilityType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"AvailabilityType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_actioncomm') {\n                                $key=$langs->trans(\"Action\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Action\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if (! empty($obj->code_iso) && $fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_currencies') {\n                                $key=$langs->trans(\"Currency\".strtoupper($obj->code_iso));\n                                $valuetoshow=($obj->code_iso && $key != \"Currency\".strtoupper($obj->code_iso)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_typent') {\n                                $key=$langs->trans(strtoupper($obj->code));\n                                $valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_prospectlevel') {\n                                $key=$langs->trans(strtoupper($obj->code));\n                                $valuetoshow=($key != strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_civility') {\n                                $key=$langs->trans(\"Civility\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"Civility\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_type_contact') {\n                            \t$langs->load('agenda');\n                                $key=$langs->trans(\"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"TypeContact_\".$obj->element.\"_\".$obj->source.\"_\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_payment_term') {\n                                $langs->load(\"bills\");\n                                $key=$langs->trans(\"PaymentConditionShort\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"PaymentConditionShort\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paiement') {\n                                $langs->load(\"bills\");\n                                $key=$langs->trans(\"PaymentType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"PaymentType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_reason') {\n                                $key=$langs->trans(\"DemandReasonType\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"DemandReasonType\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_input_method') {\n                                $langs->load(\"orders\");\n                                $key=$langs->trans($obj->code);\n                                $valuetoshow=($obj->code && $key != $obj->code)?$key:$obj->{$fieldlist[$field]};\n                            }\n                            else if ($fieldlist[$field]=='libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_shipment_mode') {\n                                $langs->load(\"sendings\");\n                                $key=$langs->trans(\"SendingMethod\".strtoupper($obj->code));\n                                $valuetoshow=($obj->code && $key != \"SendingMethod\".strtoupper($obj->code)?$key:$obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field] == 'libelle' && $tabname[$id]==MAIN_DB_PREFIX.'c_paper_format')\n                            {\n                                $key = $langs->trans('PaperFormat'.strtoupper($obj->code));\n                                $valuetoshow = ($obj->code && $key != 'PaperFormat'.strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field] == 'label' && $tabname[$id] == MAIN_DB_PREFIX.'c_type_fees')\n                            {\n                                $langs->load('trips');\n                                $key = $langs->trans(strtoupper($obj->code));\n                                $valuetoshow = ($obj->code && $key != strtoupper($obj->code) ? $key : $obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='region_id' || $fieldlist[$field]=='country_id') {\n                                $showfield=0;\n                            }\n                            else if ($fieldlist[$field]=='unicode') {\n                            \t$valuetoshow = $langs->getCurrencySymbol($obj->code,1);\n                            }\n                            else if ($fieldlist[$field]=='label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t                            $langs->load(\"products\");\n\t                            $valuetoshow=$langs->trans($obj->{$fieldlist[$field]});\n                            }\n                            else if ($fieldlist[$field]=='short_label' && $tabname[$_GET[\"id\"]]==MAIN_DB_PREFIX.'c_units') {\n\t                            $langs->load(\"products\");\n\t                            $valuetoshow = $langs->trans($obj->{$fieldlist[$field]});\n                            }\n                            else if (($fieldlist[$field] == 'unit') && ($tabname[$id] == MAIN_DB_PREFIX.'c_paper_format'))\n                            {\n                            \t$key = $langs->trans('SizeUnit'.strtolower($obj->unit));\n                                $valuetoshow = ($obj->code && $key != 'SizeUnit'.strtolower($obj->unit) ? $key : $obj->{$fieldlist[$field]});\n                            }\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='localtax1' || $fieldlist[$field]=='localtax2') {\n\t\t\t\t\t\t\t    $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='localtax1_type') {\n                              if ($obj->localtax1 != 0)\n\t\t\t\t\t\t\t    $valuetoshow=$localtax_typeList[$valuetoshow];\n\t\t\t\t\t\t\t  else\n\t\t\t\t\t\t\t    $valuetoshow = '';\n\t\t\t\t\t\t\t  $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='localtax2_type') {\n\t\t\t\t\t\t\t if ($obj->localtax2 != 0)\n\t\t\t\t\t\t\t    $valuetoshow=$localtax_typeList[$valuetoshow];\n\t\t\t\t\t\t\t  else\n\t\t\t\t\t\t\t    $valuetoshow = '';\n\t\t\t\t\t\t\t  $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='taux') {\n                                $valuetoshow = price($valuetoshow, 0, $langs, 0, 0);\n\t\t\t\t\t\t\t    $align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (in_array($fieldlist[$field],array('recuperableonly')))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$align=\"center\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($fieldlist[$field]=='accountancy_code' || $fieldlist[$field]=='accountancy_code_sell' || $fieldlist[$field]=='accountancy_code_buy') {\n                                $valuetoshow = length_accountg($valuetoshow);\n                            }\n\t\t\t\t\t\t\telseif ($fieldlist[$field] == 'fk_tva')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach ($form->cache_vatrates as $key => $Tab)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif ($form->cache_vatrates[$key]['rowid'] == $valuetoshow)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$valuetoshow = $form->cache_vatrates[$key]['libtva'];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telseif ($fieldlist[$field] == 'fk_c_exp_tax_cat')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = getDictvalue(MAIN_DB_PREFIX.'c_exp_tax_cat', 'label', $valuetoshow);\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->trans($valuetoshow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telseif ($tabname[$id] == MAIN_DB_PREFIX.'c_exp_tax_cat')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$valuetoshow = $langs->trans($valuetoshow);\n\t\t\t\t\t\t\t}\n\n                            $class='tddict';\n                            if ($fieldlist[$field] == 'note' && $id == 10) $class.=' tdoverflowmax200';\n                            if ($fieldlist[$field] == 'tracking') $class.=' tdoverflowauto';\n                            if ($fieldlist[$field] == 'code') $class.=' width100';\n                            if ($fieldlist[$field] == 'position') $class.=' right';\n                            if ($fieldlist[$field] == 'localtax1_type') $class.=' nowrap';\n                            if ($fieldlist[$field] == 'localtax2_type') $class.=' nowrap';\n                            // Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<!-- '.$fieldlist[$field].' --><td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n                        }\n                    }\n\n                    // Can an entry be erased or disabled ?\n                    $iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n                    if (isset($obj->code) && $id != 10)\n                    {\n                    \tif (($obj->code == '0' || $obj->code == '' || preg_match('/unknown/i',$obj->code))) { $iserasable = 0; $canbedisabled = 0; }\n                    \telse if ($obj->code == 'RECEP') { $iserasable = 0; $canbedisabled = 0; }\n                    \telse if ($obj->code == 'EF0')   { $iserasable = 0; $canbedisabled = 0; }\n                    }\n\n                    if (isset($obj->type) && in_array($obj->type, array('system', 'systemauto'))) { $iserasable=0; }\n                    if (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO')) || in_array($obj->type, array('systemauto'))) { $canbedisabled=0; $canbedisabled = 0; }\n                    $canbemodified=$iserasable;\n                    if ($obj->code == 'RECEP') $canbemodified=1;\n                    if ($tabname[$id] == MAIN_DB_PREFIX.\"c_actioncomm\") $canbemodified=1;\n\n                    // Url\n                    $rowidcol=$tabrowid[$id];\n                    // If rowidcol not defined\n                    if (empty($rowidcol) || in_array($id, array(6,7,8,13,17,19,27))) $rowidcol='rowid';\n                    $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.((! empty($obj->{$rowidcol}) || $obj->{$rowidcol} == '0')?$obj->{$rowidcol}:(! empty($obj->code)?urlencode($obj->code):'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n                    if (! empty($param)) $url .= '&'.$param;\n                    if (! is_null($withentity)) $url .= '&entity='.$withentity;\n                    $url.='&';\n\n\t\t\t\t\t// Favorite\n\t\t\t\t\t// Only activated on country dictionary\n                    if ($id == 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tprint '<td align=\"center\" class=\"nowrap\">';\n\t\t\t\t\t\tif ($iserasable) print '<a href=\"'.$url.'action='.$acts[$obj->favorite].'_favorite\">'.$actl[$obj->favorite].'</a>';\n\t\t\t\t\t\telse print $langs->trans(\"AlwaysActive\");\n\t\t\t\t\t\tprint '</td>';\n\t\t\t\t\t}\n\n                    // Active\n                    print '<td align=\"center\" class=\"nowrap\">';\n                    if ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n                    else\n                 \t{\n                 \t\tif (in_array($obj->code, array('AC_OTH','AC_OTH_AUTO'))) print $langs->trans(\"AlwaysActive\");\n                 \t\telse if (isset($obj->type) && in_array($obj->type, array('systemauto')) && empty($obj->active)) print $langs->trans(\"Deprecated\");\n                  \t\telse if (isset($obj->type) && in_array($obj->type, array('system')) && ! empty($obj->active) && $obj->code != 'AC_OTH') print $langs->trans(\"UsedOnlyWithTypeOption\");\n                    \telse print $langs->trans(\"AlwaysActive\");\n                    }\n                    print \"</td>\";\n\n                    // Modify link\n                    if ($canbemodified) print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n                    else print '<td>&nbsp;</td>';\n\n                    // Delete link\n                    if ($iserasable)\n                    {\n                        print '<td align=\"center\">';\n                        if ($user->admin) print '<a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n                        //else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n                        print '</td>';\n                    }\n                    else print '<td>&nbsp;</td>';\n\n                    print \"</tr>\\n\";\n                }\n                $i++;\n            }\n        }\n\n        print '</table>';\n        print '</div>';\n    }\n    else {\n        dol_print_error($db);\n    }\n\n\n    print '</form>';\n}\nelse\n{\n    /*\n     * Show list of dictionary to show\n     */\n\n    $lastlineisempty=false;\n\n\tprint '<div class=\"div-table-responsive-no-min\">';\n    print '<table class=\"noborder\" width=\"100%\">';\n    print '<tr class=\"liste_titre\">';\n    //print '<td>'.$langs->trans(\"Module\").'</td>';\n    print '<td colspan=\"2\">'.$langs->trans(\"Dictionary\").'</td>';\n    print '<td>'.$langs->trans(\"Table\").'</td>';\n    print '</tr>';\n\n    $showemptyline='';\n    foreach ($taborder as $i)\n    {\n        if (isset($tabname[$i]) && empty($tabcond[$i])) continue;\n\n        if ($i)\n        {\n        \tif ($showemptyline)\n        \t{\n\n        \t\tprint '<tr class=\"oddeven\"><td width=\"30%\">&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>';\n        \t\t$showemptyline=0;\n        \t}\n\n\n            $value=$tabname[$i];\n            print '<tr class=\"oddeven\"><td width=\"50%\">';\n            if (! empty($tabcond[$i]))\n            {\n                print '<a href=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$i.'\">'.$langs->trans($tablib[$i]).'</a>';\n            }\n            else\n            {\n                print $langs->trans($tablib[$i]);\n            }\n            print '</td>';\n            print '<td>';\n            /*if (empty($tabcond[$i]))\n             {\n             print info_admin($langs->trans(\"DictionaryDisabledSinceNoModuleNeedIt\"),1);\n             }*/\n            print '</td>';\n            print '<td>'.$tabname[$i].'</td></tr>';\n            $lastlineisempty=false;\n        }\n        else\n        {\n            if (! $lastlineisempty)\n            {\n                $showemptyline=1;\n                $lastlineisempty=true;\n            }\n        }\n    }\n    print '</table>';\n    print '</div>';\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tstring\t\t\t\t\t\t'' or value of entity into table\n */\nfunction fieldList($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db,$mysoc;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\tif (! empty($conf->accounting->enabled)) $formaccounting = new FormAccounting($db);\n\n\t$withentity='';\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'entity') {\n\t\t\t$withentity = $obj->{$fieldlist[$field]};\n\t\t\tcontinue;\n\t\t}\n\n\t    if (in_array($fieldlist[$field], array('code', 'libelle', 'type')) && $tabname == MAIN_DB_PREFIX.\"c_actioncomm\" && in_array($obj->type, array('system','systemauto')))\n        {\n            $hidden = (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'');\n            print '<td>';\n            print '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$hidden.'\">';\n            print $langs->trans($hidden);\n            print '</td>';\n        }\n\t    elseif ($fieldlist[$field] == 'country')\n\t\t{\n\t\t\tif (in_array('region_id',$fieldlist))\n\t\t\t{\n\t\t\t\tprint '<td>';\n\t\t\t\t//print join(',',$fieldlist);\n\t\t\t\tprint '</td>';\n\t\t\t\tcontinue;\n\t\t\t}\t// For state page, we do not show the country input (we link to region, not country)\n\t\t\tprint '<td>';\n\t\t\t$fieldname='country';\n\t\t\tprint $form->select_country((! empty($obj->country_code)?$obj->country_code:(! empty($obj->country)?$obj->country:'')), $fieldname, '', 28, 'maxwidth150 maxwidthonsmartphone');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'country_id')\n\t\t{\n\t\t\tif (! in_array('country',$fieldlist))\t// If there is already a field country, we don't show country_id (avoid duplicate)\n\t\t\t{\n\t\t\t\t$country_id = (! empty($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : 0);\n\t\t\t\tprint '<td class=\"tdoverflowmax100\">';\n\t\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$country_id.'\">';\n\t\t\t\tprint '</td>';\n\t\t\t}\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$formcompany->select_region($region_id,'region');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'region_id')\n\t\t{\n\t\t\t$region_id = (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:0);\n\t\t\tprint '<td>';\n\t\t\tprint '<input type=\"hidden\" name=\"'.$fieldlist[$field].'\" value=\"'.$region_id.'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $formadmin->select_language($conf->global->MAIN_LANG_DEFAULT,'lang');\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'element')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('element', $elementList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\t// La source de l'element (pour les type de contact)\n\t\telseif ($fieldlist[$field] == 'source')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectarray('source', $sourceList,(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'private')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectyesno(\"private\",(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'type' && $tabname == MAIN_DB_PREFIX.\"c_actioncomm\")\n\t\t{\n\t\t\t$type = (! empty($obj->type)?$obj->type:'user'); // Check if type is different of 'user' (external module)\n\t\t\tprint '<td>';\n\t\t\tprint $type.'<input type=\"hidden\" name=\"type\" value=\"'.$type.'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'recuperableonly' || $fieldlist[$field] == 'type_cdr' || $fieldlist[$field] == 'deductible' || $fieldlist[$field] == 'category_type') {\n\t\t    if ($fieldlist[$field] == 'type_cdr') print '<td align=\"center\">';\n\t\t    else print '<td>';\n\t\t\tif ($fieldlist[$field] == 'type_cdr') {\n\t\t\t\tprint $form->selectarray($fieldlist[$field], array(0=>$langs->trans('None'), 1=>$langs->trans('AtEndOfMonth'), 2=>$langs->trans('CurrentNext')), (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\t} else {\n\t\t\t\tprint $form->selectyesno($fieldlist[$field],(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''),1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field],array('nbjour','decalage','taux','localtax1','localtax2'))) {\n\t\t\t$align=\"left\";\n\t\t\tif (in_array($fieldlist[$field],array('taux','localtax1','localtax2'))) $align=\"center\";\t// Fields aligned on right\n\t\t\tprint '<td align=\"'.$align.'\">';\n\t\t\tprint '<input type=\"text\" class=\"flat\" value=\"'.(isset($obj->{$fieldlist[$field]}) ? $obj->{$fieldlist[$field]} : '').'\" size=\"3\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif (in_array($fieldlist[$field], array('libelle_facture'))) {\n\t\t    print '<td>';\n\t\t    $transfound=0;\n\t        // Special case for labels\n\t        if ($tabname == MAIN_DB_PREFIX.'c_payment_term')\n\t        {\n\t            $langs->load(\"bills\");\n\t            $transkey=\"PaymentCondition\".strtoupper($obj->code);\n    \t        if ($langs->trans($transkey) != $transkey)\n                {\n                    $transfound=1;\n                    print $form->textwithpicto($langs->trans($transkey), $langs->trans(\"GoIntoTranslationMenuToChangeThis\"));\n                }\n\t        }\n\t\t    if (! $transfound)\n\t\t    {\n\t\t        print '<textarea cols=\"30\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea>';\n\t\t    }\n\t\t    print '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'price' || preg_match('/^amount/i',$fieldlist[$field])) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat minwidth75\" value=\"'.price((! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'')).'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->{$fieldlist[$field]})) {\n\t\t\tprint '<td class=\"maxxxx\"><input type=\"text\" class=\"flat minwidth75\" value=\"'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telseif ($fieldlist[$field]=='unit') {\n\t\t\tprint '<td>';\n\t\t\t$units = array(\n\t\t\t\t\t'mm' => $langs->trans('SizeUnitmm'),\n\t\t\t\t\t'cm' => $langs->trans('SizeUnitcm'),\n\t\t\t\t\t'point' => $langs->trans('SizeUnitpoint'),\n\t\t\t\t\t'inch' => $langs->trans('SizeUnitinch')\n\t\t\t);\n\t\t\tprint $form->selectarray('unit', $units, (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), 0, 0, 0);\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de taxe locale\n\t\telseif ($fieldlist[$field] == 'localtax1_type' || $fieldlist[$field] == 'localtax2_type')\n\t\t{\n\t\t\tprint '<td align=\"center\">';\n\t\t\tprint $form->selectarray($fieldlist[$field], $localtax_typeList, (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''));\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'accountancy_code' || $fieldlist[$field] == 'accountancy_code_sell' || $fieldlist[$field] == 'accountancy_code_buy')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif (! empty($conf->accounting->enabled))\n\t\t\t{\n\t\t\t    $fieldname = $fieldlist[$field];\n\t\t\t\t$accountancy_account = (! empty($obj->$fieldname) ? $obj->$fieldname : 0);\n\t\t\t\tprint $formaccounting->select_account($accountancy_account, '.'.$fieldlist[$field], 1, '', 1, 1, 'maxwidth200 maxwidthonsmartphone');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    $fieldname = $fieldlist[$field];\n\t\t\t    print '<input type=\"text\" size=\"10\" class=\"flat\" value=\"'.(isset($obj->$fieldname)?$obj->$fieldname:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'fk_tva')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->load_tva('fk_tva', $obj->taux, $mysoc, new Societe($db), 0, 0, '', false, -1);\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'fk_c_exp_tax_cat')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectExpenseCategories($obj->fk_c_exp_tax_cat);\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'fk_range')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $form->selectExpenseRanges($obj->fk_range);\n\t\t\tprint '</td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($fieldlist[$field]=='sortorder') $fieldlist[$field]='position';\n\n\t\t\t$classtd=''; $class='';\n\t\t\tif ($fieldlist[$field]=='code') $classtd='width100';\n\t\t\tif ($fieldlist[$field]=='affect') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='delay') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='position') $class='maxwidth50';\n\t\t\tif ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='tracking') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $class='maxwidth50';\n\t\t\tprint '<td class=\"'.$classtd.'\">';\n\t\t\t$transfound=0;\n\t\t\tif (in_array($fieldlist[$field], array('label','libelle')))\n\t\t\t{\n\t\t\t    $transkey='';\n\t\t\t    // Special case for labels\n\t\t\t    if ($tabname == MAIN_DB_PREFIX.'c_civility') {\n\t\t\t        $transkey=\"Civility\".strtoupper($obj->code);\n\t\t\t    }\n\t\t\t    if ($tabname == MAIN_DB_PREFIX.'c_payment_term') {\n\t\t\t        $langs->load(\"bills\");\n\t\t\t        $transkey=\"PaymentCondition\".strtoupper($obj->code);\n\t\t\t    }\n\t\t\t    if ($transkey && $langs->trans($transkey) != $transkey)\n\t\t\t    {\n\t\t\t        $transfound=1;\n\t\t\t        print $form->textwithpicto($langs->trans($transkey), $langs->trans(\"GoIntoTranslationMenuToChangeThis\"));\n\t\t\t    }\n\t\t\t}\n\t\t\tif (! $transfound)\n\t\t\t{\n                print '<input type=\"text\" class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t}\n\n\treturn $withentity;\n}\n\n", "<?php\n/* Copyright (C) 2004       Rodolphe Quiedeville    <rodolphe@quiedeville.org>\n * Copyright (C) 2004-2015  Laurent Destailleur     <eldy@users.sourceforge.net>\n * Copyright (C) 2004       Benoit Mortier          <benoit.mortier@opensides.be>\n * Copyright (C) 2005-2012  Regis Houssin           <regis.houssin@capnetworks.com>\n * Copyright (C) 2010-2016  Juanjo Menent           <jmenent@2byte.es>\n * Copyright (C) 2011-2017  Philippe Grand          <philippe.grand@atoo-net.com>\n * Copyright (C) 2011       Remy Younes             <ryounes@gmail.com>\n * Copyright (C) 2012-2015  Marcos Garc\u00eda           <marcosgdf@gmail.com>\n * Copyright (C) 2012       Christophe Battarel     <christophe.battarel@ltairis.fr>\n * Copyright (C) 2011-2016  Alexandre Spangaro      <aspangaro.dolibarr@gmail.com>\n * Copyright (C) 2015       Ferran Marcet           <fmarcet@2byte.es>\n * Copyright (C) 2016       Rapha\u00ebl Doursenaud      <rdoursenaud@gpcsolutions.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/admin/mails_templates.php\n *\t\t\\ingroup    core\n *\t\t\\brief      Page to administer emails templates\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/accounting.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formaccounting.class.php';\n\n// Load traductions files requiredby by page\n$langs->loadLangs(array(\"errors\",\"admin\",\"mails\",\"languages\"));\n\n$action     = GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm    = GETPOST('confirm','alpha');\t\t\t\t\t\t\t\t\t\t\t\t// Result of a confirmation\n\n$id\t\t\t= GETPOST('id','int');\n$rowid\t\t= GETPOST('rowid','alpha');\n$search_label=GETPOST('search_label','alpha');\n$search_type_template=GETPOST('search_type_template','alpha');\n$search_lang=GETPOST('search_lang','alpha');\n$search_fk_user=GETPOST('search_fk_user','intcomma');\n$search_topic=GETPOST('search_topic','alpha');\n\nif (! empty($user->socid)) accessforbidden();\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$listoffset=GETPOST('listoffset','alpha');\n$listlimit =GETPOST('listlimit','alpha')>0?GETPOST('listlimit','alpha'):1000;\n$active = 1;\n\n$sortfield = GETPOST(\"sortfield\",'alpha');\n$sortorder = GETPOST(\"sortorder\",'alpha');\n$page = GETPOST(\"page\",'int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $listlimit * $page ;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\nif (empty($sortfield)) $sortfield='label, lang, position';\nif (empty($sortorder)) $sortorder='ASC';\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('emailtemplates'));\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[25]= MAIN_DB_PREFIX.\"c_email_templates\";\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[25]=\"label ASC, lang ASC, position ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[25]= \"label,type_template,lang,fk_user,private,position,topic,joinfiles,content\";\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) $tabfield[25].=',content_lines';\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[25]= \"label,type_template,fk_user,lang,private,position,topic,joinfiles,content\";\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) $tabfieldvalue[25].=',content_lines';\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[25]= \"label,type_template,fk_user,lang,private,position,topic,joinfiles,content\";\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) $tabfieldinsert[25].=',content_lines';\n$tabfieldinsert[25].=',entity';     // Must be at end because not into other arrays\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[25]= true;\n\n// List of help for fields\n// Set MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES to allow edit of template for lines\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';\n$formmail=new FormMail($db);\nif (empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES))\n{\n    $tmp=FormMail::getAvailableSubstitKey('formemail');\n    $tmp['__(AnyTranslationKey)__']='Translation';\n    $helpsubstit = $langs->trans(\"AvailableVariables\").':<br>';\n    $helpsubstitforlines = $langs->trans(\"AvailableVariables\").':<br>';\n    foreach($tmp as $key => $val)\n    {\n    \t$helpsubstit.=$key.' -> '.$val.'<br>';\n    \t$helpsubstitforlines.=$key.' -> '.$val.'<br>';\n    }\n}\nelse\n{\n    $tmp=FormMail::getAvailableSubstitKey('formemailwithlines');\n    $tmp['__(AnyTranslationKey)__']='Translation';\n    $helpsubstit = $langs->trans(\"AvailableVariables\").':<br>';\n    $helpsubstitforlines = $langs->trans(\"AvailableVariables\").':<br>';\n    foreach($tmp as $key => $val)\n    {\n    \t$helpsubstit.=$key.' -> '.$val.'<br>';\n    }\n    $tmp=FormMail::getAvailableSubstitKey('formemailforlines');\n    foreach($tmp as $key => $val)\n    {\n    \t$helpsubstitforlines.=$key.' -> '.$val.'<br>';\n    }\n}\n\n\n$tabhelp=array();\n$tabhelp[25] = array('topic'=>$helpsubstit,'joinfiles'=>$langs->trans('AttachMainDocByDefault'), 'content'=>$helpsubstit,'content_lines'=>$helpsubstitforlines,'type_template'=>$langs->trans(\"TemplateForElement\"),'private'=>$langs->trans(\"TemplateIsVisibleByOwnerOnly\"), 'position'=>$langs->trans(\"PositionIntoComboList\"));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[25] = array();\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n// We save list of template email Dolibarr can manage. This list can found by a grep into code on \"->param['models']\"\n$elementList = array();\nif ($conf->propal->enabled)            $elementList['propal_send']=$langs->trans('MailToSendProposal');\nif ($conf->commande->enabled)          $elementList['order_send']=$langs->trans('MailToSendOrder');\nif ($conf->facture->enabled)           $elementList['facture_send']=$langs->trans('MailToSendInvoice');\nif ($conf->expedition->enabled)        $elementList['shipping_send']=$langs->trans('MailToSendShipment');\nif ($conf->ficheinter->enabled)        $elementList['fichinter_send']=$langs->trans('MailToSendIntervention');\nif ($conf->supplier_proposal->enabled) $elementList['supplier_proposal_send']=$langs->trans('MailToSendSupplierRequestForQuotation');\nif ($conf->fournisseur->enabled)       $elementList['order_supplier_send']=$langs->trans('MailToSendSupplierOrder');\nif ($conf->fournisseur->enabled)       $elementList['invoice_supplier_send']=$langs->trans('MailToSendSupplierInvoice');\nif ($conf->societe->enabled)           $elementList['thirdparty']=$langs->trans('MailToThirdparty');\nif ($conf->adherent->enabled)          $elementList['member']=$langs->trans('MailToMember');\nif ($conf->contrat->enabled)           $elementList['contract']=$langs->trans('MailToSendContract');\n$elementList['user']=$langs->trans('MailToUser');\n$elementList['all'] =$langs->trans('VisibleEverywhere');\n$elementList['none']=$langs->trans('VisibleNowhere');\n\n\n$parameters=array('elementList'=>$elementList);\n$reshook=$hookmanager->executeHooks('emailElementlist',$parameters);    // Note that $action and $object may have been modified by some hooks\nif ($reshook == 0) {\n\tforeach ($hookmanager->resArray as $item => $value) {\n\t\t$elementList[$item] = $value;\n\t}\n}\n\n$id = 25;\n\n\n/*\n * Actions\n */\n\nif (GETPOST('cancel','alpha')) { $action='list'; $massaction=''; }\nif (! GETPOST('confirmmassaction','alpha') && $massaction != 'presend' && $massaction != 'confirm_presend') { $massaction=''; }\n\n$parameters=array();\n$reshook=$hookmanager->executeHooks('doActions',$parameters,$object,$action);    // Note that $action and $object may have been modified by some hooks\nif ($reshook < 0) setEventMessages($hookmanager->error, $hookmanager->errors, 'errors');\n\nif (empty($reshook))\n{\n    // Purge search criteria\n    if (GETPOST('button_removefilter_x','alpha') || GETPOST('button_removefilter.x','alpha') ||GETPOST('button_removefilter','alpha')) // All tests are required to be compatible with all browsers\n    {\n        $search_label='';\n        $search_type_template='';\n        $search_lang='';\n        $search_fk_user='';\n        $search_topic='';\n        $toselect='';\n        $search_array_options=array();\n    }\n\n    // Actions add or modify an entry into a dictionary\n    if (GETPOST('actionadd') || GETPOST('actionmodify'))\n    {\n        $listfield=explode(',', str_replace(' ', '',$tabfield[$id]));\n        $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n        $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n        $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n        // Check that all fields are filled\n        $ok=1;\n        foreach ($listfield as $f => $value)\n        {\n        \t// Not mandatory fields\n            if ($value == 'joinfiles') continue;\n            if ($value == 'content') continue;\n            if ($value == 'content_lines') continue;\n\n            if (GETPOST('actionmodify') && $value == 'topic') $_POST['topic']=$_POST['topic-'.$rowid];\n\n            if ((! isset($_POST[$value]) || $_POST[$value]=='' || $_POST[$value]=='-1') && $value != 'lang' && $value != 'fk_user' && $value != 'position')\n            {\n                $ok=0;\n                $fieldnamekey=$listfield[$f];\n                // We take translate key of field\n                if ($fieldnamekey == 'libelle' || ($fieldnamekey == 'label'))  $fieldnamekey='Label';\n                if ($fieldnamekey == 'libelle_facture') $fieldnamekey = 'LabelOnDocuments';\n                if ($fieldnamekey == 'code') $fieldnamekey = 'Code';\n                if ($fieldnamekey == 'note') $fieldnamekey = 'Note';\n                if ($fieldnamekey == 'type_template') $fieldnamekey = 'TypeOfTemplate';\n                if ($fieldnamekey == 'fk_user') $fieldnamekey = 'Owner';\n                if ($fieldnamekey == 'private') $fieldnamekey = 'Private';\n                if ($fieldnamekey == 'position') $fieldnamekey = 'Position';\n                if ($fieldnamekey == 'topic') $fieldnamekey = 'Topic';\n\n                setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n            }\n        }\n\n        // Si verif ok et action add, on ajoute la ligne\n        if ($ok && GETPOST('actionadd'))\n        {\n            // Add new entry\n            $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n            // List of fields\n            $sql.= $tabfieldinsert[$id];\n            $sql.=\",active)\";\n            $sql.= \" VALUES(\";\n\n            // List of values\n            $i=0;\n            foreach ($listfieldinsert as $f => $value)\n            {\n            \t//var_dump($i.' - '.$listfieldvalue[$i].' - '.$_POST[$listfieldvalue[$i]].' - '.$value);\n            \t$keycode=$listfieldvalue[$i];\n            \tif ($value == 'lang') $keycode='langcode';\n                if ($value == 'entity') $_POST[$keycode] = $conf->entity;\n                if ($i) $sql.=\",\";\n                if ($value == 'fk_user' && ! ($_POST[$keycode] > 0)) $_POST[$keycode]='';\n                if ($value == 'private' && ! is_numeric($_POST[$keycode])) $_POST[$keycode]='0';\n                if ($value == 'position' && ! is_numeric($_POST[$keycode])) $_POST[$keycode]='1';\n                if ($_POST[$keycode] == '' && $keycode != 'langcode') $sql.=\"null\";\t\t// lang must be '' if not defined so the unique key that include lang will work\n                elseif ($_POST[$keycode] == '0' && $keycode == 'langcode') $sql.=\"null\";\n                else $sql.=\"'\".$db->escape($_POST[$keycode]).\"'\";\n                $i++;\n            }\n            $sql.=\",1)\";\n\n            dol_syslog(\"actionadd\", LOG_DEBUG);\n            $result = $db->query($sql);\n            if ($result)\t// Add is ok\n            {\n                setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n            \t$_POST=array('id'=>$id);\t// Clean $_POST array, we keep only\n            }\n            else\n            {\n                if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                    setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n                }\n                else {\n                    dol_print_error($db);\n                }\n            }\n        }\n\n        // Si verif ok et action modify, on modifie la ligne\n        if ($ok && GETPOST('actionmodify'))\n        {\n            $rowidcol=\"rowid\";\n\n            // Modify entry\n            $sql = \"UPDATE \".$tabname[$id].\" SET \";\n            // Modifie valeur des champs\n            $i = 0;\n            foreach ($listfieldmodify as $field)\n            {\n            \t$keycode=$listfieldvalue[$i];\n            \tif ($field == 'lang') $keycode='langcode';\n\n                if ($field == 'fk_user' && ! ($_POST['fk_user'] > 0)) $_POST['fk_user']='';\n            \tif ($field == 'topic') $_POST['topic']=$_POST['topic-'.$rowid];\n            \tif ($field == 'joinfiles') $_POST['joinfiles']=$_POST['joinfiles-'.$rowid];\n            \tif ($field == 'content') $_POST['content']=$_POST['content-'.$rowid];\n            \tif ($field == 'content_lines') $_POST['content_lines']=$_POST['content_lines-'.$rowid];\n                if ($field == 'entity') $_POST[$keycode] = $conf->entity;\n                if ($i) $sql.=\",\";\n                $sql.= $field.\"=\";\n                if ($_POST[$keycode] == '' || ($keycode == 'langcode' && empty($_POST[$keycode]))) $sql.=\"null\";  // For vat, we want/accept code = ''\n                else $sql.=\"'\".$db->escape($_POST[$keycode]).\"'\";\n                $i++;\n            }\n            $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n            dol_syslog(\"actionmodify\", LOG_DEBUG);\n            //print $sql;\n            $resql = $db->query($sql);\n            if ($resql)\n            {\n            \tsetEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n            }\n            else\n            {\n                setEventMessages($db->error(), null, 'errors');\n            }\n        }\n    }\n\n    if ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n    {\n        $rowidcol=\"rowid\";\n\n        $sql = \"DELETE from \".$tabname[$id].\" WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n        dol_syslog(\"delete\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if (! $result)\n        {\n            if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n            {\n                setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n            }\n            else\n            {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // activate\n    if ($action == $acts[0])\n    {\n        $rowidcol=\"rowid\";\n\n        $sql = \"UPDATE \".$tabname[$id].\" SET active = 1 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n        $result = $db->query($sql);\n        if (!$result)\n        {\n            dol_print_error($db);\n        }\n    }\n\n    // disable\n    if ($action == $acts[1])\n    {\n        $rowidcol=\"rowid\";\n\n        $sql = \"UPDATE \".$tabname[$id].\" SET active = 0 WHERE \".$rowidcol.\"='\".$rowid.\"'\";\n\n        $result = $db->query($sql);\n        if (!$result)\n        {\n            dol_print_error($db);\n        }\n    }\n}\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader();\n\n$titre=$langs->trans(\"EMailsSetup\");\n$linkback='';\n$titlepicto='title_setup';\n\nprint load_fiche_titre($titre,$linkback,$titlepicto);\n\n$head = email_admin_prepare_head();\n\ndol_fiche_head($head, 'templates', '', -1);\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n\n$sql=\"SELECT rowid as rowid, label, type_template, lang, fk_user, private, position, topic, joinfiles, content_lines, content, active\";\n$sql.=\" FROM \".MAIN_DB_PREFIX.\"c_email_templates\";\n$sql.=\" WHERE entity IN (\".getEntity('email_template').\")\";\nif (! $user->admin)\n{\n\t$sql.=\" AND (private = 0 OR (private = 1 AND fk_user = \".$user->id.\"))\";\t// Show only public and private to me\n\t$sql.=\" AND (active = 1 OR fk_user = \".$user->id.\")\";\t\t\t\t\t\t// Show only active or owned by me\n}\nif (empty($conf->global->MAIN_MULTILANGS))\n{\n\t$sql.= \" AND (lang = '\".$langs->defaultlang.\"' OR lang IS NULL OR lang = '')\";\n}\nif ($search_label) $sql.=natural_search('label', $search_label);\nif ($search_type_template != '' && $search_type_template != '-1') $sql.=natural_search('type_template', $search_type_template);\nif ($search_lang) $sql.=natural_search('lang', $search_lang);\nif ($search_fk_user != '' && $search_fk_user != '-1') $sql.=natural_search('fk_user', $search_fk_user, 2);\nif ($search_topic) $sql.=natural_search('topic', $search_topic);\n// If sort order is \"country\", we use country_code instead\nif ($sortfield == 'country') $sortfield='country_code';\n$sql.=$db->order($sortfield,$sortorder);\n$sql.=$db->plimit($listlimit+1,$offset);\n//print $sql;\n\n$fieldlist=explode(',',$tabfield[$id]);\n\n// Form to add a new line\n$alabelisused=0;\n$var=false;\n\nprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\nprint '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\nprint '<div class=\"div-table-responsive-no-min\">';\nprint '<table class=\"noborder\" width=\"100%\">';\n\n// Line to enter new values (title)\nprint '<tr class=\"liste_titre\">';\nforeach ($fieldlist as $field => $value)\n{\n        // Determine le nom du champ par rapport aux noms possibles\n        // dans les dictionnaires de donnees\n        $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n        $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n        $align=\"left\";\n        if ($fieldlist[$field]=='fk_user')         { $valuetoshow=$langs->trans(\"Owner\");}\n        if ($fieldlist[$field]=='lang')            { $valuetoshow=(empty($conf->global->MAIN_MULTILANGS) ? '&nbsp;' : $langs->trans(\"Language\")); }\n        if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n        if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n        if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') { $valuetoshow=$langs->trans(\"Label\"); }\n        if ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n    \tif ($fieldlist[$field]=='private')         { $align='center'; }\n    \tif ($fieldlist[$field]=='position')        { $align='center'; }\n\n    \tif ($fieldlist[$field]=='topic')           { $valuetoshow=''; }\n    \tif ($fieldlist[$field]=='joinfiles')       { $valuetoshow=''; }\n    \tif ($fieldlist[$field]=='content')         { $valuetoshow=''; }\n    \tif ($fieldlist[$field]=='content_lines')   { $valuetoshow=''; }\n\n        if ($valuetoshow != '')\n        {\n            print '<td align=\"'.$align.'\">';\n        \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n        \telse if (! empty($tabhelp[$id][$value]))\n        \t{\n        \t    if (in_array($value, array('topic'))) print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, $value);   // Tooltip on click\n        \t    else print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2);                             // Tooltip on hover\n        \t}\n        \telse print $valuetoshow;\n            print '</td>';\n         }\n         if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n}\nprint '<td>';\nprint '<input type=\"hidden\" name=\"id\" value=\"' . $id . '\">';\nprint '</td>';\nprint '</tr>';\n\n$obj = new stdClass();\n// If data was already input, we define them in obj to populate input fields.\nif (GETPOST('actionadd'))\n{\n\tforeach ($fieldlist as $key => $val) {\n\t\tif (GETPOST($val) != '')\n\t\t\t$obj->$val = GETPOST($val);\n\t}\n}\n\n$tmpaction = 'create';\n$parameters = array(\n\t'fieldlist' => $fieldlist,\n\t'tabname' => $tabname[$id]\n);\n$reshook = $hookmanager->executeHooks('createDictionaryFieldlist', $parameters, $obj, $tmpaction); // Note that $action and $object may have been modified by some hooks\n$error = $hookmanager->error;\n$errors = $hookmanager->errors;\n\n\n// Line to enter new values (input fields)\nprint \"<tr \" . $bcnd[$var] . \">\";\n\nif (empty($reshook))\n{\n\tif ($action == 'edit') {\n\t\tfieldList($fieldlist, $obj, $tabname[$id], 'hide');\n\t} else {\n\t\tfieldList($fieldlist, $obj, $tabname[$id], 'add');\n\t}\n}\n\nprint '<td align=\"right\">';\nprint '</td>';\nprint \"</tr>\";\n\n$fieldsforcontent = array('topic', 'joinfiles', 'content');\nif (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) { $fieldsforcontent = array('content','content_lines'); }\nforeach ($fieldsforcontent as $tmpfieldlist)\n{\n\tprint '<tr class=\"impair nodrag nodrop nohover\"><td colspan=\"6\" class=\"nobottom\">';\n\t// Label\n\tif ($tmpfieldlist == 'topic')\n\t{\n\t\tprint '<strong>' . $form->textwithpicto($langs->trans(\"Topic\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n\t}\n\tif ($tmpfieldlist == 'joinfiles')\n\t{\n\t\tprint '<strong>' . $form->textwithpicto($langs->trans(\"FilesAttachedToEmail\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n\t}\n\tif ($tmpfieldlist == 'content')\n\t\tprint $form->textwithpicto($langs->trans(\"Content\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist);\n\tif ($tmpfieldlist == 'content_lines')\n\t\tprint $form->textwithpicto($langs->trans(\"ContentForLines\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '<br>';\n\t// Input field\n\tif ($tmpfieldlist == 'topic') {\n\t\tprint '<input type=\"text\" class=\"flat minwidth500\" name=\"'.$tmpfieldlist.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n\t}\n\telse if ($tmpfieldlist == 'joinfiles') {\n\t\tprint '<input type=\"text\" class=\"flat maxwidth50\" name=\"'.$tmpfieldlist.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n\t}\n\telse\n\t{\n\t\tif ($context != 'hide') {\n\t\t\t// print '<textarea cols=\"3\" rows=\"'.ROWS_2.'\" class=\"flat\" name=\"'.$fieldlist[$field].'\">'.(! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'</textarea>';\n\t\t\t$okforextended = true;\n\t\t\tif (empty($conf->global->FCKEDITOR_ENABLE_MAIL))\n\t\t\t\t$okforextended = false;\n\t\t\t$doleditor = new DolEditor($tmpfieldlist, (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : ''), '', 120, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_4, '90%');\n\t\t\tprint $doleditor->Create(1);\n\t\t}\n\t\telse\n\t\t\tprint '&nbsp;';\n\t}\n\tprint '</td>';\n\tif ($tmpfieldlist == 'topic') {\n\t\tprint '<td align=\"center\" rowspan=\"' . (count($fieldsforcontent)) . '\">';\n\t\tif ($action != 'edit') {\n\t\t\tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"' . $langs->trans(\"Add\") . '\">';\n\t\t}\n\t\tprint '</td>';\n\t}\n\t// else print '<td></td>';\n\tprint '</tr>';\n}\n\n\n\n$colspan=count($fieldlist)+1;\n//print '<tr><td colspan=\"'.$colspan.'\">&nbsp;</td></tr>';\t// Keep &nbsp; to have a line with enough height\n\nprint '</table>';\nprint '</div>';\n\nprint '</form>';\n\nprint '<br>';\n\n\nprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$id.'\" method=\"POST\">';\nprint '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\nprint '<input type=\"hidden\" name=\"from\" value=\"'.dol_escape_htmltag(GETPOST('from','alpha')).'\">';\n\nprint '<div class=\"div-table-responsive-no-min\">';\nprint '<table class=\"noborder\" width=\"100%\">';\n\n// List of available record in database\ndol_syslog(\"htdocs/admin/dict\", LOG_DEBUG);\n$resql=$db->query($sql);\nif ($resql)\n{\n    $num = $db->num_rows($resql);\n    $i = 0;\n    $var=true;\n\n    $param = '&id='.$id;\n    $paramwithsearch = $param;\n    if ($sortorder) $paramwithsearch.= '&sortorder='.$sortorder;\n    if ($sortfield) $paramwithsearch.= '&sortfield='.$sortfield;\n    if (GETPOST('from')) $paramwithsearch.= '&from='.GETPOST('from','alpha');\n\n    // There is several pages\n    if ($num > $listlimit)\n    {\n        print '<tr class=\"none\"><td align=\"right\" colspan=\"'.(3+count($fieldlist)).'\">';\n        print_fleche_navigation($page, $_SERVER[\"PHP_SELF\"], $paramwithsearch, ($num > $listlimit), '<li class=\"pagination\"><span>'.$langs->trans(\"Page\").' '.($page+1).'</span></li>');\n        print '</td></tr>';\n    }\n\n\n    // Title line with search boxes\n    print '<tr class=\"liste_titre\">';\n    $filterfound=0;\n    foreach ($fieldlist as $field => $value)\n    {\n        if ($value == 'label') print '<td class=\"liste_titre\"><input type=\"text\" name=\"search_label\" value=\"'.dol_escape_htmltag($search_label).'\"></td>';\n        elseif ($value == 'lang')\n        {\n        \tprint '<td class=\"liste_titre\">';\n        \tprint $formadmin->select_language($search_lang, 'search_lang', 0, null, 1);\n        \tprint '</td>';\n        }\n        elseif ($value == 'fk_user')\n        {\n        \tprint '<td class=\"liste_titre\">';\n        \t$restrictid=array();\n        \tif (! $user->admin) $restrictid=array($user->id);\n        \t//var_dump($restrictid);\n        \tprint $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, 'hierarchyme', null, 0, 0, 1, '', 0, '', 'maxwidth200');\n        \tprint '</td>';\n        }\n        elseif ($value == 'topic') print '<td class=\"liste_titre\"><input type=\"text\" name=\"search_topic\" value=\"'.dol_escape_htmltag($search_topic).'\"></td>';\n        elseif ($value == 'type_template')\n        {\n        \tprint '<td class=\"liste_titre\">'.$form->selectarray('search_type_template', $elementList, $search_type_template, 1, 0, 0, '', 0, 0, 0, '', 'maxwidth100onsmartphone').'</td>';\n        }\n        elseif (! in_array($value, array('content', 'content_lines'))) print '<td class=\"liste_titre\"></td>';\n    }\n    if (empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES)) print '<td class=\"liste_titre\"></td>';\n    // Action column\n    print '<td class=\"liste_titre\" align=\"right\" width=\"64\">';\n    $searchpicto=$form->showFilterButtons();\n    print $searchpicto;\n    print '</td>';\n    print '</tr>';\n\n    // Title of lines\n    print '<tr class=\"liste_titre\">';\n    foreach ($fieldlist as $field => $value)\n    {\n        // Determine le nom du champ par rapport aux noms possibles\n        // dans les dictionnaires de donnees\n        $showfield=1;\t\t\t\t\t\t\t  \t// By defaut\n        $align=\"left\";\n        $sortable=1;\n        $valuetoshow='';\n        /*\n        $tmparray=getLabelOfField($fieldlist[$field]);\n        $showfield=$tmp['showfield'];\n        $valuetoshow=$tmp['valuetoshow'];\n        $align=$tmp['align'];\n        $sortable=$tmp['sortable'];\n\t\t*/\n        $valuetoshow=ucfirst($fieldlist[$field]);   // By defaut\n        $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n        if ($fieldlist[$field]=='fk_user')         { $valuetoshow=$langs->trans(\"Owner\"); }\n        if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n        if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n        if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') { $valuetoshow=$langs->trans(\"Label\"); }\n    \tif ($fieldlist[$field]=='type_template')   { $valuetoshow=$langs->trans(\"TypeOfTemplate\"); }\n\t\tif ($fieldlist[$field]=='private')         { $align='center'; }\n\t\tif ($fieldlist[$field]=='position')        { $align='center'; }\n\n\t\tif ($fieldlist[$field]=='joinfiles')       { $valuetoshow=$langs->trans(\"FilesAttachedToEmail\"); $align='center'; }\n\t\tif ($fieldlist[$field]=='content')         { $valuetoshow=$langs->trans(\"Content\"); $showfield=0;}\n\t\tif ($fieldlist[$field]=='content_lines')   { $valuetoshow=$langs->trans(\"ContentLines\"); $showfield=0; }\n\n        // Affiche nom du champ\n        if ($showfield)\n        {\n            if (! empty($tabhelp[$id][$value]))\n            {\n                if (in_array($value, array('topic'))) $valuetoshow = $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, 'tooltip'.$value);   // Tooltip on click\n                else $valuetoshow = $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, '', 1);\t// Tooltip on hover\n            }\n            print getTitleFieldOfList($valuetoshow, 0, $_SERVER[\"PHP_SELF\"], ($sortable?$fieldlist[$field]:''), ($page?'page='.$page.'&':''), $param, \"align=\".$align, $sortfield, $sortorder);\n        }\n    }\n\n    print getTitleFieldOfList($langs->trans(\"Status\"), 0, $_SERVER[\"PHP_SELF\"], \"active\", ($page?'page='.$page.'&':''), $param, 'align=\"center\"', $sortfield, $sortorder);\n    print getTitleFieldOfList('');\n    print '</tr>';\n\n    if ($num)\n    {\n        // Lines with values\n        while ($i < $num)\n        {\n            $obj = $db->fetch_object($resql);\n\n            print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n\n            if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n            {\n            \t$tmpaction='edit';\n                $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                // Show fields\n                if (empty($reshook)) fieldList($fieldlist,$obj,$tabname[$id],'edit');\n\n                print '<td></td><td></td><td></td>';\n                print '<td align=\"center\">';\n                print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n                print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n                print '<input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                print '<div name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\"></div>';\n                print '<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n                print '</td>';\n\n                $fieldsforcontent = array('topic', 'joinfiles', 'content');\n                if (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES))\n                {\n                    $fieldsforcontent = array('topic', 'joinfiles', 'content', 'content_lines');\n                }\n                foreach ($fieldsforcontent as $tmpfieldlist)\n                {\n                    $showfield = 1;\n                    $align = \"left\";\n                    $valuetoshow = $obj->{$tmpfieldlist};\n\n                    $class = 'tddict';\n                    // Show value for field\n                    if ($showfield) {\n\t\t\t\t\t\t// Show line for topic, joinfiles and content\n                        print '</tr><tr class=\"oddeven\" nohover tr-'.$tmpfieldlist.'-'.$rowid.' \">';\n                        print '<td colspan=\"8\">';\n                        if ($tmpfieldlist == 'topic')\n                        {\n\t                        print '<strong>' . $form->textwithpicto($langs->trans(\"Topic\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n    \t                    print '<input type=\"text\" class=\"flat minwidth500\" name=\"'.$tmpfieldlist.'-'.$rowid.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n                        }\n                        if ($tmpfieldlist == 'joinfiles')\n                        {\n                        \tprint '<strong>' . $form->textwithpicto($langs->trans(\"FilesAttachedToEmail\"), $tabhelp[$id][$tmpfieldlist], 1, 'help', '', 0, 2, $tmpfieldlist) . '</strong> ';\n                        \tprint '<input type=\"text\" class=\"flat maxwidth50\" name=\"'.$tmpfieldlist.'-'.$rowid.'\" value=\"' . (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : '') . '\">';\n                        }\n                        if ($tmpfieldlist == 'content')\n                        {\n                        \t$okforextended = true;\n                        \tif (empty($conf->global->FCKEDITOR_ENABLE_MAIL)) $okforextended = false;\n                        \t$doleditor = new DolEditor($tmpfieldlist.'-'.$rowid, (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : ''), '', 140, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_6, '90%');\n                        \tprint $doleditor->Create(1);\n                        }\n                        print '</td>';\n                        print '<td></td>';\n                        print '<td></td>';\n                    }\n                }\n            }\n            else\n            {\n              \t$tmpaction = 'view';\n                $parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                if (empty($reshook))\n                {\n                    foreach ($fieldlist as $field => $value)\n                    {\n                        if (in_array($fieldlist[$field], array('content','content_lines'))) continue;\n                        $showfield=1;\n                    \t$align=\"left\";\n                        $valuetoshow=$obj->{$fieldlist[$field]};\n                        if ($value == 'type_template')\n                        {\n                            $valuetoshow = isset($elementList[$valuetoshow])?$elementList[$valuetoshow]:$valuetoshow;\n                        }\n                        if ($value == 'lang' && $valuetoshow)\n                        {\n                        \t$valuetoshow = $valuetoshow.' - '.$langs->trans(\"Language_\".$valuetoshow);\n                        }\n                        if ($value == 'fk_user')\n                        {\n                        \tif ($valuetoshow > 0)\n                        \t{\n                        \t\t$fuser=new User($db);\n                        \t\t$fuser->fetch($valuetoshow);\n                        \t\t$valuetoshow = $fuser->getNomUrl(1);\n                        \t}\n                        }\n                        if ($value == 'private')\n                        {\n                        \t$align=\"center\";\n                        \tif ($valuetoshow) $valuetoshow=yn($valuetoshow);\n                        \telse $valuetoshow='';\n                        }\n                        if ($value == 'position')\n                        {\n                        \t$align=\"center\";\n                        }\n                        if ($value == 'joinfiles')\n                        {\n                        \t$align=\"center\";\n                        \tif ($valuetoshow) $valuetoshow=1;\n                        \telse $valuetoshow='';\n                        }\n\n                        $class='tddict';\n\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\tif ($showfield)\n\t\t\t\t\t\t{\n                           \tprint '<!-- '.$fieldlist[$field].' -->';\n                           \tprint '<td align=\"'.$align.'\" class=\"'.$class.'\">'.$valuetoshow.'</td>';\n\t\t\t\t\t\t}\n                    }\n                }\n\n                // Can an entry be erased or disabled ?\n                $iserasable=1;$canbedisabled=1;$canbemodified=1;\t// true by default\n                if (! $user->admin && $obj->fk_user != $user->id)\n                {\n                \t$iserasable=0;\n                \t$canbedisabled=0;\n                \t$canbemodified=0;\n                }\n\n                $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&code='.(! empty($obj->code)?urlencode($obj->code):'');\n                if ($param) $url .= '&'.$param;\n                $url.='&';\n\n                // Status / Active\n                print '<td align=\"center\" class=\"nowrap\">';\n                if ($canbedisabled) print '<a href=\"'.$url.'action='.$acts[$obj->active].'\">'.$actl[$obj->active].'</a>';\n                print \"</td>\";\n\n                // Modify link / Delete link\n                print '<td align=\"center\" width=\"64\">';\n                if ($canbemodified) print '<a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a>';\n                if ($iserasable)\n                {\n                    print ' &nbsp; <a href=\"'.$url.'action=delete\">'.img_delete().'</a>';\n                    //else print '<a href=\"#\">'.img_delete().'</a>';    // Some dictionary can be edited by other profile than admin\n                }\n                print '</td>';\n\n\n                /*\n                $fieldsforcontent = array('content');\n                if (! empty($conf->global->MAIN_EMAIL_TEMPLATES_FOR_OBJECT_LINES))\n                {\n                    $fieldsforcontent = array('content', 'content_lines');\n                }\n                foreach ($fieldsforcontent as $tmpfieldlist)\n                {\n                    $showfield = 1;\n                    $align = \"left\";\n                    $valuetoshow = $obj->{$tmpfieldlist};\n\n                    $class = 'tddict';\n                    // Show value for field\n                    if ($showfield) {\n\n                        print '</tr><tr class=\"oddeven\" nohover tr-'.$tmpfieldlist.'-'.$i.' \"><td colspan=\"5\">'; // To create an artificial CR for the current tr we are on\n                        $okforextended = true;\n                        if (empty($conf->global->FCKEDITOR_ENABLE_MAIL))\n                            $okforextended = false;\n                        $doleditor = new DolEditor($tmpfieldlist.'-'.$i, (! empty($obj->{$tmpfieldlist}) ? $obj->{$tmpfieldlist} : ''), '', 140, 'dolibarr_mailings', 'In', 0, false, $okforextended, ROWS_6, '90%', 1);\n                        print $doleditor->Create(1);\n                        print '</td>';\n                        print '<td></td><td></td><td></td>';\n\n                    }\n                }*/\n            }\n            print \"</tr>\\n\";\n\n\n            $i++;\n        }\n    }\n}\nelse {\n    dol_print_error($db);\n}\n\nprint '</table>';\nprint '</div>';\n\nprint '</form>';\n\n\ndol_fiche_end();\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldList($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf, $langs, $user, $db;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\t$formcompany = new FormCompany($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t\tif ($fieldlist[$field] == 'fk_user')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif ($user->admin)\n\t\t\t{\n\t\t\t\tprint $form->select_dolusers($obj->{$fieldlist[$field]}, 'fk_user', 1, null, 0, '', null, 0, 0, 1, '', 0, '', 'maxwidth200');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ($context == 'add')\t// I am not admin and we show the add form\n\t\t\t\t{\n\t\t\t\t\tprint $user->getNomUrl(1);\t\t// Me\n\t\t\t\t\t$forcedvalue=$user->id;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif ($obj && ! empty($obj->{$fieldlist[$field]}) && $obj->{$fieldlist[$field]} > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t$fuser=new User($db);\n\t\t\t\t\t\t$fuser->fetch($obj->{$fieldlist[$field]});\n\t\t\t\t\t\tprint $fuser->getNomUrl(1);\n\t\t\t\t\t\t$forcedvalue=$fuser->id;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$forcedvalue=$obj->{$fieldlist[$field]};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$keyname=$fieldlist[$field];\n\t\t\t\tprint '<input type=\"hidden\" value=\"'.$forcedvalue.'\" name=\"'.$keyname.'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif (! empty($conf->global->MAIN_MULTILANGS))\n\t\t\t{\n\t\t\t\t$selectedlang = $langs->defaultlang;\n\t\t\t\tif ($context == 'edit') $selectedlang = $obj->{$fieldlist[$field]};\n\t\t\t\tprint $formadmin->select_language($selectedlang, 'langcode', 0, null, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! empty($obj->{$fieldlist[$field]}))\n\t\t\t\t{\n\t\t\t\t\tprint $obj->{$fieldlist[$field]}.' - '.$langs->trans('Language_'.$obj->{$fieldlist[$field]});\n\t\t\t\t}\n\t\t\t\t$keyname=$fieldlist[$field];\n\t\t\t\tif ($keyname == 'lang') $keyname='langcode';\t// Avoid conflict with lang param\n\t\t\t\tprint '<input type=\"hidden\" value=\"'.$obj->{$fieldlist[$field]}.'\" name=\"'.$keyname.'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\t// Le type de template\n\t\telseif ($fieldlist[$field] == 'type_template')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tif ($context == 'edit' && ! empty($obj->{$fieldlist[$field]}) && ! in_array($obj->{$fieldlist[$field]}, array_keys($elementList)))\n\t\t\t{\n\t\t\t\t// Current tempalte type is an unknown type, so we must keep it as it is.\n\t\t\t\tprint '<input type=\"hidden\" name=\"type_template\" value=\"'.$obj->{$fieldlist[$field]}.'\">';\n\t\t\t\tprint $obj->{$fieldlist[$field]};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint $form->selectarray('type_template', $elementList, (! empty($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), 1);\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($context == 'add' && in_array($fieldlist[$field], array('topic', 'joinfiles', 'content', 'content_lines'))) continue;\n\t\telseif ($context == 'edit' && in_array($fieldlist[$field], array('topic', 'joinfiles', 'content', 'content_lines'))) continue;\n\t\telseif ($context == 'hide' && in_array($fieldlist[$field], array('topic', 'joinfiles', 'content', 'content_lines'))) continue;\n\t\telse\n\t\t{\n\t\t\t$size=''; $class=''; $classtd='';\n\t\t\tif ($fieldlist[$field]=='code') $class='maxwidth100';\n\t\t\tif ($fieldlist[$field]=='private') { $class='maxwidth50'; $classtd='center'; }\n\t\t\tif ($fieldlist[$field]=='position') { $class='maxwidth50'; $classtd='center'; }\n\t\t\tif ($fieldlist[$field]=='libelle') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='topic') $class='quatrevingtpercent';\n\t\t\tif ($fieldlist[$field]=='sortorder' || $fieldlist[$field]=='sens' || $fieldlist[$field]=='category_type') $size='size=\"2\" ';\n\n\t\t\tprint '<td'.($classtd?' class=\"'.$classtd.'\"':'').'>';\n\t\t\tif ($fieldlist[$field]=='private')\n\t\t\t{\n\t\t\t\tif (empty($user->admin))\n\t\t\t\t{\n\t\t\t\t\tprint $form->selectyesno($fieldlist[$field], '1', 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//print '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"1\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t\t\tprint $form->selectyesno($fieldlist[$field], (isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:''), 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprint '<input type=\"text\" '.$size.'class=\"flat'.($class?' '.$class:'').'\" value=\"'.(isset($obj->{$fieldlist[$field]})?$obj->{$fieldlist[$field]}:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\t}\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2004-2017 Laurent Destailleur  <eldy@users.sourceforge.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/admin/website.php\n *\t\t\\ingroup    setup\n *\t\t\\brief      Page to administer web sites\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formadmin.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/website.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/functions2.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/class/doleditor.class.php';\nrequire_once DOL_DOCUMENT_ROOT.'/website/class/website.class.php';\n\n$langs->load(\"errors\");\n$langs->load(\"admin\");\n$langs->load(\"companies\");\n$langs->load(\"website\");\n\n$action=GETPOST('action','alpha')?GETPOST('action','alpha'):'view';\n$confirm=GETPOST('confirm','alpha');\n$backtopage = GETPOST('backtopage', 'alpha');\n\n$rowid=GETPOST('rowid','alpha');\n\n$id=1;\n\nif (!$user->admin) accessforbidden();\n\n$acts[0] = \"activate\";\n$acts[1] = \"disable\";\n$actl[0] = img_picto($langs->trans(\"Disabled\"),'switch_off');\n$actl[1] = img_picto($langs->trans(\"Activated\"),'switch_on');\n\n$status = 1;\n\n// Load variable for pagination\n$limit = GETPOST('limit','int')?GETPOST('limit','int'):$conf->liste_limit;\n$sortfield = GETPOST('sortfield','alpha');\n$sortorder = GETPOST('sortorder','alpha');\n$page = GETPOST('page','int');\nif (empty($page) || $page == -1) { $page = 0; }     // If $page is not defined, or '' or -1\n$offset = $limit * $page;\n$pageprev = $page - 1;\n$pagenext = $page + 1;\n\n// Initialize technical object to manage hooks of page. Note that conf->hooks_modules contains array of hook context\n$hookmanager->initHooks(array('admin'));\n\n// Name of SQL tables of dictionaries\n$tabname=array();\n$tabname[1] = MAIN_DB_PREFIX.\"website\";\n\n// Dictionary labels\n$tablib=array();\n$tablib[1] = \"Websites\";\n\n// Requests to extract data\n$tabsql=array();\n$tabsql[1] = \"SELECT f.rowid as rowid, f.entity, f.ref, f.description, f.virtualhost, f.status FROM \".MAIN_DB_PREFIX.'website as f WHERE f.entity IN ('.getEntity('website').')';\n\n// Criteria to sort dictionaries\n$tabsqlsort=array();\n$tabsqlsort[1] =\"ref ASC\";\n\n// Nom des champs en resultat de select pour affichage du dictionnaire\n$tabfield=array();\n$tabfield[1] = \"ref,description,virtualhost\";\n\n// Nom des champs d'edition pour modification d'un enregistrement\n$tabfieldvalue=array();\n$tabfieldvalue[1] = \"ref,description,virtualhost\";\n\n// Nom des champs dans la table pour insertion d'un enregistrement\n$tabfieldinsert=array();\n$tabfieldinsert[1] = \"ref,description,virtualhost,entity\";\n\n// Nom du rowid si le champ n'est pas de type autoincrement\n// Example: \"\" if id field is \"rowid\" and has autoincrement on\n//          \"nameoffield\" if id field is not \"rowid\" or has not autoincrement on\n$tabrowid=array();\n$tabrowid[1] = \"\";\n\n// Condition to show dictionary in setup page\n$tabcond=array();\n$tabcond[1] = (! empty($conf->website->enabled));\n\n// List of help for fields\n$tabhelp=array();\n$tabhelp[1]  = array('ref'=>$langs->trans(\"EnterAnyCode\"), 'virtualhost'=>$langs->trans(\"SetHereVirtualHost\", DOL_DATA_ROOT.'/website/<i>websiteref</i>'));\n\n// List of check for fields (NOT USED YET)\n$tabfieldcheck=array();\n$tabfieldcheck[1]  = array();\n\n\n// Define elementList and sourceList (used for dictionary type of contacts \"llx_c_type_contact\")\n$elementList = array();\n$sourceList=array();\n\n\n/*\n * Actions\n */\n\n// Actions add or modify a website\nif (GETPOST('actionadd','alpha') || GETPOST('actionmodify','alpha'))\n{\n    $listfield=explode(',',$tabfield[$id]);\n    $listfieldinsert=explode(',',$tabfieldinsert[$id]);\n    $listfieldmodify=explode(',',$tabfieldinsert[$id]);\n    $listfieldvalue=explode(',',$tabfieldvalue[$id]);\n\n    // Check that all fields are filled\n    $ok=1;\n    foreach ($listfield as $f => $value)\n    {\n    \tif ($value == 'ref' && (! isset($_POST[$value]) || $_POST[$value]==''))\n\t    {\n    \t    $ok=0;\n        \t$fieldnamekey=$listfield[$f];\n\t        setEventMessages($langs->transnoentities(\"ErrorFieldRequired\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n\t        break;\n    \t}\n\t\telseif ($value == 'ref' && ! preg_match('/^[a-z0-9_\\-\\.]+$/i', $_POST[$value]))\n\t    {\n\t\t\t$ok=0;\n    \t    $fieldnamekey=$listfield[$f];\n\t\t\tsetEventMessages($langs->transnoentities(\"ErrorFieldCanNotContainSpecialCharacters\", $langs->transnoentities($fieldnamekey)), null, 'errors');\n\t\t\tbreak;\n\t    }\n    }\n\n    // Clean parameters\n    if (! empty($_POST['ref']))\n    {\n    \t$websitekey=strtolower($_POST['ref']);\n    }\n\n    // Si verif ok et action add, on ajoute la ligne\n    if ($ok && GETPOST('actionadd','alpha'))\n    {\n        if ($tabrowid[$id])\n        {\n            // Recupere id libre pour insertion\n            $newid=0;\n            $sql = \"SELECT max(\".$tabrowid[$id].\") newid from \".$tabname[$id];\n            $result = $db->query($sql);\n            if ($result)\n            {\n                $obj = $db->fetch_object($result);\n                $newid=($obj->newid + 1);\n\n            } else {\n                dol_print_error($db);\n            }\n        }\n\n        /* $website=new Website($db);\n        $website->ref=\n        $website->description=\n        $website->virtualhost=\n        $website->create($user); */\n\n        // Add new entry\n        $sql = \"INSERT INTO \".$tabname[$id].\" (\";\n        // List of fields\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $tabrowid[$id].\",\";\n        $sql.= $tabfieldinsert[$id];\n        $sql.=\",status)\";\n        $sql.= \" VALUES(\";\n\n        // List of values\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldinsert))\n        \t$sql.= $newid.\",\";\n        $i=0;\n        foreach ($listfieldinsert as $f => $value)\n        {\n            if ($value == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($value == 'ref') {\n            \t$_POST[$listfieldvalue[$i]] = strtolower($_POST[$listfieldvalue[$i]]);\n            }\n            if ($i) $sql.=\",\";\n            if ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.=\",1)\";\n\n        dol_syslog(\"actionadd\", LOG_DEBUG);\n        $result = $db->query($sql);\n        if ($result)\t// Add is ok\n        {\n            setEventMessages($langs->transnoentities(\"RecordSaved\"), null, 'mesgs');\n        \tunset($_POST);\t// Clean $_POST array, we keep only\n        }\n        else\n        {\n            if ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n                setEventMessages($langs->transnoentities(\"ErrorRecordAlreadyExists\"), null, 'errors');\n            }\n            else {\n                dol_print_error($db);\n            }\n        }\n    }\n\n    // Si verif ok et action modify, on modifie la ligne\n    if ($ok && GETPOST('actionmodify','alpha'))\n    {\n        if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n        else { $rowidcol=\"rowid\"; }\n\n        $db->begin();\n\n        $website=new Website($db);\n        $rowid=GETPOST('rowid','int');\n        $website->fetch($rowid);\n\n        // Modify entry\n        $sql = \"UPDATE \".$tabname[$id].\" SET \";\n        // Modifie valeur des champs\n        if ($tabrowid[$id] && ! in_array($tabrowid[$id],$listfieldmodify))\n        {\n            $sql.= $tabrowid[$id].\"=\";\n            $sql.= \"'\".$db->escape($rowid).\"', \";\n        }\n        $i = 0;\n        foreach ($listfieldmodify as $field)\n        {\n            if ($field == 'entity') {\n            \t$_POST[$listfieldvalue[$i]] = $conf->entity;\n            }\n            if ($i) $sql.=\",\";\n            $sql.= $field.\"=\";\n            if ($_POST[$listfieldvalue[$i]] == '') $sql.=\"null\";\n            else $sql.=\"'\".$db->escape($_POST[$listfieldvalue[$i]]).\"'\";\n            $i++;\n        }\n        $sql.= \" WHERE \".$rowidcol.\" = '\".$rowid.\"'\";\n\n        dol_syslog(\"actionmodify\", LOG_DEBUG);\n        //print $sql;\n        $resql = $db->query($sql);\n        if ($resql)\n        {\n            $newname = dol_sanitizeFileName(GETPOST('ref','aZ09'));\n            if ($newname != $website->ref)\n            {\n\t            $srcfile=DOL_DATA_ROOT.'/website/'.$website->ref;\n\t            $destfile=DOL_DATA_ROOT.'/website/'.$newname;\n\n            \tif (dol_is_dir($destfile))\n            \t{\n            \t\t$error++;\n            \t\tsetEventMessages($langs->trans('ErrorDirAlreadyExists', $destfile), null, 'errors');\n            \t}\n            \telse\n            \t{\n\t                @rename($srcfile, $destfile);\n\n\t\t            // We must now rename $website->ref into $newname inside files\n\t\t            $arrayreplacement = array($website->ref.'/htmlheader.html' => $newname.'/htmlheader.html');\n\t\t            $listofilestochange = dol_dir_list($destfile, 'files', 0, '\\.php$');\n\t\t\t\t\tforeach ($listofilestochange as $key => $value)\n\t\t            {\n\t\t            \tdolReplaceInFile($value['fullname'], $arrayreplacement);\n\t\t            }\n            \t}\n            }\n        }\n        else\n        {\n        \t$error++;\n            setEventMessages($db->lasterror(), null, 'errors');\n        }\n\n        if (! $error)\n        {\n        \t$db->commit();\n        }\n        else\n        {\n        \t$db->rollback();\n        }\n    }\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif (GETPOST('actioncancel','alpha'))\n{\n    //$_GET[\"id\"]=GETPOST('id', 'int');       // Force affichage dictionnaire en cours d'edition\n}\n\nif ($action == 'confirm_delete' && $confirm == 'yes')       // delete\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    $website = new Website($db);\n    $website->fetch($rowid);\n\n    if ($website->id > 0)\n    {\n\t    $sql = \"DELETE from \".MAIN_DB_PREFIX.\"website_page WHERE fk_website ='\".$rowid.\"'\";\n\t    $result = $db->query($sql);\n\n\t    $sql = \"DELETE from \".MAIN_DB_PREFIX.\"website WHERE rowid ='\".$rowid.\"'\";\n\t    $result = $db->query($sql);\n\t    if (! $result)\n\t    {\n\t        if ($db->errno() == 'DB_ERROR_CHILD_EXISTS')\n\t        {\n\t            setEventMessages($langs->transnoentities(\"ErrorRecordIsUsedByChild\"), null, 'errors');\n\t        }\n\t        else\n\t        {\n\t            dol_print_error($db);\n\t        }\n\t    }\n\n\t    if ($website->ref)\n\t    {\n\t    \tdol_delete_dir_recursive($conf->website->dir_output.'/'.$website->ref);\n\t    }\n    }\n    else\n    {\n    \tdol_print_error($db, 'Failed to load website with id '.$rowid);\n    }\n}\n\n// activate\nif ($action == $acts[0])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n        $sql = \"UPDATE \".$tabname[$id].\" SET status = 1 WHERE rowid ='\".$rowid.\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n// disable\nif ($action == $acts[1])\n{\n    if ($tabrowid[$id]) { $rowidcol=$tabrowid[$id]; }\n    else { $rowidcol=\"rowid\"; }\n\n    if ($rowid) {\n        $sql = \"UPDATE \".$tabname[$id].\" SET status = 0 WHERE rowid ='\".$rowid.\"'\";\n    }\n\n    $result = $db->query($sql);\n    if (!$result)\n    {\n        dol_print_error($db);\n    }\n}\n\n\n\n/*\n * View\n */\n\n$form = new Form($db);\n$formadmin=new FormAdmin($db);\n\nllxHeader('', $langs->trans(\"WebsiteSetup\"));\n\n$titre=$langs->trans(\"WebsiteSetup\");\n$linkback='<a href=\"'.($backtopage?$backtopage:DOL_URL_ROOT.'/admin/modules.php').'\">'.$langs->trans(\"BackToModuleList\").'</a>';\nprint load_fiche_titre($titre,$linkback,'title_setup');\n\nprint $langs->trans(\"WebsiteSetupDesc\").'<br>';\nprint \"<br>\\n\";\n\n\n// Confirmation de la suppression de la ligne\nif ($action == 'delete')\n{\n    print $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid, $langs->trans('DeleteWebsite'), $langs->trans('ConfirmDeleteWebsite'), 'confirm_delete','',0,1);\n}\n//var_dump($elementList);\n\n/*\n * Show website list\n */\nif ($id)\n{\n    // Complete requete recherche valeurs avec critere de tri\n    $sql=$tabsql[$id];\n    $sql.=$db->order($sortfield,$sortorder);\n    $sql.=$db->plimit($limit+1, $offset);\n    //print $sql;\n\n    $fieldlist=explode(',',$tabfield[$id]);\n\n    print '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\">';\n    print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n    print '<table class=\"noborder\" width=\"100%\">';\n\n    // Form to add a new line\n    if ($tabname[$id])\n    {\n        $alabelisused=0;\n        $var=false;\n\n        $fieldlist=explode(',',$tabfield[$id]);\n\n        // Line for title\n        print '<tr class=\"liste_titre\">';\n        foreach ($fieldlist as $field => $value)\n        {\n            // Determine le nom du champ par rapport aux noms possibles\n            // dans les dictionnaires de donnees\n            $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n            $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n            $align='';\n            if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n            if ($valuetoshow != '')\n            {\n                print '<td class=\"'.$align.'\">';\n            \tif (! empty($tabhelp[$id][$value]) && preg_match('/^http(s*):/i',$tabhelp[$id][$value])) print '<a href=\"'.$tabhelp[$id][$value].'\" target=\"_blank\">'.$valuetoshow.' '.img_help(1,$valuetoshow).'</a>';\n            \telseif (! empty($tabhelp[$id][$value]))\n           \t\t{\n           \t\t\tif ($value == 'virtualhost') print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value], 1, 'help', '', 0, 2, 'tooltipvirtual');\n           \t\t\telse print $form->textwithpicto($valuetoshow, $tabhelp[$id][$value]);\n           \t\t}\n            \telse print $valuetoshow;\n                print '</td>';\n             }\n             if ($fieldlist[$field]=='libelle' || $fieldlist[$field]=='label') $alabelisused=1;\n        }\n\n        print '<td colspan=\"4\">';\n        print '</td>';\n        print '</tr>';\n\n        // Line to enter new values\n        print \"<tr \".$bcnd[$var].\">\";\n\n        $obj = new stdClass();\n        // If data was already input, we define them in obj to populate input fields.\n        if (GETPOST('actionadd','alpha'))\n        {\n            foreach ($fieldlist as $key=>$val)\n            {\n                if (GETPOST($val,'alpha'))\n                \t$obj->$val=GETPOST($val);\n            }\n        }\n\n        $tmpaction = 'create';\n        $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n        $reshook=$hookmanager->executeHooks('createDictionaryFieldlist',$parameters, $obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n        $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n        if (empty($reshook))\n        {\n       \t\tfieldListWebsites($fieldlist,$obj,$tabname[$id],'add');\n        }\n\n        print '<td colspan=\"3\" align=\"right\">';\n        if ($action != 'edit')\n        {\n        \tprint '<input type=\"submit\" class=\"button\" name=\"actionadd\" value=\"'.$langs->trans(\"Add\").'\">';\n        }\n        print '</td>';\n        print \"</tr>\";\n\n        $colspan=count($fieldlist)+2;\n    }\n\n    print '</table>';\n    print '</form>';\n\n\n    // List of websites in database\n    $resql=$db->query($sql);\n    if ($resql)\n    {\n        $num = $db->num_rows($resql);\n        $i = 0;\n        if ($num)\n        {\n            print '<br>';\n\n            print '<form action=\"'.$_SERVER['PHP_SELF'].'\" method=\"POST\">';\n            print '<input type=\"hidden\" name=\"token\" value=\"'.$_SESSION['newtoken'].'\">';\n            print '<input type=\"hidden\" name=\"page\" value=\"'.$page.'\">';\n            print '<input type=\"hidden\" name=\"rowid\" value=\"'.$rowid.'\">';\n\n            print '<table class=\"noborder\" width=\"100%\">';\n\n            // Title of lines\n            print '<tr class=\"liste_titre\">';\n            foreach ($fieldlist as $field => $value)\n            {\n                // Determine le nom du champ par rapport aux noms possibles\n                // dans les dictionnaires de donnees\n                $showfield=1;\t\t\t\t\t\t\t  \t// Par defaut\n                $align=\"left\";\n                $sortable=1;\n                $valuetoshow='';\n                /*\n                $tmparray=getLabelOfField($fieldlist[$field]);\n                $showfield=$tmp['showfield'];\n                $valuetoshow=$tmp['valuetoshow'];\n                $align=$tmp['align'];\n                $sortable=$tmp['sortable'];\n\t\t\t\t*/\n                $valuetoshow=ucfirst($fieldlist[$field]);   // Par defaut\n                $valuetoshow=$langs->trans($valuetoshow);   // try to translate\n                if ($fieldlist[$field]=='lang')            { $valuetoshow=$langs->trans(\"Language\"); }\n                if ($fieldlist[$field]=='type')            { $valuetoshow=$langs->trans(\"Type\"); }\n                if ($fieldlist[$field]=='code')            { $valuetoshow=$langs->trans(\"Code\"); }\n\n                // Affiche nom du champ\n                if ($showfield)\n                {\n                    print getTitleFieldOfList($valuetoshow,0,$_SERVER[\"PHP_SELF\"],($sortable?$fieldlist[$field]:''),($page?'page='.$page.'&':''),\"\",\"align=\".$align,$sortfield,$sortorder);\n                }\n            }\n\n\t\t\tprint getTitleFieldOfList($langs->trans(\"Status\"),0,$_SERVER[\"PHP_SELF\"],\"status\",($page?'page='.$page.'&':''),\"\",'align=\"center\"',$sortfield,$sortorder);\n            print getTitleFieldOfList('');\n            print getTitleFieldOfList('');\n            print '</tr>';\n\n            // Lines with values\n            while ($i < $num)\n            {\n\n                $obj = $db->fetch_object($resql);\n                //print_r($obj);\n                print '<tr class=\"oddeven\" id=\"rowid-'.$obj->rowid.'\">';\n                if ($action == 'edit' && ($rowid == (! empty($obj->rowid)?$obj->rowid:$obj->code)))\n                {\n                    $tmpaction='edit';\n                    $parameters=array('fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('editDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook)) fieldListWebsites($fieldlist,$obj,$tabname[$id],'edit');\n\n                    print '<td colspan=\"3\" align=\"right\"><a name=\"'.(! empty($obj->rowid)?$obj->rowid:$obj->code).'\">&nbsp;</a><input type=\"submit\" class=\"button\" name=\"actionmodify\" value=\"'.$langs->trans(\"Modify\").'\">';\n                    print '&nbsp;<input type=\"submit\" class=\"button\" name=\"actioncancel\" value=\"'.$langs->trans(\"Cancel\").'\"></td>';\n                }\n                else\n                {\n\t              \t$tmpaction = 'view';\n                    $parameters=array('var'=>$var, 'fieldlist'=>$fieldlist, 'tabname'=>$tabname[$id]);\n                    $reshook=$hookmanager->executeHooks('viewDictionaryFieldlist',$parameters,$obj, $tmpaction);    // Note that $action and $object may have been modified by some hooks\n\n                    $error=$hookmanager->error; $errors=$hookmanager->errors;\n\n                    if (empty($reshook))\n                    {\n                        foreach ($fieldlist as $field => $value)\n                        {\n                            $showfield=1;\n                        \t$align=\"left\";\n                        \t$fieldname=$fieldlist[$field];\n                            $valuetoshow=$obj->$fieldname;\n\n\t\t\t\t\t\t\t// Show value for field\n\t\t\t\t\t\t\tif ($showfield) print '<td align=\"'.$align.'\">'.$valuetoshow.'</td>';\n                        }\n                    }\n\n                    // Can an entry be erased or disabled ?\n                    $iserasable=1; $isdisable=1;\t\t// true by default\n                    if ($obj->status) $iserasable=0;\t// We can't delete a website on. Disable it first.\n\n                    $url = $_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.(! empty($obj->rowid)?$obj->rowid:(! empty($obj->code)?$obj->code:'')).'&amp;code='.(! empty($obj->code)?urlencode($obj->code):'').'&amp;';\n\n                    // Active\n                    print '<td align=\"center\" class=\"nowrap\">';\n                    print '<a href=\"'.$url.'action='.$acts[$obj->status].'\">'.$actl[$obj->status].'</a>';\n                    print \"</td>\";\n\n                    // Modify link\n                    print '<td align=\"center\"><a class=\"reposition\" href=\"'.$url.'action=edit\">'.img_edit().'</a></td>';\n\n                    // Delete link\n                    if ($iserasable) print '<td align=\"center\"><a href=\"'.$url.'action=delete\">'.img_delete().'</a></td>';\n                    else print '<td align=\"center\">'.img_delete($langs->trans(\"DisableSiteFirst\"), 'class=\"opacitymedium\"').'</td>';\n\n                    print \"</tr>\\n\";\n                }\n                $i++;\n            }\n\n            print '</table>';\n\n            print '</form>';\n        }\n    }\n    else {\n        dol_print_error($db);\n    }\n}\n\nprint '<br>';\n\n\nllxFooter();\n$db->close();\n\n\n/**\n *\tShow fields in insert/edit mode\n *\n * \t@param\t\tarray\t$fieldlist\t\tArray of fields\n * \t@param\t\tObject\t$obj\t\t\tIf we show a particular record, obj is filled with record fields\n *  @param\t\tstring\t$tabname\t\tName of SQL table\n *  @param\t\tstring\t$context\t\t'add'=Output field for the \"add form\", 'edit'=Output field for the \"edit form\", 'hide'=Output field for the \"add form\" but we dont want it to be rendered\n *\t@return\t\tvoid\n */\nfunction fieldListWebsites($fieldlist, $obj='', $tabname='', $context='')\n{\n\tglobal $conf,$langs,$db;\n\tglobal $form;\n\tglobal $region_id;\n\tglobal $elementList,$sourceList,$localtax_typeList;\n\tglobal $bc;\n\n\t$formadmin = new FormAdmin($db);\n\n\tforeach ($fieldlist as $field => $value)\n\t{\n\t    $fieldname = $fieldlist[$field];\n\t\tif ($fieldlist[$field] == 'lang')\n\t\t{\n\t\t\tprint '<td>';\n\t\t\tprint $formadmin->select_language($conf->global->MAIN_LANG_DEFAULT,'lang');\n\t\t\tprint '</td>';\n\t\t}\n\t\telseif ($fieldlist[$field] == 'code' && isset($obj->$fieldname)) {\n\t\t\tprint '<td><input type=\"text\" class=\"flat\" value=\"'.(! empty($obj->$fieldname)?$obj->$fieldname:'').'\" size=\"10\" name=\"'.$fieldlist[$field].'\"></td>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint '<td>';\n\t\t\t$size='';\n\t\t\tif ($fieldlist[$field]=='code') $size='size=\"8\" ';\n\t\t\tif ($fieldlist[$field]=='position') $size='size=\"4\" ';\n\t\t\tif ($fieldlist[$field]=='libelle') $size='size=\"32\" ';\n\t\t\tif ($fieldlist[$field]=='tracking') $size='size=\"92\" ';\n\t\t\tif ($fieldlist[$field]=='sortorder') $size='size=\"2\" ';\n\t\t\tprint '<input type=\"text\" '.$size.' class=\"flat\" value=\"'.(isset($obj->$fieldname)?$obj->$fieldname:'').'\" name=\"'.$fieldlist[$field].'\">';\n\t\t\tprint '</td>';\n\t\t}\n\t}\n}\n\n", "<?php\n/* Copyright (C) 2000-2007\tRodolphe Quiedeville\t\t\t<rodolphe@quiedeville.org>\n * Copyright (C) 2003\t\tJean-Louis Bergamo\t\t\t<jlb@j1b.org>\n * Copyright (C) 2004-2018\tLaurent Destailleur\t\t\t<eldy@users.sourceforge.net>\n * Copyright (C) 2004\t\tSebastien Di Cintio\t\t\t<sdicintio@ressource-toi.org>\n * Copyright (C) 2004\t\tBenoit Mortier\t\t\t\t<benoit.mortier@opensides.be>\n * Copyright (C) 2004\t\tChristophe Combelles\t\t\t<ccomb@free.fr>\n * Copyright (C) 2005-2017\tRegis Houssin\t\t\t\t<regis.houssin@capnetworks.com>\n * Copyright (C) 2008\t\tRaphael Bertrand (Resultic)\t<raphael.bertrand@resultic.fr>\n * Copyright (C) 2010-2018\tJuanjo Menent\t\t\t\t<jmenent@2byte.es>\n * Copyright (C) 2013\t\tC\u00e9dric Salvador\t\t\t\t<csalvador@gpcsolutions.fr>\n * Copyright (C) 2013-2017\tAlexandre Spangaro\t\t\t<aspangaro@zendsi.com>\n * Copyright (C) 2014\t\tC\u00e9dric GROSS\t\t\t\t\t<c.gross@kreiz-it.fr>\n * Copyright (C) 2014-2015\tMarcos Garc\u00eda\t\t\t\t<marcosgdf@gmail.com>\n * Copyright (C) 2015\t\tJean-Fran\u00e7ois Ferry\t\t\t<jfefe@aternatik.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n * or see http://www.gnu.org/\n */\n\n/**\n *\t\\file\t\t\thtdocs/core/lib/functions.lib.php\n *\t\\brief\t\t\tA set of functions for Dolibarr\n *\t\t\t\t\tThis file contains all frequently used functions.\n */\n\ninclude_once DOL_DOCUMENT_ROOT .'/core/lib/json.lib.php';\n\n\n/**\n * Function to return value of a static property when class\n * name is dynamically defined (not hard coded).\n * This is because $myclass::$myvar works from PHP 5.3.0+ only\n *\n * @param\tstring \t$class\t\tClass name\n * @param \tstring \t$member\t\tName of property\n * @return \tmixed\t\t\t\tReturn value of static property\n * @deprecated Dolibarr now requires 5.3.0+, use $class::$property syntax\n * @see https://php.net/manual/language.oop5.static.php\n */\nfunction getStaticMember($class, $member)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\t// This part is deprecated. Uncomment if for php 5.2.*, and comment next isset class::member\n\t/*if (version_compare(phpversion(), '5.3.0', '<'))\n\t{\n\t\tif (is_object($class)) $class = get_class($class);\n\t\t$classObj = new ReflectionClass($class);\n\t\t$result = null;\n\n\t\t$found=0;\n\t\tforeach($classObj->getStaticProperties() as $prop => $value)\n\t\t{\n\t\t\tif ($prop == $member)\n\t\t\t{\n\t\t\t\t$result = $value;\n\t\t\t\t$found++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ($found) return $result;\n\t}*/\n\n\tif (isset($class::$member)) return $class::$member;\n\tdol_print_error('','Try to get a static member \"'.$member.'\" in class \"'.$class.'\" that does not exists or is not static.');\n\treturn null;\n}\n\n\n/**\n * Return a DoliDB instance (database handler).\n *\n * @param   string\t$type\t\tType of database (mysql, pgsql...)\n * @param\tstring\t$host\t\tAddress of database server\n * @param\tstring\t$user\t\tNom de l'utilisateur autorise\n * @param\tstring\t$pass\t\tMot de passe\n * @param\tstring\t$name\t\tNom de la database\n * @param\tint\t\t$port\t\tPort of database server\n * @return\tDoliDB\t\t\t\tA DoliDB instance\n */\nfunction getDoliDBInstance($type, $host, $user, $pass, $name, $port)\n{\n\trequire_once DOL_DOCUMENT_ROOT .\"/core/db/\".$type.'.class.php';\n\n\t$class='DoliDB'.ucfirst($type);\n\t$dolidb=new $class($type, $host, $user, $pass, $name, $port);\n\treturn $dolidb;\n}\n\n/**\n * \tGet list of entity id to use.\n *\n * \t@param\tstring\t$element\t\tCurrent element\n *\t\t\t\t\t\t\t\t\t'societe', 'socpeople', 'actioncomm', 'agenda', 'resource',\n *\t\t\t\t\t\t\t\t\t'product', 'productprice', 'stock',\n *\t\t\t\t\t\t\t\t\t'propal', 'supplier_proposal', 'facture', 'facture_fourn', 'payment_various',\n *\t\t\t\t\t\t\t\t\t'categorie', 'bank_account', 'bank_account', 'adherent', 'user',\n *\t\t\t\t\t\t\t\t\t'commande', 'commande_fournisseur', 'expedition', 'intervention', 'survey',\n *\t\t\t\t\t\t\t\t\t'contract', 'tax', 'expensereport', 'holiday', 'multicurrency', 'project',\n *\t\t\t\t\t\t\t\t\t'email_template', 'event', 'donation'\n *\t\t\t\t\t\t\t\t\t'c_paiement', 'c_payment_term', ...\n * \t@param\tint\t\t$shared\t\t\t0=Return id of current entity only,\n * \t\t\t\t\t\t\t\t\t1=Return id of current entity + shared entities (default)\n *  @param\tint\t\t$forceentity\tEntity id\n * \t@return\tmixed\t\t\t\tEntity id(s) to use\n */\nfunction getEntity($element, $shared=1, $forceentity=null)\n{\n\tglobal $conf, $mc;\n\n\t// For backward compatibilty\n\tif ($element == 'actioncomm') $element='agenda';\n\tif ($element == 'fichinter')  $element='intervention';\n\tif ($element == 'categorie')  $element='category';\n\n\tif (is_object($mc))\n\t{\n\t\treturn $mc->getEntity($element, $shared, $forceentity);\n\t}\n\telse\n\t{\n\t\t$out='';\n\t\t$addzero = array('user', 'usergroup', 'c_email_templates', 'email_template', 'default_values');\n\t\tif (in_array($element, $addzero)) $out.= '0,';\n\t\t$out.= $conf->entity;\n\t\treturn $out;\n\t}\n}\n\n/**\n * Return information about user browser\n *\n * Returns array with the following format:\n * array(\n *  'browsername' => Browser name (firefox|chrome|iceweasel|epiphany|safari|opera|ie|unknown)\n *  'browserversion' => Browser version. Empty if unknown\n *  'browseros' => Set with mobile OS (android|blackberry|ios|palm|symbian|webos|maemo|windows|unknown)\n *  'layout' => (tablet|phone|classic)\n *  'phone' => empty if not mobile, (android|blackberry|ios|palm|unknown) if mobile\n *  'tablet' => true/false\n * )\n *\n * @param string $user_agent Content of $_SERVER[\"HTTP_USER_AGENT\"] variable\n * @return\tarray Check function documentation\n */\nfunction getBrowserInfo($user_agent)\n{\n\tinclude_once DOL_DOCUMENT_ROOT.'/includes/mobiledetect/mobiledetectlib/Mobile_Detect.php';\n\n\t$name='unknown';\n\t$version='';\n\t$os='unknown';\n\t$phone = '';\n\n\t$detectmobile = new Mobile_Detect(null, $user_agent);\n\t$tablet = $detectmobile->isTablet();\n\n\tif ($detectmobile->isMobile()) {\n\n\t\t$phone = 'unknown';\n\n\t\t// If phone/smartphone, we set phone os name.\n\t\tif ($detectmobile->is('AndroidOS')) {\n\t\t\t$os = $phone = 'android';\n\t\t} elseif ($detectmobile->is('BlackBerryOS')) {\n\t\t\t$os = $phone = 'blackberry';\n\t\t} elseif ($detectmobile->is('iOS')) {\n\t\t\t$os = 'ios';\n\t\t\t$phone = 'iphone';\n\t\t} elseif ($detectmobile->is('PalmOS')) {\n\t\t\t$os = $phone = 'palm';\n\t\t} elseif ($detectmobile->is('SymbianOS')) {\n\t\t\t$os = 'symbian';\n\t\t} elseif ($detectmobile->is('webOS')) {\n\t\t\t$os = 'webos';\n\t\t} elseif ($detectmobile->is('MaemoOS')) {\n\t\t\t$os = 'maemo';\n\t\t} elseif ($detectmobile->is('WindowsMobileOS') || $detectmobile->is('WindowsPhoneOS')) {\n\t\t\t$os = 'windows';\n\t\t}\n\t}\n\n\t// OS\n\tif (preg_match('/linux/i', $user_agent))\t\t\t{ $os='linux'; }\n\telseif (preg_match('/macintosh/i', $user_agent))\t{ $os='macintosh'; }\n\telseif (preg_match('/windows/i', $user_agent))\t\t{ $os='windows'; }\n\n\t// Name\n\tif (preg_match('/firefox(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))      { $name='firefox';   $version=$reg[2]; }\n\telseif (preg_match('/edge(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))     { $name='edge';      $version=$reg[2]; }\n\telseif (preg_match('/chrome(\\/|\\s)([\\d\\.]+)/i', $user_agent, $reg))   { $name='chrome';    $version=$reg[2]; }    // we can have 'chrome (Mozilla...) chrome x.y' in one string\n\telseif (preg_match('/chrome/i', $user_agent, $reg))                   { $name='chrome'; }\n\telseif (preg_match('/iceweasel/i', $user_agent))                      { $name='iceweasel'; }\n\telseif (preg_match('/epiphany/i', $user_agent))                       { $name='epiphany';  }\n\telseif (preg_match('/safari(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))   { $name='safari';    $version=$reg[2]; }\t// Safari is often present in string for mobile but its not.\n\telseif (preg_match('/opera(\\/|\\s)([\\d\\.]*)/i', $user_agent, $reg))    { $name='opera';     $version=$reg[2]; }\n\telseif (preg_match('/(MSIE\\s([0-9]+\\.[0-9]))|.*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/(Windows NT\\s([0-9]+\\.[0-9])).*(Trident\\/[0-9]+.[0-9];.*rv:([0-9]+\\.[0-9]+))/i', $user_agent, $reg))  { $name='ie'; $version=end($reg); }    // MS products at end\n\telseif (preg_match('/l(i|y)n(x|ks)(\\(|\\/|\\s)*([\\d\\.]+)/i', $user_agent, $reg)) { $name='lynxlinks'; $version=$reg[4]; }\n\n\tif ($tablet) {\n\t\t$layout = 'tablet';\n\t} elseif ($phone) {\n\t\t$layout = 'phone';\n\t} else {\n\t\t$layout = 'classic';\n\t}\n\n\treturn array(\n\t\t'browsername' => $name,\n\t\t'browserversion' => $version,\n\t\t'browseros' => $os,\n\t\t'layout' => $layout,\n\t\t'phone' => $phone,\n\t\t'tablet' => $tablet\n\t);\n}\n\n/**\n *  Function called at end of web php process\n *\n *  @return\tvoid\n */\nfunction dol_shutdown()\n{\n\tglobal $conf,$user,$langs,$db;\n\t$disconnectdone=false; $depth=0;\n\tif (is_object($db) && ! empty($db->connected)) { $depth=$db->transaction_opened; $disconnectdone=$db->close(); }\n\tdol_syslog(\"--- End access to \".$_SERVER[\"PHP_SELF\"].(($disconnectdone && $depth)?' (Warn: db disconnection forced, transaction depth was '.$depth.')':''), (($disconnectdone && $depth)?LOG_WARNING:LOG_INFO));\n}\n\n/**\n * Return true if we are in a context of submitting a parameter\n *\n * @param \tstring\t$paramname\t\tName or parameter to test\n * @return \tboolean\t\t\t\t\tTrue if we have just submit a POST or GET request with the parameter provided (even if param is empty)\n */\nfunction GETPOSTISSET($paramname)\n{\n\treturn (isset($_POST[$paramname]) || isset($_GET[$paramname]));\n}\n\n/**\n *  Return value of a param into GET or POST supervariable.\n *  Use the property $user->default_values[path]['creatform'] and/or $user->default_values[path]['filters'] and/or $user->default_values[path]['sortorder']\n *  Note: The property $user->default_values is loaded by main.php when loading the user.\n *\n *  @param\tstring\t$paramname   Name of parameter to found\n *  @param\tstring\t$check\t     Type of check\n *                                  ''=no check (deprecated)\n *                                  'none'=no check (only for param that should have very rich content)\n *                                  'int'=check it's numeric (integer or float)\n *                                  'alpha'=check it's text and sign\n *                                  'aZ'=check it's a-z only\n *                                  'aZ09'=check it's simple alpha string (recommended for keys)\n *                                  'array'=check it's array\n *                                  'san_alpha'=Use filter_var with FILTER_SANITIZE_STRING (do not use this for free text string)\n *                                  'nohtml', 'alphanohtml'=check there is no html content\n *                                  'custom'= custom filter specify $filter and $options)\n *  @param\tint\t\t$method\t     Type of method (0 = get then post, 1 = only get, 2 = only post, 3 = post then get, 4 = post then get then cookie)\n *  @param  int     $filter      Filter to apply when $check is set to 'custom'. (See http://php.net/manual/en/filter.filters.php for d\u00e9tails)\n *  @param  mixed   $options     Options to pass to filter_var when $check is set to 'custom'\n *  @param\tstring\t$noreplace\t Force disable of replacement of __xxx__ strings.\n *  @return string|string[]      Value found (string or array), or '' if check fails\n */\nfunction GETPOST($paramname, $check='none', $method=0, $filter=NULL, $options=NULL, $noreplace=0)\n{\n\tglobal $mysoc,$user,$conf;\n\n\tif (empty($paramname)) return 'BadFirstParameterForGETPOST';\n\tif (empty($check))\n\t{\n\t\tdol_syslog(\"Deprecated use of GETPOST, called with 1st param = \".$paramname.\" and 2nd param is '', when calling page \".$_SERVER[\"PHP_SELF\"], LOG_WARNING);\n\t\t// Enable this line to know who call the GETPOST with '' $check parameter.\n\t\t//var_dump(debug_backtrace()[0]);\n\t}\n\n\tif (empty($method)) $out = isset($_GET[$paramname])?$_GET[$paramname]:(isset($_POST[$paramname])?$_POST[$paramname]:'');\n\telseif ($method==1) $out = isset($_GET[$paramname])?$_GET[$paramname]:'';\n\telseif ($method==2) $out = isset($_POST[$paramname])?$_POST[$paramname]:'';\n\telseif ($method==3) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:'');\n\telseif ($method==4) $out = isset($_POST[$paramname])?$_POST[$paramname]:(isset($_GET[$paramname])?$_GET[$paramname]:(isset($_COOKIE[$paramname])?$_COOKIE[$paramname]:''));\n\telse return 'BadThirdParameterForGETPOST';\n\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n\n\t\t$relativepathstring = $_SERVER[\"PHP_SELF\"];\n\t\t// Clean $relativepathstring\n\t\tif (constant('DOL_URL_ROOT')) $relativepathstring = preg_replace('/^'.preg_quote(constant('DOL_URL_ROOT'),'/').'/', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^\\//', '', $relativepathstring);\n\t\t$relativepathstring = preg_replace('/^custom\\//', '', $relativepathstring);\n\t\t//var_dump($relativepathstring);\n\t\t//var_dump($user->default_values);\n\n\t\t// Code for search criteria persistence.\n\t\t// Retrieve values if restore_lastsearch_values is set and there is saved values\n\t\tif (! empty($_GET['restore_lastsearch_values']) && ! empty($_SESSION['lastsearch_values_'.$relativepathstring]))        // Keep $_GET here\n\t\t{\n\t\t\t$tmp=json_decode($_SESSION['lastsearch_values_'.$relativepathstring], true);\n\t\t\tif (is_array($tmp))\n\t\t\t{\n\t\t\t\tforeach($tmp as $key => $val)\n\t\t\t\t{\n\t\t\t\t\tif ($key == $paramname)\n\t\t\t\t\t{\n\t\t\t\t\t\t$out=$val;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Else, retreive default values if we are not doing a sort\n\t\telseif (! isset($_GET['sortfield']))\t// If we did a click on a field to sort, we do no apply default values. Same if option MAIN_ENABLE_DEFAULT_VALUES is not set\n\t\t{\n\t\t\tif (! empty($_GET['action']) && $_GET['action'] == 'create' && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t{\n\t\t\t\t// Search default value from $object->field\n\t\t\t\tglobal $object;\n\t\t\t\tif (is_object($object) && isset($object->fields[$paramname]['default']))\n\t\t\t\t{\n\t\t\t\t\t$out = $object->fields[$paramname]['default'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (! empty($conf->global->MAIN_ENABLE_DEFAULT_VALUES))\n\t\t\t{\n\t\t\t\tif (! empty($_GET['action']) && $_GET['action'] == 'create' && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t\t{\n\t\t\t\t\t// Now search in setup to overwrite default values\n\t\t\t\t\tif (! empty($user->default_values))\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t{\n\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['createform'] as $defkey => $defval)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave=explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave=explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru=0;\n\t\t\t\t\t\t\t\t\tforeach($tmpqueryarraytohave as $tmpquerytohave)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! in_array($tmpquerytohave, $tmpqueryarraywehave)) $foundintru=1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (! $foundintru) $qualified=1;\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse $qualified = 1;\n\n\t\t\t\t\t\t\t\tif ($qualified)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t//var_dump($user->default_values[$relativepathstring][$defkey]['createform']);\n\t\t\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['createform'][$defkey][$paramname]))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$out = $user->default_values[$relativepathstring]['createform'][$defkey][$paramname];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Management of default search_filters and sort order\n\t\t\t\t//elseif (preg_match('/list.php$/', $_SERVER[\"PHP_SELF\"]) && ! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t\telseif (! empty($paramname) && ! isset($_GET[$paramname]) && ! isset($_POST[$paramname]))\n\t\t\t\t{\n\t\t\t\t\tif (! empty($user->default_values))\t\t// $user->default_values defined from menu 'Setup - Default values'\n\t\t\t\t\t{\n\t\t\t\t\t\t//var_dump($user->default_values[$relativepathstring]);\n\t\t\t\t\t\tif ($paramname == 'sortfield' || $paramname == 'sortorder')\t\t\t// Sorted on which fields ? ASC or DESC ?\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (isset($user->default_values[$relativepathstring]['sortorder']))\t// Even if paramname is sortfield, data are stored into ['sortorder...']\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['sortorder'] as $defkey => $defval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\t\tif ($defkey != '_noquery_')\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave=explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave=explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t\t$foundintru=0;\n\t\t\t\t\t\t\t\t\t\tforeach($tmpqueryarraytohave as $tmpquerytohave)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! in_array($tmpquerytohave, $tmpqueryarraywehave)) $foundintru=1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (! $foundintru) $qualified=1;\n\t\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse $qualified = 1;\n\n\t\t\t\t\t\t\t\t\tif ($qualified)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['sortorder'][$defkey] as $key => $val)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif ($out) $out.=', ';\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortfield')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$out.=dol_string_nospecial($key, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($paramname == 'sortorder')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$out.=dol_string_nospecial($val, '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t//break;\t// No break for sortfield and sortorder so we can cumulate fields (is it realy usefull ?)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telseif (isset($user->default_values[$relativepathstring]['filters']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tforeach($user->default_values[$relativepathstring]['filters'] as $defkey => $defval)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$qualified = 0;\n\t\t\t\t\t\t\t\tif ($defkey != '_noquery_')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$tmpqueryarraytohave=explode('&', $defkey);\n\t\t\t\t\t\t\t\t\t$tmpqueryarraywehave=explode('&', dol_string_nohtmltag($_SERVER['QUERY_STRING']));\n\t\t\t\t\t\t\t\t\t$foundintru=0;\n\t\t\t\t\t\t\t\t\tforeach($tmpqueryarraytohave as $tmpquerytohave)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! in_array($tmpquerytohave, $tmpqueryarraywehave)) $foundintru=1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (! $foundintru) $qualified=1;\n\t\t\t\t\t\t\t\t\t//var_dump($defkey.'-'.$qualified);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse $qualified = 1;\n\n\t\t\t\t\t\t\t\tif ($qualified)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (isset($_POST['sall']) || isset($_POST['search_all']) || isset($_GET['sall']) || isset($_GET['search_all']))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// We made a search from quick search menu, do we still use default filter ?\n\t\t\t\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_DEFAULT_FILTER_FOR_QUICK_SEARCH))\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$forbidden_chars_to_replace=array(\" \",\"'\",\"/\",\"\\\\\",\":\",\"*\",\"?\",\"\\\"\",\"<\",\">\",\"|\",\"[\",\"]\",\";\",\"=\");  // we accept _, -, . and ,\n\t\t\t\t\t\t\t\t\t\t$out = dol_string_nospecial($user->default_values[$relativepathstring]['filters'][$defkey][$paramname], '', $forbidden_chars_to_replace);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Substitution variables for GETPOST (used to get final url with variable parameters or final default value with variable paramaters)\n\t// Example of variables: __DAY__, __MONTH__, __YEAR__, __MYCOMPANY_COUNTRY_ID__, __USER_ID__, ...\n\t// We do this only if var is a GET. If it is a POST, may be we want to post the text with vars as the setup text.\n\tif (! is_array($out) && empty($_POST[$paramname]) && empty($noreplace))\n\t{\n\t\t$maxloop=20; $loopnb=0;    // Protection against infinite loop\n\t\twhile (preg_match('/__([A-Z0-9]+_?[A-Z0-9]+)__/i', $out, $reg) && ($loopnb < $maxloop))    // Detect '__ABCDEF__' as key 'ABCDEF' and '__ABC_DEF__' as key 'ABC_DEF'. Detection is also correct when 2 vars are side by side.\n\t\t{\n\t\t\t\t$loopnb++; $newout = '';\n\n\t\t\t\tif ($reg[1] == 'DAY')                { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mday']; }\n\t\t\t\telseif ($reg[1] == 'MONTH')          { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['mon'];  }\n\t\t\t\telseif ($reg[1] == 'YEAR')           { $tmp=dol_getdate(dol_now(), true); $newout = $tmp['year']; }\n\t\t\t\telseif ($reg[1] == 'PREVIOUS_DAY')   { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n\t\t\t\telseif ($reg[1] == 'PREVIOUS_MONTH') { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n\t\t\t\telseif ($reg[1] == 'PREVIOUS_YEAR')  { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] - 1); }\n\t\t\t\telseif ($reg[1] == 'NEXT_DAY')       { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['day']; }\n\t\t\t\telseif ($reg[1] == 'NEXT_MONTH')     { $tmp=dol_getdate(dol_now(), true); $tmp2=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']); $newout = $tmp2['month']; }\n\t\t\t\telseif ($reg[1] == 'NEXT_YEAR')      { $tmp=dol_getdate(dol_now(), true); $newout = ($tmp['year'] + 1); }\n\t\t\t\telseif ($reg[1] == 'MYCOMPANY_COUNTRY_ID' || $reg[1] == 'MYCOUNTRY_ID' || $reg[1] == 'MYCOUNTRYID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $mysoc->country_id;\n\t\t\t\t}\n\t\t\t\telseif ($reg[1] == 'USER_ID' || $reg[1] == 'USERID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $user->id;\n\t\t\t\t}\n\t\t\t\telseif ($reg[1] == 'USER_SUPERVISOR_ID' || $reg[1] == 'SUPERVISOR_ID' || $reg[1] == 'SUPERVISORID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $user->fk_user;\n\t\t\t\t}\n\t\t\t\telseif ($reg[1] == 'ENTITY_ID' || $reg[1] == 'ENTITYID')\n\t\t\t\t{\n\t\t\t\t\t$newout = $conf->entity;\n\t\t\t\t}\n\t\t\t\telse $newout = '';     // Key not found, we replace with empty string\n\t\t\t\t//var_dump('__'.$reg[1].'__ -> '.$newout);\n\t\t\t\t$out = preg_replace('/__'.preg_quote($reg[1],'/').'__/', $newout, $out);\n\t\t}\n\t}\n\n\t// Check is done after replacement\n\tswitch ($check)\n\t{\n\t\tcase 'none':\n\t\t\tbreak;\n\t\tcase 'int':    // Check param is a numeric value (integer but also float or hexadecimal)\n\t\t\tif (! is_numeric($out)) { $out=''; }\n\t\t\tbreak;\n\t\tcase 'intcomma':\n\t\t\tif (preg_match('/[^0-9,-]+/i',$out)) $out='';\n\t\t\tbreak;\n\t\tcase 'alpha':\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\tif (preg_match('/\"/',$out)) $out='';\n\t\t\t\telse if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'san_alpha':\n\t\t\t$out=filter_var($out,FILTER_SANITIZE_STRING);\n\t\t\tbreak;\n\t\tcase 'aZ':\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\tif (preg_match('/[^a-z]+/i',$out)) $out='';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'aZ09':\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\tif (preg_match('/[^a-z0-9_\\-\\.]+/i',$out)) $out='';\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'array':\n\t\t\tif (! is_array($out) || empty($out)) $out=array();\n\t\t\tbreak;\n\t\tcase 'nohtml':\t\t// Recommended for most scalar parameters\n\t\t\t$out=dol_string_nohtmltag($out, 0);\n\t\t\tbreak;\n\t\tcase 'alphanohtml':\t// Recommended for search parameters\n\t\t\tif (! is_array($out))\n\t\t\t{\n\t\t\t\t$out=trim($out);\n\t\t\t\t// '\"' is dangerous because param in url can close the href= or src= and add javascript functions.\n\t\t\t\t// '../' is dangerous because it allows dir transversals\n\t\t\t\tif (preg_match('/\"/',$out)) $out='';\n\t\t\t\telse if (preg_match('/\\.\\.\\//',$out)) $out='';\n\t\t\t\t$out=dol_string_nohtmltag($out);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'custom':\n\t\t\tif (empty($filter)) return 'BadFourthParameterForGETPOST';\n\t\t\t$out=filter_var($out, $filter, $options);\n\t\t\tbreak;\n\t}\n\n\t// Code for search criteria persistence.\n\t// Save data into session if key start with 'search_' or is 'smonth', 'syear', 'month', 'year'\n\tif (empty($method) || $method == 3 || $method == 4)\n\t{\n\t\t//if (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder', 'sortfield\", 'smonth', 'syear', 'month', 'year')))\n\t\tif (preg_match('/^search_/', $paramname) || in_array($paramname, array('sortorder','sortfield')))\n\t\t{\n\t\t\t//var_dump($paramname.' - '.$out.' '.$user->default_values[$relativepathstring]['filters'][$paramname]);\n\n\t\t\t// We save search key only if $out not empty that means:\n\t\t\t// - posted value not empty, or\n\t\t\t// - if posted value is empty and a default value exists that is not empty (it means we did a filter to an empty value when default was not).\n\n\t\t\t//if (! empty($out) || ! empty($user->default_values[$relativepathstring]['filters'][$paramname]))\n\t\t\tif ($out != '')\t\t// $out = '0' like 'abc' is a search criteria to keep\n\t\t\t{\n\t\t\t\t$user->lastsearch_values_tmp[$relativepathstring][$paramname]=$out;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $out;\n}\n\n\n/**\n *  Return a prefix to use for this Dolibarr instance, for session/cookie names or email id.\n *  This prefix is valid in a web context only and is unique for instance and avoid conflict\n *  between multi-instances, even when having two instances with one root dir or two instances\n *  in virtual servers.\n *\n *  @param  string  $mode       \t\t\t'' (prefix for session name) or 'email' (prefix for email id)\n *  @return\tstring      \t\t\t\t\tA calculated prefix\n */\nif (! function_exists('dol_getprefix'))\n{\n\tfunction dol_getprefix($mode='')\n\t{\n\t\tglobal $conf;\n\n\t\t// If MAIL_PREFIX_FOR_EMAIL_ID is set and prefix is for email\n\t\tif ($mode == 'email' && ! empty($conf->global->MAIL_PREFIX_FOR_EMAIL_ID))\n\t\t{\n\t\t\tif ($conf->global->MAIL_PREFIX_FOR_EMAIL_ID != 'SERVER_NAME') return $conf->global->MAIL_PREFIX_FOR_EMAIL_ID;\n\t\t\telse if (isset($_SERVER[\"SERVER_NAME\"])) return $_SERVER[\"SERVER_NAME\"];\n\t\t}\n\n\t\tif (isset($_SERVER[\"SERVER_NAME\"]) && isset($_SERVER[\"DOCUMENT_ROOT\"]))\n\t\t{\n\t\t\treturn dol_hash($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t\t\t// Use this for a \"readable\" cookie name\n\t\t\t//return dol_sanitizeFileName($_SERVER[\"SERVER_NAME\"].$_SERVER[\"DOCUMENT_ROOT\"].DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t\t}\n\t\telse return dol_hash(DOL_DOCUMENT_ROOT.DOL_URL_ROOT);\n\t}\n}\n\n/**\n *\tMake an include_once using default root and alternate root if it fails.\n *  To link to a core file, use include(DOL_DOCUMENT_ROOT.'/pathtofile')\n *  To link to a module file from a module file, use include './mymodulefile';\n *  To link to a module file from a core file, then this function can be used (call by hook / trigger / speciales pages)\n *\n * \t@param\tstring\t$relpath\tRelative path to file (Ie: mydir/myfile, ../myfile, ...)\n * \t@param\tstring\t$classname\tClass name (deprecated)\n *  @return bool                True if load is a success, False if it fails\n */\nfunction dol_include_once($relpath, $classname='')\n{\n\tglobal $conf,$langs,$user,$mysoc;   // Do not remove this. They must be defined for files we include. Other globals var must be retreived with $GLOBALS['var']\n\n\t$fullpath = dol_buildpath($relpath);\n\n\tif (!file_exists($fullpath)) {\n\t\tdol_syslog('functions::dol_include_once Tried to load unexisting file: '.$relpath, LOG_ERR);\n\t\treturn false;\n\t}\n\n\tif (! empty($classname) && ! class_exists($classname)) {\n\t\treturn include $fullpath;\n\t} else {\n\t\treturn include_once $fullpath;\n\t}\n}\n\n\n/**\n *\tReturn path of url or filesystem. Return alternate root if exists.\n *\n * \t@param\tstring\t$path\t\t\t\t\t\tRelative path to file (if mode=0) or relative url (if mode=1). Ie: mydir/myfile, ../myfile\n *  @param\tint\t\t$type\t\t\t\t\t\t0=Used for a Filesystem path, 1=Used for an URL path (output relative), 2=Used for an URL path (output full path using same host that current url), 3=Used for an URL path (output full path using host defined into $dolibarr_main_url_root of conf file)\n *  @param\tint\t\t$returnemptyifnotfound\t\t0:If $type==0 and if file was not found into alternate dir, return default path into main dir (no test on it)\n *  \t\t\t\t\t\t\t\t\t\t\t1:If $type==0 and if file was not found into alternate dir, return empty string\n *  \t\t\t\t\t\t\t\t\t\t\t2:If $type==0 and if file was not found into alternate dir, test into main dir, return default path if found, empty string if not found\n *  @return string\t\t\t\t\t\t\t\tFull filesystem path (if path=0), Full url path (if mode=1)\n */\nfunction dol_buildpath($path, $type=0, $returnemptyifnotfound=0)\n{\n\tglobal $conf;\n\n\t$path=preg_replace('/^\\//','',$path);\n\n\tif (empty($type))\t// For a filesystem path\n\t{\n\t\t$res = DOL_DOCUMENT_ROOT.'/'.$path;\t\t// Standard default path\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path))\n\t\t\t{\n\t\t\t\t$res=$dirroot.'/'.$path;\n\t\t\t\treturn $res;\n\t\t\t}\n\t\t}\n\t\tif ($returnemptyifnotfound)\t\t\t\t\t\t\t\t// Not found into alternate dir\n\t\t{\n\t\t\tif ($returnemptyifnotfound == 1 || ! file_exists($res)) return '';\n\t\t}\n\t}\n\telse\t\t\t\t// For an url path\n\t{\n\t\t// We try to get local path of file on filesystem from url\n\t\t// Note that trying to know if a file on disk exist by forging path on disk from url\n\t\t// works only for some web server and some setup. This is bugged when\n\t\t// using proxy, rewriting, virtual path, etc...\n\t\t$res='';\n\t\tif ($type == 1) $res = DOL_URL_ROOT.'/'.$path;\t\t\t// Standard value\n\t\tif ($type == 2) $res = DOL_MAIN_URL_ROOT.'/'.$path;\t\t// Standard value\n\t\tif ($type == 3) $res = DOL_URL_ROOT.'/'.$path;\n\n\t\tforeach ($conf->file->dol_document_root as $key => $dirroot)\t// ex: array([\"main\"]=>\"/home/main/htdocs\", [\"alt0\"]=>\"/home/dirmod/htdocs\", ...)\n\t\t{\n\t\t\tif ($key == 'main')\n\t\t\t{\n\t\t\t\tif ($type == 3)\n\t\t\t\t{\n\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t$urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t\t\t$urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreg_match('/^([^\\?]+(\\.css\\.php|\\.css|\\.js\\.php|\\.js|\\.png|\\.jpg|\\.php)?)/i',$path,$regs);    // Take part before '?'\n\t\t\tif (! empty($regs[1]))\n\t\t\t{\n\t\t\t\t//print $key.'-'.$dirroot.'/'.$path.'-'.$conf->file->dol_url_root[$type].'<br>'.\"\\n\";\n\t\t\t\tif (file_exists($dirroot.'/'.$regs[1]))\n\t\t\t\t{\n\t\t\t\t\tif ($type == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':DOL_MAIN_URL_ROOT).$conf->file->dol_url_root[$key].'/'.$path;\n\t\t\t\t\t}\n\t\t\t\t\tif ($type == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tglobal $dolibarr_main_url_root;\n\n\t\t\t\t\t\t// Define $urlwithroot\n\t\t\t\t\t\t$urlwithouturlroot=preg_replace('/'.preg_quote(DOL_URL_ROOT,'/').'$/i','',trim($dolibarr_main_url_root));\n\t\t\t\t\t\t$urlwithroot=$urlwithouturlroot.DOL_URL_ROOT;\t\t// This is to use external domain name found into config file\n\t\t\t\t\t\t//$urlwithroot=DOL_MAIN_URL_ROOT;\t\t\t\t\t// This is to use same domain name than current\n\n\t\t\t\t\t\t$res=(preg_match('/^http/i',$conf->file->dol_url_root[$key])?'':$urlwithroot).$conf->file->dol_url_root[$key].'/'.$path;     // Test on start with http is for old conf syntax\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn $res;\n}\n\n/**\n *\tCreate a clone of instance of object (new instance with same value for properties)\n *  With native = 0: Property that are reference are also new object (true clone). This means $this->db is not valid.\n *  With native = 1: Use PHP clone. Property that are reference are same pointer. This means $this->db is still valid.\n *\n * \t@param\tobject\t$object\t\tObject to clone\n *  @param\tint\t\t$native\t\tNative method or true method\n *\t@return object\t\t\t\tObject clone\n *  @see https://php.net/manual/language.oop5.cloning.php\n */\nfunction dol_clone($object, $native=0)\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tif (empty($native))\n\t{\n\t\t$myclone=unserialize(serialize($object));\n\t}\n\telse\n\t{\n\t\t$myclone = clone $object;     // PHP clone is a shallow copy only, not a real clone, so properties of references will keep references (refer to the same target/variable)\n\t}\n\n\treturn $myclone;\n}\n\n/**\n *\tOptimize a size for some browsers (phone, smarphone, ...)\n *\n * \t@param\tint\t\t$size\t\tSize we want\n * \t@param\tstring\t$type\t\tType of optimizing:\n * \t\t\t\t\t\t\t\t'' = function used to define a size for truncation\n * \t\t\t\t\t\t\t\t'width' = function is used to define a width\n *\t@return int\t\t\t\t\tNew size after optimizing\n */\nfunction dol_size($size,$type='')\n{\n\tglobal $conf;\n\tif (empty($conf->dol_optimize_smallscreen)) return $size;\n\tif ($type == 'width' && $size > 250) return 250;\n\telse return 10;\n}\n\n\n/**\n *\tClean a string to use it as a file name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizePathName\n */\nfunction dol_sanitizeFileName($str,$newstr='_',$unaccent=1)\n{\n\t$filesystem_forbidden_chars = array('<','>','/','\\\\','?','*','|','\"','\u00b0');\n\treturn dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string to use it as a path name\n *\n *\t@param\tstring\t$str            String to clean\n * \t@param\tstring\t$newstr\t\t\tString to replace bad chars with\n *  @param\tint\t    $unaccent\t\t1=Remove also accent (default), 0 do not remove them\n *\t@return string          \t\tString cleaned (a-zA-Z_)\n *\n * \t@see        \tdol_string_nospecial, dol_string_unaccent, dol_sanitizeFileName\n */\nfunction dol_sanitizePathName($str,$newstr='_',$unaccent=1)\n{\n\t$filesystem_forbidden_chars = array('<','>','?','*','|','\"','\u00b0');\n\treturn dol_string_nospecial($unaccent?dol_string_unaccent($str):$str, $newstr, $filesystem_forbidden_chars);\n}\n\n/**\n *\tClean a string from all accent characters to be used as ref, login or by dol_sanitizeFileName\n *\n *\t@param\tstring\t$str\t\t\tString to clean\n *\t@return string   \t       \t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_nospecial\n */\nfunction dol_string_unaccent($str)\n{\n\tif (utf8_check($str))\n\t{\n\t\t// See http://www.utf8-chartable.de/\n\t\t$string = rawurlencode($str);\n\t\t$replacements = array(\n\t\t'%C3%80' => 'A','%C3%81' => 'A','%C3%82' => 'A','%C3%83' => 'A','%C3%84' => 'A','%C3%85' => 'A',\n\t\t'%C3%88' => 'E','%C3%89' => 'E','%C3%8A' => 'E','%C3%8B' => 'E',\n\t\t'%C3%8C' => 'I','%C3%8D' => 'I','%C3%8E' => 'I','%C3%8F' => 'I',\n\t\t'%C3%92' => 'O','%C3%93' => 'O','%C3%94' => 'O','%C3%95' => 'O','%C3%96' => 'O',\n\t\t'%C3%99' => 'U','%C3%9A' => 'U','%C3%9B' => 'U','%C3%9C' => 'U',\n\t\t'%C3%A0' => 'a','%C3%A1' => 'a','%C3%A2' => 'a','%C3%A3' => 'a','%C3%A4' => 'a','%C3%A5' => 'a',\n\t\t'%C3%A7' => 'c',\n\t\t'%C3%A8' => 'e','%C3%A9' => 'e','%C3%AA' => 'e','%C3%AB' => 'e',\n\t\t'%C3%AC' => 'i','%C3%AD' => 'i','%C3%AE' => 'i','%C3%AF' => 'i',\n\t\t'%C3%B1' => 'n',\n\t\t'%C3%B2' => 'o','%C3%B3' => 'o','%C3%B4' => 'o','%C3%B5' => 'o','%C3%B6' => 'o',\n\t\t'%C3%B9' => 'u','%C3%BA' => 'u','%C3%BB' => 'u','%C3%BC' => 'u',\n\t\t'%C3%BF' => 'y'\n\t\t);\n\t\t$string=strtr($string, $replacements);\n\t\treturn rawurldecode($string);\n\t}\n\telse\n\t{\n\t\t// See http://www.ascii-code.com/\n\t\t$string = strtr(\n\t\t\t$str,\n\t\t\t\"\\xC0\\xC1\\xC2\\xC3\\xC4\\xC5\\xC7\n\t\t\t\\xC8\\xC9\\xCA\\xCB\\xCC\\xCD\\xCE\\xCF\\xD0\\xD1\n\t\t\t\\xD2\\xD3\\xD4\\xD5\\xD8\\xD9\\xDA\\xDB\\xDD\n\t\t\t\\xE0\\xE1\\xE2\\xE3\\xE4\\xE5\\xE7\\xE8\\xE9\\xEA\\xEB\n\t\t\t\\xEC\\xED\\xEE\\xEF\\xF0\\xF1\\xF2\\xF3\\xF4\\xF5\\xF8\n\t\t\t\\xF9\\xFA\\xFB\\xFC\\xFD\\xFF\",\n\t\t\t\"AAAAAAC\n\t\t\tEEEEIIIIDN\n\t\t\tOOOOOUUUY\n\t\t\taaaaaaceeee\n\t\t\tiiiidnooooo\n\t\t\tuuuuyy\"\n\t\t);\n\t\t$string = strtr($string, array(\"\\xC4\"=>\"Ae\", \"\\xC6\"=>\"AE\", \"\\xD6\"=>\"Oe\", \"\\xDC\"=>\"Ue\", \"\\xDE\"=>\"TH\", \"\\xDF\"=>\"ss\", \"\\xE4\"=>\"ae\", \"\\xE6\"=>\"ae\", \"\\xF6\"=>\"oe\", \"\\xFC\"=>\"ue\", \"\\xFE\"=>\"th\"));\n\t\treturn $string;\n\t}\n}\n\n/**\n *\tClean a string from all punctuation characters to use it as a ref or login.\n *  This is a more complete function than dol_sanitizeFileName.\n *\n *\t@param\tstring\t$str            \tString to clean\n * \t@param\tstring\t$newstr\t\t\t\tString to replace forbidden chars with\n *  @param  array\t$badcharstoreplace  List of forbidden characters\n * \t@return string          \t\t\tCleaned string\n *\n * \t@see    \t\tdol_sanitizeFilename, dol_string_unaccent\n */\nfunction dol_string_nospecial($str,$newstr='_',$badcharstoreplace='')\n{\n\t$forbidden_chars_to_replace=array(\" \", \"'\", \"/\", \"\\\\\", \":\", \"*\", \"?\", \"\\\"\", \"<\", \">\", \"|\", \"[\", \"]\", \",\", \";\", \"=\", '\u00b0');  // more complete than dol_sanitizeFileName\n\t$forbidden_chars_to_remove=array();\n\tif (is_array($badcharstoreplace)) $forbidden_chars_to_replace=$badcharstoreplace;\n\t//$forbidden_chars_to_remove=array(\"(\",\")\");\n\n\treturn str_replace($forbidden_chars_to_replace,$newstr,str_replace($forbidden_chars_to_remove,\"\",$str));\n}\n\n\n/**\n * Encode string for xml usage\n *\n * @param \tstring\t$string\t\tString to encode\n * @return\tstring\t\t\t\tString encoded\n */\nfunction dolEscapeXML($string)\n{\n\treturn strtr($string, array('\\''=>'&apos;','\"'=>'&quot;','&'=>'&amp;','<'=>'&lt;','>'=>'&gt;'));\n}\n\n/**\n *  Returns text escaped for inclusion into javascript code\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t$mode\t\t\t\t0=Escape also ' and \" into ', 1=Escape ' but not \" for usage into 'string', 2=Escape \" but not ' for usage into \"string\", 3=Escape ' and \" with \\\n *  @param\t\tint\t\t$noescapebackslashn\t0=Escape also \\n. 1=Do not escape \\n.\n *  @return     string     \t\t \t\t\t\tEscaped string. Both ' and \" are escaped into ' if they are escaped.\n */\nfunction dol_escape_js($stringtoescape, $mode=0, $noescapebackslashn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$substitjs=array(\"&#039;\"=>\"\\\\'\",\"\\r\"=>'\\\\r');\n\t//$substitjs['</']='<\\/';\t// We removed this. Should be useless.\n\tif (empty($noescapebackslashn)) { $substitjs[\"\\n\"]='\\\\n'; $substitjs['\\\\']='\\\\\\\\'; }\n\tif (empty($mode)) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\'\"; }\n\telse if ($mode == 1) $substitjs[\"'\"]=\"\\\\'\";\n\telse if ($mode == 2) { $substitjs['\"']='\\\\\"'; }\n\telse if ($mode == 3) { $substitjs[\"'\"]=\"\\\\'\"; $substitjs['\"']=\"\\\\\\\"\"; }\n\treturn strtr($stringtoescape, $substitjs);\n}\n\n\n/**\n *  Returns text escaped for inclusion in HTML alt or title tags, or into values of HTML input fields.\n *\n *  @param      string\t\t$stringtoescape\t\tString to escape\n *  @param\t\tint\t\t\t$keepb\t\t\t\t1=Preserve b tags (otherwise, remove them)\n *  @param      int         $keepn              1=Preserve \\r\\n strings (otherwise, replace them with escaped value)\n *  @return     string     \t\t\t\t \t\tEscaped string\n *  @see\t\tdol_string_nohtmltag\n */\nfunction dol_escape_htmltag($stringtoescape, $keepb=0, $keepn=0)\n{\n\t// escape quotes and backslashes, newlines, etc.\n\t$tmp=html_entity_decode($stringtoescape, ENT_COMPAT, 'UTF-8');\t\t// TODO Use htmlspecialchars_decode instead, that make only required change for html tags\n\tif (! $keepb) $tmp=strtr($tmp, array(\"<b>\"=>'','</b>'=>''));\n\tif (! $keepn) $tmp=strtr($tmp, array(\"\\r\"=>'\\\\r',\"\\n\"=>'\\\\n'));\n\treturn htmlentities($tmp, ENT_COMPAT, 'UTF-8');\t\t\t\t\t\t// TODO Use htmlspecialchars instead, that make only required change for html tags\n}\n\n\n/**\n * Convert a string to lower. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtolower($utf8_string)\n{\n\treturn mb_strtolower($utf8_string, \"UTF-8\");\n}\n\n/**\n * Convert a string to upper. Never use strtolower because it does not works with UTF8 strings.\n *\n * @param \tstring\t\t$utf8_string\t\tString to encode\n * @return \tstring\t\t\t\t\t\t\tString converted\n */\nfunction dol_strtoupper($utf8_string)\n{\n\treturn mb_strtoupper($utf8_string, \"UTF-8\");\n}\n\n\n/**\n *\tWrite log message into outputs. Possible outputs can be:\n *\tSYSLOG_HANDLERS = [\"mod_syslog_file\"]  \t\tfile name is then defined by SYSLOG_FILE\n *\tSYSLOG_HANDLERS = [\"mod_syslog_syslog\"]  \tfacility is then defined by SYSLOG_FACILITY\n *  Warning, syslog functions are bugged on Windows, generating memory protection faults. To solve\n *  this, use logging to files instead of syslog (see setup of module).\n *  Note: If constant 'SYSLOG_FILE_NO_ERROR' defined, we never output any error message when writing to log fails.\n *  Note: You can get log message into html sources by adding parameter &logtohtml=1 (constant MAIN_LOGTOHTML must be set)\n *  This function works only if syslog module is enabled.\n * \tThis must not use any call to other function calling dol_syslog (avoid infinite loop).\n *\n * \t@param  string\t\t$message\t\t\t\tLine to log. ''=Show nothing\n *  @param  int\t\t\t$level\t\t\t\t\tLog level\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Windows LOG_ERR=4, LOG_WARNING=5, LOG_NOTICE=LOG_INFO=6, LOG_DEBUG=6 si define_syslog_variables ou PHP 5.3+, 7 si dolibarr\n *\t\t\t\t\t\t\t\t\t\t\t\tOn Linux   LOG_ERR=3, LOG_WARNING=4, LOG_INFO=6, LOG_DEBUG=7\n *  @param\tint\t\t\t$ident\t\t\t\t\t1=Increase ident of 1, -1=Decrease ident of 1\n *  @param\tstring\t\t$suffixinfilename\t\tWhen output is a file, append this suffix into default log filename.\n *  @param\tstring\t\t$restricttologhandler\tOutput log only for this log handler\n *  @return\tvoid\n */\nfunction dol_syslog($message, $level = LOG_INFO, $ident = 0, $suffixinfilename='', $restricttologhandler='')\n{\n\tglobal $conf, $user;\n\n\t// If syslog module enabled\n\tif (empty($conf->syslog->enabled)) return;\n\n\tif (! empty($message))\n\t{\n\t\t// Test log level\n\t\t$logLevels = array(LOG_EMERG, LOG_ALERT, LOG_CRIT, LOG_ERR, LOG_WARNING, LOG_NOTICE, LOG_INFO, LOG_DEBUG);\n\t\tif (!in_array($level, $logLevels, true))\n\t\t{\n\t\t\tthrow new Exception('Incorrect log level');\n\t\t}\n\t\tif ($level > $conf->global->SYSLOG_LEVEL) return;\n\n\t\t// If adding log inside HTML page is required\n\t\tif (! empty($_REQUEST['logtohtml']) && (! empty($conf->global->MAIN_ENABLE_LOG_TO_HTML) || ! empty($conf->global->MAIN_LOGTOHTML)))   // MAIN_LOGTOHTML kept for backward compatibility\n\t\t{\n\t\t\t$conf->logbuffer[] = dol_print_date(time(),\"%Y-%m-%d %H:%M:%S\").\" \".$message;\n\t\t}\n\n\t\t//TODO: Remove this. MAIN_ENABLE_LOG_INLINE_HTML should be deprecated and use a log handler dedicated to HTML output\n\t\t// If enable html log tag enabled and url parameter log defined, we show output log on HTML comments\n\t\tif (! empty($conf->global->MAIN_ENABLE_LOG_INLINE_HTML) && ! empty($_GET[\"log\"]))\n\t\t{\n\t\t\tprint \"\\n\\n<!-- Log start\\n\";\n\t\t\tprint $message.\"\\n\";\n\t\t\tprint \"Log end -->\\n\";\n\t\t}\n\n\t\t$data = array(\n\t\t\t'message' => $message,\n\t\t\t'script' => (isset($_SERVER['PHP_SELF'])? basename($_SERVER['PHP_SELF'],'.php') : false),\n\t\t\t'level' => $level,\n\t\t\t'user' => ((is_object($user) && $user->id) ? $user->login : false),\n\t\t\t'ip' => false\n\t\t);\n\n\t\t// This is when server run behind a reverse proxy\n\t\tif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) $data['ip'] = $_SERVER['HTTP_X_FORWARDED_FOR'].(empty($_SERVER[\"REMOTE_ADDR\"])?'':'->'.$_SERVER['REMOTE_ADDR']);\n\t\t// This is when server run normally on a server\n\t\telse if (! empty($_SERVER[\"REMOTE_ADDR\"])) $data['ip'] = $_SERVER['REMOTE_ADDR'];\n\t\t// This is when PHP session is ran inside a web server but not inside a client request (example: init code of apache)\n\t\telse if (! empty($_SERVER['SERVER_ADDR'])) $data['ip'] = $_SERVER['SERVER_ADDR'];\n\t\t// This is when PHP session is ran outside a web server, like from Windows command line (Not always defined, but useful if OS defined it).\n\t\telse if (! empty($_SERVER['COMPUTERNAME'])) $data['ip'] = $_SERVER['COMPUTERNAME'].(empty($_SERVER['USERNAME'])?'':'@'.$_SERVER['USERNAME']);\n\t\t// This is when PHP session is ran outside a web server, like from Linux command line (Not always defined, but usefull if OS defined it).\n\t\telse if (! empty($_SERVER['LOGNAME'])) $data['ip'] = '???@'.$_SERVER['LOGNAME'];\n\t\t// Loop on each log handler and send output\n\t\tforeach ($conf->loghandlers as $loghandlerinstance)\n\t\t{\n\t\t\tif ($restricttologhandler && $loghandlerinstance->code != $restricttologhandler) continue;\n\t\t\t$loghandlerinstance->export($data,$suffixinfilename);\n\t\t}\n\t\tunset($data);\n\t}\n\n\tif (! empty($ident))\n\t{\n\t\tforeach ($conf->loghandlers as $loghandlerinstance)\n\t\t{\n\t\t\t$loghandlerinstance->setIdent($ident);\n\t\t}\n\t}\n}\n\n\n/**\n *\tShow tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs. Currently initialized by calling a function xxx_admin_prepare_head\n *\t@param\tstring\t$active     \t\tActive tab name (document', 'info', 'ldap', ....)\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n * \t@return\tvoid\n */\nfunction dol_fiche_head($links=array(), $active='0', $title='', $notab=0, $picto='', $pictoisfullpath=0, $morehtmlright='', $morecss='')\n{\n\tprint dol_get_fiche_head($links, $active, $title, $notab, $picto, $pictoisfullpath, $morehtmlright, $morecss);\n}\n\n/**\n *  Show tab header of a card\n *\n *\t@param\tarray\t$links\t\t\t\tArray of tabs\n *\t@param\tstring\t$active     \t\tActive tab name\n *\t@param  string\t$title      \t\tTitle\n *\t@param  int\t\t$notab\t\t\t\t-1 or 0=Add tab header, 1=no tab header. If you set this to 1, using dol_fiche_end() to close tab is not required.\n * \t@param\tstring\t$picto\t\t\t\tAdd a picto on tab title\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path. If you set this to 1, you can use url returned by dol_buildpath('/mymodyle/img/myimg.png',1) for $picto.\n *  @param\tstring\t$morehtmlright\t\tAdd more html content on right of tabs title\n *  @param\tstring\t$morecss\t\t\tMore Css\n * \t@return\tstring\n */\nfunction dol_get_fiche_head($links=array(), $active='', $title='', $notab=0, $picto='', $pictoisfullpath=0, $morehtmlright='', $morecss='')\n{\n\tglobal $conf, $langs, $hookmanager;\n\n\t$out=\"\\n\".'<div class=\"tabs\" data-role=\"controlgroup\" data-type=\"horizontal\">'.\"\\n\";\n\n\tif ($morehtmlright) $out.='<div class=\"inline-block floatright tabsElem\">'.$morehtmlright.'</div>';\t// Output right area first so when space is missing, text is in front of tabs and not under.\n\n\t// Show title\n\t$showtitle=1;\n\tif (! empty($conf->dol_optimize_smallscreen)) $showtitle=0;\n\tif (! empty($title) && $showtitle)\n\t{\n\t\t$limittitle=30;\n\t\t$out.='<a class=\"tabTitle\">';\n\t\tif ($picto) $out.=img_picto($title,($pictoisfullpath?'':'object_').$picto,'',$pictoisfullpath).' ';\n\t\t$out.='<span class=\"tabTitleText\">'.dol_trunc($title,$limittitle).'</span>';\n\t\t$out.='</a>';\n\t}\n\n\t// Define max of key (max may be higher than sizeof because of hole due to module disabling some tabs).\n\t$maxkey=-1;\n\tif (is_array($links) && ! empty($links))\n\t{\n\t\t$keys=array_keys($links);\n\t\tif (count($keys)) $maxkey=max($keys);\n\t}\n\n\tif (! empty($conf->dol_optimize_smallscreen)) $conf->global->MAIN_MAXTABS_IN_CARD=2;\n\n\t// Show tabs\n\t$bactive=false;\n\t// if =0 we don't use the feature\n\t$limittoshow=(empty($conf->global->MAIN_MAXTABS_IN_CARD)?99:$conf->global->MAIN_MAXTABS_IN_CARD);\n\t$displaytab=0;\n\t$nbintab=0;\n\t$popuptab=0; $outmore='';\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t// If active tab is already present\n\t\t\tif ($i >= $limittoshow) $limittoshow--;\n\t\t}\n\t}\n\n\tfor ($i = 0 ; $i <= $maxkey ; $i++)\n\t{\n\t\tif ((is_numeric($active) && $i == $active) || (! empty($links[$i][2]) && ! is_numeric($active) && $active == $links[$i][2]))\n\t\t{\n\t\t\t$isactive=true;\n\t\t\t$bactive=true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$isactive=false;\n\t\t}\n\n\t\tif ($i < $limittoshow || $isactive)\n\t\t{\n\t\t\t$out.='<div class=\"inline-block tabsElem'.($isactive ? ' tabsElemActive' : '').((! $isactive && ! empty($conf->global->MAIN_HIDE_INACTIVETAB_ON_PRINT))?' hideonprint':'').'\"><!-- id tab = '.(empty($links[$i][2])?'':$links[$i][2]).' -->';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t{\n\t\t\t\t\t$out.='<a class=\"tabimage'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t{\n\t\t\t\t//print \"x $i $active \".$links[$i][2].\" z\";\n\t\t\t\tif ($isactive)\n\t\t\t\t{\n\t\t\t\t\t$out.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabactive tab inline-block'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t\t$out.=$links[$i][1];\n\t\t\t\t\t$out.='</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$out.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"tabunactive tab inline-block'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t\t$out.=$links[$i][1];\n\t\t\t\t\t$out.='</a>'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t$out.='</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// The popup with the other tabs\n\t\t\tif (! $popuptab)\n\t\t\t{\n\t\t\t\t$popuptab=1;\n\t\t\t\t$outmore.='<div class=\"popuptabset wordwrap\">';\t// The css used to hide/show popup\n\t\t\t}\n\t\t\t$outmore.='<div class=\"popuptab wordwrap\" style=\"display:inherit;\">';\n\t\t\tif (isset($links[$i][2]) && $links[$i][2] == 'image')\n\t\t\t{\n\t\t\t\tif (!empty($links[$i][0]))\n\t\t\t\t\t$outmore.='<a class=\"tabimage'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">'.$links[$i][1].'</a>'.\"\\n\";\n\t\t\t\telse\n\t\t\t\t\t$outmore.='<span class=\"tabspan\">'.$links[$i][1].'</span>'.\"\\n\";\n\n\t\t\t}\n\t\t\telse if (! empty($links[$i][1]))\n\t\t\t{\n\t\t\t\t$outmore.='<a'.(! empty($links[$i][2])?' id=\"'.$links[$i][2].'\"':'').' class=\"wordwrap inline-block'.($morecss?' '.$morecss:'').'\" href=\"'.$links[$i][0].'\">';\n\t\t\t\t$outmore.=preg_replace('/([a-z])\\/([a-z])/i', '\\\\1 / \\\\2', $links[$i][1]);\t// Replace x/y with x / y to allow wrap on long composed texts.\n\t\t\t\t$outmore.='</a>'.\"\\n\";\n\t\t\t}\n\t\t\t$outmore.='</div>';\n\n\t\t\t$nbintab++;\n\t\t}\n\t\t$displaytab=$i;\n\t}\n\tif ($popuptab) $outmore.='</div>';\n\n\tif ($displaytab > $limittoshow)\n\t{\n\t\t$left=($langs->trans(\"DIRECTION\") == 'rtl'?'right':'left');\n\t\t$right=($langs->trans(\"DIRECTION\") == 'rtl'?'left':'right');\n\n\t\t$tabsname=str_replace(\"@\", \"\", $picto);\n\t\t$out.='<div id=\"moretabs'.$tabsname.'\" class=\"inline-block tabsElem\">';\n\t\t$out.='<a href=\"#\" class=\"tab moretab inline-block tabunactive reposition\">'.$langs->trans(\"More\").'... ('.$nbintab.')</a>';\n\t\t$out.='<div id=\"moretabsList'.$tabsname.'\" style=\"position: absolute; '.$left.': -999em; text-align: '.$left.'; margin:0px; padding:2px\">';\n\t\t$out.=$outmore;\n\t\t$out.='</div>';\n\t\t$out.='<div></div>';\n\t\t$out.=\"</div>\\n\";\n\n\t\t$out.=\"<script>\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseenter( function() { console.log('mouseenter \".$left.\"'); $('#moretabsList\".$tabsname.\"').css('\".$left.\"','auto');});\";\n\t\t$out.=\"$('#moretabs\".$tabsname.\"').mouseleave( function() { console.log('mouseleave \".$left.\"'); $('#moretabsList\".$tabsname.\"').css('\".$left.\"','-999em');});\";\n\t\t$out.=\"</script>\";\n\t}\n\n\t$out.=\"</div>\\n\";\n\n\tif (! $notab || $notab == -1) $out.=\"\\n\".'<div class=\"tabBar'.($notab == -1 ? '' : ' tabBarWithBottom').'\">'.\"\\n\";\n\n\t$parameters=array('tabname' => $active, 'out' => $out);\n\t$reshook=$hookmanager->executeHooks('printTabsHead',$parameters);\t// This hook usage is called just before output the head of tabs. Take also a look at \"completeTabsHead\"\n\tif ($reshook > 0)\n\t{\n\t\t$out = $hookmanager->resPrint;\n\t}\n\n\treturn $out;\n}\n\n/**\n *  Show tab footer of a card\n *\n *  @param\tint\t\t$notab       -1 or 0=Add tab footer, 1=no tab footer\n *  @return\tvoid\n */\nfunction dol_fiche_end($notab=0)\n{\n\tprint dol_get_fiche_end($notab);\n}\n\n/**\n *\tReturn tab footer of a card\n *\n *\t@param  int\t\t$notab\t\t-1 or 0=Add tab footer, 1=no tab footer\n *  @return\tstring\n */\nfunction dol_get_fiche_end($notab=0)\n{\n\tif (! $notab || $notab == -1) return \"\\n</div>\\n\";\n\telse return '';\n}\n\n/**\n *  Show tab footer of a card.\n *  Note: $object->next_prev_filter can be set to restrict select to find next or previous record by $form->showrefnav.\n *\n *  @param\tObject\t$object\t\t\tObject to show\n *  @param\tstring\t$paramid   \t\tName of parameter to use to name the id into the URL next/previous link\n *  @param\tstring\t$morehtml  \t\tMore html content to output just before the nav bar\n *  @param\tint\t\t$shownav\t  \tShow Condition (navigation is shown if value is 1)\n *  @param\tstring\t$fieldid   \t\tNom du champ en base a utiliser pour select next et previous (we make the select max and min on this field). Use 'none' for no prev/next search.\n *  @param\tstring\t$fieldref   \tNom du champ objet ref (object->ref) a utiliser pour select next et previous\n *  @param\tstring\t$morehtmlref  \tMore html to show after ref\n *  @param\tstring\t$moreparam  \tMore param to add in nav link url.\n *\t@param\tint\t\t$nodbprefix\t\tDo not include DB prefix to forge table name\n *\t@param\tstring\t$morehtmlleft\tMore html code to show before ref\n *\t@param\tstring\t$morehtmlstatus\tMore html code to show under navigation arrows\n *  @param  int     $onlybanner     Put this to 1, if the card will contains only a banner (this add css 'arearefnobottom' on div)\n *\t@param\tstring\t$morehtmlright\tMore html code to show before navigation arrows\n *  @return\tvoid\n */\nfunction dol_banner_tab($object, $paramid, $morehtml='', $shownav=1, $fieldid='rowid', $fieldref='ref', $morehtmlref='', $moreparam='', $nodbprefix=0, $morehtmlleft='', $morehtmlstatus='', $onlybanner=0, $morehtmlright='')\n{\n\tglobal $conf, $form, $user, $langs;\n\n\t$error = 0;\n\n\t$maxvisiblephotos=1;\n\t$showimage=1;\n\t$showbarcode=empty($conf->barcode->enabled)?0:($object->barcode?1:0);\n\tif (! empty($conf->global->MAIN_USE_ADVANCED_PERMS) && empty($user->rights->barcode->lire_advance)) $showbarcode=0;\n\t$modulepart='unknown';\n\n\tif ($object->element == 'societe')         $modulepart='societe';\n\tif ($object->element == 'contact')         $modulepart='contact';\n\tif ($object->element == 'member')          $modulepart='memberphoto';\n\tif ($object->element == 'user')            $modulepart='userphoto';\n\tif ($object->element == 'product')         $modulepart='product';\n\n\tif (class_exists(\"Imagick\"))\n\t{\n\t\tif ($object->element == 'propal')            $modulepart='propal';\n\t\tif ($object->element == 'commande')          $modulepart='commande';\n\t\tif ($object->element == 'facture')           $modulepart='facture';\n\t\tif ($object->element == 'fichinter')         $modulepart='ficheinter';\n\t\tif ($object->element == 'contrat')           $modulepart='contract';\n\t\tif ($object->element == 'supplier_proposal') $modulepart='supplier_proposal';\n\t\tif ($object->element == 'order_supplier')    $modulepart='supplier_order';\n\t\tif ($object->element == 'invoice_supplier')  $modulepart='supplier_invoice';\n\t\tif ($object->element == 'expensereport')     $modulepart='expensereport';\n\t}\n\n\tif ($object->element == 'product')\n\t{\n\t\t$width=80; $cssclass='photoref';\n\t\t$showimage=$object->is_photo_available($conf->product->multidir_output[$object->entity]);\n\t\t$maxvisiblephotos=(isset($conf->global->PRODUCT_MAX_VISIBLE_PHOTO)?$conf->global->PRODUCT_MAX_VISIBLE_PHOTO:5);\n\t\tif ($conf->browser->phone) $maxvisiblephotos=1;\n\t\tif ($showimage) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$object->show_photos($conf->product->multidir_output[$object->entity],'small',$maxvisiblephotos,0,0,0,$width,0).'</div>';\n\t\telse\n\t\t{\n\t\t\tif (!empty($conf->global->PRODUCT_NODISPLAYIFNOPHOTO)) {\n\t\t\t\t$nophoto='';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"></div>';\n\t\t\t}\n\t\t\t//elseif ($conf->browser->layout != 'phone') {    // Show no photo link\n\t\t\t\t$nophoto='/public/theme/common/nophoto.png';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.DOL_URL_ROOT.$nophoto.'\"></div>';\n\t\t\t//}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($showimage)\n\t\t{\n\t\t\tif ($modulepart != 'unknown')\n\t\t\t{\n\t\t\t\t$phototoshow='';\n\t\t\t\t// Check if a preview file is available\n\t\t\t\tif (in_array($modulepart, array('propal', 'commande', 'facture', 'ficheinter', 'contract', 'supplier_order', 'supplier_proposal', 'supplier_invoice', 'expensereport')) && class_exists(\"Imagick\"))\n\t\t\t\t{\n\t\t\t\t\t$objectref = dol_sanitizeFileName($object->ref);\n\t\t\t\t\t$dir_output = $conf->$modulepart->dir_output . \"/\";\n\t\t\t\t\tif (in_array($modulepart, array('invoice_supplier', 'supplier_invoice')))\n\t\t\t\t\t{\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 2, 0, 0, $object, $modulepart).$objectref;\t\t// the objectref dir is not include into get_exdir when used with level=2, so we add it here\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$subdir = get_exdir($object->id, 0, 0, 0, $object, $modulepart);\n\t\t\t\t\t}\n\n\t\t\t\t\t$filepath = $dir_output . $subdir . \"/\";\n\t\t\t\t\t$file = $filepath . $objectref . \".pdf\";\n\t\t\t\t\t$relativepath = $subdir.'/'.$objectref.'.pdf';\n\n\t\t\t\t\t// Define path to preview pdf file (preview precompiled \"file.ext\" are \"file.ext_preview.png\")\n\t\t\t\t\t$fileimage = $file.'_preview.png';              // If PDF has 1 page\n\t\t\t\t\t$fileimagebis = $file.'_preview-0.png';         // If PDF has more than one page\n\t\t\t\t\t$relativepathimage = $relativepath.'_preview.png';\n\n\t\t\t\t\t// Si fichier PDF existe\n\t\t\t\t\tif (file_exists($file))\n\t\t\t\t\t{\n\t\t\t\t\t\t$encfile = urlencode($file);\n\t\t\t\t\t\t// Conversion du PDF en image png si fichier png non existant\n\t\t\t\t\t\tif ( (! file_exists($fileimage) || (filemtime($fileimage) < filemtime($file)))\n\t\t\t\t\t\t  && (! file_exists($fileimagebis) || (filemtime($fileimagebis) < filemtime($file)))\n\t\t\t\t\t\t   )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (empty($conf->global->MAIN_DISABLE_PDF_THUMBS))\t\t// If you experienc trouble with pdf thumb generation and imagick, you can disable here.\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$ret = dol_convert_file($file, 'png', $fileimage);\n\t\t\t\t\t\t\t\tif ($ret < 0) $error++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$heightforphotref=70;\n\t\t\t\t\t\tif (! empty($conf->dol_optimize_smallscreen)) $heightforphotref=60;\n\t\t\t\t\t\t// Si fichier png PDF d'1 page trouve\n\t\t\t\t\t\tif (file_exists($fileimage))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t\t\t\t$phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($relativepathimage).'\">';\n\t\t\t\t\t\t\t$phototoshow.= '</div></div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Si fichier png PDF de plus d'1 page trouve\n\t\t\t\t\t\telseif (file_exists($fileimagebis))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$preview = preg_replace('/\\.png/','',$relativepathimage) . \"-0.png\";\n\t\t\t\t\t\t\t$phototoshow = '<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\">';\n\t\t\t\t\t\t\t$phototoshow.= '<img height=\"'.$heightforphotref.'\" class=\"photo photowithmargin photowithborder\" src=\"'.DOL_URL_ROOT . '/viewimage.php?modulepart=apercu'.$modulepart.'&amp;file='.urlencode($preview).'\"><p>';\n\t\t\t\t\t\t\t$phototoshow.= '</div></div>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (! $phototoshow)\n\t\t\t\t{\n\t\t\t\t\t$phototoshow = $form->showphoto($modulepart,$object,0,0,0,'photoref','small',1,0,$maxvisiblephotos);\n\t\t\t\t}\n\n\t\t\t\tif ($phototoshow)\n\t\t\t\t{\n\t\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\t\t$morehtmlleft.=$phototoshow;\n\t\t\t\t\t$morehtmlleft.='</div>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (! $phototoshow)      // Show No photo link (picto of pbject)\n\t\t\t{\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">';\n\t\t\t\tif ($object->element == 'action')\n\t\t\t\t{\n\t\t\t\t\t$width=80;\n\t\t\t\t\t$cssclass='photorefcenter';\n\t\t\t\t\t$nophoto=img_picto('', 'title_agenda', '', false, 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$width=14; $cssclass='photorefcenter';\n\t\t\t\t\t$picto = $object->picto;\n\t\t\t\t\tif ($object->element == 'project' && ! $object->public) $picto = 'project'; // instead of projectpub\n\t\t\t\t\t$nophoto=img_picto('', 'object_'.$picto, '', false, 1);\n\t\t\t\t}\n\t\t\t\t$morehtmlleft.='<!-- No photo to show -->';\n\t\t\t\t$morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\"><div class=\"photoref\"><img class=\"photo'.$modulepart.($cssclass?' '.$cssclass:'').'\" alt=\"No photo\" border=\"0\"'.($width?' width=\"'.$width.'\"':'').' src=\"'.$nophoto.'\"></div></div>';\n\n\t\t\t\t$morehtmlleft.='</div>';\n\t\t\t}\n\t\t}\n\t}\n\n\tif ($showbarcode) $morehtmlleft.='<div class=\"floatleft inline-block valignmiddle divphotoref\">'.$form->showbarcode($object).'</div>';\n\n\tif ($object->element == 'societe')\n\t{\n\t\tif (! empty($conf->use_javascript_ajax) && $user->rights->societe->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE))\n\t\t{\n\t\t   \t$morehtmlstatus.=ajax_object_onoff($object, 'status', 'status', 'InActivity', 'ActivityCeased');\n\t\t}\n\t\telse {\n\t\t\t$morehtmlstatus.=$object->getLibStatut(6);\n\t\t}\n\t}\n\telseif ($object->element == 'product')\n\t{\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Sell\").') ';\n\t\tif (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus.=ajax_object_onoff($object, 'status', 'tosell', 'ProductStatusOnSell', 'ProductStatusNotOnSell');\n\t\t} else {\n\t\t\t$morehtmlstatus.='<span class=\"statusrefsell\">'.$object->getLibStatut(5,0).'</span>';\n\t\t}\n\t\t$morehtmlstatus.=' &nbsp; ';\n\t\t//$morehtmlstatus.=$langs->trans(\"Status\").' ('.$langs->trans(\"Buy\").') ';\n\t\tif (! empty($conf->use_javascript_ajax) && $user->rights->produit->creer && ! empty($conf->global->MAIN_DIRECT_STATUS_UPDATE)) {\n\t\t\t$morehtmlstatus.=ajax_object_onoff($object, 'status_buy', 'tobuy', 'ProductStatusOnBuy', 'ProductStatusNotOnBuy');\n\t\t} else {\n\t\t\t$morehtmlstatus.='<span class=\"statusrefbuy\">'.$object->getLibStatut(5,1).'</span>';\n\t\t}\n\t}\n\telseif (in_array($object->element, array('facture', 'invoice', 'invoice_supplier', 'chargesociales', 'loan')))\n\t{\n\t\t$tmptxt=$object->getLibStatut(6, $object->totalpaye);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5, $object->totalpaye);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\telseif ($object->element == 'contrat' || $object->element == 'contract')\n\t{\n\t\tif ($object->statut == 0) $morehtmlstatus.=$object->getLibStatut(5);\n\t\telse $morehtmlstatus.=$object->getLibStatut(4);\n\t}\n\telseif ($object->element == 'facturerec')\n\t{\n\t\tif ($object->frequency == 0) $morehtmlstatus.=$object->getLibStatut(2);\n\t\telse $morehtmlstatus.=$object->getLibStatut(5);\n\t}\n\telseif ($object->element == 'project_task')\n\t{\n\t\t$object->fk_statut = 1;\n\t\tif ($object->progress > 0) $object->fk_statut = 2;\n\t\tif ($object->progress >= 100) $object->fk_statut = 3;\n\t\t$tmptxt=$object->getLibStatut(5);\n\t\t$morehtmlstatus.=$tmptxt;\t\t// No status on task\n\t}\n\telse { // Generic case\n\t\t$tmptxt=$object->getLibStatut(6);\n\t\tif (empty($tmptxt) || $tmptxt == $object->getLibStatut(3) || $conf->browser->layout=='phone') $tmptxt=$object->getLibStatut(5);\n\t\t$morehtmlstatus.=$tmptxt;\n\t}\n\n\t// Add if object was dispatched \"into accountancy\"\n\tif (! empty($conf->accounting->enabled) && in_array($object->element, array('bank', 'facture', 'invoice', 'invoice_supplier', 'expensereport')))\n\t{\n\t\tif (method_exists($object, 'getVentilExportCompta'))\n\t\t{\n\t\t\t$accounted = $object->getVentilExportCompta();\n\t\t\t$langs->load(\"accountancy\");\n\t\t\t$morehtmlstatus.='</div><div class=\"statusref statusrefbis\">'.($accounted > 0 ? $langs->trans(\"Accounted\") : $langs->trans(\"NotYetAccounted\"));\n\t\t}\n\t}\n\n\t// Add alias for thirdparty\n\tif (! empty($object->name_alias)) $morehtmlref.='<div class=\"refidno\">'.$object->name_alias.'</div>';\n\n\t// Add label\n\tif ($object->element == 'product' || $object->element == 'bank_account' || $object->element == 'project_task')\n\t{\n\t\tif (! empty($object->label)) $morehtmlref.='<div class=\"refidno\">'.$object->label.'</div>';\n\t}\n\n\tif (method_exists($object, 'getBannerAddress') && $object->element != 'product' && $object->element != 'bookmark' && $object->element != 'ecm_directories' && $object->element != 'ecm_files')\n\t{\n\t\t$morehtmlref.='<div class=\"refidno\">';\n\t\t$morehtmlref.=$object->getBannerAddress('refaddress',$object);\n\t\t$morehtmlref.='</div>';\n\t}\n\tif (! empty($conf->global->MAIN_SHOW_TECHNICAL_ID) && in_array($object->element, array('societe', 'contact', 'member', 'product')))\n\t{\n\t\t$morehtmlref.='<div style=\"clear: both;\"></div><div class=\"refidno\">';\n\t\t$morehtmlref.=$langs->trans(\"TechnicalID\").': '.$object->id;\n\t\t$morehtmlref.='</div>';\n\t}\n\n\tprint '<div class=\"'.($onlybanner?'arearefnobottom ':'arearef ').'heightref valignmiddle\" width=\"100%\">';\n\tprint $form->showrefnav($object, $paramid, $morehtml, $shownav, $fieldid, $fieldref, $morehtmlref, $moreparam, $nodbprefix, $morehtmlleft, $morehtmlstatus, $morehtmlright);\n\tprint '</div>';\n\tprint '<div class=\"underrefbanner clearboth\"></div>';\n}\n\n/**\n * Show a string with the label tag dedicated to the HTML edit field.\n *\n * @param\tstring\t$langkey\t\tTranslation key\n * @param \tstring\t$fieldkey\t\tKey of the html select field the text refers to\n * @param\tint\t\t$fieldrequired\t1=Field is mandatory\n * @deprecated Form::editfieldkey\n */\nfunction fieldLabel($langkey, $fieldkey, $fieldrequired=0)\n{\n\tglobal $conf, $langs;\n\t$ret='';\n\tif ($fieldrequired) $ret.='<span class=\"fieldrequired\">';\n\tif (($conf->dol_use_jmobile != 4)) $ret.='<label for=\"'.$fieldkey.'\">';\n\t$ret.=$langs->trans($langkey);\n\tif (($conf->dol_use_jmobile != 4)) $ret.='</label>';\n\tif ($fieldrequired) $ret.='</span>';\n\treturn $ret;\n}\n\n/**\n * Return string to add class property on html element with pair/impair.\n *\n * @param\tstring\t$var\t\t\t0 or 1\n * @param\tstring\t$moreclass\t\tMore class to add\n * @return\tstring\t\t\t\t\tString to add class onto HTML element\n */\nfunction dol_bc($var,$moreclass='')\n{\n\tglobal $bc;\n\t$ret=' '.$bc[$var];\n\tif ($moreclass) $ret=preg_replace('/class=\\\"/','class=\"'.$moreclass.' ',$ret);\n\treturn $ret;\n}\n\n/**\n *      Return a formated address (part address/zip/town/state) according to country rules\n *\n *      @param  Object\t\t$object\t\t\tA company or contact object\n * \t    @param\tint\t\t\t$withcountry\t\t1=Add country into address string\n *      @param\tstring\t\t$sep\t\t\t\tSeparator to use to build string\n *      @param\tTranslate\t$outputlangs\t\tObject lang that contains language for text translation.\n *      @param\tint\t\t$mode\t\t0=Standard output, 1=Remove address\n *      @return string\t\t\t\t\t\tFormated string\n *      @see dol_print_address\n */\nfunction dol_format_address($object, $withcountry=0, $sep=\"\\n\", $outputlangs='', $mode=0)\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\t$countriesusingstate=array('AU','CA','US','IN','GB','ES','UK','TR');    // See also MAIN_FORCE_STATE_INTO_ADDRESS\n\n\t// Address\n\tif (empty($mode)) {\n\t\t$ret .= $object->address;\n\t}\n\t// Zip/Town/State\n\tif (in_array($object->country_code,array('AU', 'CA', 'US')) || ! empty($conf->global->MAIN_FORCE_STATE_INTO_ADDRESS))   \t// US: title firstname name \\n address lines \\n town, state, zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret?\", \":'').$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('GB','UK'))) // UK: title firstname name \\n address lines \\n town state \\n zip \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->town;\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t\tif ($object->zip) $ret .= ($ret ? $sep : '' ).$object->zip;\n\t}\n\telse if (in_array($object->country_code,array('ES','TR'))) // ES: title firstname name \\n address lines \\n zip town \\n state \\n country\n\t{\n\t\t$ret .= ($ret ? $sep : '' ).$object->zip;\n\t\t$ret .= ($object->town?(($object->zip?' ':'').$object->town):'');\n\t\tif ($object->state)\n\t\t{\n\t\t\t$ret.=\"\\n\".$object->state;\n\t\t}\n\t}\n\telse if (in_array($object->country_code,array('IT'))) // IT: tile firstname name\\n address lines \\n zip (Code Departement) \\n country\n\t{\n                $ret .= ($ret ? $sep : '' ).$object->zip;\n                $ret .= ($object->town?(($object->zip?' ':'').$object->town):'');\n                $ret .= ($object->departement_id?(' ('.($object->departement_id).')'):'');\n\t}\n\telse                                        \t\t// Other: title firstname name \\n address lines \\n zip town \\n country\n\t{\n\t\t$ret .= $object->zip ? (($ret ? $sep : '' ).$object->zip) : '';\n\t\t$ret .= ($object->town?(($object->zip?' ':($ret ? $sep : '' )).$object->town):'');\n\t\tif ($object->state && in_array($object->country_code,$countriesusingstate))\n\t\t{\n\t\t\t$ret.=($ret?\", \":'').$object->state;\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif ($withcountry) $ret.=($object->country_code?($ret?$sep:'').$outputlangs->convToOutputCharset($outputlangs->transnoentitiesnoconv(\"Country\".$object->country_code)):'');\n\n\treturn $ret;\n}\n\n\n\n/**\n *\tFormat a string.\n *\n *\t@param\tstring\t$fmt\t\tFormat of strftime function (http://php.net/manual/fr/function.strftime.php)\n *  @param\tint\t\t$ts\t\t\tTimesamp (If is_gmt is true, timestamp is already includes timezone and daylight saving offset, if is_gmt is false, timestamp is a GMT timestamp and we must compensate with server PHP TZ)\n *  @param\tint\t\t$is_gmt\t\tSee comment of timestamp parameter\n *\t@return\tstring\t\t\t\tA formatted string\n */\nfunction dol_strftime($fmt, $ts=false, $is_gmt=false)\n{\n\tif ((abs($ts) <= 0x7FFFFFFF)) { // check if number in 32-bit signed range\n\t\treturn ($is_gmt)? @gmstrftime($fmt,$ts): @strftime($fmt,$ts);\n\t}\n\telse return 'Error date into a not supported range';\n}\n\n/**\n *\tOutput date in a string format according to outputlangs (or langs if not defined).\n * \tReturn charset is always UTF-8, except if encodetoouput is defined. In this case charset is output charset\n *\n *\t@param\tint\t\t\t$time\t\t\tGM Timestamps date\n *\t@param\tstring\t\t$format      \tOutput date format (tag of strftime function)\n *\t\t\t\t\t\t\t\t\t\t\"%d %b %Y\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M\",\n *\t\t\t\t\t\t\t\t\t\t\"%d/%m/%Y %H:%M:%S\",\n *                                      \"%B\"=Long text of month, \"%A\"=Long text of day, \"%b\"=Short text of month, \"%a\"=Short text of day\n *\t\t\t\t\t\t\t\t\t\t\"day\", \"daytext\", \"dayhour\", \"dayhourldap\", \"dayhourtext\", \"dayrfc\", \"dayhourrfc\", \"...reduceformat\"\n * \t@param\tstring\t\t$tzoutput\t\ttrue or 'gmt' => string is for Greenwich location\n * \t\t\t\t\t\t\t\t\t\tfalse or 'tzserver' => output string is for local PHP server TZ usage\n * \t\t\t\t\t\t\t\t\t\t'tzuser' => output string is for user TZ (current browser TZ with current dst) => In a future, we should have same behaviour than 'tzuserrel'\n *                                      'tzuserrel' => output string is for user TZ (current browser TZ with dst or not, depending on date position) (TODO not implemented yet)\n *\t@param\tTranslate\t$outputlangs\tObject lang that contains language for text translation.\n *  @param  boolean\t\t$encodetooutput false=no convert into output pagecode\n * \t@return string      \t\t\t\tFormated date or '' if time is null\n *\n *  @see        dol_mktime, dol_stringtotime, dol_getdate\n */\nfunction dol_print_date($time,$format='',$tzoutput='tzserver',$outputlangs='',$encodetooutput=false)\n{\n\tglobal $conf,$langs;\n\n\t// Clean parameters\n\t$to_gmt=false;\n\t$offsettz=$offsetdst=0;\n\tif ($tzoutput)\n\t{\n\t\t$to_gmt=true;\t// For backward compatibility\n\t\tif (is_string($tzoutput))\n\t\t{\n\t\t\tif ($tzoutput == 'tzserver')\n\t\t\t{\n\t\t\t\t$to_gmt=false;\n\t\t\t\t$offsettzstring=@date_default_timezone_get();\t\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=0;\n\t\t\t\t$offsetdst=0;\n\t\t\t}\n\t\t\telseif ($tzoutput == 'tzuser' || $tzoutput == 'tzuserrel')\n\t\t\t{\n\t\t\t\t$to_gmt=true;\n\t\t\t\t$offsettzstring=(empty($_SESSION['dol_tz_string'])?'UTC':$_SESSION['dol_tz_string']);\t// Example 'Europe/Berlin' or 'Indian/Reunion'\n\t\t\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\t\t// Will not be used anymore\n\t\t\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\t// Will not be used anymore\n\t\t\t}\n\t\t}\n\t}\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\tif (! $format) $format='daytextshort';\n\t$reduceformat=(! empty($conf->dol_optimize_smallscreen) && in_array($format,array('day','dayhour')))?1:0;\n\t$formatwithoutreduce = preg_replace('/reduceformat/','',$format);\n\tif ($formatwithoutreduce != $format) { $format = $formatwithoutreduce; $reduceformat=1; }  // so format 'dayreduceformat' is processed like day\n\n\t// Change predefined format into computer format. If found translation in lang file we use it, otherwise we use default.\n\t// TODO Add format daysmallyear and dayhoursmallyear\n\tif ($format == 'day')\t\t\t\t$format=($outputlangs->trans(\"FormatDateShort\")!=\"FormatDateShort\"?$outputlangs->trans(\"FormatDateShort\"):$conf->format_date_short);\n\telse if ($format == 'hour')\t\t\t$format=($outputlangs->trans(\"FormatHourShort\")!=\"FormatHourShort\"?$outputlangs->trans(\"FormatHourShort\"):$conf->format_hour_short);\n\telse if ($format == 'hourduration')\t$format=($outputlangs->trans(\"FormatHourShortDuration\")!=\"FormatHourShortDuration\"?$outputlangs->trans(\"FormatHourShortDuration\"):$conf->format_hour_short_duration);\n\telse if ($format == 'daytext')\t\t\t $format=($outputlangs->trans(\"FormatDateText\")!=\"FormatDateText\"?$outputlangs->trans(\"FormatDateText\"):$conf->format_date_text);\n\telse if ($format == 'daytextshort')\t$format=($outputlangs->trans(\"FormatDateTextShort\")!=\"FormatDateTextShort\"?$outputlangs->trans(\"FormatDateTextShort\"):$conf->format_date_text_short);\n\telse if ($format == 'dayhour')\t\t\t $format=($outputlangs->trans(\"FormatDateHourShort\")!=\"FormatDateHourShort\"?$outputlangs->trans(\"FormatDateHourShort\"):$conf->format_date_hour_short);\n\telse if ($format == 'dayhoursec')\t\t $format=($outputlangs->trans(\"FormatDateHourSecShort\")!=\"FormatDateHourSecShort\"?$outputlangs->trans(\"FormatDateHourSecShort\"):$conf->format_date_hour_sec_short);\n\telse if ($format == 'dayhourtext')\t\t $format=($outputlangs->trans(\"FormatDateHourText\")!=\"FormatDateHourText\"?$outputlangs->trans(\"FormatDateHourText\"):$conf->format_date_hour_text);\n\telse if ($format == 'dayhourtextshort') $format=($outputlangs->trans(\"FormatDateHourTextShort\")!=\"FormatDateHourTextShort\"?$outputlangs->trans(\"FormatDateHourTextShort\"):$conf->format_date_hour_text_short);\n\t// Format not sensitive to language\n\telse if ($format == 'dayhourlog')\t\t $format='%Y%m%d%H%M%S';\n\telse if ($format == 'dayhourldap')\t\t $format='%Y%m%d%H%M%SZ';\n\telse if ($format == 'dayhourxcard')\t$format='%Y%m%dT%H%M%SZ';\n\telse if ($format == 'dayxcard')\t \t$format='%Y%m%d';\n\telse if ($format == 'dayrfc')\t\t\t $format='%Y-%m-%d';             // DATE_RFC3339\n\telse if ($format == 'dayhourrfc')\t\t $format='%Y-%m-%dT%H:%M:%SZ';   // DATETIME RFC3339\n\telse if ($format == 'standard')\t\t$format='%Y-%m-%d %H:%M:%S';\n\n\tif ($reduceformat)\n\t{\n\t\t$format=str_replace('%Y','%y',$format);\n\t\t$format=str_replace('yyyy','yy',$format);\n\t}\n\n\t// If date undefined or \"\", we return \"\"\n\tif (dol_strlen($time) == 0) return '';\t\t// $time=0 allowed (it means 01/01/1970 00:00:00)\n\n\t// Clean format\n\tif (preg_match('/%b/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%b','__b__',$format);\n\t\t$format=str_replace('%B','__B__',$format);\n\t}\n\tif (preg_match('/%a/i',$format))\t\t// There is some text to translate\n\t{\n\t\t// We inhibate translation to text made by strftime functions. We will use trans instead later.\n\t\t$format=str_replace('%a','__a__',$format);\n\t\t$format=str_replace('%A','__A__',$format);\n\t}\n\n\t// Analyze date\n\tif (preg_match('/^([0-9]+)\\-([0-9]+)\\-([0-9]+) ?([0-9]+)?:?([0-9]+)?:?([0-9]+)?/i',$time,$reg)\n\t|| preg_match('/^([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])([0-9][0-9])$/i',$time,$reg))\t// Deprecated. Ex: 1970-01-01, 1970-01-01 01:00:00, 19700101010000\n\t{\n\t\t// TODO Remove this.\n\t\t// This part of code should not be used.\n\t\tdol_syslog(\"Functions.lib::dol_print_date function call with deprecated value of time in page \".$_SERVER[\"PHP_SELF\"], LOG_ERR);\n\t\t// Date has format 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS' or 'YYYYMMDDHHMMSS'\n\t\t$syear\t= (! empty($reg[1]) ? $reg[1] : '');\n\t\t$smonth\t= (! empty($reg[2]) ? $reg[2] : '');\n\t\t$sday\t= (! empty($reg[3]) ? $reg[3] : '');\n\t\t$shour\t= (! empty($reg[4]) ? $reg[4] : '');\n\t\t$smin\t= (! empty($reg[5]) ? $reg[5] : '');\n\t\t$ssec\t= (! empty($reg[6]) ? $reg[6] : '');\n\n\t\t$time=dol_mktime($shour,$smin,$ssec,$smonth,$sday,$syear,true);\n\t\t$ret=adodb_strftime($format, $time+$offsettz+$offsetdst, $to_gmt);\n\t}\n\telse\n\t{\n\t\t// Date is a timestamps\n\t\tif ($time < 100000000000)\t// Protection against bad date values\n\t\t{\n\t\t\t$timetouse = $time+$offsettz+$offsetdst;\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t\t$ret=adodb_strftime($format, $timetouse, $to_gmt);\n\t\t}\n\t\telse $ret='Bad value '.$time.' for date';\n\t}\n\n\tif (preg_match('/__b__/i',$format))\n\t{\n\t\t$timetouse = $time+$offsettz+$offsetdst;\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t// Here ret is string in PHP setup language (strftime was used). Now we convert to $outputlangs.\n\t\t$month=adodb_strftime('%m', $timetouse);\n\t\t$month=sprintf(\"%02d\", $month);\t// $month may be return with format '06' on some installation and '6' on other, so we force it to '06'.\n\t\tif ($encodetooutput)\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentities('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentities('MonthShort'.$month);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$monthtext=$outputlangs->transnoentitiesnoconv('Month'.$month);\n\t\t\t$monthtextshort=$outputlangs->transnoentitiesnoconv('MonthShort'.$month);\n\t\t}\n\t\t//print 'monthtext='.$monthtext.' monthtextshort='.$monthtextshort;\n\t\t$ret=str_replace('__b__',$monthtextshort,$ret);\n\t\t$ret=str_replace('__B__',$monthtext,$ret);\n\t\t//print 'x'.$outputlangs->charset_output.'-'.$ret.'x';\n\t\t//return $ret;\n\t}\n\tif (preg_match('/__a__/i',$format))\n\t{\n\t\t$timetouse = $time+$offsettz+$offsetdst;\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\n\t\t$w=adodb_strftime('%w', $timetouse);\t\t\t\t\t\t// TODO Replace this with function Date PHP. We also should not use anymore offsettz and offsetdst but only offsettzstring.\n\t\t$dayweek=$outputlangs->transnoentitiesnoconv('Day'.$w);\n\t\t$ret=str_replace('__A__',$dayweek,$ret);\n\t\t$ret=str_replace('__a__',dol_substr($dayweek,0,3),$ret);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn an array with locale date info.\n *  PHP getdate is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *  WARNING: This function always use PHP server timezone to return locale informations !!!\n *  Usage must be avoid.\n *  FIXME: Replace this with PHP date function and a parameter $gm\n *\n *\t@param\tint\t\t\t$timestamp      Timestamp\n *\t@param\tboolean\t\t$fast           Fast mode\n *\t@return\tarray\t\t\t\t\t\tArray of informations\n *\t\t\t\t\t\t\t\t\t\tIf no fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'wday' => $dow,\t\t0=sunday, 6=saturday\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'weekday' => gmdate('l',$_day_power*(3+$dow)),\n *\t\t\t\t\t\t\t\t\t\t'month' => gmdate('F',mktime(0,0,0,$month,2,1971)),\n *\t\t\t\t\t\t\t\t\t\tIf fast mode:\n *\t\t\t\t\t\t\t\t\t\t'seconds' => $secs,\n *\t\t\t\t\t\t\t\t\t\t'minutes' => $min,\n *\t\t\t\t\t\t\t\t\t\t'hours' => $hour,\n *\t\t\t\t\t\t\t\t\t\t'mday' => $day,\n *\t\t\t\t\t\t\t\t\t\t'mon' => $month,\n *\t\t\t\t\t\t\t\t\t\t'year' => $year,\n *\t\t\t\t\t\t\t\t\t\t'yday' => floor($secsInYear/$_day_power),\n *\t\t\t\t\t\t\t\t\t\t'leap' => $leaf,\n *\t\t\t\t\t\t\t\t\t\t'ndays' => $ndays\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_mktime\n */\nfunction dol_getdate($timestamp,$fast=false)\n{\n\tglobal $conf;\n\n\t$usealternatemethod=false;\n\tif ($timestamp <= 0) $usealternatemethod=true;\t\t\t\t// <= 1970\n\tif ($timestamp >= 2145913200) $usealternatemethod=true;\t\t// >= 2038\n\n\tif ($usealternatemethod)\n\t{\n\t\t$arrayinfo=adodb_getdate($timestamp,$fast);\n\t}\n\telse\n\t{\n\t\t$arrayinfo=getdate($timestamp);\n\t}\n\n\treturn $arrayinfo;\n}\n\n/**\n *\tReturn a timestamp date built from detailed informations (by default a local PHP server timestamp)\n * \tReplace function mktime not available under Windows if year < 1970\n *\tPHP mktime is restricted to the years 1901-2038 on Unix and 1970-2038 on Windows\n *\n * \t@param\tint\t\t\t$hour\t\t\tHour\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$minute\t\t\tMinute\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$second\t\t\tSecond\t(can be -1 for undefined)\n *\t@param\tint\t\t\t$month\t\t\tMonth (1 to 12)\n *\t@param\tint\t\t\t$day\t\t\tDay (1 to 31)\n *\t@param\tint\t\t\t$year\t\t\tYear\n *\t@param\tmixed\t\t$gm\t\t\t\tTrue or 1 or 'gmt'=Input informations are GMT values\n *\t\t\t\t\t\t\t\t\t\tFalse or 0 or 'server' = local to server TZ\n *\t\t\t\t\t\t\t\t\t\t'user' = local to user TZ\n *\t\t\t\t\t\t\t\t\t\t'tz,TimeZone' = use specified timezone\n *\t@param\tint\t\t\t$check\t\t\t0=No check on parameters (Can use day 32, etc...)\n *\t@return\tint|string\t\t\t\t\tDate as a timestamp, '' or false if error\n * \t@see \t\t\t\t\t\t\t\tdol_print_date, dol_stringtotime, dol_getdate\n */\nfunction dol_mktime($hour,$minute,$second,$month,$day,$year,$gm=false,$check=1)\n{\n\tglobal $conf;\n\t//print \"- \".$hour.\",\".$minute.\",\".$second.\",\".$month.\",\".$day.\",\".$year.\",\".$_SERVER[\"WINDIR\"].\" -\";\n\n\t// Clean parameters\n\tif ($hour   == -1 || empty($hour)) $hour=0;\n\tif ($minute == -1 || empty($minute)) $minute=0;\n\tif ($second == -1 || empty($second)) $second=0;\n\n\t// Check parameters\n\tif ($check)\n\t{\n\t\tif (! $month || ! $day)  return '';\n\t\tif ($day   > 31) return '';\n\t\tif ($month > 12) return '';\n\t\tif ($hour  < 0 || $hour   > 24) return '';\n\t\tif ($minute< 0 || $minute > 60) return '';\n\t\tif ($second< 0 || $second > 60) return '';\n\t}\n\n\tif (method_exists('DateTime','getTimestamp'))\n\t{\n\t\tif (empty($gm) || $gm === 'server')\n\t\t{\n\t\t\t$default_timezone=@date_default_timezone_get();\t\t// Example 'Europe/Berlin'\n\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t}\n\t\telse if ($gm === 'user')\n\t\t{\n\t\t\t// We use dol_tz_string first because it is more reliable.\n\t\t\t$default_timezone=(empty($_SESSION[\"dol_tz_string\"])?@date_default_timezone_get():$_SESSION[\"dol_tz_string\"]);\t\t// Example 'Europe/Berlin'\n\t\t\ttry {\n\t\t\t\t$localtz = new DateTimeZone($default_timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning dol_tz_string contains an invalid value \".$_SESSION[\"dol_tz_string\"], LOG_WARNING);\n\t\t\t\t$default_timezone=@date_default_timezone_get();\n\t\t\t}\n\t\t}\n\t\telse if (strrpos($gm, \"tz,\") !== false)\n\t\t{\n\t\t\t$timezone=str_replace(\"tz,\", \"\", $gm);  // Example 'tz,Europe/Berlin'\n\t\t\ttry\n\t\t\t{\n\t\t\t\t$localtz = new DateTimeZone($timezone);\n\t\t\t}\n\t\t\tcatch(Exception $e)\n\t\t\t{\n\t\t\t\tdol_syslog(\"Warning passed timezone contains an invalid value \".$timezone, LOG_WARNING);\n\t\t\t}\n\t\t}\n\n\t\tif (empty($localtz)) {\n\t\t\t$localtz = new DateTimeZone('UTC');\n\t\t}\n\t\t//var_dump($localtz);\n\t\t//var_dump($year.'-'.$month.'-'.$day.'-'.$hour.'-'.$minute);\n\t\t$dt = new DateTime(null,$localtz);\n\t\t$dt->setDate($year,$month,$day);\n\t\t$dt->setTime((int) $hour, (int) $minute, (int) $second);\n\t\t$date=$dt->getTimestamp();\t// should include daylight saving time\n\t\t//var_dump($date);\n\t\treturn $date;\n\t}\n\telse\n\t{\n\t\tdol_print_error('','PHP version must be 5.3+');\n\t\treturn '';\n\t}\n}\n\n\n/**\n *\tReturn date for now. In most cases, we use this function without parameters (that means GMT time).\n *\n * \t@param\tstring\t\t$mode\t'gmt' => we return GMT timestamp,\n * \t\t\t\t\t\t\t\t'tzserver' => we add the PHP server timezone\n *  \t\t\t\t\t\t\t'tzref' => we add the company timezone\n * \t\t\t\t\t\t\t\t'tzuser' => we add the user timezone\n *\t@return int   $date\tTimestamp\n */\nfunction dol_now($mode='gmt')\n{\n\t$ret=0;\n\n\t// Note that gmmktime and mktime return same value (GMT) when used without parameters\n\t//if ($mode == 'gmt') $ret=gmmktime(); // Strict Standards: gmmktime(): You should be using the time() function instead\n\tif ($mode == 'gmt') $ret=time();\t// Time for now at greenwich.\n\telse if ($mode == 'tzserver')\t\t// Time for now with PHP server timezone added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getServerTimeZoneInt('now');    // Contains tz+dayling saving time\n\t\t$ret=(int) dol_now('gmt')+($tzsecond*3600);\n\t}\n\t/*else if ($mode == 'tzref')\t\t\t\t// Time for now with parent company timezone is added\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\t\t$tzsecond=getParentCompanyTimeZoneInt();    // Contains tz+dayling saving time\n\t\t$ret=dol_now('gmt')+($tzsecond*3600);\n\t}*/\n\telse if ($mode == 'tzuser')\t\t\t\t// Time for now with user timezone added\n\t{\n\t\t//print 'eeee'.time().'-'.mktime().'-'.gmmktime();\n\t\t$offsettz=(empty($_SESSION['dol_tz'])?0:$_SESSION['dol_tz'])*60*60;\n\t\t$offsetdst=(empty($_SESSION['dol_dst'])?0:$_SESSION['dol_dst'])*60*60;\n\t\t$ret=(int) dol_now('gmt')+($offsettz+$offsetdst);\n\t}\n\n\treturn $ret;\n}\n\n\n/**\n * Return string with formated size\n *\n * @param\tint\t\t$size\t\tSize to print\n * @param\tint\t\t$shortvalue\tTell if we want long value to use another unit (Ex: 1.5Kb instead of 1500b)\n * @param\tint\t\t$shortunit\tUse short value of size unit\n * @return\tstring\t\t\t\tLink\n */\nfunction dol_print_size($size,$shortvalue=0,$shortunit=0)\n{\n\tglobal $conf,$langs;\n\t$level=1024;\n\n\tif (! empty($conf->dol_optimize_smallscreen)) $shortunit=1;\n\n\t// Set value text\n\tif (empty($shortvalue) || $size < ($level*10))\n\t{\n\t\t$ret=$size;\n\t\t$textunitshort=$langs->trans(\"b\");\n\t\t$textunitlong=$langs->trans(\"Bytes\");\n\t}\n\telse\n\t{\n\t\t$ret=round($size/$level,0);\n\t\t$textunitshort=$langs->trans(\"Kb\");\n\t\t$textunitlong=$langs->trans(\"KiloBytes\");\n\t}\n\t// Use long or short text unit\n\tif (empty($shortunit)) { $ret.=' '.$textunitlong; }\n\telse { $ret.=' '.$textunitshort; }\n\n\treturn $ret;\n}\n\n/**\n * Show Url link\n *\n * @param\tstring\t\t$url\t\tUrl to show\n * @param\tstring\t\t$target\t\tTarget for link\n * @param\tint\t\t\t$max\t\tMax number of characters to show\n * @param\tint\t\t\t$withpicto\tWith picto\n * @return\tstring\t\t\t\t\tHTML Link\n */\nfunction dol_print_url($url,$target='_blank',$max=32,$withpicto=0)\n{\n\tglobal $langs;\n\n\tif (empty($url)) return '';\n\n\t$link='<a href=\"';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=$url;\n\t$link.='\"';\n\tif ($target) $link.=' target=\"'.$target.'\"';\n\t$link.='>';\n\tif (! preg_match('/^http/i',$url)) $link.='http://';\n\t$link.=dol_trunc($url,$max);\n\t$link.='</a>';\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"Url\"), 'object_globe.png').' ':'').$link.'</div>';\n}\n\n/**\n * Show EMail link\n *\n * @param\tstring\t\t$email\t\t\tEMail to show (only email, without 'Name of recipient' before)\n * @param \tint\t\t\t$cid \t\t\tId of contact if known\n * @param \tint\t\t\t$socid \t\t\tId of third party if known\n * @param \tint\t\t\t$addlink\t\t0=no link, 1=email has a html email link (+ link to create action if constant AGENDA_ADDACTIONFOREMAIL is on)\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @param\tint\t\t\t$showinvalid\tShow warning if syntax email is wrong\n * @param\tint\t\t\t$withpicto\t\tShow picto\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_email($email,$cid=0,$socid=0,$addlink=0,$max=64,$showinvalid=1,$withpicto=0)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newemail=$email;\n\n\tif (empty($email)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newemail='<a style=\"text-overflow: ellipsis;\" href=\"';\n\t\tif (! preg_match('/^mailto:/i',$email)) $newemail.='mailto:';\n\t\t$newemail.=$email;\n\t\t$newemail.='\">';\n\t\t$newemail.=dol_trunc($email,$max);\n\t\t$newemail.='</a>';\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_EMAIL'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFOREMAIL)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newemail='<div>'.$newemail.' '.$link.'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($showinvalid && ! isValidEmail($email))\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$newemail.=img_warning($langs->trans(\"ErrorBadEMail\",$email));\n\t\t}\n\t}\n\treturn '<div class=\"nospan float\" style=\"margin-right: 10px\">'.($withpicto?img_picto($langs->trans(\"EMail\"), 'object_email.png').' ':'').$newemail.'</div>';\n}\n\n/**\n * Show Skype link\n *\n * @param\tstring\t\t$skype\t\t\tSkype to show (only skype, without 'Name of recipient' before)\n * @param\tint \t\t$cid \t\t\tId of contact if known\n * @param\tint \t\t$socid \t\t\tId of third party if known\n * @param\tint \t\t$addlink\t\t0=no link to create action\n * @param\tint\t\t\t$max\t\t\tMax number of characters to show\n * @return\tstring\t\t\t\t\t\tHTML Link\n */\nfunction dol_print_skype($skype,$cid=0,$socid=0,$addlink=0,$max=64)\n{\n\tglobal $conf,$user,$langs;\n\n\t$newskype=$skype;\n\n\tif (empty($skype)) return '&nbsp;';\n\n\tif (! empty($addlink))\n\t{\n\t\t$newskype =img_picto($langs->trans(\"Skype\"), 'object_skype.png');\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.= '&nbsp;';\n\t\t$newskype.='<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?call\" alt=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Call\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_callbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>&nbsp;&nbsp;&nbsp;<a href=\"skype:';\n\t\t$newskype.=dol_trunc($skype,$max);\n\t\t$newskype.='?chat\" alt=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\" title=\"'.$langs->trans(\"Chat\").'&nbsp;'.$skype.'\">';\n\t\t$newskype.='<img src=\"'.DOL_URL_ROOT.'/theme/common/skype_chatbutton.png\" border=\"0\">';\n\t\t$newskype.='</a>';\n\n\t\tif (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_SKYPE'; $link='';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORSKYPE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.'&amp;contactid='.$cid.'&amp;socid='.$socid.'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\t$newskype='<div class=\"divskype nowrap\">'.$newskype.($link?' '.$link:'').'</div>';\n\t\t}\n\t}\n\telse\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$newskype.=img_warning($langs->trans(\"ErrorBadSkype\",$skype));\n\t}\n\treturn $newskype;\n}\n\n/**\n * \tFormat phone numbers according to country\n *\n * \t@param  string  $phone          Phone number to format\n * \t@param  string  $countrycode    Country code to use for formatting\n * \t@param \tint\t\t$cid \t\t    Id of contact if known\n * \t@param \tint\t\t$socid          Id of third party if known\n * \t@param \tstring\t$addlink\t    ''=no link to create action, 'AC_TEL'=add link to clicktodial (if module enabled) and add link to create event (if conf->global->AGENDA_ADDACTIONFORPHONE set)\n * \t@param \tstring\t$separ \t\t    Separation between numbers for a better visibility example : xx.xx.xx.xx.xx\n *  @param\tstring  $withpicto      Show picto\n *  @param\tstring\t$titlealt\t    Text to show on alt\n *  @param  int     $adddivfloat    Add div float around phone.\n * \t@return string \t\t\t\t    Formated phone number\n */\nfunction dol_print_phone($phone,$countrycode='',$cid=0,$socid=0,$addlink='',$separ=\"&nbsp;\",$withpicto='',$titlealt='',$adddivfloat=0)\n{\n\tglobal $conf,$user,$langs,$mysoc;\n\n\t// Clean phone parameter\n\t$phone = preg_replace(\"/[\\s.-]/\",\"\",trim($phone));\n\tif (empty($phone)) { return ''; }\n\tif (empty($countrycode)) $countrycode=$mysoc->country_code;\n\n\t// Short format for small screens\n\tif ($conf->dol_optimize_smallscreen) $separ='';\n\n\t$newphone=$phone;\n\tif (strtoupper($countrycode) == \"FR\")\n\t{\n\t\t// France\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,2).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 7)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 9)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,2).$separ.substr($newphone,2,3).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 11)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,3).$separ.substr($newphone,3,2).$separ.substr($newphone,5,2).$separ.substr($newphone,7,2).$separ.substr($newphone,9,2);\n\t\t}\n\t\telseif (dol_strlen($newphone) == 12)\n\t\t{\n\t\t\t$newphone=substr($newphone,0,4).$separ.substr($newphone,4,2).$separ.substr($newphone,6,2).$separ.substr($newphone,8,2).$separ.substr($newphone,10,2);\n\t\t}\n\t}\n\n\tif (strtoupper($countrycode) == \"CA\")\n\t{\n\t\tif (dol_strlen($phone) == 10) {\n\t\t\t$newphone=($separ!=''?'(':'').substr($newphone,0,3).($separ!=''?')':'').$separ.substr($newphone,3,3).($separ!=''?'-':'').substr($newphone,6,4);\n\t\t}\n\t}\n\n\tif (! empty($addlink))\t// Link on phone number (+ link to add action if conf->global->AGENDA_ADDACTIONFORPHONE set)\n\t{\n\t\tif (! empty($conf->browser->phone) || (! empty($conf->clicktodial->enabled) && ! empty($conf->global->CLICKTODIAL_USE_TEL_LINK_ON_PHONE_NUMBERS)))\t// If phone or option for, we use link of phone\n\t\t{\n\t\t\t$newphone ='<a href=\"tel:'.$phone.'\"';\n\t\t\t$newphone.='>'.$phone.'</a>';\n\t\t}\n\t\telse if (! empty($conf->clicktodial->enabled) && $addlink == 'AC_TEL')\t\t// If click to dial, we use click to dial url\n\t\t{\n\t\t\tif (empty($user->clicktodial_loaded)) $user->fetch_clicktodial();\n\n\t\t\t// Define urlmask\n\t\t\t$urlmask='ErrorClickToDialModuleNotConfigured';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_URL)) $urlmask=$conf->global->CLICKTODIAL_URL;\n\t\t\tif (! empty($user->clicktodial_url)) $urlmask=$user->clicktodial_url;\n\n\t\t\t$clicktodial_poste=(! empty($user->clicktodial_poste)?urlencode($user->clicktodial_poste):'');\n\t\t\t$clicktodial_login=(! empty($user->clicktodial_login)?urlencode($user->clicktodial_login):'');\n\t\t\t$clicktodial_password=(! empty($user->clicktodial_password)?urlencode($user->clicktodial_password):'');\n\t\t\t// This line is for backward compatibility\n\t\t\t$url = sprintf($urlmask, urlencode($phone), $clicktodial_poste, $clicktodial_login, $clicktodial_password);\n\t\t\t// Thoose lines are for substitution\n\t\t\t$substitarray=array('__PHONEFROM__'=>$clicktodial_poste,\n\t\t\t\t\t\t\t\t'__PHONETO__'=>urlencode($phone),\n\t\t\t\t\t\t\t\t'__LOGIN__'=>$clicktodial_login,\n\t\t\t\t\t\t\t\t'__PASS__'=>$clicktodial_password);\n\t\t\t$url = make_substitutions($url, $substitarray);\n\t\t\t$newphonesav=$newphone;\n\t\t\t$newphone ='<a href=\"'.$url.'\"';\n\t\t\tif (! empty($conf->global->CLICKTODIAL_FORCENEWTARGET)) $newphone.=' target=\"_blank\"';\n\t\t\t$newphone.='>'.$newphonesav.'</a>';\n\t\t}\n\n\t\t//if (($cid || $socid) && ! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\tif (! empty($conf->agenda->enabled) && $user->rights->agenda->myactions->create)\n\t\t{\n\t\t\t$type='AC_TEL'; $link='';\n\t\t\tif ($addlink == 'AC_FAX') $type='AC_FAX';\n\t\t\tif (! empty($conf->global->AGENDA_ADDACTIONFORPHONE)) $link='<a href=\"'.DOL_URL_ROOT.'/comm/action/card.php?action=create&amp;backtopage=1&amp;actioncode='.$type.($cid?'&amp;contactid='.$cid:'').($socid?'&amp;socid='.$socid:'').'\">'.img_object($langs->trans(\"AddAction\"),\"calendar\").'</a>';\n\t\t\tif ($link) $newphone='<div>'.$newphone.' '.$link.'</div>';\n\t\t}\n\t}\n\n\tif (empty($titlealt))\n\t{\n\t\t$titlealt=($withpicto=='fax'?$langs->trans(\"Fax\"):$langs->trans(\"Phone\"));\n\t}\n\t$rep='';\n\t$picto = '';\n\tif($withpicto){\n\t\tif($withpicto=='fax'){\n\t\t\t$picto = 'phoning_fax';\n\t\t}elseif($withpicto=='phone'){\n\t\t\t$picto = 'phoning';\n\t\t}elseif($withpicto=='mobile'){\n\t\t\t$picto = 'phoning_mobile';\n\t\t}else{\n\t\t\t$picto = '';\n\t\t}\n\t}\n\tif ($adddivfloat) $rep.='<div class=\"nospan float\" style=\"margin-right: 10px\">';\n\telse $rep.='<span style=\"margin-right: 10px;\">';\n\t$rep.=($withpicto?img_picto($titlealt, 'object_'.$picto.'.png').' ':'').$newphone;\n\tif ($adddivfloat) $rep.='</div>';\n\telse $rep.='</span>';\n\treturn $rep;\n}\n\n/**\n * \tReturn an IP formated to be shown on screen\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@param\tint\t\t$mode\t\t0=return IP + country/flag, 1=return only country/flag, 2=return only IP\n * \t@return string \t\t\t\tFormated IP, with country if GeoIP module is enabled\n */\nfunction dol_print_ip($ip,$mode=0)\n{\n\tglobal $conf,$langs;\n\n\t$ret='';\n\n\tif (empty($mode)) $ret.=$ip;\n\n\tif ($mode != 2)\n\t{\n\t\t$countrycode=dolGetCountryCodeFromIp($ip);\n\t\tif ($countrycode)\t// If success, countrycode is us, fr, ...\n\t\t{\n\t\t\tif (file_exists(DOL_DOCUMENT_ROOT.'/theme/common/flags/'.$countrycode.'.png'))\n\t\t\t{\n\t\t\t\t$ret.=' '.img_picto($countrycode.' '.$langs->trans(\"AccordingToGeoIPDatabase\"),DOL_URL_ROOT.'/theme/common/flags/'.$countrycode.'.png','',1);\n\t\t\t}\n\t\t\telse $ret.=' ('.$countrycode.')';\n\t\t}\n\t}\n\n\treturn $ret;\n}\n\n/**\n * \tReturn a country code from IP. Empty string if not found.\n *\n * \t@param\tstring\t$ip\t\t\tIP\n * \t@return string \t\t\t\tCountry code ('us', 'fr', ...)\n */\nfunction dolGetCountryCodeFromIp($ip)\n{\n\tglobal $conf;\n\n\t$countrycode='';\n\n\tif (! empty($conf->geoipmaxmind->enabled))\n\t{\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';    Note that this must be downloaded datafile (not same than datafile provided with ubuntu packages)\n\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t//print 'ip='.$ip.' databaseType='.$geoip->gi->databaseType.\" GEOIP_CITY_EDITION_REV1=\".GEOIP_CITY_EDITION_REV1.\"\\n\";\n\t\t//print \"geoip_country_id_by_addr=\".geoip_country_id_by_addr($geoip->gi,$ip).\"\\n\";\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t}\n\n\treturn $countrycode;\n}\n\n\n/**\n *  Return country code for current user.\n *  If software is used inside a local network, detection may fails (we need a public ip)\n *\n *  @return     string      Country code (fr, es, it, us, ...)\n */\nfunction dol_user_country()\n{\n\tglobal $conf,$langs,$user;\n\n\t//$ret=$user->xxx;\n\t$ret='';\n\tif (! empty($conf->geoipmaxmind->enabled))\n\t{\n\t\t$ip=$_SERVER[\"REMOTE_ADDR\"];\n\t\t$datafile=$conf->global->GEOIPMAXMIND_COUNTRY_DATAFILE;\n\t\t//$ip='24.24.24.24';\n\t\t//$datafile='E:\\Mes Sites\\Web\\Admin1\\awstats\\maxmind\\GeoIP.dat';\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/class/dolgeoip.class.php';\n\t\t$geoip=new DolGeoIP('country',$datafile);\n\t\t$countrycode=$geoip->getCountryCodeFromIP($ip);\n\t\t$ret=$countrycode;\n\t}\n\treturn $ret;\n}\n\n/**\n *  Format address string\n *\n *  @param\tstring\t$address    Address\n *  @param  int\t\t$htmlid     Html ID (for example 'gmap')\n *  @param  int\t\t$mode       thirdparty|contact|member|other\n *  @param  int\t\t$id         Id of object\n *  @param\tint\t\t$noprint\tNo output. Result is the function return\n *  @param  string  $charfornl  Char to use instead of nl2br. '' means we use a standad nl2br.\n *  @return string|void\t\t\tNothing if noprint is 0, formatted address if noprint is 1\n *  @see dol_format_address\n */\nfunction dol_print_address($address, $htmlid, $mode, $id, $noprint=0, $charfornl='')\n{\n\tglobal $conf, $user, $langs, $hookmanager;\n\n\t$out = '';\n\n\tif ($address)\n\t{\n\t\tif ($hookmanager) {\n\t\t\t$parameters = array('element' => $mode, 'id' => $id);\n\t\t\t$reshook = $hookmanager->executeHooks('printAddress', $parameters, $address);\n\t\t\t$out.=$hookmanager->resPrint;\n\t\t}\n\t\tif (empty($reshook))\n\t\t{\n\t\t\tif (empty($charfornl)) $out.=nl2br($address);\n\t\t\telse $out.=preg_replace('/[\\r\\n]+/', $charfornl, $address);\n\n\t\t\t$showgmap=$showomap=0;\n\n\t\t\t// TODO Add a hook here\n\t\t\tif (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS)) $showgmap=1;\n\t\t\tif ($mode=='contact' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_CONTACTS)) $showgmap=1;\n\t\t\tif ($mode=='member' && ! empty($conf->google->enabled) && ! empty($conf->global->GOOGLE_ENABLE_GMAPS_MEMBERS)) $showgmap=1;\n\t\t\tif (($mode=='thirdparty' || $mode =='societe') && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS)) $showomap=1;\n\t\t\tif ($mode=='contact' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_CONTACTS)) $showomap=1;\n\t\t\tif ($mode=='member' && ! empty($conf->openstreetmap->enabled) && ! empty($conf->global->OPENSTREETMAP_ENABLE_MAPS_MEMBERS)) $showomap=1;\n\n\t\t\tif ($showgmap)\n\t\t\t{\n\t\t\t\t$url=dol_buildpath('/google/gmaps.php?mode='.$mode.'&id='.$id,1);\n\t\t\t\t$out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t\tif ($showomap)\n\t\t\t{\n\t\t\t\t$url=dol_buildpath('/openstreetmap/maps.php?mode='.$mode.'&id='.$id,1);\n\t\t\t\t$out.=' <a href=\"'.$url.'\" target=\"_gmaps\"><img id=\"'.$htmlid.'_openstreetmap\" class=\"valigntextbottom\" src=\"'.DOL_URL_ROOT.'/theme/common/gmap.png\"></a>';\n\t\t\t}\n\t\t}\n\t}\n\tif ($noprint) return $out;\n\telse print $out;\n}\n\n\n/**\n *\tReturn true if email syntax is ok\n *\n *\t@param\t    string\t\t$address    \t\t\temail (Ex: \"toto@examle.com\", \"John Do <johndo@example.com>\")\n *  @param\t\tint\t\t\t$acceptsupervisorkey\tIf 1, the special string '__SUPERVISOREMAIL__' is also accepted as valid\n *\t@return     boolean     \t\t\t\t\t\ttrue if email syntax is OK, false if KO or empty string\n */\nfunction isValidEmail($address, $acceptsupervisorkey=0)\n{\n\tif ($acceptsupervisorkey && $address == '__SUPERVISOREMAIL__') return true;\n\tif (filter_var($address, FILTER_VALIDATE_EMAIL)) return true;\n\n\treturn false;\n}\n\n/**\n *  Return true if phone number syntax is ok\n *  TODO Decide what to do with this\n *\n *  @param\tstring\t\t$phone\t\tphone (Ex: \"0601010101\")\n *  @return boolean     \t\t\ttrue if phone syntax is OK, false if KO or empty string\n */\nfunction isValidPhone($phone)\n{\n\treturn true;\n}\n\n\n/**\n * Make a strlen call. Works even if mbstring module not enabled\n *\n * @param   string\t\t$string\t\t\t\tString to calculate length\n * @param   string\t\t$stringencoding\t\tEncoding of string\n * @return  int\t\t\t\t\t\t\t\tLength of string\n */\nfunction dol_strlen($string,$stringencoding='UTF-8')\n{\n\tif (function_exists('mb_strlen')) return mb_strlen($string,$stringencoding);\n\telse return strlen($string);\n}\n\n/**\n * Make a substring. Works even in mbstring module is not enabled.\n *\n * @param\tstring\t$string\t\t\t\tString to scan\n * @param\tstring\t$start\t\t\t\tStart position\n * @param\tint\t\t$length\t\t\t\tLength\n * @param   string\t$stringencoding\t\tPage code used for input string encoding\n * @return  string\t\t\t\t\t\tsubstring\n */\nfunction dol_substr($string,$start,$length,$stringencoding='')\n{\n\tglobal $langs;\n\n\tif (empty($stringencoding)) $stringencoding=$langs->charset_output;\n\n\t$ret='';\n\tif (function_exists('mb_substr'))\n\t{\n\t\t$ret=mb_substr($string,$start,$length,$stringencoding);\n\t}\n\telse\n\t{\n\t\t$ret=substr($string,$start,$length);\n\t}\n\treturn $ret;\n}\n\n\n/**\n *  Show a javascript graph.\n *  Do not use this function anymore. Use DolGraph class instead.\n *\n *  @param\t\tstring\t$htmlid\t\t\tHtml id name\n *  @param\t\tint\t\t$width\t\t\tWidth in pixel\n *  @param\t\tint\t\t$height\t\t\tHeight in pixel\n *  @param\t\tarray\t$data\t\t\tData array\n *  @param\t\tint\t\t$showlegend\t\t1 to show legend, 0 otherwise\n *  @param\t\tstring\t$type\t\t\tType of graph ('pie', 'barline')\n *  @param\t\tint\t\t$showpercent\tShow percent (with type='pie' only)\n *  @param\t\tstring\t$url\t\t\tParam to add an url to click values\n *  @param\t\tint\t\t$combineother\t0=No combine, 0.05=Combine if lower than 5%\n *  @param      int     $shownographyet Show graph to say there is not enough data\n *  @return\t\tvoid\n *  @deprecated\n *  @see DolGraph\n */\nfunction dol_print_graph($htmlid,$width,$height,$data,$showlegend=0,$type='pie',$showpercent=0,$url='',$combineother=0.05,$shownographyet=0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\tglobal $theme_datacolor;    // To have var kept when function is called several times\n\n\tif ($shownographyet)\n\t{\n\t\tprint '<div class=\"nographyet\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\t\tprint '<div class=\"nographyettext\">'.$langs->trans(\"NotEnoughDataYet\").'</div>';\n\t\treturn;\n\t}\n\n\tif (empty($conf->use_javascript_ajax)) return;\n\t$jsgraphlib='flot';\n\t$datacolor=array();\n\n\t// Load colors of theme into $datacolor array\n\t$color_file = DOL_DOCUMENT_ROOT.\"/theme/\".$conf->theme.\"/graph-color.php\";\n\tif (is_readable($color_file))\n\t{\n\t\tinclude_once $color_file;\n\t\tif (isset($theme_datacolor))\n\t\t{\n\t\t\t$datacolor=array();\n\t\t\tforeach($theme_datacolor as $val)\n\t\t\t{\n\t\t\t\t$datacolor[]=\"#\".sprintf(\"%02x\",$val[0]).sprintf(\"%02x\",$val[1]).sprintf(\"%02x\",$val[2]);\n\t\t\t}\n\t\t}\n\t}\n\tprint '<div id=\"'.$htmlid.'\" style=\"width:'.$width.'px;height:'.$height.'px;\"></div>';\n\n\t// We use Flot js lib\n\tif ($jsgraphlib == 'flot')\n\t{\n\t\tif ($type == 'pie')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>val)\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = '.json_encode($data['series']).';\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot($(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tpie: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tradius: 0.8,';\n\t\t\tif ($combineother)\n\t\t\t{\n\t\t\t\tprint '\n\t\t\t\t\t\t\t\tcombine: {\n\t\t\t\t\t\t\t\t \tthreshold: '.$combineother.'\n\t\t\t\t\t\t\t\t},';\n\t\t\t}\n\t\t\tprint '\n\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\t\tradius: 0.9,\n\t\t\t\t\t\t\t\t\tformatter: function(label, series) {\n\t\t\t\t\t\t\t\t\t\tvar percent=Math.round(series.percent);\n\t\t\t\t\t\t\t\t\t\tvar number=series.data[0][1];\n\t\t\t\t\t\t\t\t\t\treturn \\'';\n\t\t\t\t\t\t\t\t\t\tprint '<div style=\"font-size:8pt;text-align:center;padding:2px;color:black;\">';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '<a style=\"color: #FFFFFF;\" border=\"0\" href=\"'.$url.'\">';\n\t\t\t\t\t\t\t\t\t\tprint '\\'+'.($showlegend?'number':'label+\\' \\'+number');\n\t\t\t\t\t\t\t\t\t\tif (! empty($showpercent)) print '+\\'<br/>\\'+percent+\\'%\\'';\n\t\t\t\t\t\t\t\t\t\tprint '+\\'';\n\t\t\t\t\t\t\t\t\t\tif ($url) print '</a>';\n\t\t\t\t\t\t\t\t\t\tprint '</div>\\';\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbackground: {\n\t\t\t\t\t\t\t\t\t\topacity: 0.0,\n\t\t\t\t\t\t\t\t\t\tcolor: \\'#000000\\'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.(! empty($data['seriescolor']) ? json_encode($data['seriescolor']) : json_encode($datacolor)).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').', position: \\'ne\\' }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse if ($type == 'barline')\n\t\t{\n\t\t\t// data is   array('series'=>array(serie1,serie2,...),\n\t\t\t//                 'seriestype'=>array('bar','line',...),\n\t\t\t//                 'seriescolor'=>array(0=>'#999999',1=>'#999999',...)\n\t\t\t//                 'xlabel'=>array(0=>labelx1,1=>labelx2,...));\n\t\t\t// serieX is array('label'=>'label', data=>array(0=>y1,1=>y2,...)) with same nb of value than into xlabel\n\t\t\tprint '\n\t\t\t<script type=\"text/javascript\">\n\t\t\t$(function () {\n\t\t\t\tvar data = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif ($data['seriestype'][$i]=='line') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ bars: { stack: 0, show: true, barWidth: 0.9, align: \\'center\\' }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tif ($outputserie) print ', ';\n\t\t\t\t//print '];\n\t\t\t\t//var datalines = [';\n\t\t\t\t$i=0; $outputserie=0;\n\t\t\t\tforeach($data['series'] as $serie)\n\t\t\t\t{\n\t\t\t\t\tif (empty($data['seriestype'][$i]) || $data['seriestype'][$i]=='bar') { $i++; continue; };\n\t\t\t\t\tif ($outputserie > 0) print ',';\n\t\t\t\t\tprint '{ lines: { show: true }, label: \\''.dol_escape_js($serie['label']).'\\', data: '.json_encode($serie['data']).'}'.\"\\n\";\n\t\t\t\t\t$outputserie++; $i++;\n\t\t\t\t}\n\t\t\t\tprint '];\n\t\t\t\tvar dataticks = '.json_encode($data['xlabel']).'\n\n\t\t\t\tfunction plotWithOptions() {\n\t\t\t\t\t$.plot(jQuery(\"#'.$htmlid.'\"), data,\n\t\t\t\t\t{\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tstack: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tzoom: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpan: {\n\t\t\t\t\t\t\tinteractive: true\n\t\t\t\t\t\t},';\n\t\t\t\t\t\tif (count($datacolor))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprint 'colors: '.json_encode($datacolor).',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint 'legend: {show: '.($showlegend?'true':'false').'},\n\t\t\t\t\t\txaxis: {ticks: dataticks}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tplotWithOptions();\n\t\t\t});\n\t\t\t</script>';\n\t\t}\n\t\telse print 'BadValueForParameterType';\n\t}\n}\n\n/**\n *\tTruncate a string to a particular length adding '...' if string larger than length.\n * \tIf length = max length+1, we do no truncate to avoid having just 1 char replaced with '...'.\n *  MAIN_DISABLE_TRUNC=1 can disable all truncings\n *\n *\t@param\tstring\t$string\t\t\t\tString to truncate\n *\t@param  int\t\t$size\t\t\t\tMax string size visible (excluding ...). 0 for no limit. WARNING: Final string size can have 3 more chars (if we added ..., or if size was max+1 or max+2 or max+3 so it does not worse to replace with ...)\n *\t@param\tstring\t$trunc\t\t\t\tWhere to trunc: right, left, middle (size must be a 2 power), wrap\n * \t@param\tstring\t$stringencoding\t\tTell what is source string encoding\n *  @param\tint\t\t$nodot\t\t\t\tTruncation do not add ... after truncation. So it's an exact truncation.\n *  @param  int     $display            Trunc is use to display and can be changed for small screen. TODO Remove this param (must be dealt with CSS)\n *\t@return string\t\t\t\t\t\tTruncated string. WARNING: length is never higher than $size if $nodot is set, but can be 3 chars higher otherwise.\n */\nfunction dol_trunc($string,$size=40,$trunc='right',$stringencoding='UTF-8',$nodot=0, $display=0)\n{\n\tglobal $conf;\n\n\tif ($size==0 || ! empty($conf->global->MAIN_DISABLE_TRUNC)) return $string;\n\n\tif (empty($stringencoding)) $stringencoding='UTF-8';\n\t// reduce for small screen\n\tif ($conf->dol_optimize_smallscreen==1 && $display==1) $size = round($size/3);\n\n\t// We go always here\n\tif ($trunc == 'right')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).($nodot?'':'...');\n\t\telse\n\t\t//return 'u'.$size.'-'.$newstring.'-'.dol_strlen($newstring,$stringencoding).'-'.$string;\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'middle')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > 2 && dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\t{\n\t\t\t$size1=round($size/2);\n\t\t\t$size2=round($size/2);\n\t\t\treturn dol_substr($newstring,0,$size1,$stringencoding).'...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size2,$size2,$stringencoding);\n\t\t}\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'left')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+($nodot?0:3)))    // If nodot is 0 and size is 1,2 or 3 chars more, we don't trunc and don't add ...\n\t\treturn '...'.dol_substr($newstring,dol_strlen($newstring,$stringencoding) - $size,$size,$stringencoding);\n\t\telse\n\t\treturn $string;\n\t}\n\telseif ($trunc == 'wrap')\n\t{\n\t\t$newstring=dol_textishtml($string)?dol_string_nohtmltag($string,1):$string;\n\t\tif (dol_strlen($newstring,$stringencoding) > ($size+1))\n\t\treturn dol_substr($newstring,0,$size,$stringencoding).\"\\n\".dol_trunc(dol_substr($newstring,$size,dol_strlen($newstring,$stringencoding)-$size,$stringencoding),$size,$trunc);\n\t\telse\n\t\treturn $string;\n\t}\n\telse return 'BadParam3CallingDolTrunc';\n}\n\n/**\n *\tShow picto whatever it's its name (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on title tag for tooltip. Not used if param notitle is set to 1.\n *\t@param      string\t\t$picto       \t\tName of image file to show ('filenew', ...)\n *\t\t\t\t\t\t\t\t\t\t\t\tIf no extension provided, we use '.png'. Image must be stored into theme/xxx/img directory.\n *                                  \t\t\tExample: picto.png                  if picto.png is stored into htdocs/theme/mytheme/img\n *                                  \t\t\tExample: picto.png@mymodule         if picto.png is stored into htdocs/mymodule/img\n *                                  \t\t\tExample: /mydir/mysubdir/picto.png  if picto.png is stored into htdocs/mydir/mysubdir (pictoisfullpath must be set to 1)\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\t\tint\t\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\t\tint\t\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *  @param\t\tstring\t\t$alt\t\t\t\tForce alt for bind peoplae\n *  @param\t\tstring\t\t$morecss\t\t\tAdd more class css on img tag (For example 'myclascss')\n *  @return     string       \t\t\t\t    Return img tag\n *  @see        #img_object, #img_picto_common\n */\nfunction img_picto($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0, $alt='', $morecss='')\n{\n\tglobal $conf, $langs;\n\n\t// Define fullpathpicto to use into src\n\tif ($pictoisfullpath)\n\t{\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t$fullpathpicto = $picto;\n\t}\n\telse\n\t{\n\t\t//if (in_array($picto, array('switch_off', 'switch_on', 'off', 'on')))\n\t\tif (in_array($picto, array('switch_off', 'switch_on', 'off', 'on')))\n\t\t{\n\t\t\t$fakey = $picto; $facolor=''; $fasize='';\n\t\t\tif ($picto == 'switch_off') { $fakey = 'fa-toggle-off'; $facolor='#999';    $fasize='2em'; }\n\t\t\tif ($picto == 'switch_on')  { $fakey = 'fa-toggle-on';  $facolor='#227722'; $fasize='2em'; }\n\t\t\tif ($picto == 'off') { $fakey = 'fa-square-o'; $fasize='1.3em'; }\n\t\t\tif ($picto == 'on')  { $fakey = 'fa-check-square-o'; $fasize='1.3em'; }\n\t\t\t$enabledisablehtml='';\n\t\t\t$enabledisablehtml.='<span class=\"fa '.$fakey.' valignmiddle'.($morecss?' '.$morecss:'').'\" style=\"'.($fasize?('font-size: '.$fasize.';'):'').($facolor?(' color: '.$facolor.';'):'').'\" alt=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\"'.($moreatt?' '.$moreatt:'').'\">';\n\t\t\tif (! empty($conf->global->MAIN_OPTIMIZEFORTEXTBROWSER)) $enabledisablehtml.=$titlealt;\n\t\t\t$enabledisablehtml.='</span>';\n\t\t\treturn $enabledisablehtml;\n\t\t}\n\n\t\t// We forge fullpathpicto for image to $path/img/$picto. By default, we take DOL_URL_ROOT/theme/$conf->theme/img/$picto\n\t\t$url = DOL_URL_ROOT;\n\t\t$theme = $conf->theme;\n\n\t\t$path = 'theme/'.$theme;\n\t\tif (! empty($conf->global->MAIN_OVERWRITE_THEME_PATH)) $path = $conf->global->MAIN_OVERWRITE_THEME_PATH.'/theme/'.$theme;\t// If the theme does not have the same name as the module\n\t\telse if (! empty($conf->global->MAIN_OVERWRITE_THEME_RES)) $path = $conf->global->MAIN_OVERWRITE_THEME_RES.'/theme/'.$conf->global->MAIN_OVERWRITE_THEME_RES;  // To allow an external module to overwrite image resources whatever is activated theme\n\t\telse if (! empty($conf->modules_parts['theme']) && array_key_exists($theme, $conf->modules_parts['theme'])) $path = $theme.'/theme/'.$theme;\t// If the theme have the same name as the module\n\n\t\t// If we ask an image into $url/$mymodule/img (instead of default path)\n\t\tif (preg_match('/^([^@]+)@([^@]+)$/i',$picto,$regs))\n\t\t{\n\t\t\t$picto = $regs[1];\n\t\t\t$path = $regs[2];\t// $path is $mymodule\n\t\t}\n\n\t\t// Clean parameters\n\t\tif (! preg_match('/(\\.png|\\.gif|\\.svg)$/i',$picto)) $picto .= '.png';\n\t\t// If alt path are defined, define url where img file is, according to physical path\n\t\tforeach ($conf->file->dol_document_root as $type => $dirroot)\t// ex: array([\"main\"]=>\"/home/maindir/htdocs\", [\"alt0\"]=>\"/home/moddir0/htdocs\", ...)\n\t\t{\n\t\t\tif ($type == 'main') continue;\n\t\t\tif (file_exists($dirroot.'/'.$path.'/img/'.$picto))\t// This need a lot of time, that's why enabling alternative dir like \"custom\" dir is not recommanded\n\t\t\t{\n\t\t\t\t$url=DOL_URL_ROOT.$conf->file->dol_url_root[$type];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// $url is '' or '/custom', $path is current theme or\n\t\t$fullpathpicto = $url.'/'.$path.'/img/'.$picto;\n\t}\n\n\tif ($srconly) return $fullpathpicto;\n\telse\n\t{\n\t\t// tag title is used for tooltip on <a>, tag alt can be used with very simple text on image for bind people\n\t\t//$tmparray=array(0=>$titlealt);\n\t\t//if (empty($notitle) && preg_match('/:[^\\s0-9]/',$titlealt)) $tmparray=explode(':',$titlealt);\t\t// We explode if we have TextA:TextB. Not if we have TextA: TextB\n\t\t//$title=$tmparray[0];\n\t\t//$alt=empty($tmparray[1])?'':$tmparray[1];\n\t\t$title=$titlealt;\n\t\treturn '<img src=\"'.$fullpathpicto.'\" alt=\"'.dol_escape_htmltag($alt).'\"'.(($notitle || empty($title))?'':' title=\"'.dol_escape_htmltag($title).'\"').($moreatt?' '.$moreatt:' class=\"inline-block\"').'>';\t// Alt is used for accessibility, title for popup\n\t}\n}\n\n/**\n *\tShow a picto called object_picto (generic function)\n *\n *\t@param\tstring\t$titlealt\t\t\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$picto\t\t\t\tName of image to show object_picto (example: user, group, action, bill, contract, propal, product, ...)\n *\t\t\t\t\t\t\t\t\t\tFor external modules use imagename@mymodule to search into directory \"img\" of module.\n *\t@param\tstring\t$moreatt\t\t\tAdd more attribute on img tag (ie: class=\"datecallink\")\n *\t@param\tint\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@param\tint\t\t$srconly\t\t\tReturn only content of the src attribute of img.\n *  @param\tint\t\t$notitle\t\t\t1=Disable tag title. Use it if you add js tooltip, to avoid duplicate tooltip.\n *\t@return\tstring\t\t\t\t\t\tReturn img tag\n *\t@see\t#img_picto, #img_picto_common\n */\nfunction img_object($titlealt, $picto, $moreatt = '', $pictoisfullpath = false, $srconly=0, $notitle=0)\n{\n\treturn img_picto($titlealt, 'object_'.$picto, $moreatt, $pictoisfullpath, $srconly, $notitle);\n}\n\n/**\n *\tShow weather picto\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_weather($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\t$path = DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/weather/'.$picto;\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow picto (generic function)\n *\n *\t@param      string\t\t$titlealt         \tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param      string\t\t$picto       \t\tName of image file to show (If no extension provided, we use '.png'). Image must be stored into htdocs/theme/common directory.\n *\t@param\t\tstring\t\t$moreatt\t\t\tAdd more attribute on img tag\n *\t@param\t\tint\t\t\t$pictoisfullpath\tIf 1, image path is a full path\n *\t@return     string      \t\t\t\t\tReturn img tag\n *  @see        #img_object, #img_picto\n */\nfunction img_picto_common($titlealt, $picto, $moreatt = '', $pictoisfullpath = 0)\n{\n\tglobal $conf;\n\n\tif (! preg_match('/(\\.png|\\.gif)$/i', $picto)) $picto .= '.png';\n\n\tif ($pictoisfullpath) $path = $picto;\n\telse\n\t{\n\t\t$path = DOL_URL_ROOT.'/theme/common/'.$picto;\n\n\t\tif (! empty($conf->global->MAIN_MODULE_CAN_OVERWRITE_COMMONICONS))\n\t\t{\n\t\t\t$themepath = DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/'.$picto;\n\n\t\t\tif (file_exists($themepath)) $path = $themepath;\n\t\t}\n\t}\n\n\treturn img_picto($titlealt, $path, $moreatt, 1);\n}\n\n/**\n *\tShow logo action\n *\n *\t@param\tstring\t\t$titlealt       Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t\t$numaction   \tAction id or code to show\n *\t@return string      \t\t\t\tReturn an img tag\n */\nfunction img_action($titlealt, $numaction)\n{\n\tglobal $conf, $langs;\n\n\tif (empty($titlealt) || $titlealt == 'default')\n\t{\n\t\tif ($numaction == '-1' || $numaction == 'ST_NO')\t\t\t{ $numaction = -1; $titlealt = $langs->transnoentitiesnoconv('ChangeDoNotContact'); }\n\t\telseif ($numaction ==  '0' || $numaction == 'ST_NEVER') \t{ $numaction = 0; $titlealt = $langs->transnoentitiesnoconv('ChangeNeverContacted'); }\n\t\telseif ($numaction ==  '1' || $numaction == 'ST_TODO')  \t{ $numaction = 1; $titlealt = $langs->transnoentitiesnoconv('ChangeToContact'); }\n\t\telseif ($numaction ==  '2' || $numaction == 'ST_PEND')  \t{ $numaction = 2; $titlealt = $langs->transnoentitiesnoconv('ChangeContactInProcess'); }\n\t\telseif ($numaction ==  '3' || $numaction == 'ST_DONE')  \t{ $numaction = 3; $titlealt = $langs->transnoentitiesnoconv('ChangeContactDone'); }\n\t\telse { $titlealt = $langs->transnoentitiesnoconv('ChangeStatus '.$numaction); $numaction = 0; }\n\t}\n\tif (! is_numeric($numaction)) $numaction=0;\n\n\treturn img_picto($titlealt, 'stcomm'.$numaction.'.png');\n}\n\n/**\n *  Show pdf logo\n *\n *  @param\tstring\t\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  int\t\t    $size       Taille de l'icone : 3 = 16x16px , 2 = 14x14px\n *  @return string      \t\t\tRetourne tag img\n */\nfunction img_pdf($titlealt = 'default', $size = 3)\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Show');\n\n\treturn img_picto($titlealt, 'pdf'.$size.'.png');\n}\n\n/**\n *\tShow logo +\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_add($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Add');\n\n\treturn img_picto($titlealt, 'edit_add.png', $other);\n}\n/**\n *\tShow logo -\n *\n *\t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit_remove($titlealt = 'default', $other='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Remove');\n\n\treturn img_picto($titlealt, 'edit_remove.png', $other);\n}\n\n/**\n *\tShow logo editer/modifier fiche\n *\n *\t@param  string\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_edit($titlealt = 'default', $float = 0, $other = 'class=\"pictoedit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Modify');\n\n\treturn img_picto($titlealt, 'edit.png', ($float ? 'style=\"float: '.($langs->tab_translate[\"DIRECTION\"] == 'rtl'?'left':'right').'\"' : \"\") . ($other?' '.$other:''));\n}\n\n/**\n *\tShow logo view card\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  integer\t$float      Si il faut y mettre le style \"float: right\"\n *\t@param  string\t$other\t\tAdd more attributes on img\n *\t@return string      \t\tReturn tag img\n */\nfunction img_view($titlealt = 'default', $float = 0, $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('View');\n\n\t$moreatt = ($float ? 'style=\"float: right\" ' : '').$other;\n\n\treturn img_picto($titlealt, 'view.png', $moreatt);\n}\n\n/**\n *  Show delete logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_delete($titlealt = 'default', $other = 'class=\"pictodelete\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Delete');\n\n\treturn img_picto($titlealt, 'delete.png', $other);\n}\n\n/**\n *  Show printer logo\n *\n *  @param  string  $titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param  string  $other      Add more attributes on img\n *  @return string              Retourne tag img\n */\nfunction img_printer($titlealt = \"default\", $other='')\n{\n\tglobal $conf,$langs;\n\tif ($titlealt==\"default\") $titlealt=$langs->trans(\"Print\");\n\treturn img_picto($titlealt,'printer.png',$other);\n}\n\n/**\n *  Show split logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_split($titlealt = 'default', $other = 'class=\"pictosplit\"')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Split');\n\n\treturn img_picto($titlealt, 'split.png', $other);\n}\n\n/**\n *\tShow help logo with cursor \"?\"\n *\n * \t@param\tint              \t$usehelpcursor\t\t1=Use help cursor, 2=Use click pointer cursor, 0=No specific cursor\n * \t@param\tint|string\t        $usealttitle\t\tText to use as alt title\n * \t@return string            \t           \t\t\tReturn tag img\n */\nfunction img_help($usehelpcursor = 1, $usealttitle = 1)\n{\n\tglobal $conf, $langs;\n\n\tif ($usealttitle)\n\t{\n\t\tif (is_string($usealttitle)) $usealttitle = dol_escape_htmltag($usealttitle);\n\t\telse $usealttitle = $langs->trans('Info');\n\t}\n\n\treturn img_picto($usealttitle, 'info.png', 'style=\"vertical-align: middle;'.($usehelpcursor == 1 ? ' cursor: help': ($usehelpcursor == 2 ? ' cursor: pointer':'')).'\"');\n}\n\n/**\n *\tShow info logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_info($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Informations');\n\n\treturn img_picto($titlealt, 'info.png', 'style=\"vertical-align: middle;\"');\n}\n\n/**\n *\tShow warning logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"'). If 1, add float: right. Can't be \"class\" attribute.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_warning($titlealt = 'default', $moreatt = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Warning');\n\n\t//return '<div class=\"imglatecoin\">'.img_picto($titlealt, 'warning_white.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): '')).'</div>';\n\treturn img_picto($titlealt, 'warning.png', 'class=\"pictowarning valignmiddle\"'.($moreatt ? ($moreatt == '1' ? ' style=\"float: right\"' : ' '.$moreatt): ''));\n}\n\n/**\n *  Show error logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_error($titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Error');\n\n\treturn img_picto($titlealt, 'error.png', 'class=\"valigntextbottom\"');\n}\n\n/**\n *\tShow next logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n*\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_next($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Next');\n\n\t//return img_picto($titlealt, 'next.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-right paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow previous logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_previous($titlealt = 'default', $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Previous');\n\n\t//return img_picto($titlealt, 'previous.png', $moreatt);\n\treturn '<span class=\"fa fa-chevron-left paddingright paddingleft\" title=\"'.dol_escape_htmltag($titlealt).'\"></span>';\n}\n\n/**\n *\tShow down arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected   Selected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_down($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Down');\n\n\treturn img_picto($titlealt, ($selected ? '1downarrow_selected.png' : '1downarrow.png'), 'class=\"imgdown'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow top arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *  @param\tstring\t$moreclass\tAdd more CSS classes\n *\t@return string      \t\tReturn img tag\n */\nfunction img_up($titlealt = 'default', $selected = 0, $moreclass='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Up');\n\n\treturn img_picto($titlealt, ($selected ? '1uparrow_selected.png' : '1uparrow.png'), 'class=\"imgup'.($moreclass?\" \".$moreclass:\"\").'\"');\n}\n\n/**\n *\tShow left arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_left($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Left');\n\n\treturn img_picto($titlealt, ($selected ? '1leftarrow_selected.png' : '1leftarrow.png'), $moreatt);\n}\n\n/**\n *\tShow right arrow logo\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$selected\tSelected\n *\t@param\tstring\t$moreatt\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n *\t@return string      \t\tReturn img tag\n */\nfunction img_right($titlealt = 'default', $selected = 0, $moreatt='')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Right');\n\n\treturn img_picto($titlealt, ($selected ? '1rightarrow_selected.png' : '1rightarrow.png'), $moreatt);\n}\n\n/**\n *\tShow tick logo if allowed\n *\n *\t@param\tstring\t$allow\t\tAllow\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@return string      \t\tReturn img tag\n */\nfunction img_allow($allow, $titlealt = 'default')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Active');\n\n\tif ($allow == 1) return img_picto($titlealt, 'tick.png');\n\n\treturn '-';\n}\n\n\n/**\n *\tShow MIME img of a file\n *\n *\t@param\tstring\t$file\t\tFilename\n * \t@param\tstring\t$titlealt\tText on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *  @param\tstring\t$morecss\tMore css\n *\t@return string     \t\t\tReturn img tag\n */\nfunction img_mime($file, $titlealt = '', $morecss='')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t$mimetype = dol_mimetype($file, '', 1);\n\t$mimeimg = dol_mimetype($file, '', 2);\n\t$mimefa = dol_mimetype($file, '', 4);\n\n\tif (empty($titlealt)) $titlealt = 'Mime type: '.$mimetype;\n\n\t//return img_picto_common($titlealt, 'mime/'.$mimeimg, 'class=\"'.$morecss.'\"');\n\treturn '<i class=\"fa fa-'.$mimefa.' paddingright\"></i>';\n}\n\n\n/**\n *\tShow phone logo.\n *  Use img_picto instead.\n *\n *\t@param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  int\t\t$option\t\tOption\n *\t@return string      \t\tReturn img tag\n *  @deprecated\n *  @see img_picto\n */\nfunction img_phone($titlealt = 'default', $option = 0)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tglobal $conf,$langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Call');\n\n\tif ($option == 1) $img = 'call';\n\telse $img = 'call_out';\n\n\treturn img_picto($titlealt, $img);\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_search($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'search.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_search\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *  Show search logo\n *\n *  @param\tstring\t$titlealt   Text on alt and title of image. Alt only if param notitle is set to 1. If text is \"TextA:TextB\", use Text A on alt and Text B on title.\n *\t@param  string\t$other      Add more attributes on img\n *  @return string      \t\tRetourne tag img\n */\nfunction img_searchclear($titlealt = 'default', $other = '')\n{\n\tglobal $conf, $langs;\n\n\tif ($titlealt == 'default') $titlealt = $langs->trans('Search');\n\n\t$img = img_picto($titlealt, 'searchclear.png', $other, false, 1);\n\n\t$input = '<input type=\"image\" class=\"liste_titre\" name=\"button_removefilter\" src=\"'.$img.'\" ';\n\t$input.= 'value=\"'.dol_escape_htmltag($titlealt).'\" title=\"'.dol_escape_htmltag($titlealt).'\" >';\n\n\treturn $input;\n}\n\n/**\n *\tShow information for admin users or standard users\n *\n *\t@param\tstring\t$text\t\t\tText info\n *\t@param  integer\t$infoonimgalt\tInfo is shown only on alt of star picto, otherwise it is show on output after the star picto\n *\t@param\tint\t\t$nodiv\t\t\tNo div\n *  @param  string  $admin          '1'=Info for admin users. '0'=Info for standard users (change only the look), 'xxx'=Other\n *  @param\tstring\t$morecss\t\tMore CSS\n *\t@return\tstring\t\t\t\t\tString with info text\n */\nfunction info_admin($text, $infoonimgalt = 0, $nodiv=0, $admin='1', $morecss='')\n{\n\tglobal $conf, $langs;\n\n\tif ($infoonimgalt)\n\t{\n\t\treturn img_picto($text, 'info', 'class=\"hideonsmartphone'.($morecss?' '.$morecss:'').'\"');\n\t}\n\n\treturn ($nodiv?'':'<div class=\"'.(empty($admin)?'':($admin=='1'?'info':$admin)).' hideonsmartphone'.($morecss?' '.$morecss:'').'\">').'<span class=\"fa fa-info-circle\" title=\"'.dol_escape_htmltag($admin?$langs->trans('InfoAdmin'):$langs->trans('Note')).'\"></span> '.$text.($nodiv?'':'</div>');\n}\n\n\n/**\n *\tAffiche message erreur system avec toutes les informations pour faciliter le diagnostic et la remontee des bugs.\n *\tOn doit appeler cette fonction quand une erreur technique bloquante est rencontree.\n *\tToutefois, il faut essayer de ne l'appeler qu'au sein de pages php, les classes devant\n *\trenvoyer leur erreur par l'intermediaire de leur propriete \"error\".\n *\n *\t@param\t \tDoliDB\t$db      \tDatabase handler\n *\t@param  \tmixed\t$error\t\tString or array of errors strings to show\n *  @param\t\tarray\t$errors\t\tArray of errors\n *\t@return \tvoid\n *  @see    \tdol_htmloutput_errors\n */\nfunction dol_print_error($db='',$error='',$errors=null)\n{\n\tglobal $conf,$langs,$argv;\n\tglobal $dolibarr_main_prod;\n\n\t$out = '';\n\t$syslog = '';\n\n\t// Si erreur intervenue avant chargement langue\n\tif (! $langs)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT .'/core/class/translate.class.php';\n\t\t$langs = new Translate('', $conf);\n\t\t$langs->load(\"main\");\n\t}\n\t$langs->load(\"main\");\n\t$langs->load(\"errors\");\n\n\tif ($_SERVER['DOCUMENT_ROOT'])    // Mode web\n\t{\n\t\t$out.=$langs->trans(\"DolibarrHasDetectedError\").\".<br>\\n\";\n\t\tif (! empty($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"You use an experimental or develop level of features, so please do NOT report any bugs, except if problem is confirmed moving option MAIN_FEATURES_LEVEL back to 0.<br>\\n\";\n\t\t$out.=$langs->trans(\"InformationToHelpDiagnose\").\":<br>\\n\";\n\n\t\t$out.=\"<b>\".$langs->trans(\"Date\").\":</b> \".dol_print_date(time(),'dayhourlog').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Dolibarr\").\":</b> \".DOL_VERSION.\"<br>\\n\";\n\t\tif (isset($conf->global->MAIN_FEATURES_LEVEL)) $out.=\"<b>\".$langs->trans(\"LevelOfFeature\").\":</b> \".$conf->global->MAIN_FEATURES_LEVEL.\"<br>\\n\";\n\t\tif (function_exists(\"phpversion\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"PHP\").\":</b> \".phpversion().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"Server\").\":</b> \".$_SERVER[\"SERVER_SOFTWARE\"].\"<br>\\n\";\n\t\tif (function_exists(\"php_uname\"))\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"OS\").\":</b> \".php_uname().\"<br>\\n\";\n\t\t}\n\t\t$out.=\"<b>\".$langs->trans(\"UserAgent\").\":</b> \".$_SERVER[\"HTTP_USER_AGENT\"].\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"RequestedUrl\").\":</b> \".dol_htmlentities($_SERVER[\"REQUEST_URI\"],ENT_COMPAT,'UTF-8').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"Referer\").\":</b> \".(isset($_SERVER[\"HTTP_REFERER\"])?dol_htmlentities($_SERVER[\"HTTP_REFERER\"],ENT_COMPAT,'UTF-8'):'').\"<br>\\n\";\n\t\t$out.=\"<b>\".$langs->trans(\"MenuManager\").\":</b> \".(isset($conf->standard_menu)?$conf->standard_menu:'').\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t\t$syslog.=\"url=\".dol_escape_htmltag($_SERVER[\"REQUEST_URI\"]);\n\t\t$syslog.=\", query_string=\".dol_escape_htmltag($_SERVER[\"QUERY_STRING\"]);\n\t}\n\telse                              // Mode CLI\n\t{\n\t\t$out.='> '.$langs->transnoentities(\"ErrorInternalErrorDetected\").\":\\n\".$argv[0].\"\\n\";\n\t\t$syslog.=\"pid=\".dol_getmypid();\n\t}\n\n\tif (is_object($db))\n\t{\n\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t{\n\t\t\t$out.=\"<b>\".$langs->trans(\"DatabaseTypeManager\").\":</b> \".$db->type.\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"RequestLastAccessInError\").\":</b> \".($db->lastqueryerror()?dol_escape_htmltag($db->lastqueryerror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"ReturnCodeLastAccessInError\").\":</b> \".($db->lasterrno()?dol_escape_htmltag($db->lasterrno()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<b>\".$langs->trans(\"InformationLastAccessInError\").\":</b> \".($db->lasterror()?dol_escape_htmltag($db->lasterror()):$langs->trans(\"ErrorNoRequestInError\")).\"<br>\\n\";\n\t\t\t$out.=\"<br>\\n\";\n\t\t}\n\t\telse                            // Mode CLI\n\t\t{\n\t\t\t// No dol_escape_htmltag for output, we are in CLI mode\n\t\t\t$out.='> '.$langs->transnoentities(\"DatabaseTypeManager\").\":\\n\".$db->type.\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"RequestLastAccessInError\").\":\\n\".($db->lastqueryerror()?$db->lastqueryerror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"ReturnCodeLastAccessInError\").\":\\n\".($db->lasterrno()?$db->lasterrno():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\t\t\t$out.='> '.$langs->transnoentities(\"InformationLastAccessInError\").\":\\n\".($db->lasterror()?$db->lasterror():$langs->transnoentities(\"ErrorNoRequestInError\")).\"\\n\";\n\n\t\t}\n\t\t$syslog.=\", sql=\".$db->lastquery();\n\t\t$syslog.=\", db_error=\".$db->lasterror();\n\t}\n\n\tif ($error || $errors)\n\t{\n\t\t$langs->load(\"errors\");\n\n\t\t// Merge all into $errors array\n\t\tif (is_array($error) && is_array($errors)) $errors=array_merge($error,$errors);\n\t\telseif (is_array($error)) $errors=$error;\n\t\telseif (is_array($errors)) $errors=array_merge(array($error),$errors);\n\t\telse $errors=array_merge(array($error));\n\n\t\tforeach($errors as $msg)\n\t\t{\n\t\t\tif (empty($msg)) continue;\n\t\t\tif ($_SERVER['DOCUMENT_ROOT'])  // Mode web\n\t\t\t{\n\t\t\t\t$out.=\"<b>\".$langs->trans(\"Message\").\":</b> \".dol_escape_htmltag($msg).\"<br>\\n\" ;\n\t\t\t}\n\t\t\telse                        // Mode CLI\n\t\t\t{\n\t\t\t\t$out.='> '.$langs->transnoentities(\"Message\").\":\\n\".$msg.\"\\n\" ;\n\t\t\t}\n\t\t\t$syslog.=\", msg=\".$msg;\n\t\t}\n\t}\n\tif (empty($dolibarr_main_prod) && $_SERVER['DOCUMENT_ROOT'] && function_exists('xdebug_print_function_stack') && function_exists('xdebug_call_file'))\n\t{\n\t\txdebug_print_function_stack();\n\t\t$out.='<b>XDebug informations:</b>'.\"<br>\\n\";\n\t\t$out.='File: '.xdebug_call_file().\"<br>\\n\";\n\t\t$out.='Line: '.xdebug_call_line().\"<br>\\n\";\n\t\t$out.='Function: '.xdebug_call_function().\"<br>\\n\";\n\t\t$out.=\"<br>\\n\";\n\t}\n\n\tif (empty($dolibarr_main_prod)) print $out;\n\telse\n\t{\n\t\tprint $langs->trans(\"DolibarrHasDetectedError\").'. ';\n\t\tprint $langs->trans(\"YouCanSetOptionDolibarrMainProdToZero\");\n\t\tdefine(\"MAIN_CORE_ERROR\", 1);\n\t}\n\t//else print 'Sorry, an error occured but the parameter $dolibarr_main_prod is defined in conf file so no message is reported to your browser. Please read the log file for error message.';\n\tdol_syslog(\"Error \".$syslog, LOG_ERR);\n}\n\n/**\n * Show a public email and error code to contact if technical error\n *\n * @param\tstring\t$prefixcode\t\tPrefix of public error code\n * @param   string  $errormessage   Complete error message\n * @param\tarray\t$errormessages\tArray of error messages\n * @return\tvoid\n */\nfunction dol_print_error_email($prefixcode, $errormessage='', $errormessages=array())\n{\n\tglobal $langs,$conf;\n\n\t$langs->load(\"errors\");\n\t$now=dol_now();\n\tprint '<br><div class=\"center login_main_message\"><div class=\"error\">';\n\tprint $langs->trans(\"ErrorContactEMail\", $conf->global->MAIN_INFO_SOCIETE_MAIL, $prefixcode.dol_print_date($now,'%Y%m%d'));\n\tif ($errormessage) print '<br><br>'.$errormessage;\n\tif (is_array($errormessages) && count($errormessages))\n\t{\n\t\tforeach($errormessages as $mesgtoshow)\n\t\t{\n\t\t\tprint '<br><br>'.$mesgtoshow;\n\t\t}\n\t}\n\tprint '</div></div>';\n}\n\n/**\n *\tShow title line of an array\n *\n *\t@param\tstring\t$name        Label of field\n *\t@param\tstring\t$file        Url used when we click on sort picto\n *\t@param\tstring\t$field       Field to use for new sorting\n *\t@param\tstring\t$begin       (\"\" by defaut)\n *\t@param\tstring\t$moreparam   Add more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  Options of attribute td (\"\" by defaut, example: 'align=\"center\"')\n *\t@param  string\t$sortfield   Current field used to sort\n *\t@param  string\t$sortorder   Current sort order\n *  @param\tstring\t$prefix\t\t Prefix for css. Use space after prefix to add your own CSS tag.\n *  @param\tstring\t$tooltip\t Tooltip\n *\t@return\tvoid\n */\nfunction print_liste_field_titre($name, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $moreattrib=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\", $tooltip=\"\")\n{\n\tprint getTitleFieldOfList($name, 0, $file, $field, $begin, $moreparam, $moreattrib, $sortfield, $sortorder, $prefix, 0, $tooltip);\n}\n\n/**\n *\tGet title line of an array\n *\n *\t@param\tstring\t$name        \t\tTranslation key of field\n *\t@param\tint\t\t$thead\t\t \t\t0=To use with standard table format, 1=To use inside <thead><tr>, 2=To use with <div>\n *\t@param\tstring\t$file        \t\tUrl used when we click on sort picto\n *\t@param\tstring\t$field       \t\tField to use for new sorting. Empty if this field is not sortable.\n *\t@param\tstring\t$begin       \t\t(\"\" by defaut)\n *\t@param\tstring\t$moreparam   \t\tAdd more parameters on sort url links (\"\" by default)\n *\t@param  string\t$moreattrib  \t\tAdd more attributes on th (\"\" by defaut, example: 'align=\"center\"'). To add more css class, use param $prefix.\n *\t@param  string\t$sortfield   \t\tCurrent field used to sort (Ex: 'd.datep,d.id')\n *\t@param  string\t$sortorder   \t\tCurrent sort order (Ex: 'asc,desc')\n *  @param\tstring\t$prefix\t\t \t\tPrefix for css. Use space after prefix to add your own CSS tag, for example 'mycss '.\n *  @param\tstring\t$disablesortlink\t1=Disable sort link\n *  @param\tstring\t$tooltip\t \t\tTooltip\n *\t@return\tstring\n */\nfunction getTitleFieldOfList($name, $thead=0, $file=\"\", $field=\"\", $begin=\"\", $moreparam=\"\", $moreattrib=\"\", $sortfield=\"\", $sortorder=\"\", $prefix=\"\", $disablesortlink=0, $tooltip='')\n{\n\tglobal $conf, $langs, $form;\n\t//print \"$name, $file, $field, $begin, $options, $moreattrib, $sortfield, $sortorder<br>\\n\";\n\n\t$sortorder=strtoupper($sortorder);\n\t$out='';\n\t$sortimg='';\n\n\t$tag='th';\n\tif ($thead==2) $tag='div';\n\n\t$tmpsortfield=explode(',',$sortfield);\n\t$sortfield1=trim($tmpsortfield[0]);    // If $sortfield is 'd.datep,d.id', it becomes 'd.datep'\n\t$tmpfield=explode(',',$field);\n\t$field1=trim($tmpfield[0]);            // If $field is 'd.datep,d.id', it becomes 'd.datep'\n\n\t//var_dump('field='.$field.' field1='.$field1.' sortfield='.$sortfield.' sortfield1='.$sortfield1);\n\t// If field is used as sort criteria we use a specific css class liste_titre_sel\n\t// Example if (sortfield,field)=(\"nom\",\"xxx.nom\") or (sortfield,field)=(\"nom\",\"nom\")\n\tif ($field1 && ($sortfield1 == $field1 || $sortfield1 == preg_replace(\"/^[^\\.]+\\./\",\"\",$field1))) $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre_sel\" '. $moreattrib.'>';\n\telse $out.= '<'.$tag.' class=\"'.$prefix.'liste_titre\" '. $moreattrib.'>';\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\tif ($field1 != $sortfield1) // We are on another field\n\t\t{\n\t\t\tif (preg_match('/^DESC/', $sortorder)) $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">';\n\t\t\telse $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t\telse                      // We are of first sorting criteria\n\t\t{\n\t\t\tif (preg_match('/^ASC/', $sortorder)) $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=desc&begin='.$begin.$options.'\">';\n\t\t\telse $out.= '<a class=\"reposition\" href=\"'.$file.'?sortfield='.$sortfield.'&sortorder=asc&begin='.$begin.$options.'\">';\n\t\t}\n\t}\n\n\tif ($tooltip) $out.=$form->textwithpicto($langs->trans($name), $langs->trans($tooltip));\n\telse $out.=$langs->trans($name);\n\n\tif (empty($thead) && $field && empty($disablesortlink))    // If this is a sort field\n\t{\n\t\t$out.='</a>';\n\t}\n\n\tif (empty($thead) && $field)    // If this is a sort field\n\t{\n\t\t$options=preg_replace('/sortfield=([a-zA-Z0-9,\\s\\.]+)/i','',$moreparam);\n\t\t$options=preg_replace('/sortorder=([a-zA-Z0-9,\\s\\.]+)/i','',$options);\n\t\t$options=preg_replace('/&+/i','&',$options);\n\t\tif (! preg_match('/^&/',$options)) $options='&'.$options;\n\n\t\t//print \"&nbsp;\";\n\t\t//$sortimg.= '<img width=\"2\" src=\"'.DOL_URL_ROOT.'/theme/common/transparent.png\" alt=\"\">';\n\t\t//$sortimg.= '<span class=\"nowrap\">';\n\n\t\tif (! $sortorder || $field1 != $sortfield1)\n\t\t{\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (preg_match('/^DESC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",0).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",1).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_up(\"Z-A\",0).'</span>';\n\t\t\t}\n\t\t\tif (preg_match('/^ASC/', $sortorder)) {\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=asc&begin='.$begin.$options.'\">'.img_down(\"A-Z\",1).'</a>';\n\t\t\t\t//$out.= '<a href=\"'.$file.'?sortfield='.$field.'&sortorder=desc&begin='.$begin.$options.'\">'.img_up(\"Z-A\",0).'</a>';\n\t\t\t\t$sortimg.= '<span class=\"nowrap\">'.img_down(\"A-Z\",0).'</span>';\n\t\t\t}\n\t\t}\n\n\t\t//$sortimg.= '</span>';\n\t}\n\n\t$out.=$sortimg;\n\n\t$out.='</'.$tag.'>';\n\n\treturn $out;\n}\n\n/**\n *\tShow a title.\n *\n *\t@param\tstring\t$title\t\t\tTitle to show\n *\t@return\tstring\t\t\t\t\tTitle to show\n *  @deprecated\t\t\t\t\t\tUse load_fiche_titre instead\n *  @see load_fiche_titre\n */\nfunction print_titre($title)\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\tprint '<div class=\"titre\">'.$title.'</div>';\n}\n\n/**\n *\tShow a title with picto\n *\n *\t@param\tstring\t$title\t\t\t\tTitle to show\n *\t@param\tstring\t$mesg\t\t\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n * \t@return\tvoid\n *  @deprecated Use print load_fiche_titre instead\n */\nfunction print_fiche_titre($title, $mesg='', $picto='title_generic.png', $pictoisfullpath=0, $id='')\n{\n\tprint load_fiche_titre($title, $mesg, $picto, $pictoisfullpath, $id);\n}\n\n/**\n *\tLoad a title with picto\n *\n *\t@param\tstring\t$titre\t\t\t\tTitle to show\n *\t@param\tstring\t$morehtmlright\t\tAdded message to show on right\n *\t@param\tstring\t$picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t$pictoisfullpath\t1=Icon name is a full absolute url of image\n * \t@param\tint\t\t$id\t\t\t\t\tTo force an id on html objects\n *  @param  string  $morecssontable     More css on table\n *\t@param\tstring\t$morehtmlcenter\t\tAdded message to show on center\n * \t@return\tstring\n *  @see print_barre_liste\n */\nfunction load_fiche_titre($titre, $morehtmlright='', $picto='title_generic.png', $pictoisfullpath=0, $id=0, $morecssontable='', $morehtmlcenter='')\n{\n\tglobal $conf;\n\n\t$return='';\n\n\tif ($picto == 'setup') $picto='title.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title.png') $picto='title.gif';\n\n\t$return.= \"\\n\";\n\t$return.= '<table '.($id?'id=\"'.$id.'\" ':'').'summary=\"\" class=\"centpercent notopnoleftnoright'.($morecssontable?' '.$morecssontable:'').'\" style=\"margin-bottom: 2px;\"><tr>';\n\tif ($picto) $return.= '<td class=\"nobordernopadding widthpictotitle\" valign=\"middle\">'.img_picto('',$picto, 'class=\"valignmiddle widthpictotitle\" id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\t$return.= '<td class=\"nobordernopadding\" valign=\"middle\">';\n\t$return.= '<div class=\"titre\">'.$titre.'</div>';\n\t$return.= '</td>';\n\tif (dol_strlen($morehtmlcenter))\n\t{\n\t\t$return.= '<td class=\"nobordernopadding\" align=\"center\" valign=\"middle\">'.$morehtmlcenter.'</td>';\n\t}\n\tif (dol_strlen($morehtmlright))\n\t{\n\t\t$return.= '<td class=\"nobordernopadding titre_right wordbreak\" align=\"right\" valign=\"middle\">'.$morehtmlright.'</td>';\n\t}\n\t$return.= '</tr></table>'.\"\\n\";\n\n\treturn $return;\n}\n\n/**\n *\tPrint a title with navigation controls for pagination\n *\n *\t@param\tstring\t    $titre\t\t\t\tTitle to show (required)\n *\t@param\tint   \t    $page\t\t\t\tNumero of page to show in navigation links (required)\n *\t@param\tstring\t    $file\t\t\t\tUrl of page (required)\n *\t@param\tstring\t    $options         \tMore parameters for links ('' by default, does not include sortfield neither sortorder). Value must be 'urlencoded' before calling function.\n *\t@param\tstring    \t$sortfield       \tField to sort on ('' by default)\n *\t@param\tstring\t    $sortorder       \tOrder to sort ('' by default)\n *\t@param\tstring\t    $morehtmlcenter     String in the middle ('' by default). We often find here string $massaction comming from $form->selectMassAction()\n *\t@param\tint\t\t    $num\t\t\t\tNumber of records found by select with limit+1\n *\t@param\tint|string  $totalnboflines\t\tTotal number of records/lines for all pages (if known). Use a negative value of number to not show number. Use '' if unknown.\n *\t@param\tstring\t    $picto\t\t\t\tIcon to use before title (should be a 32x32 transparent png file)\n *\t@param\tint\t\t    $pictoisfullpath\t1=Icon name is a full absolute url of image\n *  @param\tstring\t    $morehtmlright\t\t\tMore html to show\n *  @param  string      $morecss            More css to the table\n *  @param  int         $limit              Max number of lines (-1 = use default, 0 = no limit, > 0 = limit).\n *  @param  int         $hideselectlimit    Force to hide select limit\n *  @param  int         $hidenavigation     Force to hide all navigation tools\n *\t@return\tvoid\n */\nfunction print_barre_liste($titre, $page, $file, $options='', $sortfield='', $sortorder='', $morehtmlcenter='', $num=-1, $totalnboflines='', $picto='title_generic.png', $pictoisfullpath=0, $morehtmlright='', $morecss='', $limit=-1, $hideselectlimit=0, $hidenavigation=0)\n{\n\tglobal $conf,$langs;\n\n\t$savlimit = $limit;\n\t$savtotalnboflines = $totalnboflines;\n\t$totalnboflines=abs($totalnboflines);\n\n\tif ($picto == 'setup') $picto='title_setup.png';\n\tif (($conf->browser->name == 'ie') && $picto=='title_generic.png') $picto='title.gif';\n\tif ($limit < 0) $limit = $conf->liste_limit;\n\tif ($savlimit != 0 && (($num > $limit) || ($num == -1) || ($limit == 0)))\n\t{\n\t\t$nextpage = 1;\n\t}\n\telse\n\t{\n\t\t$nextpage = 0;\n\t}\n\t//print 'totalnboflines='.$totalnboflines.'-savlimit='.$savlimit.'-limit='.$limit.'-num='.$num.'-nextpage='.$nextpage;\n\n\tprint \"\\n\";\n\tprint \"<!-- Begin title '\".$titre.\"' -->\\n\";\n\tprint '<table width=\"100%\" border=\"0\" class=\"notopnoleftnoright'.($morecss?' '.$morecss:'').'\" style=\"margin-bottom: 6px;\"><tr>';\n\n\t// Left\n\t//if ($picto && $titre) print '<td class=\"nobordernopadding hideonsmartphone\" width=\"40\" align=\"left\" valign=\"middle\">'.img_picto('', $picto, 'id=\"pictotitle\"', $pictoisfullpath).'</td>';\n\tprint '<td class=\"nobordernopadding valignmiddle\">';\n\tif ($picto && $titre) print img_picto('', $picto, 'class=\"hideonsmartphone valignmiddle\" id=\"pictotitle\"', $pictoisfullpath);\n\tprint '<div class=\"titre inline-block\">'.$titre;\n\tif (!empty($titre) && $savtotalnboflines >= 0 && (string) $savtotalnboflines != '') print ' ('.$totalnboflines.')';\n\tprint '</div></td>';\n\n\t// Center\n\tif ($morehtmlcenter)\n\t{\n\t\tprint '<td class=\"nobordernopadding center valignmiddle\">'.$morehtmlcenter.'</td>';\n\t}\n\n\t// Right\n\tprint '<td class=\"nobordernopadding valignmiddle\" align=\"right\">';\n\tif ($sortfield) $options .= \"&sortfield=\".urlencode($sortfield);\n\tif ($sortorder) $options .= \"&sortorder=\".urlencode($sortorder);\n\t// Show navigation bar\n\t$pagelist = '';\n\tif ($savlimit != 0 && ($page > 0 || $num > $limit))\n\t{\n\t\tif ($totalnboflines)\t// If we know total nb of lines\n\t\t{\n\t\t\t// Define nb of extra page links before and after selected page + ... + first or last\n\t\t\t$maxnbofpage=(empty($conf->dol_optimize_smallscreen) ? 4 : 1);\n\n\t\t\tif ($limit > 0) $nbpages=ceil($totalnboflines/$limit);\n\t\t\telse $nbpages=1;\n\t\t\t$cpt=($page-$maxnbofpage);\n\t\t\tif ($cpt < 0) { $cpt=0; }\n\n\t\t\tif ($cpt>=1)\n\t\t\t{\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=0'.$options.'\">1</a></li>';\n\t\t\t\tif ($cpt > 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == 2) $pagelist.='<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page=1'.$options.'\">2</a></li>';\n\t\t\t}\n\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif ($cpt==$page)\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).'</span></li>';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.$cpt.$options.'\">'.($cpt+1).'</a></li>';\n\t\t\t\t}\n\t\t\t\t$cpt++;\n\t\t\t}\n\t\t\twhile ($cpt < $nbpages && $cpt<=$page+$maxnbofpage);\n\n\t\t\tif ($cpt<$nbpages)\n\t\t\t{\n\t\t\t\tif ($cpt<$nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"inactive\"':'').'>...</span></li>';\n\t\t\t\telse if ($cpt == $nbpages-2) $pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-2).$options.'\">'.($nbpages - 1).'</a></li>';\n\t\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><a href=\"'.$file.'?page='.($nbpages-1).$options.'\">'.$nbpages.'</a></li>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$pagelist.= '<li'.(($conf->dol_use_jmobile != 4)?' class=\"pagination\"':'').'><span '.(($conf->dol_use_jmobile != 4)?'class=\"active\"':'').'>'.($page+1).\"</li>\";\n\t\t}\n\t}\n\n\tprint_fleche_navigation($page, $file, $options, $nextpage, $pagelist, $morehtmlright, $savlimit, $totalnboflines, $hideselectlimit);\t\t// output the div and ul for previous/last completed with page numbers into $pagelist\n\n\tprint '</td>';\n\n\tprint '</tr></table>'.\"\\n\";\n\tprint \"<!-- End title -->\\n\\n\";\n}\n\n/**\n *\tFunction to show navigation arrows into lists\n *\n *\t@param\tint\t\t\t\t$page\t\t\t\tNumber of page\n *\t@param\tstring\t\t\t$file\t\t\t\tPage URL (in most cases provided with $_SERVER[\"PHP_SELF\"])\n *\t@param\tstring\t\t\t$options         \tOther url paramaters to propagate (\"\" by default, may include sortfield and sortorder)\n *\t@param\tinteger\t\t\t$nextpage\t    \tDo we show a next page button\n *\t@param\tstring\t\t\t$betweenarrows\t\tHTML content to show between arrows. MUST contains '<li> </li>' tags or '<li><span> </span></li>'.\n *  @param\tstring\t\t\t$afterarrows\t\tHTML content to show after arrows. Must NOT contains '<li> </li>' tags.\n *  @param  int             $limit              Max nb of record to show  (-1 = no combo with limit, 0 = no limit, > 0 = limit)\n *\t@param\tint\t\t        $totalnboflines\t\tTotal number of records/lines for all pages (if known)\n *  @param  int             $hideselectlimit    Force to hide select limit\n *\t@return\tvoid\n */\nfunction print_fleche_navigation($page, $file, $options='', $nextpage=0, $betweenarrows='', $afterarrows='', $limit=-1, $totalnboflines=0, $hideselectlimit=0)\n{\n\tglobal $conf, $langs;\n\n\tprint '<div class=\"pagination\"><ul>';\n\tif ((int) $limit >= 0 && empty($hideselectlimit))\n\t{\n\t\t$pagesizechoices='10:10,20:20,30:30,40:40,50:50,100:100,250:250,500:500,1000:1000,5000:5000';\n\t\t//$pagesizechoices.=',0:'.$langs->trans(\"All\");     // Not yet supported\n\t\t//$pagesizechoices.=',2:2';\n\t\tif (! empty($conf->global->MAIN_PAGESIZE_CHOICES)) $pagesizechoices=$conf->global->MAIN_PAGESIZE_CHOICES;\n\n\t\tprint '<li class=\"pagination\">';\n\t\tprint '<select class=\"flat selectlimit\" name=\"limit\" title=\"'.dol_escape_htmltag($langs->trans(\"MaxNbOfRecordPerPage\")).'\">';\n\t\t$tmpchoice=explode(',',$pagesizechoices);\n\t\t$tmpkey=$limit.':'.$limit;\n\t\tif (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n\t\t$tmpkey=$conf->liste_limit.':'.$conf->liste_limit;\n\t\tif (! in_array($tmpkey, $tmpchoice)) $tmpchoice[]=$tmpkey;\n\t\tasort($tmpchoice, SORT_NUMERIC);\n\t\t$found=false;\n\t\tforeach($tmpchoice as $val)\n\t\t{\n\t\t\t$selected='';\n\t\t\t$tmp=explode(':',$val);\n\t\t\t$key=$tmp[0];\n\t\t\t$val=$tmp[1];\n\t\t\tif ($key != '' && $val != '')\n\t\t\t{\n\t\t\t\tif ((int) $key == (int) $limit)\n\t\t\t\t{\n\t\t\t\t\t$selected = ' selected=\"selected\"';\n\t\t\t\t\t$found = true;\n\t\t\t\t}\n\t\t\t\tprint '<option name=\"'.$key.'\"'.$selected.'>'.dol_escape_htmltag($val).'</option>'.\"\\n\";\n\t\t\t}\n\t\t}\n\t\tprint '</select>';\n\t\tif ($conf->use_javascript_ajax)\n\t\t{\n\t\t\tprint '<!-- JS CODE TO ENABLE select limit to launch submit of page -->\n            \t\t<script type=\"text/javascript\">\n                \tjQuery(document).ready(function () {\n            \t  \t\tjQuery(\".selectlimit\").change(function() {\n                            console.log(\"Change limit. Send submit\");\n                            $(this).parents(\\'form:first\\').submit();\n            \t  \t\t});\n                \t});\n            \t\t</script>\n                ';\n\t\t}\n\t\tprint '</li>';\n\t}\n\tif ($page > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationprevious\" href=\"'.$file.'?page='.($page-1).$options.'\"><i class=\"fa fa-chevron-left\" title=\"'.dol_escape_htmltag($langs->trans(\"Previous\")).'\"></i></a></li>';\n\t}\n\tif ($betweenarrows)\n\t{\n\t\tprint $betweenarrows;\n\t}\n\tif ($nextpage > 0)\n\t{\n\t\tprint '<li class=\"pagination\"><a class=\"paginationnext\" href=\"'.$file.'?page='.($page+1).$options.'\"><i class=\"fa fa-chevron-right\" title=\"'.dol_escape_htmltag($langs->trans(\"Next\")).'\"></i></a></li>';\n\t}\n\tif ($afterarrows)\n\t{\n\t\tprint '<li class=\"paginationafterarrows\">';\n\t\tprint $afterarrows;\n\t\tprint '</li>';\n\t}\n\tprint '</ul></div>'.\"\\n\";\n}\n\n\n/**\n *\tReturn a string with VAT rate label formated for view output\n *\tUsed into pdf and HTML pages\n *\n *\t@param\tstring\t$rate\t\t\tRate value to format ('19.6', '19,6', '19.6%', '19,6%', '19.6 (CODEX)', ...)\n *  @param\tboolean\t$addpercent\t\tAdd a percent % sign in output\n *\t@param\tint\t\t$info_bits\t\tMiscellaneous information on vat (0=Default, 1=French NPR vat)\n *\t@param\tint\t\t$usestarfornpr\t-1=Never show, 0 or 1=Use '*' for NPR vat rates\n *  @return\tstring\t\t\t\t\tString with formated amounts ('19,6' or '19,6%' or '8.5% (NPR)' or '8.5% *' or '19,6 (CODEX)')\n */\nfunction vatrate($rate, $addpercent=false, $info_bits=0, $usestarfornpr=0)\n{\n\t$morelabel='';\n\n\tif (preg_match('/%/',$rate))\n\t{\n\t\t$rate=str_replace('%','',$rate);\n\t\t$addpercent=true;\n\t}\n\tif (preg_match('/\\((.*)\\)/',$rate,$reg))\n\t{\n\t\t$morelabel=' ('.$reg[1].')';\n\t\t$rate=preg_replace('/\\s*'.preg_quote($morelabel,'/').'/','',$rate);\n\t}\n\tif (preg_match('/\\*/',$rate))\n\t{\n\t\t$rate=str_replace('*','',$rate);\n\t\t$info_bits |= 1;\n\t}\n\n\t// If rate is '9/9/9' we don't change it.  If rate is '9.000' we apply price()\n\tif (! preg_match('/\\//', $rate)) $ret=price($rate,0,'',0,0).($addpercent?'%':'');\n\telse\n\t{\n\t\t// TODO Split on / and output with a price2num to have clean numbers without ton of 000.\n\t\t$ret=$rate.($addpercent?'%':'');\n\t}\n\tif (($info_bits & 1) && $usestarfornpr >= 0) $ret.=' *';\n\t$ret.=$morelabel;\n\treturn $ret;\n}\n\n\n/**\n *\t\tFunction to format a value into an amount for visual output\n *\t\tFunction used into PDF and HTML pages\n *\n *\t\t@param\tfloat\t\t$amount\t\t\tAmount to format\n *\t\t@param\tinteger\t\t$form\t\t\tType of format, HTML or not (not by default)\n *\t\t@param\tTranslate\t$outlangs\t\tObject langs for output\n *\t\t@param\tint\t\t\t$trunc\t\t\t1=Truncate if there is more decimals than MAIN_MAX_DECIMALS_SHOWN (default), 0=Does not truncate. Deprecated because amount are rounded (to unit or total amount accurancy) before beeing inserted into database or after a computation, so this parameter should be useless.\n *\t\t@param\tint\t\t\t$rounding\t\tMinimum number of decimal to show. If 0, no change, if -1, we use min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOTAL)\n *\t\t@param\tint\t\t\t$forcerounding\tForce the number of decimal to forcerounding decimal (-1=do not force)\n *\t\t@param\tstring\t\t$currency_code\tTo add currency symbol (''=add nothing, 'auto'=Use default currency, 'XXX'=add currency symbols for XXX currency)\n *\t\t@return\tstring\t\t\t\t\t\tChaine avec montant formate\n *\n *\t\t@see\tprice2num\t\t\t\t\tRevert function of price\n */\nfunction price($amount, $form=0, $outlangs='', $trunc=1, $rounding=-1, $forcerounding=-1, $currency_code='')\n{\n\tglobal $langs,$conf;\n\n\t// Clean parameters\n\tif (empty($amount)) $amount=0;\t// To have a numeric value if amount not defined or = ''\n\t$amount = (is_numeric($amount)?$amount:0); // Check if amount is numeric, for example, an error occured when amount value = o (letter) instead 0 (number)\n\tif ($rounding < 0) $rounding=min($conf->global->MAIN_MAX_DECIMALS_UNIT,$conf->global->MAIN_MAX_DECIMALS_TOT);\n\t$nbdecimal=$rounding;\n\n\t// Output separators by default (french)\n\t$dec=','; $thousand=' ';\n\n\t// If $outlangs not forced, we use use language\n\tif (! is_object($outlangs)) $outlangs=$langs;\n\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$outlangs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($outlangs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$outlangs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telse if ($thousand == 'Space') $thousand=' ';\n\t//print \"outlangs=\".$outlangs->defaultlang.\" amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t//print \"amount=\".$amount.\"-\";\n\t$amount = str_replace(',','.',$amount);\t// should be useless\n\t//print $amount.\"-\";\n\t$datas = explode('.',$amount);\n\t$decpart = isset($datas[1])?$datas[1]:'';\n\t$decpart = preg_replace('/0+$/i','',$decpart);\t// Supprime les 0 de fin de partie decimale\n\t//print \"decpart=\".$decpart.\"<br>\";\n\t$end='';\n\n\t// We increase nbdecimal if there is more decimal than asked (to not loose information)\n\tif (dol_strlen($decpart) > $nbdecimal) $nbdecimal=dol_strlen($decpart);\n\t// Si on depasse max\n\tif ($trunc && $nbdecimal > $conf->global->MAIN_MAX_DECIMALS_SHOWN)\n\t{\n\t\t$nbdecimal=$conf->global->MAIN_MAX_DECIMALS_SHOWN;\n\t\tif (preg_match('/\\.\\.\\./i',$conf->global->MAIN_MAX_DECIMALS_SHOWN))\n\t\t{\n\t\t\t// Si un affichage est tronque, on montre des ...\n\t\t\t$end='...';\n\t\t}\n\t}\n\n\t// If force rounding\n\tif ($forcerounding >= 0) $nbdecimal = $forcerounding;\n\n\t// Format number\n\t$output=number_format($amount, $nbdecimal, $dec, $thousand);\n\tif ($form)\n\t{\n\t\t$output=preg_replace('/\\s/','&nbsp;',$output);\n\t\t$output=preg_replace('/\\'/','&#039;',$output);\n\t}\n\t// Add symbol of currency if requested\n\t$cursymbolbefore=$cursymbolafter='';\n\tif ($currency_code)\n\t{\n\t\tif ($currency_code == 'auto') $currency_code=$conf->currency;\n\n\t\t$listofcurrenciesbefore=array('USD','GBP','AUD','MXN','PEN','CNY');\n\t\tif (in_array($currency_code,$listofcurrenciesbefore)) $cursymbolbefore.=$outlangs->getCurrencySymbol($currency_code);\n\t\telse\n\t\t{\n\t\t\t$tmpcur=$outlangs->getCurrencySymbol($currency_code);\n\t\t\t$cursymbolafter.=($tmpcur == $currency_code ? ' '.$tmpcur : $tmpcur);\n\t\t}\n\t}\n\t$output=$cursymbolbefore.$output.$end.($cursymbolafter?' ':'').$cursymbolafter;\n\n\treturn $output;\n}\n\n/**\n *\tFunction that return a number with universal decimal format (decimal separator is '.') from an amount typed by a user.\n *\tFunction to use on each input amount before any numeric test or database insert\n *\n *\t@param\tfloat\t$amount\t\t\tAmount to convert/clean\n *\t@param\tstring\t$rounding\t\t''=No rounding\n * \t\t\t\t\t\t\t\t\t'MU'=Round to Max unit price (MAIN_MAX_DECIMALS_UNIT)\n *\t\t\t\t\t\t\t\t\t'MT'=Round to Max for totals with Tax (MAIN_MAX_DECIMALS_TOT)\n *\t\t\t\t\t\t\t\t\t'MS'=Round to Max for stock quantity (MAIN_MAX_DECIMALS_STOCK)\n * \t@param\tint\t\t$alreadysqlnb\tPut 1 if you know that content is already universal format number\n *\t@return\tstring\t\t\t\t\tAmount with universal numeric format (Example: '99.99999') or unchanged text if conversion fails.\n *\n *\t@see    price\t\t\t\t\tOpposite function of price2num\n */\nfunction price2num($amount,$rounding='',$alreadysqlnb=0)\n{\n\tglobal $langs,$conf;\n\n\t// Round PHP function does not allow number like '1,234.56' nor '1.234,56' nor '1 234,56'\n\t// Numbers must be '1234.56'\n\t// Decimal delimiter for PHP and database SQL requests must be '.'\n\t$dec=','; $thousand=' ';\n\tif ($langs->transnoentitiesnoconv(\"SeparatorDecimal\") != \"SeparatorDecimal\")  $dec=$langs->transnoentitiesnoconv(\"SeparatorDecimal\");\n\tif ($langs->transnoentitiesnoconv(\"SeparatorThousand\")!= \"SeparatorThousand\") $thousand=$langs->transnoentitiesnoconv(\"SeparatorThousand\");\n\tif ($thousand == 'None') $thousand='';\n\telseif ($thousand == 'Space') $thousand=' ';\n\t//print \"amount=\".$amount.\" html=\".$form.\" trunc=\".$trunc.\" nbdecimal=\".$nbdecimal.\" dec='\".$dec.\"' thousand='\".$thousand.\"'<br>\";\n\n\t// Convert value to universal number format (no thousand separator, '.' as decimal separator)\n\tif ($alreadysqlnb != 1)\t// If not a PHP number or unknown, we change format\n\t{\n\t\t//print 'PP'.$amount.' - '.$dec.' - '.$thousand.' - '.intval($amount).'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be like defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,$nbofdec,$dec,$thousand);\n\t\t}\n\t\t//print \"QQ\".$amount.'<br>';\n\n\t\t// Now make replace (the main goal of function)\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\t// Now, make a rounding if required\n\tif ($rounding)\n\t{\n\t\t$nbofdectoround='';\n\t\tif ($rounding == 'MU')     $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_UNIT;\n\t\telseif ($rounding == 'MT') $nbofdectoround=$conf->global->MAIN_MAX_DECIMALS_TOT;\n\t\telseif ($rounding == 'MS') $nbofdectoround=empty($conf->global->MAIN_MAX_DECIMALS_STOCK)?5:$conf->global->MAIN_MAX_DECIMALS_STOCK;\n\t\telseif (is_numeric($rounding))  $nbofdectoround=$rounding; \t// For admin info page\n\t\t//print \"RR\".$amount.' - '.$nbofdectoround.'<br>';\n\t\tif (dol_strlen($nbofdectoround)) $amount = round($amount,$nbofdectoround);\t// $nbofdectoround can be 0.\n\t\telse return 'ErrorBadParameterProvidedToFunction';\n\t\t//print 'SS'.$amount.' - '.$nbofdec.' - '.$dec.' - '.$thousand.' - '.$nbofdectoround.'<br>';\n\n\t\t// Convert amount to format with dolibarr dec and thousand (this is because PHP convert a number\n\t\t// to format defined by LC_NUMERIC after a calculation and we want source format to be defined by Dolibarr setup.\n\t\tif (is_numeric($amount))\n\t\t{\n\t\t\t// We put in temps value of decimal (\"0.00001\"). Works with 0 and 2.0E-5 and 9999.10\n\t\t\t$temps=sprintf(\"%0.10F\",$amount-intval($amount));\t// temps=0.0000000000 or 0.0000200000 or 9999.1000000000\n\t\t\t$temps=preg_replace('/([\\.1-9])0+$/','\\\\1',$temps); // temps=0. or 0.00002 or 9999.1\n\t\t\t$nbofdec=max(0,dol_strlen($temps)-2);\t// -2 to remove \"0.\"\n\t\t\t$amount=number_format($amount,min($nbofdec,$nbofdectoround),$dec,$thousand);\t\t// Convert amount to format with dolibarr dec and thousand\n\t\t}\n\t\t//print \"TT\".$amount.'<br>';\n\n\t\t// Always make replace because each math function (like round) replace\n\t\t// with local values and we want a number that has a SQL string format x.y\n\t\tif ($thousand != ',' && $thousand != '.') $amount=str_replace(',','.',$amount);\t// To accept 2 notations for french users\n\t\t$amount=str_replace(' ','',$amount);\t\t// To avoid spaces\n\t\t$amount=str_replace($thousand,'',$amount);\t// Replace of thousand before replace of dec to avoid pb if thousand is .\n\t\t$amount=str_replace($dec,'.',$amount);\n\t}\n\n\treturn $amount;\n}\n\n\n/**\n * Output a dimension with best unit\n *\n * @param   float       $dimension      Dimension\n * @param   int         $unit           Unit of dimension (0, -3, ...)\n * @param   string      $type           'weight', 'volume', ...\n * @param   Translate   $outputlangs    Translate language object\n * @param   int         $round          -1 = non rounding, x = number of decimal\n * @param   string      $forceunitoutput    'no' or numeric (-3, -6, ...) compared to $unit\n * @return  string                      String to show dimensions\n */\nfunction showDimensionInBestUnit($dimension, $unit, $type, $outputlangs, $round=-1, $forceunitoutput='no')\n{\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/product.lib.php';\n\n\tif (($forceunitoutput == 'no' && $dimension < 1/10000) || (is_numeric($forceunitoutput) && $forceunitoutput == -6))\n\t{\n\t\t$dimension = $dimension * 1000000;\n\t\t$unit = $unit - 6;\n\t}\n\telseif (($forceunitoutput == 'no' && $dimension < 1/10) || (is_numeric($forceunitoutput) && $forceunitoutput == -3))\n\t{\n\t\t$dimension = $dimension * 1000;\n\t\t$unit = $unit - 3;\n\t}\n\telseif (($forceunitoutput == 'no' && $dimension > 100000000) || (is_numeric($forceunitoutput) && $forceunitoutput == 6))\n\t{\n\t\t$dimension = $dimension / 1000000;\n\t\t$unit = $unit + 6;\n\t}\n\telseif (($forceunitoutput == 'no' && $dimension > 100000) || (is_numeric($forceunitoutput) && $forceunitoutput == 3))\n\t{\n\t\t$dimension = $dimension / 1000;\n\t\t$unit = $unit + 3;\n\t}\n\n\t$ret=price($dimension, 0, $outputlangs, 0, 0, $round).' '.measuring_units_string($unit, $type);\n\n\treturn $ret;\n}\n\n\n/**\n *\tReturn localtax rate for a particular vat, when selling a product with vat $vatrate, from a $thirdparty_buyer to a $thirdparty_seller\n *  Note: This function applies same rules than get_default_tva\n *\n * \t@param\tfloat\t\t$vatrate\t\t        Vat rate. Can be '8.5' or '8.5 (VATCODEX)' for example\n * \t@param  int\t\t\t$local\t\t         \tLocal tax to search and return (1 or 2 return only tax rate 1 or tax rate 2)\n *  @param  Societe\t\t$thirdparty_buyer    \tObject of buying third party\n *  @param\tSociete\t\t$thirdparty_seller\t\tObject of selling third party ($mysoc if not defined)\n *  @param\tint\t\t\t$vatnpr\t\t\t\t\tIf vat rate is NPR or not\n * \t@return\tmixed\t\t\t   \t\t\t\t\t0 if not found, localtax rate if found\n *  @see get_default_tva\n */\nfunction get_localtax($vatrate, $local, $thirdparty_buyer=\"\", $thirdparty_seller=\"\", $vatnpr=0)\n{\n\tglobal $db, $conf, $mysoc;\n\n\tif (empty($thirdparty_seller) || ! is_object($thirdparty_seller)) $thirdparty_seller=$mysoc;\n\n\tdol_syslog(\"get_localtax tva=\".$vatrate.\" local=\".$local.\" thirdparty_buyer id=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->id:'').\"/country_code=\".(is_object($thirdparty_buyer)?$thirdparty_buyer->country_code:'').\" thirdparty_seller id=\".$thirdparty_seller->id.\"/country_code=\".$thirdparty_seller->country_code.\" thirdparty_seller localtax1_assuj=\".$thirdparty_seller->localtax1_assuj.\"  thirdparty_seller localtax2_assuj=\".$thirdparty_seller->localtax2_assuj);\n\n\t$vatratecleaned = $vatrate;\n\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t{\n\t\t$vatratecleaned = trim($reg[1]);\n\t\t$vatratecode = $reg[2];\n\t}\n\n\t/*if ($thirdparty_buyer->country_code != $thirdparty_seller->country_code)\n\t{\n\t\treturn 0;\n\t}*/\n\n\t// Some test to guess with no need to make database access\n\tif ($mysoc->country_code == 'ES') // For spain localtaxes 1 and 2, tax is qualified if buyer use local tax\n\t{\n\t\tif ($local == 1)\n\t\t{\n\t\t\tif (! $mysoc->localtax1_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\t}\n\t\t}\n\n\t\tif ($local == 2)\n\t\t{\n\t\t\tif (! $mysoc->localtax2_assuj || (string) $vatratecleaned == \"0\") return 0;\n\t\t\tif ($thirdparty_seller->id == $mysoc->id)\n\t\t\t{\n\t\t\t\tif (! $thirdparty_buyer->localtax2_assuj) return 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (! $thirdparty_seller->localtax2_assuj) return 0;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif ($local == 1 && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\tif ($local == 2 && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t}\n\n\t// For some country MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY is forced to on.\n\tif (in_array($mysoc->country_code, array('ES')))\n\t{\n\t\t$conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY = 1;\n\t}\n\n\t// Search local taxes\n\tif (! empty($conf->global->MAIN_GET_LOCALTAXES_VALUES_FROM_THIRDPARTY))\n\t{\n\t\tif ($local==1)\n\t\t{\n\t\t\tif ($thirdparty_seller != $mysoc)\n\t\t\t{\n\t\t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t{\n\t\t\t\t\treturn $thirdparty_seller->localtax1_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  // i am the seller\n\t\t\t{\n\t\t\t\tif (!isOnlyOneLocalTax($local))  // TODO If seller is me, why not always returning this, even if there is only one locatax vat.\n\t\t\t\t{\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($local==2)\n\t\t{\n\t\t\tif ($thirdparty_seller != $mysoc)\n\t\t\t{\n\t\t\t\tif (!isOnlyOneLocalTax($local))  // TODO We should provide $vatrate to search on correct line and not always on line with highest vat rate\n\t\t\t\t// TODO We should also return value defined on thirdparty only if defined\n\t\t\t\t{\n\t\t\t\t\treturn $thirdparty_seller->localtax2_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  // i am the seller\n\t\t\t{\n\t\t\t\tif (in_array($mysoc->country_code, array('ES')))\n\t\t\t\t{\n\t\t\t\t\treturn $thirdparty_buyer->localtax2_value;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn $conf->global->MAIN_INFO_VALUE_LOCALTAX2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// By default, search value of local tax on line of common tax\n\t$sql  = \"SELECT t.localtax1, t.localtax2, t.localtax1_type, t.localtax2_type\";\n   \t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n   \t$sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$thirdparty_seller->country_code.\"'\";\n   \t$sql .= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n   \tif ($vatratecode) $sql.= \" AND t.code ='\".$vatratecode.\"'\";\t\t// If we have the code, we use it in priority\n   \telse $sql.= \" AND t.recuperableonly ='\".$vatnpr.\"'\";\n   \tdol_syslog(\"get_localtax\", LOG_DEBUG);\n   \t$resql=$db->query($sql);\n\n   \tif ($resql)\n   \t{\n   \t\t$obj = $db->fetch_object($resql);\n   \t\tif ($local==1) return $obj->localtax1;\n   \t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n}\n\n\n/**\n * Return true if LocalTax (1 or 2) is unique.\n * Example: If localtax1 is 5 on line with highest common vat rate, return true\n * Example: If localtax1 is 5:8:15 on line with highest common vat rate, return false\n *\n * @param   int \t$local\tLocal tax to test (1 or 2)\n * @return  boolean \t\tTrue if LocalTax have multiple values, False if not\n */\nfunction isOnlyOneLocalTax($local)\n{\n\t$tax=get_localtax_by_third($local);\n\n\t$valors=explode(\":\", $tax);\n\n\tif (count($valors)>1)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\n\n/**\n * Get values of localtaxes (1 or 2) for company country for the common vat with the highest value\n *\n * @param\tint\t\t$local \tLocalTax to get\n * @return\tnumber\t\t\tValues of localtax\n */\nfunction get_localtax_by_third($local)\n{\n\tglobal $db, $mysoc;\n\t$sql =\"SELECT t.localtax1, t.localtax2 \";\n\t$sql.=\" FROM \".MAIN_DB_PREFIX.\"c_tva as t inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=t.fk_pays\";\n\t$sql.=\" WHERE c.code = '\".$mysoc->country_code.\"' AND t.active = 1 AND t.taux=(\";\n\t$sql.=\"  SELECT max(tt.taux) FROM \".MAIN_DB_PREFIX.\"c_tva as tt inner join \".MAIN_DB_PREFIX.\"c_country as c ON c.rowid=tt.fk_pays\";\n\t$sql.=\"  WHERE c.code = '\".$mysoc->country_code.\"' AND tt.active = 1\";\n\t$sql.=\"  )\";\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local==1) return $obj->localtax1;\n\t\telseif ($local==2) return $obj->localtax2;\n\t}\n\n\treturn 0;\n\n}\n\n\n/**\n *  Get vat main information from Id.\n *  You can call getLocalTaxesFromRate after to get other fields.\n *\n *  @param\tint|string  $vatrate\t\t    VAT ID or Rate. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is id into table (use this if you can)\n *  @return\tarray       \t  \t\t\t\tarray('rowid'=> , 'code'=> ...)\n *  @see getLocalTaxesFromRate\n */\nfunction getTaxesFromId($vatrate, $buyer=null, $seller=null, $firstparamisid=1)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getTaxesFromId vatrowid=\".$vatrate);\n\n\t// Search local taxes\n\t$sql = \"SELECT t.rowid, t.code, t.taux as rate, t.recuperableonly as npr, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n\telse\n\t{\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t\t{\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\tif ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n\t\telse $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n\t\t$sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n\t}\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) return array('rowid'=>$obj->rowid, 'code'=>$obj->code, 'rate'=>$obj->rate, 'npr'=>$obj->npr, 'accountancy_code_sell'=>$obj->accountancy_code_sell, 'accountancy_code_buy'=>$obj->accountancy_code_buy);\n\t\telse return array();\n\t}\n\telse dol_print_error($db);\n\n\treturn array();\n}\n\n/**\n *  Get type and rate of localtaxes for a particular vat rate/country of a thirdparty.\n *  This does not take into account the seller setup if subject to vat or not, only country.\n *  TODO\n *  This function is ALSO called to retrieve type for building PDF. Such call of function must be removed.\n *  Instead this function must be called when adding a line to get the array of localtax and type, and then\n *  provide it to the function calcul_price_total.\n *\n *  @param\tint|string  $vatrate\t\t\tVAT ID or Rate+Code. Value can be value or the string with code into parenthesis or rowid if $firstparamisid is 1. Example: '8.5' or '8.5 (8.5NPR)' or 123.\n *  @param\tint\t\t    $local              Number of localtax (1 or 2, or 0 to return 1 & 2)\n *  @param\tSociete\t    $buyer         \t\tCompany object\n *  @param\tSociete\t    $seller        \t\tCompany object\n *  @param  int         $firstparamisid     1 if first param is ID into table instead of Rate+code (use this if you can)\n *  @return\tarray    \t    \t\t\t\tarray(localtax_type1(1-6/0 if not found), rate localtax1, localtax_type2, rate localtax2, accountancycodecust, accountancycodesupp)\n *  @see getTaxesFromId\n */\nfunction getLocalTaxesFromRate($vatrate, $local, $buyer, $seller, $firstparamisid=0)\n{\n\tglobal $db, $mysoc;\n\n\tdol_syslog(\"getLocalTaxesFromRate vatrate=\".$vatrate.\" local=\".$local);\n\n\t// Search local taxes\n\t$sql  = \"SELECT t.localtax1, t.localtax1_type, t.localtax2, t.localtax2_type, t.accountancy_code_sell, t.accountancy_code_buy\";\n\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t\";\n\tif ($firstparamisid) $sql.= \" WHERE t.rowid = \".(int) $vatrate;\n\telse\n\t{\n\t\t$vatratecleaned = $vatrate;\n\t\t$vatratecode = '';\n\t\tif (preg_match('/^(.*)\\s*\\((.*)\\)$/', $vatrate, $reg))      // If vat is \"xx (yy)\"\n\t\t{\n\t\t\t$vatratecleaned = $reg[1];\n\t\t\t$vatratecode = $reg[2];\n\t\t}\n\n\t\t$sql.=\", \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\tif ($mysoc->country_code == 'ES') $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$buyer->country_code.\"'\";    // local tax in spain use the buyer country ??\n\t\telse $sql .= \" WHERE t.fk_pays = c.rowid AND c.code = '\".$seller->country_code.\"'\";\n\t\t$sql.= \" AND t.taux = \".((float) $vatratecleaned).\" AND t.active = 1\";\n\t\tif ($vatratecode) $sql.= \" AND t.code = '\".$vatratecode.\"'\";\n\t}\n\n\t$resql=$db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($local == 1)\n\t\t{\n\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, $local, $buyer, $seller), $obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t}\n\t\telseif ($local == 2)\n\t\t{\n\t\t\treturn array($obj->localtax2_type, get_localtax($vatrate, $local, $buyer, $seller),$obj->accountancy_code_sell, $obj->accountancy_code_buy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn array($obj->localtax1_type, get_localtax($vatrate, 1, $buyer, $seller), $obj->localtax2_type, get_localtax($vatrate, 2, $buyer, $seller), $obj->accountancy_code_sell,$obj->accountancy_code_buy);\n\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn vat rate of a product in a particular selling country or default country vat if product is unknown\n *  Function called by get_default_tva\n *\n *  @param\tint\t\t\t$idprod          \tId of product or 0 if not a predefined product\n *  @param  Societe\t\t$thirdparty_seller  Thirdparty with a ->country_code defined (FR, US, IT, ...)\n *\t@param\tint\t\t\t$idprodfournprice\tId product_fournisseur_price (for \"supplier\" order/invoice)\n *  @return float|string   \t\t\t\t    Vat rate to use with format 5.0 or '5.0 (XXX)'\n *  @see get_product_localtax_for_country\n */\nfunction get_product_vat_for_country($idprod, $thirdparty_seller, $idprodfournprice=0)\n{\n\tglobal $db,$conf,$mysoc;\n\n\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\tif ($idprodfournprice > 0)     // We want vat for product for a \"supplier\" order or invoice\n\t\t\t{\n\t\t\t\t$product->get_buyprice($idprodfournprice,0,0,0);\n\t\t\t\t$ret=$product->vatrate_supplier;\n\t\t\t\tif ($product->default_vat_code) $ret.=' ('.$product->default_vat_code.')';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$ret=$product->tva_tx;    // Default vat of product we defined\n\t\t\t\tif ($product->default_vat_code) $ret.=' ('.$product->default_vat_code.')';\n\t\t\t}\n\t\t\t$found=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product. Vat for couple countrycode/product is a feature not implemeted yet.\n\t\t\t// May be usefull/required if hidden option SERVICE_ARE_ECOMMERCE_200238EC is on\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\tif (empty($conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS))\n\t\t{\n\t\t\t// If vat of product for the country not found or not defined, we return the first higher vat of country.\n\t\t\t$sql = \"SELECT taux as vat_rate\";\n\t\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t\t$sql.= \" ORDER BY t.taux DESC, t.code ASC, t.recuperableonly ASC\";\n\t\t\t$sql.= $db->plimit(1);\n\n\t\t\t$resql=$db->query($sql);\n\t\t\tif ($resql)\n\t\t\t{\n\t\t\t\t$obj=$db->fetch_object($resql);\n\t\t\t\tif ($obj)\n\t\t\t\t{\n\t\t\t\t\t$ret=$obj->vat_rate;\n\t\t\t\t}\n\t\t\t\t$db->free($sql);\n\t\t\t}\n\t\t\telse dol_print_error($db);\n\t\t}\n\t\telse $ret=$conf->global->MAIN_VAT_DEFAULT_IF_AUTODETECT_FAILS;    // Forced value if autodetect fails\n\t}\n\n\tdol_syslog(\"get_product_vat_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tReturn localtax vat rate of a product in a particular selling country or default country vat if product is unknown\n *\n *  @param\tint\t\t$idprod         \t\tId of product\n *  @param  int\t\t$local          \t\t1 for localtax1, 2 for localtax 2\n *  @param  Societe\t$thirdparty_seller    \tThirdparty with a ->country_code defined (FR, US, IT, ...)\n *  @return int             \t\t\t\t<0 if KO, Vat rate if OK\n *  @see get_product_vat_for_country\n */\nfunction get_product_localtax_for_country($idprod, $local, $thirdparty_seller)\n{\n\tglobal $db,$mysoc;\n\n\tif (! class_exists('Product')) {\n\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t}\n\n\t$ret=0;\n\t$found=0;\n\n\tif ($idprod > 0)\n\t{\n\t\t// Load product\n\t\t$product=new Product($db);\n\t\t$result=$product->fetch($idprod);\n\n\t\tif ($mysoc->country_code == $thirdparty_seller->country_code) // If selling country is ours\n\t\t{\n\t\t\t/* Not defined yet, so we don't use this\n\t\t\tif ($local==1) $ret=$product->localtax1_tx;\n\t\t\telseif ($local==2) $ret=$product->localtax2_tx;\n\t\t\t$found=1;\n\t\t\t*/\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// TODO Read default product vat according to countrycode and product\n\n\n\t\t}\n\t}\n\n\tif (! $found)\n\t{\n\t\t// If vat of product for the country not found or not defined, we return higher vat of country.\n\t\t$sql = \"SELECT taux as vat_rate, localtax1, localtax2\";\n\t\t$sql.= \" FROM \".MAIN_DB_PREFIX.\"c_tva as t, \".MAIN_DB_PREFIX.\"c_country as c\";\n\t\t$sql.= \" WHERE t.active=1 AND t.fk_pays = c.rowid AND c.code='\".$thirdparty_seller->country_code.\"'\";\n\t\t$sql.= \" ORDER BY t.taux DESC, t.recuperableonly ASC\";\n\t\t$sql.= $db->plimit(1);\n\n\t\t$resql=$db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\t$obj=$db->fetch_object($resql);\n\t\t\tif ($obj)\n\t\t\t{\n\t\t\t\tif ($local==1) $ret=$obj->localtax1;\n\t\t\t\telseif ($local==2) $ret=$obj->localtax2;\n\t\t\t}\n\t\t}\n\t\telse dol_print_error($db);\n\t}\n\n\tdol_syslog(\"get_product_localtax_for_country: ret=\".$ret);\n\treturn $ret;\n}\n\n/**\n *\tFunction that return vat rate of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier ou entreprise sans num TVA intra) alors TVA par defaut=TVA du produit vendu. Fin de regle\n *\t Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise avec num TVA) intra alors TVA par defaut=0. Fin de regle\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tObjet societe vendeuse\n *\t@param  Societe\t\t$thirdparty_buyer   \tObjet societe acheteuse\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@param\tint\t\t\t$idprodfournprice\t\tId product_fournisseur_price (for supplier order/invoice)\n *\t@return float|string   \t\t\t\t      \tVat rate to use with format 5.0 or '5.0 (XXX)', -1 if we can't guess it\n *  @see get_default_npr, get_default_localtax\n */\nfunction get_default_tva(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $conf;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';\n\n\t// Note: possible values for tva_assuj are 0/1 or franchise/reel\n\t$seller_use_vat=((is_numeric($thirdparty_seller->tva_assuj) && ! $thirdparty_seller->tva_assuj) || (! is_numeric($thirdparty_seller->tva_assuj) && $thirdparty_seller->tva_assuj=='franchise'))?0:1;\n\n\t$seller_country_code = $thirdparty_seller->country_code;\n\t$seller_in_cee = isInEEC($thirdparty_seller);\n\n\t$buyer_country_code = $thirdparty_buyer->country_code;\n\t$buyer_in_cee = isInEEC($thirdparty_buyer);\n\n\tdol_syslog(\"get_default_tva: seller use vat=\".$seller_use_vat.\", seller country=\".$seller_country_code.\", seller in cee=\".$seller_in_cee.\", buyer country=\".$buyer_country_code.\", buyer in cee=\".$buyer_in_cee.\", idprod=\".$idprod.\", idprodfournprice=\".$idprodfournprice.\", SERVICE_ARE_ECOMMERCE_200238EC=\".(! empty($conf->global->SERVICES_ARE_ECOMMERCE_200238EC)?$conf->global->SERVICES_ARE_ECOMMERCE_200238EC:''));\n\n\t// If services are eServices according to EU Council Directive 2002/38/EC (http://ec.europa.eu/taxation_customs/taxation/vat/traders/e-commerce/article_1610_en.htm)\n\t// we use the buyer VAT.\n\tif (! empty($conf->global->SERVICE_ARE_ECOMMERCE_200238EC))\n\t{\n\t\tif ($seller_in_cee && $buyer_in_cee && ! $thirdparty_buyer->isACompany())\n\t\t{\n\t\t\t//print 'VATRULE 0';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_buyer,$idprodfournprice);\n\t\t}\n\t}\n\n\t// If seller does not use VAT\n\tif (! $seller_use_vat)\n\t{\n\t\t//print 'VATRULE 1';\n\t\treturn 0;\n\t}\n\n\t// Le test ci-dessus ne devrait pas etre necessaire. Me signaler l'exemple du cas juridique concerne si le test suivant n'est pas suffisant.\n\n\t// Si le (pays vendeur = pays acheteur) alors la TVA par defaut=TVA du produit vendu. Fin de regle.\n\tif (($seller_country_code == $buyer_country_code)\n\t|| (in_array($seller_country_code,array('FR,MC')) && in_array($buyer_country_code,array('FR','MC')))) // Warning ->country_code not always defined\n\t{\n\t\t//print 'VATRULE 2';\n\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t}\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (bien vendu = moyen de transports neuf comme auto, bateau, avion) alors TVA par defaut=0 (La TVA doit etre paye par l'acheteur au centre d'impots de son pays et non au vendeur). Fin de regle.\n\t// Not supported\n\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = entreprise) alors TVA par defaut=0. Fin de regle\n\t// Si (vendeur et acheteur dans Communaute europeenne) et (acheteur = particulier) alors TVA par defaut=TVA du produit vendu. Fin de regle\n\tif (($seller_in_cee && $buyer_in_cee))\n\t{\n\t\t$isacompany=$thirdparty_buyer->isACompany();\n\t\tif ($isacompany)\n\t\t{\n\t\t\t//print 'VATRULE 3';\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//print 'VATRULE 4';\n\t\t\treturn get_product_vat_for_country($idprod,$thirdparty_seller,$idprodfournprice);\n\t\t}\n\t}\n\n\t// Sinon la TVA proposee par defaut=0. Fin de regle.\n\t// Rem: Cela signifie qu'au moins un des 2 est hors Communaute europeenne et que le pays differe\n\t//print 'VATRULE 5';\n\treturn 0;\n}\n\n\n/**\n *\tFonction qui renvoie si tva doit etre tva percue recuperable\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param  int\t\t\t$idprod                 Id product\n *  @param\tint\t\t\t$idprodfournprice\t\tId supplier price for product\n *\t@return float       \t\t\t        \t0 or 1\n *  @see get_default_tva, get_default_localtax\n */\nfunction get_default_npr(Societe $thirdparty_seller, Societe $thirdparty_buyer, $idprod=0, $idprodfournprice=0)\n{\n\tglobal $db;\n\n\tif ($idprodfournprice > 0)\n\t{\n\t\tif (! class_exists('ProductFournisseur'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/fourn/class/fournisseur.product.class.php';\n\t\t$prodprice = new ProductFournisseur($db);\n\t\t$prodprice->fetch_product_fournisseur_price($idprodfournprice);\n\t\treturn $prodprice->fourn_tva_npr;\n\t}\n\telseif ($idprod > 0)\n\t{\n\t\tif (! class_exists('Product'))\n\t\t\trequire_once DOL_DOCUMENT_ROOT . '/product/class/product.class.php';\n\t\t$prod = new Product($db);\n\t\t$prod->fetch($idprod);\n\t\treturn $prod->tva_npr;\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tFunction that return localtax of a product line (according to seller, buyer and product vat rate)\n *   Si vendeur non assujeti a TVA, TVA par defaut=0. Fin de regle.\n *\t Si le (pays vendeur = pays acheteur) alors TVA par defaut=TVA du produit vendu. Fin de regle.\n *\t Sinon TVA proposee par defaut=0. Fin de regle.\n *\n *\t@param\tSociete\t\t$thirdparty_seller    \tThirdparty seller\n *\t@param  Societe\t\t$thirdparty_buyer   \tThirdparty buyer\n *  @param\tint\t\t\t$local\t\t\t\t\tLocaltax to process (1 or 2)\n *\t@param  int\t\t\t$idprod\t\t\t\t\tId product\n *\t@return integer        \t\t\t\t       \tlocaltax, -1 si ne peut etre determine\n *  @see get_default_tva, get_default_npr\n */\nfunction get_default_localtax($thirdparty_seller, $thirdparty_buyer, $local, $idprod=0)\n{\n\tglobal $mysoc;\n\n\tif (!is_object($thirdparty_seller)) return -1;\n\tif (!is_object($thirdparty_buyer)) return -1;\n\n\tif ($local==1) // Localtax 1\n\t{\n\t\tif ($mysoc->country_code == 'ES')\n\t\t{\n\t\t\tif (is_numeric($thirdparty_buyer->localtax1_assuj) && ! $thirdparty_buyer->localtax1_assuj) return 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Si vendeur non assujeti a Localtax1, localtax1 par default=0\n\t\t\tif (is_numeric($thirdparty_seller->localtax1_assuj) && ! $thirdparty_seller->localtax1_assuj) return 0;\n\t\t\tif (! is_numeric($thirdparty_seller->localtax1_assuj) && $thirdparty_seller->localtax1_assuj=='localtax1off') return 0;\n\t\t}\n\t}\n\telseif ($local==2) //I Localtax 2\n\t{\n\t\t// Si vendeur non assujeti a Localtax2, localtax2 par default=0\n\t\tif (is_numeric($thirdparty_seller->localtax2_assuj) && ! $thirdparty_seller->localtax2_assuj) return 0;\n\t\tif (! is_numeric($thirdparty_seller->localtax2_assuj) && $thirdparty_seller->localtax2_assuj=='localtax2off') return 0;\n\t}\n\n\tif ($thirdparty_seller->country_code == $thirdparty_buyer->country_code)\n\t{\n\t\treturn get_product_localtax_for_country($idprod, $local, $thirdparty_seller);\n\t}\n\n\treturn 0;\n}\n\n/**\n *\tReturn yes or no in current language\n *\n *\t@param\tstring\t$yesno\t\t\tValue to test (1, 'yes', 'true' or 0, 'no', 'false')\n *\t@param\tinteger\t$case\t\t\t1=Yes/No, 0=yes/no, 2=Disabled checkbox, 3=Disabled checkbox + Yes/No\n *\t@param\tint\t\t$color\t\t\t0=texte only, 1=Text is formated with a color font style ('ok' or 'error'), 2=Text is formated with 'ok' color.\n *\t@return\tstring\t\t\t\t\tHTML string\n */\nfunction yn($yesno, $case=1, $color=0)\n{\n\tglobal $langs;\n\t$result='unknown'; $classname='';\n\tif ($yesno == 1 || strtolower($yesno) == 'yes' || strtolower($yesno) == 'true') \t// A mettre avant test sur no a cause du == 0\n\t{\n\t\t$result=$langs->trans('yes');\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"Yes\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"1\" checked disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"1\" checked disabled> '.$result;\n\n\t\t$classname='ok';\n\t}\n\telseif ($yesno == 0 || strtolower($yesno) == 'no' || strtolower($yesno) == 'false')\n\t{\n\t\t$result=$langs->trans(\"no\");\n\t\tif ($case == 1 || $case == 3) $result=$langs->trans(\"No\");\n\t\tif ($case == 2) $result='<input type=\"checkbox\" value=\"0\" disabled>';\n\t\tif ($case == 3) $result='<input type=\"checkbox\" value=\"0\" disabled> '.$result;\n\n\t\tif ($color == 2) $classname='ok';\n\t\telse $classname='error';\n\t}\n\tif ($color) return '<font class=\"'.$classname.'\">'.$result.'</font>';\n\treturn $result;\n}\n\n\n/**\n *\tReturn a path to have a the directory according to object where files are stored.\n *  New usage:       $conf->module->multidir_output[$object->entity].'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)\n *         or:       $conf->module->dir_output.'/'.get_exdir(0, 0, 0, 1, $object, $modulepart)     if multidir_output not defined.\n *  Example our with new usage:       $object is invoice -> 'INYYMM-ABCD'\n *  Example our with old usage:       '015' with level 3->\"0/1/5/\", '015' with level 1->\"5/\", 'ABC-1' with level 3 ->\"0/0/1/\"\n *\n *\t@param\tstring\t$num            Id of object (deprecated, $object will be used in future)\n *\t@param  int\t\t$level\t\t    Level of subdirs to return (1, 2 or 3 levels). (deprecated, global option will be used in future)\n * \t@param\tint\t\t$alpha\t\t    0=Keep number only to forge path, 1=Use alpha part afer the - (By default, use 0). (deprecated, global option will be used in future)\n *  @param  int\t\t$withoutslash   0=With slash at end (except if '/', we return ''), 1=without slash at end\n *  @param\tObject\t$object\t\t\tObject\n *  @param\tstring\t$modulepart\t\tType of object ('invoice_supplier, 'donation', 'invoice', ...')\n *  @return\tstring\t\t\t\t\tDir to use ending. Example '' or '1/' or '1/2/'\n */\nfunction get_exdir($num, $level, $alpha, $withoutslash, $object, $modulepart)\n{\n\tglobal $conf;\n\n\t$path = '';\n\n\t$arrayforoldpath=array('cheque','user','category','holiday','supplier_invoice','invoice_supplier','mailing','supplier_payment');\n\tif (! empty($conf->global->PRODUCT_USE_OLD_PATH_FOR_PHOTO)) $arrayforoldpath[]='product';\n\tif (! empty($level) && in_array($modulepart, $arrayforoldpath))\n\t{\n\t\t// This part should be removed once all code is using \"get_exdir\" to forge path, with all parameters provided.\n\t\tif (empty($alpha)) $num = preg_replace('/([^0-9])/i','',$num);\n\t\telse $num = preg_replace('/^.*\\-/i','',$num);\n\t\t$num = substr(\"000\".$num, -$level);\n\t\tif ($level == 1) $path = substr($num,0,1);\n\t\tif ($level == 2) $path = substr($num,1,1).'/'.substr($num,0,1);\n\t\tif ($level == 3) $path = substr($num,2,1).'/'.substr($num,1,1).'/'.substr($num,0,1);\n\t}\n\telse\n\t{\n\t\t// TODO\n\t\t// We will enhance here a common way of forging path for document storage\n\t\t// Here, object->id, object->ref and modulepart are required.\n\t\tif (in_array($modulepart, array('thirdparty','contact','member','propal','proposal','commande','order','facture','invoice','shipment')))\n\t\t{\n\t\t\t$path=($object->ref?$object->ref:$object->id);\n\t\t}\n\t}\n\n\tif (empty($withoutslash) && ! empty($path)) $path.='/';\n\n\treturn $path;\n}\n\n/**\n *\tCreation of a directory (this can create recursive subdir)\n *\n *\t@param\tstring\t$dir\t\tDirectory to create (Separator must be '/'. Example: '/mydir/mysubdir')\n *\t@param\tstring\t$dataroot\tData root directory (To avoid having the data root in the loop. Using this will also lost the warning on first dir PHP has no permission when open_basedir is used)\n *  @param\tint\t\t$newmask\tMask for new file (Defaults to $conf->global->MAIN_UMASK or 0755 if unavailable). Example: '0444'\n *\t@return int         \t\t< 0 if KO, 0 = already exists, > 0 if OK\n */\nfunction dol_mkdir($dir, $dataroot='', $newmask=null)\n{\n\tglobal $conf;\n\n\tdol_syslog(\"functions.lib::dol_mkdir: dir=\".$dir,LOG_INFO);\n\n\t$dir_osencoded=dol_osencode($dir);\n\tif (@is_dir($dir_osencoded)) return 0;\n\n\t$nberr=0;\n\t$nbcreated=0;\n\n\t$ccdir='';\n\tif (! empty($dataroot)) {\n\t\t// Remove data root from loop\n\t\t$dir = str_replace($dataroot.'/', '', $dir);\n\t\t$ccdir = $dataroot.'/';\n\t}\n\n\t$cdir = explode(\"/\", $dir);\n\t$num=count($cdir);\n\tfor ($i = 0; $i < $num; $i++)\n\t{\n\t\tif ($i > 0) $ccdir .= '/'.$cdir[$i];\n\t\telse $ccdir .= $cdir[$i];\n\t\tif (preg_match(\"/^.:$/\",$ccdir,$regs)) continue;\t// Si chemin Windows incomplet, on poursuit par rep suivant\n\n\t\t// Attention, le is_dir() peut echouer bien que le rep existe.\n\t\t// (ex selon config de open_basedir)\n\t\tif ($ccdir)\n\t\t{\n\t\t\t$ccdir_osencoded=dol_osencode($ccdir);\n\t\t\tif (! @is_dir($ccdir_osencoded))\n\t\t\t{\n\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' does not exists or is outside open_basedir PHP setting.\",LOG_DEBUG);\n\n\t\t\t\tumask(0);\n\t\t\t\t$dirmaskdec=octdec($newmask);\n\t\t\t\tif (empty($newmask)) {\n\t\t\t\t\t$dirmaskdec = empty( $conf->global->MAIN_UMASK ) ? octdec( '0755' ) : octdec( $conf->global->MAIN_UMASK );\n\t\t\t\t}\n\t\t\t\t$dirmaskdec |= octdec('0111');  // Set x bit required for directories\n\t\t\t\tif (! @mkdir($ccdir_osencoded, $dirmaskdec))\n\t\t\t\t{\n\t\t\t\t\t// Si le is_dir a renvoye une fausse info, alors on passe ici.\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Fails to create directory '\".$ccdir.\"' or directory already exists.\",LOG_WARNING);\n\t\t\t\t\t$nberr++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdol_syslog(\"functions.lib::dol_mkdir: Directory '\".$ccdir.\"' created\",LOG_DEBUG);\n\t\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignore\n\t\t\t\t\t$nbcreated++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$nberr=0;\t// On remet a zero car si on arrive ici, cela veut dire que les echecs precedents peuvent etre ignores\n\t\t\t}\n\t\t}\n\t}\n\treturn ($nberr ? -$nberr : $nbcreated);\n}\n\n\n/**\n *\tReturn picto saying a field is required\n *\n *\t@return  string\t\tChaine avec picto obligatoire\n */\nfunction picto_required()\n{\n\treturn '<span class=\"fieldrequired\">*</span>';\n}\n\n\n/**\n *\tClean a string from all HTML tags and entities.\n *  This function differs from strip_tags because:\n *  - <br> are replace with \\n\n *  - if entities are found, they are decoded before the strip\n *  - you can decide to convert line feed into spaces\n *\n *\t@param\tstring\t$stringtoclean\t\tString to clean\n *\t@param\tinteger\t$removelinefeed\t\t1=Replace also new lines by a space, 0=Only last one are removed\n *  @param  string\t$pagecodeto      \tEncoding of input/output string\n *\t@return string\t    \t\t\t\tString cleaned\n *\n * \t@see\tdol_escape_htmltag strip_tags\n */\nfunction dol_string_nohtmltag($stringtoclean,$removelinefeed=1,$pagecodeto='UTF-8')\n{\n\t// TODO Try to replace with  strip_tags($stringtoclean)\n\t$pattern = \"/<[^<>]+>/\";\n\t$stringtoclean = preg_replace('/<br[^>]*>/', \"\\n\", $stringtoclean);\n\t$temp = dol_html_entity_decode($stringtoclean,ENT_COMPAT,$pagecodeto);\n\n\t// Exemple of $temp: <a href=\"/myurl\" title=\"<u>A title</u>\">0000-021</a>\n\t$temp = preg_replace($pattern,\"\",$temp);    // pass 1\n\t// $temp after pass 1: <a href=\"/myurl\" title=\"A title\">0000-021\n\t$temp = preg_replace($pattern,\"\",$temp);    // pass 2\n\t// $temp after pass 2: 0000-021\n\n\t// Supprime aussi les retours\n\tif ($removelinefeed) $temp=str_replace(array(\"\\r\\n\",\"\\r\",\"\\n\"),\" \",$temp);\n\n\t// et les espaces doubles\n\twhile(strpos($temp,\"  \"))\n\t{\n\t\t$temp = str_replace(\"  \",\" \",$temp);\n\t}\n\n\treturn trim($temp);\n}\n\n\n/**\n * Return first line of text. Cut will depends if content is HTML or not.\n *\n * @param \tstring\t$text\t\tInput text\n * @param\tint\t\t$nboflines  Nb of lines to get (default is 1 = first line only)\n * @return\tstring\t\t\t\tOutput text\n * @see dol_nboflines_bis, dol_string_nohtmltag, dol_escape_htmltag\n */\nfunction dolGetFirstLineOfText($text, $nboflines=1)\n{\n\tif ($nboflines == 1)\n\t{\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$firstline=preg_replace('/<br[^>]*>.*$/s','',$text);\t\t// The s pattern modifier means the . can match newline characters\n\t\t\t$firstline=preg_replace('/<div[^>]*>.*$/s','',$firstline);\t// The s pattern modifier means the . can match newline characters\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$firstline=preg_replace('/[\\n\\r].*/','',$text);\n\t\t}\n\t\treturn $firstline.((strlen($firstline) != strlen($text))?'...':'');\n\t}\n\telse\n\t{\n\t\t$ishtml=0;\n\t\tif (dol_textishtml($text))\n\t\t{\n\t\t\t$text=preg_replace('/\\n/','',$text);\n\t\t\t$ishtml=1;\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\t\t}\n\n\t\t$text = strtr($text, $repTable);\n\t\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\t\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\t$firstline='';\n\t\t$i=0;\n\t\t$nba = count($a);\t// 2x nb of lines in $a because $a contains also a line for each new line separator\n\t\twhile (($i < $nba) && ($i < ($nboflines * 2)))\n\t\t{\n\t\t\tif ($i % 2 == 0) $firstline .= $a[$i];\n\t\t\telseif (($i < (($nboflines * 2) - 1)) && ($i < ($nba - 1))) $firstline .= ($ishtml?\"<br>\\n\":\"\\n\");\n\t\t\t$i++;\n\t\t}\n\t\tunset($a);\n\t\treturn $firstline.(($i < $nba)?'...':'');\n\t}\n}\n\n\n/**\n * Replace CRLF in string with a HTML BR tag\n *\n * @param\tstring\t$stringtoencode\t\tString to encode\n * @param\tint     $nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br\n * @param   bool\t$forxml             false=Use <br>, true=Use <br />\n * @return\tstring\t\t\t\t\t\tString encoded\n * @see dol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nl2br($stringtoencode,$nl2brmode=0,$forxml=false)\n{\n\tif (!$nl2brmode) {\n\t\treturn nl2br($stringtoencode, $forxml);\n\t} else {\n\t\t$ret=preg_replace('/(\\r\\n|\\r|\\n)/i', ($forxml?'<br />':'<br>'), $stringtoencode);\n\t\treturn $ret;\n\t}\n}\n\n\n/**\n *\tThis function is called to encode a string into a HTML string but differs from htmlentities because\n * \ta detection is done before to see if text is already HTML or not. Also, all entities but &,<,> are converted.\n *  This permits to encode special chars to entities with no double encoding for already encoded HTML strings.\n * \tThis function also remove last EOL or BR if $removelasteolbr=1 (default).\n *  For PDF usage, you can show text by 2 ways:\n *              - writeHTMLCell -> param must be encoded into HTML.\n *              - MultiCell -> param must not be encoded into HTML.\n *              Because writeHTMLCell convert also \\n into <br>, if function\n *              is used to build PDF, nl2brmode must be 1.\n *\n *\t@param\tstring\t$stringtoencode\t\tString to encode\n *\t@param\tint\t\t$nl2brmode\t\t\t0=Adding br before \\n, 1=Replacing \\n by br (for use with FPDF writeHTMLCell function for example)\n *  @param  string\t$pagecodefrom       Pagecode stringtoencode is encoded\n *  @param\tint\t\t$removelasteolbr\t1=Remove last br or lasts \\n (default), 0=Do nothing\n *  @return\tstring\t\t\t\t\t\tString encoded\n */\nfunction dol_htmlentitiesbr($stringtoencode, $nl2brmode=0, $pagecodefrom='UTF-8', $removelasteolbr=1)\n{\n\t$newstring=$stringtoencode;\n\tif (dol_textishtml($stringtoencode))\t// Check if text is already HTML or not\n\t{\n\t\t$newstring=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i','<br>',$newstring);\t// Replace \"<br type=\"_moz\" />\" by \"<br>\". It's same and avoid pb with FPDF.\n\t\tif ($removelasteolbr) $newstring=preg_replace('/<br>$/i','',$newstring);\t// Remove last <br> (remove only last one)\n\t\t$newstring=strtr($newstring,array('&'=>'__and__','<'=>'__lt__','>'=>'__gt__','\"'=>'__dquot__'));\n\t\t$newstring=dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom);\t// Make entity encoding\n\t\t$newstring=strtr($newstring,array('__and__'=>'&','__lt__'=>'<','__gt__'=>'>','__dquot__'=>'\"'));\n\t}\n\telse\n\t{\n\t\tif ($removelasteolbr) $newstring=preg_replace('/(\\r\\n|\\r|\\n)$/i','',$newstring);\t// Remove last \\n (may remove several)\n\t\t$newstring=dol_nl2br(dol_htmlentities($newstring,ENT_COMPAT,$pagecodefrom),$nl2brmode);\n\t}\n\t// Other substitutions that htmlentities does not do\n\t//$newstring=str_replace(chr(128),'&euro;',$newstring);\t// 128 = 0x80. Not in html entity table.     // Seems useles with TCPDF. Make bug with UTF8 languages\n\treturn $newstring;\n}\n\n/**\n *\tThis function is called to decode a HTML string (it decodes entities and br tags)\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@param\tstring\t$pagecodeto\t\t\tPage code for result\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlentitiesbr_decode($stringtodecode,$pagecodeto='UTF-8')\n{\n\t$ret=dol_html_entity_decode($stringtodecode,ENT_COMPAT,$pagecodeto);\n\t$ret=preg_replace('/'.\"\\r\\n\".'<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"<br>\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\r\\n\".'/i',\"\\r\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>'.\"\\n\".'/i',\"\\n\",$ret);\n\t$ret=preg_replace('/<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>/i',\"\\n\",$ret);\n\treturn $ret;\n}\n\n/**\n *\tThis function remove all ending \\n and br at end\n *\n *\t@param\tstring\t$stringtodecode\t\tString to decode\n *\t@return\tstring\t\t\t\t\t\tString decoded\n */\nfunction dol_htmlcleanlastbr($stringtodecode)\n{\n\t$ret=preg_replace('/(<br>|<br(\\s[\\sa-zA-Z_=\"]*)?\\/?>|'.\"\\n\".'|'.\"\\r\".')+$/i',\"\",$stringtodecode);\n\treturn $ret;\n}\n\n/**\n * Replace html_entity_decode functions to manage errors\n *\n * @param   string\t$a\t\tOperand a\n * @param   string\t$b\t\tOperand b (ENT_QUOTES=convert simple and double quotes)\n * @param   string\t$c\t\tOperand c\n * @return  string\t\t\tString decoded\n */\nfunction dol_html_entity_decode($a,$b,$c='UTF-8')\n{\n\treturn html_entity_decode($a,$b,$c);\n}\n\n/**\n * Replace htmlentities functions.\n * Goal of this function is to be sure to have default values of htmlentities that match what we need.\n *\n * @param   string  $string         The input string to encode\n * @param   int     $flags          Flags (see PHP doc above)\n * @param   string  $encoding       Encoding page code\n * @param   bool    $double_encode  When double_encode is turned off, PHP will not encode existing html entities\n * @return  string  $ret            Encoded string\n */\nfunction dol_htmlentities($string, $flags=null, $encoding='UTF-8', $double_encode=false)\n{\n\treturn htmlentities($string, $flags, $encoding, $double_encode);\n}\n\n/**\n *\tCheck if a string is a correct iso string\n *\tIf not, it will we considered not HTML encoded even if it is by FPDF.\n *\tExample, if string contains euro symbol that has ascii code 128\n *\n *\t@param\tstring\t$s      String to check\n *\t@return\tint     \t\t0 if bad iso, 1 if good iso\n */\nfunction dol_string_is_good_iso($s)\n{\n\t$len=dol_strlen($s);\n\t$ok=1;\n\tfor($scursor=0;$scursor<$len;$scursor++)\n\t{\n\t\t$ordchar=ord($s{$scursor});\n\t\t//print $scursor.'-'.$ordchar.'<br>';\n\t\tif ($ordchar < 32 && $ordchar != 13 && $ordchar != 10) { $ok=0; break; }\n\t\tif ($ordchar > 126 && $ordchar < 160) { $ok=0; break; }\n\t}\n\treturn $ok;\n}\n\n\n/**\n *\tReturn nb of lines of a clear text\n *\n *\t@param\tstring\t$s\t\t\tString to check\n * \t@param\tint     $maxchar\tNot yet used\n *\t@return\tint\t\t\t\t\tNumber of lines\n *  @see\tdol_nboflines_bis, dolGetFirstLineOfText\n */\nfunction dol_nboflines($s,$maxchar=0)\n{\n\tif ($s == '') return 0;\n\t$arraystring=explode(\"\\n\",$s);\n\t$nb=count($arraystring);\n\n\treturn $nb;\n}\n\n\n/**\n *\tReturn nb of lines of a formated text with \\n and <br> (WARNING: string must not have mixed \\n and br separators)\n *\n *\t@param\tstring\t$text      \t\tText\n *\t@param\tint\t\t$maxlinesize  \tLargeur de ligne en caracteres (ou 0 si pas de limite - defaut)\n * \t@param\tstring\t$charset\t\tGive the charset used to encode the $text variable in memory.\n *\t@return int\t\t\t\t\t\tNumber of lines\n *\t@see\tdol_nboflines, dolGetFirstLineOfText\n */\nfunction dol_nboflines_bis($text,$maxlinesize=0,$charset='UTF-8')\n{\n\t$repTable = array(\"\\t\" => \" \", \"\\n\" => \"<br>\", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\tif (dol_textishtml($text)) $repTable = array(\"\\t\" => \" \", \"\\n\" => \" \", \"\\r\" => \" \", \"\\0\" => \" \", \"\\x0B\" => \" \");\n\n\t$text = strtr($text, $repTable);\n\tif ($charset == 'UTF-8') { $pattern = '/(<br[^>]*>)/Uu'; }\t// /U is to have UNGREEDY regex to limit to one html tag. /u is for UTF8 support\n\telse $pattern = '/(<br[^>]*>)/U';\t\t\t\t\t\t\t// /U is to have UNGREEDY regex to limit to one html tag.\n\t$a = preg_split($pattern, $text, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t$nblines = (int) floor((count($a)+1)/2);\n\t// count possible auto line breaks\n\tif($maxlinesize)\n\t{\n\t\tforeach ($a as $line)\n\t\t{\n\t\t\tif (dol_strlen($line)>$maxlinesize)\n\t\t\t{\n\t\t\t\t//$line_dec = html_entity_decode(strip_tags($line));\n\t\t\t\t$line_dec = html_entity_decode($line);\n\t\t\t\tif(dol_strlen($line_dec)>$maxlinesize)\n\t\t\t\t{\n\t\t\t\t\t$line_dec=wordwrap($line_dec,$maxlinesize,'\\n',true);\n\t\t\t\t\t$nblines+=substr_count($line_dec,'\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunset($a);\n\treturn $nblines;\n}\n\n/**\n *\t Same function than microtime in PHP 5 but compatible with PHP4\n *\n * @return\t\tfloat\t\tTime (millisecondes) with microsecondes in decimal part\n * @deprecated Dolibarr does not support PHP4, you should use native function\n * @see microtime()\n */\nfunction dol_microtime_float()\n{\n\tdol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\n\n\treturn microtime(true);\n}\n\n/**\n *\tReturn if a text is a html content\n *\n *\t@param\tstring\t$msg\t\tContent to check\n *\t@param\tint\t\t$option\t\t0=Full detection, 1=Fast check\n *\t@return\tboolean\t\t\t\ttrue/false\n *\t@see\tdol_concatdesc\n */\nfunction dol_textishtml($msg,$option=0)\n{\n\tif ($option == 1)\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<br/i',$msg))\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (preg_match('/<html/i',$msg))\t\t\t\treturn true;\n\t\telseif (preg_match('/<body/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/<(b|em|i|u)>/i',$msg))\t\treturn true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)>/i',$msg)) \t  return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*>/i',$msg)) return true;\n\t\telseif (preg_match('/<(br|div|font|li|p|span|strong|table)\\s+[^<>\\/]*\\/>/i',$msg)) return true;\n\t\telseif (preg_match('/<img\\s+[^<>]*src[^<>]*>/i',$msg)) return true;\t// must accept <img src=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<a\\s+[^<>]*href[^<>]*>/i',$msg)) return true;\t// must accept <a href=\"http://example.com/aaa.png\" />\n\t\telseif (preg_match('/<h[0-9]>/i',$msg))\t\t\treturn true;\n\t\telseif (preg_match('/&[A-Z0-9]{1,6};/i',$msg))\treturn true;    // Html entities names (http://www.w3schools.com/tags/ref_entities.asp)\n\t\telseif (preg_match('/&#[0-9]{2,3};/i',$msg))\treturn true;    // Html entities numbers (http://www.w3schools.com/tags/ref_entities.asp)\n\t\treturn false;\n\t}\n}\n\n/**\n *  Concat 2 descriptions with a new line between them (second operand after first one with appropriate new line separator)\n *  text1 html + text2 html => text1 + '<br>' + text2\n *  text1 html + text2 txt  => text1 + '<br>' + dol_nl2br(text2)\n *  text1 txt  + text2 html => dol_nl2br(text1) + '<br>' + text2\n *  text1 txt  + text2 txt  => text1 + '\\n' + text2\n *\n *  @param\tstring\t$text1\t\tText 1\n *  @param\tstring\t$text2\t\tText 2\n *  @param  bool\t$forxml     false=Use <br>, true=Use <br />\n *  @return\tstring\t\t\t\tText 1 + new line + Text2\n *  @see    dol_textishtml\n */\nfunction dol_concatdesc($text1,$text2,$forxml=false)\n{\n\t$ret='';\n\t$ret.= (! dol_textishtml($text1) && dol_textishtml($text2))?dol_nl2br($text1, 0, $forxml):$text1;\n\t$ret.= (! empty($text1) && ! empty($text2)) ? ((dol_textishtml($text1) || dol_textishtml($text2))?($forxml?\"<br \\>\\n\":\"<br>\\n\") : \"\\n\") : \"\";\n\t$ret.= (dol_textishtml($text1) && ! dol_textishtml($text2))?dol_nl2br($text2, 0, $forxml):$text2;\n\treturn $ret;\n}\n\n\n/**\n * Return array of possible common substitutions. This includes several families like: 'system', 'mycompany', 'object', 'objectamount', 'date', 'user'\n *\n * @param\tTranslate\t$outputlangs\tOutput language\n * @param   int         $onlykey        1=Do not calculate some heavy values of keys (performance enhancement when we need only the keys), 2=Values are trunc and html sanitized (to use for help tooltip)\n * @param   array       $exclude        Array of family keys we want to exclude. For example array('system', 'mycompany', 'object', 'objectamount', 'date', 'user', ...)\n * @param   Object      $object         Object for keys on object\n * @return\tarray\t\t\t\t\t\tArray of substitutions\n * @see setSubstitFromObject\n */\nfunction getCommonSubstitutionArray($outputlangs, $onlykey=0, $exclude=null, $object=null)\n{\n\tglobal $db, $conf, $mysoc, $user;\n\n\t$substitutionarray=array();\n\n\tif (empty($exclude) || ! in_array('system', $exclude))\n\t{\n\t\t$substitutionarray['__(AnyTranslationKey)__']=$outputlangs->trans('TranslationOfKey');\n\t\t$substitutionarray['__[AnyConstantKey]__']=$outputlangs->trans('ValueOfConstant');\n\t\t$substitutionarray['__DOL_MAIN_URL_ROOT__']=DOL_MAIN_URL_ROOT;\n\t}\n\tif ((empty($exclude) || ! in_array('mycompany', $exclude)) && is_object($mysoc))\n\t{\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__MYCOMPANY_NAME__'    => $mysoc->name,\n\t\t\t'__MYCOMPANY_EMAIL__'   => $mysoc->email,\n\t\t\t'__MYCOMPANY_PROFID1__' => $mysoc->idprof1,\n\t\t\t'__MYCOMPANY_PROFID2__' => $mysoc->idprof2,\n\t\t\t'__MYCOMPANY_PROFID3__' => $mysoc->idprof3,\n\t\t\t'__MYCOMPANY_PROFID4__' => $mysoc->idprof4,\n\t\t\t'__MYCOMPANY_PROFID5__' => $mysoc->idprof5,\n\t\t\t'__MYCOMPANY_PROFID6__' => $mysoc->idprof6,\n\t\t\t'__MYCOMPANY_CAPITAL__' => $mysoc->capital,\n\t\t\t'__MYCOMPANY_FULLADDRESS__' => $mysoc->getFullAddress(1, ', '),\n\t\t\t'__MYCOMPANY_ADDRESS__' => $mysoc->address,\n\t\t\t'__MYCOMPANY_ZIP__'     => $mysoc->zip,\n\t\t\t'__MYCOMPANY_TOWN__'    => $mysoc->town,\n\t\t\t'__MYCOMPANY_COUNTRY__'    => $mysoc->country,\n\t\t\t'__MYCOMPANY_COUNTRY_ID__' => $mysoc->country_id\n\t\t));\n\t}\n\tif (($onlykey || is_object($object)) && (empty($exclude) || ! in_array('object', $exclude)))\n\t{\n\t\tif ($onlykey)\n\t\t{\n\t\t\t$substitutionarray['__ID__'] = '__ID__';\n\t\t\t$substitutionarray['__REF__'] = '__REF__';\n\t\t\t$substitutionarray['__REFCLIENT__'] = '__REFCLIENT__';\n\t\t\t$substitutionarray['__REFSUPPLIER__'] = '__REFSUPPLIER__';\n\t\t\t$substitutionarray['__EXTRAFIELD_XXX__'] = '__EXTRAFIELD_XXX__';\n\n\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = '__THIRDPARTY_ID__';\n\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = '__THIRDPARTY_NAME__';\n\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = '__THIRDPARTY_EMAIL__';\n\n\t\t\tif (is_object($object) && $object->element == 'shipping')\n\t\t\t{\n\t\t\t\t$substitutionarray['__MEMBER_CIVILITY__'] = '__MEMBER_CIVILITY__';\n\t\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__'] = '__MEMBER_FIRSTNAME__';\n\t\t\t\t$substitutionarray['__MEMBER_LASTNAME__'] = '__MEMBER_LASTNAME__';\n\t\t\t}\n\t\t\t$substitutionarray['__PROJECT_ID__'] = '__PROJECT_ID__';\n\t\t\t$substitutionarray['__PROJECT_REF__'] = '__PROJECT_REF__';\n\t\t\t$substitutionarray['__PROJECT_NAME__'] = '__PROJECT_NAME__';\n\n\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = 'Highest date planned for a service start';\n\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = 'Highest date and hour planned for service start';\n\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = 'Lowest data for planned expiration of service';\n\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = 'Lowest date and hour for planned expiration of service';\n\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = 'LinkToPayOnlineIfApplicable';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT__'] = 'Security key (if key is not unique per record)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_MEMBER__'] = 'Security key for payment on a member subscription (one key per member)';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_ORDER__'] = 'Security key for payment on an order';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_INVOICE__'] = 'Security key for payment on an invoice';\n\t\t\t$substitutionarray['__SECUREKEYPAYMENT_CONTRACTLINE__'] = 'Security key for payment on a a service';\n\n\t\t\tif (is_object($object) && $object->element == 'shipping')\n\t\t\t{\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__']='Shipping tacking number';\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__']='Shipping tracking url';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$substitutionarray['__ID__'] = $object->id;\n\t\t\t$substitutionarray['__REF__'] = $object->ref;\n\t\t\t$substitutionarray['__REFCLIENT__'] = (isset($object->ref_client) ? $object->ref_client : (isset($object->ref_customer) ? $object->ref_customer : ''));\n\t\t\t$substitutionarray['__REFSUPPLIER__'] = (isset($object->ref_supplier) ? $object->ref_supplier : '');\n\n\t\t\t// TODO USe this ?\n\t\t\t$msgishtml = 0;\n\n\t\t\t$birthday = dol_print_date($object->birth,'day');\n\n\t\t\tif (method_exists($object, 'getCivilityLabel')) $substitutionarray['__MEMBER_CIVILITY__'] = $object->getCivilityLabel();\n\t\t\t$substitutionarray['__MEMBER_FIRSTNAME__']=$msgishtml?dol_htmlentitiesbr($object->firstname):$object->firstname;\n\t\t\t$substitutionarray['__MEMBER_LASTNAME__']=$msgishtml?dol_htmlentitiesbr($object->lastname):$object->lastname;\n\t\t\tif (method_exists($object, 'getFullName')) $substitutionarray['__MEMBER_FULLNAME__']=$msgishtml?dol_htmlentitiesbr($object->getFullName($outputlangs)):$object->getFullName($outputlangs);\n\t\t\t$substitutionarray['__MEMBER_COMPANY__']=$msgishtml?dol_htmlentitiesbr($object->societe):$object->societe;\n\t\t\t$substitutionarray['__MEMBER_ADDRESS__']=$msgishtml?dol_htmlentitiesbr($object->address):$object->address;\n\t\t\t$substitutionarray['__MEMBER_ZIP__']=$msgishtml?dol_htmlentitiesbr($object->zip):$object->zip;\n\t\t\t$substitutionarray['__MEMBER_TOWN__']=$msgishtml?dol_htmlentitiesbr($object->town):$object->town;\n\t\t\t$substitutionarray['__MEMBER_COUNTRY__']=$msgishtml?dol_htmlentitiesbr($object->country):$object->country;\n\t\t\t$substitutionarray['__MEMBER_EMAIL__']=$msgishtml?dol_htmlentitiesbr($object->email):$object->email;\n\t\t\t$substitutionarray['__MEMBER_BIRTH__']=$msgishtml?dol_htmlentitiesbr($birthday):$birthday;\n\t\t\t$substitutionarray['__MEMBER_PHOTO__']=$msgishtml?dol_htmlentitiesbr($object->photo):$object->photo;\n\t\t\t$substitutionarray['__MEMBER_LOGIN__']=$msgishtml?dol_htmlentitiesbr($object->login):$object->login;\n\t\t\t$substitutionarray['__MEMBER_PASSWORD__']=$msgishtml?dol_htmlentitiesbr($object->pass):$object->pass;\n\t\t\t$substitutionarray['__MEMBER_PHONE__']=$msgishtml?dol_htmlentitiesbr($object->phone):$object->phone;\n\t\t\t$substitutionarray['__MEMBER_PHONEPRO__']=$msgishtml?dol_htmlentitiesbr($object->phone_perso):$object->phone_perso;\n\t\t\t$substitutionarray['__MEMBER_PHONEMOBILE__']=$msgishtml?dol_htmlentitiesbr($object->phone_mobile):$object->phone_mobile;\n\n\t\t\tif (is_object($object) && $object->element == 'societe')\n\t\t\t{\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object)?$object->id:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object)?$object->name:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object)?$object->name_alias:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object)?$object->email:'');\n\t\t\t}\n\t\t\telseif (is_object($object->thirdparty) && $object->thirdparty->id > 0)\n\t\t\t{\n\t\t\t\t$substitutionarray['__THIRDPARTY_ID__'] = (is_object($object->thirdparty)?$object->thirdparty->id:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME__'] = (is_object($object->thirdparty)?$object->thirdparty->name:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_NAME_ALIAS__'] = (is_object($object->thirdparty)?$object->thirdparty->name_alias:'');\n\t\t\t\t$substitutionarray['__THIRDPARTY_EMAIL__'] = (is_object($object->thirdparty)?$object->thirdparty->email:'');\n\t\t\t}\n\n\t\t\tif (is_object($object->projet) && $object->projet->id > 0)\n\t\t\t{\n\t\t\t\t$substitutionarray['__PROJECT_ID__'] = (is_object($object->projet)?$object->projet->id:'');\n\t\t\t\t$substitutionarray['__PROJECT_REF__'] = (is_object($object->projet)?$object->projet->ref:'');\n\t\t\t\t$substitutionarray['__PROJECT_NAME__'] = (is_object($object->projet)?$object->projet->title:'');\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'shipping')\n\t\t\t{\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUM__']=$object->tracking_number;\n\t\t\t\t$substitutionarray['__SHIPPINGTRACKNUMURL__']=$object->tracking_url;\n\t\t\t}\n\n\t\t\tif (is_object($object) && $object->element == 'contrat' && is_array($object->lines))\n\t\t\t{\n\t\t\t\t$dateplannedstart='';\n\t\t\t\t$datenextexpiration='';\n\t\t\t\tforeach($object->lines as $line)\n\t\t\t\t{\n\t\t\t\t\tif ($line->date_ouverture_prevue > $dateplannedstart) $dateplannedstart = $line->date_ouverture_prevue;\n\t\t\t\t\tif ($line->statut == 4 && $line->date_fin_prevue && (! $datenextexpiration || $line->date_fin_prevue < $datenextexpiration)) $datenextexpiration = $line->date_fin_prevue;\n\t\t\t\t}\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATE__'] = dol_print_date($dateplannedstart, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_HIGHEST_PLANNED_START_DATETIME__'] = dol_print_date($dateplannedstart, 'standard');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATE__'] = dol_print_date($datenextexpiration, 'dayrfc');\n\t\t\t\t$substitutionarray['__CONTRACT_LOWEST_EXPIRATION_DATETIME__'] = dol_print_date($datenextexpiration, 'standard');\n\t\t\t}\n\n\t\t\t// Create dynamic tags for __EXTRAFIELD_FIELD__\n\t\t\tif ($object->table_element && $object->id > 0)\n\t\t\t{\n\t\t\t\t$extrafieldstmp = new ExtraFields($db);\n\t\t\t\t$extralabels = $extrafieldstmp->fetch_name_optionals_label($object->table_element, true);\n\t\t\t\t$object->fetch_optionals($object->id, $extralabels);\n\t\t\t\tforeach ($extrafieldstmp->attribute_label as $key => $label) {\n\t\t\t\t\t$substitutionarray['__EXTRAFIELD_' . strtoupper($key) . '__'] = $object->array_options['options_' . $key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$substitutionarray['__ONLINE_PAYMENT_URL__'] = 'TODO';\n\t\t}\n\t}\n\tif (empty($exclude) || ! in_array('objectamount', $exclude))\n\t{\n\t\t$substitutionarray['__DATE_YMD__']        = is_object($object)?(isset($object->date) ? dol_print_date($object->date, 'day', 0, $outputlangs) : '') : '';\n\t\t$substitutionarray['__DATE_DUE_YMD__']    = is_object($object)?(isset($object->date_lim_reglement)? dol_print_date($object->date_lim_reglement, 'day', 0, $outputlangs) : '') : '';\n\t\t$substitutionarray['__AMOUNT__']          = is_object($object)?$object->total_ttc:'';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX__'] = is_object($object)?$object->total_ht:'';\n\t\t$substitutionarray['__AMOUNT_VAT__']      = is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n \t\tif ($onlykey != 2 || $mysoc->useLocalTax(1)) $substitutionarray['__AMOUNT_TAX2__']     = is_object($object)?($object->total_localtax1?$object->total_localtax1:$object->total_localtax1):'';\n\t\tif ($onlykey != 2 || $mysoc->useLocalTax(2)) $substitutionarray['__AMOUNT_TAX3__']     = is_object($object)?($object->total_localtax2?$object->total_localtax2:$object->total_localtax2):'';\n\n\t\t/* TODO Add key for multicurrency\n    \t$substitutionarray['__AMOUNT_FORMATED__']          = is_object($object)?price($object->total_ttc, 0, $outputlangs, 0, 0, -1, $conf->currency_code):'';\n\t\t$substitutionarray['__AMOUNT_EXCL_TAX_FORMATED__'] = is_object($object)?price($object->total_ht, 0, $outputlangs, 0, 0, -1, $conf->currency_code):'';\n        $substitutionarray['__AMOUNT_VAT_FORMATED__']      = is_object($object)?($object->total_vat?price($object->total_vat, 0, $outputlangs, 0, 0, -1, $conf->currency_code):price($object->total_tva, 0, $outputlangs, 0, 0, -1, $conf->currency_code)):'';\n\t\t*/\n\t\t// For backward compatibility\n\t\tif ($onlykey != 2)\n\t\t{\n\t\t\t$substitutionarray['__TOTAL_TTC__']    = is_object($object)?$object->total_ttc:'';\n\t\t\t$substitutionarray['__TOTAL_HT__']     = is_object($object)?$object->total_ht:'';\n\t\t\t$substitutionarray['__TOTAL_VAT__']    = is_object($object)?($object->total_vat?$object->total_vat:$object->total_tva):'';\n\t\t}\n\t}\n\n\tif (empty($exclude) || ! in_array('date', $exclude))\n\t{\n\t\tinclude_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\n\n\t\t$tmp=dol_getdate(dol_now(), true);\n\t\t$tmp2=dol_get_prev_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp3=dol_get_prev_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp4=dol_get_next_day($tmp['mday'], $tmp['mon'], $tmp['year']);\n\t\t$tmp5=dol_get_next_month($tmp['mday'], $tmp['mon'], $tmp['year']);\n\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__DAY__' => (string) $tmp['mday'],\n\t\t\t'__MONTH__' => (string) $tmp['mon'],\n\t\t\t'__YEAR__' => (string) $tmp['year'],\n\t\t\t'__PREVIOUS_DAY__' => (string) $tmp2['day'],\n\t\t\t'__PREVIOUS_MONTH__' => (string) $tmp3['month'],\n\t\t\t'__PREVIOUS_YEAR__' => (string) ($tmp['year'] - 1),\n\t\t\t'__NEXT_DAY__' => (string) $tmp4['day'],\n\t\t\t'__NEXT_MONTH__' => (string) $tmp5['month'],\n\t\t\t'__NEXT_YEAR__' => (string) ($tmp['year'] + 1),\n\t\t));\n\t}\n\n\tif (empty($exclude) || ! in_array('user', $exclude))\n\t{\n\t\t// Add SIGNATURE into substitutionarray first, so, when we will make the substitution,\n\t\t// this will also replace var found into content of signature\n\t\t$signature = $user->signature;\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__USER_SIGNATURE__' => (string) (($signature && empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN)) ? ($onlykey == 2 ? dol_trunc(dol_string_nohtmltag($signature), 30) : $signature) : '')\n\t\t)\n\t\t\t);\n\t\t// For backward compatibility\n\t\tif ($onlykey != 2)\n\t\t{\n\t\t\t$substitutionarray['__SIGNATURE__'] = (string) (($signature && empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN)) ? ($onlykey == 2 ? dol_trunc(dol_string_nohtmltag($signature), 30) : $signature) : '');\n\t\t}\n\n\t\t$substitutionarray=array_merge($substitutionarray, array(\n\t\t\t'__USER_ID__' => (string) $user->id,\n\t\t\t'__USER_LOGIN__' => (string) $user->login,\n\t\t\t'__USER_LASTNAME__' => (string) $user->lastname,\n\t\t\t'__USER_FIRSTNAME__' => (string) $user->firstname,\n\t\t\t'__USER_FULLNAME__' => (string) $user->getFullName($outputlangs),\n\t\t\t'__USER_SUPERVISOR_ID__' => (string) ($user->fk_user ? $user->fk_user : '0')\n\t\t\t)\n\t\t);\n\t}\n\tif (! empty($conf->multicompany->enabled))\n\t{\n\t\t$substitutionarray=array_merge($substitutionarray, array('__ENTITY_ID__' => $conf->entity));\n\t}\n\n\treturn $substitutionarray;\n}\n\n/**\n *  Make substitution into a text string, replacing keys with vals from $substitutionarray (oldval=>newval),\n *  and texts like __(TranslationKey|langfile)__ and __[ConstantKey]__ are also replaced.\n *  Example of usage:\n *  $substitutionarray = getCommonSubstitutionArray($langs, 0, null, $thirdparty);\n *  complete_substitutions_array($substitutionarray, $langs, $thirdparty);\n *  $mesg = make_substitutions($mesg, $substitutionarray, $langs);\n *\n *  @param\tstring\t\t$text\t      \t\t\tSource string in which we must do substitution\n *  @param  array\t\t$substitutionarray\t\tArray with key->val to substitute. Example: array('__MYKEY__' => 'MyVal', ...)\n *  @param\tTranslate\t$outputlangs\t\t\tOutput language\n * \t@return string  \t\t    \t\t\t\tOutput string after substitutions\n *  @see\tcomplete_substitutions_array\n */\nfunction make_substitutions($text, $substitutionarray, $outputlangs=null)\n{\n\tglobal $conf, $langs;\n\n\tif (! is_array($substitutionarray)) return 'ErrorBadParameterSubstitutionArrayWhenCalling_make_substitutions';\n\n\tif (empty($outputlangs)) $outputlangs=$langs;\n\n\t// Make substitution for language keys\n\tif (is_object($outputlangs))\n\t{\n\t\twhile (preg_match('/__\\(([^\\)]+)\\)__/', $text, $reg))\n\t\t{\n\t\t\t$msgishtml = 0;\n\t\t\tif (dol_textishtml($text,1)) $msgishtml = 1;\n\n\t\t\t// If key is __(TranslationKey|langfile)__, then force load of langfile.lang\n\t\t\t$tmp=explode('|',$reg[1]);\n\t\t\tif (! empty($tmp[1])) $outputlangs->load($tmp[1]);\n\n\t\t\t$text = preg_replace('/__\\('.preg_quote($reg[1], '/').'\\)__/', $msgishtml?dol_htmlentitiesbr($outputlangs->transnoentitiesnoconv($reg[1])):$outputlangs->transnoentitiesnoconv($reg[1]), $text);\n\t\t}\n\t}\n\n\t// Make substitution for constant keys. Must be after the substitution of translation, so if text of translation contains a constant,\n\t// it is also converted.\n\twhile (preg_match('/__\\[([^\\]]+)\\]__/', $text, $reg))\n\t{\n\t\t$msgishtml = 0;\n\t\tif (dol_textishtml($text,1)) $msgishtml = 1;\n\n\t\t$keyfound = $reg[1];\n\t\tif (preg_match('/(_pass|password|secret|_key|key$)/i', $keyfound)) $newval = '*****forbidden*****';\n\t\telse $newval=empty($conf->global->$keyfound)?'':$conf->global->$keyfound;\n\t\t$text = preg_replace('/__\\['.preg_quote($keyfound, '/').'\\]__/', $msgishtml?dol_htmlentitiesbr($newval):$newval, $text);\n\t}\n\n\t// Make substitition for array $substitutionarray\n\tforeach ($substitutionarray as $key => $value)\n\t{\n\t\tif ($key == '__SIGNATURE__' && (! empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) $value='';\t\t// Protection\n\t\tif ($key == '__USER_SIGNATURE__' && (! empty($conf->global->MAIN_MAIL_DO_NOT_USE_SIGN))) $value='';\t// Protection\n\n\t\t$text=str_replace(\"$key\",\"$value\",$text);\t// We must keep the \" to work when value is 123.5 for example\n\t}\n\n\treturn $text;\n}\n\n/**\n *  Complete the $substitutionarray with more entries coming from external module that had set the \"substitutions=1\" into module_part array.\n *  In this case, method completesubstitutionarray provided by module is called.\n *\n *  @param  array\t\t$substitutionarray\t\tArray substitution old value => new value value\n *  @param  Translate\t$outputlangs            Output language\n *  @param  Object\t\t$object                 Source object\n *  @param  mixed\t\t$parameters       \t\tAdd more parameters (useful to pass product lines)\n *  @param  string      $callfunc               What is the name of the custom function that will be called? (default: completesubstitutionarray)\n *  @return\tvoid\n *  @see \tmake_substitutions\n */\nfunction complete_substitutions_array(&$substitutionarray, $outputlangs, $object=null, $parameters=null, $callfunc=\"completesubstitutionarray\")\n{\n\tglobal $conf,$user;\n\n\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t// Add a substitution key for each extrafields, using key __EXTRA_XXX__\n\t// TODO Remove this. Already available into the getCommonSubstitutionArray used to build the substitution array.\n\t/*if (is_object($object) && is_array($object->array_options))\n\t{\n\t\tforeach($object->array_options as $key => $val)\n\t\t{\n\t\t\t$keyshort=preg_replace('/^(options|extra)_/','',$key);\n\t\t\t$substitutionarray['__EXTRAFIELD_'.$keyshort.'__']=$val;\n\t\t\t// For backward compatibiliy\n\t\t\t$substitutionarray['%EXTRA_'.$keyshort.'%']=$val;\n\t\t}\n\t}*/\n\n\t// Check if there is external substitution to do, requested by plugins\n\t$dirsubstitutions=array_merge(array(),(array) $conf->modules_parts['substitutions']);\n\n\tforeach($dirsubstitutions as $reldir)\n\t{\n\t\t$dir=dol_buildpath($reldir,0);\n\n\t\t// Check if directory exists\n\t\tif (! dol_is_dir($dir)) continue;\n\n\t\t$substitfiles=dol_dir_list($dir,'files',0,'functions_');\n\t\tforeach($substitfiles as $substitfile)\n\t\t{\n\t\t\tif (preg_match('/functions_(.*)\\.lib\\.php/i',$substitfile['name'],$reg))\n\t\t\t{\n\t\t\t\t$module=$reg[1];\n\n\t\t\t\tdol_syslog(\"Library functions_\".$substitfile['name'].\" found into \".$dir);\n\t\t\t\t// Include the user's functions file\n\t\t\t\trequire_once $dir.$substitfile['name'];\n\t\t\t\t// Call the user's function, and only if it is defined\n\t\t\t\t$function_name=$module.\"_\".$callfunc;\n\t\t\t\tif (function_exists($function_name)) $function_name($substitutionarray,$outputlangs,$object,$parameters);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t$date_start    Start date\n *    @param    int\t$date_end      End date\n *    @param    string\t\t$format        Output format\n *    @param\tTranslate\t$outputlangs   Output language\n *    @return\tvoid\n */\nfunction print_date_range($date_start,$date_end,$format = '',$outputlangs='')\n{\n\tprint get_date_range($date_start,$date_end,$format,$outputlangs);\n}\n\n/**\n *    Format output for start and end date\n *\n *    @param\tint\t\t\t$date_start    \t\tStart date\n *    @param    int\t\t\t$date_end      \t\tEnd date\n *    @param    string\t\t$format        \t\tOutput format\n *    @param\tTranslate\t$outputlangs   \t\tOutput language\n *    @param\tinteger\t\t$withparenthesis\t1=Add parenthesis, 0=non parenthesis\n *    @return\tstring\t\t\t\t\t\t\tString\n */\nfunction get_date_range($date_start,$date_end,$format = '',$outputlangs='', $withparenthesis=1)\n{\n\tglobal $langs;\n\n\t$out='';\n\n\tif (! is_object($outputlangs)) $outputlangs=$langs;\n\n\tif ($date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFromTo',dol_print_date($date_start, $format, false, $outputlangs),dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif ($date_start && ! $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateFrom',dol_print_date($date_start, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\tif (! $date_start && $date_end)\n\t{\n\t\t$out.= ($withparenthesis?' (':'').$outputlangs->transnoentitiesnoconv('DateUntil',dol_print_date($date_end, $format, false, $outputlangs)).($withparenthesis?')':'');\n\t}\n\n\treturn $out;\n}\n\n/**\n * Return firstname and lastname in correct order\n *\n * @param\tstring\t$firstname\t\tFirstname\n * @param\tstring\t$lastname\t\tLastname\n * @param\tint\t\t$nameorder\t\t-1=Auto, 0=Lastname+Firstname, 1=Firstname+Lastname, 2=Firstname\n * @return\tstring\t\t\t\t\tFirstname + lastname or Lastname + firstname\n */\nfunction dolGetFirstLastname($firstname,$lastname,$nameorder=-1)\n{\n\tglobal $conf;\n\n\t$ret='';\n\t// If order not defined, we use the setup\n\tif ($nameorder < 0) $nameorder=$conf->global->MAIN_FIRSTNAME_NAME_POSITION;\n\tif ($nameorder && ((string) $nameorder != '2'))\n\t{\n\t\t$ret.=$firstname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$lastname;\n\t}\n\telse if ($nameorder == 2)\n\t{\n\t   $ret.=$firstname;\n\t}\n\telse\n\t{\n\t\t$ret.=$lastname;\n\t\tif ($firstname && $lastname) $ret.=' ';\n\t\t$ret.=$firstname;\n\t}\n\treturn $ret;\n}\n\n\n/**\n *\tSet event message in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *  Note: Prefer to use setEventMessages instead.\n *\n *\t@param\tmixed\t$mesgs\t\t\tMessage string or array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessage($mesgs, $style='mesgs')\n{\n\t//dol_syslog(__FUNCTION__ . \" is deprecated\", LOG_WARNING);\t\tThis is not deprecated, it is used by setEventMessages function\n\tif (! is_array($mesgs))\t\t// If mesgs is a string\n\t{\n\t\tif ($mesgs) $_SESSION['dol_events'][$style][] = $mesgs;\n\t}\n\telse\t\t\t\t\t\t// If mesgs is an array\n\t{\n\t\tforeach($mesgs as $mesg)\n\t\t{\n\t\t\tif ($mesg) $_SESSION['dol_events'][$style][] = $mesg;\n\t\t}\n\t}\n}\n\n/**\n *\tSet event messages in dol_events session object. Will be output by calling dol_htmloutput_events.\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function.\n *\n *\t@param\tstring\t$mesg\t\t\tMessage string\n *\t@param\tarray\t$mesgs\t\t\tMessage array\n *  @param  string\t$style      \tWhich style to use ('mesgs' by default, 'warnings', 'errors')\n *  @return\tvoid\n *  @see\tdol_htmloutput_events\n */\nfunction setEventMessages($mesg, $mesgs, $style='mesgs')\n{\n\tif (! in_array((string) $style, array('mesgs','warnings','errors'))) dol_print_error('','Bad parameter style='.$style.' for setEventMessages');\n\tif (empty($mesgs)) setEventMessage($mesg, $style);\n\telse\n\t{\n\t\tif (! empty($mesg) && ! in_array($mesg, $mesgs)) setEventMessage($mesg, $style);\t// Add message string if not already into array\n\t\tsetEventMessage($mesgs, $style);\n\t}\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *  Note: Calling dol_htmloutput_events is done into pages by standard llxFooter() function, so there is\n *  no need to call it explicitely.\n *\n *  @param\tint\t\t$disabledoutputofmessages\tClear all messages stored into session without diplaying them\n *  @return\tvoid\n *  @see    \t\t\t\t\t\t\t\t\tdol_htmloutput_mesg\n */\nfunction dol_htmloutput_events($disabledoutputofmessages=0)\n{\n\t// Show mesgs\n\tif (isset($_SESSION['dol_events']['mesgs'])) {\n\t\tif (empty($disabledoutputofmessages)) dol_htmloutput_mesg('', $_SESSION['dol_events']['mesgs']);\n\t\tunset($_SESSION['dol_events']['mesgs']);\n\t}\n\n\t// Show errors\n\tif (isset($_SESSION['dol_events']['errors'])) {\n\t\tif (empty($disabledoutputofmessages)) dol_htmloutput_mesg('', $_SESSION['dol_events']['errors'], 'error');\n\t\tunset($_SESSION['dol_events']['errors']);\n\t}\n\n\t// Show warnings\n\tif (isset($_SESSION['dol_events']['warnings'])) {\n\t\tif (empty($disabledoutputofmessages)) dol_htmloutput_mesg('', $_SESSION['dol_events']['warnings'], 'warning');\n\t\tunset($_SESSION['dol_events']['warnings']);\n\t}\n}\n\n/**\n *\tGet formated messages to output (Used to show messages on html output).\n *  This include also the translation of the message key.\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string\t\t$style          Style of message output ('ok' or 'error')\n *  @param  int\t\t\t$keepembedded   Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *\t@return\tstring\t\t\t\t\t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction get_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tglobal $conf, $langs;\n\n\t$ret=0; $return='';\n\t$out='';\n\t$divstart=$divend='';\n\n\t// If inline message with no format, we add it.\n\tif ((empty($conf->use_javascript_ajax) || ! empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) || $keepembedded) && ! preg_match('/<div class=\".*\">/i',$out))\n\t{\n\t\t$divstart='<div class=\"'.$style.' clearboth\">';\n\t\t$divend='</div>';\n\t}\n\n\tif ((is_array($mesgarray) && count($mesgarray)) || $mesgstring)\n\t{\n\t\t$langs->load(\"errors\");\n\t\t$out.=$divstart;\n\t\tif (is_array($mesgarray) && count($mesgarray))\n\t\t{\n\t\t\tforeach($mesgarray as $message)\n\t\t\t{\n\t\t\t\t$ret++;\n\t\t\t\t$out.= $langs->trans($message);\n\t\t\t\tif ($ret < count($mesgarray)) $out.= \"<br>\\n\";\n\t\t\t}\n\t\t}\n\t\tif ($mesgstring)\n\t\t{\n\t\t\t$langs->load(\"errors\");\n\t\t\t$ret++;\n\t\t\t$out.= $langs->trans($mesgstring);\n\t\t}\n\t\t$out.=$divend;\n\t}\n\n\tif ($out)\n\t{\n\t\tif (! empty($conf->use_javascript_ajax) && empty($conf->global->MAIN_DISABLE_JQUERY_JNOTIFY) && empty($keepembedded))\n\t\t{\n\t\t\t$return = '<script type=\"text/javascript\">\n\t\t\t\t\t$(document).ready(function() {\n\t\t\t\t\t\tvar block = '.(! empty($conf->global->MAIN_USE_JQUERY_BLOCKUI)?\"true\":\"false\").'\n\t\t\t\t\t\tif (block) {\n\t\t\t\t\t\t\t$.dolEventValid(\"\",\"'.dol_escape_js($out).'\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* jnotify(message, preset of message type, keepmessage) */\n\t\t\t\t\t\t\t$.jnotify(\"'.dol_escape_js($out).'\",\n\t\t\t\t\t\t\t\"'.($style==\"ok\" ? 3000 : $style).'\",\n\t\t\t\t\t\t\t'.($style==\"ok\" ? \"false\" : \"true\").',\n\t\t\t\t\t\t\t{ remove: function (){} } );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t</script>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$return = $out;\n\t\t}\n\t}\n\n\treturn $return;\n}\n\n/**\n *  Get formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring         Error message\n *  @param  array\t$mesgarray          Error messages array\n *  @param  int\t\t$keepembedded       Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return string                \t\tReturn html output\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction get_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\treturn get_htmloutput_mesg($mesgstring, $mesgarray,'error',$keepembedded);\n}\n\n/**\n *\tPrint formated messages to output (Used to show messages on html output).\n *\n *\t@param\tstring\t\t$mesgstring\t\tMessage string or message key\n *\t@param\tstring[]\t$mesgarray      Array of message strings or message keys\n *  @param  string      $style          Which style to use ('ok', 'warning', 'error')\n *  @param  int         $keepembedded   Set to 1 if message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_errors\n *  @see    setEventMessages\n */\nfunction dol_htmloutput_mesg($mesgstring='',$mesgarray='', $style='ok', $keepembedded=0)\n{\n\tif (empty($mesgstring) && (! is_array($mesgarray) || count($mesgarray) == 0)) return;\n\n\t$iserror=0;\n\t$iswarning=0;\n\tif (is_array($mesgarray))\n\t{\n\t\tforeach($mesgarray as $val)\n\t\t{\n\t\t\tif ($val && preg_match('/class=\"error\"/i',$val)) { $iserror++; break; }\n\t\t\tif ($val && preg_match('/class=\"warning\"/i',$val)) { $iswarning++; break; }\n\t\t}\n\t}\n\telse if ($mesgstring && preg_match('/class=\"error\"/i',$mesgstring)) $iserror++;\n\telse if ($mesgstring && preg_match('/class=\"warning\"/i',$mesgstring)) $iswarning++;\n\tif ($style=='error') $iserror++;\n\tif ($style=='warning') $iswarning++;\n\n\tif ($iserror || $iswarning)\n\t{\n\t\t// Remove div from texts\n\t\t$mesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$mesgstring);\n\t\t$mesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$mesgstring);\n\t\t$mesgstring=preg_replace('/<\\/div>/','',$mesgstring);\n\t\t// Remove div from texts array\n\t\tif (is_array($mesgarray))\n\t\t{\n\t\t\t$newmesgarray=array();\n\t\t\tforeach($mesgarray as $val)\n\t\t\t{\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div><div class=\"(error|warning)\">/','<br>',$val);\n\t\t\t\t$tmpmesgstring=preg_replace('/<div class=\"(error|warning)\">/','',$tmpmesgstring);\n\t\t\t\t$tmpmesgstring=preg_replace('/<\\/div>/','',$tmpmesgstring);\n\t\t\t\t$newmesgarray[]=$tmpmesgstring;\n\t\t\t}\n\t\t\t$mesgarray=$newmesgarray;\n\t\t}\n\t\tprint get_htmloutput_mesg($mesgstring,$mesgarray,($iserror?'error':'warning'),$keepembedded);\n\t}\n\telse print get_htmloutput_mesg($mesgstring,$mesgarray,'ok',$keepembedded);\n}\n\n/**\n *  Print formated error messages to output (Used to show messages on html output).\n *\n *  @param\tstring\t$mesgstring          Error message\n *  @param  array\t$mesgarray           Error messages array\n *  @param  int\t\t$keepembedded        Set to 1 in error message must be kept embedded into its html place (this disable jnotify)\n *  @return\tvoid\n *\n *  @see    dol_print_error\n *  @see    dol_htmloutput_mesg\n */\nfunction dol_htmloutput_errors($mesgstring='', $mesgarray='', $keepembedded=0)\n{\n\tdol_htmloutput_mesg($mesgstring, $mesgarray, 'error', $keepembedded);\n}\n\n/**\n * \tAdvanced sort array by second index function, which produces ascending (default)\n *  or descending output and uses optionally natural case insensitive sorting (which\n *  can be optionally case sensitive as well).\n *\n *  @param      array\t\t$array      \t\tArray to sort (array of array('key','otherkey1','otherkey2'...))\n *  @param      string\t\t$index\t\t\t\tKey in array to use for sorting criteria\n *  @param      int\t\t\t$order\t\t\t\tSort order ('asc' or 'desc')\n *  @param      int\t\t\t$natsort\t\t\t1=use \"natural\" sort (natsort), 0=use \"standard\" sort (asort)\n *  @param      int\t\t\t$case_sensitive\t\t1=sort is case sensitive, 0=not case sensitive\n *  @param\t\tint\t\t\t$keepindex\t\t\tIf 0 and index key of array to sort is a numeric, than index will be rewrote. If 1 or index key is not numeric, key for index is kept after sorting.\n *  @return     array\t\t\t\t\t\t\tSorted array\n */\nfunction dol_sort_array(&$array, $index, $order='asc', $natsort=0, $case_sensitive=0, $keepindex=0)\n{\n\t// Clean parameters\n\t$order=strtolower($order);\n\n\t$sizearray=count($array);\n\tif (is_array($array) && $sizearray>0)\n\t{\n\t\t$temp = array();\n\t\tforeach(array_keys($array) as $key) $temp[$key]=$array[$key][$index];\n\n\t\tif (!$natsort) ($order=='asc') ? asort($temp) : arsort($temp);\n\t\telse\n\t\t{\n\t\t\t($case_sensitive) ? natsort($temp) : natcasesort($temp);\n\t\t\tif($order!='asc') $temp=array_reverse($temp,TRUE);\n\t\t}\n\n\t\t$sorted = array();\n\n\t\tforeach(array_keys($temp) as $key)\n\t\t{\n\t\t\t(is_numeric($key) && empty($keepindex)) ? $sorted[]=$array[$key] : $sorted[$key]=$array[$key];\n\t\t}\n\n\t\treturn $sorted;\n\t}\n\treturn $array;\n}\n\n\n/**\n *      Check if a string is in UTF8\n *\n *      @param\tstring\t$str        String to check\n * \t\t@return\tboolean\t\t\t\tTrue if string is UTF8 or ISO compatible with UTF8, False if not (ISO with special char or Binary)\n */\nfunction utf8_check($str)\n{\n\t// We must use here a binary strlen function (so not dol_strlen)\n\t$strLength = dol_strlen($str);\n\tfor ($i=0; $i<$strLength; $i++)\n\t{\n\t\tif (ord($str[$i]) < 0x80) continue; // 0bbbbbbb\n\t\telseif ((ord($str[$i]) & 0xE0) == 0xC0) $n=1; // 110bbbbb\n\t\telseif ((ord($str[$i]) & 0xF0) == 0xE0) $n=2; // 1110bbbb\n\t\telseif ((ord($str[$i]) & 0xF8) == 0xF0) $n=3; // 11110bbb\n\t\telseif ((ord($str[$i]) & 0xFC) == 0xF8) $n=4; // 111110bb\n\t\telseif ((ord($str[$i]) & 0xFE) == 0xFC) $n=5; // 1111110b\n\t\telse return false; // Does not match any model\n\t\tfor ($j=0; $j<$n; $j++) { // n bytes matching 10bbbbbb follow ?\n\t\t\tif ((++$i == strlen($str)) || ((ord($str[$i]) & 0xC0) != 0x80))\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n/**\n *      Return a string encoded into OS filesystem encoding. This function is used to define\n * \t    value to pass to filesystem PHP functions.\n *\n *      @param\tstring\t$str        String to encode (UTF-8)\n * \t\t@return\tstring\t\t\t\tEncoded string (UTF-8, ISO-8859-1)\n */\nfunction dol_osencode($str)\n{\n\tglobal $conf;\n\n\t$tmp=ini_get(\"unicode.filesystem_encoding\");\t\t\t\t\t\t// Disponible avec PHP 6.0\n\tif (empty($tmp) && ! empty($_SERVER[\"WINDIR\"])) $tmp='iso-8859-1';\t// By default for windows\n\tif (empty($tmp)) $tmp='utf-8';\t\t\t\t\t\t\t\t\t\t// By default for other\n\tif (! empty($conf->global->MAIN_FILESYSTEM_ENCODING)) $tmp=$conf->global->MAIN_FILESYSTEM_ENCODING;\n\n\tif ($tmp == 'iso-8859-1') return utf8_decode($str);\n\treturn $str;\n}\n\n\n/**\n *      Return an id or code from a code or id.\n *      Store also Code-Id into a cache to speed up next request on same key.\n *\n * \t\t@param\tDoliDB\t$db\t\t\t\tDatabase handler\n * \t\t@param\tstring\t$key\t\t\tCode or Id to get Id or Code\n * \t\t@param\tstring\t$tablename\t\tTable name without prefix\n * \t\t@param\tstring\t$fieldkey\t\tField to search the key into\n * \t\t@param\tstring\t$fieldid\t\tField to get\n *      @param  int\t\t$entityfilter\tFilter by entity\n *      @return int\t\t\t\t\t\t<0 if KO, Id of code if OK\n *      @see $langs->getLabelFromKey\n */\nfunction dol_getIdFromCode($db, $key, $tablename, $fieldkey='code', $fieldid='id', $entityfilter=0)\n{\n\tglobal $cache_codes;\n\n\t// If key empty\n\tif ($key == '') return '';\n\n\t// Check in cache\n\tif (isset($cache_codes[$tablename][$key]))\t// Can be defined to 0 or ''\n\t{\n\t\treturn $cache_codes[$tablename][$key];   // Found in cache\n\t}\n\n\t$sql = \"SELECT \".$fieldid.\" as valuetoget\";\n\t$sql.= \" FROM \".MAIN_DB_PREFIX.$tablename;\n\t$sql.= \" WHERE \".$fieldkey.\" = '\".$db->escape($key).\"'\";\n\tif (! empty($entityfilter))\n\t\t$sql.= \" AND entity IN (\" . getEntity($tablename) . \")\";\n\n\tdol_syslog('dol_getIdFromCode', LOG_DEBUG);\n\t$resql = $db->query($sql);\n\tif ($resql)\n\t{\n\t\t$obj = $db->fetch_object($resql);\n\t\tif ($obj) $cache_codes[$tablename][$key]=$obj->valuetoget;\n\t\telse $cache_codes[$tablename][$key]='';\n\t\t$db->free($resql);\n\t\treturn $cache_codes[$tablename][$key];\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\n\n/**\n * Verify if condition in string is ok or not\n *\n * @param \tstring\t\t$strRights\t\tString with condition to check\n * @return \tboolean\t\t\t\t\t\tTrue or False. Return true if strRights is ''\n */\nfunction verifCond($strRights)\n{\n\tglobal $user,$conf,$langs;\n\tglobal $leftmenu;\n\tglobal $rights;    // To export to dol_eval function\n\n\t//print $strRights.\"<br>\\n\";\n\t$rights = true;\n\tif ($strRights != '')\n\t{\n\t\t//$tab_rights = explode('&&', $strRights);\n\t\t//$i = 0;\n\t\t//while (($i < count($tab_rights)) && ($rights == true)) {\n\t\t$str = 'if(!(' . $strRights . ')) { $rights = false; }';\n\t\tdol_eval($str);\n\t\t//\t$i++;\n\t\t//}\n\t}\n\treturn $rights;\n}\n\n/**\n * Replace eval function to add more security.\n * This function is called by verifCond() or trans() and transnoentitiesnoconv().\n *\n * @param \tstring\t$s\t\t\t\tString to evaluate\n * @param\tint\t\t$returnvalue\t0=No return (used to execute eval($a=something)). 1=Value of eval is returned (used to eval($something)).\n * @param   int     $hideerrors     1=Hide errors\n * @return\tmixed\t\t\t\t\tNothing or return of eval\n */\nfunction dol_eval($s, $returnvalue=0, $hideerrors=1)\n{\n\t// Only global variables can be changed by eval function and returned to caller\n\tglobal $db, $langs, $user, $conf;\n\tglobal $mainmenu, $leftmenu;\n\tglobal $rights;\n\tglobal $object;\n\tglobal $mysoc;\n\n\tglobal $obj;       // To get $obj used into list when dol_eval is used for computed fields and $obj is not yet $object\n\tglobal $soc;       // For backward compatibility\n\n\t//print $s.\"<br>\\n\";\n\tif ($returnvalue)\n\t{\n\t\tif ($hideerrors) return @eval('return '.$s.';');\n\t\telse return eval('return '.$s.';');\n\t}\n\telse\n\t{\n\t\tif ($hideerrors) @eval($s);\n\t\telse eval($s);\n\t}\n}\n\n/**\n * Return if var element is ok\n *\n * @param   string      $element    Variable to check\n * @return  boolean                 Return true of variable is not empty\n */\nfunction dol_validElement($element)\n{\n\treturn (trim($element) != '');\n}\n\n/**\n * \tReturn img flag of country for a language code or country code\n *\n * \t@param\tstring\t$codelang\tLanguage code (en_IN, fr_CA...) or Country code (IN, FR)\n *  @param\tstring\t$moreatt\t\tAdd more attribute on img tag (For example 'style=\"float: right\"')\n * \t@return\tstring\t\t\t\tHTML img string with flag.\n */\nfunction picto_from_langcode($codelang, $moreatt = '')\n{\n\tglobal $langs;\n\n\tif (empty($codelang)) return '';\n\n\tif (empty($codelang)) return '';\n\n\tif ($codelang == 'auto')\n\t{\n\t\treturn img_picto_common($langs->trans('AutoDetectLang'), 'flags/int.png', $moreatt);\n\t}\n\n\t$langtocountryflag = array(\n\t\t'ar_AR' => '',\n\t\t'ca_ES' => 'catalonia',\n\t\t'da_DA' => 'dk',\n\t\t'fr_CA' => 'mq',\n\t\t'sv_SV' => 'se'\n\t);\n\n\tif (isset($langtocountryflag[$codelang])) $flagImage = $langtocountryflag[$codelang];\n\telse\n\t{\n\t\t$tmparray = explode('_', $codelang);\n\t\t$flagImage = empty($tmparray[1]) ? $tmparray[0] : $tmparray[1];\n\t}\n\n\treturn img_picto_common($codelang, 'flags/'.strtolower($flagImage).'.png', $moreatt);\n}\n\n/**\n *  Complete or removed entries into a head array (used to build tabs).\n *  For example, with value added by external modules. Such values are declared into $conf->modules_parts['tab'].\n *  Or by change using hook completeTabsHead\n *\n *  @param\tConf\t\t\t$conf           Object conf\n *  @param  Translate\t\t$langs          Object langs\n *  @param  object|null\t\t$object         Object object\n *  @param  array\t\t\t$head          \tObject head\n *  @param  int\t\t\t\t$h\t\t\t\tNew position to fill\n *  @param  string\t\t\t$type           Value for object where objectvalue can be\n *                              \t\t\t'thirdparty'       to add a tab in third party view\n *\t\t                        \t      \t'intervention'     to add a tab in intervention view\n *     \t\t                    \t     \t'supplier_order'   to add a tab in supplier order view\n *          \t\t            \t        'supplier_invoice' to add a tab in supplier invoice view\n *                  \t\t    \t        'invoice'          to add a tab in customer invoice view\n *                          \t\t\t    'order'            to add a tab in customer order view\n *                          \t\t\t\t'contract'\t\t   to add a tabl in contract view\n *                      \t\t\t        'product'          to add a tab in product view\n *                              \t\t\t'propal'           to add a tab in propal view\n *                              \t\t\t'user'             to add a tab in user view\n *                              \t\t\t'group'            to add a tab in group view\n * \t\t        \t               \t     \t'member'           to add a tab in fundation member view\n *      \t\t                        \t'categories_x'\t   to add a tab in category view ('x': type of category (0=product, 1=supplier, 2=customer, 3=member)\n *      \t\t\t\t\t\t\t\t\t'ecm'\t\t\t   to add a tab for another ecm view\n *                                          'stock'            to add a tab for warehouse view\n *  @param  string\t\t$mode  \t        \t'add' to complete head, 'remove' to remove entries\n *\t@return\tvoid\n */\nfunction complete_head_from_modules($conf,$langs,$object,&$head,&$h,$type,$mode='add')\n{\n\tglobal $hookmanager;\n\n\tif (isset($conf->modules_parts['tabs'][$type]) && is_array($conf->modules_parts['tabs'][$type]))\n\t{\n\t\tforeach ($conf->modules_parts['tabs'][$type] as $value)\n\t\t{\n\t\t\t$values=explode(':',$value);\n\n\t\t\tif ($mode == 'add' && ! preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif (count($values) == 6)       // new declaration with permissions:  $value='objecttype:+tabname1:Title1:langfile@mymodule:$user->rights->mymodule->read:/mymodule/mynewtab1.php?id=__ID__'\n\t\t\t\t{\n\t\t\t\t\tif ($values[0] != $type) continue;\n\n\t\t\t\t\tif (verifCond($values[4]))\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[5]), 1);\n\t\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t\t$h++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (count($values) == 5)       // deprecated\n\t\t\t\t{\n\t\t\t\t\tdol_syslog('Passing 5\u00a0values in tabs module_parts is deprecated. Please update to 6 with permissions.', LOG_WARNING);\n\n\t\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t\tif ($values[3]) $langs->load($values[3]);\n\t\t\t\t\tif (preg_match('/SUBSTITUTION_([^_]+)/i',$values[2],$reg))\n\t\t\t\t\t{\n\t\t\t\t\t\t$substitutionarray=array();\n\t\t\t\t\t\tcomplete_substitutions_array($substitutionarray,$langs,$object,array('needforkey'=>$values[2]));\n\t\t\t\t\t\t$label=make_substitutions($reg[1], $substitutionarray);\n\t\t\t\t\t}\n\t\t\t\t\telse $label=$langs->trans($values[2]);\n\n\t\t\t\t\t$head[$h][0] = dol_buildpath(preg_replace('/__ID__/i', ((is_object($object) && ! empty($object->id))?$object->id:''), $values[4]), 1);\n\t\t\t\t\t$head[$h][1] = $label;\n\t\t\t\t\t$head[$h][2] = str_replace('+','',$values[1]);\n\t\t\t\t\t$h++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($mode == 'remove' && preg_match('/^\\-/',$values[1]))\n\t\t\t{\n\t\t\t\tif ($values[0] != $type) continue;\n\t\t\t\t$tabname=str_replace('-','',$values[1]);\n\t\t\t\tforeach($head as $key => $val)\n\t\t\t\t{\n\t\t\t\t\t$condition = (! empty($values[3]) ? verifCond($values[3]) : 1);\n\t\t\t\t\tif ($head[$key][2]==$tabname && $condition)\n\t\t\t\t\t{\n\t\t\t\t\t\tunset($head[$key]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// No need to make a return $head. Var is modified as a reference\n\tif (! empty($hookmanager))\n\t{\n\t\t$parameters=array('object' => $object, 'mode' => $mode, 'head'=>$head);\n\t\t$reshook=$hookmanager->executeHooks('completeTabsHead',$parameters);\n\t\tif ($reshook > 0)\n\t\t{\n\t\t\t$head = $hookmanager->resArray;\n\t\t}\n\t}\n}\n\n/**\n * Print common footer :\n * \t\tconf->global->MAIN_HTML_FOOTER\n *      js for switch of menu hider\n * \t\tjs for conf->global->MAIN_GOOGLE_AN_ID\n * \t\tjs for conf->global->MAIN_SHOW_TUNING_INFO or $_SERVER[\"MAIN_SHOW_TUNING_INFO\"]\n * \t\tjs for conf->logbuffer\n *\n * @param\tstring\t$zone\t'private' (for private pages) or 'public' (for public pages)\n * @return\tvoid\n */\nfunction printCommonFooter($zone='private')\n{\n\tglobal $conf, $hookmanager;\n\tglobal $micro_start_time;\n\n\tif ($zone == 'private') print \"\\n\".'<!-- Common footer for private page -->'.\"\\n\";\n\telse print \"\\n\".'<!-- Common footer for public page -->'.\"\\n\";\n\n\t$parameters=array();\n\t$reshook=$hookmanager->executeHooks('printCommonFooter',$parameters);    // Note that $action and $object may have been modified by some hooks\n\tif (empty($reshook))\n\t{\n\t\tif (! empty($conf->global->MAIN_HTML_FOOTER)) print $conf->global->MAIN_HTML_FOOTER.\"\\n\";\n\n\t\tprint \"\\n\";\n\t\tif (! empty($conf->use_javascript_ajax))\n\t\t{\n\t\t\tprint '<script type=\"text/javascript\" language=\"javascript\">'.\"\\n\";\n\n\t\t\tif ($zone == 'private' && empty($conf->dol_use_jmobile))\n\t\t\t{\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint '/* JS CODE TO ENABLE to enable handler to switch left menu page (menuhider) */'.\"\\n\";\n\t\t\t\tprint 'jQuery(\".menuhider\").click(function() {';\n\t\t\t\tprint '  console.log(\"We click on .menuhider\");'.\"\\n\";\n\t\t\t\t//print \"  $('.side-nav').animate({width:'toggle'},200);\\n\";     // OK with eldy theme but not with md\n\t\t\t\tprint \"  $('.side-nav').toggle()\\n\";\n\t\t\t\tprint \"  $('.login_block').toggle()\\n\";\n\t\t\t\tprint '});'.\"\\n\";\n\t\t\t}\n\n\t\t\t// Google Analytics (need Google module)\n\t\t\tif (! empty($conf->google->enabled) && ! empty($conf->global->MAIN_GOOGLE_AN_ID))\n\t\t\t{\n\t\t\t\tif (($conf->dol_use_jmobile != 4))\n\t\t\t\t{\n\t\t\t\t\tprint \"\\n\";\n\t\t\t\t\tprint \"/* JS CODE TO ENABLE for google analtics tag */\\n\";\n\t\t\t\t\tprint '  var _gaq = _gaq || [];'.\"\\n\";\n\t\t\t\t\tprint '  _gaq.push([\\'_setAccount\\', \\''.$conf->global->MAIN_GOOGLE_AN_ID.'\\']);'.\"\\n\";\n\t\t\t\t\tprint '  _gaq.push([\\'_trackPageview\\']);'.\"\\n\";\n\t\t\t\t\tprint ''.\"\\n\";\n\t\t\t\t\tprint '  (function() {'.\"\\n\";\n\t\t\t\t\tprint '    var ga = document.createElement(\\'script\\'); ga.type = \\'text/javascript\\'; ga.async = true;'.\"\\n\";\n\t\t\t\t\tprint '    ga.src = (\\'https:\\' == document.location.protocol ? \\'https://ssl\\' : \\'http://www\\') + \\'.google-analytics.com/ga.js\\';'.\"\\n\";\n\t\t\t\t\tprint '    var s = document.getElementsByTagName(\\'script\\')[0]; s.parentNode.insertBefore(ga, s);'.\"\\n\";\n\t\t\t\t\tprint '  })();'.\"\\n\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// End of tuning\n\t\t\tif (! empty($_SERVER['MAIN_SHOW_TUNING_INFO']) || ! empty($conf->global->MAIN_SHOW_TUNING_INFO))\n\t\t\t{\n\t\t\t\tprint \"\\n\";\n\t\t\t\tprint \"/* JS CODE TO ENABLE to add memory info */\\n\";\n\t\t\t\tprint 'window.console && console.log(\"';\n\t\t\t\tif (! empty($conf->global->MEMCACHED_SERVER)) print 'MEMCACHED_SERVER='.$conf->global->MEMCACHED_SERVER.' - ';\n\t\t\t\tprint 'MAIN_OPTIMIZE_SPEED='.(isset($conf->global->MAIN_OPTIMIZE_SPEED)?$conf->global->MAIN_OPTIMIZE_SPEED:'off');\n\t\t\t\tif (! empty($micro_start_time))   // Works only if MAIN_SHOW_TUNING_INFO is defined at $_SERVER level. Not in global variable.\n\t\t\t\t{\n\t\t\t\t\t$micro_end_time = microtime(true);\n\t\t\t\t\tprint ' - Build time: '.ceil(1000*($micro_end_time-$micro_start_time)).' ms';\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"memory_get_usage\"))\n\t\t\t\t{\n\t\t\t\t\tprint ' - Mem: '.memory_get_usage();\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"xdebug_memory_usage\"))\n\t\t\t\t{\n\t\t\t\t\tprint ' - XDebug time: '.ceil(1000*xdebug_time_index()).' ms';\n\t\t\t\t\tprint ' - XDebug mem: '.xdebug_memory_usage();\n\t\t\t\t\tprint ' - XDebug mem peak: '.xdebug_peak_memory_usage();\n\t\t\t\t}\n\t\t\t\tif (function_exists(\"zend_loader_file_encoded\"))\n\t\t\t\t{\n\t\t\t\t\tprint ' - Zend encoded file: '.(zend_loader_file_encoded()?'yes':'no');\n\t\t\t\t}\n\t\t\t\tprint '\");'.\"\\n\";\n\t\t\t}\n\n\t\t\tprint \"\\n\".'</script>'.\"\\n\";\n\t\t}\n\n\t\t// Add Xdebug coverage of code\n\t\tif (defined('XDEBUGCOVERAGE'))\n\t\t{\n\t\t\tprint_r(xdebug_get_code_coverage());\n\t\t}\n\n\t\t// If there is some logs in buffer to show\n\t\tif (count($conf->logbuffer))\n\t\t{\n\t\t\tprint \"\\n\";\n\t\t\tprint \"<!-- Start of log output\\n\";\n\t\t\t//print '<div class=\"hidden\">'.\"\\n\";\n\t\t\tforeach($conf->logbuffer as $logline)\n\t\t\t{\n\t\t\t\tprint $logline.\"<br>\\n\";\n\t\t\t}\n\t\t\t//print '</div>'.\"\\n\";\n\t\t\tprint \"End of log output -->\\n\";\n\t\t}\n\t}\n}\n\n/**\n * Split a string with 2 keys into key array.\n * For example: \"A=1;B=2;C=2\" is exploded into array('A'=>1,'B'=>2,'C'=>3)\n *\n * @param \tstring\t$string\t\tString to explode\n * @param \tstring\t$delimiter\tDelimiter between each couple of data\n * @param \tstring\t$kv\t\t\tDelimiter between key and value\n * @return\tarray\t\t\t\tArray of data exploded\n */\nfunction dolExplodeIntoArray($string, $delimiter = ';', $kv = '=')\n{\n\tif ($a = explode($delimiter, $string))\n\t{\n\t\t$ka = array();\n\t\tforeach ($a as $s) { // each part\n\t\t\tif ($s) {\n\t\t\t\tif ($pos = strpos($s, $kv)) { // key/value delimiter\n\t\t\t\t\t$ka[trim(substr($s, 0, $pos))] = trim(substr($s, $pos + strlen($kv)));\n\t\t\t\t} else { // key delimiter not found\n\t\t\t\t\t$ka[] = trim($s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $ka;\n\t}\n\treturn array();\n}\n\n\n/**\n * Set focus onto field with selector (similar behaviour of 'autofocus' HTML5 tag)\n *\n * @param \tstring\t$selector\tSelector ('#id' or 'input[name=\"ref\"]') to use to find the HTML input field that must get the autofocus. You must use a CSS selector, so unique id preceding with the '#' char.\n * @return\tstring\t\t\t\tHTML code to set focus\n */\nfunction dol_set_focus($selector)\n{\n\tprint \"\\n\".'<!-- Set focus onto a specific field -->'.\"\\n\";\n\tprint '<script type=\"text/javascript\" language=\"javascript\">jQuery(document).ready(function() { jQuery(\"'.dol_escape_js($selector).'\").focus(); });</script>'.\"\\n\";\n}\n\n\n/**\n * Return getmypid() or random PID when function is disabled\n * Some web hosts disable this php function for security reasons\n * and sometimes we can't redeclare function\n *\n * @return\tint\n */\nfunction dol_getmypid()\n{\n\tif (! function_exists('getmypid')) {\n\t\treturn mt_rand(1,32768);\n\t} else {\n\t\treturn getmypid();\n\t}\n}\n\n\n/**\n * Generate natural SQL search string for a criteria (this criteria can be tested on one or several fields)\n *\n * @param \tstring|string[]\t$fields \tString or array of strings, filled with the name of all fields in the SQL query we must check (combined with a OR). Example: array(\"p.field1\",\"p.field2\")\n * @param \tstring \t\t\t$value \t\tThe value to look for.\n *                          \t\t    If param $mode is 0, can contains several keywords separated with a space or |\n *                                         like \"keyword1 keyword2\" = We want record field like keyword1 AND field like keyword2\n *                                         or like \"keyword1|keyword2\" = We want record field like keyword1 OR field like keyword2\n *                             \t\t\tIf param $mode is 1, can contains an operator <, > or = like \"<10\" or \">=100.5 < 1000\"\n *                             \t\t\tIf param $mode is 2, can contains a list of int id separated by comma like \"1,3,4\"\n *                             \t\t\tIf param $mode is 3, can contains a list of string separated by comma like \"a,b,c\"\n * @param\tinteger\t\t\t$mode\t\t0=value is list of keyword strings, 1=value is a numeric test (Example \">5.5 <10\"), 2=value is a list of id separated with comma (Example '1,3,4')\n * @param\tinteger\t\t\t$nofirstand\t1=Do not output the first 'AND'\n * @return \tstring \t\t\t$res \t\tThe statement to append to the SQL query\n */\nfunction natural_search($fields, $value, $mode=0, $nofirstand=0)\n{\n\tglobal $db,$langs;\n\n\t$value=trim($value);\n\n\tif ($mode == 0)\n\t{\n\t\t$value=preg_replace('/\\*/','%',$value);\t// Replace * with %\n\t}\n\tif ($mode == 1)\n\t{\n\t\t$value=preg_replace('/([<>=]+)\\s+([0-9'.preg_quote($langs->trans(\"DecimalSeparator\"),'/').'\\-])/','\\1\\2',$value);\t// Clean string '< 10' into '<10' so we can the explode on space to get all tests to do\n\t}\n\n\t$value = preg_replace('/\\s*\\|\\s*/','|', $value);\n\n\t$crits = explode(' ', $value);\n\t$res = '';\n\tif (! is_array($fields)) $fields = array($fields);\n\n\t$nboffields = count($fields);\n\t$end2 = count($crits);\n\t$j = 0;\n\tforeach ($crits as $crit)\n\t{\n\t\t$i = 0; $i2 = 0;\n\t\t$newres = '';\n\t\tforeach ($fields as $field)\n\t\t{\n\t\t\tif ($mode == 1)\n\t\t\t{\n\t\t\t\t$operator='=';\n\t\t\t\t$newcrit = preg_replace('/([<>=]+)/','',trim($crit));\n\n\t\t\t\tpreg_match('/([<>=]+)/',trim($crit), $reg);\n\t\t\t\tif ($reg[1])\n\t\t\t\t{\n\t\t\t\t\t$operator = $reg[1];\n\t\t\t\t}\n\t\t\t\tif ($newcrit != '')\n\t\t\t\t{\n\t\t\t\t\t$numnewcrit = price2num($newcrit);\n\t\t\t\t\tif (is_numeric($numnewcrit))\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . ' '.$operator.' '.$numnewcrit;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . '1 = 2';\t// force false\n\t\t\t\t\t}\n\t\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($mode == 2)\n\t\t\t{\n\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . \" IN (\" . $db->escape(trim($crit)) . \")\";\n\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t}\n\t\t\telse if ($mode == 3)\n\t\t\t{\n\t\t\t\t$tmparray=explode(',',trim($crit));\n\t\t\t\tif (count($tmparray))\n\t\t\t\t{\n\t\t\t\t\t$listofcodes='';\n\t\t\t\t\tforeach($tmparray as $val)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($val)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$listofcodes.=($listofcodes?',':'');\n\t\t\t\t\t\t\t$listofcodes.=\"'\".$db->escape(trim($val)).\"'\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$newres .= ($i2 > 0 ? ' OR ' : '') . $field . \" IN (\" . $listofcodes . \")\";\n\t\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t\t}\n\t\t\t}\n\t\t\telse    // $mode=0\n\t\t\t{\n\t\t\t\t$textcrit = '';\n\t\t\t\t$tmpcrits = explode('|',$crit);\n\t\t\t\t$i3 = 0;\n\t\t\t\tforeach($tmpcrits as $tmpcrit)\n\t\t\t\t{\n\t\t\t\t\tif(empty($tmpcrit)) continue;\n\n\t\t\t\t\t$newres .= (($i2 > 0 || $i3 > 0) ? ' OR ' : '');\n\n\t\t\t\t\tif (preg_match('/\\.(id|rowid)$/', $field))\t// Special case for rowid that is sometimes a ref so used as a search field\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= $field . \" = \" . (is_numeric(trim($tmpcrit))?trim($tmpcrit):'0');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$newres .= $field . \" LIKE '\";\n\n\t\t\t\t\t\t$tmpcrit=trim($tmpcrit);\n\t\t\t\t\t\t$tmpcrit2=$tmpcrit;\n\t\t\t\t\t\t$tmpbefore='%'; $tmpafter='%';\n\t\t\t\t\t\tif (preg_match('/^[\\^\\$]/', $tmpcrit))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$tmpbefore='';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/^[\\^\\$]/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (preg_match('/[\\^\\$]$/', $tmpcrit))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$tmpafter='';\n\t\t\t\t\t\t\t$tmpcrit2 = preg_replace('/[\\^\\$]$/', '', $tmpcrit2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$newres .= $tmpbefore;\n\t\t\t\t\t\t$newres .= $db->escape($tmpcrit2);\n\t\t\t\t\t\t$newres .= $tmpafter;\n\t\t\t\t\t\t$newres .= \"'\";\n\t\t\t\t\t\tif ($tmpcrit2 == '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$newres .= ' OR ' . $field . \" IS NULL\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$i3++;\n\t\t\t\t}\n\t\t\t\t$i2++;\t// a criteria was added to string\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\tif ($newres) $res = $res . ($res ? ' AND ' : '') . ($i2 > 1 ? '(' : '') .$newres . ($i2 > 1 ? ')' : '');\n\t\t$j++;\n\t}\n\t$res = ($nofirstand?\"\":\" AND \").\"(\" . $res . \")\";\n\t//print 'xx'.$res.'yy';\n\treturn $res;\n}\n\n/**\n * Return string with full Url\n *\n * @param   Object\t$object\t\tObject\n * @return\tstring\t\t\t\tUrl string\n */\nfunction showDirectDownloadLink($object)\n{\n\tglobal $conf, $langs;\n\n\t$out='';\n\t$url = $object->getLastMainDocLink($object->element);\n\n\tif ($url)\n\t{\n\t\t$out.= img_picto('','object_globe.png').' '.$langs->trans(\"DirectDownloadLink\").'<br>';\n\t\t$out.= '<input type=\"text\" id=\"directdownloadlink\" class=\"quatrevingtpercent\" value=\"'.$url.'\">';\n\t\t$out.= ajax_autoselect(\"directdownloadlink\", 0);\n\t}\n\treturn $out;\n}\n\n/**\n * Return the filename of file to get the thumbs\n *\n * @param   string  $file           Original filename (full or relative path)\n * @param   string  $extName        Extension to differenciate thumb file name ('', '_small', '_mini')\n * @param   string  $extImgTarget   Force image extension for thumbs. Use '' to keep same extension than original image (default).\n * @return  string                  New file name (full or relative path, including the thumbs/)\n */\nfunction getImageFileNameForSize($file, $extName, $extImgTarget='')\n{\n\t$dirName = dirname($file);\n\tif ($dirName == '.') $dirName='';\n\n\t$fileName = preg_replace('/(\\.gif|\\.jpeg|\\.jpg|\\.png|\\.bmp)$/i','',$file);\t// We remove extension, whatever is its case\n\t$fileName = basename($fileName);\n\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpg$/i',$file)?'.jpg':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.jpeg$/i',$file)?'.jpeg':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.gif$/i',$file)?'.gif':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.png$/i',$file)?'.png':'');\n\tif (empty($extImgTarget)) $extImgTarget = (preg_match('/\\.bmp$/i',$file)?'.bmp':'');\n\n\tif (! $extImgTarget) return $file;\n\n\t$subdir='';\n\tif ($extName) $subdir = 'thumbs/';\n\n\treturn ($dirName?$dirName.'/':'').$subdir.$fileName.$extName.$extImgTarget; // New filename for thumb\n}\n\n\n/**\n * Return URL we can use for advanced preview links\n *\n * @param   string    $modulepart     propal, facture, facture_fourn, ...\n * @param   string    $relativepath   Relative path of docs.\n * @param\tint\t\t  $alldata\t\t  Return array with all components (1 is recommended, then use a simple a href link with the class, target and mime attribute added. 'documentpreview' css class is handled by jquery code into main.inc.php)\n * @param\tstring\t  $param\t\t  More param on http links\n * @return  string|array              Output string with href link or array with all components of link\n */\nfunction getAdvancedPreviewUrl($modulepart, $relativepath, $alldata=0, $param='')\n{\n\tglobal $conf, $langs;\n\n\tif (empty($conf->use_javascript_ajax)) return '';\n\n\t$mime_preview = array('bmp', 'jpeg', 'png', 'gif', 'tiff', 'pdf', 'plain', 'css', 'svg+xml');\n\t//$mime_preview[]='vnd.oasis.opendocument.presentation';\n\t//$mime_preview[]='archive';\n\t$num_mime = array_search(dol_mimetype($relativepath, '', 1), $mime_preview);\n\n\tif ($alldata == 1)\n\t{\n\t\tif ($num_mime !== false) return array('target'=>'_blank', 'css'=>'documentpreview', 'url'=>DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath), 'mime'=>dol_mimetype($relativepath), );\n\t\telse return array();\n\t}\n\n\t// old behavior\n\tif ($num_mime !== false) return 'javascript:document_preview(\\''.dol_escape_js(DOL_URL_ROOT.'/document.php?modulepart='.$modulepart.'&attachment=0&file='.urlencode($relativepath).($param?'&'.$param:'')).'\\', \\''.dol_mimetype($relativepath).'\\', \\''.dol_escape_js($langs->trans('Preview')).'\\')';\n\telse return '';\n}\n\n\n/**\n *\tReturn mime type of a file\n *\n *\t@param\tstring\t$file\t\tFilename we looking for MIME type\n *  @param  string\t$default    Default mime type if extension not found in known list\n * \t@param\tint\t\t$mode    \t0=Return full mime, 1=otherwise short mime string, 2=image for mime type, 3=source language, 4=css of font fa\n *\t@return string \t\t    \tReturn a mime type family (text/xxx, application/xxx, image/xxx, audio, video, archive)\n *  @see    image_format_supported (images.lib.php)\n */\nfunction dol_mimetype($file, $default='application/octet-stream', $mode=0)\n{\n\t$mime=$default;\n\t$imgmime='other.png';\n\t$famime='file-o';\n\t$srclang='';\n\n\t$tmpfile=preg_replace('/\\.noexe$/','',$file);\n\n\t// Text files\n\tif (preg_match('/\\.txt$/i',$tmpfile))         \t\t\t   { $mime='text/plain';    $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.rtx$/i',$tmpfile))                      { $mime='text/richtext'; $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.csv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/csv';      $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.tsv$/i',$tmpfile))\t\t\t\t\t   { $mime='text/tab-separated-values'; $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.(cf|conf|log)$/i',$tmpfile))            { $mime='text/plain';    $imgmime='text.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.ini$/i',$tmpfile))                      { $mime='text/plain';    $imgmime='text.png'; $srclang='ini'; $famime='file-text-o'; }\n\tif (preg_match('/\\.css$/i',$tmpfile))                      { $mime='text/css';      $imgmime='css.png'; $srclang='css'; $famime='file-text-o'; }\n\t// Certificate files\n\tif (preg_match('/\\.(crt|cer|key|pub)$/i',$tmpfile))        { $mime='text/plain';    $imgmime='text.png'; $famime='file-text-o'; }\n\t// HTML/XML\n\tif (preg_match('/\\.(html|htm|shtml)$/i',$tmpfile))         { $mime='text/html';     $imgmime='html.png'; $srclang='html'; $famime='file-text-o'; }\n\tif (preg_match('/\\.(xml|xhtml)$/i',$tmpfile))              { $mime='text/xml';      $imgmime='other.png'; $srclang='xml'; $famime='file-text-o'; }\n\t// Languages\n\tif (preg_match('/\\.bas$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='bas';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(c)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='c';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(cpp)$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='text.png'; $srclang='cpp';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(h)$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='h';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(java|jsp)$/i',$tmpfile))               { $mime='text/plain'; $imgmime='text.png'; $srclang='java';  $famime='file-code-o'; }\n\tif (preg_match('/\\.php([0-9]{1})?$/i',$tmpfile))           { $mime='text/plain'; $imgmime='php.png'; $srclang='php';  $famime='file-code-o'; }\n\tif (preg_match('/\\.phtml$/i',$tmpfile))                    { $mime='text/plain'; $imgmime='php.png'; $srclang='php';  $famime='file-code-o'; }\n\tif (preg_match('/\\.(pl|pm)$/i',$tmpfile))                  { $mime='text/plain'; $imgmime='pl.png'; $srclang='perl';  $famime='file-code-o'; }\n\tif (preg_match('/\\.sql$/i',$tmpfile))                      { $mime='text/plain'; $imgmime='text.png'; $srclang='sql';  $famime='file-code-o'; }\n\tif (preg_match('/\\.js$/i',$tmpfile))                       { $mime='text/x-javascript'; $imgmime='jscript.png'; $srclang='js';  $famime='file-code-o'; }\n\t// Open office\n\tif (preg_match('/\\.odp$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.presentation'; $imgmime='ooffice.png'; $famime='file-powerpoint-o'; }\n\tif (preg_match('/\\.ods$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.spreadsheet';  $imgmime='ooffice.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.odt$/i',$tmpfile))                      { $mime='application/vnd.oasis.opendocument.text';         $imgmime='ooffice.png'; $famime='file-word-o'; }\n\t// MS Office\n\tif (preg_match('/\\.mdb$/i',$tmpfile))\t\t\t\t\t   { $mime='application/msaccess'; $imgmime='mdb.png'; $famime='file-o'; }\n\tif (preg_match('/\\.doc(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; $famime='file-word-o'; }\n\tif (preg_match('/\\.dot(x|m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/msword'; $imgmime='doc.png'; $famime='file-word-o'; }\n\tif (preg_match('/\\.xlt(x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.xla(m)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.xls$/i',$tmpfile))\t\t\t           { $mime='application/vnd.ms-excel'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.xls(b|m|x)$/i',$tmpfile))\t\t\t   { $mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'; $imgmime='xls.png'; $famime='file-excel-o'; }\n\tif (preg_match('/\\.pps(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/vnd.ms-powerpoint'; $imgmime='ppt.png'; $famime='file-powerpoint-o'; }\n\tif (preg_match('/\\.ppt(m|x)?$/i',$tmpfile))\t\t\t\t   { $mime='application/x-mspowerpoint'; $imgmime='ppt.png'; $famime='file-powerpoint-o'; }\n\t// Other\n\tif (preg_match('/\\.pdf$/i',$tmpfile))                      { $mime='application/pdf'; $imgmime='pdf.png'; $famime='file-pdf-o'; }\n\t// Scripts\n\tif (preg_match('/\\.bat$/i',$tmpfile))                      { $mime='text/x-bat';  $imgmime='script.png'; $srclang='dos'; $famime='file-code-o'; }\n\tif (preg_match('/\\.sh$/i',$tmpfile))                       { $mime='text/x-sh';   $imgmime='script.png'; $srclang='bash'; $famime='file-code-o'; }\n\tif (preg_match('/\\.ksh$/i',$tmpfile))                      { $mime='text/x-ksh';  $imgmime='script.png'; $srclang='bash'; $famime='file-code-o'; }\n\tif (preg_match('/\\.bash$/i',$tmpfile))                     { $mime='text/x-bash'; $imgmime='script.png'; $srclang='bash'; $famime='file-code-o'; }\n\t// Images\n\tif (preg_match('/\\.ico$/i',$tmpfile))                      { $mime='image/x-icon'; $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.(jpg|jpeg)$/i',$tmpfile))\t\t\t   { $mime='image/jpeg';   $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.png$/i',$tmpfile))\t\t\t\t\t   { $mime='image/png';    $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.gif$/i',$tmpfile))\t\t\t\t\t   { $mime='image/gif';    $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.bmp$/i',$tmpfile))\t\t\t\t\t   { $mime='image/bmp';    $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.(tif|tiff)$/i',$tmpfile))\t\t\t   { $mime='image/tiff';   $imgmime='image.png'; $famime='file-image-o'; }\n\tif (preg_match('/\\.svg$/i',$tmpfile))\t\t\t\t\t   { $mime='image/svg+xml';$imgmime='image.png'; $famime='file-image-o'; }\n\t// Calendar\n\tif (preg_match('/\\.vcs$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; $famime='file-text-o'; }\n\tif (preg_match('/\\.ics$/i',$tmpfile))\t\t\t\t\t   { $mime='text/calendar'; $imgmime='other.png'; $famime='file-text-o'; }\n\t// Other\n\tif (preg_match('/\\.torrent$/i',$tmpfile))\t\t\t\t   { $mime='application/x-bittorrent'; $imgmime='other.png'; $famime='file-o'; }\n\t// Audio\n\tif (preg_match('/\\.(mp3|ogg|au|wav|wma|mid)$/i',$tmpfile)) { $mime='audio'; $imgmime='audio.png'; $famime='file-audio-o'; }\n\t// Video\n\tif (preg_match('/\\.ogv$/i',$tmpfile))                      { $mime='video/ogg';       $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.webm$/i',$tmpfile))                     { $mime='video/webm';      $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.avi$/i',$tmpfile))                      { $mime='video/x-msvideo'; $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.divx$/i',$tmpfile))                     { $mime='video/divx';      $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.xvid$/i',$tmpfile))                     { $mime='video/xvid';      $imgmime='video.png'; $famime='file-video-o'; }\n\tif (preg_match('/\\.(wmv|mpg|mpeg)$/i',$tmpfile))           { $mime='video';           $imgmime='video.png'; $famime='file-video-o'; }\n\t// Archive\n\tif (preg_match('/\\.(zip|rar|gz|tgz|z|cab|bz2|7z|tar|lzh)$/i',$tmpfile))   { $mime='archive'; $imgmime='archive.png'; $famime='file-archive-o'; }    // application/xxx where zzz is zip, ...\n\t// Exe\n\tif (preg_match('/\\.(exe|com)$/i',$tmpfile))                { $mime='application/octet-stream'; $imgmime='other.png'; $famime='file-o'; }\n\t// Lib\n\tif (preg_match('/\\.(dll|lib|o|so|a)$/i',$tmpfile))         { $mime='library'; $imgmime='library.png'; $famime='file-o'; }\n\t// Err\n\tif (preg_match('/\\.err$/i',$tmpfile))                      { $mime='error'; $imgmime='error.png'; $famime='file-text-o'; }\n\n\t// Return string\n\tif ($mode == 1)\n\t{\n\t\t$tmp=explode('/',$mime);\n\t\treturn (! empty($tmp[1])?$tmp[1]:$tmp[0]);\n\t}\n\tif ($mode == 2)\n\t{\n\t\treturn $imgmime;\n\t}\n\tif ($mode == 3)\n\t{\n\t\treturn $srclang;\n\t}\n\tif ($mode == 4)\n\t{\n\t\treturn $famime;\n\t}\n\treturn $mime;\n}\n\n/**\n * Return value from dictionary\n *\n * @param string\t$tablename\t\tname of dictionary\n * @param string\t$field\t\t\tthe value to return\n * @param int\t\t$id\t\t\t\tid of line\n * @param bool\t\t$checkentity\tadd filter on entity\n * @param string\t$rowidfield\t\tname of the column rowid\n */\nfunction getDictvalue($tablename, $field, $id, $checkentity=false, $rowidfield='rowid')\n{\n\tglobal $dictvalues,$db,$langs;\n\n\tif (!isset($dictvalues[$tablename]))\n\t{\n\t\t$dictvalues[$tablename] = array();\n\t\t$sql = 'SELECT * FROM '.$tablename.' WHERE 1';\n\t\tif ($checkentity) $sql.= ' entity IN (0,'.getEntity('').')';\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql)\n\t\t{\n\t\t\twhile ($obj = $db->fetch_object($resql))\n\t\t\t{\n\t\t\t\t$dictvalues[$tablename][$obj->{$rowidfield}] = $obj;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tif (!empty($dictvalues[$tablename][$id])) return $dictvalues[$tablename][$id]->{$field}; // Found\n\telse // Not found\n\t{\n\t\tif ($id > 0) return $id;\n\t\treturn '';\n\t}\n}\n\n/**\n *\tReturn true if the color is light\n *\n *  @param\tstring\t$stringcolor\t\tString with hex (FFFFFF) or comma RGB ('255,255,255')\n *  @return\tint\t\t\t\t\t\t\t-1 : Error with argument passed |0 : color is dark | 1 : color is light\n */\nfunction colorIsLight($stringcolor)\n{\n\t$res = -1;\n\tif (!empty($stringcolor))\n\t{\n\t\t$res = 0;\n\t\t$tmp=explode(',', $stringcolor);\n\t\tif (count($tmp) > 1)   // This is a comma RGB ('255','255','255')\n\t\t{\n\t\t\t$r = $tmp[0];\n\t\t\t$g = $tmp[1];\n\t\t\t$b = $tmp[2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$hexr=$stringcolor[0].$stringcolor[1];\n\t\t\t$hexg=$stringcolor[2].$stringcolor[3];\n\t\t\t$hexb=$stringcolor[4].$stringcolor[5];\n\t\t\t$r = hexdec($hexr);\n\t\t\t$g = hexdec($hexg);\n\t\t\t$b = hexdec($hexb);\n\t\t}\n\t\t$bright = (max($r, $g, $b) + min($r, $g, $b)) / 510.0;    // HSL algorithm\n\t\tif ($bright > 0.6) $res = 1;\n\t}\n\treturn $res;\n}\n\n/**\n * Function to test if an entry is enabled or not\n *\n * @param\tstring\t\t$type_user\t\t\t\t\t0=We test for internal user, 1=We test for external user\n * @param\tarray\t\t$menuentry\t\t\t\t\tArray for feature entry to test\n * @param\tarray\t\t$listofmodulesforexternal\tArray with list of modules allowed to external users\n * @return\tint\t\t\t\t\t\t\t\t\t\t0=Hide, 1=Show, 2=Show gray\n */\nfunction isVisibleToUserType($type_user, &$menuentry, &$listofmodulesforexternal)\n{\n\tglobal $conf;\n\n\t//print 'type_user='.$type_user.' module='.$menuentry['module'].' enabled='.$menuentry['enabled'].' perms='.$menuentry['perms'];\n\t//print 'ok='.in_array($menuentry['module'], $listofmodulesforexternal);\n\tif (empty($menuentry['enabled'])) return 0;\t// Entry disabled by condition\n\tif ($type_user && $menuentry['module'])\n\t{\n\t\t$tmploops=explode('|',$menuentry['module']);\n\t\t$found=0;\n\t\tforeach($tmploops as $tmploop)\n\t\t{\n\t\t\tif (in_array($tmploop, $listofmodulesforexternal)) {\n\t\t\t\t$found++; break;\n\t\t\t}\n\t\t}\n\t\tif (! $found) return 0;\t// Entry is for menus all excluded to external users\n\t}\n\tif (! $menuentry['perms'] && $type_user) return 0; \t\t\t\t\t\t\t\t\t\t\t// No permissions and user is external\n\tif (! $menuentry['perms'] && ! empty($conf->global->MAIN_MENU_HIDE_UNAUTHORIZED))\treturn 0;\t// No permissions and option to hide when not allowed, even for internal user, is on\n\tif (! $menuentry['perms']) return 2;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// No permissions and user is external\n\treturn 1;\n}\n"], "filenames": ["htdocs/accountancy/admin/accountmodel.php", "htdocs/accountancy/admin/categories.php", "htdocs/accountancy/admin/categories_list.php", "htdocs/accountancy/admin/journals_list.php", "htdocs/admin/dict.php", "htdocs/admin/mails_templates.php", "htdocs/admin/website.php", "htdocs/core/lib/functions.lib.php"], "buggy_code_start_loc": [48, 91, 57, 39, 968, 433, 422, 581], "buggy_code_end_loc": [524, 92, 797, 421, 1006, 451, 440, 587], "fixing_code_start_loc": [48, 91, 57, 39, 968, 433, 422, 581], "fixing_code_end_loc": [498, 92, 782, 406, 1006, 436, 423, 587], "type": "CWE-89", "message": "SQL Injection vulnerability in Dolibarr before version 7.0.2 allows remote attackers to execute arbitrary SQL commands via the sortfield parameter to /accountancy/admin/accountmodel.php, /accountancy/admin/categories_list.php, /accountancy/admin/journals_list.php, /admin/dict.php, /admin/mails_templates.php, or /admin/website.php.", "other": {"cve": {"id": "CVE-2018-9019", "sourceIdentifier": "cve@mitre.org", "published": "2018-05-22T20:29:01.273", "lastModified": "2021-01-30T02:36:52.037", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "SQL Injection vulnerability in Dolibarr before version 7.0.2 allows remote attackers to execute arbitrary SQL commands via the sortfield parameter to /accountancy/admin/accountmodel.php, /accountancy/admin/categories_list.php, /accountancy/admin/journals_list.php, /admin/dict.php, /admin/mails_templates.php, or /admin/website.php."}, {"lang": "es", "value": "Vulnerabilidad de inyecci\u00f3n SQL en Dolibarr en versiones anteriores a la 7.0.2 permite que atacantes remotos ejecuten comandos SQL arbitrarios mediante el par\u00e1metro sortfield en /accountancy/admin/accountmodel.php, /accountancy/admin/categories_list.php, /accountancy/admin/journals_list.php, /admin/dict.php, /admin/mails_templates.php o /admin/website.php."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr:*:*:*:*:*:*:*:*", "versionEndExcluding": "7.0.2", "matchCriteriaId": "846C6EFB-F67D-4C61-9E8B-7CEE5B97AF08"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oracle:data_integrator:11.1.1.9.0:*:*:*:*:*:*:*", "matchCriteriaId": "E2CF70CF-3DDF-45A2-A14C-340CC65EBDC2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:data_integrator:12.2.1.3.0:*:*:*:*:*:*:*", "matchCriteriaId": "9901F6BA-78D5-45B8-9409-07FF1C6DDD38"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:data_integrator:12.2.1.4.0:*:*:*:*:*:*:*", "matchCriteriaId": "9FADE563-5AAA-42FF-B43F-35B20A2386C9"}]}]}], "references": [{"url": "https://github.com/Dolibarr/dolibarr/blob/7.0.2/ChangeLog", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://github.com/Dolibarr/dolibarr/commit/83b762b681c6dfdceb809d26ce95f3667b614739", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://www.oracle.com/security-alerts/cpujan2021.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Dolibarr/dolibarr/commit/83b762b681c6dfdceb809d26ce95f3667b614739"}}