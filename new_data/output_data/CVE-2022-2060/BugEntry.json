{"buggy_code": ["<?php\n/* Copyright (C) 2002-2004  Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2004-2015  Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2009  Regis Houssin        <regis.houssin@inodbox.com>\n * Copyright (C) 2013       Peter Fontaine       <contact@peterfontaine.fr>\n * Copyright (C) 2015-2016  Marcos Garc\u00eda        <marcosgdf@gmail.com>\n * Copyright (C) 2015       Alexandre Spangaro   <aspangaro@open-dsi.fr>\n * Copyright (C) 2021       Gauthier VERDOL      <gauthier.verdol@atm-consulting.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/user/bank.php\n *      \\ingroup    HRM\n *\t\t\\brief      Tab for HRM\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/usergroups.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/user/class/userbankaccount.class.php';\nif (!empty($conf->holiday->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/holiday/class/holiday.class.php';\n}\nif (!empty($conf->expensereport->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/expensereport/class/expensereport.class.php';\n}\nif (!empty($conf->salaries->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/salaries/class/salary.class.php';\n\trequire_once DOL_DOCUMENT_ROOT.'/salaries/class/paymentsalary.class.php';\n}\n\n// Load translation files required by page\n$langs->loadLangs(array('companies', 'commercial', 'banks', 'bills', 'trips', 'holiday', 'salaries'));\n\n$id = GETPOST('id', 'int');\n$ref = GETPOST('ref', 'alphanohtml');\n$bankid = GETPOST('bankid', 'int');\n$action = GETPOST(\"action\", 'alpha');\n$cancel = GETPOST('cancel', 'alpha');\n\n// Security check\n$socid = 0;\nif ($user->socid > 0) {\n\t$socid = $user->socid;\n}\n$feature2 = (($socid && $user->rights->user->self->creer) ? '' : 'user');\n\n$object = new User($db);\nif ($id > 0 || !empty($ref)) {\n\t$result = $object->fetch($id, $ref, '', 1);\n\t$object->getrights();\n}\n\n$account = new UserBankAccount($db);\nif (!$bankid) {\n\t$account->fetch(0, '', $id);\n} else {\n\t$account->fetch($bankid);\n}\nif (empty($account->userid)) {\n\t$account->userid = $object->id;\n}\n\n\n// Define value to know what current user can do on users\n$canadduser = (!empty($user->admin) || $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n$canreaduser = (!empty($user->admin) || $user->rights->user->user->lire || $user->rights->hrm->read_personal_information->read);\n$permissiontoaddbankaccount = (!empty($user->rights->salaries->write) || !empty($user->rights->hrm->employee->write) || !empty($user->rights->user->creer));\n\n// Ok if user->rights->salaries->read or user->rights->hrm->read\n//$result = restrictedArea($user, 'salaries|hrm', $object->id, 'user&user', $feature2);\n$ok = false;\nif ($user->id == $id) {\n\t$ok = true; // A user can always read its own card\n}\nif (!empty($user->rights->salaries->read)) {\n\t$ok = true;\n}\nif (!empty($user->rights->hrm->read)) {\n\t$ok = true;\n}\nif (!empty($user->rights->expensereport->lire) && ($user->id == $object->id || $user->rights->expensereport->readall)) {\n\t$ok = true;\n}\nif (!$ok) {\n\taccessforbidden();\n}\n\n\n/*\n *\tActions\n */\n\nif ($action == 'add' && !$cancel && $permissiontoaddbankaccount) {\n\t$account->userid          = $object->id;\n\n\t$account->bank            = GETPOST('bank', 'alpha');\n\t$account->label           = GETPOST('label', 'alpha');\n\t$account->courant         = GETPOST('courant', 'alpha');\n\t$account->code_banque     = GETPOST('code_banque', 'alpha');\n\t$account->code_guichet    = GETPOST('code_guichet', 'alpha');\n\t$account->number          = GETPOST('number', 'alpha');\n\t$account->cle_rib         = GETPOST('cle_rib', 'alpha');\n\t$account->bic             = GETPOST('bic', 'alpha');\n\t$account->iban            = GETPOST('iban', 'alpha');\n\t$account->domiciliation   = GETPOST('domiciliation', 'alpha');\n\t$account->proprio         = GETPOST('proprio', 'alpha');\n\t$account->owner_address   = GETPOST('owner_address', 'alpha');\n\n\t$result = $account->create($user);\n\n\tif (!$result) {\n\t\tsetEventMessages($account->error, $account->errors, 'errors');\n\t\t$action = 'edit'; // Force chargement page edition\n\t} else {\n\t\tsetEventMessages($langs->trans('RecordSaved'), null, 'mesgs');\n\t\t$action = '';\n\t}\n}\n\nif ($action == 'update' && !$cancel && $permissiontoaddbankaccount) {\n\t$account->userid = $object->id;\n\n\t/*\n\tif ($action == 'update' && !$cancel)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\tif ($canedituser)    // Case we can edit all field\n\t\t{\n\t\t\t$error = 0;\n\n\t\t\tif (!$error)\n\t\t\t{\n\t\t\t\t$objectuser->fetch($id);\n\n\t\t\t\t$objectuser->oldcopy = clone $objectuser;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t$objectuser->default_range = GETPOST('default_range');\n\t\t\t\t$objectuser->default_c_exp_tax_cat = GETPOST('default_c_exp_tax_cat');\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$ret = $objectuser->update($user);\n\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorLoginAlreadyExists\", $objectuser->login), null, 'errors');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetEventMessages($objectuser->error, $objectuser->errors, 'errors');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($objectuser->errors)) {\n\t\t\t\t\tsetEventMessages($langs->trans(\"UserModified\"), null, 'mesgs');\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}*/\n\n\t$account->bank            = GETPOST('bank', 'alpha');\n\t$account->label           = GETPOST('label', 'alpha');\n\t$account->courant         = GETPOST('courant', 'alpha');\n\t$account->code_banque     = GETPOST('code_banque', 'alpha');\n\t$account->code_guichet    = GETPOST('code_guichet', 'alpha');\n\t$account->number          = GETPOST('number', 'alpha');\n\t$account->cle_rib         = GETPOST('cle_rib', 'alpha');\n\t$account->bic             = GETPOST('bic', 'alpha');\n\t$account->iban            = GETPOST('iban', 'alpha');\n\t$account->domiciliation   = GETPOST('domiciliation', 'alpha');\n\t$account->proprio         = GETPOST('proprio', 'alpha');\n\t$account->owner_address   = GETPOST('owner_address', 'alpha');\n\n\t$result = $account->update($user);\n\n\tif (!$result) {\n\t\tsetEventMessages($account->error, $account->errors, 'errors');\n\t\t$action = 'edit'; // Force chargement page edition\n\t} else {\n\t\tsetEventMessages($langs->trans('RecordSaved'), null, 'mesgs');\n\t\t$action = '';\n\t}\n}\n\n// update birth\nif ($action == 'setbirth' && $canadduser && !$cancel) {\n\t$object->birth = dol_mktime(0, 0, 0, GETPOST('birthmonth', 'int'), GETPOST('birthday', 'int'), GETPOST('birthyear', 'int'));\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update personal email\nif ($action == 'setpersonal_email' && $canadduser && !$cancel) {\n\t$object->personal_email = (string) GETPOST('personal_email', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update personal mobile\nif ($action == 'setpersonal_mobile' && $canadduser && !$cancel) {\n\t$object->personal_mobile = (string) GETPOST('personal_mobile', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update ref_employee\nif ($action == 'setref_employee' && $canadduser && !$cancel) {\n\t$object->ref_employee = (string) GETPOST('ref_employee', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update national_registration_number\nif ($action == 'setnational_registration_number' && $canadduser && !$cancel) {\n\t$object->national_registration_number = (string) GETPOST('national_registration_number', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\nif (!empty($conf->global->MAIN_USE_EXPENSE_IK)) {\n\t// update default_c_exp_tax_cat\n\tif ($action == 'setdefault_c_exp_tax_cat' && $canadduser) {\n\t\t$object->default_c_exp_tax_cat = GETPOST('default_c_exp_tax_cat', 'int');\n\t\t$result = $object->update($user);\n\t\tif ($result < 0) {\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n\n\t// update default range\n\tif ($action == 'setdefault_range' && $canadduser) {\n\t\t$object->default_range = GETPOST('default_range', 'int');\n\t\t$result = $object->update($user);\n\t\tif ($result < 0) {\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n}\n\n\n/*\n *\tView\n */\n\n$form = new Form($db);\n\n$childids = $user->getAllChildIds(1);\n\nllxHeader(null, $langs->trans(\"BankAccounts\"));\n\n$head = user_prepare_head($object);\n\nif ($id && $bankid && $action == 'edit' && ($user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write)) {\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"post\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\tprint '<input type=\"hidden\" name=\"id\" value=\"'.GETPOST(\"id\", 'int').'\">';\n\tprint '<input type=\"hidden\" name=\"bankid\" value=\"'.$bankid.'\">';\n}\nif ($id && $action == 'create' && $user->rights->user->user->creer) {\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"post\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\tprint '<input type=\"hidden\" name=\"bankid\" value=\"'.$bankid.'\">';\n}\n\n\n// View\nif ($action != 'edit' && $action != 'create') {\t\t// If not bank account yet, $account may be empty\n\t$title = $langs->trans(\"User\");\n\tprint dol_get_fiche_head($head, 'bank', $title, -1, 'user');\n\n\t$linkback = '';\n\n\tif ($user->rights->user->user->lire || $user->admin) {\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/user/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\t}\n\n\tdol_banner_tab($object, 'id', $linkback, $user->rights->user->user->lire || $user->admin);\n\n\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n\tprint '<div class=\"underbanner clearboth\"></div>';\n\n\tprint '<table class=\"border centpercent tableforfield\">';\n\n\tprint '<tr><td class=\"titlefieldmiddle\">'.$langs->trans(\"Login\").'</td>';\n\tif (!empty($object->ldap_sid) && $object->statut == 0) {\n\t\tprint '<td class=\"error\">';\n\t\tprint $langs->trans(\"LoginAccountDisableInDolibarr\");\n\t\tprint '</td>';\n\t} else {\n\t\tprint '<td>';\n\t\t$addadmin = '';\n\t\tif (property_exists($object, 'admin')) {\n\t\t\tif (!empty($conf->multicompany->enabled) && !empty($object->admin) && empty($object->entity)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"SuperAdministratorDesc\"), \"redstar\", 'class=\"paddingleft\"');\n\t\t\t} elseif (!empty($object->admin)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"AdministratorDesc\"), \"star\", 'class=\"paddingleft\"');\n\t\t\t}\n\t\t}\n\t\tprint showValueWithClipboardCPButton($object->login).$addadmin;\n\t\tprint '</td>';\n\t}\n\tprint '</tr>';\n\n\n\t// Hierarchy\n\tprint '<tr><td>'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\tprint '<td>';\n\tif (empty($object->fk_user)) {\n\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t} else {\n\t\t$huser = new User($db);\n\t\tif ($object->fk_user > 0) {\n\t\t\t$huser->fetch($object->fk_user);\n\t\t\tprint $huser->getNomUrl(1);\n\t\t} else {\n\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t\t}\n\t}\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Expense report validator\n\tif (!empty($conf->expensereport->enabled)) {\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tif (!empty($object->fk_user_expense_validator)) {\n\t\t\t$evuser = new User($db);\n\t\t\t$evuser->fetch($object->fk_user_expense_validator);\n\t\t\tprint $evuser->getNomUrl(1);\n\t\t}\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Holiday request validator\n\tif (!empty($conf->holiday->enabled)) {\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tif (!empty($object->fk_user_holiday_validator)) {\n\t\t\t$hvuser = new User($db);\n\t\t\t$hvuser->fetch($object->fk_user_holiday_validator);\n\t\t\tprint $hvuser->getNomUrl(1);\n\t\t}\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Position/Job\n\tprint '<tr><td>'.$langs->trans(\"PostOrFunction\").'</td>';\n\tprint '<td>'.dol_escape_htmltag($object->job).'</td>';\n\tprint '</tr>'.\"\\n\";\n\n\t// Weeklyhours\n\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\tprint '<td>';\n\tprint price2num($object->weeklyhours);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Sensitive salary/value information\n\tif ((empty($user->socid) && in_array($id, $childids))\t// A user can always see salary/value information for its subordinates\n\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t$langs->load(\"salaries\");\n\n\t\t// Salary\n\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\tprint '<td>';\n\t\tprint ($object->salary != '' ? img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<span class=\"amount\">'.price($object->salary, '', $langs, 1, -1, -1, $conf->currency) : '').'</span>';\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// THM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"THM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint ($object->thm != '' ?price($object->thm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// TJM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"TJM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classtjm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint ($object->tjm != '' ?price($object->tjm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Date employment\n\tprint '<tr><td>'.$langs->trans(\"DateOfEmployment\").'</td>';\n\tprint '<td>';\n\tif ($object->dateemployment) {\n\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"FromDate\").'</span> ';\n\t\tprint dol_print_date($object->dateemployment, 'day');\n\t}\n\tif ($object->dateemploymentend) {\n\t\tprint '<span class=\"opacitymedium\"> - '.$langs->trans(\"To\").'</span> ';\n\t\tprint dol_print_date($object->dateemploymentend, 'day');\n\t}\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Date of birth\n\tif ($user->rights->hrm->read_personal_information->read || $user->rights->hrm->write_personal_information->write) {\n\t\tprint '<tr>';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"DateOfBirth\", 'birth', $object->birth, $object, $user->rights->user->user->creer);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"DateOfBirth\", 'birth', $object->birth, $object, $user->rights->user->user->creer, 'day', $object->birth);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Personal email\n\tif ($user->rights->hrm->read_personal_information->read || $user->rights->hrm->write_personal_information->write) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"UserPersonalEmail\", 'personal_email', $object->personal_email, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"UserPersonalEmail\", 'personal_email', $object->personal_email, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'email', '', null, null, '', 0, 'dol_print_email');\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// Personal phone\n\tif ($user->rights->hrm->read_personal_information->read || $user->rights->hrm->write_personal_information->write) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"UserPersonalMobile\", 'personal_mobile', $object->personal_mobile, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"UserPersonalMobile\", 'personal_mobile', $object->personal_mobile, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'string', '', null, null, '', 0, 'dol_print_phone');\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\tif (!empty($conf->global->MAIN_USE_EXPENSE_IK)) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"DefaultCategoryCar\", 'default_c_exp_tax_cat', $object->default_c_exp_tax_cat, $object, $user->rights->user->user->creer);\n\t\tprint '</td><td>';\n\t\tif ($action == 'editdefault_c_exp_tax_cat') {\n\t\t\t$ret = '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam ? '?'.$moreparam : '').'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"setdefault_c_exp_tax_cat\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t$ret .= $form->selectExpenseCategories($object->default_c_exp_tax_cat, 'default_c_exp_tax_cat', 1);\n\t\t\t$ret .= '<input type=\"submit\" class=\"button\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\"> ';\n\t\t\t$ret .= '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t$ret .= '</form>';\n\t\t\tprint $ret;\n\t\t} else {\n\t\t\t$label_exp_tax_cat = dol_getIdFromCode($db, $object->default_c_exp_tax_cat, 'c_exp_tax_cat', 'rowid', 'label');\n\t\t\tprint $langs->trans($label_exp_tax_cat);\n\t\t\t//print $form->editfieldval(\"DefaultCategoryCar\", 'default_c_exp_tax_cat', $object->default_c_exp_tax_cat, $object, $user->rights->user->user->creer, 'string', ($object->default_c_exp_tax_cat != '' ? $object->default_c_exp_tax_cat : ''));\n\t\t}\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"DefaultRangeNumber\", 'default_range', $object->default_range, $object, $user->rights->user->user->creer);\n\t\tprint '</td><td>';\n\t\tif ($action == 'editdefault_range') {\n\t\t\t$ret = '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam ? '?'.$moreparam : '').'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"setdefault_range\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\n\t\t\t$expensereportik = new ExpenseReportIk($db);\n\t\t\t$maxRangeNum = $expensereportik->getMaxRangeNumber($object->default_c_exp_tax_cat);\n\n\t\t\t$ret .= $form->selectarray('default_range', range(0, $maxRangeNum), $object->default_range);\n\t\t\t$ret .= '<input type=\"submit\" class=\"button\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\"> ';\n\t\t\t$ret .= '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t$ret .= '</form>';\n\t\t\tprint $ret;\n\t\t} else {\n\t\t\tprint $object->default_range;\n\t\t}\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// Accountancy code\n\tif (!empty($conf->accounting->enabled)) {\n\t\tprint '<tr><td>'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\tprint '<td>'.$object->accountancy_code.'</td></tr>';\n\t}\n\n\t// Employee Number\n\tif ($user->rights->hrm->read_personal_information->read || $user->rights->hrm->write_personal_information->write) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"RefEmployee\", 'ref_employee', $object->ref_employee, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"RefEmployee\", 'ref_employee', $object->ref_employee, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'string', $object->ref_employee);\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// National registration number\n\tif ($user->rights->hrm->read_personal_information->read || $user->rights->hrm->write_personal_information->write) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"NationalRegistrationNumber\", 'national_registration_number', $object->national_registration_number, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"NationalRegistrationNumber\", 'national_registration_number', $object->national_registration_number, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'string', $object->national_registration_number);\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\tprint '</table>';\n\n\tprint '</div><div class=\"fichehalfright\">';\n\n\t// Max number of elements in small lists\n\t$MAXLIST = $conf->global->MAIN_SIZE_SHORTLIST_LIMIT;\n\n\t// Latest payments of salaries\n\tif (!empty($conf->salaries->enabled) &&\n\t\t(($user->rights->salaries->read && (in_array($object->id, $childids) || $object->id == $user->id)) || (!empty($user->rights->salaries->readall)))\n\t\t) {\n\t\t$payment_salary = new PaymentSalary($db);\n\t\t$salary = new Salary($db);\n\n\t\t$sql = \"SELECT s.rowid as sid, s.ref as sref, s.label, s.datesp, s.dateep, s.paye, s.amount, SUM(ps.amount) as alreadypaid\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"salary as s\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"payment_salary as ps ON (s.rowid = ps.fk_salary)\";\n\t\t$sql .= \" WHERE s.fk_user = \".((int) $object->id);\n\t\t$sql .= \" AND s.entity IN (\".getEntity('salary').\")\";\n\t\t$sql .= \" GROUP BY s.rowid, s.ref, s.label, s.datesp, s.dateep, s.paye, s.amount\";\n\t\t$sql .= \" ORDER BY s.dateep DESC\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tprint '<table class=\"noborder centpercent\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"5\"><table class=\"nobordernopadding centpercent\"><tr><td>'.$langs->trans(\"LastSalaries\", ($num <= $MAXLIST ? \"\" : $MAXLIST)).'</td><td class=\"right\"><a class=\"notasortlink\" href=\"'.DOL_URL_ROOT.'/salaries/list.php?search_user='.$object->login.'\">'.$langs->trans(\"AllSalaries\").'<span class=\"badge marginleftonlyshort\">'.$num.'</span></a></td>';\n\t\t\tprint '</tr></table></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num && $i < $MAXLIST) {\n\t\t\t\t$objp = $db->fetch_object($resql);\n\n\t\t\t\t$salary->id = $objp->sid;\n\t\t\t\t$salary->ref = $objp->sref ? $objp->sref : $objp->sid;\n\t\t\t\t$salary->label = $objp->label;\n\t\t\t\t$salary->datesp = $db->jdate($objp->datesp);\n\t\t\t\t$salary->dateep = $db->jdate($objp->dateep);\n\t\t\t\t$salary->paye = $objp->paye;\n\t\t\t\t$salary->amount = $objp->amount;\n\n\t\t\t\t$payment_salary->id = $objp->rowid;\n\t\t\t\t$payment_salary->ref = $objp->ref;\n\t\t\t\t$payment_salary->datep = $db->jdate($objp->datep);\n\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td class=\"nowraponall\">';\n\t\t\t\tprint $salary->getNomUrl(1);\n\t\t\t\tprint '</td>';\n\n\t\t\t\tprint '<td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->datesp), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->dateep), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" class=\"nowraponall\"><span class=\"amount\">'.price($objp->amount).'</span></td>';\n\t\t\t\tprint '<td class=\"right\" class=\"nowraponall\">'.$salary->getLibStatut(5, $objp->alreadypaid).'</td>';\n\n\t\t\t\tprint '</tr>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$db->free($resql);\n\n\t\t\tif ($num <= 0) {\n\t\t\t\tprint '<td colspan=\"5\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></a>';\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\t// Latest leave requests\n\tif (!empty($conf->holiday->enabled) &&\n\t\t($user->rights->holiday->readall || ($user->rights->holiday->read && $object->id == $user->id))\n\t\t) {\n\t\t$holiday = new Holiday($db);\n\n\t\t$sql = \"SELECT h.rowid, h.statut as status, h.fk_type, h.date_debut, h.date_fin, h.halfday\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"holiday as h\";\n\t\t$sql .= \" WHERE h.fk_user = \".((int) $object->id);\n\t\t$sql .= \" AND h.entity IN (\".getEntity('holiday').\")\";\n\t\t$sql .= \" ORDER BY h.date_debut DESC\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tprint '<table class=\"noborder centpercent\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"4\"><table class=\"nobordernopadding centpercent\"><tr><td>'.$langs->trans(\"LastHolidays\", ($num <= $MAXLIST ? \"\" : $MAXLIST)).'</td><td class=\"right\"><a class=\"notasortlink\" href=\"'.DOL_URL_ROOT.'/holiday/list.php?id='.$object->id.'\">'.$langs->trans(\"AllHolidays\").'<span class=\"badge marginleftonlyshort\">'.$num.'</span></a></td>';\n\t\t\tprint '</tr></table></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num && $i < $MAXLIST) {\n\t\t\t\t$objp = $db->fetch_object($resql);\n\n\t\t\t\t$holiday->id = $objp->rowid;\n\t\t\t\t$holiday->ref = $objp->rowid;\n\n\t\t\t\t$holiday->fk_type = $objp->fk_type;\n\t\t\t\t$holiday->statut = $objp->status;\n\t\t\t\t$holiday->status = $objp->status;\n\n\t\t\t\t$nbopenedday = num_open_day($db->jdate($objp->date_debut, 'gmt'), $db->jdate($objp->date_fin, 'gmt'), 0, 1, $objp->halfday);\n\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td class=\"nowrap\">';\n\t\t\t\tprint $holiday->getNomUrl(1);\n\t\t\t\tprint '</td><td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->date_debut), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" style=\"min-width: 60px\">'.$nbopenedday.' '.$langs->trans('DurationDays').'</td>';\n\t\t\t\tprint '<td class=\"right\" style=\"min-width: 60px\" class=\"nowrap\">'.$holiday->LibStatut($objp->status, 5).'</td></tr>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$db->free($resql);\n\n\t\t\tif ($num <= 0) {\n\t\t\t\tprint '<td colspan=\"4\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></a>';\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\t// Latest expense report\n\tif (!empty($conf->expensereport->enabled) &&\n\t\t($user->rights->expensereport->readall || ($user->rights->expensereport->lire && $object->id == $user->id))\n\t\t) {\n\t\t$exp = new ExpenseReport($db);\n\n\t\t$sql = \"SELECT e.rowid, e.ref, e.fk_statut as status, e.date_debut, e.total_ttc\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"expensereport as e\";\n\t\t$sql .= \" WHERE e.fk_user_author = \".((int) $object->id);\n\t\t$sql .= \" AND e.entity = \".((int) $conf->entity);\n\t\t$sql .= \" ORDER BY e.date_debut DESC\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tprint '<table class=\"noborder centpercent\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"4\"><table class=\"nobordernopadding centpercent\"><tr><td>'.$langs->trans(\"LastExpenseReports\", ($num <= $MAXLIST ? \"\" : $MAXLIST)).'</td><td class=\"right\"><a class=\"notasortlink\" href=\"'.DOL_URL_ROOT.'/expensereport/list.php?id='.$object->id.'\">'.$langs->trans(\"AllExpenseReports\").'<span class=\"badge marginleftonlyshort\">'.$num.'</span></a></td>';\n\t\t\tprint '</tr></table></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num && $i < $MAXLIST) {\n\t\t\t\t$objp = $db->fetch_object($resql);\n\n\t\t\t\t$exp->id = $objp->rowid;\n\t\t\t\t$exp->ref = $objp->ref;\n\t\t\t\t$exp->status = $objp->status;\n\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td class=\"nowrap\">';\n\t\t\t\tprint $exp->getNomUrl(1);\n\t\t\t\tprint '</td><td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->date_debut), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" style=\"min-width: 60px\"><span class=\"amount\">'.price($objp->total_ttc).'</span></td>';\n\t\t\t\tprint '<td class=\"right nowrap\" style=\"min-width: 60px\">'.$exp->LibStatut($objp->status, 5).'</td></tr>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$db->free($resql);\n\n\t\t\tif ($num <= 0) {\n\t\t\t\tprint '<td colspan=\"4\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></a>';\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tprint '</div></div>';\n\tprint '<div style=\"clear:both\"></div>';\n\n\tprint dol_get_fiche_end();\n\n\t// List of bank accounts (Currently only one bank account possible for each employee)\n\n\t$morehtmlright = '';\n\tif ($account->id == 0) {\n\t\tif ($permissiontoaddbankaccount) {\n\t\t\t$morehtmlright = dolGetButtonTitle($langs->trans('Add'), '', 'fa fa-plus-circle', $_SERVER[\"PHP_SELF\"].'?id='.$object->id.'&amp;action=create');\n\t\t} else {\n\t\t\t$morehtmlright = dolGetButtonTitle($langs->trans('Add'), 'NotEnoughPermission', 'fa fa-plus-circle', '', '', -2);\n\t\t}\n\t} else {\n\t\t$morehtmlright = dolGetButtonTitle($langs->trans('Add'), 'AlreadyOneBankAccount', 'fa fa-plus-circle', '', '', -2);\n\t}\n\n\tprint load_fiche_titre($langs->trans(\"BankAccounts\"), $morehtmlright, 'bank_account');\n\n\tprint '<div class=\"div-table-responsive-no-min\">'; // You can use div-table-responsive-no-min if you dont need reserved height for your table\n\tprint '<table class=\"liste centpercent\">';\n\n\tprint '<tr class=\"liste_titre\">';\n\tprint_liste_field_titre(\"LabelRIB\");\n\tprint_liste_field_titre(\"Bank\");\n\tprint_liste_field_titre(\"RIB\");\n\tprint_liste_field_titre(\"IBAN\");\n\tprint_liste_field_titre(\"BIC\");\n\tprint_liste_field_titre('', $_SERVER[\"PHP_SELF\"], \"\", '', '', '', '', '', 'maxwidthsearch ');\n\tprint \"</tr>\\n\";\n\n\tif ($account->id > 0) {\n\t\tprint '<tr class=\"oddeven\">';\n\t\t// Label\n\t\tprint '<td>'.$account->label.'</td>';\n\t\t// Bank name\n\t\tprint '<td>'.$account->bank.'</td>';\n\t\t// Account number\n\t\tprint '<td>';\n\t\t$string = '';\n\t\tforeach ($account->getFieldsToShow() as $val) {\n\t\t\tif ($val == 'BankCode') {\n\t\t\t\t$string .= $account->code_banque.' ';\n\t\t\t} elseif ($val == 'BankAccountNumber') {\n\t\t\t\t$string .= $account->number.' ';\n\t\t\t} elseif ($val == 'DeskCode') {\n\t\t\t\t$string .= $account->code_guichet.' ';\n\t\t\t} elseif ($val == 'BankAccountNumberKey') {\n\t\t\t\t$string .= $account->cle_rib.' ';\n\t\t\t}\n\t\t}\n\t\tif (!empty($account->label) && $account->number) {\n\t\t\tif (!checkBanForAccount($account)) {\n\t\t\t\t$string .= ' '.img_picto($langs->trans(\"ValueIsNotValid\"), 'warning');\n\t\t\t} else {\n\t\t\t\t$string .= ' '.img_picto($langs->trans(\"ValueIsValid\"), 'info');\n\t\t\t}\n\t\t}\n\n\t\tprint $string;\n\t\tprint '</td>';\n\t\t// IBAN\n\t\tprint '<td>'.$account->iban;\n\t\tif (!empty($account->iban)) {\n\t\t\tif (!checkIbanForAccount($account)) {\n\t\t\t\tprint ' '.img_picto($langs->trans(\"IbanNotValid\"), 'warning');\n\t\t\t}\n\t\t}\n\t\tprint '</td>';\n\t\t// BIC\n\t\tprint '<td>'.$account->bic;\n\t\tif (!empty($account->bic)) {\n\t\t\tif (!checkSwiftForAccount($account)) {\n\t\t\t\tprint ' '.img_picto($langs->trans(\"SwiftNotValid\"), 'warning');\n\t\t\t}\n\t\t}\n\t\tprint '</td>';\n\n\t\t// Edit/Delete\n\t\tprint '<td class=\"right nowraponall\">';\n\t\tif ($permissiontoaddbankaccount) {\n\t\t\tprint '<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$object->id.'&bankid='.$account->id.'&action=edit&token='.newToken().'\">';\n\t\t\tprint img_picto($langs->trans(\"Modify\"), 'edit');\n\t\t\tprint '</a>';\n\t\t}\n\t\tprint '</td>';\n\n\t\tprint '</tr>';\n\t}\n\n\n\tif ($account->id == 0) {\n\t\t$colspan = 6;\n\t\tprint '<tr><td colspan=\"'.$colspan.'\" class=\"opacitymedium\">'.$langs->trans(\"NoBANRecord\").'</td></tr>';\n\t}\n\n\tprint '</table>';\n\tprint '</div>';\n}\n\n// Edit\nif ($id && ($action == 'edit' || $action == 'create') && $user->rights->user->user->creer) {\n\t$title = $langs->trans(\"User\");\n\tprint dol_get_fiche_head($head, 'bank', $title, 0, 'user');\n\n\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/user/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\tdol_banner_tab($object, 'id', $linkback, $user->rights->user->user->lire || $user->admin);\n\n\t//print '<div class=\"fichecenter\">';\n\n\tprint '<div class=\"underbanner clearboth\"></div>';\n\tprint '<table class=\"border centpercent\">';\n\n\tprint '<tr><td class=\"titlefield fieldrequired\">'.$langs->trans(\"LabelRIB\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"30\" type=\"text\" name=\"label\" value=\"'.$account->label.'\"></td></tr>';\n\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"BankName\").'</td>';\n\tprint '<td><input size=\"30\" type=\"text\" name=\"bank\" value=\"'.$account->bank.'\"></td></tr>';\n\n\t// Show fields of bank account\n\tforeach ($account->getFieldsToShow() as $val) {\n\t\tif ($val == 'BankCode') {\n\t\t\t$name = 'code_banque';\n\t\t\t$size = 8;\n\t\t\t$content = $account->code_banque;\n\t\t} elseif ($val == 'DeskCode') {\n\t\t\t$name = 'code_guichet';\n\t\t\t$size = 8;\n\t\t\t$content = $account->code_guichet;\n\t\t} elseif ($val == 'BankAccountNumber') {\n\t\t\t$name = 'number';\n\t\t\t$size = 18;\n\t\t\t$content = $account->number;\n\t\t} elseif ($val == 'BankAccountNumberKey') {\n\t\t\t$name = 'cle_rib';\n\t\t\t$size = 3;\n\t\t\t$content = $account->cle_rib;\n\t\t}\n\n\t\tprint '<td>'.$langs->trans($val).'</td>';\n\t\tprint '<td><input size=\"'.$size.'\" type=\"text\" class=\"flat\" name=\"'.$name.'\" value=\"'.$content.'\"></td>';\n\t\tprint '</tr>';\n\t}\n\n\t// IBAN\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"IBAN\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"30\" type=\"text\" name=\"iban\" value=\"'.$account->iban.'\"></td></tr>';\n\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"BIC\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"12\" type=\"text\" name=\"bic\" value=\"'.$account->bic.'\"></td></tr>';\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"BankAccountDomiciliation\").'</td><td colspan=\"4\">';\n\tprint '<textarea name=\"domiciliation\" rows=\"4\" class=\"quatrevingtpercent\">';\n\tprint $account->domiciliation;\n\tprint \"</textarea></td></tr>\";\n\n\tprint '<tr><td>'.$langs->trans(\"BankAccountOwner\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"30\" type=\"text\" name=\"proprio\" value=\"'.$account->proprio.'\"></td></tr>';\n\tprint \"</td></tr>\\n\";\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"BankAccountOwnerAddress\").'</td><td colspan=\"4\">';\n\tprint '<textarea name=\"owner_address\" rows=\"4\" class=\"quatrevingtpercent\">';\n\tprint $account->owner_address;\n\tprint \"</textarea></td></tr>\";\n\n\tprint '</table>';\n\n\t//print '</div>';\n\n\tprint dol_get_fiche_end();\n\n\tprint $form->buttonsSaveCancel(\"Modify\");\n}\n\nif ($id && $action == 'edit' && $user->rights->user->user->creer) {\n\tprint '</form>';\n}\n\nif ($id && $action == 'create' && $user->rights->user->user->creer) {\n\tprint '</form>';\n}\n\n// End of page\nllxFooter();\n$db->close();\n"], "fixing_code": ["<?php\n/* Copyright (C) 2002-2004  Rodolphe Quiedeville <rodolphe@quiedeville.org>\n * Copyright (C) 2003       Jean-Louis Bergamo   <jlb@j1b.org>\n * Copyright (C) 2004-2015  Laurent Destailleur  <eldy@users.sourceforge.net>\n * Copyright (C) 2005-2009  Regis Houssin        <regis.houssin@inodbox.com>\n * Copyright (C) 2013       Peter Fontaine       <contact@peterfontaine.fr>\n * Copyright (C) 2015-2016  Marcos Garc\u00eda        <marcosgdf@gmail.com>\n * Copyright (C) 2015       Alexandre Spangaro   <aspangaro@open-dsi.fr>\n * Copyright (C) 2021       Gauthier VERDOL      <gauthier.verdol@atm-consulting.fr>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n *\t    \\file       htdocs/user/bank.php\n *      \\ingroup    HRM\n *\t\t\\brief      Tab for HRM\n */\n\nrequire '../main.inc.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/usergroups.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/bank.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';\nrequire_once DOL_DOCUMENT_ROOT.'/user/class/userbankaccount.class.php';\nif (!empty($conf->holiday->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/holiday/class/holiday.class.php';\n}\nif (!empty($conf->expensereport->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/expensereport/class/expensereport.class.php';\n}\nif (!empty($conf->salaries->enabled)) {\n\trequire_once DOL_DOCUMENT_ROOT.'/salaries/class/salary.class.php';\n\trequire_once DOL_DOCUMENT_ROOT.'/salaries/class/paymentsalary.class.php';\n}\n\n// Load translation files required by page\n$langs->loadLangs(array('companies', 'commercial', 'banks', 'bills', 'trips', 'holiday', 'salaries'));\n\n$id = GETPOST('id', 'int');\n$ref = GETPOST('ref', 'alphanohtml');\n$bankid = GETPOST('bankid', 'int');\n$action = GETPOST(\"action\", 'alpha');\n$cancel = GETPOST('cancel', 'alpha');\n\n// Security check\n$socid = 0;\nif ($user->socid > 0) {\n\t$socid = $user->socid;\n}\n$feature2 = (($socid && $user->rights->user->self->creer) ? '' : 'user');\n\n$object = new User($db);\nif ($id > 0 || !empty($ref)) {\n\t$result = $object->fetch($id, $ref, '', 1);\n\t$object->getrights();\n}\n\n$account = new UserBankAccount($db);\nif (!$bankid) {\n\t$account->fetch(0, '', $id);\n} else {\n\t$account->fetch($bankid);\n}\nif (empty($account->userid)) {\n\t$account->userid = $object->id;\n}\n\n\n// Define value to know what current user can do on users\n$canadduser = (!empty($user->admin) || $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n$canreaduser = (!empty($user->admin) || $user->rights->user->user->lire || $user->rights->hrm->read_personal_information->read);\n$permissiontoaddbankaccount = (!empty($user->rights->salaries->write) || !empty($user->rights->hrm->employee->write) || !empty($user->rights->user->creer));\n\n// Ok if user->rights->salaries->read or user->rights->hrm->read\n//$result = restrictedArea($user, 'salaries|hrm', $object->id, 'user&user', $feature2);\n$ok = false;\nif ($user->id == $id) {\n\t$ok = true; // A user can always read its own card\n}\nif (!empty($user->rights->salaries->read)) {\n\t$ok = true;\n}\nif (!empty($user->rights->hrm->read)) {\n\t$ok = true;\n}\nif (!empty($user->rights->expensereport->lire) && ($user->id == $object->id || $user->rights->expensereport->readall)) {\n\t$ok = true;\n}\nif (!$ok) {\n\taccessforbidden();\n}\n\n\n/*\n *\tActions\n */\n\nif ($action == 'add' && !$cancel && $permissiontoaddbankaccount) {\n\t$account->userid          = $object->id;\n\n\t$account->bank            = GETPOST('bank', 'alpha');\n\t$account->label           = GETPOST('label', 'alpha');\n\t$account->courant         = GETPOST('courant', 'alpha');\n\t$account->code_banque     = GETPOST('code_banque', 'alpha');\n\t$account->code_guichet    = GETPOST('code_guichet', 'alpha');\n\t$account->number          = GETPOST('number', 'alpha');\n\t$account->cle_rib         = GETPOST('cle_rib', 'alpha');\n\t$account->bic             = GETPOST('bic', 'alpha');\n\t$account->iban            = GETPOST('iban', 'alpha');\n\t$account->domiciliation   = GETPOST('domiciliation', 'alpha');\n\t$account->proprio         = GETPOST('proprio', 'alpha');\n\t$account->owner_address   = GETPOST('owner_address', 'alpha');\n\n\t$result = $account->create($user);\n\n\tif (!$result) {\n\t\tsetEventMessages($account->error, $account->errors, 'errors');\n\t\t$action = 'edit'; // Force chargement page edition\n\t} else {\n\t\tsetEventMessages($langs->trans('RecordSaved'), null, 'mesgs');\n\t\t$action = '';\n\t}\n}\n\nif ($action == 'update' && !$cancel && $permissiontoaddbankaccount) {\n\t$account->userid = $object->id;\n\n\t/*\n\tif ($action == 'update' && !$cancel)\n\t{\n\t\trequire_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';\n\n\t\tif ($canedituser)    // Case we can edit all field\n\t\t{\n\t\t\t$error = 0;\n\n\t\t\tif (!$error)\n\t\t\t{\n\t\t\t\t$objectuser->fetch($id);\n\n\t\t\t\t$objectuser->oldcopy = clone $objectuser;\n\n\t\t\t\t$db->begin();\n\n\t\t\t\t$objectuser->default_range = GETPOST('default_range');\n\t\t\t\t$objectuser->default_c_exp_tax_cat = GETPOST('default_c_exp_tax_cat');\n\n\t\t\t\tif (!$error) {\n\t\t\t\t\t$ret = $objectuser->update($user);\n\t\t\t\t\tif ($ret < 0) {\n\t\t\t\t\t\t$error++;\n\t\t\t\t\t\tif ($db->errno() == 'DB_ERROR_RECORD_ALREADY_EXISTS') {\n\t\t\t\t\t\t\t$langs->load(\"errors\");\n\t\t\t\t\t\t\tsetEventMessages($langs->trans(\"ErrorLoginAlreadyExists\", $objectuser->login), null, 'errors');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetEventMessages($objectuser->error, $objectuser->errors, 'errors');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$error && !count($objectuser->errors)) {\n\t\t\t\t\tsetEventMessages($langs->trans(\"UserModified\"), null, 'mesgs');\n\t\t\t\t\t$db->commit();\n\t\t\t\t} else {\n\t\t\t\t\t$db->rollback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}*/\n\n\t$account->bank            = GETPOST('bank', 'alpha');\n\t$account->label           = GETPOST('label', 'alpha');\n\t$account->courant         = GETPOST('courant', 'alpha');\n\t$account->code_banque     = GETPOST('code_banque', 'alpha');\n\t$account->code_guichet    = GETPOST('code_guichet', 'alpha');\n\t$account->number          = GETPOST('number', 'alpha');\n\t$account->cle_rib         = GETPOST('cle_rib', 'alpha');\n\t$account->bic             = GETPOST('bic', 'alpha');\n\t$account->iban            = GETPOST('iban', 'alpha');\n\t$account->domiciliation   = GETPOST('domiciliation', 'alpha');\n\t$account->proprio         = GETPOST('proprio', 'alpha');\n\t$account->owner_address   = GETPOST('owner_address', 'alpha');\n\n\t$result = $account->update($user);\n\n\tif (!$result) {\n\t\tsetEventMessages($account->error, $account->errors, 'errors');\n\t\t$action = 'edit'; // Force chargement page edition\n\t} else {\n\t\tsetEventMessages($langs->trans('RecordSaved'), null, 'mesgs');\n\t\t$action = '';\n\t}\n}\n\n// update birth\nif ($action == 'setbirth' && $canadduser && !$cancel) {\n\t$object->birth = dol_mktime(0, 0, 0, GETPOST('birthmonth', 'int'), GETPOST('birthday', 'int'), GETPOST('birthyear', 'int'));\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update personal email\nif ($action == 'setpersonal_email' && $canadduser && !$cancel) {\n\t$object->personal_email = (string) GETPOST('personal_email', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update personal mobile\nif ($action == 'setpersonal_mobile' && $canadduser && !$cancel) {\n\t$object->personal_mobile = (string) GETPOST('personal_mobile', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update ref_employee\nif ($action == 'setref_employee' && $canadduser && !$cancel) {\n\t$object->ref_employee = (string) GETPOST('ref_employee', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\n// update national_registration_number\nif ($action == 'setnational_registration_number' && $canadduser && !$cancel) {\n\t$object->national_registration_number = (string) GETPOST('national_registration_number', 'alphanohtml');\n\t$result = $object->update($user);\n\tif ($result < 0) {\n\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t}\n}\n\nif (!empty($conf->global->MAIN_USE_EXPENSE_IK)) {\n\t// update default_c_exp_tax_cat\n\tif ($action == 'setdefault_c_exp_tax_cat' && $canadduser) {\n\t\t$object->default_c_exp_tax_cat = GETPOST('default_c_exp_tax_cat', 'int');\n\t\t$result = $object->update($user);\n\t\tif ($result < 0) {\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n\n\t// update default range\n\tif ($action == 'setdefault_range' && $canadduser) {\n\t\t$object->default_range = GETPOST('default_range', 'int');\n\t\t$result = $object->update($user);\n\t\tif ($result < 0) {\n\t\t\tsetEventMessages($object->error, $object->errors, 'errors');\n\t\t}\n\t}\n}\n\n\n/*\n *\tView\n */\n\n$form = new Form($db);\n\n$childids = $user->getAllChildIds(1);\n\nllxHeader(null, $langs->trans(\"BankAccounts\"));\n\n$head = user_prepare_head($object);\n\nif ($id && $bankid && $action == 'edit' && ($user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write)) {\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"post\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"update\">';\n\tprint '<input type=\"hidden\" name=\"id\" value=\"'.GETPOST(\"id\", 'int').'\">';\n\tprint '<input type=\"hidden\" name=\"bankid\" value=\"'.$bankid.'\">';\n}\nif ($id && $action == 'create' && $user->rights->user->user->creer) {\n\tprint '<form action=\"'.$_SERVER['PHP_SELF'].'?id='.$object->id.'\" method=\"post\">';\n\tprint '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\tprint '<input type=\"hidden\" name=\"action\" value=\"add\">';\n\tprint '<input type=\"hidden\" name=\"bankid\" value=\"'.$bankid.'\">';\n}\n\n\n// View\nif ($action != 'edit' && $action != 'create') {\t\t// If not bank account yet, $account may be empty\n\t$title = $langs->trans(\"User\");\n\tprint dol_get_fiche_head($head, 'bank', $title, -1, 'user');\n\n\t$linkback = '';\n\n\tif ($user->rights->user->user->lire || $user->admin) {\n\t\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/user/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\t}\n\n\tdol_banner_tab($object, 'id', $linkback, $user->rights->user->user->lire || $user->admin);\n\n\tprint '<div class=\"fichecenter\"><div class=\"fichehalfleft\">';\n\n\tprint '<div class=\"underbanner clearboth\"></div>';\n\n\tprint '<table class=\"border centpercent tableforfield\">';\n\n\tprint '<tr><td class=\"titlefieldmiddle\">'.$langs->trans(\"Login\").'</td>';\n\tif (!empty($object->ldap_sid) && $object->statut == 0) {\n\t\tprint '<td class=\"error\">';\n\t\tprint $langs->trans(\"LoginAccountDisableInDolibarr\");\n\t\tprint '</td>';\n\t} else {\n\t\tprint '<td>';\n\t\t$addadmin = '';\n\t\tif (property_exists($object, 'admin')) {\n\t\t\tif (!empty($conf->multicompany->enabled) && !empty($object->admin) && empty($object->entity)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"SuperAdministratorDesc\"), \"redstar\", 'class=\"paddingleft\"');\n\t\t\t} elseif (!empty($object->admin)) {\n\t\t\t\t$addadmin .= img_picto($langs->trans(\"AdministratorDesc\"), \"star\", 'class=\"paddingleft\"');\n\t\t\t}\n\t\t}\n\t\tprint showValueWithClipboardCPButton($object->login).$addadmin;\n\t\tprint '</td>';\n\t}\n\tprint '</tr>';\n\n\n\t// Hierarchy\n\tprint '<tr><td>'.$langs->trans(\"HierarchicalResponsible\").'</td>';\n\tprint '<td>';\n\tif (empty($object->fk_user)) {\n\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t} else {\n\t\t$huser = new User($db);\n\t\tif ($object->fk_user > 0) {\n\t\t\t$huser->fetch($object->fk_user);\n\t\t\tprint $huser->getNomUrl(1);\n\t\t} else {\n\t\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span>';\n\t\t}\n\t}\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Expense report validator\n\tif (!empty($conf->expensereport->enabled)) {\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"ForceUserExpenseValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tif (!empty($object->fk_user_expense_validator)) {\n\t\t\t$evuser = new User($db);\n\t\t\t$evuser->fetch($object->fk_user_expense_validator);\n\t\t\tprint $evuser->getNomUrl(1);\n\t\t}\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Holiday request validator\n\tif (!empty($conf->holiday->enabled)) {\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"ForceUserHolidayValidator\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"ValidatorIsSupervisorByDefault\"), 1, 'help');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tif (!empty($object->fk_user_holiday_validator)) {\n\t\t\t$hvuser = new User($db);\n\t\t\t$hvuser->fetch($object->fk_user_holiday_validator);\n\t\t\tprint $hvuser->getNomUrl(1);\n\t\t}\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Position/Job\n\tprint '<tr><td>'.$langs->trans(\"PostOrFunction\").'</td>';\n\tprint '<td>'.dol_escape_htmltag($object->job).'</td>';\n\tprint '</tr>'.\"\\n\";\n\n\t// Weeklyhours\n\tprint '<tr><td>'.$langs->trans(\"WeeklyHours\").'</td>';\n\tprint '<td>';\n\tprint price2num($object->weeklyhours);\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Sensitive salary/value information\n\tif ((empty($user->socid) && in_array($id, $childids))\t// A user can always see salary/value information for its subordinates\n\t\t|| (!empty($conf->salaries->enabled) && !empty($user->rights->salaries->readall))\n\t\t|| (!empty($conf->hrm->enabled) && !empty($user->rights->hrm->employee->read))) {\n\t\t$langs->load(\"salaries\");\n\n\t\t// Salary\n\t\tprint '<tr><td>'.$langs->trans(\"Salary\").'</td>';\n\t\tprint '<td>';\n\t\tprint ($object->salary != '' ? img_picto('', 'salary', 'class=\"pictofixedwidth paddingright\"').'<span class=\"amount\">'.price($object->salary, '', $langs, 1, -1, -1, $conf->currency) : '').'</span>';\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// THM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"THM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"THMDescription\"), 1, 'help', 'classthm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint ($object->thm != '' ?price($object->thm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\n\t\t// TJM\n\t\tprint '<tr><td>';\n\t\t$text = $langs->trans(\"TJM\");\n\t\tprint $form->textwithpicto($text, $langs->trans(\"TJMDescription\"), 1, 'help', 'classtjm');\n\t\tprint '</td>';\n\t\tprint '<td>';\n\t\tprint ($object->tjm != '' ?price($object->tjm, '', $langs, 1, -1, -1, $conf->currency) : '');\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Date employment\n\tprint '<tr><td>'.$langs->trans(\"DateOfEmployment\").'</td>';\n\tprint '<td>';\n\tif ($object->dateemployment) {\n\t\tprint '<span class=\"opacitymedium\">'.$langs->trans(\"FromDate\").'</span> ';\n\t\tprint dol_print_date($object->dateemployment, 'day');\n\t}\n\tif ($object->dateemploymentend) {\n\t\tprint '<span class=\"opacitymedium\"> - '.$langs->trans(\"To\").'</span> ';\n\t\tprint dol_print_date($object->dateemploymentend, 'day');\n\t}\n\tprint '</td>';\n\tprint \"</tr>\\n\";\n\n\t// Date of birth\n\tif ($user->hasRight('hrm', 'read_personal_information', 'read') || $user->hasRight('hrm', 'write_personal_information', 'write')) {\n\t\tprint '<tr>';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"DateOfBirth\", 'birth', $object->birth, $object, $user->rights->user->user->creer);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"DateOfBirth\", 'birth', $object->birth, $object, $user->rights->user->user->creer, 'day', $object->birth);\n\t\tprint '</td>';\n\t\tprint \"</tr>\\n\";\n\t}\n\n\t// Personal email\n\tif ($user->hasRight('hrm', 'read_personal_information', 'read') || $user->hasRight('hrm', 'write_personal_information', 'write')) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"UserPersonalEmail\", 'personal_email', $object->personal_email, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"UserPersonalEmail\", 'personal_email', $object->personal_email, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'email', '', null, null, '', 0, 'dol_print_email');\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// Personal phone\n\tif ($user->hasRight('hrm', 'read_personal_information', 'read') || $user->hasRight('hrm', 'write_personal_information', 'write')) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"UserPersonalMobile\", 'personal_mobile', $object->personal_mobile, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"UserPersonalMobile\", 'personal_mobile', $object->personal_mobile, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'string', '', null, null, '', 0, 'dol_print_phone');\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\tif (!empty($conf->global->MAIN_USE_EXPENSE_IK)) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"DefaultCategoryCar\", 'default_c_exp_tax_cat', $object->default_c_exp_tax_cat, $object, $user->rights->user->user->creer);\n\t\tprint '</td><td>';\n\t\tif ($action == 'editdefault_c_exp_tax_cat') {\n\t\t\t$ret = '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam ? '?'.$moreparam : '').'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"setdefault_c_exp_tax_cat\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\t\t\t$ret .= $form->selectExpenseCategories($object->default_c_exp_tax_cat, 'default_c_exp_tax_cat', 1);\n\t\t\t$ret .= '<input type=\"submit\" class=\"button\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\"> ';\n\t\t\t$ret .= '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t$ret .= '</form>';\n\t\t\tprint $ret;\n\t\t} else {\n\t\t\t$label_exp_tax_cat = dol_getIdFromCode($db, $object->default_c_exp_tax_cat, 'c_exp_tax_cat', 'rowid', 'label');\n\t\t\tprint $langs->trans($label_exp_tax_cat);\n\t\t\t//print $form->editfieldval(\"DefaultCategoryCar\", 'default_c_exp_tax_cat', $object->default_c_exp_tax_cat, $object, $user->rights->user->user->creer, 'string', ($object->default_c_exp_tax_cat != '' ? $object->default_c_exp_tax_cat : ''));\n\t\t}\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"DefaultRangeNumber\", 'default_range', $object->default_range, $object, $user->rights->user->user->creer);\n\t\tprint '</td><td>';\n\t\tif ($action == 'editdefault_range') {\n\t\t\t$ret = '<form method=\"post\" action=\"'.$_SERVER[\"PHP_SELF\"].($moreparam ? '?'.$moreparam : '').'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"action\" value=\"setdefault_range\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"token\" value=\"'.newToken().'\">';\n\t\t\t$ret .= '<input type=\"hidden\" name=\"id\" value=\"'.$object->id.'\">';\n\n\t\t\t$expensereportik = new ExpenseReportIk($db);\n\t\t\t$maxRangeNum = $expensereportik->getMaxRangeNumber($object->default_c_exp_tax_cat);\n\n\t\t\t$ret .= $form->selectarray('default_range', range(0, $maxRangeNum), $object->default_range);\n\t\t\t$ret .= '<input type=\"submit\" class=\"button\" name=\"modify\" value=\"'.$langs->trans(\"Modify\").'\"> ';\n\t\t\t$ret .= '<input type=\"submit\" class=\"button button-cancel\" name=\"cancel\" value=\"'.$langs->trans(\"Cancel\").'\">';\n\t\t\t$ret .= '</form>';\n\t\t\tprint $ret;\n\t\t} else {\n\t\t\tprint $object->default_range;\n\t\t}\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// Accountancy code\n\tif (!empty($conf->accounting->enabled)) {\n\t\tprint '<tr><td>'.$langs->trans(\"AccountancyCode\").'</td>';\n\t\tprint '<td>'.$object->accountancy_code.'</td></tr>';\n\t}\n\n\t// Employee Number\n\tif ($user->hasRight('hrm', 'read_personal_information', 'read') || $user->hasRight('hrm', 'write_personal_information', 'write')) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"RefEmployee\", 'ref_employee', $object->ref_employee, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"RefEmployee\", 'ref_employee', $object->ref_employee, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'string', $object->ref_employee);\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\t// National registration number\n\tif ($user->hasRight('hrm', 'read_personal_information', 'read') || $user->hasRight('hrm', 'write_personal_information', 'write')) {\n\t\tprint '<tr class=\"nowrap\">';\n\t\tprint '<td>';\n\t\tprint $form->editfieldkey(\"NationalRegistrationNumber\", 'national_registration_number', $object->national_registration_number, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write);\n\t\tprint '</td><td>';\n\t\tprint $form->editfieldval(\"NationalRegistrationNumber\", 'national_registration_number', $object->national_registration_number, $object, $user->rights->user->user->creer || $user->rights->hrm->write_personal_information->write, 'string', $object->national_registration_number);\n\t\tprint '</td>';\n\t\tprint '</tr>';\n\t}\n\n\tprint '</table>';\n\n\tprint '</div><div class=\"fichehalfright\">';\n\n\t// Max number of elements in small lists\n\t$MAXLIST = $conf->global->MAIN_SIZE_SHORTLIST_LIMIT;\n\n\t// Latest payments of salaries\n\tif (!empty($conf->salaries->enabled) &&\n\t\t(($user->rights->salaries->read && (in_array($object->id, $childids) || $object->id == $user->id)) || (!empty($user->rights->salaries->readall)))\n\t\t) {\n\t\t$payment_salary = new PaymentSalary($db);\n\t\t$salary = new Salary($db);\n\n\t\t$sql = \"SELECT s.rowid as sid, s.ref as sref, s.label, s.datesp, s.dateep, s.paye, s.amount, SUM(ps.amount) as alreadypaid\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"salary as s\";\n\t\t$sql .= \" LEFT JOIN \".MAIN_DB_PREFIX.\"payment_salary as ps ON (s.rowid = ps.fk_salary)\";\n\t\t$sql .= \" WHERE s.fk_user = \".((int) $object->id);\n\t\t$sql .= \" AND s.entity IN (\".getEntity('salary').\")\";\n\t\t$sql .= \" GROUP BY s.rowid, s.ref, s.label, s.datesp, s.dateep, s.paye, s.amount\";\n\t\t$sql .= \" ORDER BY s.dateep DESC\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tprint '<table class=\"noborder centpercent\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"5\"><table class=\"nobordernopadding centpercent\"><tr><td>'.$langs->trans(\"LastSalaries\", ($num <= $MAXLIST ? \"\" : $MAXLIST)).'</td><td class=\"right\"><a class=\"notasortlink\" href=\"'.DOL_URL_ROOT.'/salaries/list.php?search_user='.$object->login.'\">'.$langs->trans(\"AllSalaries\").'<span class=\"badge marginleftonlyshort\">'.$num.'</span></a></td>';\n\t\t\tprint '</tr></table></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num && $i < $MAXLIST) {\n\t\t\t\t$objp = $db->fetch_object($resql);\n\n\t\t\t\t$salary->id = $objp->sid;\n\t\t\t\t$salary->ref = $objp->sref ? $objp->sref : $objp->sid;\n\t\t\t\t$salary->label = $objp->label;\n\t\t\t\t$salary->datesp = $db->jdate($objp->datesp);\n\t\t\t\t$salary->dateep = $db->jdate($objp->dateep);\n\t\t\t\t$salary->paye = $objp->paye;\n\t\t\t\t$salary->amount = $objp->amount;\n\n\t\t\t\t$payment_salary->id = $objp->rowid;\n\t\t\t\t$payment_salary->ref = $objp->ref;\n\t\t\t\t$payment_salary->datep = $db->jdate($objp->datep);\n\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td class=\"nowraponall\">';\n\t\t\t\tprint $salary->getNomUrl(1);\n\t\t\t\tprint '</td>';\n\n\t\t\t\tprint '<td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->datesp), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->dateep), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" class=\"nowraponall\"><span class=\"amount\">'.price($objp->amount).'</span></td>';\n\t\t\t\tprint '<td class=\"right\" class=\"nowraponall\">'.$salary->getLibStatut(5, $objp->alreadypaid).'</td>';\n\n\t\t\t\tprint '</tr>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$db->free($resql);\n\n\t\t\tif ($num <= 0) {\n\t\t\t\tprint '<td colspan=\"5\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></a>';\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\t// Latest leave requests\n\tif (!empty($conf->holiday->enabled) &&\n\t\t($user->rights->holiday->readall || ($user->rights->holiday->read && $object->id == $user->id))\n\t\t) {\n\t\t$holiday = new Holiday($db);\n\n\t\t$sql = \"SELECT h.rowid, h.statut as status, h.fk_type, h.date_debut, h.date_fin, h.halfday\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"holiday as h\";\n\t\t$sql .= \" WHERE h.fk_user = \".((int) $object->id);\n\t\t$sql .= \" AND h.entity IN (\".getEntity('holiday').\")\";\n\t\t$sql .= \" ORDER BY h.date_debut DESC\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tprint '<table class=\"noborder centpercent\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"4\"><table class=\"nobordernopadding centpercent\"><tr><td>'.$langs->trans(\"LastHolidays\", ($num <= $MAXLIST ? \"\" : $MAXLIST)).'</td><td class=\"right\"><a class=\"notasortlink\" href=\"'.DOL_URL_ROOT.'/holiday/list.php?id='.$object->id.'\">'.$langs->trans(\"AllHolidays\").'<span class=\"badge marginleftonlyshort\">'.$num.'</span></a></td>';\n\t\t\tprint '</tr></table></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num && $i < $MAXLIST) {\n\t\t\t\t$objp = $db->fetch_object($resql);\n\n\t\t\t\t$holiday->id = $objp->rowid;\n\t\t\t\t$holiday->ref = $objp->rowid;\n\n\t\t\t\t$holiday->fk_type = $objp->fk_type;\n\t\t\t\t$holiday->statut = $objp->status;\n\t\t\t\t$holiday->status = $objp->status;\n\n\t\t\t\t$nbopenedday = num_open_day($db->jdate($objp->date_debut, 'gmt'), $db->jdate($objp->date_fin, 'gmt'), 0, 1, $objp->halfday);\n\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td class=\"nowrap\">';\n\t\t\t\tprint $holiday->getNomUrl(1);\n\t\t\t\tprint '</td><td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->date_debut), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" style=\"min-width: 60px\">'.$nbopenedday.' '.$langs->trans('DurationDays').'</td>';\n\t\t\t\tprint '<td class=\"right\" style=\"min-width: 60px\" class=\"nowrap\">'.$holiday->LibStatut($objp->status, 5).'</td></tr>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$db->free($resql);\n\n\t\t\tif ($num <= 0) {\n\t\t\t\tprint '<td colspan=\"4\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></a>';\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\t// Latest expense report\n\tif (!empty($conf->expensereport->enabled) &&\n\t\t($user->rights->expensereport->readall || ($user->rights->expensereport->lire && $object->id == $user->id))\n\t\t) {\n\t\t$exp = new ExpenseReport($db);\n\n\t\t$sql = \"SELECT e.rowid, e.ref, e.fk_statut as status, e.date_debut, e.total_ttc\";\n\t\t$sql .= \" FROM \".MAIN_DB_PREFIX.\"expensereport as e\";\n\t\t$sql .= \" WHERE e.fk_user_author = \".((int) $object->id);\n\t\t$sql .= \" AND e.entity = \".((int) $conf->entity);\n\t\t$sql .= \" ORDER BY e.date_debut DESC\";\n\n\t\t$resql = $db->query($sql);\n\t\tif ($resql) {\n\t\t\t$num = $db->num_rows($resql);\n\n\t\t\tprint '<table class=\"noborder centpercent\">';\n\n\t\t\tprint '<tr class=\"liste_titre\">';\n\t\t\tprint '<td colspan=\"4\"><table class=\"nobordernopadding centpercent\"><tr><td>'.$langs->trans(\"LastExpenseReports\", ($num <= $MAXLIST ? \"\" : $MAXLIST)).'</td><td class=\"right\"><a class=\"notasortlink\" href=\"'.DOL_URL_ROOT.'/expensereport/list.php?id='.$object->id.'\">'.$langs->trans(\"AllExpenseReports\").'<span class=\"badge marginleftonlyshort\">'.$num.'</span></a></td>';\n\t\t\tprint '</tr></table></td>';\n\t\t\tprint '</tr>';\n\n\t\t\t$i = 0;\n\t\t\twhile ($i < $num && $i < $MAXLIST) {\n\t\t\t\t$objp = $db->fetch_object($resql);\n\n\t\t\t\t$exp->id = $objp->rowid;\n\t\t\t\t$exp->ref = $objp->ref;\n\t\t\t\t$exp->status = $objp->status;\n\n\t\t\t\tprint '<tr class=\"oddeven\">';\n\t\t\t\tprint '<td class=\"nowrap\">';\n\t\t\t\tprint $exp->getNomUrl(1);\n\t\t\t\tprint '</td><td class=\"right\" width=\"80px\">'.dol_print_date($db->jdate($objp->date_debut), 'day').\"</td>\\n\";\n\t\t\t\tprint '<td class=\"right\" style=\"min-width: 60px\"><span class=\"amount\">'.price($objp->total_ttc).'</span></td>';\n\t\t\t\tprint '<td class=\"right nowrap\" style=\"min-width: 60px\">'.$exp->LibStatut($objp->status, 5).'</td></tr>';\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$db->free($resql);\n\n\t\t\tif ($num <= 0) {\n\t\t\t\tprint '<td colspan=\"4\"><span class=\"opacitymedium\">'.$langs->trans(\"None\").'</span></a>';\n\t\t\t}\n\t\t\tprint \"</table>\";\n\t\t} else {\n\t\t\tdol_print_error($db);\n\t\t}\n\t}\n\n\tprint '</div></div>';\n\tprint '<div style=\"clear:both\"></div>';\n\n\tprint dol_get_fiche_end();\n\n\t// List of bank accounts (Currently only one bank account possible for each employee)\n\n\t$morehtmlright = '';\n\tif ($account->id == 0) {\n\t\tif ($permissiontoaddbankaccount) {\n\t\t\t$morehtmlright = dolGetButtonTitle($langs->trans('Add'), '', 'fa fa-plus-circle', $_SERVER[\"PHP_SELF\"].'?id='.$object->id.'&amp;action=create');\n\t\t} else {\n\t\t\t$morehtmlright = dolGetButtonTitle($langs->trans('Add'), 'NotEnoughPermission', 'fa fa-plus-circle', '', '', -2);\n\t\t}\n\t} else {\n\t\t$morehtmlright = dolGetButtonTitle($langs->trans('Add'), 'AlreadyOneBankAccount', 'fa fa-plus-circle', '', '', -2);\n\t}\n\n\tprint load_fiche_titre($langs->trans(\"BankAccounts\"), $morehtmlright, 'bank_account');\n\n\tprint '<div class=\"div-table-responsive-no-min\">'; // You can use div-table-responsive-no-min if you dont need reserved height for your table\n\tprint '<table class=\"liste centpercent\">';\n\n\tprint '<tr class=\"liste_titre\">';\n\tprint_liste_field_titre(\"LabelRIB\");\n\tprint_liste_field_titre(\"Bank\");\n\tprint_liste_field_titre(\"RIB\");\n\tprint_liste_field_titre(\"IBAN\");\n\tprint_liste_field_titre(\"BIC\");\n\tprint_liste_field_titre('', $_SERVER[\"PHP_SELF\"], \"\", '', '', '', '', '', 'maxwidthsearch ');\n\tprint \"</tr>\\n\";\n\n\tif ($account->id > 0) {\n\t\tprint '<tr class=\"oddeven\">';\n\t\t// Label\n\t\tprint '<td>'.$account->label.'</td>';\n\t\t// Bank name\n\t\tprint '<td>'.$account->bank.'</td>';\n\t\t// Account number\n\t\tprint '<td>';\n\t\t$string = '';\n\t\tforeach ($account->getFieldsToShow() as $val) {\n\t\t\tif ($val == 'BankCode') {\n\t\t\t\t$string .= $account->code_banque.' ';\n\t\t\t} elseif ($val == 'BankAccountNumber') {\n\t\t\t\t$string .= $account->number.' ';\n\t\t\t} elseif ($val == 'DeskCode') {\n\t\t\t\t$string .= $account->code_guichet.' ';\n\t\t\t} elseif ($val == 'BankAccountNumberKey') {\n\t\t\t\t$string .= $account->cle_rib.' ';\n\t\t\t}\n\t\t}\n\t\tif (!empty($account->label) && $account->number) {\n\t\t\tif (!checkBanForAccount($account)) {\n\t\t\t\t$string .= ' '.img_picto($langs->trans(\"ValueIsNotValid\"), 'warning');\n\t\t\t} else {\n\t\t\t\t$string .= ' '.img_picto($langs->trans(\"ValueIsValid\"), 'info');\n\t\t\t}\n\t\t}\n\n\t\tprint $string;\n\t\tprint '</td>';\n\t\t// IBAN\n\t\tprint '<td>'.$account->iban;\n\t\tif (!empty($account->iban)) {\n\t\t\tif (!checkIbanForAccount($account)) {\n\t\t\t\tprint ' '.img_picto($langs->trans(\"IbanNotValid\"), 'warning');\n\t\t\t}\n\t\t}\n\t\tprint '</td>';\n\t\t// BIC\n\t\tprint '<td>'.$account->bic;\n\t\tif (!empty($account->bic)) {\n\t\t\tif (!checkSwiftForAccount($account)) {\n\t\t\t\tprint ' '.img_picto($langs->trans(\"SwiftNotValid\"), 'warning');\n\t\t\t}\n\t\t}\n\t\tprint '</td>';\n\n\t\t// Edit/Delete\n\t\tprint '<td class=\"right nowraponall\">';\n\t\tif ($permissiontoaddbankaccount) {\n\t\t\tprint '<a class=\"editfielda\" href=\"'.$_SERVER[\"PHP_SELF\"].'?id='.$object->id.'&bankid='.$account->id.'&action=edit&token='.newToken().'\">';\n\t\t\tprint img_picto($langs->trans(\"Modify\"), 'edit');\n\t\t\tprint '</a>';\n\t\t}\n\t\tprint '</td>';\n\n\t\tprint '</tr>';\n\t}\n\n\n\tif ($account->id == 0) {\n\t\t$colspan = 6;\n\t\tprint '<tr><td colspan=\"'.$colspan.'\" class=\"opacitymedium\">'.$langs->trans(\"NoBANRecord\").'</td></tr>';\n\t}\n\n\tprint '</table>';\n\tprint '</div>';\n}\n\n// Edit\nif ($id && ($action == 'edit' || $action == 'create') && $user->rights->user->user->creer) {\n\t$title = $langs->trans(\"User\");\n\tprint dol_get_fiche_head($head, 'bank', $title, 0, 'user');\n\n\t$linkback = '<a href=\"'.DOL_URL_ROOT.'/user/list.php?restore_lastsearch_values=1\">'.$langs->trans(\"BackToList\").'</a>';\n\n\tdol_banner_tab($object, 'id', $linkback, $user->rights->user->user->lire || $user->admin);\n\n\t//print '<div class=\"fichecenter\">';\n\n\tprint '<div class=\"underbanner clearboth\"></div>';\n\tprint '<table class=\"border centpercent\">';\n\n\tprint '<tr><td class=\"titlefield fieldrequired\">'.$langs->trans(\"LabelRIB\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"30\" type=\"text\" name=\"label\" value=\"'.$account->label.'\"></td></tr>';\n\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"BankName\").'</td>';\n\tprint '<td><input size=\"30\" type=\"text\" name=\"bank\" value=\"'.$account->bank.'\"></td></tr>';\n\n\t// Show fields of bank account\n\tforeach ($account->getFieldsToShow() as $val) {\n\t\tif ($val == 'BankCode') {\n\t\t\t$name = 'code_banque';\n\t\t\t$size = 8;\n\t\t\t$content = $account->code_banque;\n\t\t} elseif ($val == 'DeskCode') {\n\t\t\t$name = 'code_guichet';\n\t\t\t$size = 8;\n\t\t\t$content = $account->code_guichet;\n\t\t} elseif ($val == 'BankAccountNumber') {\n\t\t\t$name = 'number';\n\t\t\t$size = 18;\n\t\t\t$content = $account->number;\n\t\t} elseif ($val == 'BankAccountNumberKey') {\n\t\t\t$name = 'cle_rib';\n\t\t\t$size = 3;\n\t\t\t$content = $account->cle_rib;\n\t\t}\n\n\t\tprint '<td>'.$langs->trans($val).'</td>';\n\t\tprint '<td><input size=\"'.$size.'\" type=\"text\" class=\"flat\" name=\"'.$name.'\" value=\"'.$content.'\"></td>';\n\t\tprint '</tr>';\n\t}\n\n\t// IBAN\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"IBAN\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"30\" type=\"text\" name=\"iban\" value=\"'.$account->iban.'\"></td></tr>';\n\n\tprint '<tr><td class=\"fieldrequired\">'.$langs->trans(\"BIC\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"12\" type=\"text\" name=\"bic\" value=\"'.$account->bic.'\"></td></tr>';\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"BankAccountDomiciliation\").'</td><td colspan=\"4\">';\n\tprint '<textarea name=\"domiciliation\" rows=\"4\" class=\"quatrevingtpercent\">';\n\tprint $account->domiciliation;\n\tprint \"</textarea></td></tr>\";\n\n\tprint '<tr><td>'.$langs->trans(\"BankAccountOwner\").'</td>';\n\tprint '<td colspan=\"4\"><input size=\"30\" type=\"text\" name=\"proprio\" value=\"'.$account->proprio.'\"></td></tr>';\n\tprint \"</td></tr>\\n\";\n\n\tprint '<tr><td class=\"tdtop\">'.$langs->trans(\"BankAccountOwnerAddress\").'</td><td colspan=\"4\">';\n\tprint '<textarea name=\"owner_address\" rows=\"4\" class=\"quatrevingtpercent\">';\n\tprint $account->owner_address;\n\tprint \"</textarea></td></tr>\";\n\n\tprint '</table>';\n\n\t//print '</div>';\n\n\tprint dol_get_fiche_end();\n\n\tprint $form->buttonsSaveCancel(\"Modify\");\n}\n\nif ($id && $action == 'edit' && $user->rights->user->user->creer) {\n\tprint '</form>';\n}\n\nif ($id && $action == 'create' && $user->rights->user->user->creer) {\n\tprint '</form>';\n}\n\n// End of page\nllxFooter();\n$db->close();\n"], "filenames": ["htdocs/user/bank.php"], "buggy_code_start_loc": [449], "buggy_code_end_loc": [548], "fixing_code_start_loc": [449], "fixing_code_end_loc": [548], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository dolibarr/dolibarr prior to 16.0.", "other": {"cve": {"id": "CVE-2022-2060", "sourceIdentifier": "security@huntr.dev", "published": "2022-06-13T09:15:10.147", "lastModified": "2022-11-17T17:40:08.173", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository dolibarr/dolibarr prior to 16.0."}, {"lang": "es", "value": "Una vulnerabilidad de tipo Cross-site Scripting (XSS) - Almacenado en el repositorio de GitHub dolibarr/dolibarr versiones anteriores a 16.0"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.7, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dolibarr:dolibarr_erp\\/crm:*:*:*:*:*:*:*:*", "versionEndExcluding": "16.0.0", "matchCriteriaId": "2A8BD8F5-3FDF-4FF2-8291-C5C9F6C2310A"}]}]}], "references": [{"url": "https://github.com/dolibarr/dolibarr/commit/2b5b9957c3010a5db9d1988c2efe5b209b16b47f", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/2acfc8fe-247c-4f88-aeaa-042b6b8690a0", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/dolibarr/dolibarr/commit/2b5b9957c3010a5db9d1988c2efe5b209b16b47f"}}