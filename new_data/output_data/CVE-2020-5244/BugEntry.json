{"buggy_code": ["<?php\n/**\n * BuddyPress Admin Slug Functions.\n *\n * @package BuddyPress\n * @subpackage CoreAdministration\n * @since 2.3.0\n */\n\n// Exit if accessed directly.\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * Renders the page mapping admin panel.\n *\n * @since 1.6.0\n * @todo Use settings API\n */\nfunction bp_core_admin_slugs_settings() {\n?>\n\n\t<div class=\"wrap\">\n\n\t\t<h1><?php _e( 'BuddyPress Settings', 'buddypress' ); ?> </h1>\n\n\t\t<h2 class=\"nav-tab-wrapper\"><?php bp_core_admin_tabs( __( 'Pages', 'buddypress' ) ); ?></h2>\n\t\t<form action=\"\" method=\"post\" id=\"bp-admin-page-form\">\n\n\t\t\t<?php bp_core_admin_slugs_options(); ?>\n\n\t\t\t<p class=\"submit clear\">\n\t\t\t\t<input class=\"button-primary\" type=\"submit\" name=\"bp-admin-pages-submit\" id=\"bp-admin-pages-submit\" value=\"<?php esc_attr_e( 'Save Settings', 'buddypress' ) ?>\"/>\n\t\t\t</p>\n\n\t\t\t<?php wp_nonce_field( 'bp-admin-pages-setup' ); ?>\n\n\t\t</form>\n\t</div>\n\n<?php\n}\n\n/**\n * Generate a list of directory pages, for use when building Components panel markup.\n *\n * @since 2.4.1\n *\n * @return array\n */\nfunction bp_core_admin_get_directory_pages() {\n\t$bp = buddypress();\n\t$directory_pages = array();\n\n\t// Loop through loaded components and collect directories.\n\tif ( is_array( $bp->loaded_components ) ) {\n\t\tforeach( $bp->loaded_components as $component_slug => $component_id ) {\n\n\t\t\t// Only components that need directories should be listed here.\n\t\t\tif ( isset( $bp->{$component_id} ) && !empty( $bp->{$component_id}->has_directory ) ) {\n\n\t\t\t\t// The component->name property was introduced in BP 1.5, so we must provide a fallback.\n\t\t\t\t$directory_pages[$component_id] = !empty( $bp->{$component_id}->name ) ? $bp->{$component_id}->name : ucwords( $component_id );\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Directory Display *****************************************************/\n\n\t/**\n\t * Filters the loaded components needing directory page association to a WordPress page.\n\t *\n\t * @since 1.5.0\n\t *\n\t * @param array $directory_pages Array of available components to set associations for.\n\t */\n\treturn apply_filters( 'bp_directory_pages', $directory_pages );\n}\n\n/**\n * Generate a list of static pages, for use when building Components panel markup.\n *\n * By default, this list contains 'register' and 'activate'.\n *\n * @since 2.4.1\n *\n * @return array\n */\nfunction bp_core_admin_get_static_pages() {\n\t$static_pages = array(\n\t\t'register' => __( 'Register', 'buddypress' ),\n\t\t'activate' => __( 'Activate', 'buddypress' ),\n\t);\n\n\t/**\n\t * Filters the default static pages for BuddyPress setup.\n\t *\n\t * @since 1.6.0\n\t *\n\t * @param array $static_pages Array of static default static pages.\n\t */\n\treturn apply_filters( 'bp_static_pages', $static_pages );\n}\n\n/**\n * Creates reusable markup for page setup on the Components and Pages dashboard panel.\n *\n * @package BuddyPress\n * @since 1.6.0\n * @todo Use settings API\n */\nfunction bp_core_admin_slugs_options() {\n\n\t// Get the existing WP pages.\n\t$existing_pages = bp_core_get_directory_page_ids();\n\n\t// Set up an array of components (along with component names) that have directory pages.\n\t$directory_pages = bp_core_admin_get_directory_pages();\n\n\tif ( !empty( $directory_pages ) ) : ?>\n\n\t\t<h3><?php _e( 'Directories', 'buddypress' ); ?></h3>\n\n\t\t<p><?php _e( 'Associate a WordPress Page with each BuddyPress component directory.', 'buddypress' ); ?></p>\n\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\n\t\t\t\t<?php foreach ( $directory_pages as $name => $label ) : ?>\n\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"bp_pages[<?php echo esc_attr( $name ) ?>]\"><?php echo esc_html( $label ) ?></label>\n\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) switch_to_blog( bp_get_root_blog_id() ); ?>\n\n\t\t\t\t\t\t\t<?php echo wp_dropdown_pages( array(\n\t\t\t\t\t\t\t\t'name'             => 'bp_pages[' . esc_attr( $name ) . ']',\n\t\t\t\t\t\t\t\t'echo'             => false,\n\t\t\t\t\t\t\t\t'show_option_none' => __( '- None -', 'buddypress' ),\n\t\t\t\t\t\t\t\t'selected'         => !empty( $existing_pages[$name] ) ? $existing_pages[$name] : false\n\t\t\t\t\t\t\t) ); ?>\n\n\t\t\t\t\t\t\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\n\n\t\t\t\t\t\t\t\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( 'View', 'buddypress' ); ?></a>\n\n\t\t\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) restore_current_blog(); ?>\n\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\n\n\t\t\t\t<?php endforeach ?>\n\n\t\t\t\t<?php\n\n\t\t\t\t/**\n\t\t\t\t * Fires after the display of default directories.\n\t\t\t\t *\n\t\t\t\t * Allows plugins to add their own directory associations.\n\t\t\t\t *\n\t\t\t\t * @since 1.5.0\n\t\t\t\t */\n\t\t\t\tdo_action( 'bp_active_external_directories' ); ?>\n\n\t\t\t</tbody>\n\t\t</table>\n\n\t<?php\n\n\tendif;\n\n\t/** Static Display ********************************************************/\n\n\t$static_pages = bp_core_admin_get_static_pages();\n\n\tif ( !empty( $static_pages ) ) : ?>\n\n\t\t<h3><?php _e( 'Registration', 'buddypress' ); ?></h3>\n\n\t\t<?php if ( bp_get_signup_allowed() ) : ?>\n\t\t\t<p><?php _e( 'Associate WordPress Pages with the following BuddyPress Registration pages.', 'buddypress' ); ?></p>\n\t\t<?php else : ?>\n\t\t\t<?php if ( is_multisite() ) : ?>\n\t\t\t\t<p><?php printf( __( 'Registration is currently disabled.  Before associating a page is allowed, please enable registration by selecting either the \"User accounts may be registered\" or \"Both sites and user accounts can be registered\" option on <a href=\"%s\">this page</a>.', 'buddypress' ), network_admin_url( 'settings.php' ) ); ?></p>\n\t\t\t<?php else : ?>\n\t\t\t\t<p><?php printf( __( 'Registration is currently disabled.  Before associating a page is allowed, please enable registration by clicking on the \"Anyone can register\" checkbox on <a href=\"%s\">this page</a>.', 'buddypress' ), admin_url( 'options-general.php' ) ); ?></p>\n\t\t\t<?php endif; ?>\n\t\t<?php endif; ?>\n\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\n\t\t\t\t<?php if ( bp_get_signup_allowed() ) : foreach ( $static_pages as $name => $label ) : ?>\n\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"bp_pages[<?php echo esc_attr( $name ) ?>]\"><?php echo esc_html( $label ) ?></label>\n\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) switch_to_blog( bp_get_root_blog_id() ); ?>\n\n\t\t\t\t\t\t\t<?php echo wp_dropdown_pages( array(\n\t\t\t\t\t\t\t\t'name'             => 'bp_pages[' . esc_attr( $name ) . ']',\n\t\t\t\t\t\t\t\t'echo'             => false,\n\t\t\t\t\t\t\t\t'show_option_none' => __( '- None -', 'buddypress' ),\n\t\t\t\t\t\t\t\t'selected'         => !empty( $existing_pages[$name] ) ? $existing_pages[$name] : false\n\t\t\t\t\t\t\t) ) ?>\n\n\t\t\t\t\t\t\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\n\n\t\t\t\t\t\t\t\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( 'View', 'buddypress' ); ?></a>\n\n\t\t\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) restore_current_blog(); ?>\n\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\n\t\t\t\t<?php endforeach; endif; ?>\n\n\t\t\t\t<?php\n\n\t\t\t\t/**\n\t\t\t\t * Fires after the display of default static pages for BuddyPress setup.\n\t\t\t\t *\n\t\t\t\t * @since 1.5.0\n\t\t\t\t */\n\t\t\t\tdo_action( 'bp_active_external_pages' ); ?>\n\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<?php\n\tendif;\n}\n\n/**\n * Handle saving of the BuddyPress slugs.\n *\n * @since 1.6.0\n * @todo Use settings API\n */\nfunction bp_core_admin_slugs_setup_handler() {\n\n\tif ( isset( $_POST['bp-admin-pages-submit'] ) ) {\n\t\tif ( !check_admin_referer( 'bp-admin-pages-setup' ) )\n\t\t\treturn false;\n\n\t\t// Then, update the directory pages.\n\t\tif ( isset( $_POST['bp_pages'] ) ) {\n\t\t\t$valid_pages = array_merge( bp_core_admin_get_directory_pages(), bp_core_admin_get_static_pages() );\n\n\t\t\t$new_directory_pages = array();\n\t\t\tforeach ( (array) $_POST['bp_pages'] as $key => $value ) {\n\t\t\t\tif ( isset( $valid_pages[ $key ] ) ) {\n\t\t\t\t\t$new_directory_pages[ $key ] = (int) $value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbp_core_update_directory_page_ids( $new_directory_pages );\n\t\t}\n\n\t\t$base_url = bp_get_admin_url( add_query_arg( array( 'page' => 'bp-page-settings', 'updated' => 'true' ), 'admin.php' ) );\n\n\t\twp_redirect( $base_url );\n\t}\n}\nadd_action( 'bp_admin_init', 'bp_core_admin_slugs_setup_handler' );\n"], "fixing_code": ["<?php\n/**\n * BuddyPress Admin Slug Functions.\n *\n * @package BuddyPress\n * @subpackage CoreAdministration\n * @since 2.3.0\n */\n\n// Exit if accessed directly.\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * Renders the page mapping admin panel.\n *\n * @since 1.6.0\n * @todo Use settings API\n */\nfunction bp_core_admin_slugs_settings() {\n?>\n\n\t<div class=\"wrap\">\n\n\t\t<h1><?php _e( 'BuddyPress Settings', 'buddypress' ); ?> </h1>\n\n\t\t<h2 class=\"nav-tab-wrapper\"><?php bp_core_admin_tabs( __( 'Pages', 'buddypress' ) ); ?></h2>\n\t\t<form action=\"\" method=\"post\" id=\"bp-admin-page-form\">\n\n\t\t\t<?php bp_core_admin_slugs_options(); ?>\n\n\t\t\t<p class=\"submit clear\">\n\t\t\t\t<input class=\"button-primary\" type=\"submit\" name=\"bp-admin-pages-submit\" id=\"bp-admin-pages-submit\" value=\"<?php esc_attr_e( 'Save Settings', 'buddypress' ) ?>\"/>\n\t\t\t</p>\n\n\t\t\t<?php wp_nonce_field( 'bp-admin-pages-setup' ); ?>\n\n\t\t</form>\n\t</div>\n\n<?php\n}\n\n/**\n * Generate a list of directory pages, for use when building Components panel markup.\n *\n * @since 2.4.1\n *\n * @return array\n */\nfunction bp_core_admin_get_directory_pages() {\n\t$bp = buddypress();\n\t$directory_pages = array();\n\n\t// Loop through loaded components and collect directories.\n\tif ( is_array( $bp->loaded_components ) ) {\n\t\tforeach( $bp->loaded_components as $component_slug => $component_id ) {\n\n\t\t\t// Only components that need directories should be listed here.\n\t\t\tif ( isset( $bp->{$component_id} ) && !empty( $bp->{$component_id}->has_directory ) ) {\n\n\t\t\t\t// The component->name property was introduced in BP 1.5, so we must provide a fallback.\n\t\t\t\t$directory_pages[$component_id] = !empty( $bp->{$component_id}->name ) ? $bp->{$component_id}->name : ucwords( $component_id );\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Directory Display *****************************************************/\n\n\t/**\n\t * Filters the loaded components needing directory page association to a WordPress page.\n\t *\n\t * @since 1.5.0\n\t *\n\t * @param array $directory_pages Array of available components to set associations for.\n\t */\n\treturn apply_filters( 'bp_directory_pages', $directory_pages );\n}\n\n/**\n * Generate a list of static pages, for use when building Components panel markup.\n *\n * By default, this list contains 'register' and 'activate'.\n *\n * @since 2.4.1\n *\n * @return array\n */\nfunction bp_core_admin_get_static_pages() {\n\t$static_pages = array(\n\t\t'register' => __( 'Register', 'buddypress' ),\n\t\t'activate' => __( 'Activate', 'buddypress' ),\n\t);\n\n\t/**\n\t * Filters the default static pages for BuddyPress setup.\n\t *\n\t * @since 1.6.0\n\t *\n\t * @param array $static_pages Array of static default static pages.\n\t */\n\treturn apply_filters( 'bp_static_pages', $static_pages );\n}\n\n/**\n * Creates reusable markup for page setup on the Components and Pages dashboard panel.\n *\n * @package BuddyPress\n * @since 1.6.0\n * @todo Use settings API\n */\nfunction bp_core_admin_slugs_options() {\n\n\t// Get the existing WP pages.\n\t$existing_pages = bp_core_get_directory_page_ids();\n\n\t// Set up an array of components (along with component names) that have directory pages.\n\t$directory_pages = bp_core_admin_get_directory_pages();\n\n\tif ( !empty( $directory_pages ) ) : ?>\n\n\t\t<h3><?php _e( 'Directories', 'buddypress' ); ?></h3>\n\n\t\t<p><?php _e( 'Associate a WordPress Page with each BuddyPress component directory.', 'buddypress' ); ?></p>\n\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\n\t\t\t\t<?php foreach ( $directory_pages as $name => $label ) : ?>\n\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"bp_pages[<?php echo esc_attr( $name ) ?>]\"><?php echo esc_html( $label ) ?></label>\n\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) switch_to_blog( bp_get_root_blog_id() ); ?>\n\n\t\t\t\t\t\t\t<?php echo wp_dropdown_pages( array(\n\t\t\t\t\t\t\t\t'name'             => 'bp_pages[' . esc_attr( $name ) . ']',\n\t\t\t\t\t\t\t\t'echo'             => false,\n\t\t\t\t\t\t\t\t'show_option_none' => __( '- None -', 'buddypress' ),\n\t\t\t\t\t\t\t\t'selected'         => !empty( $existing_pages[$name] ) ? $existing_pages[$name] : false\n\t\t\t\t\t\t\t) ); ?>\n\n\t\t\t\t\t\t\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\n\n\t\t\t\t\t\t\t\t<a href=\"<?php echo esc_url( get_permalink( $existing_pages[$name] ) ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( 'View', 'buddypress' ); ?></a>\n\n\t\t\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) restore_current_blog(); ?>\n\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\n\n\t\t\t\t<?php endforeach ?>\n\n\t\t\t\t<?php\n\n\t\t\t\t/**\n\t\t\t\t * Fires after the display of default directories.\n\t\t\t\t *\n\t\t\t\t * Allows plugins to add their own directory associations.\n\t\t\t\t *\n\t\t\t\t * @since 1.5.0\n\t\t\t\t */\n\t\t\t\tdo_action( 'bp_active_external_directories' ); ?>\n\n\t\t\t</tbody>\n\t\t</table>\n\n\t<?php\n\n\tendif;\n\n\t/** Static Display ********************************************************/\n\n\t$static_pages = bp_core_admin_get_static_pages();\n\n\tif ( !empty( $static_pages ) ) : ?>\n\n\t\t<h3><?php _e( 'Registration', 'buddypress' ); ?></h3>\n\n\t\t<?php if ( bp_get_signup_allowed() ) : ?>\n\t\t\t<p><?php _e( 'Associate WordPress Pages with the following BuddyPress Registration pages.', 'buddypress' ); ?></p>\n\t\t<?php else : ?>\n\t\t\t<?php if ( is_multisite() ) : ?>\n\t\t\t\t<p><?php printf( __( 'Registration is currently disabled.  Before associating a page is allowed, please enable registration by selecting either the \"User accounts may be registered\" or \"Both sites and user accounts can be registered\" option on <a href=\"%s\">this page</a>.', 'buddypress' ), network_admin_url( 'settings.php' ) ); ?></p>\n\t\t\t<?php else : ?>\n\t\t\t\t<p><?php printf( __( 'Registration is currently disabled.  Before associating a page is allowed, please enable registration by clicking on the \"Anyone can register\" checkbox on <a href=\"%s\">this page</a>.', 'buddypress' ), admin_url( 'options-general.php' ) ); ?></p>\n\t\t\t<?php endif; ?>\n\t\t<?php endif; ?>\n\n\t\t<table class=\"form-table\">\n\t\t\t<tbody>\n\n\t\t\t\t<?php if ( bp_get_signup_allowed() ) : foreach ( $static_pages as $name => $label ) : ?>\n\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<label for=\"bp_pages[<?php echo esc_attr( $name ) ?>]\"><?php echo esc_html( $label ) ?></label>\n\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t<td>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) switch_to_blog( bp_get_root_blog_id() ); ?>\n\n\t\t\t\t\t\t\t<?php echo wp_dropdown_pages( array(\n\t\t\t\t\t\t\t\t'name'             => 'bp_pages[' . esc_attr( $name ) . ']',\n\t\t\t\t\t\t\t\t'echo'             => false,\n\t\t\t\t\t\t\t\t'show_option_none' => __( '- None -', 'buddypress' ),\n\t\t\t\t\t\t\t\t'selected'         => !empty( $existing_pages[$name] ) ? $existing_pages[$name] : false\n\t\t\t\t\t\t\t) ) ?>\n\n\t\t\t\t\t\t\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\n\n\t\t\t\t\t\t\t\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( 'View', 'buddypress' ); ?></a>\n\n\t\t\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t\t\t<?php if ( ! bp_is_root_blog() ) restore_current_blog(); ?>\n\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\n\t\t\t\t<?php endforeach; endif; ?>\n\n\t\t\t\t<?php\n\n\t\t\t\t/**\n\t\t\t\t * Fires after the display of default static pages for BuddyPress setup.\n\t\t\t\t *\n\t\t\t\t * @since 1.5.0\n\t\t\t\t */\n\t\t\t\tdo_action( 'bp_active_external_pages' ); ?>\n\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<?php\n\tendif;\n}\n\n/**\n * Handle saving of the BuddyPress slugs.\n *\n * @since 1.6.0\n * @todo Use settings API\n */\nfunction bp_core_admin_slugs_setup_handler() {\n\n\tif ( isset( $_POST['bp-admin-pages-submit'] ) ) {\n\t\tif ( !check_admin_referer( 'bp-admin-pages-setup' ) )\n\t\t\treturn false;\n\n\t\t// Then, update the directory pages.\n\t\tif ( isset( $_POST['bp_pages'] ) ) {\n\t\t\t$valid_pages = array_merge( bp_core_admin_get_directory_pages(), bp_core_admin_get_static_pages() );\n\n\t\t\t$new_directory_pages = array();\n\t\t\tforeach ( (array) $_POST['bp_pages'] as $key => $value ) {\n\t\t\t\tif ( isset( $valid_pages[ $key ] ) ) {\n\t\t\t\t\t$new_directory_pages[ $key ] = (int) $value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbp_core_update_directory_page_ids( $new_directory_pages );\n\t\t}\n\n\t\t$base_url = bp_get_admin_url( add_query_arg( array( 'page' => 'bp-page-settings', 'updated' => 'true' ), 'admin.php' ) );\n\n\t\twp_redirect( $base_url );\n\t}\n}\nadd_action( 'bp_admin_init', 'bp_core_admin_slugs_setup_handler' );\n"], "filenames": ["src/bp-core/admin/bp-core-admin-slugs.php"], "buggy_code_start_loc": [148], "buggy_code_end_loc": [149], "fixing_code_start_loc": [148], "fixing_code_end_loc": [149], "type": "CWE-200", "message": "In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed. This has been patched in version 5.1.2.", "other": {"cve": {"id": "CVE-2020-5244", "sourceIdentifier": "security-advisories@github.com", "published": "2020-02-24T18:15:22.400", "lastModified": "2020-02-25T21:34:35.270", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed. This has been patched in version 5.1.2."}, {"lang": "es", "value": "En BuddyPress versiones anteriores a 5.1.2, las peticiones a un determinado endpoint de la API REST pueden resultar en que los datos de usuarios privados est\u00e9n expuestos. No es necesaria una autenticaci\u00f3n. Esto ha sido parcheado en la versi\u00f3n 5.1.2."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.0, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.6, "impactScore": 5.8}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-200"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:buddypress:buddypress:*:*:*:*:*:wordpress:*:*", "versionStartIncluding": "5.0.0", "versionEndExcluding": "5.1.2", "matchCriteriaId": "C1181B8D-8612-46B8-9886-875B33624CD6"}]}]}], "references": [{"url": "https://buddypress.org/2020/01/buddypress-5-1-2/", "source": "security-advisories@github.com", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://github.com/buddypress/BuddyPress/commit/39294680369a0c992290577a9d740f4a2f2c2ca3", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/buddypress/BuddyPress/security/advisories/GHSA-3j78-7m59-r7gv", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/buddypress/BuddyPress/commit/39294680369a0c992290577a9d740f4a2f2c2ca3"}}