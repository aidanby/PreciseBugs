{"buggy_code": ["<?php \n/**\n *\tThis file is part of PsychoStats.\n *\n *\tWritten by Jason Morriss <stormtrooper@psychostats.com>\n *\tCopyright 2008 Jason Morriss\n *\n *\tPsychoStats is free software: you can redistribute it and/or modify\n *\tit under the terms of the GNU General Public License as published by\n *\tthe Free Software Foundation, either version 3 of the License, or\n *\t(at your option) any later version.\n *\n *\tPsychoStats is distributed in the hope that it will be useful,\n *\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n *\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *\tGNU General Public License for more details.\n *\n *\tYou should have received a copy of the GNU General Public License\n *\talong with PsychoStats.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\tVersion: $Id: login.php 389 2008-04-18 15:04:10Z lifo $\n */\ndefine(\"PSYCHOSTATS_PAGE\", true);\ndefine(\"PSYCHOSTATS_ADMIN_PAGE\", true);\ndefine(\"PSYCHOSTATS_LOGIN_PAGE\", true);\ninclude(\"../includes/common.php\");\ninclude(\"./common.php\");\n$cms->theme->assign('page', basename(__FILE__, '.php'));\n\n$validfields = array('submit','cancel','ref');\n$cms->theme->assign_request_vars($validfields, true);\n\nif ($cancel) {\n\tgotopage(\"../index.php\");\n} elseif ($cms->user->admin_logged_in()) {\n\tpreviouspage('index.php');\n}\n\n$bad_pw_error = $cms->trans('Invalid username or password');\n\n$form = $cms->new_form();\n$form->default_modifier('trim');\n$form->default_validator('blank', $cms->trans(\"This field can not be blank\"));\n$form->field('username', 'user_exists');\n$form->field('password');\n\nif ($submit) {\n\t$form->validate();\n\t$input = $form->values();\n\t$valid = !$form->has_errors();\n\t// protect against CSRF attacks\n\tif ($ps->conf['main']['security']['csrf_protection']) $valid = ($valid and $form->key_is_valid($cms->session));\n\n\tif ($valid) {\n\t\t// attempt to re-authenticate\n\t\t$id = $cms->user->auth($input['username'], $input['password']);\n\t\tif ($id) {\n\t\t\t// load the authenticated user and override the preivous user for this session\n\t\t\tif ($id != $cms->user->userid()) {\n\t\t\t\t$_u =& $cms->new_user();\n\t\t\t\tif (!$_u->load($id)) {\n\t\t\t\t\t$form->error('fatal', $cms->trans(\"Error retreiving user from database\") . \":\" . $_u->loaderr);\n\t\t\t\t\t$valid = false;\n\t\t\t\t} else {\n\t\t\t\t\t$cms->user =& $_u;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$cms->user->is_admin()) {\n\t\t\t\t$form->error('fatal', \"Insufficient Privileges\");\n\t\t\t\t$ps->errlog(sprintf(\"Failed admin login attempt for user '%s' (bad privs) from IP [%s]\", $input['username'], remote_addr()));\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t} else { // auth failed\n\t\t\t$form->error('fatal', $bad_pw_error);\n\t\t\t$ps->errlog(sprintf(\"Failed admin login attempt for user '%s' (bad password) from IP [%s]\", $input['username'], remote_addr()));\n\t\t\t$valid = false;\n\t\t}\n\t}\n\n\t// If authenetication was valid then we'll set the users admin flag and redirect to the previous page\n\tif ($valid and !$form->has_errors()) {\n//\t\theader(\"Cache-Control: no-cache, must-revalidate\");\n\t\t// assign the session a new SID\n\t\t$cms->session->delete_session();\n\t\t$cms->session->sid($cms->session->generate_sid());\n\t\t$cms->session->send_cookie($cms->session->sid());\n\t\t$cms->session->key('');\n\t\t// enable the session admin flag\n\t\t$cms->session->is_admin(1);\n\t\t// make sure the user is actually marked online as well\n\t\t$cms->session->online_status(1, $cms->user->userid());\n\t\tpreviouspage('index.php');\n\t}\n}\n\n// save a new form key in the users session cookie\n// this will also be put into a 'hidden' field in the form\nif ($ps->conf['main']['security']['csrf_protection']) $cms->session->key($form->key());\n\n// assign variables to the theme\n$cms->theme->assign(array(\n\t'errors'\t=> $form->errors(),\n\t'form'\t\t=> $form->values(),\n\t'form_key'\t=> $ps->conf['main']['security']['csrf_protection'] ? $cms->session->key() : '',\n));\n\n// display the output\n$basename = basename(__FILE__, '.php');\n$cms->theme->add_css('css/forms.css');\n$cms->theme->add_js('js/forms.js');\n$cms->theme->add_js('js/login.js');\n$cms->full_page($basename, $basename, $basename.'_header', $basename.'_footer');\n\n// validator functions --------------------------------------------------------------------------\n\nfunction user_exists($var, $value, &$form) {\n\tglobal $cms, $ps, $bad_pw_error;\n\tif (!$cms->user->username_exists($value)) {\n\t\t$ps->errlog(sprintf(\"Failed login attempt for unknown user '%s' from IP [%s]\", $value, remote_addr()));\n\t\t$form->error('fatal', $bad_pw_error);\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction password_match($var, $value, &$form) {\n\tglobal $valid, $cms, $ps;\n\tif (!empty($value)) {\n\t\tif ($value != $form->input['password2']) {\n\t\t\t$valid = false;\n\t\t\t$form->error($var, $cms->trans(\"Passwords do not match\"));\n\t\t}\n\t}\n\treturn $valid;\n}\n\n?>\n"], "fixing_code": ["<?php \n/**\n *\tThis file is part of PsychoStats.\n *\n *\tWritten by Jason Morriss <stormtrooper@psychostats.com>\n *\tCopyright 2008 Jason Morriss\n *\n *\tPsychoStats is free software: you can redistribute it and/or modify\n *\tit under the terms of the GNU General Public License as published by\n *\tthe Free Software Foundation, either version 3 of the License, or\n *\t(at your option) any later version.\n *\n *\tPsychoStats is distributed in the hope that it will be useful,\n *\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n *\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *\tGNU General Public License for more details.\n *\n *\tYou should have received a copy of the GNU General Public License\n *\talong with PsychoStats.  If not, see <http://www.gnu.org/licenses/>.\n *\n *\tVersion: $Id: login.php 389 2008-04-18 15:04:10Z lifo $\n */\ndefine(\"PSYCHOSTATS_PAGE\", true);\ndefine(\"PSYCHOSTATS_ADMIN_PAGE\", true);\ndefine(\"PSYCHOSTATS_LOGIN_PAGE\", true);\ninclude(\"../includes/common.php\");\ninclude(\"./common.php\");\n$cms->theme->assign('page', basename(__FILE__, '.php'));\n\n$_GET['ref'] = htmlspecialchars($_GET['ref']); //XSS Fix. Thanks to JS2007\n$validfields = array('submit','cancel','ref');\n$cms->theme->assign_request_vars($validfields, true);\n\nif ($cancel) {\n\tgotopage(\"../index.php\");\n} elseif ($cms->user->admin_logged_in()) {\n\tpreviouspage('index.php');\n}\n\n$bad_pw_error = $cms->trans('Invalid username or password');\n\n$form = $cms->new_form();\n$form->default_modifier('trim');\n$form->default_validator('blank', $cms->trans(\"This field can not be blank\"));\n$form->field('username', 'user_exists');\n$form->field('password');\n\nif ($submit) {\n\t$form->validate();\n\t$input = $form->values();\n\t$valid = !$form->has_errors();\n\t// protect against CSRF attacks\n\tif ($ps->conf['main']['security']['csrf_protection']) $valid = ($valid and $form->key_is_valid($cms->session));\n\n\tif ($valid) {\n\t\t// attempt to re-authenticate\n\t\t$id = $cms->user->auth($input['username'], $input['password']);\n\t\tif ($id) {\n\t\t\t// load the authenticated user and override the preivous user for this session\n\t\t\tif ($id != $cms->user->userid()) {\n\t\t\t\t$_u =& $cms->new_user();\n\t\t\t\tif (!$_u->load($id)) {\n\t\t\t\t\t$form->error('fatal', $cms->trans(\"Error retreiving user from database\") . \":\" . $_u->loaderr);\n\t\t\t\t\t$valid = false;\n\t\t\t\t} else {\n\t\t\t\t\t$cms->user =& $_u;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$cms->user->is_admin()) {\n\t\t\t\t$form->error('fatal', \"Insufficient Privileges\");\n\t\t\t\t$ps->errlog(sprintf(\"Failed admin login attempt for user '%s' (bad privs) from IP [%s]\", $input['username'], remote_addr()));\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t} else { // auth failed\n\t\t\t$form->error('fatal', $bad_pw_error);\n\t\t\t$ps->errlog(sprintf(\"Failed admin login attempt for user '%s' (bad password) from IP [%s]\", $input['username'], remote_addr()));\n\t\t\t$valid = false;\n\t\t}\n\t}\n\n\t// If authenetication was valid then we'll set the users admin flag and redirect to the previous page\n\tif ($valid and !$form->has_errors()) {\n//\t\theader(\"Cache-Control: no-cache, must-revalidate\");\n\t\t// assign the session a new SID\n\t\t$cms->session->delete_session();\n\t\t$cms->session->sid($cms->session->generate_sid());\n\t\t$cms->session->send_cookie($cms->session->sid());\n\t\t$cms->session->key('');\n\t\t// enable the session admin flag\n\t\t$cms->session->is_admin(1);\n\t\t// make sure the user is actually marked online as well\n\t\t$cms->session->online_status(1, $cms->user->userid());\n\t\tpreviouspage('index.php');\n\t}\n}\n\n// save a new form key in the users session cookie\n// this will also be put into a 'hidden' field in the form\nif ($ps->conf['main']['security']['csrf_protection']) $cms->session->key($form->key());\n\n// assign variables to the theme\n$cms->theme->assign(array(\n\t'errors'\t=> $form->errors(),\n\t'form'\t\t=> $form->values(),\n\t'form_key'\t=> $ps->conf['main']['security']['csrf_protection'] ? $cms->session->key() : '',\n));\n\n// display the output\n$basename = basename(__FILE__, '.php');\n$cms->theme->add_css('css/forms.css');\n$cms->theme->add_js('js/forms.js');\n$cms->theme->add_js('js/login.js');\n$cms->full_page($basename, $basename, $basename.'_header', $basename.'_footer');\n\n// validator functions --------------------------------------------------------------------------\n\nfunction user_exists($var, $value, &$form) {\n\tglobal $cms, $ps, $bad_pw_error;\n\tif (!$cms->user->username_exists($value)) {\n\t\t$ps->errlog(sprintf(\"Failed login attempt for unknown user '%s' from IP [%s]\", $value, remote_addr()));\n\t\t$form->error('fatal', $bad_pw_error);\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction password_match($var, $value, &$form) {\n\tglobal $valid, $cms, $ps;\n\tif (!empty($value)) {\n\t\tif ($value != $form->input['password2']) {\n\t\t\t$valid = false;\n\t\t\t$form->error($var, $cms->trans(\"Passwords do not match\"));\n\t\t}\n\t}\n\treturn $valid;\n}\n\n?>\n"], "filenames": ["upload/admin/login.php"], "buggy_code_start_loc": [29], "buggy_code_end_loc": [29], "fixing_code_start_loc": [30], "fixing_code_end_loc": [31], "type": "CWE-79", "message": "A vulnerability classified as problematic has been found in Stars Alliance PsychoStats up to 3.2.2a. This affects an unknown part of the file upload/admin/login.php. The manipulation of the argument ref leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.2.2b is able to address this issue. The name of the patch is 5d3b7311fd5085ec6ea1b1bfa9a05285964e07e4. It is recommended to upgrade the affected component. The identifier VDB-230265 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2010-10010", "sourceIdentifier": "cna@vuldb.com", "published": "2023-06-01T05:15:09.503", "lastModified": "2023-06-08T16:35:34.303", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in Stars Alliance PsychoStats up to 3.2.2a. This affects an unknown part of the file upload/admin/login.php. The manipulation of the argument ref leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.2.2b is able to address this issue. The name of the patch is 5d3b7311fd5085ec6ea1b1bfa9a05285964e07e4. It is recommended to upgrade the affected component. The identifier VDB-230265 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:psychostats:psychostats:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.2.2b", "matchCriteriaId": "E48C920F-0B03-4DBC-AC23-7D0DA5EA2514"}]}]}], "references": [{"url": "https://github.com/StarsAlliance/PsychoStats/commit/5d3b7311fd5085ec6ea1b1bfa9a05285964e07e4", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/StarsAlliance/PsychoStats/releases/tag/3.2.2b", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.230265", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.230265", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/StarsAlliance/PsychoStats/commit/5d3b7311fd5085ec6ea1b1bfa9a05285964e07e4"}}