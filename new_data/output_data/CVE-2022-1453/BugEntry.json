{"buggy_code": ["=== RSVPMaker ===\nContributors: davidfcarr\nDonate: http://www.rsvpmaker.com\nTags: event, calendar, rsvp, custom post type, paypal, stripe, email, mailchimp, gutenberg\nDonate link: http://rsvpmaker.com/\nLicense: GPLv2\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\nRequires PHP: 5.6\nRequires at least: 5.0\nTested up to: 5.9.2\nStable tag: 9.2.5\n\nSchedule events, send invitations, track RSVPs, and collect payment via PayPal or Stripe.\n\n== Description ==\n\nRSVPMaker is an event scheduling and RSVP tracking plugin for WordPress. Use it to:\n\n* Schedule and promote events of all sorts: conferences, classes, seminars, speaking events, parties and weddings are a few common uses.\n* Register attendees, prompting them to enter whatever information you need, including the names of guests.\n* Collect money using PayPal or Stripe.\n* Promote your event on social media and send out email list invitations using the integrations with MailChimp and MailPoet. Can also be used to for email newsletters based on blog posts or event roundups from your website.\n* Create webinars and other online events leveraging free resources like the YouTube Live service.\n* Use the Limited Time Content Gutenberg block -- a wrapper block that can include paragraphs, images, and other content -- to set a start and/or end time for the display of content. Useful for promoting events and limited time pricing on your home page or in the body of a blog post, without looking foolish if you forget to take down those promotions.\n\nhttps://youtu.be/NmwN1T9s44E\n\nRSVPMaker is free and open source, with no upsell to a premium version. The author is available to consult on customizations, but generally useful enhancements are folded back into the core plugin code. RSVPMaker also aims to be developer-friendly, allowing you to build event-centric applications on top of it.\n\nCreating and Managing Events\n\nRSVPMaker events are created and edited just like blog posts in the WordPress editor, with the addition of parameters like event date (so the items can be listed chronologically and displayed on a calendar grid). Supports the Gutenberg editor as well as the classic WordPress editor.\n\nYou can use RSVPMaker for event announcements, or turn on the Collect RSVPs function and set additional options for sending email notifications, customizing confirmation and reminder messages, and setting a price or prices if you will be requesting online payments via PayPal.\n\nRSVP reports can be viewed on the administrator's dashboard or downloaded as spreadsheets.\n\nIf you hold events on a recurring schedule, such as First Monday or Every Friday, you can define a template with the boilerplate details and quickly generate multiple entries that follow that schedule. Individual event posts can still be customized. For example, you might book a series of monthly events for the year and add the names of speakers or agenda details as you go along.\n\nIn addition to being useful for event invitations, the MailChimp integration can be used to generate newsletters incorporating roundups of upcoming events and recent blog posts.\n\n[__RSVPMaker.com__](http://www.rsvpmaker.com/)\n[RSVPMaker on GitHub](https://github.com/davidfcarr/rsvpmaker)\n\nExtensions:\n\n[RSVPMaker for Toastmasters](http://wordpress.org/plugins/rsvpmaker-for-toastmasters) provides meeting management for public speaking and leadership development clubs that are part of Toastmasters International.\n\n[RSVPMaker Volunteer Roles](https://wordpress.org/plugins/rsvpmaker-volunteer-roles/) Sign up people to fill specific roles at an event.\n\n[RSVPMaker Excel](http://wordpress.org/plugins/rsvpmaker-excel) lets you download RSVP reports in Excel for nicer formatting than you get with the CSV output. Uses functions from the [PHPExcel](http://www.phpexcel.net/) library.\n\nTranslations (some may be out of date):\n\nGerman: Markus K\u00f6nig, Bj\u00f6rn Wilkens\n\nDutch: Els van der Zalm\n\nSpanish: Andrew Kurtis, [__WebHostingHub__](http://www.webhostinghub.com/)\n\nPolish: Jaros\u0142aw \u017beli\u0144ski\n\nNorwegian: Thomas Nyb\u00f8\n\nTurkish: G\u00f6ksel U\u00c7AK\n\nThank you!\n\nTranslators please reach out to me if you want an updated POT source file\n\n== Installation ==\n\n1. Upload the entire `rsvpmaker` folder to the `/wp-content/plugins/` directory.\n1. Activate the plugin through the 'Plugins' menu in WordPress.\n1. Visit the RSVPMaker options page to configure default values for RSVP email notifications, etc.\n1. Check that you have set the timezone for your site on the Settings -> General WordPress admin screen\n1. Add the Gutenberg block for the RSVPMaker events listing to a page on your site. For the Classic Editor, see the documentation for shortcodes you can use to create an events listing page, or a list of event headlines for the home page. Use the RSVPMaker widget if you would like to add an events listing to your WordPress sidebar.\n1. OPTIONAL: Depending on your theme, you may want to create a single-rsvpmaker.php template to prevent confusion between the post date and the event date (move the post date display code to the bottom or just remove it). A sample for the Twentyten theme is included with this distribution.\n1. OPTIONAL: To enable online payments for events, obtain the necessary credentials from PayPal or Stripe to enter into RSVPMaker settings.\n\nFor basic usage, you can also have a look at the [plugin homepage](http://www.rsvpmaker.com/).\n\n== Frequently Asked Questions ==\n\n= Where can I get more information about using RSVPMaker? =\n\nFor basic usage, you can also have a look at the [plugin homepage](http://www.rsvpmaker.com/).\n\n== Screenshots ==\n\n1. Example of an event listing with an RSVP Now! button (click to display a customizable form with info you want to collect).\n2. Edit events like WordPress posts, setting date, time, and RSVP options.\n3. Event Options screen allows you to set additional parameters, such as event pricing and RSVP deadlines\n4. Event templates let you schedule multiple events that occur on a regular schedule, projecting future dates and adding them as a batch. You can also track events associated with the template. Individual events can still be customized as needed.\n5. Use the RSVPMaker Upcoming block for Gutenberg or the rsvpmaker_upcoming shortcode to add events listing and/or calendar.\n6. Collect event fees using integrations with PayPal and Stripe.\n7. Use the built-in mailer to send invitations and email newsletters, such as roundups of events. Integrates with MailChimp.\n\n== Credits ==\n\n    RSVPMaker\n    Copyright (C) 2010-2021 David F. Carr\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    See the GNU General Public License at <http://www.gnu.org/licenses/gpl-2.0.html>.\n\t\n\tRSVPMaker also includes code derived from the software development kits for PayPal, \n    Stripe and MailChimp under the license of their creators. Inlining of CSS code in\n    the HTML of email messages provided by the [Emogrifier](https://github.com/MyIntervals/emogrifier) library.\n\n== Changelog ==\n\n= 9.2.5 =\n\n* Fix for issue where transients used to prevent duplicate emails accumulated in the options table\n\n= 9.2.4 =\n\n* Improvement to the convert timezone function, in the context of schedule display.\n\n= 9.2.2 =\n\n* Bug fix, projected time for templates\n\n= 9.2.1 =\n\n* When you activate a full-site editing block theme (or activate RSVPMaker on a site that has it active), the plugin will now create a template based on the single post template tweaked to remove the post date (which can be confusing when emphasized over the event date) and post author fields.\n\n= 9.2 =\n\n* Fixed issues with RSVP Mail utility conflicts with lazy loading of images (not useful for email)\n* Cleaned up email preview display\n* Tweak for compatibility with block-based themes introduced with WordPress 5.9.\n\n= 9.1.9 =\n\n* Fix to CSS for Stripe widgets\n* Ensuring initiation of table that tracks payments\n\n= 9.1.8 =\n\n* Fix problem with templates set to automatically add dates.\n\n= 9.1.7 =\n\n* Making it easier to see if \"Auto add dates\" is active for a template.\n\n= 9.1.6 =\n\n* Added get_rsvpmaker_timestamp utility function\n* Tweak to rsvpmaker_where filter, correcting for timezone\n\n= 9.1.4 =\n\n* Update event row whenever event post is updated\n\n= 9.1.3 =\n\n* Auto add events checkbox for templates in Gutenberg editor\n* Email notification to admin when events are automatically added\n\n= 9.1.1 =\n\n* Form spam countermeasures \n\n= 9.1 =\n\n* Fix for autornew templates\n\n= 9.0.7 =\n\n* Additional checks to sync rsvp_dates meta tag with rsvpmaker_event table\n\n= 9.0.6 =\n\n* Fix RSVPMaker Submission` block for front end (allow anonymous users to submit event draft event posts for approval)\n\n= 9.0.5 =\n\n* Fix to agenda notification templates setup screen.\n\n= 9.0.4 =\n\n* Tweaks to some payment functions\n* rsvpmaker_verify_nonce() for simplified verification of form submissions\n\n= 9.0.3 =\n\n* Simplified date entry for new events, quick event setup screen, front end submission\n\n= 9.0.2 =\n\n* bug fix, consistency check function post titles\n\n= 9.0.1 =\n\n* Selectively copy metadata when applying a template to an existing event\n\n= 8.9.8 =\n\n* More consistency between PayPal and Stripe integrations\n\n= 8.9.4 =\n\n* Fine tune date table routines\n\n= 8.9.3 =\n\n* Check that event timestamps, deadlines are set properly.\n\n= 8.9.2 =\n\n* Test whether PayPal and Stripe keys are valid\n\n= 8.9.1 =\n\n* Updates to PayPal integration\n* Option to show both Stripe and PayPal buttons - toggle on in Stripe block\n* Separate PayPal payment block\n\n= 8.9 =\n\n* Updated translation POT file\n* Updated French translation with content from https://translate.wordpress.org/projects/wp-plugins/rsvpmaker\n\n= 8.8.9 =\n\n* Caching of event attributes using transient\n\n= 8.8.6 =\n\n* Updates to email queue functions\n\n= 8.8.5 =\n\n* Utility for checking database tables added to Cleanup RSVPMaker (under Tools)\n\n= 8.8.3 =\n\n* Simplified email template for group email function.\n\n= 8.8.1 =\n\n* Fix for MailChimp integration\n\n= 8.7.9 =\n\n* Delayed send option for RSVP Mail Utility\n\n* Turkish translation care of G\u00f6ksel U\u00c7AK\n\n= 8.7.4 =\n\n* Security fix\n\n= 8.7.2 =\n\n* Fix to calendar navigation \n\n= 8.7.1 =\n\n* Switched from strftime to wp_date to take advantage of WordPress internationalization functions for dates\n\n= 8.7 =\n\n* Consistency check after event dates are updated\n* Timezone conversion API tweaked to prevent inappropriate display when two region/city zones are effectively same timezone\n\n= 8.6.9 =\n\n* Email reminder to do Create/Update after template update\n\n= 8.6.8 =\n\n* If timezone conversions are active, they're now displayed automatically if the user's timezone is diff from event local time\n* User can switch to display timezones other than ones reported by JavaScript\n\n= 8.6.7 =\n\n* Refinements to timezone adjustment functions\n* Fine tuning rsvpmaker/next-events\n\n= 8.6.5 =\n\n* rsvpmaker/next-events block\n* Tweaks to projected events function (timezone adjustment)\n\n= 8.6.3 =\n\n* When viewing a specific post status like draft or trashed, show all events, not just future.\n\n= 8.6.1 =\n\n* Fix csv export issue\n* Prompt in editor for individual event in series (edit template instead?)\n\n= 8.6 =\n\n* Check post status on autorenew templates\n* Updates to RSVPMaker cleanup tool\n\n= 8.5.8 =\n\n* Using input type=\"time\" on setup form\n\n= 8.5.7 =\n\n* Correct issue with rsvpmaker/schedule block\n\n= 8.5.6 =\n\n* More efficient date and time formatting\n\n= 8.5.5 =\n\n* Better handling of the events database upgrade, particularly for large databases\n* Better fixing of dates with missing enddate.\n\n= 8.5.2 =\n\n* For MailPoet integration, custom:rsvpmaker_youtube shortcode for embedding preview image for a video\n\n= 8.5.1 =\n\n* New API endpoint wp-json/rsvpmaker/v1/events_with_timezone for future events with timezone information\n\n= 8.4.8 =\n\n* Updates to MailPoet and Stripe integration features\n\n= 8.4.5 =\n\n* Improved shortcodes display for MailPoet\n\n= 8.4.4 =\n\n* MailPoet shortcodes widget displayed in the notices header with show/hide toggle\n\n= 8.4.3 =\n\n* Change name space on included MailChimp library to avoid conflicts with other plugins\n\n= 8.4.2 =\n\n* MailPoet integration\n\n= 8.4 =\n\n* Another adjustment to HTML output, specifically for dates and calendar icons at the top of each block.\n* Better way of checking whether rsvpmaker_event table needs to be updated\n\n= 8.3.8 =\n\n* Fix to group email functions.\n\n= 8.3.7 =\n\n* Fix for HTML output error\n\n= 8.3.5 =\n\n* Fixes related to updated custom table for event dates\n\n= 8.3.2 =\n\n* Bot account added to RSVPMailer Utilities\n* Bug fix SQL reference missing $wpdb\n\n= 8.3.1 =\n\n* Tweaks for Toastmasters integration\n* Fixed bug in email template setup\n* Moved server side block registration to rsvpmaker.php (was in gutenberg source folder)\n\n= 8.2.8 =\n\n* Alternative RSVP Forms, such as variant for webinars\n* Restored calendar button on event setup form\n* CSS fix for forms to display correctly with the Twenty Twenty One theme\n\n= 8.2.7 =\n\n* Better cross-browser support for countdown block\n\n= 8.2.6 =\n\n* Tweaked countdown timer block to allow you to use next event (or next event with rsvp on) instead of specifying event ID. Added options for what to display after the countdown expires.\n* Fix for glitch in Quick Edit options for setting event dates.\n\n= 8.2.4 =\n\n* New Countdown Timer block. Can be used within an event or on another page or post where you specify the event you want to count down to.\n* Fix issue with Stripe code and minification\n\n= 8.2.1 =\n\n* Fixing confirmation / reminder links on RSVP Options page\n\n= 8.1.9 =\n\n* New template UI more consistent with datetime UI for new events\n* Fix timezone convert link for email\n* Limit quick edit UI for setting dates to events (not templates or special documents)\n\n= 8.1.8 =\n\n* Multiple event entry screen lets you add blanks for additional events (up to 50).\n* Updated video demo included in readme.txt\n\n= 8.1.7 =\n\n* Further refinements to timezone conversion and new date/time editing UI\n\n= 8.1.6 =\n\n* Bug fix, new template creation\n\n= 8.1.5 =\n\n* Additional validation for dates. Removed reference to JQuery UI datepicker\n\n= 8.1.4 =\n\n* New date setup UI allows you to enter dates in either free text or SQL format\n* Quickly Setup Multiple Event Posts screen also uses this format. Good for setting up a series of events on the same day (for example, sessions within a conference) or on subsequent days.\n\n= 8.1.1 =\n\n* Timezone conversion now applied to blocks and cells in tables with tz-convert class (hyphen not underscore)\n* For tables, use tz-table1, tz-table2, tz-table3 class on table to target 1st, 2nd or 3rd column\n* Gutenberg fix to make rsvpmaker-type taxonomy display properly\n* RSVPMaker Schedule block now allows you to specify that Show in my timezone button should be displayed\n* RSVPMaker Setup screen now allows you to quickly specify a series of events without a template. Enter a few paragraphs of text and edit further later. Event Type and basic parameters can be specified.\n\n= 8.1.0 =\n\n* Show in my timezone button will now convert times in paragaphs, headings, or other blocks tagged with \"tz_convert\"\n* Also applied to cells of a table where the table is tagged with the class \"tz_convert\"\n\n= 8.0.9 =\n\n* Updated way of handling multi-date events, works better with Gutenberg editor and other updated code\n* Updates to iCal export and add to Google for multi-date events\n\n= 8.0.8 =\n\n* Don't run inliner on emails with no html\n\n= 8.0.7 =\n\n* AJAX fix for RSVP Options page\n* Correct end time for iCal calendar items\n\n= 8.0.6 =\n\n* Added timezone / calendar icons back to setup page\n* Option to revert to default confirmation message or default form\n\n= 8.0.5 =\n\n* Fix for white screen issue when creating new events or templates (theme or plugin conflict?)\n\n= 8.0.2 =\n\n* Dropping support for multi-date events. Use templates instead.\n\n= 8.0.1 =\n\n* Workaround for problem with event end time gutenberg component\n* Bug fix for template listings\n\n= 7.9.9 =\n\n* Adding defaults to register_meta\n* Check for empty templates (no schedule set)\n\n= 7.9.7 =\n\n* Bug fix, rsvp link\n\n= 7.9.6 =\n\n* More consistent handling of email placeholder codes, whether in a notification template or the body of the confirmation message.\n\n= 7.9.5 =\n\n* Cleanup of data model for templates\n* Import templates between websites\n\n= 7.9.4 =\n\n* Allow RSVP deadline to extend past start time (if you want to welcome people to register after event starts)\n* Fix error in event pricing code (incorrect sanitization)\n\n= 7.9.3 =\n\n* Fix inappropriate data sanitization on Settings screen\n\n= 7.9.2 =\n\n* Tweaks to Group Email mailing list functions\n\n= 7.9.1 =\n\n* Tweaks to RSVP Report, Stipe payment page, Stripe Report\n\n= 7.9 =\n\n* Correcting error in email template setup\n\n= 7.8.9 =\n\n* Fix error with $email_context global.\n\n= 7.8.8 =\n\n* Fix error in save_post action\n\n= 7.8.4 =\n\n* Fixing plugins_url() syntax to use __FILE__\n\n= 7.8.3 =\n\n* Additional security fixes required by wordpress.org plugin team\n* MailChimp API functions more clearly bundled as an external library https://github.com/DrewM/mailchimp-api\n* Stripe report screen now allows you to fetch records of past transactions, including fees and refunds\n\n= 7.8.2 =\n\n* Fixed issue with email queue initialization\n* Addressed potential SQL injection vulnerability flagged by GitHub\n\n= 7.8.1 =\n\n* Fixed issue with auto-renew from templates formatting dates incorrectly\n* Improved routine for detecting and fixing garbled dates\n\n= 7.8 =\n\n= 7.7.9 =\n\n* Filter events listing by author\n\n= 7.7.8 =\n\n* New import/export function for transferring events between sites.\n* Updated PHPMailer init code in anticipation of WordPress 5.5 change\n\n= 7.7.7 =\n\n* Copy to Email option under New RSVP Email, plus Embed in Email for rsvpmaker events\n\n= 7.7.5 =\n\n* ReCaptcha anti-spam enabled on RSVPMaker Event Submission form (if configured in Settings)\n\n= 7.7.4 =\n\n* Added support for limited rich text editing (bold, italic, and link) with RSVPMaker Event Submission block.\n\n= 7.7.3 =\n\n* RSVPMaker Event Submission block. Adds a form to allow site visitors to submit an event for approval by an editor.\n\n= 7.6.9 =\n\n* Fix for event end times in templates.\n\n= 7.6.8 =\n\n* Tweaks to admin menu options\n* Full screen editing off by default for RSVPMaker and related documents.\n* Option to reset confirmation and reminder messages to default\n\n= 7.6.7 =\n\n* Reminder and follow up messages can be set to go only to those who have paid.\n* Clearer admin bar menu structure for related documents, including confirmations, reminders, and forms, as well as showing those inherited from default and template.\n* Admin bar links are also shown in the Related panel of the RSVPMaker editor sidebar. Links in the Confirmation / Reminder and RSVP Form panels are also more consistent.\n\n= 7.6.6 =\n\n* Fixing a glitch with the auto-renew function for automatically adding event dates based on a template schedule.\n\n= 7.6.5 =\n\n* Refinements for payment confirmation message, RSVPMaker Schedule block for displaying a series of related events.\n\n= 7.6.1 =\n\n* Utility for fixing corrupted dates\n\n= 7.6 =\n\n* Refinements to payment setup screens\n* Created separate payment confirmation message document for details that should only be disclosed after payment, such as the link to a webinar you're charging for.\n\n= 7.5.9 =\n\n* Better detection of duplicate entries\n* Group email uses transactional template\n* Date and time displayed in RSVP form.\n* Future RSVP Links block\n\n= 7.5.8 =\n\n* Tweaks to javascript for changing views on the RSVP Events post listing\n* When other plugins, including my Toastmasters extension, send email, the filter 'rsvpmailer_rule' is called with email address and type of message as arguments. Return 'permit' or 'deny' to determine whether the message will be sent. Supersedes the unsubscribed list. Meant to be a user perference for membership applications.\n\n= 7.5.7 =\n\n* Fix for Future Events / Past Events dropdown on posts listing screen. Previous implementation interfered with standard \"Bulk Actions\" behavior.\n\n= 7.5.4 =\n\n* Fixed error in event template code\n\n= 7.5.3 =\n\n* Fixed error in Gutenberg code.\n\n= 7.5.2 =\n\n* Bug fixes for copying template metadata, rsvpmaker_is_template function\n\n= 7.5.1 =\n\n* Updating POT source file for translators.\n\n= 7.4.9 =\n\n* Complex template schedules like first and third Monday now display properly in Gutenberg editor.\n\n= 7.4.8 =\n\n* Tweaks to the new event setup screen.\n\n= 7.4.5 =\n\n* Limit debug log (if activated) to current day and previous days (delete older files)\n* Clean up WP Cron jobs on plugin deactivate\n\n= 7.4.3 =\n\n* Better support for attachments and embedded images in email shared through the Group Email feature. Still has an issue with messages that have both embedded images and attachments.\n* Polling mailbox and sending messages now handled via WP Cron actions, interval 1 minute (may take longer) \n\n= 7.4.2 =\n\n* Limited support for attachments in Group Email discussion lists.\n\n= 7.4 =\n\n* Email distribution lists for member-oriented sites. Any member with a user can send a message from the email address on their profile (or another whietlisted address) for distribution to other list members. See the Group Email tab under settings.\n\n= 7.3.9 =\n\n* Corrects a couple of issues with copying metadata from templates to individual events (when it's not appropriate).\n\n= 7.3.8 =\n\n* Fix for Stripe payment confirmation message\n\n= 7.3.7 =\n\n* Fix to calendar display (timezone issue)\n* Function to lookup Stripe payments by email\n\n= 7.3.4 =\n\n* Fix to make REST API calls to correct site url\n\n= 7.3.3 =\n\n* Better control over specialized blocks like those for use in the form not being shown in the editor outside of that context.\n* Fix to make the RSVP Mailer module distinguish between sending to all users and users who are members of a specific website in a multisite setup.\n\n= 7.3.2 =\n\n* Wrapping shortcodes and dynamic blocks in test that wp_is_json_request returns false. Was seeing unintended output on document save confusing JSON confirmation message.\n\n= 7.2.6 =\n\n* RSVPMaker Schedule block (also rsvpmaker_daily_schedule shortcode) for displaying an hour by hour schedule of events (for example, for a conference)\n\n= 7.2.5 =\n\n* Make sure Stripe submissions include name and email\n\n= 7.2.2 =\n\n* Fix to calendar display\n\n= 7.2.1 =\n\n* Stripe integration fix, better styling of form.\n\n= 7.1.9 =\n\n* Fixes/updates to blocks for embedding single events or elements of single events (just the button, just the form)\n* Fix to confirmation message option for including the event content with the confirmation.\n\n= 7.1.3 =\n\n* Better compatability with Classic Editor\n* Better guidance on Privacy Page setup.\n\n= 7.1.1 =\n\n* Correcting an error in data validation routine.\n\n= 7.1.0 =\n\n* Neater presentation of the essential options to be set including timezone and the creation of a calendar page.\n* Tweaks to Gutenberg code.\n\n= 7.0.6 =\n\n* Most template schedules can now be set from the Gutenberg editor sidebar. For example, First Monday at 7 pm or Every Wednesday at noon. Exception: More complex schedules (First and Third Monday) still require exiting to the RSVP / Event Options screen.  \n\n= 7.0.5 =\n\n* Single event prices can now be set from Gutenberg editor sidebar. Information about additional options that can be edited in RSVP / Event Options also displayed.\n* Improved display on some themes where RSVPMaker posts are displayed in the default index.php (Archive) template, including Twenty Twenty \n\n= 7.0.1 =\n\n* Updated Stripe support to reflect API that supports newer European regulations for credit card processing (SCA and PSD2).\n* Dropped support, at least for now, for recurring payments (subscriptions) when Stripe is used as a standalone payment button.\n\n= 7.0.0 =\n\n* Fixed error in register_meta function. Updated POT file for translations.\n\n= 6.6.4 =\n\n* Added PHP version check before loading Emogrifier CSS inliner library, which relies on features of PHP 7.1\n\n= 6.6.2 =\n\n* Fix to the option to set relative \"days before\" times for deadline or registration start in the template and have them calculated and copied to individual event posts.\n* Yet more email template tweaks.\n\n= 6.6.1 =\n\n* More email template tweaks\n\n= 6.6.0 =\n\n* Tweaks to email message templating / styling.\n\n= 6.5.8 =\n\n* Improved Email Template editor. New default template for transactional messages.\n* Inlining of CSS code in HTML email documents, based on the [Emogrifier](https://github.com/MyIntervals/emogrifier) library.\n\n= 6.5.6 =\n\n* Tweaks to timing functions.\n\n= 6.5.5 =\n\n* More sidebar improvements. Now divided into panels, with links to confirmation message and RSVP form posts\n\n= 6.5.4 =\n\n* Better Gutenberg sidebar access to setting start and end time and other basic variables. Multi-date events and event pricing still must be handled through RSVP / Event Options screen.\n\n= 6.5.2 =\n\n* More variables can now be edited through the Gutenberg sidebar, rather than the RSVP / Event Options screen.\n\n= 6.5 =\n\n* Event end time now displayed in Gutenberg interface (still have to click through to RSVP / Event Options screen to change)\n* More compact display of admin bar options on front end (shown as submenu under Edit RSVP Event)\n* Portugese translation (thanks to Letrajato)\n\n= 6.4.4 =\n\n* Fix for email unsubscribes\n\n= 6.4.3 =\n\n* Eliminating the use of create_function (deprecated as of PHP 7.2+) in widget definitions\n\n= 6.4.2 =\n\n* Introducing widget and editor block for dynamically loading lists of events from RSVPMaker API endpoints, using JavaScript and JSON. Can be used to fetch event listings from other sites or to perform better in combination with caching solutions.\n\n= 6.4.1 =\n\n* Fix for issue where RSVP Form did not reset properly if the document was deleted.\n\n= 6.4 =\n\n* Fix for scheduled email (featured message)\n* Fix for default options not being applied correctly on event setup (Add New) screen\n* Option to change event post title when adding events from a template\n\n= 6.3.9 =\n\n* Updated support for PayPal (newer REST API) [blog post](https://rsvpmaker.com/blog/2019/09/09/paypal-rest/)\n\n= 6.3.8 =\n\n* UI tweaks to make it more obvious how to create an event based on a template.\n* Fix for an intermittent glitch that prevented Gutenberg from displaying the proper error message after saving an event post.\n\n= 6.3.7 =\n\n* Adding RSVPMaker Dateblock block - changes placement of date/time block. Same as rsvpdateblock shortcode\n* Adding Placeholder block. Add a note that only appears in the editor, not on the front end. Example: \"event description goes here\" text for an event template.\n\n= 6.3.6 =\n\n* In a template, option to set deadline and registration start as x days before rather than a specific date\n* When adding event posts from a template, you now have the option to add them as drafts rather than published posts\n* Tweak to function that allows you to jump ahead to a specific date\n\n= 6.3.4 =\n\n* rsvpdateblock shortcode can be inserted in the body of a post, altering where the date and time information appears.\n* Fix to preserve event end time from template to screen for creating an individual event.\n* Additional span elements wrapped around the time display within datetime block. CSS can be used to change display of span.time or span.end_time\n\n= 6.3.4 =\n\n* Fixes to event_listing shortcode\n* Addition of an RSVPMaker event listing Gutenberg block. For showing a listing of just headlines, dates and links to upcoming events.\n\n= 6.3.1 =\n\n* Corrected an issue with editing of the RSVP form. Under some circumstances, WordPress would strip HTML form field tags from the Gutenberg blocks, so now those are formatted on the server.\n* Added Stripe Form Wrapper Gutenberg component. Can be used for simple order forms for payments independent of the RSVP Form.\n\n= 6.2.6 =\n\n* Changed how event end times are set, more consistent with how other calendaring programs do it.\n\n= 6.2.5 =\n\n* If timezone is not set, suggest one based on JavaScript detection of the user's timezone. Uses https://github.com/iansinnott/jstz\n* Bug fix related to multi-day events.\n\n= 6.2.4 =\n\n* Updated German translation files, thanks to Markus K\u00f6nig\n\n= 6.2.3 =\n\n* Fixing a glitch that caused duplicate posts to be created when a template is set to automatically generate new events according to the template schedule.\n* Fixed the function for loading blog posts into the RSVP Email editor.\n\n= 6.2.2 =\n\n* Tweaks to the scheduled email function. You can now schedule broadcasts relative to the date of the event or for an arbitrary date and time.\n\n= 6.2.1 =\n\n* Fixes for broken features: links to edit confirmation message, adding RSVP records on the back end (from RSVP Report)\n\n= 6.1.9 =\n\n* Change start time based on template\n* Series of updates in 6.1.6-8 related to confirmation / reminder messages\n* Bug fix for stripe charges in currencies other than usd\n\n= 6.1.5 =\n\n* Prevent WordPress from filtering out form tags in and RSVPMaker form posts (was happening for non-admins in Gutenberg version)\n* Make standard RSVPMaker Upcoming block / shortcode work in email.\n\n= 6.1.4 =\n\n* UX changes. Tweaks to admin bar menu, other navigation labels / methods.\n* Fix for date / time display on new events (using defaults from settings screen, not defaulting to midnight)\n* Fix to the mailer utility, import of an event listing or blog post (body content wasn't being imported correctly)\n\n= 6.1.1 =\n\n* RSVPMaker Setup screen now gives more context on previously published events and works for adding a single event based on a template.\n* Notice after template is saved (in Gutenberg) now gives 2 options: New Event from template or Create / Update events.\n\n= 6.1.0 =\n\n* Trying to fix an issue with confirmation messages / payment buttons not showing up for logged in users.\n* Assigning slug to new draft posts.\n\n= 6.0.7 =\n\nBackwards compatibility for sites not running Gutenberg, specifically for confirmation messages.\n\n= 6.0.6 =\n\n* Important bug fix. Options screen was not working properly\n\n= 6.0.5 =\n\n* Added Edit / Customize RSVP Form to admin bar, where relevant\n* More bug fixes (also 6.0.1 to 6.0.4)\n\n= 6.0 =\n\n* New RSVP form, customizable using the Gutenberg editor.\n* Further refinements to setup for confirmation / reminder messages and navigation back to parent post.\n* RSVP reports can now be run on past events that have been deleted as posts. Event titles and dates are tracked in a separate custom DB table.\n* RSVPMaker Cleanup utility added under tools to make it easier to delete old events.\n\n= 5.9.9 =\n\n* Caching of date lookups to improve performance\n* Fix to author archive lookup query setting (to show events as well as blog posts)\n\n= 5.9.7 =\n\n* Tweaked data model for relationship between confirmation / reminder messages and their parent posts.\n* Updated the Event Templates screen, particularly the features for applying a template to an existing event and for creating a template based on an existing event.\n\n= 5.9.6 =\n\n* Fix for DB performance issues\n* Updates to event reminder messages functions\n\n= 5.9.5 =\n\n* More template options shown on Event Setup screen. Trying to make the choice between creating an individual event and using a template clearer from the user interface.\n* Excluding templates and special documents (such as confirmation messages) from search.\n\n= 5.9.4 =\n\n* Yet a better implementation of the custom Gutenberg notification for RSVPMaker templates (no longer displayed more than once if user saves template again)\n* Bug fix related to date display in email newsletter output.\n\n= 5.9.2 =\n\n* Better implementation of the custom Gutenberg notification for RSVPMaker templates.\n\n= 5.9.1 =\n\n* Notice on Gutenberg editing screen prompting user editing template to create / update individual events\n* Tweak to shortcodes such as rsvpmaker_next\n\n= 5.8.9 =\n\n* Tweaks to Event Options screen, routine for automatically adding a Calendar page (uses block format for WordPress 5.0)\n\n= 5.8.8 =\n\n* After registration, form is no longer displayed on the confirmation page unless the user clicks Update RSVP link (removes a source of confusion)\n* Adding API endpoints /wp-json/rsvpmaker/v1/future /wp-json/rsvpmaker/v1/types /wp-json/rsvpmaker/vi/type/slug-goes-here\n* Fixed display of event types in RSVPMaker Upcoming Events block\n\n= 5.8.6 =\n\n* Fix to coupon codes\n* Multiple Admissions option for pricing (Example: reserving a table of 6, rather than counting host/guests individually)\n\n= 5.8.5 =\n\n* Limited Time Content block now allows you to set expired content to automatically be deleted from a post. By default, expired content is hidden (you can go back and change it or remove it manually). If you have WordPress set to save revisions, deleted content will be preserved as part of a past revision.\n\n= 5.8.4 =\n\n* Support for coupon codes (discount pricing for events)\n* Option to send a payment reminders. If someone registers but does not pay, they will get an email reminder after 30 minutes.\n\n= 5.8.3 =\n\n* Added the Limited Time Content block (a wrapper for content with a start time and/or end time specified for how long it should be displayed)\n\n= 5.8.2 =\n\nImprovements to the Stripe payment functions\n\n= 5.8 =\n\n* Update Template Based on Event option added to admin bar - adjust template based on changes to the latest event in a series, rather than the other way around.\n* If an event is based on a template, Edit Template appears under the main Edit link on the admin bar.\n* Added action - do_action('rsvpmaker_stripe_payment',$vars) - other plugins can detect when a successful Stripe online payment transaction is logged.\n\n= 5.7.9 =\n\n* Native support for Stripe online payments (previously supported through an integration with WP Simple Pay)\n* Stripe Charge block for Gutenberg for processing other sorts of charges, such as dues payments or consulting fees, in addition to event payments.\n\n= 5.7.6 =\n\n* Fix for some issues with items being added twice.\n* RSVP On radio buttons now displayed in Gutenberg sidebar.\n\n= 5.7.5 =\n\n* Bug fix, positioning of navigation links at top and/or bottom of calendar.\n\n= 5.7.4 =\n\n* The guest blanks at the bottom of the RSVP form can now be changed to use another label other than \"Guest\" and alter the text of the \"Add to guests\" link. This is not supported by the visual form builder, but you can alter the rsvpguests shortcode with attributes such as [rsvpguests label=\"Athlete\" addmore=\"Add more athletes\"]\n* Send RSVP Email link in admin bar and editor listing for posts and RSVPMaker events.\n\n= 5.7.2 =\n\n* Option to make all notification emails come from the same address (reply to header can be different) to avoid issues with spam filters flagging messages as \"spoofed.\"\n* Code cleanup. Most action calls moved to a separate file. Utilities such as lookups of past and future events moved to rsvpmaker-util.php.\n\n= 5.7.0 =\n\n* WordPress 5.0 / Gutenberg tweaks\n\n= 5.6.8 =\n\n* If you set up reminders associated with an event template, as opposed to an individual event, RSVPMaker will now automatically create a reminders for the next scheduled event in the series and add WordPress cron events for the specified number of hours ahead.\n\n= 5.6.6 =\n\n* Fix for recording units and price when multiple prices offered (for example, adult versus child tickets)\n\n= 5.6.5 =\n\n* Adjusting for a breaking change in the latest Gutenberg release (getSettings function removed from the date component)\n\n= 5.6.4 =\n\n* Fix for potential SQL injection security issue\n\n= 5.6.3 =\n\n* Tested for WordPress 5.0 / Gutenberg\n* Fixed bug with scheduled email broadcasts (featured post for blog roundups)\n* Fixed bug with calendar navigation display of current month\n* Option to set different timezone for individual event\n\n= 5.6.2 =\n\n* Option to limit the size of the export file. You can now also include pages, posts and other WordPress content, in addition to RSVPMaker events.\n\n= 5.6.1 =\n\n* Export RSVPMaker screen added under Tools, plus action hook to clean up imported RSVPMaker event posts.\n\n= 5.5.7 =\n\n* Add Email Options / fix Send Invites links to RSVP Events listing\n* Tweaked the basic form builder for the RSVP form to allow you to set max guests per party\n\n= 5.5.6 =\n\nFix to feature for adding an editor's note to a scheduled email.\n\n= 5.5.5 =\n\nFix for RSVP count display.\n\n= 5.5.1 =\n\n* Fixes to make RSVPMaker \"special\" pages (landing pages, locations) work with Gutenberg turned on.\n* RSVPMaker count of people signed up loaded into event listing via AJAX (prevents issues with caching)\n\n= 5.5 =\n\nRestoring saved locations feature for use with the Classic Editor. Gutenberg version to follow.\n\n= 5.4.9 =\n\n* Eliminating reload of page when event date/time is edited in the Gutenberg sidebar. Most other date / RSVP options set on a separate page ... at least until I can get features working more reliably on Javascript powered screens.\n\n= 5.4.7 =\n\n* Fix for proper multipart alternative coding on HTML email.\n\n= 5.4.6 =\n\n* Limiting output of JS/CSS for admin screens to screens specific to RSVPMaker as a way of avoiding conflicts with other plugins.\n\n= 5.4.2 =\n\n* Further improvements to Gutenberg support. Event Options and RSVP Mailer scheduled email options broken out onto separate screens. Only essential event setting options shown in the Gutenberg editor.\n\n= 5.4.1 =\n\n* Refinements to RSVPMaker support for the Gutenberg editor.\n* RSVP Mailer tool now also works with Gutenberg.\n\n= 5.4 =\n\n* With Gutenberg enabled for RSVPMaker event posts, the meta box at the bottom of the page goes away (because it tends to cause compatability issues) and basic date setting options are instead shown on the sidebar. You can click through to a separate screen for more detailed options, such as customizing the RSVP form or setting event prices. Option to use Gutenberg with RSVPMaker posts is still turned off by default, even if you have the Gutenberg plugin installed or are on WordPress 5.0.\n\n= 5.3.9 =\n\n* To improve compatability with Gutenberg, moved RSVPMaker event registration options from the meta box at the bottom of each event post to a separate screen.\n* Improved sort options for the RSVP Events listing in admin.\n\n= 5.3.7 =\n\n* Adding a Gutenberg-compatible prompt to \"Create/update events from template\" to be displayed when a post is updated, linking to the template projected dates page. The old code for immediately displaying checkboxes for updating future events no longer works because it relied on features of the classic WordPress editor.\n* Added links to the Gutenberg document status section of the sidebar that make it easier to navigate to the Event Options panel (for setting dates, RSVP options), from an event to the template it is based on, or from a template to the projected dates screen.\n* Fixed Event Types (RSVPMaker equivalent of post Categories taxonomy) to be displayed in Gutenberg\n\n= 5.3.4 =\n\n* Preliminary support for Gutenberg, the new WordPress editor, with blocks for inserting events listings: RSVPMaker Upcoming Events for display of an events listing and/or calendar and RSVPMaker Event Embed for inserting a single event (for example in a blog post or a landing page).\n* Checkbox on the RSVPMaker settings page for enabling the Gutenberg editor for composing new RSVPMaker posts.\n\n= 5.3.1 =\n\n* Option to add a privacy consent checkbox to your RSVP forms (recommended for GDPR compliance)\n\n= 5.3 =\n\n* Integration with the new Export Personal Data and Erase Personal Data tools WordPress 4.9.6 added to simplify compliance with privacy regulations such as the EU's General Data Protection Regulation (GDPR)\n\n= 5.2.1 =\n\n* Calendar view now shows events from earlier in the month. In the default styling, past dates are shown with a gray background - to override, change styling for #cpcalendar td.past\n* Unsubscribed emails list now allows you to remove email addresses from the unsubscribed list.\n\n= 5.1.8 =\n\n* Added a server-side check on RSVPs exceeding the maximum count allowed (helps counter some form spam issues)\n\n= 5.1.7 =\n\n* Added setting for RSVP form title\n* Bug fix related to limited time pricing (\"early bird\" scenario)\n\n= 5.1.6 =\n\n* Tweak to tabbed js and css for settings screen.\n\n= 5.1.4 =\n\n* Apply Template / Switch Template options added on editing screen. Makes it easier to apply a new template to the current post.\n\n= 5.1 =\n\n* Save locations and add saved locations to an event post\n* Duplicate reminders for all events associated with a given template\n\n= 5.0 =\n\n* Better / more consistent formatting for Show in My Timezone\n* Tested for WordPress 4.9\n\n= 4.9.8 =\n\n* Adding support for post_type attribute in rsvpmaker_timed shortcode\n\n= 4.9.7 =\n\n* bug fix for rsvpmaker_next shortcode\n* check to make sure function exists before calling rsvpmaker_recaptcha_output (not loaded for older PHP versions)\n\n= 4.9.5 =\n\n* Updates to the rsvpmaker_timed shortcode, including the addition of a post_id attribute (post_id=\"123\" will insert headline and body of the post with the ID 123). You can also include a style attribute for CSS wrapper code such as a border, padding, and background color for the block. If no post_id is specified, the output will be all the content from the start tag to the end tag. With a post_id, no end tag is required. Include the attributes start and/or end to specify a start or end time for the display of a post, for example start=\"2017-11-01 07:00\" end=\"2017-12-31 23:00\" or start=\"November 1, 2017\" end=\"December 31, 2017 11 pm\"\n* The style attribute now also works with the rsvpmaker_one shortcode. Fixed it so you can specify something like [rsvpmaker_one post_id=\"next\" one_format=\"compact\"] and the one_format attribute will be respected. (In the last release, specifying \"next\" instead of a number would always output the full post).\n\n= 4.9.4 =\n\n* Fixes to RSVP Mailer functions for setting up email design templates, pulling content from the blog or calendar.\n\n= 4.9.3 =\n\n* Better organization of the RSVPMaker settings screen, divided into tabs\n\n= 4.9.2 =\n\n* Option to have RSVPMaker calculate event fees, even if you haven't set up an online payment service. This \"Cash or Custom\" option also allows you to add a custom payment gateway.\n* Added hook for custom payment methods, 'rsvpmaker_cash_or_custom' action [documentation](https://rsvpmaker.com/blog/2017/10/18/custom-payment-gateway/)\n\n= 4.9.1 =\n\n* Changed the way the \"additional editors\" function works, if activated in settings. This allows users with authoring but not editing rights to share the right to edit an RSVPMaker event or all the events based on a particular template. To make this work more reliably, the author ID # on the post is now changed when another authorized user (designated by the original author) updates the post.\n* Events embedded in a post or page using the rsvpmaker_one shortcode can now be set to automatically stop displaying when the event date is past.\n* Added new RSVP Mailer options for sending to all past event attendees or all who registered within a specified timeframe.\n\n= 4.9 =\n\n* Test for PHP version before loading code that requires namespace support (introduced in PHP 5.3). Required for ReCaptcha library.\n\n= 4.8.9 =\n\n* Added embed_dateblock shortcode\n* Bug fix, properly removing calendar sql filter\n* Bug fix, css for admin screens\n\n= 4.8.8 =\n\n* Event templates can now be set to let RSVPMaker automatically add dates to the end of the specified schedule\n* Fixed a bug with the recording of timeslot signups (often used to enroll volunteers for specific shifts)\n\n= 4.8.7 =\n\n* Adding support for Google ReCaptcha by incorporating Google's PHP library\n\n= 4.8 =\n\n* Never show \"0 signed up so far\" (start at 1)\n* Checkbox for pages to supress the display of page menu on the front end. Intended as a simple way of turning a full width page template into a landing page, reducing temptation for visitors to click away rather than completing a call to action such as registering for an event embedded in the page.\n\n= 4.7.9 =\n\n* Changed defaults, such as number of days listed on calendar page, to match most common usage.\n* Added a button for inserting a single event on a page, covering variations to show full event with button or form, form only, or button only. Useful for building landing pages promoting one or more events.\n\n= 4.7.8 =\n\n* Fix for email lookup on multisite\n\n= 4.7.7 =\n\n* Fixed lookup of contact info based on email. Also checks for prior rsvps for the current event.\n\n= 4.7.6 =\n\n* Fixing bug in the tracking of \"private data on file\"\n\n= 4.7.5 =\n\n* Try to minimize duplicate RSVPs by searching RSVP list by email address, as the user is typing their email address into the form. On match, they are prompted to update their existing registration rather than adding a new one.\n* Option to turn off email confirmations\n\n= 4.7.4 =\n\n* Factoring out anonymous function call (fails on older versions of PHP)\n\n= 4.7.3 =\n\n* Fix for bug overwriting $_GET[\"page\"] on admin screens\n\n= 4.7.2 =\n\n* Improvements to clone event / create template from event functions\n* Fix to prevent other plugins from modifying the mce editor on reminders editor page\n\n= 4.7.1 =\n\n* Fix to rsvpmaker_upcoming display so doesn't show \"No events listed\" when future events out of date range\n* Meeting durations of 10-55 minutes now supported in dropdown; 15 minute increments after 1 hour\n\n= 4.7 =\n\n* Fix conflict with Jetpack\n\n= 4.6.9 =\n\n* Cleanup of utility functions.\n\n= 4.6.8 =\n\n* RSVP form fields can now be set to appear only on the guest form, not on the main RSVP form. Previously, all fields appeared on the main form and only displaying them on the guest form was optional.\n\n= 4.6.7 =\n\nTweaks for compatibility with PHP 7\n\n= 4.6.4 =\n\n* Notification Templates screen, which appears under RSVP Mailer on the admin dashboard, lets you customize notification and confirmation messages and the information to be included in them. For example, if you want to use the word Registration rather than RSVP in your subject line, or remove the Update RSVP button from confirmation messages, you can now do so.\n* Tagged a few front-end translation strings that had been missed previously.\n\n= 4.6.3 =\n\n* RSVP Report now lets you see details for multiple upcoming or recent events\n\n= 4.6 =\n\n* Tweak to More Events link\n\n= 4.5.9 =\n\n* Improved navigation for archive pages.\n\n= 4.5.6 =\n\n* Fix for volunteer slots signups.\n\n= 4.5.5 =\n\n* New action 'rsvp_recorded' passes and array that you can log or process with your own add_action hook\n* Bug fix for changing time format\n\n= 4.5.2 =\n\n* Support for creating a webinar landing page for something other than YouTube Live.\n* Added filter for data copied from template to individual posts during updates.\n\n= 4.5.1 =\n\n* Fix for copying metadata from template, plus another random bug\n\n= 4.4.9 =\n\n* Fix for UTF-8 encoding of non-English characters in strftime output\n\n= 4.4.8 =\n\n* Fix for event_listing shortcode\n* Tweaks to get_future_events and get_past_events functions\n\n= 4.4.7 =\n\n* Change coding for date display to work in other locales (PHP strftime instead of date)\n\n= 4.4.6 =\n\n* Integration with WP Simple Pay Lite for Stripe (should also work with Pro version), making Stripe payment service an alternative to PayPal. Requires that your site (or at least the event page) be secured via SSL\n* Fix to numbering for guest blanks\n\n= 4.4.4 =\n\nTweaks to the system for scheduled reminder / follow up messages. Plus some overdue code cleanup.\n\n= 4.4.1 =\n\nAdded option to show timezone conversion. Uses JavaScript to convert from UTC time to local time, according to the settings on the user's computer. Useful for online events such as webinars with a worldwide audience.\n\n= 4.3.9 =\n\n* Updated system for managing YouTube Live webinars through RSVPMaker, now automatically generates model landing page plus confirmation, reminder, and follow up messages that you can use as a starting point. When you view an event or a landing page in the editor, navigation links make it easier to navigate between the two, or to the related confirmation and reminder messages.\n* Confirmation and reminder messages are now displayed in the RSVPMailer email template. If you have several templates, you can designate which one should be used for these transactional messages.\n* Registration can be required to view the landing page containing the YouTube Live player. If people register to watch a replay, they will get whatever series of follow up messages you created for the original event. So if a follow up message was supposed to go out two hours after the live event, replay viewers will get that message two hours after watching the replay.\n* \\[ylchat\\] shortcode now automatically stops outputting the iframe for the YouTube Live chat associated with the video feed when it is no longer available after the program. This prevents people from seeing what looks like an error if they view the replay. Now instead of supporting an attribute asking for the time when the feed should be deactivated, the only supported attribute is a note field for a message to be displayed over the chat box. Example: \\[ylchat note=\"Enter your questions below\"\\]\n\n= 4.3.8 =\n\n* Styling tweaks to avoid conflicts with Twentyseventeen (and probably other themes)\n* New shortcode: \\[rsvpmaker_one post_id=\"10\"\\] displays a single event post with ID 10. Shows the complete form unless the attribute showbutton=\"1\" is set\n* New shortcode: \\[rsvpmaker_form post_id=\"10\"\\] displays just the form associated with an event (ID 10 in this example. Could be useful for embedding the form in a landing page that describes the event but where you do not want to include the full event content.\n\n= 4.3.7 =\n\nYouTube Live webinar setup help on reminders page\n\n= 4.3.5 =\n\nTweak to PayPal code\n\n= 4.3.4 =\n\nTweak to localization/translation code.\n\n= 4.3.3 =\n\nNotification to make sure timezone is set properly.\n\n= 4.3.2 =\n\n* Improved event post previews on Facebook by adding event date to the end of the title. RSPMaker now outputs its own og:title Facebook Open Graph metadata (on by default, but can be turned off in settings if this interferes with other SEO plugins).\n* New shortcode, \\[rsvpmaker_next\\], displays just the next scheduled event. If the type attribute is set, that becomes the next event of that type. Example: \\[rsvpmaker_next type=\"webinar\"\\]. Also, this displays the complete form rather than the RSVP Now! button unless showbutton=\"1\" is set.\n* When embedding a YouTube Live stream in a page or post of your WordPress site, you can use the shortcode \\[ylchat\\] to embed the associated comment stream (which can be used to take questions from the audience). This extracts the video ID from the YouTube link included in the page and constructs the iframe for the chat window, according to Google's specifications. You can add attributes for width and height to override the default values (100% wide x 200 pixels tall). To make the comments box stop displaying after the end time for the webinar, use the attribute until as in \\[ylchat until=\"January 30, 2017 8 pm\"\\] or \\[ylchat until=\"2017-01-30 20:00:00\"\\]\n\n= 4.3 =\n\nMade sure all metadata, including pricing, is copied from event templates to individual events.\n\n= 4.2.8 =\n\nFixes to captcha, date encoding in post slug\n\n= 4.2.7 =\n\n* Option for RSVP attendees to cancel when RSVPs are closed (max attendees threshhold met)\n* Number of guests added limited according to max attendees setting\n\n= 4.2.5 =\n\n* Tracking of email unsubscribes for local email broadcasts (to members and event attendees). Will also unsubscribe email address from the default MailChimp list, if set.\n\n= 4.2.4 =\n\n* Option to have calendar grid display week starting on Monday rather than Sunday (add attribute weekstart=\"Monday\" to rsvpmaker_upcoming or rsvpmaker_calendar shortcodes)\n* Tweaks to mailer. For email to website members or event attendees, default is now to use from email of logged in user rather than email address specified for use with MailChimp.\n\n= 4.2.3 =\n\n* Improvements to RSVP form builder. Better round trip handling of additional fields added.\n* Bug fix to code the encodes date into permalink.\n\n= 4.2 =\n\n* RSVPMaker Events widget can now be set to only show events of a specific type (event types are a taxonomy similar to post categories). Example: only show events of the type Featured, rather than all upcoming events.\n* New RSVPMaker Events By Type widget shows a listing of the types you have established, with a count of the upcoming events for each.\n\n= 4.1.8 =\n\nUpdate for better compatibility with SMTP plugins and the SendGrid plugin.\n\n= 4.1.7 =\n\nAdding JQuery datepicker calendar widget (longtime wishlist item, finally got it working)\n\n= 4.1.6 =\n\n* Added rich text editor for Editor's Note on scheduled email broadcasts.\n* Fixes to content import for email broadcasts and iCal appointment reminder.\n\n= 4.1.5 =\n\n* Code updated for translation\n* Mailer now provides an equivalent of the WordPress YouTube embed (displays the YouTube preview image for a video with a link to the YouTube address for that content)\n* Bug fixes to mailer function\n\n= 4.1.4 =\n\n* Additional options for scheduled email.\n* Set a condition that has to be met for the message to be sent (example: roundup of events shouldn't be sent if there are currently no future events listed).\n* Making it easier to see which posts have scheduled broadcasts and for what time.\n\n= 4.1.3 =\n\n* More options for adding an Editors Note to a scheduled email newsletter (can be based on an excerpt from a sselected blog post).\n* Option to send a preview version of a scheduled email 1 to 24 hours prior to the scheduled broadcast time.\n\n= 4.0 =\n\n* Addition of mailer for invitations and other messages, with support for MailChimp lists.\n* Mailer includes the ability to schedule emails or establish newsletters that will be sent on a recurring schedule, such as a roundup of events from the calendar to be sent weekly.\n\n= 3.9.9 =\n\nFix for duplicate dates appearing on posts after upgrading.\n\n= 3.9.8 =\n\n* Fixed the archive feed for the rsvpmaker post type to sort by date order. So a url like rsvpmaker.com/rsvpmaker/ now works for showing an event listing. You can also get an RSS feed of your events at rsvpmaker.com/rsvpmaker/feed/\n* Event Types set in the editor are now displayed like categories on a blog post, and clicking on them will take you to a feed for that event type. Example: http://rsvpmaker.com/blog/rsvpmaker-type/featured/\n* Added shortcode for displaying the RSVP Report publicly on the website. Tag: rsvp_report_shortcode, accepts one attribute, public=\"1\" or public=\"0\" with the default being public=\"0\" (login required)\n* Settings page for RSVPMaker now allows you to specify one of the page templates included with your theme that should be used for single event posts. If you have a custom theme, you can create a single-rsvpmaker.php template specifically for events. But if you're working with a free or purchased theme, you may find that it includes a full-width page template or other variation that works better than the one that would be used by default.\n\n= 3.9.7 =\n\nBetter functionality for membership websites, where the people entering RSVPs have user accounts and log in prior to responding.\n* The system will now automatically look up any previous RSVPs associated with the same account (which for unauthenticated users only happens if they click the update link in a confirmation email).\n* Form fields will be filled in based on user metadata, provided that the form field names match the usermeta fields. Example: a membership site records the user's mobile number as mobile_phone, so the form field for Mobile Phone will be filled in automatically on the RSVP form - [See blog post](http://rsvpmaker.com/blog/2016/06/20/using-rsvpmaker-on-membership-websites/)\n\n= 3.9.6 =\n\nBug fix - delete guests\n\n= 3.9.4 =\n\n* Restoring iCal attachments on RSVP confirmation emails. This was included in a previous release but removed because of a problem with Microsoft Outlook compatibility - now fixed.\n* Updated coding for translation - all display strings should now be coded to allow for translation.\n\n= 3.9 =\n\nSignificant change to the event data model. By storing dates as post metadata, this release eliminates the dependency on the custom database table previously used for event dates. One advantage: content will be easier to move between websites using standard WordPress import/export routines.\n\n= 3.8.1 =\n\nBug fix: timezone display\n\n= 3.8 =\n\nConditional display of form options depending on pricing (whether the user is paying for the lunch as well as the workshop)\n\n= 3.7.5 =\n\nTime limits on prices for online payments. Example: \"early bird\" pricing for conference registration, where after the deadline pricing goes up.\n\n= 3.7.4 =\n\n* Attendees who update an RSVP for which they previously recorded a payment are now prompted to pay any difference (for additional guests or a change in pricing options)\n* The RSVP Report screen now lets an administrator update attendee records or record a payment (for example, if a payment was received offline rather than through PayPal). Payments recorded by an administrator are logged on the 'PayPal log' with the username of the user who recorded them.\n\n= 3.7 =\n\n* Overhaul of PayPal payment functionality, including easier setup\n* Better handling of guest registration, including the ability to prompt guests for data such as meal choices\n\n= 3.6.4 =\n\n* German translation, courtesy of Bj\u00f6rn Wilkens\n* Update of PO Edit POT catalog for translations\n* Warning message to make it easier to see when updating events based on a new event template might overwrite customizations\n\n= 3.6.3 =\n\nAdded checkbox option for whether to include the content of an event listing in the RSVP confirmation and reminder messages.\n\n= 3.6.2 =\n\nAdds the rsvpmaker_timed shortcode, which can be wrapped around any bit of content in a page or a post that should only be displayed after a given time, until a given time, or between a start and end time. The shortcode attributes are start, end, too_early, and too_late. Put a plain language date like 'January 1, 2016 7 pm' in the start and/or end fields, or use a database style date like '2016-01-20 19:00' and RSVPMaker will test the current time against those rules. If the viewer is coming too the site too early or too late, according to those rules, the shortcode will return either an empty string or the contents of the too_early / too_late parameters, if set. Otherwise, the content will be returned as it normally would be.\n\nExample:\n\n[rsvpmaker_timed start=\"January 1, 2016\" end=\"January 30, 2016 11:59 pm\" too_early=\"sorry, too early\" too_late=\"sorry, too late\" ]\n\nSpecial offer details here\n\n[/rsvpmaker_timed]\n\n= 3.6 =\n\n* CSS changes aimed at more consistent formatting of the form across themes.\n* RSVP Reminders function will now let you create and edit follow up email messages to attendees for events from the past week.\n\n= 3.5.9 =\n\nCreate a template based on an existing event, or clone an event (copy content to a new title for a new date).\n\n= 3.5.8 =\n\nGot drop-down lists for future events, event types working in calendar popup\n\n= 3.5.7 =\n\n* Placeholder image and popup user interface for the calendar now provided for the WordPress rich text editor. This allows a site editor to insert or update an events listing with optional calendar display, without the need to work directly with the rsvpmaker_upcoming shortcode and its parameters.\n* Popup editor also provided for setup of the RSVPMaker form. You can still edit or enhance the HTML/shortcodes directly, but this should make it easier to get the coding right (particularly when you don't want to do anything more elaborate than add an additional field.\n\n= 3.5.6 =\n\n* You can now download to CSV for basic spreadsheets without the need to install the additional RSVPMaker Excel plugin.\n* Removing iCal attachments from confirmation and reminder messages for now. Ran into some problems with Microsoft Outlook that will take time to debug.\n\n= 3.5.4 =\n\nConfirmation and reminder messages now include an iCal attachment, making it easier for recipients to add the event to their own appointment calendars.\n\n= 3.5 =\n\n* [Support for Google Hangouts on Air](http://rsvpmaker.com/hangouts), the free video broadcast service, makes it possible to organize webinars on a budget using RSVPMaker.\n* Overhaul of the system for creating and sending email confirmation messages and scheduled reminders.\n\n= 3.4.4 =\n\nFixing bug in RSVP Report.\n\n= 3.3.8, 3.3.9 =\n\nRevisiting fix to widget code. Not as fixed as I thought.\n\n= 3.3.7 =\n\nUpdated widget code to use the newer style of PHP object constructor, replacing code deprecated under WordPress 4.3.\n\n= 3.3.1 =\n\nBug fix: display of multiday events in calendar view\n\n= 3.3 =\n\n* Event templates modified to support multiple choices on frequency and day of the week. For example, \"Every week on Monday and Wednesday\" or \"First and Third Monday\"\n* Add to Google Calendar / Download to Outlook (iCal) icons now shown by default (can be disabled on settings screen)\n* Added rsvpmaker_calendar shortcode for displaying the calendar independently of the rsvpmaker_upcoming event listing.\n\n= 3.2.8 =\n\n* Updated for WordPress 4.2.2.\n* Translation files updated.\n* Duration and category set in event templates now copied to events based on that template.\n* Fix to date display when duration is set (timezone adjustment)\n\n= 3.2.6 =\n\nFixed next post / previous post links to reflect chronological order of events, rather than post_date\n\n= 3.2.5 =\n\nAdded option to include timestamp when RSVP was recorded in RSVP Report or download to Excel.\n\n= 3.2.4 =\n\n* Bug fix - projected dates for event templates\n* Email attendees option added to RSVP Report (a mailto: link with the addresses of all attendees)\n\n= 3.2.3 =\n\nFixes a CSS bug with the display of multiple prices\n\n= 3.2.2 =\n\n* Bug fixe: wp_title filter was missing defaults for optional values\n* Print format option for RSVP Report when displayed as a table\n\n= 3.2 =\n\n* More responsive calendar display, works better in themes with a narrow content area (including Twenty Fifteen) or on mobile devices.\n* Option to display RSVP Report in a table, similar to the excel export format\n* Fixed a bug in event template projected dates\n\n= 3.1.1 =\n\n* Adjusts for timezones if set in the WordPress Settings > General screen\n* Invoice tracking can be disabled for PayPal payments\n\n= 3.1 =\n\n* Updating for WordPress 4.0\n* Fixed a bug with form templates (support for hidden fields)\n* Event Template screen now includes an option to apply a template to an existing event.\n\n= 3.0.9 =\n\n* Clearer prompt to update existing events based on a template, or add new events on the schedule set in the template, after a template is created or updated.\n* Fix for bug with setting to display or hide the count of people who have RSVP'ed for an event.\n\n= 3.0.8 =\n\n* Tweak to PayPal success/error messages, logging of messages\n* Fixing bug related to rsvpmaker_upcoming shortcode display (unset variable)\n\n= 3.0.7 =\n\nFix to calendar display\n\n= 3.0.6 =\n\nBug fix: correct handing of \"More Events\" link. The \"events page\" field on the RSVPMaker settings screen should be set to a full url like http://rsvpmaker.com/events/\n\n= 3.0.5 = \n\nAdditional rsvpmaker_upcoming attribute of one=\"next\" or one=\"slug-here\" or one=\"123\" (post id) to [highlight a single event in a page or blog post](http://rsvpmaker.com/2014/01/embedding-a-single-event-in-a-page-or-post/).\n\n= 3.0.4 =\n\nFix to handle password protected posts properly (previously was showing RSVP form even if content was supposed to be protected).\n\n= 3.0.3 =\n\n* Updated Spanish translation\n* Fix to dashboard widget\n\n= 3.0.2 =\n\n* Tweaked code to avoid overwriting event post slugs that have been set manually.\n* Updated translation for Norwegian\n\n= 3.0.1 =\n\n* Optional dashboard widget\n* Updated admin screen for better control of custom menus (display for only authors, only editors, or only admins)\n* Updated Norwegian translation (thank you Thomas Nyb\u00f8)\n\n= 3.0 =\n\nBug fixes for additional editors function (very tricky)\n\n= 2.8.9 =\n\nBug fixes, primarily in the event template functions.\n\n= 2.8.8 =\n\nBug fixes. Checkbox settings on editing screen weren't being recorded properly.\n\n= 2.8.7 =\n\nBug fix for incorrect rounding of ticket prices.\n\n= 2.8.6 =\n\nMore complete Spanish translation\n\n= 2.8.5 =\n\n* Spanish language translation\n* Option to allow event authors to designate other users who can edit an event or, more importantly, an event template -- and all events derived from that template. This allows users who do not have full editing rights to be granted rights to edit specific events or series of events. Useful on community websites where several representatives of a group or club may wish to share editing rights, without the site owner having to make them editors of the entire site or of all events.\n\n= 2.8.4 =\n\nAdditional form customization shortcodes for checkbox and radio buttons. See [form customization](http://rsvpmaker.com/2012/07/rsvpmaker2-5/)\n\n= 2.8.3 =\n\nBug fix - trying to address issue some users report with permalinks. Switched to get_post_permalink() instead of get_permalink() (according to Codex, may be better at handling custom post types)\n\n= 2.8.1 and 2.8.2 =\n\nImprovements to template function.\n\n= 2.8 =\n\n* Event template function - more flexible way of handling recurring events\n* Update of translation files, more admin functions included\n\n= 2.7.8 =\n\n* Bug fix: recurring events utility was broken, now it's not\n* Bug fix: calendar navigation from month to month fixed for sites without pretty permalinks (?page_id=123 format)\n\n= 2.7.7 =\n\nRemoved a spam check that created more problems than it solved.\n\n= 2.7.6 =\n\n* Fixes to paypal code\n* Better handling of query string post addresses (question mark format rather than pretty permalinks)\n* Sort by chronological option for RSVPMaker posts in admin screen\n* RSVP Report option to show members who have not responded (for membership sites where users log in to a WordPress account before responding, tracks user IDs). Must be activated on settings screen.\n\n= 2.7.5 =\n\n* Fixed a glitch with display of CAPTCHA image\n* Added option to hide yes/no radio boxes (assume the answer is yes)\n\n= 2.7.4.1 and 2.7.4.2 =\n\nBug fixes\n\n= 2.7.4 =\n\nYou can now specify an SMTP account to be used for more reliable delivery of notification emails (less likely to be flagged as spam if they're coming from a real account).\n\n= 2.7.3 =\n\nAnother bug fix related to JavaScript output.\n\n= 2.7.2 =\n\nBug fix. RSVPMaker-specific JavaScript was being output on other post types. Oops.\n\n= 2.7.1 =\n\n* Improved functionality for attendees updating their RSVPs. Previous data loaded from email address coded in link (from confirmation message) or from profile of a logged in user.\n* Fixed JavaScript error that was interfering with display attendees function.\n* Fixed error in More Events link for an event listing.\n\n= 2.7 =\n\n* Added the option to require a login prior to RSVP for membership-oriented sites where event attendees have a user name and password in WordPress. Name and email can automatically be filled in on the form. It's possible to read in other profile data by customizing the rsvpmaker_profile_lookup function (see the documentation on RSVPMaker customization at rsvpmaker.com).\n\n= 2.6 =\n\nIncremental update to translation files.\n\n= 2.5.9 =\n\n* Norwegian translation (thank you: Thomas Nyb\u00f8) and update of translation source file.\n\n* Added checkbox to let you specify whether the count of people who have RSVPed should always be shown (or only when a maximum number of participants is specified).\n\n= 2.5.8 =\n\nBugfix\n\n= 2.5.7 =\n\n* Form customization now includes the ability to set fields as required, with both client and server-side validation. This works with the new shortcode-style method of specifying form fields and form layout. Example: `[rsvpfield textfield=\"phone\" required=\"1\"]`. By default, the required fields are first, last, and email.\n\n* The filter used to add RSVP form fields has also been updated with a lower priority index to make it execute before other filters on the_content. This is in response to a user complaint about interaction with a related posts plugin that also operates on the_content, where the related posts widget was appearing above rather than below the form. New call is `add_filter('the_content','event_content',5)`\n\n= 2.5.6 =\n\nFixes bug fix with some checkbox options not being set / cleared correctly in the event editor.\n\n= 2.5.5 =\n\n* The date editing section of the event editor now uses drop-downs controls for both adding dates and editing dates.\n\n* rsvpmaker_upcoming shortcode now accepts limit=\"x\" (show x number of events) as an attribute. Example `[rsvpmaker_upcoming limit=\"3\"]` would retrieve a maximum of 3 posts. You can also use add_to_query=\"myquerystring\" to modify the query using query_posts() syntax. Example: `[rsvpmaker_upcoming add_to_query=\"p=99\"]` would retrieve a single rsvpmaker post with the ID of 99. \n\n* Code changes to prevent a potential security risk with user submitted data in RSVP Reports, use of esc_attr() on variables to prevent script injection.\n\n= 2.5.4 =\n\n* Moved functions for downloading RSVP results to Excel to a separate plugin, RSVPMaker Excel.\n\n* Several bugfixes were released following version 2.5, and a few more are included in this release.\n\n= 2.5 =\n\nIntroduced a new method for customizing the RSVP form, either on the settings screen or on a per-event basis. NOTE THAT PREVIOUS CUSTOMIZATIONS WILL NOT BE AUTOMATICALLY BE PRESERVED. The new method provides greater design freedom, allowing you to change the form layout, the order in which fields appear, and whether you want to include the guest section or a note field. A series of shortcodes are provide to generate the fields in the correct format for RSVPMaker.\n\nThis release also includes some code cleanup and a fix to the JavaScript function for adding guest fields (thanks to soaringthor for the code shared on the support forum).\n\n= 2.4.2 =\n\nFix to PayPal code for handling currency other than USD.\n\n= 2.4.1 =\n\nFix to calendar grid display, navigation between months.\n\n= 2.4 =\n\nNumber format options on settings screen for non-U.S. currencies. For example, PLN 1.000,00 (Polish currency, European separation for thousands and decimal) instead of $1,000.00\n\n= 2.3.9 =\n\n* Updates to Polish translation by Jaroslaw Zelinski\n* Fix for multi-currency support (display of currency code rather than $ for currencies other than USD)\n\n= 2.3.6 =\n\n* Introducing Polish translation by Jaroslaw Zelinski\n* Corrections to translation file setup\n\n= 2.3.5 =\n\n* Improvements to automated reminders. Ability to set timing for reminders cron job\n* Even more tweaks for UTF-8 email (coding for From and Subject headers)\n\n= 2.3.4 =\n\n* Automated event reminders to people on RSVP list for an event (experimental)\n* Email and confirmation messages set to UTF-8\n\n= 2.3.3 =\n\nBug fix - rsvp report\n\n= 2.3.2 =\n\n* Fixing character encoding issue with database table for RSVP responses (setting to utf-8 for better multi-language compatibility).\n* Fixed typographical error on calendar display (comma between month and year)\n\n= 2.3.1 =\n\nMore changes for use with ChimpBlast\n\n= 2.3 =\n\n* Currency for use with PayPal payments can now be customized on Settings screen\n* Minor changes for use with ChimpBlast\n\n= 2.2 =\n\nAdded option to require people to decode the secret message in a CAPTCHA image when completing the RSVP form. Useful if you're getting spam bot submissions.\n\n= 2.1 =\n\n* Fields for RSVP form can now be edited from the settings panel. Previously modifying the form required some PHP hacking.\n* You can now get a listing of past events with some attributes for the event_listings shortcode. Suggesting past=\"1\" format=\"headline\" date_format=\"F jS, Y\"\n\n= 2.0 =\n\nFixed code for downloading reports to Excel (again), this time based on the [PHPExcel](http://www.phpexcel.net/) library\n\n= 1.9.3 =\n\n* Fix to code for downloading reports to Excel (bundling of PEAR libraries)\n* Changed loading of translation domain.\n\n= 1.9.1 =\n\n* Tweak to handing of the loop within rsvpmaker_upcoming shortcode\n* Update to plugin url references using plugins_url() instead of constant\n\n= 1.9 =\n\n* Integrated ability to download reports to Excel (still based on PEAR Spreadsheet Writer, but you no longer have to download it separately).\n* Bug fixes and code cleanup.\n\n= 1.8 =\n\nFixing translation files that were missing from svn\n\n= 1.7 =\n\nBug fixes: display glitch, form spam filtering\n\n= 1.6 =\n\nAdded by request: support for custom-fields and post_tag in the rsvpmaker content type. I understand this helps with WooThemes integratiton?\n\n= 1.3, 1.4, 1.5 =\n\nBug fixes. Sorry\n\n= 1.2 =\n\n* Update to pluggable function rsvpmaker_profile_lookup - will now look up profile details of users who are logged in. Override to retrieve profile details from a member database or any other source.\n* Customizable security settings for RSVP Report.\n\n= 1.1 =\n\n* Bug fix for uninstall.php file.\n* Fixed display of events with no RSVP set.\n\n= 1.0 =\n\n* Added a `basic_form` function that you can override to change the basic fields of the RSVP form. For example, you can change it to omit the section that asks for the names of guests. This is in addition to the `rsvp_profile` function, which is used to collect additional contact details such as phone # or mailing address. See the instructions for [__adding custom functions__](http://www.rsvpmaker.com/2010/12/changing-the-rsvp-form-other-customizations/).\n* You have the option of allowing the names of attendees and the contents of the notes field to be displayed publicly. To avoid encouraging spam entries, this content is loaded via AJAX and only when the user clicks the Show Attendees button\n* Moved most of the default formatting into a CSS file that is queued up on pages that show event content. There is in option on the settings page for specifying your own css file to use instead.  Most inline styles have been replaced by class selectors. However, the styling of the RSVP Now button is still set on the RSVPMaker settings screen. Works better for email distribution of events.\n* RSVP Report now lists timestamp on reply and lets you sort by either alphabetical order or most recent.\n* If you're signing up employees or workers for specific timeslots, you can now set that to half-hour increments\n* Tweaked redirection code to handle confirmation and error messages on sites that don't have permalinks enabled\n* Changed label for RSVPMaker widget as it shows up on the administrator's screen under Appearance.\n* Added an uninstall script for removing custom tables and database entries.\n\n= 0.9.2 =\n\nBug fix\n\n= 0.9.1 =\n\nAdded debug checkbox in options. When this is turned on, it creates an additional admin screen for checking that RSVPs are recorded properly, displaying system variables.\n\n= 0.9 =\n\n* Made it easier to edit dates for events previously entered in system.\n* Widget and headlines listing shortcode output now include a link to your event listing page.\n* Cleanup on options handling.\n\n= 0.8 =\n\n* Added type parameter for shortcode so you can display only events tagged with \"featured\" or another event type using `[rsvpmaker_upcoming type=\"featured\"]`\n* Added ability to set RSVP start date as well as deadline for RSVPs\n* If signing up workers or volunteers for specific timeslots, you can now specify the duration of the timeslots in one-hour increments\n* Cleaned up Event Dates, RSVP Options box in editor, moving less commonly used parameters to the bottom.\n* Added a Tweak Permalinks setting (a hack for a few users who have reported \"page not found\" errors, possibly because some other plugin is overwriting the RSVPMaker rewrite rules).\n* Tested with WP 3.1 release candidate\n\n= 0.7.6 =\n\nFixed issue with setting default options.\n\n= 0.7.5 =\n\nImproved ability to add a series of recuring events, including ability for software to calculate the dates based on a schedule like \"Second Tuesday of the month\"\n\n= 0.7.4 =\n\nBug fix to prevent customizations from being overwritten. Custom functions should be placed in rsvpmaker-custom.php and the file must be installed in the plugins directory above the rsvpmaker folder: wp-content/plugins/ instead of wp-content/plugins/rsvpmaker/\n\n= 0.7.3 =\n\n* Updated code for displaying RSVP Reports. Added functionality for deleting entries.\n* Beginning to introduce translation support. See translations directory for rsvp.pot file to be used by translators.\n\n= 0.7.2 =\n\nBug fix, RSVP Reports\n\n= 0.7.1 =\n\nBug fix, tweak to register post type configuration\n\n= 0.7 =\n\n* Custom post type slug changed from 'event' to 'rsvpmaker' in an attempt to avoid name conflicts, permalink issues.\n* Widget now lets you set the # of posts to display and date format string\n\n= 0.6.2 =\n\n* Updated to WP 3.03\n* Addition of event type taxonomy\n\n= 0.6.1 =\n\n* Fixed errors in database code for recording guests and payments\n* Added option to switch between 12-hour and 24-hour time formats\n* Added ability to set maximum participants per event.\n\n= 0.6 =\n\n* First public release November 2010.\n\n== Upgrade Notice ==\n\n= 3.9 =\n\nSignificant change to the event data model. By storing dates as post metadata, this release eliminates the dependency on the custom database table previously used for event dates. One advantage: content will be easier to move between websites using standard WordPress import/export routines.\n\n= 3.0 =\n\nImportant fixes if you are using the event templates or additional editors functions\n\n= 2.5.4 =\n\nExport to Excel function moved to a separate plugin.\n\n= 2.5 =\n\nNew method for customizing the RSVP form introduced.", "<?php\n/*\n* Backend functions\n*/\nfunction rsvpmaker_date_slug($data) {\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\treturn $data;\n\t\n\tif(!empty($_POST[\"override\"]))\n\t\treturn $data; // don't do this for template override\n\t\n\tif($data[\"post_status\"] != 'publish')\n\t\treturn $data;\n\n\tif(isset($_POST[\"edit_month\"][0]) )\n\t\t{\n\t\t$y = (int) $_POST[\"edit_year\"][0];\n\t\t$m = (int) $_POST[\"edit_month\"][0];\n\t\tif($m < 10)\n\t\t\t$m = '0'.$m;\n\t\t$d = (int) $_POST[\"edit_day\"][0];\n\t\tif($d < 10)\n\t\t\t$d = '0'.$d;\t\t\t\n\t\t$date = $y.'-'.$m.'-'.$d;\n\t\n\t\tif (empty($data['post_name']) || !strpos($data['post_name'],$date) ) {\n\t\t\t$data['post_name'] = sanitize_title($data['post_title']);\n\t\t\t$data['post_name'] .= '-' .$date;\n\t\t\t}\n\t\t}\n\telseif(isset($_POST[\"event_month\"][0]) )\n\t\t{\n\t\t$y = (int) $_POST[\"event_year\"][0];\n\t\t$m = (int) $_POST[\"event_month\"][0];\n\t\tif($m < 10)\n\t\t\t$m = '0'.$m;\n\t\t$d = (int) $_POST[\"event_day\"][0];\n\t\tif($d < 10)\n\t\t\t$d = '0'.$d;\t\t\t\n\t\t$date = $y.'-'.$m.'-'.$d;\n\t\n\t\tif (empty($data['post_name']) || !strpos($data['post_name'],$date) ) {\n\t\t\t$data['post_name'] = sanitize_title($data['post_title']);\n\t\t\t$data['post_name'] .= '-' .$date;\n\t\t\t}\n\t\t}\n\t\n\treturn $data;\n}\n\nadd_filter('wp_insert_post_data', 'rsvpmaker_date_slug', 10);\n\nfunction rsvpmaker_unique_date_slug($slug, $post_ID = 0, $post_status = '', $post_type = '', $post_parent = 0, $original_slug='' )\n\t{\n\tglobal $wpdb;\n\tif($post_type != 'rsvpmaker')\n\t\treturn $slug;\n\tif($post_status != 'publish')\n\t\treturn $slug;\n\tif(!empty($_POST[\"override\"]))\n\t\treturn $slug; // don't do this for template override\n\t\n\t$post = get_post($post_ID);\n\tif(empty($post->post_type)) return $slug;\n\t$date = str_replace(' ', '_',str_replace(':00','',get_rsvp_date($post_ID)));\n\t$newslug = sanitize_text_field($post->post_title.'-' .$date);\n\treturn $newslug;\n\t}\n\nadd_filter('wp_unique_post_slug','rsvpmaker_unique_date_slug',10);\n\nfunction rsvpmaker_save_calendar_data($post_id) {\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\treturn;\n\n\tglobal $wpdb, $current_user;\n\t$end_array = array();\n\t\n\tif($parent_id = wp_is_post_revision($post_id))\n\t\t{\n\t\t$post_id = $parent_id;\n\t\t}\n\tif(rsvpmaker_is_template($post_id))\n\t{\n\t\t$args = array($post_id,$current_user->user_email);\n\t\twp_clear_scheduled_hook( 'rsvpmaker_create_update_reminder', $args );\n\t\twp_schedule_single_event( strtotime('+2 hours'), 'rsvpmaker_create_update_reminder', $args);\n\t}\n\tif(!empty($_POST['newrsvpdate'])) {\n\t\tupdate_post_meta($post_id,'_rsvp_dates',sanitize_text_field($_POST['newrsvpdate'].' '.$_POST['newrsvptime']));\n\t}\n\tif(!empty($_POST['rsvpendtime']))\n\t\tupdate_post_meta($post_id,'_endfirsttime',sanitize_text_field($_POST['rsvpendtime']));\n\tif(!empty($_POST['end_time_type']))\n\t\tupdate_post_meta($post_id,'_firsttime',sanitize_text_field($_POST['end_time_type']));\n\tif(isset($_POST[\"_require_webinar_passcode\"]))\n\t\t{\n\t\tupdate_post_meta($post_id,'_require_webinar_passcode',sanitize_text_field($_POST[\"_require_webinar_passcode\"]));\n\t\t}\n\tif(isset($_POST[\"event_month\"]) )\n\t\t{\n\t\tforeach($_POST[\"event_year\"] as $index => $year)\n\t\t\t{\n\t\t\t$year = (int) $year;\n\t\t\tif(isset($_POST[\"event_day\"][$index]) && $_POST[\"event_day\"][$index])\n\t\t\t\t{\n\t\t\t\t$cddate = format_cddate($year,(int) $_POST[\"event_month\"][$index], (int) $_POST[\"event_day\"][$index], (int) $_POST[\"event_hour\"][$index], (int) $_POST[\"event_minutes\"][$index]);\n\t\t\t\t$dpart = explode(':',$_POST[\"event_duration\"][$index]);\n\t\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t\t{\n\t\t\t\t\t$hour = intval($_POST[\"event_hour\"][$index]) + intval($dpart[0]);\n\t\t\t\t\t$minutes = (isset($dpart[1]) ) ? intval($_POST[\"event_minutes\"][$index]) + intval($dpart[1]) : sanitize_text_field($_POST[\"event_minutes\"][$index]);\n\t\t\t\t\t$t = rsvpmaker_mktime( $hour, $minutes,0,intval($_POST[\"event_month\"][$index]),intval($_POST[\"event_day\"][$index]),$year);\n\t\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$t);\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$duration = sanitize_text_field($_POST[\"event_duration\"][$index]); // empty or all day\n\t\t\t\tif($duration == 'set')\n\t\t\t\t\t$end_array[] = sanitize_text_field($_POST[\"hourevent_duration\"][$index]).':'.sanitize_text_field($_POST[\"minevent_duration\"][$index]);\n\t\t\t\t$dates_array[] = $cddate;\n\t\t\t\t$durations_array[] = $duration;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\tif(isset($_POST[\"edit_month\"]))\n\t\t{\n\t\tdelete_transient('rsvpmakerdates');//invalidate cached values\n\t\tforeach($_POST[\"edit_year\"] as $index => $year)\n\t\t\t{\n\t\t\t\t$year = (int) $year;\n\t\t\t\t$cddate = format_cddate(intval($year),intval($_POST[\"edit_month\"][$index]), intval($_POST[\"edit_day\"][$index]), intval($_POST[\"edit_hour\"][$index]), intval($_POST[\"edit_minutes\"][$index]));\n\t\t\t\tif(strpos( $_POST[\"edit_duration\"][$index],':' ))\n\t\t\t\t\t{\n\t\t\t\t\t$dpart = explode(':',sanitize_text_field($_POST[\"edit_duration\"][$index]));\n\t\t\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t$hour = intval($_POST[\"edit_hour\"][$index]) + intval($dpart[0]);\n\t\t\t\t\t\t$minutes = (isset($dpart[1]) ) ? intval($_POST[\"edit_minutes\"][$index]) + intval($dpart[1]) : intval($_POST[\"edit_minutes\"][$index]);\n\t\t\t\t\t\t//dchange\n\t\t\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',rsvpmaker_mktime( $hour, $minutes,0,intval($_POST[\"edit_month\"][$index]),intval($_POST[\"edit_day\"][$index]),$year));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\telseif( is_numeric($_POST[\"edit_duration\"][$index]) )\n\t\t\t\t\t{\n\t\t\t\t\t$d_duration = (int) $_POST[\"edit_duration\"][$index];\n\t\t\t\t\t$minutes = (int) $_POST[\"edit_minutes\"][$index];\t\t\t\t\n\t\t\t\t\t$minutes = $minutes + (60*$d_duration);\n\t\t\t\t\t//dchange - can this be removed?\n\t\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',rsvpmaker_mktime( sanitize_text_field($_POST[\"edit_hour\"][$index]), $minutes,0,sanitize_text_field($_POST[\"edit_month\"][$index]),sanitize_text_field($_POST[\"edit_day\"][$index]),$year));\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$duration = sanitize_text_field($_POST[\"edit_duration\"][$index]); // empty or all day\t\t\t\n\t\t\t\tif(($duration == 'set') || strpos($duration,'|') )\n\t\t\t\t\t$end_array[] = sanitize_text_field($_POST[\"houredit_duration\"][$index]).':'.sanitize_text_field($_POST[\"minedit_duration\"][$index]);\n\t\t\t\t$dates_array[] = $cddate;\n\t\t\t\t$durations_array[] = $duration;\n\t\t\t\t}\n\t\t} // end edit month\n\t\n\t\tif(!empty($dates_array) )\n\t\t\t{\n\t\t\t\tupdate_post_meta($post_id, '_rsvp_dates', $dates_array[0]);\n\t\t\t\tif(!empty($durations_array[0]))\n\t\t\t\tupdate_post_meta($post_id, '_firsttime', $durations_array[0]);\n\t\t\t\tif(!empty($end_array[0]))\n\t\t\t\tupdate_post_meta($post_id, '_endfirsttime', $end_array[0]);\n\t\t\t}\n\t\n\t\tif(isset($_POST[\"delete_date\"]))\n\t\t\t{\n\t\t\tforeach($_POST[\"delete_date\"] as $delete_date)\n\t\t\t\t{\n\t\t\t\tdelete_rsvpmaker_date($post_id,sanitize_text_field($delete_date));\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\tif(isset($_POST[\"setrsvp\"]) )\n\t\t{ // if rsvp parameters were set, was RSVP box checked?\n\t\tif(isset($_POST[\"setrsvp\"][\"on\"]))\n\t\t\tupdate_post_meta($post_id, '_rsvp_on', (int) $_POST[\"setrsvp\"][\"on\"]);\n\t\t}\n\t\t\n\t\tif(isset($_POST['payment_gateway']))\n\t\t\tupdate_post_meta($post_id, 'payment_gateway', sanitize_text_field($_POST[\"payment_gateway\"]));\n\t\n\t\tif(isset($_POST[\"sked\"][\"week\"]))\n\t\t\t{\n\t\t\tsave_rsvp_template_meta($post_id);\n\t\t\t}\n\t\tif(!isset($_POST[\"sked\"]) && !isset($_POST[\"setrsvp\"]))\n\t\t\treturn;\n\t\tif(isset($_POST['add_timezone']) && $_POST['add_timezone'])\n\t\t\tupdate_post_meta($post_id,'_add_timezone',1);\n\t\telse\n\t\t\tupdate_post_meta($post_id,'_add_timezone',0);\t\n\t\tif(isset($_POST['convert_timezone']) && $_POST['convert_timezone'])\n\t\t\tupdate_post_meta($post_id,'_convert_timezone',1);\n\t\telse\n\t\t\tupdate_post_meta($post_id,'_convert_timezone',0);\t\n\t\n\t\tif(isset($_POST['calendar_icons']) && $_POST['calendar_icons'])\n\t\t\tupdate_post_meta($post_id,'_calendar_icons',1);\n\t\telse\n\t\t\tupdate_post_meta($post_id,'_calendar_icons',0);\n}\n\nadd_action('rsvpmaker_create_update_reminder','rsvpmaker_create_update_reminder',10,3);\nfunction rsvpmaker_create_update_reminder($t, $author_email = '') {\n\t$template = get_post($t);\n\t$output = '';\n\t$sched_result = get_events_by_template($t);\n\tif(empty($sched_result))\n\t\treturn;//no events to update\n\t$nag = true;\n\tforeach($sched_result as $event) {\n\t\t$updated_from_template = get_post_meta($event->ID,\"_updated_from_template\",true);\n\t\tif($updated_from_template >= $template->post_modified)\n\t\t\t$nag = false; // at least one event has been updated\n\t\t$up = ($updated_from_template < $template->post_modified) ? 'not updated'.\" $updated_from_template < $template->post_modified \" : 'updated';\n\t\t$output .= sprintf('%d %s ',$event->ID, $up);\n\t}\n\tif($nag) {\n\t\t$mail['html'] = sprintf('<p>You updated the <strong>%s</strong> template but not the events based on that template.</p>'.\"\\n\".'<p>To update the whole series, use <a href=\"%s\">Create/Update<a></p>',$template->post_title,admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t='.$t));\n\t\t$mail['to'] = get_option('admin_email');\n\t\t$mail['from'] = get_option('admin_email');\n\t\t$mail['subject'] = __('Event template not applied to existing events:','rsvpmaker').' '.$template->post_title;\n\t\trsvpmailer($mail);\n\t\tif($author_email != $mail['to'])\n\t\t{\n\t\t\t$mail['to'] = $author_email;\n\t\t\trsvpmailer($mail);\n\t\t}\n\t}\n}\n\nfunction rsvpmaker_date_option($datevar = NULL, $index = NULL, $jquery_date = NULL, $sked = NULL) {\n\nglobal $rsvp_options;\n$prefix = \"event_\";\n\nif(is_int($datevar))\n\t{\n\t$t = $datevar;\n\t$datevar = array();\n\t}\nelseif(is_array($datevar) )\n{\n\t$datestring = $datevar[\"datetime\"];\n\t//dchange - check this\n\t$duration = $datevar[\"duration\"];\n\tif(strpos($duration,':'))\n\t\t{\n\t\t$datevar['end_time'] = rsvpmaker_date('H:i',rsvpmaker_strtotime($duration));\n\t\t$datevar['duration'] = 'set';\n\t\t}\n\t$prefix = \"edit_\";\n\tif(isset($datevar[\"id\"]))\n\t\t$index = $datevar[\"id\"];\n}\nelse\n{\n\t$datestring = $datevar;\n\t$datevar = array();\n}\nif(!empty($datestring))\n\t{\n\t$datestring = str_replace('Every','Next',$datestring);\n\t$t = rsvpmaker_strtotime($datestring);\n\t}\n\n$endtime = (is_array($sked) && isset($sked['end'])) ? rsvpmaker_strtotime('2000-01-01 '. $sked['end']) : $t+HOUR_IN_SECONDS;\n\n?>\n<div id=\"<?php echo esc_attr($prefix); ?>date<?php echo esc_attr($index);?>\" ><input type=\"hidden\" id=\"defaulthour\" value=\"<?php echo esc_attr($rsvp_options[\"defaulthour\"]); ?>\" /><input type=\"hidden\" id=\"defaultmin\" value=\"<?php echo esc_attr($rsvp_options[\"defaultmin\"]); ?>\" />\n<p><label>Date</label> <input type=\"date\" name=\"newrsvpdate\" id=\"newrsvpdate\" value=\"<?php echo date('Y-m-d',$t); ?>\"> \n</p>\n<p><label>Time</label> <input name=\"newrsvptime\" type=\"time\" class=\"newrsvptime\" id=\"newrsvptime\" value=\"<?php echo rsvpmaker_date('H:i:s',$t) ?>\"><span id=\"endtimespan\"> to <input name=\"rsvpendtime\" type=\"time\" class=\"rsvpendtime\" id=\"rsvpendtime\" value=\"<?php echo rsvpmaker_date('H:i:s',$endtime) ?>\"> </span>\n</p>\n\n<?php\nif(!empty($sked['duration']))\n\t$datevar['duration'] = $sked['duration'];\nif(empty($datestring))\n\t$datestring ='';\nrsvpmaker_duration_select ($prefix.'duration['.$index.']', $datevar, $datestring, $index );\n\n?>\n</div>\n<?php\n\n}\n\nfunction rsvpmaker_date_option_event($t, $endtime, $type) {\n\n\tglobal $rsvp_options;\n\t$prefix = \"edit_\";\n\t\n\t?>\n\t<div id=\"<?php echo esc_attr($prefix); ?>date<?php echo esc_attr($index);?>\" ><input type=\"hidden\" id=\"defaulthour\" value=\"<?php echo esc_attr($rsvp_options[\"defaulthour\"]); ?>\" /><input type=\"hidden\" id=\"defaultmin\" value=\"<?php echo esc_attr($rsvp_options[\"defaultmin\"]); ?>\" />\n\t<p><label>Date</label> <input type=\"date\" name=\"newrsvpdate\" id=\"newrsvpdate\" value=\"<?php echo date('Y-m-d',$t); ?>\"> \n\t</p>\n\t<p><label>Time</label> <input name=\"newrsvptime\" type=\"time\" class=\"newrsvptime\" id=\"newrsvptime\" value=\"<?php echo rsvpmaker_date('H:i:s',$t) ?>\"><span id=\"endtimespan\"> to <input name=\"rsvpendtime\" type=\"time\" class=\"rsvpendtime\" id=\"rsvpendtime\" value=\"<?php echo rsvpmaker_date('H:i:s',$endtime) ?>\"> </span>\n\t</p>\n\t\n\t<?php\n\trsvpmaker_duration_select_2021 ($type);\n\t?>\n\t</div>\n\t<?php\n}\n\nfunction save_rsvp_meta($post_id, $new = false)\n{\nif( !wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\treturn;\n$setrsvp = array_map('sanitize_text_field',$_POST[\"setrsvp\"]);\nif($new)\n{\nrsvpmaker_defaults_for_post($post_id); \n}\nelse\n{\n\t$checkboxes = array(\"show_attendees\",\"count\",\"captcha\",\"login_required\",'confirmation_include_event','rsvpmaker_send_confirmation_email','yesno');\n\tforeach($checkboxes as $check)\n\t\t{\n\t\t\tif(!isset($setrsvp[$check]))\n\t\t\t\t$setrsvp[$check] = 0;\n\t\t}\t\n}\n\nif(isset($_POST[\"deadyear\"]) && isset($_POST[\"deadmonth\"]) && isset($_POST[\"deadday\"]))\n\t{\n\tif(empty(trim($_POST[\"deadday\"])))\n\t\t$setrsvp[\"deadline\"] = '';\n\telse\n\t\t$setrsvp[\"deadline\"] = rsvpmaker_strtotime(sanitize_text_field($_POST[\"deadyear\"]).'-'.sanitize_text_field($_POST[\"deadmonth\"]).'-'.sanitize_text_field($_POST[\"deadday\"]).' '.sanitize_text_field($_POST[\"deadtime\"]));\n\t}\n\nif(isset($_POST[\"startyear\"]) && isset($_POST[\"startmonth\"]) && isset($_POST[\"startday\"]))\n\t{\n\tif(empty(trim($_POST[\"startday\"])))\n\t\t$setrsvp[\"start\"] = '';\n\telse\n\t\t$setrsvp[\"start\"] = rsvpmaker_strtotime(sanitize_text_field($_POST[\"startyear\"].'-'.$_POST[\"startmonth\"].'-'.$_POST[\"startday\"].' '.$_POST[\"starttime\"]));\n\t}\n\nforeach($setrsvp as $name => $value)\n\t{\n\t$field = '_rsvp_'.$name;\n\t$single = true;\n\tupdate_post_meta($post_id, $field, sanitize_text_field($value));\n\t}\n\nif(isset($_POST[\"unit\"]))\n\t{\n\t\t\t\t\n\tforeach($_POST[\"unit\"] as $index => $value)\n\t\t{\n\t\t$value = sanitize_text_field($value);\n\t\tif(empty($value))\n\t\t\tcontinue;\n\t\tif( empty($_POST[\"price\"][$index]) && ($_POST[\"price\"][$index] != 0) )\n\t\t\tcontinue;\n\t\t$per[\"unit\"][$index] = $value;\n\t\t$per[\"price\"][$index] = sanitize_text_field($_POST[\"price\"][$index]);\n\t\tif(isset($_POST[\"price_multiple\"][$index]) && ($_POST[\"price_multiple\"][$index] > 1))\n\t\t\t$per[\"price_multiple\"][$index] = sanitize_text_field($_POST[\"price_multiple\"][$index]);\n\t\tif(!empty($_POST[\"price_deadline\"][$index]))\n\t\t\t{\n\t\t\t\n\t\t\t$per[\"price_deadline\"][$index] = rsvpmaker_strtotime(sanitize_text_field($_POST[\"price_deadline\"][$index]));\n\t\t\t\n\t\t\t}\n\t\tif(isset($_POST['showhide'][$index]))\n\t\t\t{\n\t\t\t\tforeach($_POST['showhide'][$index] as $showindex => $showhide)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($showhide)\n\t\t\t\t\t\t\t$pricehide[$index][] = $showindex;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\n\tif(!empty($pricehide))\n\t\t{\n\t\t\tupdate_post_meta($post_id, '_hiddenrsvpfields', $pricehide);\n\t\t}\n\t\n\t$value = $per;\n\t$field = \"_per\";\n\t\n\t$current = get_post_meta($post_id, $field, $single); \n\t\n\tif($value && ($current == \"\") )\n\t\tadd_post_meta($post_id, $field, $value, true);\n\t\n\telseif($value != $current)\n\t\tupdate_post_meta($post_id, $field, $value);\n\t\n\telseif($value == \"\")\n\t\tdelete_post_meta($post_id, $field, $current);\n\t\n\t}\n\tif(!empty($_POST[\"youtube_live\"]) || !empty($_POST[\"webinar_other\"]))\n\t\t{\n\t\t$ylive = sanitize_text_field($_POST[\"youtube_live\"]);\n\t\tunset($_POST);\n\t\trsvpmaker_youtube_live($post_id, $ylive);\n\t\t}\n\n\t\tif(isset($_POST['coupon_code']))\n\n\t\t{\n\t\n\t\tdelete_post_meta($post_id,'_rsvp_coupon_code');\n\t\n\t\tdelete_post_meta($post_id,'_rsvp_coupon_discount');\n\t\n\t\tdelete_post_meta($post_id,'_rsvp_coupon_method');\n\t\n\t\tforeach($_POST['coupon_code'] as $index => $value)\n\t\n\t\t{\n\t\n\t\t\t$value = sanitize_text_field($value);\n\t\n\t\t\t$discount = sanitize_text_field($_POST['coupon_discount'][$index]);\n\t\n\t\t\tif(!empty($value) && is_numeric($discount))\n\t\n\t\t\t{\n\t\n\t\t\t\t$method = sanitize_text_field($_POST['coupon_method'][$index]);\n\t\n\t\t\t\tadd_post_meta($post_id,'_rsvp_coupon_code',$value);\n\t\n\t\t\t\tadd_post_meta($post_id,'_rsvp_coupon_discount',$discount);\n\t\n\t\t\t\tadd_post_meta($post_id,'_rsvp_coupon_method',$method);\t\t\n\t\n\t\t\t}\n\t\t}\n\t\n\t\t}\n}\n\nfunction rsvpmaker_menu_security($label, $slug,$options) {\necho esc_html($label);\n?>\n <select name=\"security_option[<?php echo esc_attr($slug); ?>]\" id=\"<?php echo esc_attr($slug); ?>\">\n  <option value=\"manage_options\" <?php if(isset($options[$slug]) && ($options[$slug] == 'manage_options')) echo ' selected=\"selected\" ';?> ><?php esc_html_e('Administrator','rsvpmaker');?> (manage_options)</option>\n  <option value=\"edit_others_rsvpmakers\" <?php if(isset($options[$slug]) && ($options[$slug] == 'edit_others_rsvpmakers')) echo ' selected=\"selected\" ';?>><?php esc_html_e('Editor','rsvpmaker');?> (edit_others_rsvpmakers)</option>\n  <option value=\"publish_rsvpmakers\" <?php if(isset($options[$slug]) && ($options[$slug] == 'publish_rsvpmakers')) echo ' selected=\"selected\" ';?> ><?php esc_html_e('Author','rsvpmaker');?> (publish_rsvpmakers)</option>\n  <option value=\"edit_rsvpmakers\" <?php if(isset($options[$slug]) && ($options[$slug] == 'edit_rsvpmakers')) echo ' selected=\"selected\" ';?> ><?php esc_html_e('Contributor','rsvpmaker');?> (edit_rsvpmakers)</option>\n  </select><br />\n<?php\n}\n  \n  // Avoid name collisions.\n  if (!class_exists('RSVPMAKER_Options'))\n      : class RSVPMAKER_Options\n      {\n          // this variable will hold url to the plugin  \n          var $plugin_url;\n          \n          // name for our options in the DB\n          var $db_option = 'RSVPMAKER_Options';\n          \n          // Initialize the plugin\n          function __construct()\n          {\n              $this->plugin_url = plugins_url('',__FILE__).'/';\n\n              // add options Page\n              add_action('admin_menu', array(&$this, 'admin_menu'));\n              \n          }\n          \n          // hook the options page\n          function admin_menu()\n          {\n              add_options_page('RSVPMaker', 'RSVPMaker', 'manage_options', basename(__FILE__), array(&$this, 'handle_options'));\n          }\n          \n          \n          // handle plugin options\n          function get_options()\n          {\n              global $rsvp_options;\n              return $rsvp_options;\n          }\n          \n          // Set up everything\n          function install()\n          {\n              // set default options\n              $this->get_options();\n          }\n          \n          // handle the options page\n          function handle_options()\n          {\n\t\t\tif(!empty($_POST) && !isset($_POST['rsvpelist']) && !wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\t\t\twp_die('nonce security error');\n\t\t\tif(!empty($_POST['rsvpmaker_save_form']) && !empty($_POST['form_id']))\n\t\t\t{\n\t\t\t\t$forms = rsvpmaker_get_forms();\n\t\t\t\t$forms[sanitize_text_field($_POST['rsvpmaker_save_form'])] = (int) $_POST['form_id'];\n\t\t\t\tupdate_option('rsvpmaker_forms',$forms);\n\t\t\t}\n\n\t\t\t$options = $this->get_options();\n\t\t\t  if(isset($_POST[\"payment_option\"])) {\n              $newoptions = array_map('sanitize_text_field',stripslashes_deep($_POST[\"payment_option\"]));\n\t\t\t\t$newoptions[\"stripe\"] = (isset($_POST['payment_gateway']) && ($_POST['payment_gateway'] == 'stripe')) ? 1 : 0;\n\t\t\t\t$newoptions[\"cash_or_custom\"] = (isset($_POST['payment_gateway']) && ($_POST['payment_gateway'] == 'cash_or_custom')) ? 1 : 0;\n\t\t\t\t$nfparts = explode('|',$_POST[\"currency_format\"]);\n\t\t\t\t$newoptions[\"currency_decimal\"] = sanitize_text_field($nfparts[0]);\n\t\t\t\t$newoptions[\"currency_thousands\"] = sanitize_text_field($nfparts[1]);\n\n\t\t\t\tforeach($newoptions as $name => $value)\n\t\t\t\t  $options[$name] = sanitize_text_field($value);\n\t\t\t\t  \n                  update_option($this->db_option, $options);\n\n\t\t\t\t  if(isset($_POST['rsvpmaker_stripe_keys']))\n\t\t\t\t  {\n\t\t\t\t\t//don't overwrite keys that are not displayed\n\t\t\t\t\t$stripe_keys = array_map( 'sanitize_text_field', $_POST['rsvpmaker_stripe_keys']);\n\n\t\t\t\t\tif(!isset($stripe_keys['sk']) || !isset($stripe_keys['sandbox_pk']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$prev = get_option('rsvpmaker_stripe_keys');\n\t\t\t\t\t\tif(!isset($stripe_keys['sk']))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$stripe_keys['sk'] = $prev['sk'];\n\t\t\t\t\t\t\t\t$stripe_keys['pk'] = $prev['pk'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!isset($stripe_keys['sandbox_sk']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$stripe_keys['sandbox_sk'] = $prev['sandbox_sk'];\n\t\t\t\t\t\t\t$stripe_keys['sandbox_pk'] = $prev['sandbox_pk'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tupdate_option('rsvpmaker_stripe_keys',$stripe_keys);\n\t\t\t\t  }\n\t\t\t\tif(isset($_POST['rsvpmaker_paypal_rest_keys']))\n\t\t\t\t{\n\t\t\t\t\t$pkeys = array_map( 'sanitize_text_field', $_POST['rsvpmaker_paypal_rest_keys']);\n\n\t\t\t\t\tif(!isset($pkeys['client_id']) || !isset($keys['sandbox_client_id']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$prev = get_option('rsvpmaker_paypal_rest_keys');\n\t\t\t\t\t\tif(!isset($pkeys['client_id']))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$pkeys['client_id'] = $prev['client_id'];\n\t\t\t\t\t\t\t\t$pkeys['client_secret'] = $prev['client_secret'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!isset($pkeys['sandbox_client_id']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$pkeys['sandbox_client_id'] = $prev['sandbox_client_id'];\n\t\t\t\t\t\t\t$pkeys['sandbox_client_secret'] = $prev['sandbox_client_secret'];\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tupdate_option('rsvpmaker_paypal_rest_keys',$pkeys);\n\t\t\t\t}\n\t\t\t\t  \n\t\t\t\t  $paypal_rest_keys = get_option('rsvpmaker_paypal_rest_keys');\n\n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - payments.','rsvpmaker').' <a href=\"'.admin_url('options-general.php?page=rsvpmaker-admin.php&payment_key_test=1').'\">',__('Test Keys','rsvpmaker').'</a></p>'.default_gateway_check( get_rsvpmaker_payment_gateway () ).'</div>';\n\t\t\t  }\t\n\n\t\t\t  if(isset($_POST[\"enotify_option\"])) {\n\t\t\t\t  //print_r($_POST[\"enotify_option\"]);\n\t\t\t\t$newoptions = array_map( 'sanitize_text_field', stripslashes_deep($_POST[\"enotify_option\"] ) );\n\t\t\t\tforeach($newoptions as $name => $value)\n\t\t\t\t  $options[$name] = sanitize_text_field($value);\n\n                  update_option($this->db_option, $options);\n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - email server.','rsvpmaker').'</p></div>';\n\t\t\t  }\t\n\t\t\t  \n\t\t\t  if(isset($_POST[\"security_option\"])) {\n\t\t\t\tforeach($_POST[\"security_option\"] as $index => $value) {\n\t\t\t\t\t$newoptions[sanitize_text_field($index)] = sanitize_text_field($value);\n\t\t\t\t}\n\t\t\t\t$newoptions[\"additional_editors\"] = (isset($_POST[\"security_option\"][\"additional_editors\"]) && $_POST[\"security_option\"][\"additional_editors\"]) ? 1 : 0;\n\t\t\t\tforeach($newoptions as $name => $value)\n\t\t\t\t  $options[$name] = sanitize_text_field($value);\n                update_option($this->db_option, $options);\n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - security.','rsvpmaker').'</p></div>';\n\t\t\t\t  //print_r($newoptions);\n\t\t\t  }\t\n\n\t\t\t  if (isset($_POST['submitted'])) {\n              \t\t\n                  $newoptions = stripslashes_deep($_POST[\"option\"]);\n                  $newoptions[\"rsvp_on\"] = (isset($_POST[\"option\"][\"rsvp_on\"]) && $_POST[\"option\"][\"rsvp_on\"]) ? 1 : 0;\n                  $newoptions[\"confirmation_include_event\"] = (isset($_POST[\"option\"][\"confirmation_include_event\"]) && $_POST[\"option\"][\"confirmation_include_event\"]) ? 1 : 0;\n                  $newoptions['rsvpmaker_send_confirmation_email'] = (isset($_POST[\"option\"]['rsvpmaker_send_confirmation_email']) && $_POST[\"option\"]['rsvpmaker_send_confirmation_email']) ? 1 : 0;\n                  $newoptions[\"login_required\"] = (isset($_POST[\"option\"][\"login_required\"]) && $_POST[\"option\"][\"login_required\"]) ? 1 : 0;\n                  $newoptions[\"rsvp_captcha\"] = (isset($_POST[\"option\"][\"rsvp_captcha\"]) && $_POST[\"option\"][\"rsvp_captcha\"]) ? 1 : 0;\n\t\t\t\t  if(isset($_POST[\"option\"][\"rsvp_recaptcha_site_key\"])) {\n                  $newoptions[\"rsvp_recaptcha_site_key\"] = sanitize_text_field($_POST[\"option\"][\"rsvp_recaptcha_site_key\"]);\n                  $newoptions[\"rsvp_recaptcha_secret\"] = sanitize_text_field($_POST[\"option\"][\"rsvp_recaptcha_secret\"]);\t\t  \n\t\t\t\t  }\n                  $newoptions[\"rsvp_yesno\"] = (isset($_POST[\"option\"][\"rsvp_yesno\"]) && $_POST[\"option\"][\"rsvp_yesno\"]) ? 1 : 0;\n                  $newoptions[\"calendar_icons\"] = (isset($_POST[\"option\"][\"calendar_icons\"]) && $_POST[\"option\"][\"calendar_icons\"]) ? 1 : 0;\n                  $newoptions[\"convert_timezone\"] = (isset($_POST[\"option\"][\"convert_timezone\"]) && $_POST[\"option\"][\"convert_timezone\"]) ? 1 : 0;\n                  $newoptions[\"social_title_date\"] = (isset($_POST[\"option\"][\"social_title_date\"]) && $_POST[\"option\"][\"social_title_date\"]) ? 1 : 0;\n                  $newoptions[\"rsvp_count\"] = (isset($_POST[\"option\"][\"rsvp_count\"]) && $_POST[\"option\"][\"rsvp_count\"]) ? 1 : 0;\n                  $newoptions[\"show_attendees\"] = (isset($_POST[\"option\"][\"show_attendees\"]) && $_POST[\"option\"][\"show_attendees\"]) ? 1 : 0;\n                  $newoptions[\"debug\"] = (isset($_POST[\"option\"][\"debug\"]) && $_POST[\"option\"][\"debug\"]) ? 1 : 0;\n\t\t\t\t  \n\t\t\t\t  $newoptions[\"dbversion\"] = $options[\"dbversion\"]; // gets set by db upgrade routine\n\t\t\t\t  \n\t\t\t\t$newoptions[\"eventpage\"] = sanitize_text_field($_POST[\"option\"][\"eventpage\"]);\n                  $newoptions[\"log_email\"] = (isset($_POST[\"option\"][\"log_email\"]) && $_POST[\"option\"][\"log_email\"]) ? 1 : 0;\n\n\t\t\t\tforeach($newoptions as $name => $value) {\n\t\t\t\t\tif($name == 'rsvplink')\n\t\t\t\t\t\t$options[$name] = $value;\n\t\t\t\t\telse\n\t\t\t\t\t\t$options[$name] = sanitize_text_field($value);\n\t\t\t\t}\n\t\t\t\t  \n                  update_option($this->db_option, $options);\n                  \n\t\t\t\t  echo '<div class=\"updated fade\"><p>Plugin settings saved.</p></div>';\n\t\t\t\t  if(isset($_POST['defaultoverride'])) {\n\t\t\t\t\t$future = get_future_events();\n\t\t\t\t\t$fcount = sizeof($future);\n\t\t\t\t\t$templates = rsvpmaker_get_templates();\n\t\t\t\t\t$tcount = sizeof($templates);\n\t\t\t\t\t$future = array_merge($future,$templates);\n\t\t\t\t\tforeach($future as $event) {\n\t\t\t\t\t\tforeach($_POST['defaultoverride'] as $slug) {\n\t\t\t\t\t\t\t$dbslug = '_'.sanitize_text_field($slug);\n\t\t\t\t\t\t\tupdate_post_meta($event->ID, $dbslug, $options[$slug]);\n\t\t\t\t\t\t\t//printf('<p>updating %s %s %s</p>',$event->ID, $dbslug, $options[$slug]);\n\t\t\t\t\t\t}\t\t\t\t\t\t  \n\t\t\t\t\t}\n\t\t\t\tprintf('<p>Updating %s for %s events and %s templates',esc_html(implode(', ',$_POST['defaultoverride']), $fcount, $tcount ));  \n\t\t\t\t}\n\t\t\t  }\n              \n              // URL for form submit, equals our current page\n$action_url = admin_url('options-general.php?page=rsvpmaker-admin.php');\nglobal $wpdb;\n$defaulthour = (isset($options[\"defaulthour\"])) ? ( (int) $options[\"defaulthour\"]) : 19;\n$defaultmin = (isset($options[\"defaultmin\"])) ? ( (int) $options[\"defaultmin\"]) : 0;\n$houropt = $minopt =\"\";\n\nfor($i=0; $i < 24; $i++)\n\t{\n\t$selected = ($i == $defaulthour) ? ' selected=\"selected\" ' : '';\n\t$padded = ($i < 10) ? '0'.$i : $i;\n\tif($i == 0)\n\t\t$twelvehour = \"12 a.m.\";\n\telseif($i == 12)\n\t\t$twelvehour = \"12 p.m.\";\n\telseif($i > 12)\n\t\t$twelvehour = ($i - 12) .\" p.m.\";\n\telse\t\t\n\t\t$twelvehour = $i.\" a.m.\";\n\n\t$houropt .= sprintf('<option  value=\"%s\" %s>%s / %s:</option>',$padded,$selected,$twelvehour,$padded);\n\t}\n\nfor($i=0; $i < 60; $i += 5)\n\t{\n\t$selected = ($i == $defaultmin) ? ' selected=\"selected\" ' : '';\n\t$padded = ($i < 10) ? '0'.$i : $i;\n\t$minopt .= sprintf('<option  value=\"%s\" %s>%s</option>',$padded,$selected,$padded);\n\t}\n\nif(isset($_POST['timezone_string']))\n{\n\t$tz = sanitize_text_field($_POST['timezone_string']);\n\tupdate_option('timezone_string',$tz);\n\techo '<div class=\"notice notice-info\"><p>'. __('Timezone set to','rsvpmaker').' '.$tz.'</p></div>';\n}\n\n?>\n\n<div class=\"wrap\" style=\"max-width:950px !important;\">\n\n    <h2 class=\"rsvpmaker-nav-tab-wrapper nav-tab-wrapper\">\n      <a class=\"rsvpmaker-nav-tab nav-tab rsvpmaker-nav-tab-active nav-tab-active\" href=\"#calendar\"><?php esc_html_e('Calendar Settings','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#security\"><?php esc_html_e('Security','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#payments\"><?php esc_html_e('Payments','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#notification_email\"><?php esc_html_e('Email Server','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#email\"><?php esc_html_e('Mailing List','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#groupemail\"><?php esc_html_e('Group Email','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#rsvpforms\"><?php esc_html_e('RSVP Forms','rsvpmaker');?></a>\n    </h2>\n\n    <div id='sections' class=\"rsvpmaker\">\n    <section id=\"calendar\" class=\"rsvpmaker\">\n\t<?php\nif(!isset($_REQUEST['tab']))\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"calendar\" />\n<?php\t\n}\n?>\n<div style=\"float: right;\">\n<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n<input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\">\n<input type=\"hidden\" name=\"hosted_button_id\" value=\"N6ZRF6V6H39Q8\">\n<input type=\"image\" src=\"https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\n<img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n</form>\n</div>\n\n\t<h2><?php esc_html_e('Calendar Options','rsvpmaker');?></h2>\n    \n    <?php\nif(file_exists(WP_PLUGIN_DIR.\"/rsvpmaker-custom.php\") )\n\techo \"<p><em>\".__('Note: This site also implements custom code in','rsvpmaker').' '.WP_PLUGIN_DIR.\"/rsvpmaker-custom.php.</em></p>\";\n\t?>\n    \n\t<div id=\"poststuff\" style=\"margin-top:10px;\">\n\n\t <div id=\"mainblock\" style=\"width:710px\">\n\t \n\t\t<div class=\"dbx-content\">\n\t\t \t<form name=\"caldendar_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n\t\t\t\t\t\n                    <input type=\"hidden\" name=\"submitted\" value=\"1\" /> \n\t\t\t\t\t<?php rsvpmaker_nonce(); ?>\n<?php\n//legacy feature\nif(!empty($options[\"default_content\"])) {\n?>\n<h3><?php esc_html_e('Default Content for Events (such as standard meeting location)','rsvpmaker'); ?>:</h3>\n<textarea name=\"option[default_content]\"  rows=\"5\" cols=\"80\" id=\"default_content\"><?php if(isset($options[\"default_content\"])) echo esc_html($options[\"default_content\"]);?></textarea>\n<br />\n<?php\n}\n?>\n<strong><?php esc_html_e('Default Time','rsvpmaker'); ?></strong><br /> <?php esc_html_e('Hour','rsvpmaker'); ?>: <select name=\"option[defaulthour]\"> \n<?php echo $houropt;?>\n</select> \n \n<?php esc_html_e('Minutes','rsvpmaker'); ?>: <select name=\"option[defaultmin]\"> \n<?php echo $minopt;?>\n</select>\n<br />\n<?php echo __('See also','rsvpmaker') . ' <a href=\"'.admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list').'\">'.__('Event Templates','rsvpmaker').'</a> '.__('for events held an a recurring schedule.','rsvpmaker'); ?><br />\n<input type=\"checkbox\" name=\"option[autorenew]\" value=\"1\" <?php if(isset($options[\"autorenew\"]) && $options[\"autorenew\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Autorenew Events from Template','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?> - <?php esc_html_e('means new events are automatically added according to the schedule set in the template.','rsvpmaker');?>\n<br />\n<strong><?php esc_html_e('RSVP TO','rsvpmaker'); ?>:</strong><br />\n<input type=\"radio\" name=\"option[rsvp_to_current]\" value=\"0\" <?php if(!isset($options[\"rsvp_to_current\"]) || ! $options[\"rsvp_to_current\"] ) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Use this address','rsvpmaker'); ?></strong>: \n<input type=\"text\" name=\"option[rsvp_to]\" id=\"rsvp_to\" value=\"<?php if(isset($options[\"rsvp_to\"])) echo esc_attr($options[\"rsvp_to\"]);?>\" /><br />\n<input type=\"radio\" name=\"option[rsvp_to_current]\" value=\"1\" <?php if(isset($options[\"rsvp_to_current\"]) && $options[\"rsvp_to_current\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Use email of current user (event author)','rsvpmaker'); ?></strong>\n<br />\n<br />\n<input type=\"checkbox\" name=\"option[rsvp_on]\" value=\"1\" <?php if(isset($options[\"rsvp_on\"]) && $options[\"rsvp_on\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVP On','rsvpmaker'); ?></strong>\n<?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\t<br />    \n\n<input type=\"checkbox\" name=\"option[rsvp_captcha]\" value=\"1\" <?php if(isset($options[\"rsvp_captcha\"]) && $options[\"rsvp_captcha\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVP CAPTCHA On','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?><br />\n<?php\nif(function_exists('rsvpmaker_recaptcha_output'))\n{\n?>\n<strong>Or use Google ReCaptcha (v2) </strong> <a href=\"https://www.google.com/recaptcha/admin\" target=\"_blank\">register</a><br />\nReCaptcha (v2) Site Key: <input type=\"text\" name=\"option[rsvp_recaptcha_site_key]\" value=\"<?php if(isset($options[\"rsvp_recaptcha_site_key\"]) && $options[\"rsvp_recaptcha_site_key\"]) echo esc_attr($options[\"rsvp_recaptcha_site_key\"]);?>\"><br />\nReCaptcha (v2) Secret: <input type=\"text\" name=\"option[rsvp_recaptcha_secret]\" value=\"<?php if(isset($options[\"rsvp_recaptcha_site_key\"]) && $options[\"rsvp_recaptcha_secret\"]) echo esc_attr($options[\"rsvp_recaptcha_secret\"]);?>\"><br />\n<?php\n}\n?>\n<input type=\"checkbox\" name=\"option[login_required]\" value=\"1\" <?php if(isset($options[\"login_required\"]) && $options[\"login_required\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Login Required to RSVP','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n<br />\n\n  <input type=\"checkbox\" name=\"option[show_attendees]\" value=\"1\" <?php if(isset($options[\"show_attendees\"]) && $options[\"show_attendees\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVPs Attendees List Public','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n\t<br />\n\n  <input type=\"checkbox\" name=\"option[rsvp_count]\" value=\"1\" <?php if(isset($options[\"rsvp_count\"]) && $options[\"rsvp_count\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show RSVP Count','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n\t<br />\n\n  <input type=\"checkbox\" name=\"option[rsvp_yesno]\" value=\"1\" <?php if(isset($options[\"rsvp_yesno\"]) && $options[\"rsvp_yesno\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show RSVP Yes/No Radio Buttons','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n\t<br />\n\n  <input type=\"checkbox\" name=\"option[calendar_icons]\" value=\"1\" <?php if(isset($options[\"calendar_icons\"]) && $options[\"calendar_icons\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?></strong> \n\t<br />\n\n  <input type=\"checkbox\" name=\"option[convert_timezone]\" value=\"1\" <?php if(isset($options[\"convert_timezone\"]) && $options[\"convert_timezone\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?></strong> \n\t<br />\n\n<input type=\"checkbox\" name=\"option[add_timezone]\" value=\"1\" <?php if(isset($options[\"add_timezone\"]) && $options[\"add_timezone\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); ?></strong> \n\t<br />\n\n  <input type=\"checkbox\" name=\"option[social_title_date]\" value=\"1\" <?php if(isset($options[\"social_title_date\"]) && $options[\"social_title_date\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Include date with title shown on Facebook/Twitter previews (og:title and twitter:title metatags)','rsvpmaker'); ?></strong> \n\t<br />\n\n  <input type=\"checkbox\" name=\"option[missing_members]\" value=\"1\" <?php if(isset($options[\"missing_members\"]) && $options[\"missing_members\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVP Form Shows Members Not Responding','rsvpmaker'); ?></strong><br /><em><?php esc_html_e('if members log in to RSVP, this shows user accounts NOT associated with an RSVP (tracking WordPress user IDs)','rsvpmaker'); ?>.</em>\n\t<br />\n\n\t\t\t\t\t<h3><?php esc_html_e('Instructions for Form','rsvpmaker'); ?>:</h3>\n  <textarea name=\"option[rsvp_instructions]\"  rows=\"5\" cols=\"80\" id=\"rsvp_instructions\"><?php if(isset($options[\"rsvp_instructions\"]) ) echo esc_textarea($options[\"rsvp_instructions\"]);?></textarea>\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('Confirmation Message','rsvpmaker'); ?>:</h3>\n<?php\n$confirm = get_post($options['rsvp_confirm']);\necho (strpos($confirm->post_content,'</p>')) ? $confirm->post_content : wpautop($confirm->post_content);\n$confedit = admin_url('post.php?action=edit&post='.$confirm->ID);\nprintf('<div id=\"editconfirmation\"><a target=\"_blank\" href=\"%s\">'.__('Edit','rsvpmaker').'</a></div>',$confedit);\t\t\t\t\n?>\n<br />\n <input type=\"checkbox\" name=\"option[rsvpmaker_send_confirmation_email]\" id=\"rsvpmaker_send_confirmation_email\" <?php if( isset($options[\"rsvpmaker_send_confirmation_email\"]) && $options[\"rsvpmaker_send_confirmation_email\"] ) echo ' checked=\"checked\" ' ?> > <?php esc_html_e('Send confirmation emails','rsvpmaker'); ?> <input type=\"checkbox\" name=\"option[confirmation_include_event]\" id=\"rsvp_confirmation_include_event\" <?php if( isset($options[\"confirmation_include_event\"]) && $options[\"confirmation_include_event\"] ) echo ' checked=\"checked\" ' ?> > <?php esc_html_e('Include event listing with confirmation and reminders','rsvpmaker'); ?>\n\t<br />\n<?php\nif(isset($options[\"rsvp_form\"]) && is_numeric($options[\"rsvp_form\"]))\n{\necho '<h3>Default RSVP Form</h3>';\n$fpost = get_post($options[\"rsvp_form\"]);\nif(empty($fpost))\n\t{\n\t$options[\"rsvp_form\"] = upgrade_rsvpform();\n\t$fpost = get_post($options[\"rsvp_form\"]);\n\t}\necho rsvpmaker_form_summary($fpost);\n$edit = admin_url('post.php?action=edit&post='.$options[\"rsvp_form\"]);\nprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\nprintf('<div><a style=\"display: block; margin-top: 15px; color: red;\" href=\"%s\">%s</a></div>',admin_url('options-general.php?page=rsvpmaker-admin.php&rsvp_form_reset='. (int) $options['rsvp_form']),__('Reset Form to Default','rsvpmaker'));\nprintf('<div>%s <a href=\"%s\">%s</a></div>',__('For alternative forms, see ','rsvpmaker'),admin_url('options-general.php?page=rsvpmaker-admin.php&tab=rsvpforms'), __('RSVP Forms tab','rsvpmaker'));\n}\nelse\n{\n?>\n<h3><?php esc_html_e('RSVP Form','rsvpmaker'); ?> (<a href=\"#\" id=\"enlarge\"><?php esc_html_e('Enlarge','rsvpmaker'); ?></a>):</h3>\n  <textarea name=\"option[rsvp_form]\"  rows=\"5\" cols=\"80\" id=\"rsvpform\"><?php if( isset($options[\"rsvp_form\"]) ) echo htmlentities($options[\"rsvp_form\"]);?></textarea>\n<br /><button id=\"create-form\">Generate Form</button> or <a href=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php&reset_form=1'); ?>\"><?php esc_html_e('Reset to default','rsvpmaker'); ?></a>\n<br /><?php esc_html_e(\"This is a customizable template for the RSVP form, introduced as part of the Aug. 2012 update. With the exception of the yes/no radio buttons and the notes textarea, fields are represented by the shortcodes [rsvpfield textfield=&quot;fieldname&quot;] or [rsvpfield selectfield=&quot;fieldname&quot; options=&quot;option1,option2&quot;]. There is also a [rsvpprofiletable show_if_empty=&quot;phone&quot;] shortcode which is an optional block that will not be displayed if the required details (such as a phone number) are already &quot;on file&quot; from a prior RSVP. For this to work, there must also be a [/rsvpprofiletable] closing tag. The guest section of the form is represented by [rsvpguests] (no parameters). If you don't want the guest blanks to show up, you can remove this. The form code you supply will be wrapped in a form tag with the CSS ID of\",'rsvpmaker'); ?> &quot;rsvpform&quot;.\n<script>\njQuery('#enlarge').click(function() {\n  jQuery('#rsvpform').attr('rows','40');\n  return false;\n});\n</script>\n<?php\nrsvp_form_setup_form($options[\"rsvp_form\"]);\n}\n?>\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('RSVP Link','rsvpmaker'); ?>:</h3>\n\n  <textarea name=\"option[rsvplink]\"  rows=\"5\" cols=\"80\" id=\"rsvplink\"><?php if(isset($options[\"rsvplink\"]) ) echo wp_kses_post($options[\"rsvplink\"]);?></textarea>\n\t<br />Example:\n<?php if(isset($options[\"rsvplink\"]) ) echo wp_kses_post($options[\"rsvplink\"]);?>\n<h3><?php esc_html_e('Label for Updates','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[update_rsvp]\"  rows=\"5\" cols=\"80\" id=\"update_rsvp\" value=\"<?php if(isset($options[\"update_rsvp\"]) ) echo esc_attr($options[\"update_rsvp\"]);?>\" />\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('RSVP Form Title','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[rsvp_form_title]\"  rows=\"5\" cols=\"80\" id=\"rsvp_form_title\" value=\"<?php if(isset($options[\"rsvp_form_title\"]) ) echo esc_attr($options[\"rsvp_form_title\"]);?>\" />\n\t<br />\n<h3 id=\"privacy_consent\"><?php esc_html_e('Privacy Consent','rsvpmaker'); ?>:</h3>\n\t\t\t\t<p>For compliance with the European Union's General Data Protection Regulation (GDPR) and other data privacy and security regulations, you can add a checkbox to your form requiring the user to agree to your privacy policy. WordPress 4.9.6 added a privacy policy tool, and you can consult the <a href=\"https://rsvpmaker.com/privacy-policy/#rsvpmaker\">rsvpmaker.com privacy policy</a> for suggested language about the use of this plugin. RSVPMaker also hooks into the WordPress tools for exporting or deleting a user's information on demand. See the <a href=\"https://rsvpmaker.com/blog/2018/05/20/control-of-personal-data-gdpr-compliance/\">blog post</a>.</p>\n\t\t\t\t<?php \n\t\t\t  \t$privacy_page = rsvpmaker_check_privacy_page();\n\t\t\t  if($privacy_page)\n\t\t\t  {\n\t\t\t\t  $privacy_url = get_permalink($privacy_page);\n?>\n\t\t\t\t<p><input type=\"radio\" name=\"option[privacy_confirmation]\" value=\"1\" <?php if(!empty($options[\"privacy_confirmation\"]) && ($options[\"privacy_confirmation\"]) ) echo 'checked=\"checked\"'; ?> /> Yes <input type=\"radio\" name=\"option[privacy_confirmation]\" value=\"no\" <?php if(empty($options[\"privacy_confirmation\"]) || ($options[\"privacy_confirmation\"] == 'no')) echo 'checked=\"checked\"'; ?> /> <?php esc_html_e('No - Add checkbox?','rsvpmaker');?></p>\n\t\t\t\t<p><textarea name=\"option[privacy_confirmation_message]\" style=\"width: 95%\"><?php if(empty($options['privacy_confirmation_message'])) printf('I consent to the <a target=\"_blank\" href=\"%s\">privacy policy</a> site of this site for purposes of follow up to this registration.',$privacy_url); else echo wp_kses_post($options['privacy_confirmation_message']); ?></textarea></p>\n<?php\t\t\t\t  \n\t\t\t  }\n\t\t\t  else\n\t\t\t  \techo'<p>'.__('First, you must register a privacy page with WordPress','rsvpmaker').': <a href=\"'.admin_url('options-privacy.php').'\">'.admin_url('options-privacy.php').'</a></p>';\n\t\t\t  \n\t\t\t\t?>\n\t\t\t\t\n\t\t\t<h3><?php esc_html_e('Date Format (long)','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[long_date]\"  id=\"long_date\" value=\"<?php if(isset($options[\"long_date\"]) ) echo esc_attr($options[\"long_date\"]);?>\" /> (used at the top of event listings)\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('Date Format (short)','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[short_date]\"  id=\"short_date\" value=\"<?php if(isset($options[\"short_date\"]) ) echo esc_attr($options[\"short_date\"]);?>\" /> (used in headlines for event_listing shortcode, also sidebar widget)\n\t\n<br />For reference, see PHP <a target=\"_blank\" href=\"https://www.php.net/manual/en/datetime.format.php\">date format strings</a>\n<br />Examples:<br />\n<?php\necho 'l F j, Y = '.rsvpmaker_date('l F j, Y').'<br />'; \necho 'j F Y = '.rsvpmaker_date('j F Y').'<br />'; \necho 'm-d-Y = '.rsvpmaker_date('m-d-Y').'<br />'; \n?>\n<br />\n<h3><?php esc_html_e('Time Format','rsvpmaker'); ?>:</h3>\n<p>\n<input type=\"radio\" name=\"option[time_format]\" value=\"g:i A\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"g:i A\")) echo ' checked=\"checked\"';?> /> 12 hour AM/PM \n<input type=\"radio\" name=\"option[time_format]\" value=\"H:i\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"H:i\")) echo ' checked=\"checked\"';?> /> 24 hour \n\n<input type=\"radio\" name=\"option[time_format]\" value=\"g:i A T\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"g:i A T\")) echo ' checked=\"checked\"';?> /> 12 hour AM/PM (include timezone)\n<input type=\"radio\" name=\"option[time_format]\" value=\"H:i T\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"H:i T\")) echo ' checked=\"checked\"';?> /> 24 hour (include timezone)\n\n<br />\n\t\t\t\t\t<h3><?php esc_html_e('Event Page','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[eventpage]\" value=\"<?php if(isset($options[\"eventpage\"]))  echo esc_attr($options[\"eventpage\"]);?>\" size=\"80\" />\n\n<br /><h3><?php esc_html_e('Custom CSS','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[custom_css]\" value=\"<?php if(isset($options[\"custom_css\"]) ) echo esc_attr($options[\"custom_css\"]);?>\" size=\"80\" />\n<?php\nif(isset($options[\"custom_css\"]) && $options[\"custom_css\"])\n\t{\n\n\t\t$file_headers = @get_headers($options[\"custom_css\"]);\n\t\tif($file_headers[0] == 'HTTP/1.1 404 Not Found') {\n\t\t\techo ' <span style=\"color: red;\">'.__('Error: CSS not found','rsvpmaker').'</span>';\n\t\t}\n\t\telse {\n\t\t\techo ' <span style=\"color: green;\">'.__('OK','rsvpmaker').'</span>';\n\t\t}\n\n\t}\n$dstyle = plugins_url('style.css',__FILE__);\n?>\n\n\t<br /><em><?php esc_html_e('Allows you to override the standard styles from','rsvpmaker'); ?> <br /><a href=\"<?php echo esc_attr($dstyle);?>\"><?php echo esc_html($dstyle);?></a></em>\n\t<br /><em><?php esc_html_e('Probably a better option: use the Customize utility built into WordPress to override the defaults','rsvpmaker'); ?></em>\n<h3><?php esc_html_e('Theme Template for Events'); ?></h3>\n<br /><select name=\"option[rsvp_template]\"><?php\n$current_template = (empty($options[\"rsvp_template\"])) ? 'page.php' : $options[\"rsvp_template\"];\n$templates = get_page_templates();\n$templates['Page'] = 'page.php';\n$templates['Single'] = 'single.php';\nforeach($templates as $tname => $tfile)\n\t{\n\t$s = ($tfile == $current_template) ? ' selected=\"selected\" ' : '';\n\tprintf('<option value=\"%s\" %s>%s</option>',$tfile,$s,$tname);\n\t}\n?></select> <br /><em><?php esc_html_e('Template from your theme to be used in the absence of a single-rsvpmaker.php file.','rsvpmaker'); ?></em>\n\n\n<h3><?php esc_html_e('Dashboard','rsvpmaker');?></h3>\n<select name=\"option[dashboard]\">\n<option value=\"\"><?php esc_html_e('No Widget','rsvpmaker');?></option>\n<option value=\"show\" <?php if(isset($options[\"dashboard\"]) && ($options[\"dashboard\"] == 'show')) echo ' selected=\"selected\" '; ?> ><?php esc_html_e('Show Widget','rsvpmaker');?></option>\n<option value=\"top\" <?php if(isset($options[\"dashboard\"]) && ($options[\"dashboard\"] == 'top')) echo ' selected=\"selected\" '; ?> ><?php esc_html_e('Show Widget on Top','rsvpmaker');?></option>\n</select>\n<br /><?php esc_html_e('Note','rsvpmaker'); ?>\n<br />\n<textarea name=\"option[dashboard_message]\" style=\"width:90%;\"><?php echo esc_html($options[\"dashboard_message\"]); ?></textarea>\n\n<h3><?php esc_html_e('Event Submissions','rsvpmaker'); ?></h3>\n<p>Notify <input style=\"width: 90%\" type=\"text\" name=\"option[submissions_to]\" id=\"rsvp_to\" value=\"<?php if(isset($options[\"submissions_to\"])) echo esc_attr($options[\"submissions_to\"]); elseif(isset($options[\"rsvp_to\"])) echo esc_attr($options[\"rsvp_to\"]);?>\" />\n<br />Attribute to <?php $submission_author = (isset($options['submission_author'])) ? $options['submission_author'] : 1; wp_dropdown_users(array('name' => 'option[submission_author]','selected' => $submission_author)); ?>\n</p>\n<p>To accept event submissions on the front end of your website, include the RSVPMaker Event Submission block or [rsvpmaker_submission] shortcode. Submissions are saved as drafts for an editor's approval.</p>\n\n<h3><?php esc_html_e('Apply to Existing Events','rsvpmaker'); ?></h3>\n<p>Check here if you want any of the following variables to be applied to existing events and event templates (will override any customizations).</p>\n<p><input  type=\"checkbox\"  name=\"defaultoverride[]\" value=\"rsvp_on\" /> Collect RSVPs <input type=\"checkbox\" name=\"defaultoverride[]\" value=\"rsvp_form\" /> Form <input type=\"checkbox\" name=\"defaultoverride[]\" value=\"rsvp_confirm\" /> Confirmation Message </p>\n\n<h3><?php esc_html_e('Troubleshooting and Logging','rsvpmaker'); ?></h3>\n  <input type=\"checkbox\" name=\"option[debug]\" value=\"1\" <?php if(isset($options[\"debug\"]) && $options[\"debug\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Debug and log. Log messages will be saved in the uploads directory with file names in the pattern rsvpmaker_log_2018-01-01.txt','rsvpmaker'); ?></strong>\n\t<br />\n  <input type=\"checkbox\" name=\"option[log_email]\" value=\"1\" <?php if(isset($options[\"log_email\"]) && $options[\"log_email\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Log email','rsvpmaker'); ?>: Monitor notification/confirmation messages generated</strong>\n\t<br />\n\t\t\t  <div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n\t\t\t</form>\n\n\t    </div>\n\t\t\n\t </div>\n\n\t</div>\n\n</section>\n<section id=\"security\" class=\"rsvpmaker\">\n<form name=\"rsvpmaker_security_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<h3><?php esc_html_e('Menu Security','rsvpmaker'); ?>:</h3>\n<?php\nrsvpmaker_menu_security( __(\"RSVP Report\",'rsvpmaker'),  \"menu_security\", $options );\nrsvpmaker_menu_security(__(\"Event Templates\",'rsvpmaker'),\"rsvpmaker_template\",$options );\nrsvpmaker_menu_security( __(\"Recurring Event\",'rsvpmaker'), \"recurring_event\", $options );\nrsvpmaker_menu_security( __(\"Multiple Events\",'rsvpmaker'), \"multiple_events\",$options );\nrsvpmaker_menu_security( __(\"Documentation\",'rsvpmaker'), \"documentation\",$options );\n?>\n<p><em><?php esc_html_e('Security level required to access custom menus (RSVP Report, Documentation)','rsvpmaker'); ?></em></p>\n<h3><?php esc_html_e('Additional Editors / Co-Authors','rsvpmaker'); ?></h3>\n  <input type=\"checkbox\" name=\"security_option[additional_editors]\" value=\"1\" <?php if(isset($options[\"additional_editors\"]) && $options[\"additional_editors\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Additional Editors','rsvpmaker'); ?></strong> <em><?php esc_html_e('Allow users to share editing rights for event templates and related events.','rsvpmaker'); ?></em>\n\t<p><strong>How this works: </strong> When this function is enabled, event authors have the option of allowing other users to be additional editors or co-authors for an event or a series of events based  on a template. This is useful for community websites where multiple organizations post their events. The organization can appoint multiple officers or representatives to have equal rights to update the events template for their meetings and all the individual events based on that template.</p>\n\t<p>Note that to unlock events for editing, RSVPMaker changes the author ID for a post to the ID of the authorized user editing the post.</p>\t\t\t\t\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'security')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"security\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"security\">\n\t\t\t\t \t\t\t\t \t\t\t\t\n<div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n\t</form>\n</section>\n<section id=\"payments\" class=\"rsvpmaker\">\n<?php do_action('rsvpmaker_payments_setting_top'); ?>\n<form name=\"rsvpmaker_payment_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<h1>Online Payments</h1>\n<p>If you wish to collect online payments, please set up API access to the payment gateway of your choice.</p>\n<?php do_action('rsvpmaker_payment_settings'); ?>\n<h3><?php esc_html_e('Track RSVP as &quot;invoice&quot; number','rsvpmaker'); ?>:</h3>\n<div>\n<input type=\"radio\" name=\"payment_option[paypal_invoiceno]\" value =\"1\" <?php if($options[\"paypal_invoiceno\"]) echo ' checked=\"checked\" ' ?> /> Yes\n\t<input type=\"radio\" name=\"payment_option[paypal_invoiceno]\" value =\"0\" <?php if(!$options[\"paypal_invoiceno\"]) echo ' checked=\"checked\" ' ?> /> No</div>\n\t<div><em><?php esc_html_e('Must be enabled for RSVPMaker to track payments','rsvpmaker'); ?></em></div>\n<h3><?php esc_html_e('Send Payment Reminder','rsvpmaker'); ?>:</h3>\n<div>\n<input type=\"radio\" name=\"payment_option[send_payment_reminders]\" value =\"1\" <?php if($options[\"send_payment_reminders\"]) echo ' checked=\"checked\" ' ?> /> Yes\n\t<input type=\"radio\" name=\"payment_option[send_payment_reminders]\" value =\"0\" <?php if(!$options[\"send_payment_reminders\"]) echo ' checked=\"checked\" ' ?> /> No</div>\n\t<div><em><?php esc_html_e('If someone RSVPs but does not pay, send an email reminder that their registration is not complete without payment.','rsvpmaker'); ?></em></div>\n\n<h3><?php esc_html_e('Payment Currency','rsvpmaker'); ?>:</h3>\n<div><input type=\"text\" name=\"payment_option[paypal_currency]\" value=\"<?php if(isset($options[\"paypal_currency\"])) echo esc_attr($options[\"paypal_currency\"]);?>\" size=\"5\" /> <a href=\"https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/e_howto_api_nvp_currency_codes\">(list of codes)</a>\n\n<select name=\"currency_format\">\n<option value=\"<?php if(isset($options[\"currency_decimal\"]) ) echo esc_attr($options[\"currency_decimal\"]);?>|<?php if(isset($options[\"currency_thousands\"])) echo esc_attr($options[\"currency_thousands\"]);?>\"><?php echo esc_attr(number_format(1000.00, 2, $options[\"currency_decimal\"], $options[\"currency_thousands\"])); ?></option>\n<option value=\".|,\"><?php echo esc_html(number_format(1000.00, 2, '.',  ',')); ?></option>\n<option value=\",|.\"><?php echo esc_html(number_format(1000.00, 2, ',',  '.')); ?></option>\n<option value=\",| \"><?php echo esc_html(number_format(1000.00, 2, ',',  ' ')); ?></option>\n</select>    \n</div>\n\n<h3>PayPal (REST API)</h3>\n<p><?php esc_html_e('Keys may be obtained from','rsvpmaker'); ?> <a target=\"_blank\" href=\"https://developer.paypal.com/developer/applications\">developer.paypal.com/developer/applications/</a></p>\n<?php\n$test_keys = sprintf(' <a href=\"%s\">%s</a> ',admin_url('options-general.php?page=rsvpmaker-admin.php&payment_key_test=1'),__('Test Keys','rsvpmaker'));\n$pp_on = false;\n$paypal_rest_keys = get_option('rsvpmaker_paypal_rest_keys');\nif(empty($paypal_rest_keys))\n\t$paypal_rest_keys = array('client_id' => '','client_secret' => '','sandbox_client_id' => '','sandbox_client_secret' => '');\n$checkboxes = (empty($paypal_rest_keys['sandbox'])) ? '<input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"1\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"0\" checked=\"checked\" /> Production' : '<input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"1\"  checked=\"checked\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"0\" /> Production';\nif(!empty($paypal_rest_keys['client_id']) && !empty($paypal_rest_keys['client_secret']))\n{\n\t$pp_on = true;\n?>\n<div id=\"paypal_production\"><?php esc_html_e('Production keys set','rsvpmaker'); echo ' '.  $test_keys; ?> <p><button id=\"reset_paypal_production\"><?php esc_html_e('Reset PayPal','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse\n{\n?>\n<p>Client ID (Production):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[client_id]\"  class=\"paypal_keys\" value=\"<?php echo esc_attr($paypal_rest_keys['client_id']); ?>\"></p>\n<p>Client Secret (Production):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[client_secret]\" class=\"paypal_keys\"  value=\"<?php echo esc_attr($paypal_rest_keys['client_secret']); ?>\"></p>\n<?php\n}\nif(!empty($paypal_rest_keys['sandbox_client_id']) && !empty($paypal_rest_keys['sandbox_client_secret']))\n{\n\t$pp_on = true;\n?>\n<div id=\"paypal_sandbox\"><?php esc_html_e('Sandbox keys set','rsvpmaker'); echo ' '.$test_keys; ?> <p><button id=\"reset_paypal_sandbox\"><?php esc_html_e('Reset PayPal Sandbox','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse {\n?>\n<p>Client ID (Sandbox):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[sandbox_client_id]\"  class=\"paypal_keys\" value=\"<?php echo esc_attr($paypal_rest_keys['sandbox_client_id']); ?>\"></p>\n<p>Client Secret (Sandbox):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[sandbox_client_secret]\"  class=\"paypal_keys\" value=\"<?php echo esc_attr($paypal_rest_keys['sandbox_client_secret']); ?>\"></p>\n<?php\n}\n\n?>\n<p>Operating Mode: <?php echo $checkboxes; ?></p>\n\n<h3>Stripe</h3>\n<p><?php esc_html_e('Keys may be obtained from','rsvpmaker'); ?> <a target=\"_blank\" href=\"https://dashboard.stripe.com/apikeys\">dashboard.stripe.com/apikeys</a></p>\n<?php \n$stripe_on = false;\n$stripe_keys = get_rsvpmaker_stripe_keys_all (); \n$checkboxes = ($stripe_keys['mode'] == 'production') ? '<input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"sandbox\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"production\" checked=\"checked\" /> Production' : '<input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"sandbox\"  checked=\"checked\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"production\" /> Production';\nif(!empty($stripe_keys['pk']) && !empty($stripe_keys['sk']))\n{\n$stripe_on = true;\n?>\n<div id=\"stripe_production\"><?php esc_html_e('Production keys set','rsvpmaker'); echo ' '.$test_keys; ?> <p><button id=\"reset_stripe_production\"><?php esc_html_e('Reset Stripe','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse\n{\n?>\n<p>Publishable Key (Production):<br />\n\t<input name=\"rsvpmaker_stripe_keys[pk]\"  class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['pk']); ?>\"></p>\n<p>Secret Key (Production):<br />\n\t<input name=\"rsvpmaker_stripe_keys[sk]\"  class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['sk']);  ?>\"></p>\n<?php\t\n}\nif(!empty($stripe_keys['sandbox_pk']) && !empty($stripe_keys['sandbox_sk']))\n{\n$stripe_on =true;\n?>\n<div id=\"stripe_sandbox\"><?php esc_html_e('Sandbox keys set','rsvpmaker'); echo ' '.$test_keys; ?> <p><button id=\"reset_stripe_sandbox\"><?php esc_html_e('Reset Stripe Sandbox','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse\n{\n?>\n<p>Publishable Key (Sandbox):<br />\n<input name=\"rsvpmaker_stripe_keys[sandbox_pk]\"  class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['sandbox_pk']); ?>\"></p>\n<p>Secret Key (Sandbox):<br />\n<input name=\"rsvpmaker_stripe_keys[sandbox_sk]\" class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['sandbox_sk']);  ?>\"></p>\n<?php\n}\n?>\n<p>Notification Email for Stripe (optional):<br />\n\t<input name=\"rsvpmaker_stripe_keys[notify]\" value=\"<?php echo esc_attr($stripe_keys['notify']); ?>\"></p>\t\n<p>Operating Mode: <?php echo $checkboxes; ?></p>\n\t<?php\nif (class_exists('Stripe_Checkout_Functions'))\n\t{\n\techo '<h3>'.__('WP Simple Pay Lite for Stripe plugin detected','rsvpmaker').'</h3>';\n\tprintf('<div>Use WP Simple Pay <select name=\"stripe\"><option value =\"1\" %s>Yes</option><option value =\"0\" %s>No</option></select></div>', ((!empty($options[\"stripe\"])) ? 'selected=\"selected\"' : ''), ((empty($options[\"stripe\"])) ? 'selected=\"selected\"' : '') );\n\techo '<div><em>'.__('Note: RSVPMaker now includes its own independent support for Stripe. You can enter the API keys below.').'</em></div>';\n\t}\n\n?>\n<p><?php echo __('Developers also have the option of hooking into the \"rsvpmaker_cash_or_custom\" action hook (<a href=\"https://rsvpmaker.com/blog/2017/10/18/custom-payment-gateway/\" target=\"_blank\">documentation</a>)','rsvpmaker'); ?></p>\n\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'payments')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"payments\" />\n<?php\t\n}\n$gateways = get_rsvpmaker_payment_options ();\n$chosen_gateway = get_rsvpmaker_payment_gateway ();\n$o = '';\nforeach($gateways as $gateway)\n\t{\n\t\t$s = ($chosen_gateway == $gateway) ? ' selected=\"selected\" ' : '';\n\t\t$o .= sprintf('<option %s value=\"%s\">%s</option>',$s,$gateway,$gateway);\n\t}\n?>\n<input type=\"hidden\" id=\"paypal_on\" value=\"<?php echo $pp_on; ?>\">\n<input  type=\"hidden\"  id=\"stripe_on\" value=\"<?php echo $stripe_on; ?>\">\n<h3><?php esc_html_e('Preferred Payment Gateway','rsvpmaker');?></h3>\n<p><select id=\"payment_gateway\" name=\"payment_option[payment_gateway]\"><?php echo $o; ?></select></p>\n<?php\necho default_gateway_check($chosen_gateway);\n?>\n<p><em><?php esc_html_e('If you have set up more than one, specify the one to be used by default.','rsvpmaker');?></em></p>\n\n<input type=\"hidden\" name=\"tab\" value=\"payments\">\n\n<div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n</form>\n\n</section>\n<section id=\"notification_email\" class=\"rsvpmaker\">\n<form name=\"notify_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<?php do_action('rsvpmaker_email_settings'); ?>\n<p><?php esc_html_e('These settings are related to transactional emails, such as registration confirmation messages. If you are using another plugin that improves the delivery of other WordPress generated emails such as password resets, you may be able to leave these settings at their defaults.','rsvpmaker'); ?></p>\n\n<p>\n<?php esc_html_e('From Email Address for All Notifications','rsvpmaker'); ?><br />\n<input type=\"text\" name=\"enotify_option[from_always]\" value=\"<?php if(!empty($options[\"from_always\"])) echo esc_attr($options[\"from_always\"]); elseif(!empty($options[\"smtp_useremail\"])) echo esc_attr($options[\"smtp_useremail\"]);?>\" size=\"15\" />\n</p>\n<h3 id=\"smtp\"><?php esc_html_e('SMTP for Notifications','rsvpmaker'); ?></h3>\n<p><?php esc_html_e('For more reliable delivery of email notifications, enable delivery through the SMTP email protocol. Standard server parameters will be used for Gmail and the SendGrid service, or specify the server port number and security protocol','rsvpmaker'); ?>.</p>\n<p><?php esc_html_e('If you are using another plugin that improves the delivery of email notifications, such one of the <a href=\"https://wordpress.org/plugins/sendgrid-email-delivery-simplified/\">SendGrid plugin</a> (which uses the SendGrid API rather than SMTP), leave this set to \"None - use wp_mail().\"','rsvpmaker'); ?>.</p>\n  <select name=\"enotify_option[smtp]\" id=\"smtp\">\n  <option value=\"\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == '' )) {echo ' selected=\"selected\" ';}?> ><?php esc_html_e('None - use wp_mail()','rsvpmaker'); ?></option>\n  <option value=\"gmail\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == 'gmail')) {echo ' selected=\"selected\" ';}?> >Gmail</option>\n  <option value=\"sendgrid\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == 'sendgrid')) {echo ' selected=\"selected\" ';}?> >SendGrid (SMTP)</option>\n  <option value=\"other\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == 'other')) {echo ' selected=\"selected\" ';}?> ><?php esc_html_e('Other SMTP (specified below)','rsvpmaker'); ?></option>\n  </select>\n<br />\n<?php esc_html_e('Email Account for Notifications','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_useremail]\" value=\"<?php if(isset($options[\"smtp_useremail\"])) echo esc_attr($options[\"smtp_useremail\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('Email Username','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_username]\" value=\"<?php if(isset($options[\"smtp_username\"])) echo esc_attr($options[\"smtp_username\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('Email Password','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_password]\" value=\"<?php if(isset($options[\"smtp_password\"])) echo esc_attr($options[\"smtp_password\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('Server (parameters below not necessary if you specified Gmail or SendGrid)','rsvpmaker'); ?><br />\n<input type=\"text\" name=\"enotify_option[smtp_server]\" value=\"<?php if(isset($options[\"smtp_server\"])) echo esc_attr($options[\"smtp_server\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('SMTP Security Prefix (ssl or tls, leave blank for non-encrypted connections)','rsvpmaker'); ?> \n<br />\n<input type=\"text\" name=\"enotify_option[smtp_prefix]\" value=\"<?php if(isset($options[\"smtp_prefix\"])) echo esc_attr($options[\"smtp_prefix\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('SMTP Port','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_port]\" value=\"<?php if(isset($options[\"smtp_port\"])) echo esc_attr($options[\"smtp_port\"]);?>\" size=\"15\" />\n<br />\n\n<p><?php esc_html_e('See <a href=\"http://www.wpsitecare.com/gmail-smtp-settings/\">this article</a> for additional guidance on using Gmail (requires a tweak to security settings in your Google account). If you have trouble getting Gmail or ssl or tls connections to work, an unencrypted port 25 connection to an email account on the same server that hosts your website should be reasonably secure since no data will be passed over the network.','rsvpmaker');?></p>\n\n<?php \nif(!empty($options[\"smtp\"]))\n\t{\n?>\n<a href=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php&smtptest=1'); ?>\"><?php esc_html_e('Send SMTP Test to RSVP To address','rsvpmaker'); ?></a>\n<?php\n\t}\n?>\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'notification_email')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"notification_email\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"notification_email\">\n\n<div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n</form>\n</section>\n<section id=\"email\" class=\"rsvpmaker\">\n\n<?php\nglobal $RSVPMaker_Email_Options;\nif(empty($RSVPMaker_Email_Options))\n$RSVPMaker_Email_Options = new RSVPMaker_Email_Options();\n$RSVPMaker_Email_Options->handle_options();\n?>\n\n    </section>\n<section id=\"groupemail\" class=\"rsvpmaker\">\n<form action=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php'); ?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<h2><?php esc_html_e('Group Email','rsvpmaker'); ?></h2>\n<?php\ndo_action('group_email_admin_notice');\n\necho '<p>'.__('Membership oriented websites can use this feature to relay messages from any member with a user account to all other members. Designed to work with POP3 email accounts. Members can unsubscribe.','rsvpmaker').'</p>';\n\n$hooksays = wp_get_schedule('rsvpmaker_relay_init_hook');\n\nif(isset($_POST['rsvpmaker_discussion_server']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\tupdate_option('rsvpmaker_discussion_server',sanitize_text_field($_POST['rsvpmaker_discussion_server']));\nif(isset($_POST['rsvpmaker_discussion_member']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_member'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_member',$newarray);\t\n}\nif(isset($_POST['rsvpmaker_discussion_officer']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_officer'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_officer',$newarray);\n}\nif(isset($_POST['rsvpmaker_discussion_extra']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_extra'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_extra',$newarray);\n}\nif(isset($_POST['rsvpmaker_discussion_bot']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_bot'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_bot',$newarray);\n}\nif(isset($_POST['rsvpmaker_discussion_active']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\tupdate_option('rsvpmaker_discussion_active',(int) $_POST['rsvpmaker_discussion_active']);\n\tdeactivate_plugins('wp-mailster/wp-mailster.php',false,false);\n\tif(!wp_get_schedule('rsvpmaker_relay_init_hook')) {\n\t\twp_schedule_event( strtotime('+2 minutes'), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n\t\techo '<p>Activating rsvpmaker_relay_init_hook</p>';\n\t}\n}\nelseif(isset($_POST))\n\twp_unschedule_hook( 'rsvpmaker_relay_init_hook' );\n\n$active = (int) get_option('rsvpmaker_discussion_active');\n\n$server = get_option('rsvpmaker_discussion_server');\nif(empty($server))\n\t{\n\t$server = '{localhost:995/pop3/ssl/novalidate-cert}';\n\tupdate_option('rsvpmaker_discussion_server',$server);\n\t}\n$member = get_option('rsvpmaker_discussion_member');\n$officer = get_option('rsvpmaker_discussion_officer');\n\nif(is_plugin_active( 'wp-mailster/wp-mailster.php' ) )\n\t{\n\techo '<div style=\"border: thin dotted red; padding: 10px; margin: 5px;\">';\n\t\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"mailster_lists WHERE name LIKE 'Member%' \";\n\t\t$row = $wpdb->get_row($sql);\n\t\tif(!empty($row->list_mail) && empty($member) ){\n\t\t\t$member = array('user' => $row->list_mail,'password' => $row->mail_in_pw, 'subject_prefix' => 'Members:'.get_option('blogname'), 'whitelist' => '','additional_recipients' => '', 'blocked' => '');\n\t\t\tupdate_option('rsvpmaker_discussion_member',$member);\n\t\t\techo '<p>'.__('Importing Member List settings from WP Mailster','rsvpmaker').'</p>';\n\t\t}\n\t\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"mailster_lists WHERE name LIKE 'Officer%' \";\n\t\t$row = $wpdb->get_row($sql);\n\t\tif(!empty($row->list_mail) && empty($officer) ){\n\t\t\t$officer = array('user' => $row->list_mail,'password' => $row->mail_in_pw, 'subject_prefix' => 'Officers:'.get_option('blogname'), 'whitelist' => '','additional_recipients' => '', 'blocked' => '');\n\t\t\tupdate_option('rsvpmaker_discussion_officer',$officer);\n\t\t\techo '<p>'.__('Importing Officer List settings from WP Mailster','rsvpmaker').'</p>';\n\t\t}\n\techo '<p>'.__('If you activate this feature, WP Mailster will be deactivated','rsvpmaker').'</p>';\n\techo '</div>';\n\t}\n\necho rsvpmaker_relay_get_pop('member');\necho rsvpmaker_relay_get_pop('officer');\necho rsvpmaker_relay_get_pop('extra');\necho rsvpmaker_relay_get_pop('bot');\n\nprintf('<p><label>Activate</label> <input type=\"radio\" name=\"rsvpmaker_discussion_active\" value=\"1\" %s /> Yes <input type=\"radio\" name=\"rsvpmaker_discussion_active\" value=\"0\" %s /> No</p>',($active) ? ' checked=\"checked\" ' : '',(!$active) ? ' checked=\"checked\" ' : '');\n\nprintf('<p><label>Server</label> <input type=\"text\" name=\"rsvpmaker_discussion_server\" value=\"%s\" /></p>',esc_attr($server));\n\n$member = get_option('rsvpmaker_discussion_member');\nif(empty($member))\n\t$member = array('user' => '','password' => '','subject_prefix' => 'Members:'.get_option('blogname'), 'whitelist' => '', 'blocked' => '','additional_recipients' => '');\nprint_group_list_options('member', $member);\n\nif(is_plugin_active( 'rsvpmaker-for-toastmasters/rsvpmaker-for-toastmasters.php' ))\n{\n\t//officers section\n\t$officer = get_option('rsvpmaker_discussion_officer');\n\tif(empty($officer))\n\t\t$officer = array('user' => '','password' => '', 'subject_prefix' => 'Officer:'.get_option('blogname'),  'whitelist' => '', 'blocked' => '','additional_recipients' => '');\n\tprint_group_list_options('officer', $officer);\n}\n\n$extra = get_option('rsvpmaker_discussion_extra');\nif(empty($extra))\n\t$extra = array('user' => '','password' => '', 'subject_prefix' => '', 'whitelist' => get_option('admin_email'), 'blocked' => '','additional_recipients' => '');\nprint_group_list_options('extra', $extra);\necho '<p><em>'.__('Use for small custom distribution lists. Or use to forward an email you want to share to WordPress, then edit further with RSVP Mailer before sending.','rsvpmaker').'</em></p>';\n\n$bot = get_option('rsvpmaker_discussion_bot');\nif(empty($bot))\n\t$bot = array('user' => '','password' => '', 'subject_prefix' => '', 'whitelist' => get_option('admin_email'), 'blocked' => '','additional_recipients' => '');\nprint_group_list_options('bot', $bot);\necho '<p><em>'.__('Use for automations triggered by an email.','rsvpmaker').'</em></p>';\n\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'groupemail')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"groupemail\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"groupemail\">\n<button>Submit</button>\n</form>\n\n<h3>Using the Bot Account</h3>\n<p>Email sent to the bot account can be processed using a WordPress action where the email content is past in the form of post variables (subject as post_title, content as post_content). Example:</p>\n<pre>\nadd_action('rsvpmaker_autoreply','my_post_to_email',10,5);\nfunction my_post_to_email($email_as_post, $email_user, $from, $to, $fromname = '') {\n\t$myemail = 'mytrustedemail@gmail.com';\n\tif($from == $myemail) {\n\t$email_as_post['post_type'] = 'post';\n\t$email_as_post['post_status'] = 'draft';\n\t$id = wp_insert_post($email_as_post);\n\twp_mail($myemail,'Draft '.$id.' '.$email_as_post['post_title'],'Edit draft '.$id);\n\t}\n}\n</pre>\n\n</section>\n<section id=\"rsvpforms\" class=\"rsvpmaker\">\n<?php\nprintf('<p>%s</p>',__('Use this page to manage alternative RSVP Forms. Like the default form, any of these alternative forms can be customized for an event post or template. If you created a custom form that worked well, you can assign it a name so that it can be reused with other events and templates.','rsvpmaker'));\nprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><h3>%s</h3><p><label>%s</label> <input type=\"text\" name=\"rsvp_form_new\" value=\"\"></p><p><em>%s</em></p><p> %s</p></form>',admin_url('edit.php'),__('Create a Reusable RSVP Form','rsvpmaker'),__('Label','rsvpmaker'),__('A form will be created with a sampling of input fields you can copy, modify, or delete to create a form that meets your needs.','rsvpmaker'),get_submit_button('Create'));\n$forms = rsvpmaker_get_forms();\necho '<h3>Default Form</h3>';\n$fpost = get_post($options[\"rsvp_form\"]);\nif(empty($fpost))\n\t{\n\t$options[\"rsvp_form\"] = upgrade_rsvpform();\n\t$fpost = get_post($options[\"rsvp_form\"]);\n\t}\necho rsvpmaker_form_summary($fpost);\n$edit = admin_url('post.php?action=edit&post='.$options[\"rsvp_form\"]);\nprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\nforeach($forms as $label => $form_id) {\n\t$fpost = get_post($form_id);\n\tif($fpost && $fpost->post_status != 'trash') {\n\t\tprintf('<h3>Form: %s</h3>',$label);\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$form_id);\n\t\tprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\t}\n}\n\n$results = $wpdb->get_results(\"SELECT ID, post_title, post_parent, post_content FROM $wpdb->posts JOIN $wpdb->postmeta ON ID=post_id WHERE meta_key='_rsvpmaker_special' AND meta_value='RSVP Form' AND post_parent ORDER BY ID DESC \");\nif($results)\n{\n\tprintf('<h2>%s</h2>',__('Save Existing Forms for Reuse','rsvpmaker'));\n\n$tab = (isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'rsvpforms') ? '<input type=\"hidden\" id=\"activetab\" value=\"rsvpforms\" />' : '';\n$tab .= '<input type=\"hidden\" name=\"tab\" value=\"rsvpforms\">';\n\n\tforeach($results as $fpost) {\n\t\tif(in_array($fpost->ID,$forms)) // if already in collection\n\t\t\tcontinue;\n\t\tprintf('<h3>%s %s</h3>',get_the_title($fpost->post_parent),get_rsvp_date($fpost->post_parent));\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$fpost->ID);\n\t\tprintf('<form action=\"%s\" method=\"post\"><input type=\"hidden\" name=\"form_id\" value=\"%d\">%s: <input type=\"text\" name=\"rsvpmaker_save_form\">%s <button>%s</button>%s</form>',admin_url('options-general.php?page=rsvpmaker-admin.php'),$fpost->ID,__('Name','rsvpmaker'),$tab,__('Save','rsvpmaker'),rsvpmaker_nonce('return'));\n\t}\n}\n\n?>\n</section>\n<section id=\"rsvpforms\" class=\"rsvpmaker\">\n<?php\nprintf('<p>%s</p>',__('Use this page to manage alternative RSVP Forms. Like the default form, any of these alternative forms can be customized for an event post or template. If you created a custom form that worked well, you can assign it a name so that it can be reused with other events and templates.','rsvpmaker'));\nprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><h3>%s</h3><p><label>%s</label> <input type=\"text\" name=\"rsvp_form_new\" value=\"\"></p><p><em>%s</em></p><p> %s</p></form>',admin_url('edit.php'),__('Create a Reusable RSVP Form','rsvpmaker'),__('Label','rsvpmaker'),__('A form will be created with a sampling of input fields you can copy, modify, or delete to create a form that meets your needs.','rsvpmaker'),get_submit_button('Create'));\n$forms = rsvpmaker_get_forms();\necho '<h3>Default Form</h3>';\n$fpost = get_post($options[\"rsvp_form\"]);\nif(empty($fpost))\n\t{\n\t$options[\"rsvp_form\"] = upgrade_rsvpform();\n\t$fpost = get_post($options[\"rsvp_form\"]);\n\t}\necho rsvpmaker_form_summary($fpost);\n$edit = admin_url('post.php?action=edit&post='.$options[\"rsvp_form\"]);\nprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\nforeach($forms as $label => $form_id) {\n\t$fpost = get_post($form_id);\n\tif($fpost) {\n\t\tprintf('<h3>Form: %s</h3>',$label);\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$form_id);\n\t\tprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\t}\n}\n\n$results = $wpdb->get_results(\"SELECT ID, post_title, post_parent, post_content FROM $wpdb->posts JOIN $wpdb->postmeta ON ID=post_id WHERE meta_key='_rsvpmaker_special' AND meta_value='RSVP Form' AND post_parent ORDER BY ID DESC \");\nif($results)\n{\n\tprintf('<h2>%s</h2>',__('Save Existing Forms for Reuse','rsvpmaker'));\n\n$tab = (isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'rsvpforms') ? '<input type=\"hidden\" id=\"activetab\" value=\"rsvpforms\" />' : '';\n$tab .= '<input type=\"hidden\" name=\"tab\" value=\"rsvpforms\">';\n\n\tforeach($results as $fpost) {\n\t\tif(in_array($fpost->ID,$forms)) // if already in collection\n\t\t\tcontinue;\n\t\tprintf('<h3>%s %s</h3>',get_the_title($fpost->post_parent),get_rsvp_date($fpost->post_parent));\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$fpost->ID);\n\t\tprintf('<form action=\"%s\" method=\"post\"><input type=\"hidden\" name=\"form_id\" value=\"%d\">%s: <input type=\"text\" name=\"rsvpmaker_save_form\">%s <button>%s</button>%s</form>',admin_url('options-general.php?page=rsvpmaker-admin.php'),$fpost->ID,__('Name','rsvpmaker'),$tab,__('Save','rsvpmaker'),rsvpmaker_nonce('return'));\n\t}\n}\n\n?>\n</section>\n</sections>\n\n</div>\n\n<?php              \n\n          }\n      }\n  \n  else\n      : exit(\"Class already declared!\");\n  endif;\n  \n\n  // create new instance of the class\n  $RSVPMAKER_Options = new RSVPMAKER_Options();\n  ////print_r($RSVPMAKER_Options);\n  if (isset($RSVPMAKER_Options)) {\n      // register the activation function by passing the reference to our instance\n      register_activation_hook(__FILE__, array(&$RSVPMAKER_Options, 'install'));\n}\n\nfunction rsvpmaker_form_summary($fpost) {\n\t$guest = (strpos($fpost->post_content,'rsvpmaker-guests')) ? __('Yes','rsvpmaker') : __('No','rsvpmaker');\n\t$note = (strpos($fpost->post_content,'name=\"note\"') || strpos($fpost->post_content,'formnote')) ?  __('Yes','rsvpmaker') : __('No','rsvpmaker');\n\tpreg_match_all('/\"slug\":\"([^\"]+)/',$fpost->post_content,$matches);\n\tif(!empty($matches[1]))\n\tforeach($matches[1] as $match)\n\t\t$fields[$match] = $match;\n\tif(empty($fields))\n\t\treturn;\n\treturn sprintf('<div>'.__('Fields','rsvpmaker').': %s<br />'.__('Guests','rsvpmaker').': %s<br />'.__('Note field','rsvpmaker').': %s</div>',implode(', ',$fields),$guest,$note);\n}\n\nfunction print_group_list_options($list_type, $vars) {\n\tprintf('<h3>%s List</h3>',ucfirst($list_type));\n\t$fields = array('user','password','subject_prefix','whitelist','blocked','additional_recipients');\n\tforeach($fields as $field)\n\t\t{\n\t\t\tif(empty($vars[$field]))\n\t\t\t\t$vars[$field] = '';\n\t\t}\n\t////print_r($vars);\n\tprintf('<p><label>%s</label><br /><input type=\"text\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[user]\" value=\"%s\" /> </p>',__('Email/User','rsvpmaker'),esc_attr($vars[\"user\"]));\t\n\tprintf('<p><label>%s</label><br /><input type=\"text\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[password]\" value=\"%s\" /> </p>',__('Password','rsvpmaker'),esc_attr($vars[\"password\"]));\n\tif($list_type != 'bot') {\n\t\tprintf('<p><label>%s</label><br /><input type=\"text\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[subject_prefix]\" value=\"%s\" /> </p>',__('Subject Prefix','rsvpmaker'),esc_attr($vars[\"subject_prefix\"]));\n\t\tprintf('<p><label>%s</label> <br /><textarea rows=\"3\" cols=\"80\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[whitelist]\">%s</textarea> </p>',__('Whitelist - additional allowed sender emails','rsvpmaker'),esc_attr($vars[\"whitelist\"]));\t\n\t\tprintf('<p><label>%s</label> <br /><textarea rows=\"3\" cols=\"80\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[blocked]\">%s</textarea> </p>',__('Blocked - not allowed to send to list','rsvpmaker'),esc_attr($vars[\"blocked\"]));\t\n\t\tprintf('<p><label>%s</label> <br /><textarea  rows=\"3\" cols=\"80\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[additional_recipients]\">%s</textarea> </p>',__('Additional Recipients','rsvpmaker'),esc_attr($vars[\"additional_recipients\"]));\n\t}\t\n}\n\nfunction rsvpmaker_default_event_content($content) {\nglobal $post;\nglobal $rsvp_options;\nglobal $rsvp_template;\nif(empty($post->post_type))\n\treturn $content;\nif(($post->post_type == 'rsvpmaker') && ($content == ''))\n{\nif(isset($rsvp_template->post_content))\n\treturn $rsvp_template->post_content;\nreturn wp_kses_post($rsvp_options['default_content']);\n}\nelse\nreturn $content;\n}\n\nfunction rsvpmaker_title_from_template($title) {\nglobal $rsvp_template;\nglobal $post;\nglobal $wpdb;\nif(isset($_GET[\"from_template\"]) ) \n\t{\n\t$t = (int) $_GET[\"from_template\"];\n\t$sql = \"SELECT post_title, post_content FROM $wpdb->posts WHERE ID=$t\";\n\t$rsvp_template = $wpdb->get_row($sql);\n\treturn $rsvp_template->post_title;\n\t}\nreturn $title;\n}\n\nadd_filter('the_editor_content','rsvpmaker_default_event_content');\nadd_filter('default_title','rsvpmaker_title_from_template');\n\nfunction rsvpmaker_doc () {\nglobal $rsvp_options;\n?>\n<style>\n#docpage ul {\nmargin-left: 10px;\n}\n#docpage li {\nmargin-left: 10px;\nlist-style-type: circle;\n}\n</style>\n<div id=\"docpage\">\n<h2>Documentation</h2><p>More detailed documentation at <a href=\"http://www.rsvpmaker.com/documentation/\">http://www.rsvpmaker.com/documentation/</a></p><h3>Shortcodes and Event Listing / Calendar Views</strong></h3><p>RSVPMaker provides the following shortcodes for listing events, listing event headlines, and displaying a calendar with links to events.</p><p><strong>[rsvpmaker_upcoming]</strong> displays the index of upcoming events. If an RSVP is requested, the event includes the RSVP button link to the single post view, which will include your RSVP form. The calendar icon in the WordPress visual editor simplifies adding the rsvpmaker_upcoming code to any page or post.</p><p>[rsvpmaker_upcoming calendar=&quot;1&quot;] displays the calendar, followed by the index of upcoming events.</p><p>Attributes can be added in the format [rsvpmaker_upcoming attribute_name=\"attribute_value\"]<p><ul><li>type=\"type_name\" displays only the events with the matching event type, as set in the editor (example: type=\"featured\") </li><li>no_event=\"message\" message to display if no events are in the database (example=\"We are workin on scheduling new events. Check back soon\")</li><li>one=\"ID|slug|next\" embed a single message, identified by either post ID number, slug, or \"next\" to display the next upcoming event. (examples one=\"123\" or one=\"special-event\" or one=\"next\")</li><li>limit=\"posts_per_page\" limits the number of posts to display. If not specified, this will be the same as the number of posts displayed on your blog index page. (example: limit=\"30\")</li><li>add_to_query=\"querystring\" adds an arbitrary command to the WordPress query (example: add_to_query=\"posts_per_page=30&amp;post_status=draft\" would retrieve 30 draft posts)</li><li>hideauthor=\"1\" set this to prevent the author displayname from being shown at the bottom of an event post.</li>\n</ul>\n  \n            <div style=\"background-color: #FFFFFF; padding: 15px; text-align: center;\">\n            <img src=\"<?php echo plugins_url('/shortcode.png',__FILE__);?>\" width=\"535\" height=\"412\" />\n<br /><em><?php esc_html_e('Contents for an events page.','rsvpmaker');?></em>\n            </div>\n\n<p><strong>[rsvpmaker_calendar]</strong> displays the calendar by itself.</p><p><strong>[rsvpmaker_calendar nav=\"top\"]</strong> displays the calendar with the next / previous month navigation on the top rather than the bottom. By default, navigation is displayed on the bottom.</p><p>Attributes: type=\"type_name\" and add_to_query=\"querystring\" also work with rsvpmaker_calendar.</p><p><strong>[event_listing format=&quot;headlines&quot;]</strong> displays a list of headlines</p><p>[event_listing format=&quot;calendar&quot;] OR [event_listing calendar=&quot;1&quot;] displays the calendar (recommend using [rsvpmaker_calendar] instead)</p><p>Other attributes:</p><ul><li>limit=&quot;posts_per_page&quot; limits the number of posts to display. If not specified, this will be the same as the number of posts displayed on your blog index page. (example: limit=&quot;30&quot;)</li><li>past=&quot;1&quot; will show a listing of past events, most recent first, rather than upcoming events.</li><li>title=&quot;Title Goes Here&quot; Specifies a title to be displayed in bold at the top of the listing.</li></ul>\n\n<h3>To Embed a Single Event</h3>\n\n<p><strong>[rsvpmaker_next]</strong>, displays just the next scheduled event. If the type attribute is set, that becomes the next event of that type. Example: [rsvpmaker_next type=\"webinar\"]. Also, this displays the complete form rather than the RSVP Now! button unless showbutton=\"1\" is set.</p>\n<p><strong>[rsvpmaker_one post_id=\"10\"]</strong> displays a single event post with ID 10. Shows the complete form unless the attribute showbutton=\"1\" is set</p>\n<p><strong>[rsvpmaker_form post_id=\"10\"]</strong> displays just the form associated with an event (ID 10 in this example. Could be useful for embedding the form in a landing page that describes the event but where you do not want to include the full event content.</p>\n\n<p>The rsvpmaker_one and rsvpmaker_form shortcodes also accept one=\"10\" as equivalent to post_id=\"10\"</p>\n\n<?php esc_html_e('<h3>RSVP Form</h3><p>The RSVP from is also now formatted using shortcodes, which you can edit in the RSVP Form section of the Settings screen. You can also vary the form on a per-event basis, which can be handy for capturing an extra field. This is your current default form:</p>','rsvpmaker');?>\n<pre>\n<?php echo(htmlentities($rsvp_options[\"rsvp_form\"])); ?>\n</pre>\n<?php esc_html_e('<p>Explanation:</p><p>[rsvpfield textfield=&quot;myfield&quot;] outputs a text field coded to capture data for &quot;myfield&quot;</p><p>[rsvpfield textfield=&quot;myfield&quot; required=&quot;1&quot;] treats &quot;myfield&quot; as a required field.</p><p>[rsvpfield selectfield=&quot;phone_type&quot; options=&quot;Work Phone,Mobile Phone,Home Phone&quot;] HTML select field with specified options</p><p>[rsvpfield checkbox=&quot;checkboxtest&quot; value=&quot;1&quot;] Checkbox named checkboxtext with a value of 1 when checked.</p><p>[rsvpfield checkbox=&quot;checkboxtest&quot; value=&quot;1&quot; checked=&quot;1&quot;] Checkbox checked by default.</p><p>[rsvpfield radio=&quot;radiotest&quot; options=&quot;one,two,three,four&quot;] When checked, records one of the 4 values for the field &quot;radiotest&quot;</p><p>[rsvpfield radio=&quot;radiotest&quot; options=&quot;one,two,three,four&quot; checked=&quot;two&quot;] choice &quot;two&quot; is checked by default</p><p>[rsvpfield radio=&quot;radiotest&quot; options=&quot;one,two,three,four&quot; checked=&quot;two&quot; sep=&quot; &quot;] separate choices with a space (by default, each appears on a separate line)</p><p>[rsvpprofiletable show_if_empty=&quot;phone&quot;]CONDITIONAL CONTENT GOES HERE[/rsvpprofiletable] This section only shown if the required field is empty; otherwise displays a message that the info is &quot;on file&quot;. Because RSVPMaker is capable of looking up profile data based on an email address, you may want some data to be hidden for privacy reasons.</p><p>[rsvpguests] Outputs the guest blanks.</p>','rsvpmaker'); ?>\n\n<p><?php esc_html_e(\"If you're having trouble with the form fields not being formatted correctly\",'rsvpmaker')?>, <a href=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php&amp;reset_form=1');?>\"><?php esc_html_e('Reset default RSVP Form','rsvpmaker');?></a></p>\n\n<h3>Timed Content</h3>\n\n<p>To make a set a start or end time for the display of a block of content, wrap it in the rsvpmaker_timed shortcode.</p>\n\n<p>Example:</p>\n\n<p>[rsvpmaker_timed start=\"June 1, 2018\" end=\"June 15, 2018\" too_soon=\"Sorry, too soon\" too_late=\"Sorry, too late\"]</p>\n\n<p>Timed Content goes here ...<br />continues until close tag.</p>\n\n<p>[/rsvpmaker_timed]</p>\n\n<p>Include either a start or end attribute, or both. For more precision, use a database style YYYY-MM-DD format for the date. Example: start=\"2018-06-01 13:00\" for the content to start displaying June 1 after 1 pm local time.</p>\n<p>The too_soon and too_late attributes are optional, for the output of messages before and after the specified time time period. Leave them out or leave them blank, and no content will be displayed outside the specified time period. </p>\n\n<h3>YouTube Live webinars</h3>\n<p>When embedding a YouTube Live stream in a page or post of your WordPress site, you can use the shortcode [ylchat] to embed the associated comment stream (which can be used to take questions from the audience). This extracts the video ID from the YouTube link included in the page and constructs the iframe for the chat window, according to Google's specifications. You can add attributes for width and height to override the default values (100% wide x 200 pixels tall). You can add a note to be displayed above the comments field using the note parameter, as in [ylchat note=&quot;During the program, please post questions and comments in the chat box below.&quot;]</p>\n\n<p>RSVPMaker will stop displaying the chat field once the live event is over and the live chat is no longer active. Because this requires RSVPMaker to keep polling YouTube to see if the chat is live, you may wish to remove the shortcode from the page for replay views.</p>\n\n<?php\n\n}\n\nfunction rsvpmaker_admin_menu() {\n\t\nglobal $rsvp_options;\n//do_action('rsvpmaker_admin_menu_top');\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Event Setup\",'rsvpmaker'), __(\"Event Setup\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_setup\", \"rsvpmaker_setup\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"New Template\",'rsvpmaker'), __(\"New Template\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_setup&new_template=1\", \"rsvpmaker_setup\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Event Templates\",'rsvpmaker'), __(\"Event Templates\",'rsvpmaker'), $rsvp_options[\"rsvpmaker_template\"], \"rsvpmaker_template_list\", \"rsvpmaker_template_list\" );\nif(!empty($rsvp_options['additional_editors']))\n\tadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Share Templates\",'rsvpmaker'), __(\"Share Templates\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_share\", \"rsvpmaker_share\" );\nif($rsvp_options[\"show_screen_recurring\"])\n\tadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Recurring Event\",'rsvpmaker'), __(\"Recurring Event\",'rsvpmaker'), $rsvp_options[\"recurring_event\"], \"add_dates\", \"add_dates\" );\nif(!empty($rsvp_options[\"show_screen_multiple\"]))\n\tadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Multiple Events\",\"rsvpmaker\"), __(\"Multiple Events\",'rsvpmaker'), $rsvp_options[\"multiple_events\"], \"multiple\", \"multiple\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Multiple Events (without a template)\",'rsvpmaker'), __(\"Multiple Events (without a template)\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_setup&quick=5\", \"rsvpmaker_setup\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Event Options\",'rsvpmaker'), __(\"Event Options\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_details\", \"rsvpmaker_details\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Confirmation / Reminders\",'rsvpmaker'), __(\"Confirmation / Reminders\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvp_reminders\", \"rsvp_reminders\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"RSVP Report\",'rsvpmaker'), __(\"RSVP Report\",'rsvpmaker'), $rsvp_options[\"menu_security\"], \"rsvp\", \"rsvp_report\" );\nadd_submenu_page( 'edit.php?post_type=rsvpmaker', __( 'RSVPMaker Payments', 'rsvpmaker' ), __( 'RSVPMaker Payments', 'rsvpmaker' ), 'edit_rsvpmakers', 'rsvpmaker_stripe_report', 'rsvpmaker_stripe_report' );\nadd_submenu_page('tools.php',__('Import/Export RSVPMaker'),__('Import/Export RSVPMaker'),'manage_options','rsvpmaker_export_screen','rsvpmaker_export_screen');\nadd_submenu_page('tools.php',__('Cleanup RSVPMaker'),__('Cleanup RSVPMaker'),'manage_options','rsvpmaker_cleanup','rsvpmaker_cleanup');\n\n}\n\nadd_filter('manage_posts_columns', 'rsvpmaker_columns');\nfunction rsvpmaker_columns($defaults) {\n\tif(!empty($_GET[\"post_type\"]) && ($_GET[\"post_type\"] == 'rsvpemail'))\n    \t$defaults['rsvpmaker_cron'] = __('Scheduled','rsvpmaker');\n    return $defaults;\n}\n\nfunction rsvpmaker_custom_column($column_name, $post_id) {\n\tglobal $wpdb, $rsvp_options;\n\t\n    if( $column_name == 'rsvpmaker_end' ) {\n\t\t$event = get_rsvpmaker_event($post_id);\n\t\tif($event)\n\t\techo esc_html($event->enddate);\n\t}\n    elseif( $column_name == 'rsvpmaker_display' ) {\n\t\t$end_type = get_rsvpmaker_meta($post_id,'_firsttime');\n\t\tif(empty($end_type))\n\t\t\techo 'End Time Not Shown';\n\t\telse {\n\t\t\t$options = array('set' => 'Show End Time','allday' => 'All Day/Times Not Shown','multi|2' => '2 Days','multi|3' => '3 Days','multi|4' => '4 Days','multi|5' => '5 Days','multi|6' => '6 Days','multi|7' => '7 Days');\n\t\t\tif(!empty($options[$end_type]))\n\t\t\t\techo esc_html($options[$end_type]);\n\t\t}\n\t\tprintf('<input type=\"hidden\" class=\"end_display_code\" value=\"%s\" />',$end_type);\n\t\t$rsvp_on = get_rsvpmaker_meta($post_id,'_rsvp_on');\n\t\t$convert_timezone = get_rsvpmaker_meta($post_id,'_convert_timezone',true);\n\t\t$add_timezone = get_rsvpmaker_meta($post_id,'_add_timezone',true);\n\t\tif(!empty($rsvp_on))\n\t\t\techo '<br />RSVP On';\n\t\tif(!empty($add_timezone))\n\t\t\techo '<br />Timezone code added to time';\n\t\tif(!empty($convert_timezone))\n\t\t\techo '<br /><em>Show in my timezone</em> button displayed';\n\t}\n    elseif( $column_name == 'event_dates' ) {\n\n$datetime = get_rsvp_date($post_id);\n$template = get_template_sked($post_id);\n$rsvpmaker_special = get_rsvpmaker_meta($post_id,'_rsvpmaker_special',true);\n\n$s = $dateline = '';\n\nif($datetime)\n{\n\t\tprintf('<span class=\"rsvpmaker-date\" id=\"rsvpmaker-date-%d\">%s</span>',esc_attr($post_id),esc_attr($datetime));\n}\nelseif($template)\n\t{\necho __(\"Template\",'rsvpmaker').\": \";\n//backward compatability\nif(is_array($template[\"week\"]))\n\t{\n\t\t$weeks = $template[\"week\"];\n\t\t$dows = $template[\"dayofweek\"];\n\t}\nelse\n\t{\n\t\t$weeks[0] = $template[\"week\"];\n\t\t$dows[0] = (isset($template[\"dayofweek\"])) ? $template[\"dayofweek\"] : 0;\n\t}\n\n$weekarray = Array(__(\"Varies\",'rsvpmaker'),__(\"First\",'rsvpmaker'),__(\"Second\",'rsvpmaker'),__(\"Third\",'rsvpmaker'),__(\"Fourth\",'rsvpmaker'),__(\"Last\",'rsvpmaker'),__(\"Every\",'rsvpmaker'));\n$dayarray = Array(__(\"Sunday\",'rsvpmaker'),__(\"Monday\",'rsvpmaker'),__(\"Tuesday\",'rsvpmaker'),__(\"Wednesday\",'rsvpmaker'),__(\"Thursday\",'rsvpmaker'),__(\"Friday\",'rsvpmaker'),__(\"Saturday\",'rsvpmaker'));\n\nif($weeks[0] == 0)\n\techo __('Schedule varies','rsvpmaker');\nelse\n\t{\n\tforeach($weeks as $week)\n\t\t{\n\t\tif(!empty($s))\n\t\t\t$s .= '/ ';\n\t\t$s .= $weekarray[(int) $week].' ';\n\t\t}\n\tforeach($dows as $dow)\n\t\t$s .= $dayarray[(int) $dow] . ' ';\t\n\techo esc_html($s);\n\t\t\n\t}\n\n\t} // end sked\n\telseif($rsvpmaker_special)\n\t\t{\n\t\t\techo __('Special Page','rsvpmaker').': '.$rsvpmaker_special;\n\t\t}\n\t} // end event dates column\n\telseif($column_name == 'rsvpmaker_cron') {\n\t\techo rsvpmaker_next_scheduled($post_id);\t\n\t}\n}\n\nfunction rsvpmaker_reminders_list($post_id)\n{\nglobal $wpdb;\n$sql = \"SELECT  `meta_key` \nFROM  `$wpdb->postmeta` \nWHERE  `meta_key` LIKE  '_rsvp_reminder_msg%' AND post_id = $post_id\nORDER BY  `meta_key` ASC \";\n$results = $wpdb->get_results($sql);\n$txt = '';\nif($results)\n\t{\n\t\tforeach ($results as $row)\n\t\t\t{\n\t\t\t\t$p = explode('_msg_',$row->meta_key);\n\t\t\t\t$hours[] = (int) $p[1];\n\t\t\t}\n\tsort($hours);\n\tforeach($hours as $hour)\n\t\t{\n\t\t\t$hour = (int) $hour;\n\t\t\tif($hour > 0)\n\t\t\t\t$label = __('Follow up','rsvpmaker').': '.$hour.' '.__('hours after','rsvpmaker');\n\t\t\telse\n\t\t\t\t$label = __('Reminder','rsvpmaker').': '.abs($hour).' '.__('hours before','rsvpmaker');\n\t\t$txt .= sprintf(' | <a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&hours='.$hour.'&page=rsvp_reminders&message_type=reminder&post_id=').$post_id,$label);\n\t\t}\n\t}\nreturn $txt;\n}\n\n//add_action('admin_init','rsvpmaker_create_calendar_page');\n\nfunction rsvpmaker_create_calendar_page() {\nglobal $current_user;\nif(isset($_GET[\"create_calendar_page\"]))\n\t{\n\t$content = (function_exists('register_block_type')) ? '<!-- wp:rsvpmaker/upcoming {\"calendar\":\"1\",\"nav\":\"both\"} /-->' : '[rsvpmaker_upcoming calendar=\"1\" days=\"180\" posts_per_page=\"10\" type=\"\" one=\"0\" hideauthor=\"1\" past=\"0\" no_events=\"No events currently listed\" nav=\"bottom\"]';\n\t$post = array(\n\t  'post_content'   => $content,\n\t  'post_name'      => 'calendar',\n\t  'post_title'     => 'Calendar',\n\t  'post_status'    => 'publish',\n\t  'post_type'      => 'page',\n\t  'post_author'    => $current_user->ID,\n\t  'ping_status'    => 'closed'\n\t);\n\t$id = wp_insert_post($post);\n\twp_redirect(admin_url('post.php?action=edit&post=').$id);\n\texit();\n\t}\n}\n\nfunction rsvpmaker_essentials () {\n\tglobal $rsvp_options, $current_user;\n\t$cleared = get_option('cleared_rsvpmaker_notices');\n\t$cleared = is_array($cleared) ? $cleared : array();\n\t$message = '';\n\tif(isset($_POST[\"create_calendar_page\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$content = (function_exists('register_block_type')) ? '<!-- wp:rsvpmaker/upcoming {\"calendar\":\"1\",\"nav\":\"both\"} /-->' : '[rsvpmaker_upcoming calendar=\"1\" days=\"180\" posts_per_page=\"10\" type=\"\" one=\"0\" hideauthor=\"1\" past=\"0\" no_events=\"No events currently listed\" nav=\"bottom\"]';\n\t\t$post = array(\n\t\t  'post_content'   => $content,\n\t\t  'post_name'      => 'calendar',\n\t\t  'post_title'     => 'Calendar',\n\t\t  'post_status'    => 'publish',\n\t\t  'post_type'      => 'page',\n\t\t  'post_author'    => $current_user->ID,\n\t\t  'ping_status'    => 'closed'\n\t\t);\n\t\t$id = wp_insert_post($post);\n\t\t$link = get_permalink($id);\n\t\t$message .= '<p>'.__('Calendar page created: ','rsvpmaker').sprintf('<a href=\"%s\">%s</a>',$link,$link).'</p>';\n\t}\n\tif(isset($_POST[\"clear_calendar_page_notice\"]) && !isset($_POST[\"create_calendar_page\"])) {\n\t\tupdate_option('noeventpageok',1);\n\t\t$message .= '<p>Calendar notice cleared.</p>';\t\t\n\t}\n\tif(isset($_POST[\"timezone_string\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$tz = sanitize_text_field($_POST[\"timezone_string\"]);\n\t\tupdate_option('timezone_string',$tz);\n\t\t$message .= '<p>Timezone set: '.$tz.'.</p>';\t\t\n\t}\n\tif(isset($_POST[\"privacy_confirmation\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t\t$rsvp_options[\"privacy_confirmation\"] = (int) $_POST[\"privacy_confirmation\"];\n\t\t$message .= '<p>Privacy confirmation option set.</p>';\n\t\t$privacy_page = get_option('wp_page_for_privacy_policy');\n\t\tif($privacy_page)\n\t\t{\n\t\t\t$privacy_url = get_permalink($privacy_page);\n\t\t\t$conf_message = sprintf('I consent to the <a target=\"_blank\" href=\"%s\">privacy policy</a> site of this site for purposes of follow up to this registration.',$privacy_url);\n\t\t\t$rsvp_options['privacy_confirmation_message'] = $conf_message;\n\t\t\t$message .= '<p>Confirmation message (can be edited in RSVPMaker Settings): '.$conf_message.'</p>';\n\t\t}\n\t\telse\n\t\t\t$message .= printf('<p><a href=\"%s\">%s</a></p>',admin_url('options-privacy.php'),__('Set up your privacy page','rsvpmaker'));\n\t\tupdate_option('RSVPMAKER_Options',$rsvp_options);\n\t}\n\t$message .= '<p>'.__('You can set additional options, including default settings for RSVPMaker events, on the','rsvpmaker').' <a href=\"'.admin_url('options-general.php?page=rsvpmaker-admin.php').'\">'.__('RSVPMaker settings page','rsvpmaker').'</a>.</p>';\n\techo '<div class=\"notice notice-success is-dismissible\">'.$message.'</div>';\n}\n\nfunction rsvpmaker_corrupted_dates_check() {\nglobal $wpdb;\n$fixed = $corrupt = '';\n\nif(isset($_POST['fixrsvpyear']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\nforeach($_POST['fixrsvpyear'] as $post_id => $year)\n{\n\t$year = (int) $year;\n\t$month = (int) $_POST['fixrsvpmonth'][$post_id];\n\t$day = (int) $_POST['fixrsvpday'][$post_id];\n\t$hour = (int) $_POST['fixrsvphour'][$post_id];\n\t$minutes = (int) $_POST['fixrsvpminutes'][$post_id];\n\tif($month < 10)\n\t\t$month = '0'.$month;\n\tif($day < 10)\n\t\t$day = '0'.$day;\n\tif($hour < 10)\n\t\t$hour = '0'.$hour;\n\tif($minutes < 10)\n\t\t$minutes = '0'.$minutes;\n\t$datestring = $year.'-'.$month.'-'.$day.' '.$hour.':'.$minutes.':00';\n\t$fixed .= '<div>Fixed date: '.$datestring.' for '.get_the_title($post_id).'</div>';\n\tupdate_post_meta($post_id,'_rsvp_dates',$datestring);\n}\n\necho '<div class=\"notice notice-info\">'.$fixed.'</div>';\n\n}\n\n//first try to clean up errors automatically \n\t$manualcheck = false;\n\t$sql = \"SELECT ID, post_title, meta_value\n\tFROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id\n\twhere meta_key='_rsvp_dates' AND post_status='publish' AND meta_value NOT REGEXP '[0-9]{4}-[0-9]{2}-[0-9]{2} {1,2}[0-9]{2}:[0-9]{2}:[0-9]{2}'\n\tAND meta_value > CURDATE()\n\tORDER BY post_title, meta_value\";\n\t$results1 = $wpdb->get_results($sql);\n\tif($results1)\n\t{\n\t\tforeach($results1 as $row) {\n\t\t$dateparts = preg_split('/[-: ]/',$row->meta_value);\n\t\tif(empty($dateparts[3]) || empty($dateparts[4]))\n\t\t\t{\n\t\t\t\t//if not a complete date\n\t\t\t\t$manualcheck = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t$year = $dateparts[0];\n\t\t$month = str_pad($dateparts[1],2,'0',STR_PAD_LEFT);\n\t\t$day = str_pad($dateparts[2],2,'0',STR_PAD_LEFT);\n\t\t$hour = str_pad($dateparts[3],2,'0',STR_PAD_LEFT);\n\t\t$minutes = empty($dateparts[4]) ? '00' : str_pad($dateparts[4],2,'0',STR_PAD_LEFT);\n\t\t$newdate = sprintf('%s-%s-%s %s:%s:00',$year,$month,$day,$hour,$minutes);\n\t\tupdate_post_meta($row->ID,'_rsvp_dates',$newdate);\n\t\t}\n\t}\t\nif($manualcheck) {\n\t$sql = \"SELECT ID, post_title, meta_value\n\tFROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id\n\twhere meta_key='_rsvp_dates' AND post_status='publish' AND meta_value NOT REGEXP '[0-9]{4}-[0-9]{2}-[0-9]{2} {1,2}[0-9]{2}:[0-9]{2}:[0-9]{2}' \n\tAND meta_value > CURDATE()\n\tORDER BY post_title, meta_value\";\n\t$results = $wpdb->get_results($sql);\n\tif($results)\n\t{\n\t\tforeach($results as $row) {\n\t\t$dateparts = preg_split('/[-: ]/',$row->meta_value);\n\t\t$corrupt .= sprintf('<div><label style=\"display: inline-block; width: 200px;\">%s</label> <input type=\"text\" name=\"fixrsvpyear[%d]\" value=\"%s\" size=\"4\" >-<input type=\"text\" name=\"fixrsvpmonth[%d]\" value=\"%s\" size=\"2\" >-<input type=\"text\" name=\"fixrsvpday[%d]\" value=\"%s\" size=\"2\" > <input type=\"text\" name=\"fixrsvphour[%d]\" value=\"%s\"  size=\"2\" >:<input type=\"text\" name=\"fixrsvpminutes[%d]\" value=\"%s\" size=\"2\" >:00 %s</div>',$row->post_title, $row->ID, $dateparts[0], $row->ID,  (empty($dateparts[1])) ? '' : $dateparts[1], $row->ID,  (empty($dateparts[2])) ? '' : $dateparts[2], $row->ID,  (empty($dateparts[3])) ? '' : $dateparts[3], $row->ID, (empty($dateparts[4])) ? '' : $dateparts[4], $row->meta_value);\n\t\t}\n\tprintf('<div class=\"notice notice-error\"><h3>%s</h3><p>%s</p><form method=\"post\" action=\"%s\">%s<p><button>Repair</button></p>%s</form></div>',__('Date Variables Corrupted','rsvpmaker'),__('A correct date would be in the format YEAR-MONTH-DAY HOUR:MINUTES:SECONDS or 2030-01-01 19:30:00 for January 1, 2030 at 7:30 pm','rsvpmaker'),admin_url(),$corrupt,rsvpmaker_nonce('return') );\n\t}\t\n}\n\n}\n\nfunction rsvpmaker_admin_notice() {\n\nif(isset($_GET['action']) && ($_GET['action'] == 'edit'))\n\treturn; //don't clutter edit page with admin notices. Gutenberg hides them anyway.\nif(isset($_GET['post_type']) && ($_GET['post_type'] == 'rsvpmaker') && !isset($_GET['page']))\n\treturn; //don't clutter post listing page with admin notices\nif(isset($_POST[\"rsvpmaker_essentials\"]))\n\trsvpmaker_essentials();\n\nif(isset($_GET['payment_key_test'])) {\n\techo '<div class=\"notice notice-info\"><p><div>Checking payment API connections</div>';\n\t$paypal_rest_keys = get_option('rsvpmaker_paypal_rest_keys');\n\tif(!empty($paypal_rest_keys['client_secret']) && !empty($paypal_rest_keys['client_id']))\n\t\techo '<div>PayPal production key: '.rsvpmaker_paypal_test_connection().'</div>';\n\tif(!empty($paypal_rest_keys['sandbox_client_secret']) && !empty($paypal_rest_keys['sandbox_client_id']) )\n\t\techo '<div>PayPal sandbox key: '.rsvpmaker_paypal_test_connection('sandbox').'</div>';\n\t$stripe_keys = get_option('rsvpmaker_stripe_keys');\n\tif(!empty($stripe_keys['pk']) && !empty($stripe_keys['sk']))\n\t\techo '<div>Stripe production key :'.rsvpmaker_stripe_validate($stripe_keys['pk'],$stripe_keys['sk']).'</div>';\n\tif(!empty($stripe_keys['sandbox_sk']) && !empty($stripe_keys['sandbox_pk']) )\n\t\techo '<div>Stripe sandbox key: '.rsvpmaker_stripe_validate($stripe_keys['sandbox_pk'],$stripe_keys['sandbox_sk']).'</div>';\n\t$chosen_gateway = get_rsvpmaker_payment_gateway ();\n\tif($chosen_gateway)\n\t\tprintf('<p>Payment gateway defaults to: %s</p>',$chosen_gateway);\n\techo '</p></div>';\n}\n\nglobal $wpdb;\nglobal $rsvp_options;\nglobal $current_user;\nglobal $post;\n$timezone_string = get_option('timezone_string');\n$cleared = get_option('cleared_rsvpmaker_notices');\n$cleared = is_array($cleared) ? $cleared : array();\n$basic_options = '';\n\nrsvpmaker_corrupted_dates_check();\n\nif( empty($rsvp_options[\"eventpage\"]) && !get_option('noeventpageok') && !is_plugin_active('rsvpmaker-for-toastmasters/rsvpmaker-for-toastmasters.php') )\n\t{\n\t$sql = \"SELECT ID from $wpdb->posts WHERE post_type='page' AND post_status='publish' AND post_content LIKE '%rsvpmaker_upcoming%' \";\n\t$front = get_option('page_on_front');\n\tif($front)\n\t\t$sql .= \" AND ID != $front \";\n\tif($id =$wpdb->get_var($sql))\n\t\t{\n\t\t$rsvp_options[\"eventpage\"] = get_permalink($id);\n\t\tupdate_option('RSVPMAKER_Options',$rsvp_options);\n\t\t}\n\telse {\n\t\t$message = __('RSVPMaker can add a calendar or events listing page to your site automatically, which you can then add to your website menu.','rsvpmaker');\n\t\t$message2 = __('Create page','rsvpmaker');\n\t\t$message3 = __('Turn off this warning','rsvpmaker');\n\t\t$basic_options = sprintf('<p>%s</p>\n\t\t<p><input type=\"checkbox\" id=\"create_calendar\" name=\"create_calendar_page\" value=\"1\" checked=\"checked\"> %s</p>\n\t\t<p id=\"create_calendar_clear\"><input type=\"checkbox\" name=\"clear_calendar_page_notice\" value=\"1\" checked=\"checked\"> %s<p>',$message,$message2,$message3);\n\t\t$basic_options .= \"<script>\n\t\tjQuery(document).ready(function( $ ) {\n\t\t$('#create_calendar_clear').hide();\n\t\t$('#create_calendar').click(function(event) {\n\t\t\t$('#create_calendar_clear').show();\n\t\t});\t\t\n\t});\n\t\t</script>\";\n\t\t}\t\n}\n\nif((empty($timezone_string) || isset($_GET['timezone'])) && !isset($_POST['timezone_string']) ) {\n$choices = wp_timezone_choice('');\n$choices = str_replace('selected=\"selected\"','',$choices);\n$message = sprintf('<p>%s %s. %s</p>',__('RSVPMaker needs you to','rsvpmaker'),__('set the timezone for your website','rsvpmaker'), __('Confirm if the choice below is correct or make another choice by region/city.','rsvpmaker') );\n$basic_options .= sprintf('<p>%s</p>\n<p>\n<select id=\"timezone_string\" name=\"timezone_string\">\n<script>'.\"\nvar tz = jstz.determine();\nvar tzstring = tz.name();\ndocument.write('<option selected=\\\"selected\\\" value=\\\"' + tzstring + '\\\">' + tzstring + '</option>');\n</script>\n%s\n</select>\n\",$message,$choices);\n}\n\nif(!isset($rsvp_options[\"privacy_confirmation\"]) || isset($_GET['test']) )\n\t{\n\t\t$privacy_page = rsvpmaker_check_privacy_page();\n\t\tif($privacy_page)\n\t\t\t{\n\t\t\t\t$message = __('Please decide whether your RSVPMaker forms should include a privacy policy confirmation checkbox. This may be important if some of your website visitors may be covered by the European Union\\'s GDPR privacy regulation','rsvpmaker').' <a href=\"'.admin_url('options-general.php?page=rsvpmaker-admin.php#privacy_consent').'\">('.__('more details','rsvpmaker').')</a>';\n\t\t\t\t$basic_options .= sprintf('<p>%s</p><input type=\"radio\" name=\"privacy_confirmation\" value=\"1\" checked=\"checked\" /> %s <input type=\"radio\" name=\"privacy_confirmation\" value=\"no\" /> %s - %s</p>',$message,__('Yes','rsvpmaker'),__('No','rsvpmaker'),__('Add checkbox?','rsvpmaker'));\n\t\t\t}\n\t\telse\n\t\t\t$basic_options .= '<p>'.__('You may want for your RSVPMaker forms to include a privacy policy confirmation checkbox, particularly if any site visitors are covered by the European Union\\'s GDPR or similar privacy regulations.','rsvpmaker').' '.__('First, you must register a privacy page with WordPress','rsvpmaker').': <a href=\"'.admin_url('options-privacy.php').'\">'.admin_url('options-privacy.php').'</a></p>';\n\t}\n\nif(!empty($basic_options)) {\n\t$message = sprintf('<h3>%s</h3><form method=\"post\" action=\"%s\">\n\t%s\n\t<p><input type=\"submit\" name=\"submit\" id=\"submit\" class=\"button button-primary\" value=\"%s\"></p>\n\t<input type=\"hidden\" name=\"rsvpmaker_essentials\" value=\"1\">\n\t%s</form>',__('RSVPMaker Essential Settings','rsvpmaker'),site_url(sanitize_text_field($_SERVER['REQUEST_URI'])),$basic_options,__('Save Changes','rsvpmaker'),rsvpmaker_nonce('return'));\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'rsvp_timezone', $cleared, $type='warning');\n}\n\n$ver = phpversion();\nif (version_compare($ver, '7.1', '<') && (!isset($_GET['page']) || ($_GET['page'] != 'rsvpmaker_email_template') ) ){\n\t$message = sprintf('<p>The Emogrifier CSS inliner library, which is included to improve formatting of HTML email, relies on PHP features introduced in version 7.1 -- and is disabled because your site is on %s</p>',$ver);\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'Emogrifier', $cleared, $type='warning');\n}\n\nif(isset($_GET['update_messages']) && isset($_GET['t']))\n{\necho get_post_meta((int) $_GET['t'],'update_messages',true);\ndelete_post_meta((int) $_GET['t'],'update_messages');\n}\n\nif(isset($post->post_type) && ($post->post_type == 'rsvpmaker') ) {\nif($landing = get_post_meta($post->ID,'_webinar_landing_page_id',true))\n\t{\n\t$message = '<div class=\"notice notice-info\"><p>'.__('Edit the','rsvpmaker').' <a href=\"'.admin_url('post.php?action=edit&post='.$landing).'\">'.__(\"webinar landing page\",'rsvpmaker').'</a> '.__('associated with this event').'.</p>';\n\t$message .= '<p>';\n\t$message .= __('Related messages:','rsvpmaker');\n\t$message .= sprintf(' <a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=').$post->ID,__('Confirmation','rsvpmaker'));\n\t$message .= rsvpmaker_reminders_list($post->ID);\n\t$message .=  '</p></div>';\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'Landing page', $cleared, $type='notice');\n\t}\nif($event = get_post_meta($post->ID,'_webinar_event_id',true))\n\t{\n\t$message = '<div class=\"notice notice-info\"><p>'.__('Edit the','rsvpmaker').' <a href=\"'.admin_url('post.php?action=edit&post='.$event).'\">'.__(\"webinar event post\",'rsvpmaker').'</a> '.__('associated with this landing page').'.</p>';\n\t$message .=  '<p>';\n\t$message .=  __('Related messages:','rsvpmaker');\n\t$message .=  sprintf(' <a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=').$event,__('Confirmation','rsvpmaker'));\t\n\t$message .=  rsvpmaker_reminders_list($event);\n\t$message .=  '</p></div>';\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'Webinar event', $cleared, $type='notice');\n\t}\n}\n\t\n\tif(isset($_GET[\"smtptest\"]))\n\t\t{\n\t\t$mail[\"to\"] = $rsvp_options[\"rsvp_to\"];\n\t$mail[\"from\"] = \"david@carrcommunications.com\";\n\t$mail[\"fromname\"] = \"RSVPMaker\";\n\t$mail[\"subject\"] = __(\"Testing SMTP email notification\",'rsvpmaker');\n\t$mail[\"html\"] = '<p>'. __('Test from RSVPMaker.','rsvpmaker').'</p>';\n\t$result = rsvpmailer($mail);\n\techo '<div class=\"updated\" style=\"background-color:#fee;\">'.\"<strong>\".__('Sending test email','rsvpmaker').' '.$result .'</strong> <a href=\"'.admin_url('index.php?smtptest=1&debug=1').'\">(debug)</a></div>';\n\t\t}\n\n\tif(!empty($_GET[\"rsvp_form_reset\"]))\n\t\t{\n\t\t$target = (int) $_GET[\"rsvp_form_reset\"];\n\t\tupgrade_rsvpform (true, $target);\n\t\techo '<div class=\"updated\" ><p>'.\"<strong>\".__('RSVP Form Updated (default and future events)','rsvpmaker').'</strong></p></div>';\n\t\t}\n\tif(!empty($notice))\n\t{\n\t\tif(isset($_GET['show_rsvpmaker_notices']))\n\t\t\techo implode(\"\\n\",$notice);\n\t\telse {\n\t\t\t$size = sizeof($notice);\n\t\t\t$message = __('RSVPMaker notices for administrator','rsvpmaker').': '.$size;\n\t\t\t$message .= sprintf(' - <a href=\"%s\">%s</a>',admin_url('?show_rsvpmaker_notices=1'),__('Display','rsvpmaker'));\n\t\t\techo rsvpmaker_admin_notice_format($message, 'RSVPMaker', $cleared, $type='info');\t\n\t\t}\n\t}\n?>\n<script>\njQuery(document).ready(function( $ ) {\n$( document ).on( 'click', '.rsvpmaker-notice .notice-dismiss', function () {\n\t// Read the \"data-notice\" information to track which notice\n\t// is being dismissed and send it via AJAX\n\tvar type = $( this ).closest( '.rsvpmaker-notice' ).data( 'notice' );\n\t$.ajax( rsvpmaker_rest.ajaxurl,\n\t  {\n\t\ttype: 'POST',\n\t\tdata: {\n\t\t  action: 'rsvpmaker_dismissed_notice_handler',\n\t\t  type: type,\n\t\t}\n\t  } );\n  } );\n});\n</script>\n<?php\n\n}\n\nfunction set_rsvpmaker_order_in_admin( $wp_query ) {\nif(!is_admin() || empty($_GET['post_type']) || ($_GET['post_type'] != 'rsvpmaker') ) // don't mess with front end or other post types\n\treturn $wp_query;\n\nglobal $current_user;\n\nif(isset($_GET[\"rsvpsort\"])) {\n\t$sort = sanitize_text_field($_GET[\"rsvpsort\"]);\nupdate_user_meta($current_user->ID,'rsvpsort',$sort);\n}\nelseif(isset($_GET['all_posts']) || isset($_GET['post_status'])) {\n\t$sort = 'all';\n\tupdate_user_meta($current_user->ID,'rsvpsort',$sort);\n}\nelse\n\t$sort = get_user_meta($current_user->ID,'rsvpsort',true);\nif(empty($sort))\n\t$sort = 'future';\nif(isset($_GET['s']))\n\treturn;\nif($sort == 'all')\n\treturn;\n\nif(($sort == \"past\") || ($sort == \"future\")) {\n\tadd_filter('posts_join', 'rsvpmaker_join',99 );\n\tadd_filter('posts_groupby', 'rsvpmaker_groupby',99 );\n\t}\nif($sort == 'past')\n\t{\n\tadd_filter('posts_where', 'rsvpmaker_where_past',99 );\n\tadd_filter('posts_orderby', 'rsvpmaker_orderby_past',99 );\n\t}\nelseif($sort == 'templates')\n\t{\n\tadd_filter('posts_join', 'rsvpmaker_join_template',99 );\n\tadd_filter('posts_where', function($content) {return \" AND post_type='rsvpmaker'\";}, 9999 );\n\tadd_filter('posts_orderby', function($content) {return ' ID DESC ';}, 99  );\n\t}\nelseif($sort == 'special')\n\t{\n\tadd_filter('posts_join', 'rsvpmaker_join_special',99 );\n\tadd_filter('posts_where', function($content) {return '';}, 99 );\n\tadd_filter('posts_orderby', function($content) {return ' ID DESC ';}, 99  );\n\t}\nelseif($sort == 'all')\n\t{\n\tadd_filter('posts_where', function($content) {return \" AND post_type='rsvpmaker' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'future' OR wp_posts.post_status = 'draft' OR wp_posts.post_status = 'pending' OR wp_posts.post_status = 'private')\";}, 99 );\n\tadd_filter('posts_orderby', function($content) {return ' ID DESC ';}, 99  );\n\t}\nelse\n\t{\n\tadd_filter('posts_where', 'rsvpmaker_where',99 );\n\tadd_filter('posts_orderby', 'rsvpmaker_orderby',99 );\n\t}\n}\nadd_filter('pre_get_posts', 'set_rsvpmaker_order_in_admin',1 );\n\nfunction rsvpmaker_admin_months_dropdown($bool, $post_type) {\nreturn ($post_type == 'rsvpmaker');\n}\n\nadd_filter( 'disable_months_dropdown', 'rsvpmaker_admin_months_dropdown',10,2 );\n\nfunction rsvpmaker_join_template($join) {\n  global $wpdb;\n    return $join.\" JOIN \".$wpdb->postmeta.\" rsvpdates ON rsvpdates.post_id = $wpdb->posts.ID AND (BINARY rsvpdates.meta_key REGEXP '_sked_[A-Z].+')\"; //  AND rsvpdates.meta_value\n}\nfunction rsvpmaker_join_special($join) {\n  global $wpdb;\nreturn $join.\" JOIN \".$wpdb->postmeta.\" rsvpdates ON rsvpdates.post_id = $wpdb->posts.ID AND rsvpdates.meta_key='_rsvpmaker_special'\";\n}\n\nfunction rsvpmaker_sort_message() {\n\tif((basename($_SERVER['SCRIPT_NAME']) == 'edit.php') && isset($_GET[\"post_type\"]) &&  ($_GET[\"post_type\"]==\"rsvpmaker\") && !isset($_GET[\"page\"]))\n\t{\n\tglobal $current_user;\n\t$sort = get_user_meta($current_user->ID,'rsvpsort',true);\n\tif(empty($sort))\n\t\t$sort = 'future';\n\t\t$current_sort = $o = $opt = '';\n\t\t$sortoptions = array('future' => __('Future Events','rsvpmaker'),'past' => __('Past Events','rsvpmaker'),'all' => __('All RSVPMaker Posts','rsvpamker'),'templates' => __('Event Templates','rsvpmaker'),'special' => __('Special','rsvpmaker'));\n\t\tforeach($sortoptions as $key => $option)\n\t\t{\n\t\t\tif(isset($_GET['s']))\n\t\t\t{\n\t\t\t\t$current_sort = __('Showing','rsvpmaker').': '.__('Search Results','rsvpmaker');\n\t\t\t}\n\t\t\tif($key == $sort)\n\t\t\t{\n\t\t\t\t$opt .= sprintf('<option value=\"%s\" selected=\"selected\">%s</option>',$key,$option);\n\t\t\t\t$current_sort = __('Showing','rsvpmaker').': '.$sortoptions[$key];\n\t\t\t}\n\t\t\telse\n\t\t\t{\t\n\t\t\t\t$opt .= sprintf('<option value=\"%s\">%s</option>',$key,$option);\n\t\t\t\t$o .= '<a class=\"add-new-h2\" href=\"'.admin_url('edit.php?post_type=rsvpmaker&rsvpsort='.$key).'\">'.$option.'</a> ';\n\t\t\t}\n\t\t}\n\t\t$opt = '<div class=\"alignleft actions rsvpsortwrap\" style=\"margin-top: -10px;\" ><select name=\"rsvpsort\" class=\"rsvpsort\">'.$opt.'</select> </div>';\n\t\techo '<div style=\"padding: 10px; \">'.$opt;//.$current_sort.$o;\n\t\techo '</div>';\n\t}\n}\n\nfunction rsvpmaker_projected_datestring($dow,$week,$template,$t = 0) {\n\tif(!$t) \n\t\t$t = time();\n\t$weektext = rsvpmaker_week($week);\n\tif($week == '0')\n\t\treturn rsvpmaker_date('Y-m',$t).'-01 '.$template['hour'].':'.$template['minutes'].':00';\n\telseif($week == '6')\n\t\treturn rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.rsvpmaker_date('Y-m',$t).' '.$template['hour'].':'.$template['minutes'].':00';\n\telse\n\treturn $weektext.' '.rsvpmaker_day($dow,'rsvpmaker_strtotime').' of '.rsvpmaker_date('F',$t).' '.rsvpmaker_date('Y',$t).' '.$template['hour'].':'.$template['minutes'].':00';\n}\n\nfunction rsvpmaker_get_projected($template) {\n\nif(!isset($template[\"week\"]))\n\treturn;\n\n//backward compatability\nif(is_array($template[\"week\"]))\n\t{\n\t\t$weeks = $template[\"week\"];\n\t\t$dows = (empty($template[\"dayofweek\"])) ? 0 : $template[\"dayofweek\"];\n\t}\nelse\n\t{\n\t\t$weeks[0] = $template[\"week\"];\n\t\t$dows[0] = isset($template[\"dayofweek\"]) ? $template[\"dayofweek\"] : 0;\n\t}\n\nif(empty($template['hour']))\n\t$template['hour'] = '00';\nif(empty($template['minutes']))\n\t$template['minutes'] = '00';\n\n$th = (int) $template['hour'];\n\n$cy = date(\"Y\");\n$cm = date(\"m\");\n\nif(!empty(trim($template[\"stop\"])))\n\t{\n\t$stopdate = rsvpmaker_strtotime($template[\"stop\"].' 23:59:59');\n\t}\n\nif(empty($dows))\n\t$dows = array(0 => 0);\nforeach($weeks as $week)\nforeach($dows as $dow) {\n$i = 0;\n$startdaytxt = rsvpmaker_projected_datestring($dow,$week,$template);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n$ts = rsvpmaker_strtotime($startdaytxt);\nif(!$ts) {\n\techo 'Error parsing '.$startdaytxt;\n\treturn;\n}\nif($week == 6)\n\t{\n\t$i = 0;\n\tif(empty($stopdate))\n\t\t$stopdate = rsvpmaker_strtotime('+6 months');\n\telse\n\t\techo 'stopdate set';\n\tif(isset($_GET[\"start\"]))\n\t\t$ts = rsvpmaker_strtotime($_GET[\"start\"]);\n\twhile($ts < $stopdate)\n\t\t{\n\t\t$projected[$ts] = $ts; // add numeric value for 1 week\n\t\t$ts = $ts + WEEK_IN_SECONDS;\n\t\t$i++;\n\t\tif($i > 52)\n\t\t\tbreak;\n\t\t}\n\t}\nelse {\n\tif(isset($_GET[\"start\"]))\n\t\t$ts = rsvpmaker_strtotime($_GET[\"start\"]);\n\tif(empty($stopdate))\n\t\t$stopdate = rsvpmaker_strtotime('+12 months');\n\tif($week == 0) {\n\t\t$i = 0;\n\t\t$firstdaytxt = rsvpmaker_projected_datestring($dow,0,$template);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n\t\t$tcount = rsvpmaker_strtotime($firstdaytxt);\n\t\tfor($tcount; $tcount < $stopdate; $tcount+= MONTH_IN_SECONDS )\n\t\t{\n\t\t$firstdaytxt = rsvpmaker_projected_datestring($dow,0,$template,$tcount);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n\t\t$ts = rsvpmaker_strtotime($firstdaytxt);\n\t\t$projected[$ts] = $ts;\n\t\t$i++;\n\t\tif($i > 10)\n\t\t\tbreak;\n\t\t}\t\n\t}\n\telse\n\t\t{\n\t\t\t$i = 0;\n\t\t\t$ts = time();\n\t\t\t$startmonth = rsvpmaker_date('F Y',$ts);\n\t\t\tfor($i = 0; $i < 50; $i++) //($ts; $ts < $stopdate; $ts+= MONTH_IN_SECONDS )\n\t\t\t{\n\t\t\t\t$ts = strtotime($startmonth.\" + $i month\");\n\t\t\t\t$datetext = rsvpmaker_projected_datestring($dow,$week,$template,$ts);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n\n\t\t\t\t$ts = rsvpmaker_strtotime($datetext);\n\t\t\t\tif(!$ts)\n\t\t\t\t{\n\t\t\t\t\techo 'Error parsing date string '.$datetext;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(isset($stopdate) && $ts > $stopdate) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$projected[$ts] = $ts;\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n//order by timestamp\nif(empty($projected))\n\treturn array();\n//timezone correction\nforeach($projected as $index => $value) {\n\t$checkhour = (int) rsvpmaker_date('G',$value);\n\t$diff =  $th - $checkhour; \n\tif($diff) {\n\t\t$value+= ($diff * HOUR_IN_SECONDS);\n\t\tunset($projected[$index]);\n\t\t$projected[$value] = $value;\n\t}\n}\nksort($projected);\n\nreturn $projected;\n}\n\n// RSVPMaker Replay Follow up\n\nfunction rsvpmaker_replay_cron($post_id, $rsvp_id, $hours) {\n//Convert start time from local time to GMT since WP Cron sends based on GMT\n$start_time_gmt = time();\n$time_difference = $hours * 60 * 60; \n$reminder_time = $start_time_gmt + $time_difference;\n\nwp_clear_scheduled_hook( 'rsvpmaker_replay_email', array( $post_id, $rsvp_id, $hours ) );\n\n//Schedule the reminder\nwp_schedule_single_event( $reminder_time, 'rsvpmaker_replay_email', array( $post_id, $rsvp_id, $hours ) );\n}\n\nfunction rsvpmaker_replay_email ( $post_id, $rsvp_id, $hours ) {\nglobal $wpdb;\nglobal $rsvp_options;\n$wpdb->show_errors();\n\t$confirm_slug = '_rsvp_reminder_msg_'.$hours;\n\t$confirm = get_post_meta($post_id, $confirm_slug, true);\n\t$subject = get_post_meta($post_id, '_rsvp_reminder_subject_'.$hours, true);\n\n\tif(!empty($confirm))\n\t{\n\t$confirm = wpautop($confirm);\t\t\t\t\n\t}\n\n\t$rsvpto = get_post_meta($post_id,'_rsvp_to',true);\t\t\t\n\t\n$sql = \"SELECT email FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=$post_id AND id=\".$rsvp_id;\n\t$notify = $wpdb->get_var($sql);\t\t\t\t\t\t\t\n\t$mail[\"subject\"] = $subject;\n\t$mail[\"html\"] = $confirm;\n\t$mail[\"to\"] = $notify;\n\t$mail[\"from\"] = $rsvp_to;\n\t$mail[\"fromname\"] = get_bloginfo('name');\n\trsvpmaker_tx_email(get_post($post_id), $mail);\n}\n\n// RSVPMaker Reminders\n\nfunction rsvpmaker_reminder_cron($hours, $start_time, $post_id) {\n$hours = (int) $hours;\n$post_id = (int) $post_id;\n//Convert start time from local time to GMT since WP Cron sends based on GMT\nif(is_int($start_time))\n\t$start_time_gmt = $start_time;\nelse\n\t$start_time_gmt = rsvpmaker_strtotime( get_gmt_from_date( $start_time ) . ' GMT' );\n\n$time_difference = $hours * 60 * 60; \n$reminder_time = $start_time_gmt + $time_difference;\n\n//Remove existing cron event for this post if one exists\n//We pass $post_id because cron event arguments are required to remove the scheduled event\nwp_clear_scheduled_hook( 'rsvpmaker_send_reminder_email', array( $post_id, $hours ) );\n\n//Schedule the reminder\nwp_schedule_single_event( $reminder_time, 'rsvpmaker_send_reminder_email', array( $post_id, $hours ) );\n}\n\nfunction rsvpmaker_send_reminder_email ( $post_id, $hours ) {\nglobal $wpdb, $post;\nglobal $rsvp_options;\n$marker = $post_id.':'.$hours;\n$check = get_option('rsvpmaker_last_reminder');\n\nif($check == $marker)\n\treturn; //this already ran\n$success = update_option('rsvpmaker_last_reminder',$marker);\nif(!$success)\n\treturn;\n$wpdb->show_errors();\n\t$post = get_post($post_id);\n\t$reminder = rsvp_get_reminder($post_id,$hours);\n\t$confirm = $reminder->post_content;\n\t$subject = $reminder->post_title;\n\t$include_event = get_post_meta($post_id, '_rsvp_confirmation_include_event', true);\n\t$rsvpto = get_post_meta($post_id,'_rsvp_to',true);\n\t//handle codes like [datetime] and [rsvpdate]\n\t$subject = do_shortcode($subject);\n\tif(!empty($confirm))\n\t{\n\t$confirm = wpautop($confirm);\t\t\t\t\n\t}\n\n\tif($hours < 0)\n\t{\t\n\t$confirm .= \"<p>\".__(\"This is an automated reminder that we have you on the RSVP list for the event shown below. If your plans have changed, you can update your response by clicking on the RSVP button again.\",'rsvpmaker').\"</p>\";\n\t\tif($include_event)\n\t\t{\n\t\t\t$event_content = event_to_embed($post_id);\n\t\t}\n\t\telse\n\t\t\t$event_content = get_rsvp_link($post_id);\n\t}\n\t\t\t\n\t\t\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=$post_id AND yesno=1\";\n\t\t\tif(get_post_meta($post_id,'paid_only_confirmation',true))\n\t\t\t\t$sql .= \" AND amountpaid\";\n\n\t\t\t$rsvps = $wpdb->get_results($sql,ARRAY_A);\n\t\t\tif($rsvps)\n\t\t\tforeach($rsvps as $row)\n\t\t\t\t{\n\t\t\t\t$notify = $row[\"email\"];\n\t\t\t\t$notification = $confirm;\n\t\t\t\t$notification .= '<h3>'.$row[\"first\"].\" \".$row[\"last\"].\" \".$row[\"email\"];\n\t\t\t\tif(!empty($row[\"guestof\"]))\n\t\t\t\t\t$notification .=  \" (\". __('guest of','rsvpmaker').\" \".$row[\"guestof\"].\")\";\n\t\t\t\t$notification .=  \"</h3>\\n\";\n\t\t\t\t$notification .=   \"<p>\";\n\t\t\t\tif(!empty($row[\"details\"]))\n\t\t\t\t\t{\n\t\t\t\t\t$details = unserialize($row[\"details\"]);\n\t\t\t\t\tforeach($details as $name => $value)\n\t\t\t\t\t\tif($value) {\n\t\t\t\t\t\t\t$notification .=  \"$name: $value<br />\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tif(!empty($row[\"note\"]))\n\t\t\t\t\t$notification .= \"note: \" . nl2br($row[\"note\"]).\"<br />\";\n\t\t\t\t$t = rsvpmaker_strtotime($row[\"timestamp\"]);\n\t\t\t\t$notification .= 'posted: '.rsvpmaker_date($rsvp_options[\"short_date\"],$t);\n\t\t\t\t$notification .=  \"</p>\";\n\t\t\t\t$notification .=  \"<h3>Event Details</h3>\\n\".str_replace('#rsvpnow\">','#rsvpnow\">'.__('Update','rsvptoast').' ',str_replace('*|EMAIL|*',$notify, $event_content));\n\t\t\t\t\n\t\t\t\techo \"Notification for $notify<br />$notification\";\n\n\t\t\t//if this is a follow up, we don't need all the RSVP data\n\t\t\tif($hours > 0)\n\t\t\t\t$notification = $confirm;\n\n\t\t\t\t$mail[\"subject\"] = $subject;\n\t\t\t\t$mail[\"html\"] = $notification;\n\t\t\t\t$mail[\"to\"] = $notify;\n\t\t\t\t$mail[\"from\"] = $rsvpto;\n\t\t\t\t$mail[\"fromname\"] = get_bloginfo('name');\n\n\t\t\t\trsvpmaker_tx_email(get_post($post_id), $mail);\n\t\t\t\t}\n}\n\nfunction rsvp_reminder_options($hours = -2) {\n$ho = array(-1,-2,-3,-4,-5,-6,-7,-8,-12,-16,-20,-24,-48,-72,1,2,3,4,5,6,7,8,12,16,20,24,28,32,36,40,44,48,72);\n$o = \"\";\nforeach($ho as $h)\n\t{\n\t$s = ($h == $hours) ? ' selected=\"selected\" ' : '';\n\tif($h < 0)\n\t\t$o .= sprintf('<option value=\"%s\" %s>%s ',$h,$s, abs($h) ).__('hours before','rsvpmaker').'</option>';\n\telse\n\t\t$o .= sprintf('<option value=\"%s\" %s>%s ',$h,$s,$h).__('hours after event starts','rsvpmaker').'</option>';\n\t}\n\treturn $o;\n}\n\nfunction rsvpmaker_youtube_live($post_id, $ylive, $show = false) {\nglobal $rsvp_options;\nglobal $current_user;\n\t\t\n\t\t$event = get_post($post_id);\n\t\t$start_time = $date = get_rsvp_date($post_id);\n\t\t$date = utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options['time_format'],rsvpmaker_strtotime($date)));\n\t\t$landing[\"post_type\"] = 'rsvpmaker';\n\t\t$landing[\"post_title\"] = __('Live','rsvpmaker').': '.$event->post_title;\n\t\t$landing[\"post_content\"] = __('The event starts','rsvpmaker').' '.$date.\"\\n\\n\".$ylive;\n\t\tif(!empty($ylive))\n\t\t\t$landing[\"post_content\"] .= \"\\n\\n[ylchat note=\\\"During the program, please post questions and comments in the chat box below.\\\"]\";\n\t\t$landing[\"post_author\"] = $current_user->ID;\n\t\t$landing[\"post_status\"] = 'publish';\n\t\t$landing_id = get_post_meta($post_id,'_webinar_landing_page_id',true);\n\t\tif($landing_id)\n\t\t\t{\n\t\t\t$landing[\"ID\"] = $landing_id;\n\t\t\twp_update_post( $landing );\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t$landing_id = wp_insert_post( $landing );\n\t\t\t}\n\t\tupdate_post_meta($post_id,'_webinar_landing_page_id',$landing_id);\n\t\t$landing_permalink = get_permalink($landing_id);\n\t\t$landing_permalink .= (strpos($landing_permalink,'?')) ? '&webinar=' : '?webinar=';\n\t\t$landing_permalink .= $passcode = wp_generate_password(14, false); // 14 characters, no special characters\n\t\tupdate_post_meta($landing_id,'_rsvpmaker_special','Landing Page');\n\t\tupdate_post_meta($landing_id,'_webinar_event_id',$post_id);\n\t\tupdate_post_meta($landing_id,'_webinar_passcode',$passcode);\n\t\tif(isset($_REQUEST[\"youtube_require_passcode\"]))\n\t\t\tupdate_post_meta($landing_id,'_require_webinar_passcode',$passcode);\n\t$subject = 'Reminder: '.$event->post_title;\n\t$message = __('Thanks for registering for','rsvpmaker').' '.$event->post_title.\"\\n\\n\".__('The event will start at','rsvpmaker').' '.$date.\"\\n\\n\".__('Tune in here','rsvpmaker').\":\\n\".'<a href=\"'.$landing_permalink.'\">'.$landing_permalink.\"</a>\\n\\n\".__('You will be able to post questions or comments to the live chat on the event page').'.';\n\t$hours = -2;\n\tupdate_post_meta($post_id, '_rsvp_confirm',$message);\n\tupdate_post_meta($post_id, '_rsvp_reminder_msg_'.$hours,$message);\n\tupdate_post_meta($post_id, '_rsvp_reminder_subject_'.$hours,$subject);\n\trsvpmaker_reminder_cron($hours, $start_time, $post_id);\n\n\t$hours = 2;\n\t$subject = 'Follow up: '.$event->post_title;\n\t$message = __('Thanks for your interest in ','rsvpmaker').' '.$event->post_title.\"\\n\\n\".__('If you missed all or part of the program, a replay is waiting for you here','rsvpmaker').\":\\n\".'<a href=\"'.$landing_permalink.'\">'.$landing_permalink.\"</a>\\n\\n\";\n\tupdate_post_meta($post_id, '_rsvp_reminder_msg_'.$hours,$message);\n\tupdate_post_meta($post_id, '_rsvp_reminder_subject_'.$hours,$subject);\n\trsvpmaker_reminder_cron($hours, $start_time, $post_id);\n\n\tif($show)\n\t\tprintf('<p>%s <a href=\"%s\">%s</a> (<a href=\"%s\">%s</a>)</p>',__('YouTube Live landing page created at'),$landing_permalink,$landing_permalink, admin_url('post.php?action=edit&post='.$landing_id), __('Edit','rsvpmaker'));\n\t\n}\n\nfunction no_mce_plugins( $p ) { return array(); }\n\nfunction rsvpmaker_template_reminder_add($hours,$post_id) {\n\t$cron = get_post_meta($post_id,'rsvpmaker_template_reminder',true);\n\tif(!is_array($cron))\n\t\t$cron = array();\n\tif(!in_array($hours,$cron))\n\t\t$cron[] = $hours;\n\tupdate_post_meta($post_id, 'rsvpmaker_template_reminder', $cron);\n}\n\nfunction rsvp_get_confirm($post_id, $return_post = false) {\n\tglobal $rsvp_options, $post, $wpdb, $wp_styles;\n\t$content = get_post_meta($post_id,'_rsvp_confirm',true);\n\tif(empty($content))\n\t\t$content = $rsvp_options['rsvp_confirm'];\n\tif(is_numeric($content))\n\t{\n\t\t$id = $content;\n\t\t$conf_post=get_post($id);\n\t\tif(empty($conf_post))\n\t\t{\n\t\t\t//maybe got deleted or something?\n\t\t\tif(is_numeric($rsvp_options['rsvp_confirm']))\n\t\t\t\t$conf_post= get_post($rsvp_options['rsvp_confirm']);\n\t\t}\n\t\tif(empty($conf_post->post_content)) {\n\t\t\t//if the default confirmation post is missing, recreate it\n\t\t\t$conf_array = array('post_title'=>'Confirmation:Default', 'post_content'=>'Thank you!','post_type' => 'rsvpemail','post_status' => 'publish');\n\t\t\t$conf_array['ID'] = $id = wp_insert_post($conf_array);\n\t\t\t$rsvp_options['rsvp_confirm'] = $id;\n\t\t\tupdate_option('RSVPMAKER_Options',$rsvp_options);\n\t\t\t$conf_post = (object) $conf_array;\n\t\t}\t\t\t\n\t\tif(!strpos($conf_post->post_content,'!-- /wp'))//if it's not Gutenberg content\n\t\t\t$conf_post->post_content = wpautop($conf_post->post_content);\n\t\tif(function_exists('do_blocks'))\n\t\t\t$conf_post->post_content = do_blocks($conf_post->post_content);\n\t\t$title = (!empty($post->post_title)) ? $post->post_title : 'not set';\n\t\t$context = (is_admin()) ? 'admin' : 'not admin';\n\t\t$log = sprintf('retrieve conf post ID %s for %s %s',$id,$title,$context);\n\t}\n\telse {\n\t\tif(function_exists('do_blocks'))\n\t\t\t$content = wp_kses_post(rsvpautog($content));\n\t\t$conf_post = array('post_title'=>'Confirmation:'.$post_id, 'post_content'=>$content,'post_type' => 'rsvpemail','post_status' => 'publish','post_parent' => $post_id);\n\t\t$conf_post['ID'] = $id = wp_insert_post($conf_post);\n\t\t$conf_post = (object) $conf_post;\n\t\tupdate_post_meta($post_id,'_rsvp_confirm',$id);\n\t\t$title = (!empty($post->post_title)) ? $post->post_title : 'not set';\n\t\t$context = (is_admin()) ? 'admin' : 'not admin';\n\t\t$log = sprintf('adding conf post ID %s for %s %s',$id,$title,$context);\n\t}\n\tif($return_post)\n\t\treturn $conf_post;\n\treturn $conf_post->post_content;\n}\n\nfunction rsvp_list_reminders_all_events() {\n\tglobal $wpdb;\n\t$events = get_future_events();\n\tif(empty($events))\n\t\treturn;\n\t$output = '';\n\tforeach($events as $event) {\n\t\t$sql = \"SELECT * FROM $wpdb->postmeta WHERE meta_key LIKE '_rsvp_reminder_msg_%' AND post_id=\".$event->ID.\" ORDER BY meta_key \";\n\t\t$results = $wpdb->get_results($sql);\n\t\tforeach($results as $row) {\n\t\t\t$time = str_replace('_rsvp_reminder_msg_','',$row->meta_key);\n\t\t\t$output .= sprintf('<p><input type=\"checkbox\" name=\"delete_reminder[]\" value=\"%d:%s\"> <a href=\"%s\">Edit Reminders</a> %s %s %s hours</p>',$event->ID, $row->meta_key, admin_url('edit.php?page=rsvp_reminders&post_type=rsvpmaker&post_id='.$event->ID),$event->post_title,$event->datetime,$time);\n\t\t}\n\t}\n\tif(!empty($output))\n\t\treturn \tsprintf('<form method=\"post\" action=\"%s\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders')).$output.'<p><button>Delete Checked</button>'.rsvpmaker_nonce('return').'</p></form>';\n}\n\nfunction rsvp_get_reminder($post_id,$hours) {\n\tglobal $rsvp_options, $wpdb;\n\t$key = '_rsvp_reminder_msg_'.$hours;\n\t$reminder_id = get_post_meta($post_id, $key,true);\n\tif(empty($reminder_id) && ($t = rsvpmaker_has_template($post_id)) &&!isset($_GET['was']) )\n\t\t$reminder_id = get_post_meta($t, $key,true);\n\tif(empty($reminder_id) || !is_numeric($reminder_id))\n\t\treturn;\n\t$conf_post = get_post($reminder_id);\n\tif(empty($conf_post))\n\t\treturn;\n\tif(function_exists('do_blocks'))\n\t\t$conf_post->post_content = do_blocks($conf_post->post_content);\n\treturn $conf_post;\n}\n\nfunction rsvp_reminders () {\nglobal $wpdb;\nglobal $rsvp_options;\nglobal $current_user;\n$existing = $options = '';\n$templates = rsvpmaker_get_templates();\n$post_id = (isset($_REQUEST[\"post_id\"])) ? (int) $_REQUEST[\"post_id\"] : false;\n\nif(isset($_POST['defaults']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\tforeach($_POST['defaults'] as $index => $value) {\n\t\tif($index == 'confirmation') {\n\t\t\tdelete_post_meta($post_id,'_rsvp_confirm');\n\t\t}\n\t\tif($index == 'payment_confirmation') {\n\t\t\tdelete_post_meta($post_id,'payment_confirmation_message');\n\t\t}\n\t\tif($index == 'reminders')\n\t\t{\n\t\t\t$sql = \"DELETE FROM $wpdb->postmeta WHERE post_id=$post_id AND meta_key LIKE '_rsvp_reminder_msg_%'\";\n\t\t\t$wpdb->query($sql);\n\t\t}\n\t}\n}\n\n$documents = get_related_documents();\n?>\n<style>\n<?php \n$styles = rsvpmaker_included_styles();\necho $styles; ?>\n</style>\n<div class=\"wrap\"> \n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n<h1><?php echo __('Confirmation / Reminder Messages','rsvpmaker').': '.get_the_title($post_id); ?></h1> \n<?php\n\nif($post_id)\n\t$start_time = get_rsvp_date($post_id);\n\n$hours = (isset($_REQUEST[\"hours\"])) ? (int) $_REQUEST[\"hours\"] : false;\n\nif(isset($_GET[\"webinar\"]))\n\t{\n\t\t$post_id = (int) $_GET[\"post_id\"];\n\t\t$ylive = sanitize_text_field($_GET[\"youtube_live\"]);\t\n\t\trsvpmaker_youtube_live($post_id, $ylive, true);\n\t}\t\n\t\nif(isset($_GET['delete']))\n{\n\t$key = '_rsvp_reminder_msg_'. (int) $_GET['delete'];\n\tprintf('<p>Deleting %s</p>',$key);\n\tdelete_post_meta($post_id,$key);\n}\n\nif(isset($_POST['delete_reminder']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\tforeach($_POST['delete_reminder'] as $delete_reminder) {\n\t\t$delete_reminder = sanitize_text_field($delete_reminder);\n\t\t$p = explode(':',$delete_reminder);\n\t\tdelete_post_meta($p[0],$p[1]);\n\t}\n}\n\nif(isset($_GET['paid_only_confirmation'])) {\n\t$reminder_id = (int) $_GET['reminder_post_id'];\n\tupdate_post_meta($reminder_id, 'paid_only_confirmation', (int) $_GET['paid_only_confirmation']);\n\tprintf('<div class=\"notice notice-success\"><p>%s, post_id: %d</p></div>',__('Reminder updated','rsvpmaker'),$reminder_id);\n}\n\nif($post_id && $hours)\n{\n\t$reminder = rsvp_get_reminder($post_id,$hours);\n\tif(!empty($reminder))\n\t{\n\t\tprintf('<p>%s %s %s</p><h2>%s</h2>%s<p><a href=\"%s\">%s</a></p>',__('Added reminder ','rsvpmaker'), (int) $_GET['hours'],__('hours','rsvpmaker'),esc_html($reminder->post_title),wp_kses_post($reminder->post_content),admin_url('post.php?action=edit&post='.intval($reminder->ID)),__('Edit','rsvpmaker'));\t\n\tif(rsvpmaker_is_template($post_id))\n\t{\n\t\techo 'This is a template';\n\t\trsvpmaker_template_reminder_add($hours,$post_id);\n\t\trsvpautorenew_test (); // will add to the next scheduled event associated with template\n\t}\n\telse\n\t{\n\t\t$start_time = get_rsvp_event_time($post_id);\n\t\trsvpmaker_reminder_cron($hours, $start_time, $post_id);\n\t}\n\t\t\n\t}\n\telse '<h2>Error Adding Reminder</h2>';\n}\n\nif($post_id)\n{\nif(rsvpmaker_is_template($post_id))\n\tprintf('<p><em>%s</em></p>',__('This is an event template: The confirmation and reminder messages you set here will become the defaults for future events based on this template. The [datetime] placeholder in subject lines will be replaced with the specific event date.','rsvpmaker'));\n\n//$confirm = rsvp_get_confirm($post_id, true);\nprintf('<form action=\"%s\" method=\"post\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=').$post_id);\nrsvpmaker_nonce();\necho get_confirmation_options($post_id, $documents);\necho '<button>Save</button></form>';\n\n$reminder_copy = sprintf('<option value=\"%d\">%s</option>',get_post_meta($post_id,'_rsvp_confirm',true),__('Confirmation Message'));\n\nprintf('<h3>%s</h3>',__('Payment Confirmation','rsvpmaker'));\n$payment_confirmation = (int) get_post_meta($post_id,'payment_confirmation_message',true);\nif($payment_confirmation)\n{\n\t$pconf = get_post($payment_confirmation);\n\techo (empty($pconf->post_content)) ? '<p>[not set]</p>' : $pconf->post_content;\n}\n\nforeach($documents as $d) {\n\t$id = $d['id'];\n\tif(($id == 'edit_payment_confirmation') || ($id == 'edit_payment_confirmation_custom'))\n\tprintf('<p><a href=\"%s\">Edit: %s</a></p>',$d['href'],$d['title']);\n}\n\nif(!empty($pconf->post_content))\n\t$reminder_copy .= sprintf('<option value=\"%d\">%s</option>',$pconf->ID,__('Payment Confirmation','rsvpmaker'));\n\necho '<div style=\"border: thin solid #555; padding: 10px;\"><h2>Reminders</h2>';\n\n$sql = \"SELECT * FROM $wpdb->postmeta WHERE post_id=$post_id AND meta_key LIKE '_rsvp_reminder_msg_%' ORDER BY meta_key\";\n\n$results = $wpdb->get_results($sql);\n$delete_reminder_options = '';\nif(!$results)\n\techo '<p>No reminders active</p>';\nelse {\n\tforeach($results as $row)\n\t{\n\t\t$hours = str_replace('_rsvp_reminder_msg_','',$row->meta_key);\n\t\t$type = ($hours > 0) ? 'FOLLOW UP' : 'REMINDER';\n\t\t$reminder = rsvp_get_reminder($post_id,$hours);\n\t\t$reminder_copy .= sprintf('<option value=\"%d\">%s %s</option>',$reminder->ID,$type,$hours);\n\t\t$delete_reminder_options .= sprintf('<option value=\"%s\">%s %s</option>',esc_attr($post_id.':'.$row->meta_key),esc_html($type),esc_html($hours));\n\t\tprintf('<h2>%s (%s hours)</h2><h3>%s</h3>%s',esc_html($type),esc_html($hours),esc_html($reminder->post_title),wp_kses_post($reminder->post_content));\n\t\t$parent = $reminder->post_parent;\n\t\tif($parent != $post_id)\n\t\t\tprintf('<p>%s<br /><a href=\"%s\">%s</a></p>',__('This is the standard reminder from the event template','rsvpmaker'), admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&post_id='.$post_id.'&hours='.$hours.'&was='. $reminder->ID),__('Customize for this event','rsvpmaker'));\n\t\tforeach($documents as $d) {\n\t\t\t$id = $d['id'];\n\t\t\tif(($id == 'reminder'.$hours) || ($id == 'reminder'.$hours.'custom'))\n\t\t\tprintf('<p><a href=\"%s\">Edit: %s</a></p>',esc_attr($d['href']),esc_html($d['title']));\n\t\t}\n\t\t$paid_only = get_post_meta($reminder->ID,'paid_only_confirmation',true);\n\t\tif($paid_only)\n\t\t\t$radio = sprintf('<input type=\"radio\" name=\"paid_only_confirmation\" value=\"1\" checked=\"checked\" /> Yes <input type=\"radio\" name=\"paid_only_confirmation\" value=\"0\" /> No ');\n\t\telse\n\t\t\t$radio = sprintf('<input type=\"radio\" name=\"paid_only_confirmation\" value=\"1\" /> Yes <input type=\"radio\" name=\"paid_only_confirmation\" value=\"0\"  checked=\"checked\"  /> No ');\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" />\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvp_reminders\" />\n\t\t<input type=\"hidden\" name=\"message_type\" value=\"confirmation\" />\n\t\t<input type=\"hidden\" name=\"post_id\" value=\"%d\" />\n\t\t<input type=\"hidden\" name=\"reminder_post_id\" value=\"%d\" />\n\t\t<p>%s %s %s\n\t\t<button>Update</button></p>\n\t\t</form>',admin_url('edit.php'),esc_attr($post_id),esc_attr($reminder->ID),__('Send only after payment','rsvpmaker'),$radio,rsvpmaker_nonce('return'));\n\t}\nprintf('<h3>Delete Reminder</h3><form method=\"post\" action=\"%s\"><select name=\"delete_reminder[]\">%s</select><br /><button>Delete</button>%s</form>',admin_url('edit.php?page=rsvp_reminders&post_type=rsvpmaker&post_id='.$post_id),$delete_reminder_options,rsvpmaker_nonce('return'));\n}\n\n$reminder_copy .= '<option value=\"\">'.__('Blank message','rsvpmaker').'</option>';\n\n$hour_options = rsvp_reminder_options();\nprintf('<h3>Add Reminders and Follow Up Messages</h3>\n<form method=\"post\" action=\"%s\"><input type=\"hidden\" name=\"create_reminder_for\" value=\"%s\">\n<p><select name=\"hours\">%s</select>\n%s\n<select name=\"copy_from\">%s</select></p>\n<p><input type=\"checkbox\" name=\"paid_only\" value=\"1\"> Send for PAID registrations only</p>\n<p><button>Submit</button></p>%s</form>',admin_url('edit.php'),esc_attr($post_id),$hour_options,__('Based on','rsvpmaker'),$reminder_copy,rsvpmaker_nonce('return'));\n\necho '</div>';//end reminders section\n\nprintf('<h3>Reset to Defaults</h3>\n<form method=\"post\" action=\"%s\">\n<p><input type=\"checkbox\" name=\"defaults[confirmation]\" value=\"1\" /> Confirmation</p>\n<p><input type=\"checkbox\" name=\"defaults[payment_confirmation]\" value=\"1\"> Payment Confirmation</p>\n<p><input type=\"checkbox\" name=\"defaults[reminders]\" value=\"1\"> Remove Reminders</p>\n<p><button>Submit</button></p>%s</form>',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id='.$post_id),rsvpmaker_nonce('return'));\n\n?>\n<h3><?php esc_html_e('Webinar Setup','rsvpmaker'); ?></h3>\n<form method=\"get\" action = \"<?php echo admin_url('edit.php'); ?>\">\n<p><?php esc_html_e('This utility sets up a landing page and suggested confirmation and reminder messages, linked to that page. RSVPMaker explicitly supports webinars based on YouTube Live, but you can also embed the coding required for another webinar of your choice.','rsvpmaker'); ?></p>\n<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" >\n<input type=\"hidden\" name=\"page\" value=\"rsvp_reminders\" >\n<input type=\"hidden\" name=\"webinar\" value=\"1\" >\n<input type=\"hidden\" name=\"post_id\" value=\"<?php echo esc_attr($post_id); ?>\">\n<p>YouTube Live url: <input type=\"text\" name=\"youtube_live\" value=\"\"> <input type=\"checkbox\" name=\"youtube_require_passcode\" value=\"1\" /> <?php esc_html_e('Require passcode to view','rsvpmaker');?></p>\n<?php rsvpmaker_nonce(); ?>\n<p><button><?php esc_html_e('Create','rsvpmaker');?></button></p>\n</form>\n<?php\n\n}\nelse {\n\t$o = '<option value=\"\">Select Event or Event Template</option>';\n\t$templates = rsvpmaker_get_templates();\n\tif($templates)\n\tforeach($templates as $event)\n\t{\n\t\tif(current_user_can('edit_post',$event->ID))\n\t\t$o .= sprintf('<option value=\"%s\">TEMPLATE: %s</option>',esc_attr($event->ID),esc_html($event->post_title));\n\t}\n\t$future = get_future_events();\n\tif($future)\n\tforeach($future as $event)\n\t{\n\t\tif(current_user_can('edit_post',$event->ID))\n\t\t$o .= sprintf('<option value=\"%s\">%s - %s</option>',esc_attr($event->ID),esc_html($event->post_title),esc_html($event->date));\n\t}\t\n\tprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"page\" value=\"rsvp_reminders\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\"><select name=\"post_id\">%s</select><button>Get</button>%s</form>',admin_url('edit.php'),$o,rsvpmaker_nonce('return'));\n}\n\nrsvpmaker_reminders_nudge ();\n\n$list = rsvp_list_reminders_all_events();\nif($list)\n\techo '<h2>Reminders for All Upcoming Events</h2>'.$list;\n\n?>\n<h3><?php esc_html_e('A Note on More Reliable Scheduling','rsvpmaker');?></h3>\n<p><?php esc_html_e('RSVPMaker takes advantage of WP Cron, a standard WordPress scheduling mechanism. Because it only checks for scheduled tasks to be run when someone visits your website, WP Cron can be imprecise -- which could be a problem if you want to make sure a reminder will go out an hour before your event, if that happens to be a low traffic site. Caching plugins can also get in the way of regular WP Cron execution. Consider following <a href=\"http://code.tutsplus.com/articles/insights-into-wp-cron-an-introduction-to-scheduling-tasks-in-wordpress--wp-23119\">these directions</a> to make sure your server checks for scheduled tasks to run on a more regular schedule, like once every 5 or 15 minutes.','rsvpmaker');?></p>\n\n<p><?php esc_html_e('Using Unix cron, the command you would set to execute would be','rsvpmaker');?>:</p>\n<code>\ncurl <?php echo site_url('/wp-cron.php?doing_wp_cron=1');?> > /dev/null 2>&1\n</code>\n<p><?php esc_html_e('If curl does not work, you can also try this variation (seems to work better on some systems)','rsvpmaker');?>:</p>\n<code>\nwget -qO- <?php echo site_url('/wp-cron.php?doing_wp_cron=1');?>  &> /dev/null\n</code>\n</div>\n<?php\n\n}\n\nfunction rsvpmaker_placeholder_image () {\n$impath = dirname( __FILE__ ).DIRECTORY_SEPARATOR.'placeholder.png';\n$im = imagecreatefrompng($impath);\nif(!$im)\n{\n$im = imagecreate(800, 50);\nimagefilledrectangle($im,5,5,790,45, imagecolorallocate($im, 50, 50, 255));\n}\n\n$bg = imagecolorallocate($im, 200, 200, 255);\n$border = imagecolorallocate($im, 0, 0, 0);\n$textcolor = imagecolorallocate($im, 255, 255, 255);\n\n$text = (isset($_GET['post_id'])) ? __('Event','rsvpmaker').': ' : __('Events','rsvpmaker').': ';\n$tip = '('.__('double-click for popup editor','rsvpmaker').')';\n\nforeach ($_GET as $name => $value)\n\t{\n\tif($name == 'rsvpmaker_placeholder')\n\t\tcontinue;\n\tif(empty($value))\n\t\tcontinue;\n\t$text .= $name.'='.$value.' '; \n\t}\n\n// Write the string at the top left\nimagestring($im, 5, 10, 10, $text, $textcolor);\nimagestring($im, 5, 10, 25, $tip, $textcolor);\n\n// Output the image\nheader('Content-type: image/png');\n\nimagepng($im);\nimagedestroy($im);\nexit();\n}\n\nfunction rsvp_mce_buttons( $buttons ) {\n\tglobal $post;\n\tif(empty($post)) return $buttons;\n\tif(($post->post_type=='rsvpmaker') || (isset($_GET[\"post_type\"]) && ($_GET[\"post_type\"] == 'rsvpmaker')) )\n\t\treturn $buttons;\n    array_push( $buttons, 'rsvpmaker_upcoming' );\n    array_push( $buttons, 'rsvpmaker_one' );\n    return $buttons;\n}\nadd_filter( 'mce_buttons', 'rsvp_mce_buttons' ); //, 10000 priority for Beaver Builder\n\nfunction rsvp_mce_plugins ( $plugin_array ) {\n\tglobal $post;\n\tif(empty($post)) return $plugin_array;\n\tif(($post->post_type=='rsvpmaker') || (isset($_GET[\"post_type\"]) && ($_GET[\"post_type\"] == 'rsvpmaker')) )\n\t\treturn $plugin_array;\n\t\n    $plugin_array['rsvpmaker_upcoming'] = plugins_url( 'mce.js?v=2.2' , __FILE__ );\n    $plugin_array['rsvpmaker_one'] = plugins_url( 'mce-single-event.js?v=2.4' , __FILE__ );\n    return $plugin_array;\n}\nadd_filter( 'mce_external_plugins', 'rsvp_mce_plugins', 10000);\n\nfunction rsvpmaker_upcoming_admin_js() {\nif(function_exists('do_blocks'))\n\treturn; //don't need this on Gutenberg-enabled sites\n\n    global $current_screen;\n\tglobal $post;\n\tglobal $wp_query;\n\tglobal $wpdb;\n\tglobal $showbutton;\n\tglobal $startday;\n\tglobal $rsvp_options;\n\t\n\t$showbutton = true;\n\t\n\t$backup = $wp_query;\n\n    $type = $current_screen->post_type;\n\n    if (is_admin() && $type != 'rsvpmaker') {\n     \n\t \t$sql = \"SELECT *, $wpdb->postmeta.meta_value as datetime, $wpdb->posts.ID as postID, 1 as current\nFROM `\".$wpdb->postmeta.\"`\nJOIN $wpdb->posts ON \".$wpdb->postmeta.\".post_id = $wpdb->posts.ID AND meta_key='_rsvp_dates'\nWHERE  meta_value >= '\".get_sql_now().\"' AND $wpdb->posts.post_status = 'publish'\nORDER BY meta_value\";\n\t $results = $wpdb->get_results($sql);\n\t $row[] = \"{text: 'Pick One?', value: '0'}\";\n\t$row[] = \"{text: 'Next Event', value: 'next'}\";\n\t$row[] = \"{text: 'Next Event - RSVP On', value: 'nextrsvp'}\";\n\tif($results)\n\tforeach ($results as $r)\n\t \t$row[] = sprintf(\"{text: '%s', value: '%d'}\",addslashes($r->post_title).' '.rsvpmaker_date('r',rsvpmaker_strtotime($r->datetime)),$r->ID);   \n\n$terms = get_terms('rsvpmaker-type', array('hide_empty' => false));\n$t[] = \"{text: 'Any', value: ''}\";\nif ( ! empty( $terms ) && ! is_wp_error( $terms ) ){\n     foreach ( $terms as $term ) {\n       $t[] = sprintf(\"{text: '%s', value: '%s'}\",$term->name,$term->slug);\n     }\n}\n\t?>\n        <script type=\"text/javascript\">\n        var upcoming = [<?php echo implode(\",\\n\",$row); ?>];\n\t\tvar rsvpmaker_types = [<?php echo implode(\",\\n\",$t); ?>];\n        </script>\n        <?php\n    }\n}\n\nfunction rsvpmaker_clone_title($title) {\n\tif(isset($_GET[\"clone\"]))\n\t\t{\n\t\t\t$id = (int) $_GET[\"clone\"];\n\t\t\t$clone = get_post($id);\n\t\t\t$title = $clone->post_title;\n\t\t}\n\treturn $title;\n}\nadd_filter('default_title','rsvpmaker_clone_title');\n\nfunction rsvpmaker_clone_content ($content) {\n\tif(isset($_GET[\"clone\"]))\n\t\t{\n\t\t\t$id = (int) $_GET[\"clone\"];\n\t\t\t$clone = get_post($id);\n\t\t\t$content = $clone->post_content;\n\t\t}\n\treturn $content;\n}\nadd_filter('default_content','rsvpmaker_clone_content');\n\nfunction export_rsvpmaker () {\n//pack data from custom tables into wordpress metadata\nglobal $wpdb;\n$results = $wpdb->get_results('SELECT * FROM '.$wpdb->prefix.'rsvpmaker ORDER BY event',ARRAY_A);\nif($results)\n\t{\n\tforeach($results as $row)\n\t\t{\n\t\t\tarray_shift($row); // id becomes irrelevant\n\t\t\t$events[$row['event']][] = $row; \t\t\n\t\t}\n\tif($events && is_array($events))\n\tforeach($events as $event => $meta)\n\t\tupdate_post_meta($event,'_export_rsvpmaker',$meta);\n\t}\n$results = $wpdb->get_results('SELECT * FROM '.$wpdb->prefix.'rsvp_volunteer_time ORDER BY event',ARRAY_A);\nif($results)\n\t{\n\tforeach($results as $row)\n\t\t{\n\t\t\tarray_shift($row); // id becomes irrelevant\n\t\t\t$v[$row['event']][] = $row; \t\t\n\t\t}\n\tforeach($v as $event => $meta)\n\t\tupdate_post_meta($event,'_export_rsvp_volunteer_time',$meta);\n\t}\n\n}\n\nfunction import_rsvpmaker() {\nglobal $wpdb;\n// import routine (transfer from another site)\n\nglobal $wpdb;\n$wpdb->show_errors();\n\n$results = $wpdb->get_results(\"SELECT * FROM $wpdb->postmeta WHERE meta_key='_export_rsvpmaker' \");\nif($results)\n{\nforeach($results as $row)\n\t{\n\t$data = unserialize($row->meta_value);\n\tif(is_array($data))\n\tforeach($data as $newrow)\n\t{\n\t$sql = \"INSERT INTO \".$wpdb->prefix.'rsvpmaker SET ';\n\t$count = 0;\n\tforeach($newrow as $key => $value)\n\t\t{\n\t\tif($count)\n\t\t\t$sql .= ', ';\n\t\t$sql .= $wpdb->prepare(\"`$key` = %s\",$value);\n\t\t$count++;\n\t\t}\n\t$wpdb->query($sql);\n\t}\n\t\n\t}\n$wpdb->query(\"DELETE FROM $wpdb->postmeta WHERE meta_key='_export_rsvpmaker' \");\n}\n\n$results = $wpdb->get_results(\"SELECT * FROM $wpdb->postmeta WHERE meta_key='_export_rsvp_volunteer_time' \");\nif($results)\n{\nforeach($results as $row)\n\t{\n\t$data = unserialize($row->meta_value);\n\tforeach($data as $newrow)\n\t{\n\t$sql = \"INSERT INTO \".$wpdb->prefix.'rsvp_volunteer_time SET ';\n\t$count = 0;\n\tforeach($newrow as $key => $value)\n\t\t{\n\t\tif($count)\n\t\t\t$sql .= ', ';\n\t\t$sql .= $wpdb->prepare(\"`$key` = %s\",$value);\n\t\t$count++;\n\t\t}\n\t$wpdb->query($sql);\n\t}\n\t\n\t}\n$wpdb->query(\"DELETE FROM $wpdb->postmeta WHERE meta_key='_export_rsvp_volunteer_time' \");\n}\n\n}\n\nfunction rsvpmaker_paypal_config_ajax () {\n$filename = rsvpmaker_paypal_config_write(sanitize_text_field($_POST[\"user\"]),sanitize_text_field($_POST[\"password\"]),sanitize_text_field($_POST[\"signature\"]));\ndie($filename);\n}\n\nfunction rsvpmaker_paypal_config_write($user,$password,$signature) {\n$up = wp_upload_dir();\n$filename = trailingslashit($up['path']);\n$characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $charactersLength = strlen($characters);\n    for ($i = 0; $i < 20; $i++) {\n        $filename .= $characters[rand(0, $charactersLength - 1)];\n    }\n$filename .= '.php';\n\n$paypal_config_template = sprintf(\"<?php\nif( !defined( 'ABSPATH' ) )\n\tdie( 'Fatal error: Call to undefined function paypal_setup() in %s on line 5' );\ndefine('API_USERNAME', '%s');\ndefine('API_PASSWORD', '%s');\ndefine('API_SIGNATURE', '%s');\ndefine('API_ENDPOINT', 'https://api-3t.paypal.com/nvp');\ndefine('USE_PROXY',FALSE);\ndefine('PROXY_HOST', '127.0.0.1');\ndefine('PROXY_PORT', '808');\ndefine('PAYPAL_URL', 'https://www.paypal.com/webscr&cmd=_express-checkout&useraction=commit&token=');\ndefine('VERSION', '3.0');\n?>\",$filename,$user,$password,$signature);\n$myfile = fopen($filename, \"w\") or die(\"Unable to open file!\");\nfwrite($myfile, $paypal_config_template);\nfclose($myfile);\nupdate_option('paypal_config',$filename);\nreturn $filename;\n}\n\nfunction future_rsvpmakers_by_template($template_id) {\n\t$ids = array();\n\t$sched_result = get_events_by_template($template_id);\n\tif($sched_result)\n\tforeach($sched_result as $row)\n\t\t$ids[] = $row->ID;\n\treturn $ids;\n}\n\nfunction rsvptimes ($time,$fieldname) {\nif(empty($time))\n\t$time = '01:00:00';\nprintf('%s <input type=\"time\" name=\"%s\" value=\"%s\">',__('Time'),$fieldname,$time);\n}\n\nfunction rsvpmaker_add_one () {\n\nif(!empty($_POST[\"rsvpmaker_add_one\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\nglobal $wpdb;\nglobal $current_user;\n\n$t = (int) $_POST[\"template\"];\n$post = get_post($t);\n$template = get_template_sked($t);\n\n$hour = (isset($template[\"hour\"]) ) ? (int) $template[\"hour\"] : 17;\n$minutes = isset($template[\"minutes\"]) ? $template[\"minutes\"] : '00';\n\n\t$my_post['post_title'] = $post->post_title;\n\t$my_post['post_content'] = $post->post_content;\n\t$my_post['post_status'] = 'draft';\n\t$my_post['post_author'] = $current_user->ID;\n\t$my_post['post_type'] = 'rsvpmaker';\n\tforeach($_POST[\"recur_check\"] as $index => $on)\n\t\t{\n\t\t\tif(!empty($_POST[\"recur_title\"][$index]))\n\t\t\t\t$my_post['post_title'] = sanitize_text_field($_POST[\"recur_title\"][$index]);\n\t\t\t$year = sanitize_text_field($_POST[\"recur_year\"][$index]);\n\t\t\t$cddate = format_cddate($year, sanitize_text_field($_POST[\"recur_month\"][$index]), sanitize_text_field($_POST[\"recur_day\"][$index]), $hour, $minutes);\n\t\t\t$dpart = explode(':',$template[\"duration\"]);\n\t\t\t\n\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t{\n\t\t\t\t$dtext = $cddate.' +'.$dpart[0].' hours';\n\t\t\t\tif(!empty($dpart[1]))\n\t\t\t\t\t$dtext .= ' +'.$dpart[1].' minutes';\n\t\t\t\t$dt = rsvpmaker_strtotime($dtext);\n\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$dt);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t$duration = $template[\"duration\"];\n\t\t\t$y = (int) $_POST[\"recur_year\"][$index];\n\t\t\t$m = (int) $_POST[\"recur_month\"][$index];\n\t\t\tif($m < 10) $m = '0'.$m;\n\t\t\t$d = (int) $_POST[\"recur_day\"][$index];\n\t\t\tif($d < 10) $d = '0'.$d;\n\t\t\t$date = $y.'-'.$m.'-'.$d;\n\n\t\t\t$my_post['post_name'] = sanitize_text_field($my_post['post_title'] . '-' .$date );\n\t\t\t$singular = __('Event','rsvpmaker');\n// Insert the post into the database\n  \t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\tadd_rsvpmaker_date($post_id,$cddate,$duration);\t\t\t\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\t$ts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$post_id);\n\t\t\t\tupdate_post_meta($post_id,\"_updated_from_template\",$ts);\n\n\t\t\t\twp_set_object_terms( $post_id, $rsvptypes, 'rsvpmaker-type', true );\n\n\t\t\t\t$results = $wpdb->get_results(\"SELECT * FROM $wpdb->postmeta WHERE meta_key LIKE '_rsvp%' AND post_id=\".$t);\n\t\t\t\tif($results)\n\t\t\t\tforeach($results as $row)\n\t\t\t\t\t{\n\t\t\t\t\tif($row->meta_key == '_rsvp_reminder')\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $wpdb->postmeta SET meta_key=%s,meta_value=%s,post_id=%d\",$row->meta_key,$row->meta_value,$post_id));\n\t\t\t\t\t}\n\t\t\t\t//copy rsvp options\n\t\t\t\t$editurl = admin_url('post.php?action=edit&post='.$post_id);\n\t\t\t\twp_redirect($editurl);\n\t\t\t\texit;\n\t\t\t\t}\t\t\n\t\tbreak;\n\t\t}\n\t}\n}//end rsvpmaker_add_one\n\nfunction rsvpmaker_admin_page_top($headline) {\n\n/*\n$hook = rsvpmaker_admin_page_top(__('Headline','rsvpmaker'));\nrsvpmaker_admin_page_bottom($hook);\n*/\n$hook = '';\nif(is_admin()) { // if not full screen view\n\t$screen = get_current_screen();\n\t$hook = $screen->id;\n}\n\n$print = (isset($_GET[\"page\"]) && !isset($_GET[\"rsvp_print\"])) ? '<div style=\"width: 200px; text-align: right; float: right;\"><a target=\"_blank\" href=\"'.admin_url(str_replace('/wp-admin/','',sanitize_text_field($_SERVER['REQUEST_URI']))).'&rsvp_print=1\">Print</a></div>' : '';\nprintf('<div id=\"wrap\" class=\"%s toastmasters\">%s<h1>%s</h1>',$hook,$print,$headline);\nreturn $hook;\n}\n\nfunction rsvpmaker_admin_page_bottom($hook = '') {\nif(is_admin() && empty($hook))\n\t{\n\t$screen = get_current_screen();\n\t$hook = $screen->id;\n\t}\nprintf(\"\\n\".'<hr /><p><small>%s</small></p></div>',$hook);\n}\n\nfunction rsvpmaker_editors() {\nif(isset($_GET['page']) && ($_GET['page'] == 'rsvp_reminders'))\n\twp_enqueue_editor();\n}\n\nfunction rsvpmaker_admin_notice_format($message, $slug, $cleared, $type='info')\n{\nif(in_array($slug,$cleared))\n\treturn;\nreturn sprintf('<div class=\"notice notice-%s rsvpmaker-notice is-dismissible\" data-notice=\"%s\">\n<p>%s</p>\n</div>',esc_attr($type),esc_attr($slug),$message);\n}\n\n/**\n * AJAX handler to store the state of dismissible notices.\n */\nfunction rsvpmaker_ajax_notice_handler() {\n$cleared = get_option('cleared_rsvpmaker_notices');\n$cleared = is_array($cleared) ? $cleared : array();\n    // Pick up the notice \"type\" - passed via jQuery (the \"data-notice\" attribute on the notice)\n    $cleared[] = sanitize_text_field($_REQUEST['type']);\n    update_option('cleared_rsvpmaker_notices',$cleared);\n}\n\nfunction rsvpmaker_debug_log($msg, $label = '', $filename_base = '') {\n\tglobal $rsvp_options;\n\t\tif(empty($rsvp_options[\"debug\"]))\n\t\t\treturn;\n\t\tif(empty($filename_base))\n\t\t\t$filename_base = 'rsvpmaker';\n\t\t\t\n\tif(!is_string($msg))\n\t\t$msg = var_export($msg,true);\n\tif(!empty($label))\n\t\t$msg = $label.\":\\n\".$msg;\n\t$upload_dir   = wp_upload_dir();\n\t \n\tif ( ! empty( $upload_dir['basedir'] ) ) {\n\t\t$fname = $upload_dir['basedir'].'/'.$filename_base.'_log_'.date('Y-m-d').'.txt';\n\t\tfile_put_contents($fname, date('r').\"\\n\".$msg.\"\\n\\n\", FILE_APPEND);\n\t\t//clean old logs\n\t\t$oldlog = $upload_dir['basedir'].'/'.$filename_base.'_log_'.date('Y-m-d',time() - 172800).'.txt';\n\t\tif (file_exists($oldlog)) {\n\t\t\tunlink($oldlog);\n\t\t}\n\t}\n}\n\t\n\nfunction rsvpmaker_map_meta_cap( $caps, $cap, $user_id, $args ) {\n    if (!empty($args[0]) && ( 'edit_post' == $cap || strpos($cap,'rsvpmaker') ) )\n    {\n        global $wpdb;\n\t\t$post_id = $args[0];\n\t\t$author = $wpdb->get_var(\"SELECT post_author FROM $wpdb->posts WHERE ID=\".intval($post_id));\n\t\t$eds = get_additional_editors($post_id);\n\t\tif(!current_user_can($cap[0]) && ($author != $user_id) && in_array($user_id, $eds) )\n        {\n            /* Set an empty array for the caps. */\n            $caps = array(); \n            $caps[] = 'edit_rsvpmakers';\n\t\t\tif(isset($_GET['action']) && ($_GET['action'] == 'edit'))\n\t\t\t{\n\t\t\t//if the current author is not already on the editors list, add them\n\t\t\tif(!$wpdb->get_var(\"SELECT meta_id FROM $wpdb->postmeta WHERE post_id=$post_id AND meta_key='_additional_editors' AND meta_value=$author\"))\n\t\t\t\tadd_post_meta($post_id, '_additional_editors',$author);\t\t\t\t\n\t\t\twp_update_post(array('ID' => $post_id, 'post_author' => $user_id));\n\t\t\t}\n        }\n    }\n    /* Return the capabilities required by the user. */\n    return $caps;\n}\n\nfunction auto_renew_project ($template_id, $notify = true) {\nglobal $rsvp_options;\n\n$sofar = get_events_by_template($template_id);\n$fts = 0;\nif(!empty($sofar))\n{\n\t$farthest = array_pop($sofar);\n\t$fts = rsvpmaker_strtotime($farthest->datetime);\n}\nif($fts > (time() + (2 * MONTH_IN_SECONDS)) )\n\treturn; // cancel if more than 2 months worth of events in system\n$sked = get_template_sked($template_id);\n$hour = str_pad($sked['hour'],2,'0',STR_PAD_LEFT);\n$minutes = str_pad($sked['minutes'],2,'0',STR_PAD_LEFT);\n\t\n//printf('<pre>%s</pre>',var_export($sked,true));\nif(!isset($sked[\"week\"]))\n\treturn;\n$added = ($fts) ? sprintf('<p>In addition to previously published dates ending %s</p>',rsvpmaker_date($rsvp_options['long_date'],$fts)).\"\\n\" : '';\n$projected = rsvpmaker_get_projected($sked);\nif($projected)\nforeach($projected as $i => $ts)\n{\nif(($ts < current_time('timestamp')))\n\tcontinue; // omit dates past\nif(isset($fts) && $ts <= $fts)\n\tcontinue;\n$post = get_post($template_id);\n$date = rsvpmaker_date('Y-m-d',$ts).' '.$hour.':'.$minutes.':00';\n$added .= add_rsvpmaker_from_template($post, $sked, $date, $ts);\n} // end for loop\n\nif($notify && !empty($added))\n\t{\n\t\t$admin = get_option('admin_email');\n\t\t$mail['subject'] = __('Dates added for '.$post->post_title,'rsvpmaker');\n\t\t$mail['html'] = \"<p>Dates added according to recurring event schedule.</p>\\n\".$added;\n\t\t$mail['to'] = $admin;\n\t\t$mail['from'] = $admin;\n\t\t$mail['fromname'] = get_bloginfo('name');\n\t\trsvpmailer($mail);\n\t}\n}\n\nfunction add_rsvpmaker_from_template($post, $template, $date, $ts) {\n\tglobal $wpdb, $rsvp_options;\n\tif($post->post_status != 'publish')\n\t\treturn;\n\t$t = $post->ID;\n\t$my_post['post_title'] = $post->post_title;\n\t$my_post['post_content'] = $post->post_content;\n\t$my_post['post_status'] = 'publish';\n\t$my_post['post_author'] = $post->post_author;\n\t$my_post['post_type'] = 'rsvpmaker';\n\t\t\tif(empty($template[\"duration\"]))\n\t\t\t\t$template[\"duration\"] = '';\t\t\t\n\t\t\t$dpart = explode(':',$template[\"duration\"]);\n\t\t\t\n\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t{\n\t\t\t\t$dtext = $cddate.' +'.$dpart[0].' hours';\n\t\t\t\tif(!empty($dpart[1]))\n\t\t\t\t\t$dtext .= ' +'.$dpart[1].' minutes';\n\t\t\t\t$dt = rsvpmaker_strtotime($dtext);\n\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$dt);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t$duration = (isset($template[\"duration\"])) ? $template[\"duration\"] : '';\n\t\t\t$my_post['post_name'] = sanitize_title($my_post['post_title'] . '-' .$date );\n  \t\t\t$added = '';\n\t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\t$prettydate = rsvpmaker_date($rsvp_options['long_date'],$ts);\n\t\t\t\t$added = sprintf('<p>%s <a href=\"%s\">%s</a> / <a href=\"%s\">%s</a> / <a href=\"%s\">%s</a> </p>',$prettydate,get_permalink($post_id),__('View','rsvpmaker'),admin_url(\"post.php?post=$post_id&action=edit\"),__('Edit','rsvpmaker'),admin_url(\"edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=$post_id&trash=1\"),__('Trash','rsvpmaker'));\n\t\t\t\tadd_rsvpmaker_date($post_id,$date,$duration);\t\t\t\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\t$upts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$post_id);\n\t\t\t\tupdate_post_meta($post_id,\"_updated_from_template\",$upts);\n\t\t\t\trsvpmaker_copy_metadata($t, $post_id);\n\t\t\t\trsvpmaker_update_event_row($post_id);\n\t\t\t}\n\treturn $added;\n}\n\nfunction rsvpautorenew_test () {\nglobal $rsvp_options;\n\t\n\tglobal $wpdb;\n\t$wpdb->show_errors();\n\n\t$sql = \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE meta_key='rsvpautorenew' AND meta_value=1 AND $wpdb->posts.post_status='publish' \";\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $row)\n\t{\n\t\tauto_renew_project ($row->ID);\n\t}\n\t$sql = \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE meta_key='rsvpmaker_template_reminder' \";\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $row)\n\t{\t\t\n\t\t$thours = unserialize($row->meta_value);\n\t\t$next = rsvpmaker_next_by_template($row->ID);\n\t\tif(empty($next))\n\t\t\treturn;\n\t\t$message = get_post_meta($next->ID, '_rsvp_reminder_msg_'.$thours[0], true);\n\t\tif(!empty($message))\n\t\t\tcontinue; // already set\n\t\t$start_time = rsvpmaker_strtotime($next->datetime);\n\t\t$prettydate = rsvpmaker_date('l F jS g:i A T',rsvpmaker_strtotime($next->datetime));\n\t\t$include_event = get_post_meta($row->ID, '_rsvp_confirmation_include_event', true);\n\t\tupdate_post_meta($next->ID, '_rsvp_confirmation_include_event',$include_event);\n\t\tforeach($thours as $hours) {\n\t\t\t$message = get_post_meta($row->ID, '_rsvp_reminder_msg_'.$hours, true);\n\t\t\t$subject = get_post_meta($row->ID, '_rsvp_reminder_subject_'.$hours, true);\n\t\t\t$subject = str_replace('[datetime]',$prettydate,$subject);\n\t\t\tupdate_post_meta($next->ID, '_rsvp_reminder_msg_'.$hours,$message);\n\t\t\tupdate_post_meta($next->ID, '_rsvp_reminder_subject_'.$hours,$subject);\n\t\t\trsvpmaker_reminder_cron($hours, $start_time, $next->ID);\n\t\t}\n\t}\n}\n\nfunction rsvpmaker_template_checkbox_post () {\n\nif(empty($_POST) || empty($_REQUEST['t']) || empty($_REQUEST['page']) || ($_REQUEST['page'] != 'rsvpmaker_template_list'))\n\treturn;\nglobal $wpdb, $current_user;\n$t = (int) $_REQUEST['t'];\n$post = get_post($t);\n$template = $sked = get_template_sked($t);\n$template['hour'] = (int) $template['hour'];\nif($template['hour'] < 10)\n\t$template['hour'] = $sked['hour'] = '0'.$template['hour']; // make sure of zero padding\n$hour = $sked['hour'];\n$minutes = $sked['minutes'];\n$update_messages = '';\n\t\nif(!empty($_POST['trash_template']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\tforeach($_POST['trash_template'] as $id)\n\t\twp_trash_post((int) $id);\n\t$count = sizeof($_POST['trash_template']);\n\t$update_messages = '<div class=\"updated\">'.$count.' '.__('event posts moved to trash','rsvpmaker').'</div>';\n}\n\nif(isset($_POST[\"timechange\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\tforeach($_POST[\"timechange\"] as $id => $time)\n\t\t\tupdate_post_meta($id,'_rsvp_dates',sanitize_text_field($time));\n\t\tdelete_transient('rsvpmakerdates');\n\t}\n\nif(isset($_POST[\"update_from_template\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\tforeach($_POST[\"update_from_template\"] as $target_id)\n\t\t\t{\n\t\t\t\t$target_id = (int) $target_id;\n\t\t\t\tif(!current_user_can('publish_rsvpmakers'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$update_messages .= '<div class=\"updated\">Error</div>';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t$update_post['ID'] = $target_id;\n\t\t\t\t$update_post['post_title'] = $post->post_title;\n\t\t\t\t$update_post['post_content'] = $post->post_content;\n\t\t\t\twp_update_post($update_post);\n\t\t\t\trsvpmaker_copy_metadata($t, $target_id);\n\t\t\t\t$ts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$target_id);\n\t\t\t\tupdate_post_meta($target_id,\"_updated_from_template\",$ts);\n\t\t\t\t$duration = (empty($template[\"duration\"])) ? '' : $template[\"duration\"];\n\t\t\t\t$end_time = (empty($template['end'])) ? '' : $template['end'];\n\t\t\t\t$cddate = get_rsvpmaker_meta($target_id,'_rsvp_dates',true);\n\t\t\t\tif(!empty($cddate))\n\t\t\t\t\t{\n\t\t\t\t\t$parts = explode(' ',$cddate);\n\t\t\t\t\t$cddate = $parts[0].' '.$template['hour'].':'.$template['minutes'].':00';\t\t\n\t\t\t\t\tupdate_rsvpmaker_date($target_id,$cddate,$duration,$end_time);\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\tif(isset($rsvptypes))\n\t\t\t\t\twp_set_object_terms( $target_id, $rsvptypes, 'rsvpmaker-type', true );\n\n\t\t\t\t$update_messages .= '<div class=\"updated\">Updated: event #'.$target_id.' <a href=\"post.php?action=edit&post='.$target_id.'\">Edit</a> / <a href=\"'.get_post_permalink($target_id).'\">View</a></div>';\t\n\t\t\t}\n\t}\n\nif(isset($_POST[\"detach_from_template\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\tif(!current_user_can('publish_rsvpmakers'))\n\t{\n\t\t$update_messages .= '<div class=\"updated\">Error</div>';\n\t}\n\telse\n\tforeach($_POST[\"detach_from_template\"] as $target_id)\n\t\t{\n\t\t\t$target_id = (int) $target_id;\n\t\t\t$sql = $wpdb->prepare(\"UPDATE $wpdb->postmeta SET meta_key='_detached_from_template' WHERE meta_key='_meet_recur' AND post_id=%d\", $target_id);\n\t\t\t$result = $wpdb->query($sql);\n\t\t\t$update_messages .= '<div class=\"updated\">Detached from Template: event #'.$target_id.' <a href=\"post.php?action=edit&post='.$target_id.'\">Edit</a> / <a href=\"'.get_post_permalink($target_id).'\">View</a></div>';\t\n\t\t}\n}\n\n\nif(isset($_POST[\"recur_check\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\n\t$my_post['post_title'] = $post->post_title;\n\t$my_post['post_content'] = $post->post_content;\n\t$my_post['post_status'] = (($_POST['newstatus'] == 'publish') && current_user_can('publish_rsvpmakers')) ? 'publish' : 'draft';\n\t$my_post['post_author'] = $current_user->ID;\n\t$my_post['post_type'] = 'rsvpmaker';\n\n\tforeach($_POST[\"recur_check\"] as $index => $on)\n\t\t{\n\t\t\t$year = $y = (int) $_POST[\"recur_year\"][$index];\n\t\t\t$cddate = format_cddate($year, sanitize_text_field($_POST[\"recur_month\"][$index]), sanitize_text_field($_POST[\"recur_day\"][$index]), $hour, $minutes);\n\t\t\t$m = (int) $_POST[\"recur_month\"][$index];\n\t\t\t$d = (int) $_POST[\"recur_day\"][$index];\n\t\t\tif($m < 10) $m = '0'.$m;\n\t\t\t$d = (int) $_POST[\"recur_day\"][$index];\n\t\t\tif($d < 10) $d = '0'.$d;\n\t\t\t$date = $y.'-'.$m.'-'.$d;\n\t\t\tif(empty($template[\"duration\"]))\n\t\t\t\t$template[\"duration\"] = '';\t\t\t\n\t\t\t$dpart = explode(':',$template[\"duration\"]);\n\t\t\t\n\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t{\n\t\t\t\t$dtext = $cddate.' +'.$dpart[0].' hours';\n\t\t\t\tif(!empty($dpart[1]))\n\t\t\t\t\t$dtext .= ' +'.$dpart[1].' minutes';\n\t\t\t\t$dt = rsvpmaker_strtotime($dtext);\n\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$dt);\n\t\t\t\t}\n\t\t\telse{\n\t\t\t\t$duration = (isset($template[\"duration\"])) ? $template[\"duration\"] : '';\n\t\t\t}\n\t\t\t\n\t\t\tif(!empty($_POST[\"recur_title\"][$index])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t\t\t$my_post['post_title'] = sanitize_text_field($_POST[\"recur_title\"][$index]);\n\n\t\t\t$my_post['post_name'] = $my_post['post_title'] . '-' .$date;\n\t\t\t$singular = __('Event','rsvpmaker');\n// Insert the post into the database\n  \t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\t$end_time = (empty($template['end'])) ? '' : $template['end'];\t\n\t\t\t\tupdate_rsvpmaker_date($post_id,$cddate,$duration,$end_time);\n\t\t\t\t$timezone = rsvpmaker_get_timezone_string($t);\n\t\t\t\trsvpmaker_add_event_row ($post_id, $cddate, $end_time, $duration,$timezone,$my_post['post_title']);\n\t\t\t\tif($my_post[\"post_status\"] == 'publish')\n\t\t\t\t\t$update_messages .=  '<div class=\"updated\">Posted: event for '.$cddate.' <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($post_id).'\">View</a></div>';\n\t\t\t\telse\n\t\t\t\t\t$update_messages .= '<div class=\"updated\">Draft for '.$cddate.' <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($post_id).'\">Preview</a></div>';\n\t\t\t\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\t$ts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$post_id);\n\t\t\t\tupdate_post_meta($post_id,\"_updated_from_template\",$ts);\n\t\t\t\trsvpmaker_copy_metadata($t, $post_id);\n\t\t\t\trsvpmaker_update_event_row($post_id);\n\t\t\t\t}\n\t\t\n\t\t}\n}\n\nif(isset($_POST[\"nomeeting\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  )\n{\n\t$my_post['post_title'] = __('No Meeting','rsvpmaker').': '.$post->post_title;\n\t$my_post['post_content'] = sanitize_textarea_field($_POST[\"nomeeting_note\"]);\n\t$my_post['post_status'] = current_user_can('publish_rsvpmakers') ? 'publish' : 'draft';\n\t$my_post['post_author'] = $current_user->ID;\n\t$my_post['post_type'] = 'rsvpmaker';\n\t\n\tif(!strpos($_POST[\"nomeeting\"],'-'))\n\t\t{ //update vs new post\n\t\t\t$id = (int) $_POST[\"nomeeting\"];\n\t\t\t$sql = $wpdb->prepare(\"UPDATE $wpdb->posts SET post_title=%s, post_content=%s WHERE ID=%d\",$my_post['post_title'],$my_post['post_content'],$id);\n\t\t\t$wpdb->show_errors();\n\t\t\t$return = $wpdb->query($sql);\n\t\t\tif($return == false)\n\t\t\t\t$update_messages .= '<div class=\"updated\">'.\"Error: $sql.</div>\\n\";\n\t\t\telse\n\t\t\t\t$update_messages .=  '<div class=\"updated\">Updated: no meeting <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($id).'\">View</a></div>';\t\n\t\t}\n\telse\n\t\t{\n\t\t\t$cddate = sanitize_text_field($_POST[\"nomeeting\"]).' 00:00:00';\n\t\t\t$my_post['post_name'] = $my_post['post_title'] . '-' .$cddate;\n\n// Insert the post into the database\n  \t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\tadd_rsvpmaker_date($post_id,$cddate,'allday');\n\t\t\t\t$update_messages .=  '<div class=\"updated\">Posted: event for '.$cddate.' <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($post_id).'\">View</a></div>';\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\trsvpmaker_update_event_row($post_id);\n\t\t\t\t}\n\t\t}\t\t\n}\n\tupdate_post_meta($t,'update_messages',$update_messages);\n\theader('Location: ' . admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&update_messages=1&t='.$t));\n\tdie();\n}\n\nfunction rsvpmaker_copy_metadata($source_id, $target_id) {\nglobal $wpdb;\n$log = '';\n//copy metadata\n$meta_keys = array();\n$post_meta_infos = $wpdb->get_results(\"SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$source_id\");\n$post_meta_infos = apply_filters('rsvpmaker_meta_update_from_template',$post_meta_infos);\n\n\t\tif (count($post_meta_infos)!=0) {\n\t\t\tforeach ($post_meta_infos as $meta_info) {\n\t\t\t\t$meta_key = $meta_info->meta_key;\n\t\t\t\tif(in_array($meta_key,$meta_keys))\n\t\t\t\t\tcontinue;\n\t\t\t\t$meta_keys[] = $meta_key;\n\t\t\t\t$meta_protect = array('_rsvp_reminder', '_sked', '_edit_lock','_additional_editors','rsvpautorenew','_meet_recur','_rsvp_dates');\n\t\t\t\tif(in_array($meta_key, $meta_protect) || strpos($meta_key,'sked') )\n\t\t\t\t{\n\t\t\t\t\t$log .= 'Skip '.$meta_key.'<br />';\n\t\t\t\t\tcontinue;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telseif(strpos($meta_key,'_note') || preg_match('/^_[A-Z]/',$meta_key) ) //agenda note or any other note\n\t\t\t\t\t{\n\t\t\t\t\t\t$log .= 'Skip '.$meta_key.'<br />';\n\t\t\t\t\t\tcontinue;\t\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$log .= 'Copy '.$meta_key.': '.$meta_info->meta_value.'<br />';\t\t\t\n\t\t\t\t}\n\t\t\t\tif(is_serialized($meta_info->meta_value))\n\t\t\t\t\tupdate_post_meta($target_id,$meta_key,unserialize($meta_info->meta_value));\n\t\t\t\telse\n\t\t\t\t\tupdate_post_meta($target_id,$meta_key,$meta_info->meta_value);\n\t\t\t\tif($meta_key == '_rsvp_deadline_daysbefore')\n\t\t\t\t\t$deadlinedays = $meta_info->meta_value;\t\t\n\t\t\t\tif($meta_key == '_rsvp_deadline_hours')\n\t\t\t\t\t$deadlinehours = $meta_info->meta_value;\t\t\n\t\t\t\tif($meta_key == '_rsvp_reg_daysbefore')\n\t\t\t\t\t$regdays = $meta_info->meta_value;\t\t\n\t\t\t\tif($meta_key == '_rsvp_reg_hours')\n\t\t\t\t\t$reghours = $meta_info->meta_value;\t\t\n\t\t\t}\n\t\t}\n\nif(!empty($deadlinedays) || !empty($deadlinehours))\n\trsvpmaker_deadline_from_template($target_id,$deadlinedays,$deadlinehours);\nif(!empty($regdays) || !empty($reghours))\n\trsvpmaker_reg_from_template($target_id,$regdays,$reghours);\n\n$terms = get_the_terms( $source_id, 'rsvpmaker-type' );\t\t\t\t\t\t\nif ( $terms && ! is_wp_error( $terms ) ) { \n\t$rsvptypes = array();\n\n\tforeach ( $terms as $term ) {\n\t\t$rsvptypes[] = $term->term_id;\n\t}\nwp_set_object_terms( $target_id, $rsvptypes, 'rsvpmaker-type', true );\n\n\t} // if terms\n\n}\n\nfunction rsvpmaker_deadline_from_template($target_id,$deadlinedays,$deadlinehours) {\n\t$t = get_rsvpmaker_timestamp($target_id);\n\tif(!empty($deadlinedays))\n\t\t$t -= ($deadlinedays * 60 * 60 * 24);\n\tif(!empty($deadlinehours))\n\t\t$t -= ($deadlinehours * 60 * 60);\n\tupdate_post_meta($target_id,'_rsvp_deadline',$t);\n}\nfunction rsvpmaker_reg_from_template($target_id,$days,$hours) {\n\t$t = get_rsvpmaker_timestamp($target_id);\n\tif(!empty($days))\n\t\t$t -= ($days * 60 * 60 * 24);\n\tif(!empty($hours))\n\t\t$t -= ($hours * 60 * 60);\n\tupdate_post_meta($target_id,'_rsvp_start',$t);\n}\n\nfunction rsvp_time_options ($post_id) {\nglobal $rsvp_options;\n$forms = rsvpmaker_get_forms();\nif(empty($post_id))\n{\n\t$icons = $rsvp_options[\"calendar_icons\"];\n\t$add_timezone = $rsvp_options[\"add_timezone\"];\n\t$convert_timezone = $rsvp_options[\"convert_timezone\"];\n\t$rsvp_timezone = '';\n}\nelse {\n\t$icons = get_rsvpmaker_meta($post_id,\"_calendar_icons\",true);\n\t$add_timezone = get_rsvpmaker_meta($post_id,\"_add_timezone\",true);\n\t$convert_timezone = get_rsvpmaker_meta($post_id,\"_convert_timezone\",true);\n\t$rsvp_timezone = get_rsvpmaker_meta($post_id,\"_rsvp_timezone_string\",true);\t\n}\nif(isset($_GET['page']) && ( ($_GET['page'] == 'rsvpmaker_details') ) )\n{\n?>\n<input type=\"checkbox\" name=\"calendar_icons\" value=\"1\" <?php if($icons) echo ' checked=\"checked\" ';?> /> <?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?> \n<br />\n<p id=\"timezone_options\">\n<?php\nif(!strpos($rsvp_options[\"time_format\"],'T') )\n{\n?>\n<input type=\"checkbox\" name=\"add_timezone\" value=\"1\" <?php if($add_timezone) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); echo ' '; ?>\n<?php\n}\n?>\n<input type=\"checkbox\" name=\"convert_timezone\" value=\"1\" <?php if($convert_timezone) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?>\n</p>\n<p>Timezone <select id=\"timezone_string\" name=\"setrsvp[timezone_string]\">\n\t<option value=\"<?php echo esc_attr($rsvp_timezone);?>\"><?php echo (empty($rsvp_timezone)) ? __('Default','rsvpmaker') : $rsvp_timezone?></option>\n<optgroup label=\"U.S. Mainland\">\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n</optgroup>\n<optgroup label=\"Africa\">\n<option value=\"Africa/Abidjan\">Abidjan</option>\n<option value=\"Africa/Accra\">Accra</option>\n<option value=\"Africa/Addis_Ababa\">Addis Ababa</option>\n<option value=\"Africa/Algiers\">Algiers</option>\n<option value=\"Africa/Asmara\">Asmara</option>\n<option value=\"Africa/Bamako\">Bamako</option>\n<option value=\"Africa/Bangui\">Bangui</option>\n<option value=\"Africa/Banjul\">Banjul</option>\n<option value=\"Africa/Bissau\">Bissau</option>\n<option value=\"Africa/Blantyre\">Blantyre</option>\n<option value=\"Africa/Brazzaville\">Brazzaville</option>\n<option value=\"Africa/Bujumbura\">Bujumbura</option>\n<option value=\"Africa/Cairo\">Cairo</option>\n<option value=\"Africa/Casablanca\">Casablanca</option>\n<option value=\"Africa/Ceuta\">Ceuta</option>\n<option value=\"Africa/Conakry\">Conakry</option>\n<option value=\"Africa/Dakar\">Dakar</option>\n<option value=\"Africa/Dar_es_Salaam\">Dar es Salaam</option>\n<option value=\"Africa/Djibouti\">Djibouti</option>\n<option value=\"Africa/Douala\">Douala</option>\n<option value=\"Africa/El_Aaiun\">El Aaiun</option>\n<option value=\"Africa/Freetown\">Freetown</option>\n<option value=\"Africa/Gaborone\">Gaborone</option>\n<option value=\"Africa/Harare\">Harare</option>\n<option value=\"Africa/Johannesburg\">Johannesburg</option>\n<option value=\"Africa/Juba\">Juba</option>\n<option value=\"Africa/Kampala\">Kampala</option>\n<option value=\"Africa/Khartoum\">Khartoum</option>\n<option value=\"Africa/Kigali\">Kigali</option>\n<option value=\"Africa/Kinshasa\">Kinshasa</option>\n<option value=\"Africa/Lagos\">Lagos</option>\n<option value=\"Africa/Libreville\">Libreville</option>\n<option value=\"Africa/Lome\">Lome</option>\n<option value=\"Africa/Luanda\">Luanda</option>\n<option value=\"Africa/Lubumbashi\">Lubumbashi</option>\n<option value=\"Africa/Lusaka\">Lusaka</option>\n<option value=\"Africa/Malabo\">Malabo</option>\n<option value=\"Africa/Maputo\">Maputo</option>\n<option value=\"Africa/Maseru\">Maseru</option>\n<option value=\"Africa/Mbabane\">Mbabane</option>\n<option value=\"Africa/Mogadishu\">Mogadishu</option>\n<option value=\"Africa/Monrovia\">Monrovia</option>\n<option value=\"Africa/Nairobi\">Nairobi</option>\n<option value=\"Africa/Ndjamena\">Ndjamena</option>\n<option value=\"Africa/Niamey\">Niamey</option>\n<option value=\"Africa/Nouakchott\">Nouakchott</option>\n<option value=\"Africa/Ouagadougou\">Ouagadougou</option>\n<option value=\"Africa/Porto-Novo\">Porto-Novo</option>\n<option value=\"Africa/Sao_Tome\">Sao Tome</option>\n<option value=\"Africa/Tripoli\">Tripoli</option>\n<option value=\"Africa/Tunis\">Tunis</option>\n<option value=\"Africa/Windhoek\">Windhoek</option>\n</optgroup>\n<optgroup label=\"America\">\n<option value=\"America/Adak\">Adak</option>\n<option value=\"America/Anchorage\">Anchorage</option>\n<option value=\"America/Anguilla\">Anguilla</option>\n<option value=\"America/Antigua\">Antigua</option>\n<option value=\"America/Araguaina\">Araguaina</option>\n<option value=\"America/Argentina/Buenos_Aires\">Argentina - Buenos Aires</option>\n<option value=\"America/Argentina/Catamarca\">Argentina - Catamarca</option>\n<option value=\"America/Argentina/Cordoba\">Argentina - Cordoba</option>\n<option value=\"America/Argentina/Jujuy\">Argentina - Jujuy</option>\n<option value=\"America/Argentina/La_Rioja\">Argentina - La Rioja</option>\n<option value=\"America/Argentina/Mendoza\">Argentina - Mendoza</option>\n<option value=\"America/Argentina/Rio_Gallegos\">Argentina - Rio Gallegos</option>\n<option value=\"America/Argentina/Salta\">Argentina - Salta</option>\n<option value=\"America/Argentina/San_Juan\">Argentina - San Juan</option>\n<option value=\"America/Argentina/San_Luis\">Argentina - San Luis</option>\n<option value=\"America/Argentina/Tucuman\">Argentina - Tucuman</option>\n<option value=\"America/Argentina/Ushuaia\">Argentina - Ushuaia</option>\n<option value=\"America/Aruba\">Aruba</option>\n<option value=\"America/Asuncion\">Asuncion</option>\n<option value=\"America/Atikokan\">Atikokan</option>\n<option value=\"America/Bahia\">Bahia</option>\n<option value=\"America/Bahia_Banderas\">Bahia Banderas</option>\n<option value=\"America/Barbados\">Barbados</option>\n<option value=\"America/Belem\">Belem</option>\n<option value=\"America/Belize\">Belize</option>\n<option value=\"America/Blanc-Sablon\">Blanc-Sablon</option>\n<option value=\"America/Boa_Vista\">Boa Vista</option>\n<option value=\"America/Bogota\">Bogota</option>\n<option value=\"America/Boise\">Boise</option>\n<option value=\"America/Cambridge_Bay\">Cambridge Bay</option>\n<option value=\"America/Campo_Grande\">Campo Grande</option>\n<option value=\"America/Cancun\">Cancun</option>\n<option value=\"America/Caracas\">Caracas</option>\n<option value=\"America/Cayenne\">Cayenne</option>\n<option value=\"America/Cayman\">Cayman</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Chihuahua\">Chihuahua</option>\n<option value=\"America/Costa_Rica\">Costa Rica</option>\n<option value=\"America/Creston\">Creston</option>\n<option value=\"America/Cuiaba\">Cuiaba</option>\n<option value=\"America/Curacao\">Curacao</option>\n<option value=\"America/Danmarkshavn\">Danmarkshavn</option>\n<option value=\"America/Dawson\">Dawson</option>\n<option value=\"America/Dawson_Creek\">Dawson Creek</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Detroit\">Detroit</option>\n<option value=\"America/Dominica\">Dominica</option>\n<option value=\"America/Edmonton\">Edmonton</option>\n<option value=\"America/Eirunepe\">Eirunepe</option>\n<option value=\"America/El_Salvador\">El Salvador</option>\n<option value=\"America/Fortaleza\">Fortaleza</option>\n<option value=\"America/Glace_Bay\">Glace Bay</option>\n<option value=\"America/Godthab\">Godthab</option>\n<option value=\"America/Goose_Bay\">Goose Bay</option>\n<option value=\"America/Grand_Turk\">Grand Turk</option>\n<option value=\"America/Grenada\">Grenada</option>\n<option value=\"America/Guadeloupe\">Guadeloupe</option>\n<option value=\"America/Guatemala\">Guatemala</option>\n<option value=\"America/Guayaquil\">Guayaquil</option>\n<option value=\"America/Guyana\">Guyana</option>\n<option value=\"America/Halifax\">Halifax</option>\n<option value=\"America/Havana\">Havana</option>\n<option value=\"America/Hermosillo\">Hermosillo</option>\n<option value=\"America/Indiana/Indianapolis\">Indiana - Indianapolis</option>\n<option value=\"America/Indiana/Knox\">Indiana - Knox</option>\n<option value=\"America/Indiana/Marengo\">Indiana - Marengo</option>\n<option value=\"America/Indiana/Petersburg\">Indiana - Petersburg</option>\n<option value=\"America/Indiana/Tell_City\">Indiana - Tell City</option>\n<option value=\"America/Indiana/Vevay\">Indiana - Vevay</option>\n<option value=\"America/Indiana/Vincennes\">Indiana - Vincennes</option>\n<option value=\"America/Indiana/Winamac\">Indiana - Winamac</option>\n<option value=\"America/Inuvik\">Inuvik</option>\n<option value=\"America/Iqaluit\">Iqaluit</option>\n<option value=\"America/Jamaica\">Jamaica</option>\n<option value=\"America/Juneau\">Juneau</option>\n<option value=\"America/Kentucky/Louisville\">Kentucky - Louisville</option>\n<option value=\"America/Kentucky/Monticello\">Kentucky - Monticello</option>\n<option value=\"America/Kralendijk\">Kralendijk</option>\n<option value=\"America/La_Paz\">La Paz</option>\n<option value=\"America/Lima\">Lima</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n<option value=\"America/Lower_Princes\">Lower Princes</option>\n<option value=\"America/Maceio\">Maceio</option>\n<option value=\"America/Managua\">Managua</option>\n<option value=\"America/Manaus\">Manaus</option>\n<option value=\"America/Marigot\">Marigot</option>\n<option value=\"America/Martinique\">Martinique</option>\n<option value=\"America/Matamoros\">Matamoros</option>\n<option value=\"America/Mazatlan\">Mazatlan</option>\n<option value=\"America/Menominee\">Menominee</option>\n<option value=\"America/Merida\">Merida</option>\n<option value=\"America/Metlakatla\">Metlakatla</option>\n<option value=\"America/Mexico_City\">Mexico City</option>\n<option value=\"America/Miquelon\">Miquelon</option>\n<option value=\"America/Moncton\">Moncton</option>\n<option value=\"America/Monterrey\">Monterrey</option>\n<option value=\"America/Montevideo\">Montevideo</option>\n<option value=\"America/Montserrat\">Montserrat</option>\n<option value=\"America/Nassau\">Nassau</option>\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Nipigon\">Nipigon</option>\n<option value=\"America/Nome\">Nome</option>\n<option value=\"America/Noronha\">Noronha</option>\n<option value=\"America/North_Dakota/Beulah\">North Dakota - Beulah</option>\n<option value=\"America/North_Dakota/Center\">North Dakota - Center</option>\n<option value=\"America/North_Dakota/New_Salem\">North Dakota - New Salem</option>\n<option value=\"America/Ojinaga\">Ojinaga</option>\n<option value=\"America/Panama\">Panama</option>\n<option value=\"America/Pangnirtung\">Pangnirtung</option>\n<option value=\"America/Paramaribo\">Paramaribo</option>\n<option value=\"America/Phoenix\">Phoenix</option>\n<option value=\"America/Port-au-Prince\">Port-au-Prince</option>\n<option value=\"America/Port_of_Spain\">Port of Spain</option>\n<option value=\"America/Porto_Velho\">Porto Velho</option>\n<option value=\"America/Puerto_Rico\">Puerto Rico</option>\n<option value=\"America/Rainy_River\">Rainy River</option>\n<option value=\"America/Rankin_Inlet\">Rankin Inlet</option>\n<option value=\"America/Recife\">Recife</option>\n<option value=\"America/Regina\">Regina</option>\n<option value=\"America/Resolute\">Resolute</option>\n<option value=\"America/Rio_Branco\">Rio Branco</option>\n<option value=\"America/Santa_Isabel\">Santa Isabel</option>\n<option value=\"America/Santarem\">Santarem</option>\n<option value=\"America/Santiago\">Santiago</option>\n<option value=\"America/Santo_Domingo\">Santo Domingo</option>\n<option value=\"America/Sao_Paulo\">Sao Paulo</option>\n<option value=\"America/Scoresbysund\">Scoresbysund</option>\n<option value=\"America/Sitka\">Sitka</option>\n<option value=\"America/St_Barthelemy\">St Barthelemy</option>\n<option value=\"America/St_Johns\">St Johns</option>\n<option value=\"America/St_Kitts\">St Kitts</option>\n<option value=\"America/St_Lucia\">St Lucia</option>\n<option value=\"America/St_Thomas\">St Thomas</option>\n<option value=\"America/St_Vincent\">St Vincent</option>\n<option value=\"America/Swift_Current\">Swift Current</option>\n<option value=\"America/Tegucigalpa\">Tegucigalpa</option>\n<option value=\"America/Thule\">Thule</option>\n<option value=\"America/Thunder_Bay\">Thunder Bay</option>\n<option value=\"America/Tijuana\">Tijuana</option>\n<option value=\"America/Toronto\">Toronto</option>\n<option value=\"America/Tortola\">Tortola</option>\n<option value=\"America/Vancouver\">Vancouver</option>\n<option value=\"America/Whitehorse\">Whitehorse</option>\n<option value=\"America/Winnipeg\">Winnipeg</option>\n<option value=\"America/Yakutat\">Yakutat</option>\n<option value=\"America/Yellowknife\">Yellowknife</option>\n</optgroup>\n<optgroup label=\"Antarctica\">\n<option value=\"Antarctica/Casey\">Casey</option>\n<option value=\"Antarctica/Davis\">Davis</option>\n<option value=\"Antarctica/DumontDUrville\">DumontDUrville</option>\n<option value=\"Antarctica/Macquarie\">Macquarie</option>\n<option value=\"Antarctica/Mawson\">Mawson</option>\n<option value=\"Antarctica/McMurdo\">McMurdo</option>\n<option value=\"Antarctica/Palmer\">Palmer</option>\n<option value=\"Antarctica/Rothera\">Rothera</option>\n<option value=\"Antarctica/Syowa\">Syowa</option>\n<option value=\"Antarctica/Troll\">Troll</option>\n<option value=\"Antarctica/Vostok\">Vostok</option>\n</optgroup>\n<optgroup label=\"Arctic\">\n<option value=\"Arctic/Longyearbyen\">Longyearbyen</option>\n</optgroup>\n<optgroup label=\"Asia\">\n<option value=\"Asia/Aden\">Aden</option>\n<option value=\"Asia/Almaty\">Almaty</option>\n<option value=\"Asia/Amman\">Amman</option>\n<option value=\"Asia/Anadyr\">Anadyr</option>\n<option value=\"Asia/Aqtau\">Aqtau</option>\n<option value=\"Asia/Aqtobe\">Aqtobe</option>\n<option value=\"Asia/Ashgabat\">Ashgabat</option>\n<option value=\"Asia/Baghdad\">Baghdad</option>\n<option value=\"Asia/Bahrain\">Bahrain</option>\n<option value=\"Asia/Baku\">Baku</option>\n<option value=\"Asia/Bangkok\">Bangkok</option>\n<option value=\"Asia/Beirut\">Beirut</option>\n<option value=\"Asia/Bishkek\">Bishkek</option>\n<option value=\"Asia/Brunei\">Brunei</option>\n<option value=\"Asia/Chita\">Chita</option>\n<option value=\"Asia/Choibalsan\">Choibalsan</option>\n<option value=\"Asia/Colombo\">Colombo</option>\n<option value=\"Asia/Damascus\">Damascus</option>\n<option value=\"Asia/Dhaka\">Dhaka</option>\n<option value=\"Asia/Dili\">Dili</option>\n<option value=\"Asia/Dubai\">Dubai</option>\n<option value=\"Asia/Dushanbe\">Dushanbe</option>\n<option value=\"Asia/Gaza\">Gaza</option>\n<option value=\"Asia/Hebron\">Hebron</option>\n<option value=\"Asia/Ho_Chi_Minh\">Ho Chi Minh</option>\n<option value=\"Asia/Hong_Kong\">Hong Kong</option>\n<option value=\"Asia/Hovd\">Hovd</option>\n<option value=\"Asia/Irkutsk\">Irkutsk</option>\n<option value=\"Asia/Jakarta\">Jakarta</option>\n<option value=\"Asia/Jayapura\">Jayapura</option>\n<option value=\"Asia/Jerusalem\">Jerusalem</option>\n<option value=\"Asia/Kabul\">Kabul</option>\n<option value=\"Asia/Kamchatka\">Kamchatka</option>\n<option value=\"Asia/Karachi\">Karachi</option>\n<option value=\"Asia/Kathmandu\">Kathmandu</option>\n<option value=\"Asia/Khandyga\">Khandyga</option>\n<option value=\"Asia/Kolkata\">Kolkata</option>\n<option value=\"Asia/Krasnoyarsk\">Krasnoyarsk</option>\n<option value=\"Asia/Kuala_Lumpur\">Kuala Lumpur</option>\n<option value=\"Asia/Kuching\">Kuching</option>\n<option value=\"Asia/Kuwait\">Kuwait</option>\n<option value=\"Asia/Macau\">Macau</option>\n<option value=\"Asia/Magadan\">Magadan</option>\n<option value=\"Asia/Makassar\">Makassar</option>\n<option value=\"Asia/Manila\">Manila</option>\n<option value=\"Asia/Muscat\">Muscat</option>\n<option value=\"Asia/Nicosia\">Nicosia</option>\n<option value=\"Asia/Novokuznetsk\">Novokuznetsk</option>\n<option value=\"Asia/Novosibirsk\">Novosibirsk</option>\n<option value=\"Asia/Omsk\">Omsk</option>\n<option value=\"Asia/Oral\">Oral</option>\n<option value=\"Asia/Phnom_Penh\">Phnom Penh</option>\n<option value=\"Asia/Pontianak\">Pontianak</option>\n<option value=\"Asia/Pyongyang\">Pyongyang</option>\n<option value=\"Asia/Qatar\">Qatar</option>\n<option value=\"Asia/Qyzylorda\">Qyzylorda</option>\n<option value=\"Asia/Rangoon\">Rangoon</option>\n<option value=\"Asia/Riyadh\">Riyadh</option>\n<option value=\"Asia/Sakhalin\">Sakhalin</option>\n<option value=\"Asia/Samarkand\">Samarkand</option>\n<option value=\"Asia/Seoul\">Seoul</option>\n<option value=\"Asia/Shanghai\">Shanghai</option>\n<option value=\"Asia/Singapore\">Singapore</option>\n<option value=\"Asia/Srednekolymsk\">Srednekolymsk</option>\n<option value=\"Asia/Taipei\">Taipei</option>\n<option value=\"Asia/Tashkent\">Tashkent</option>\n<option value=\"Asia/Tbilisi\">Tbilisi</option>\n<option value=\"Asia/Tehran\">Tehran</option>\n<option value=\"Asia/Thimphu\">Thimphu</option>\n<option value=\"Asia/Tokyo\">Tokyo</option>\n<option value=\"Asia/Ulaanbaatar\">Ulaanbaatar</option>\n<option value=\"Asia/Urumqi\">Urumqi</option>\n<option value=\"Asia/Ust-Nera\">Ust-Nera</option>\n<option value=\"Asia/Vientiane\">Vientiane</option>\n<option value=\"Asia/Vladivostok\">Vladivostok</option>\n<option value=\"Asia/Yakutsk\">Yakutsk</option>\n<option value=\"Asia/Yekaterinburg\">Yekaterinburg</option>\n<option value=\"Asia/Yerevan\">Yerevan</option>\n</optgroup>\n<optgroup label=\"Atlantic\">\n<option value=\"Atlantic/Azores\">Azores</option>\n<option value=\"Atlantic/Bermuda\">Bermuda</option>\n<option value=\"Atlantic/Canary\">Canary</option>\n<option value=\"Atlantic/Cape_Verde\">Cape Verde</option>\n<option value=\"Atlantic/Faroe\">Faroe</option>\n<option value=\"Atlantic/Madeira\">Madeira</option>\n<option value=\"Atlantic/Reykjavik\">Reykjavik</option>\n<option value=\"Atlantic/South_Georgia\">South Georgia</option>\n<option value=\"Atlantic/Stanley\">Stanley</option>\n<option value=\"Atlantic/St_Helena\">St Helena</option>\n</optgroup>\n<optgroup label=\"Australia\">\n<option value=\"Australia/Adelaide\">Adelaide</option>\n<option value=\"Australia/Brisbane\">Brisbane</option>\n<option value=\"Australia/Broken_Hill\">Broken Hill</option>\n<option value=\"Australia/Currie\">Currie</option>\n<option value=\"Australia/Darwin\">Darwin</option>\n<option value=\"Australia/Eucla\">Eucla</option>\n<option value=\"Australia/Hobart\">Hobart</option>\n<option value=\"Australia/Lindeman\">Lindeman</option>\n<option value=\"Australia/Lord_Howe\">Lord Howe</option>\n<option value=\"Australia/Melbourne\">Melbourne</option>\n<option value=\"Australia/Perth\">Perth</option>\n<option value=\"Australia/Sydney\">Sydney</option>\n</optgroup>\n<optgroup label=\"Europe\">\n<option value=\"Europe/Amsterdam\">Amsterdam</option>\n<option value=\"Europe/Andorra\">Andorra</option>\n<option value=\"Europe/Athens\">Athens</option>\n<option value=\"Europe/Belgrade\">Belgrade</option>\n<option value=\"Europe/Berlin\">Berlin</option>\n<option value=\"Europe/Bratislava\">Bratislava</option>\n<option value=\"Europe/Brussels\">Brussels</option>\n<option value=\"Europe/Bucharest\">Bucharest</option>\n<option value=\"Europe/Budapest\">Budapest</option>\n<option value=\"Europe/Busingen\">Busingen</option>\n<option value=\"Europe/Chisinau\">Chisinau</option>\n<option value=\"Europe/Copenhagen\">Copenhagen</option>\n<option value=\"Europe/Dublin\">Dublin</option>\n<option value=\"Europe/Gibraltar\">Gibraltar</option>\n<option value=\"Europe/Guernsey\">Guernsey</option>\n<option value=\"Europe/Helsinki\">Helsinki</option>\n<option value=\"Europe/Isle_of_Man\">Isle of Man</option>\n<option value=\"Europe/Istanbul\">Istanbul</option>\n<option value=\"Europe/Jersey\">Jersey</option>\n<option value=\"Europe/Kaliningrad\">Kaliningrad</option>\n<option value=\"Europe/Kiev\">Kiev</option>\n<option value=\"Europe/Lisbon\">Lisbon</option>\n<option value=\"Europe/Ljubljana\">Ljubljana</option>\n<option value=\"Europe/London\">London</option>\n<option value=\"Europe/Luxembourg\">Luxembourg</option>\n<option value=\"Europe/Madrid\">Madrid</option>\n<option value=\"Europe/Malta\">Malta</option>\n<option value=\"Europe/Mariehamn\">Mariehamn</option>\n<option value=\"Europe/Minsk\">Minsk</option>\n<option value=\"Europe/Monaco\">Monaco</option>\n<option value=\"Europe/Moscow\">Moscow</option>\n<option value=\"Europe/Oslo\">Oslo</option>\n<option value=\"Europe/Paris\">Paris</option>\n<option value=\"Europe/Podgorica\">Podgorica</option>\n<option value=\"Europe/Prague\">Prague</option>\n<option value=\"Europe/Riga\">Riga</option>\n<option value=\"Europe/Rome\">Rome</option>\n<option value=\"Europe/Samara\">Samara</option>\n<option value=\"Europe/San_Marino\">San Marino</option>\n<option value=\"Europe/Sarajevo\">Sarajevo</option>\n<option value=\"Europe/Simferopol\">Simferopol</option>\n<option value=\"Europe/Skopje\">Skopje</option>\n<option value=\"Europe/Sofia\">Sofia</option>\n<option value=\"Europe/Stockholm\">Stockholm</option>\n<option value=\"Europe/Tallinn\">Tallinn</option>\n<option value=\"Europe/Tirane\">Tirane</option>\n<option value=\"Europe/Uzhgorod\">Uzhgorod</option>\n<option value=\"Europe/Vaduz\">Vaduz</option>\n<option value=\"Europe/Vatican\">Vatican</option>\n<option value=\"Europe/Vienna\">Vienna</option>\n<option value=\"Europe/Vilnius\">Vilnius</option>\n<option value=\"Europe/Volgograd\">Volgograd</option>\n<option value=\"Europe/Warsaw\">Warsaw</option>\n<option value=\"Europe/Zagreb\">Zagreb</option>\n<option value=\"Europe/Zaporozhye\">Zaporozhye</option>\n<option value=\"Europe/Zurich\">Zurich</option>\n</optgroup>\n<optgroup label=\"Indian\">\n<option value=\"Indian/Antananarivo\">Antananarivo</option>\n<option value=\"Indian/Chagos\">Chagos</option>\n<option value=\"Indian/Christmas\">Christmas</option>\n<option value=\"Indian/Cocos\">Cocos</option>\n<option value=\"Indian/Comoro\">Comoro</option>\n<option value=\"Indian/Kerguelen\">Kerguelen</option>\n<option value=\"Indian/Mahe\">Mahe</option>\n<option value=\"Indian/Maldives\">Maldives</option>\n<option value=\"Indian/Mauritius\">Mauritius</option>\n<option value=\"Indian/Mayotte\">Mayotte</option>\n<option value=\"Indian/Reunion\">Reunion</option>\n</optgroup>\n<optgroup label=\"Pacific\">\n<option value=\"Pacific/Apia\">Apia</option>\n<option value=\"Pacific/Auckland\">Auckland</option>\n<option value=\"Pacific/Chatham\">Chatham</option>\n<option value=\"Pacific/Chuuk\">Chuuk</option>\n<option value=\"Pacific/Easter\">Easter</option>\n<option value=\"Pacific/Efate\">Efate</option>\n<option value=\"Pacific/Enderbury\">Enderbury</option>\n<option value=\"Pacific/Fakaofo\">Fakaofo</option>\n<option value=\"Pacific/Fiji\">Fiji</option>\n<option value=\"Pacific/Funafuti\">Funafuti</option>\n<option value=\"Pacific/Galapagos\">Galapagos</option>\n<option value=\"Pacific/Gambier\">Gambier</option>\n<option value=\"Pacific/Guadalcanal\">Guadalcanal</option>\n<option value=\"Pacific/Guam\">Guam</option>\n<option value=\"Pacific/Honolulu\">Honolulu</option>\n<option value=\"Pacific/Johnston\">Johnston</option>\n<option value=\"Pacific/Kiritimati\">Kiritimati</option>\n<option value=\"Pacific/Kosrae\">Kosrae</option>\n<option value=\"Pacific/Kwajalein\">Kwajalein</option>\n<option value=\"Pacific/Majuro\">Majuro</option>\n<option value=\"Pacific/Marquesas\">Marquesas</option>\n<option value=\"Pacific/Midway\">Midway</option>\n<option value=\"Pacific/Nauru\">Nauru</option>\n<option value=\"Pacific/Niue\">Niue</option>\n<option value=\"Pacific/Norfolk\">Norfolk</option>\n<option value=\"Pacific/Noumea\">Noumea</option>\n<option value=\"Pacific/Pago_Pago\">Pago Pago</option>\n<option value=\"Pacific/Palau\">Palau</option>\n<option value=\"Pacific/Pitcairn\">Pitcairn</option>\n<option value=\"Pacific/Pohnpei\">Pohnpei</option>\n<option value=\"Pacific/Port_Moresby\">Port Moresby</option>\n<option value=\"Pacific/Rarotonga\">Rarotonga</option>\n<option value=\"Pacific/Saipan\">Saipan</option>\n<option value=\"Pacific/Tahiti\">Tahiti</option>\n<option value=\"Pacific/Tarawa\">Tarawa</option>\n<option value=\"Pacific/Tongatapu\">Tongatapu</option>\n<option value=\"Pacific/Wake\">Wake</option>\n<option value=\"Pacific/Wallis\">Wallis</option>\n</optgroup>\n<optgroup label=\"UTC\">\n<option value=\"UTC\">UTC</option>\n</optgroup>\n<optgroup label=\"Manual Offsets\">\n<option value=\"UTC-12\">UTC-12</option>\n<option value=\"UTC-11.5\">UTC-11:30</option>\n<option value=\"UTC-11\">UTC-11</option>\n<option value=\"UTC-10.5\">UTC-10:30</option>\n<option value=\"UTC-10\">UTC-10</option>\n<option value=\"UTC-9.5\">UTC-9:30</option>\n<option value=\"UTC-9\">UTC-9</option>\n<option value=\"UTC-8.5\">UTC-8:30</option>\n<option value=\"UTC-8\">UTC-8</option>\n<option value=\"UTC-7.5\">UTC-7:30</option>\n<option value=\"UTC-7\">UTC-7</option>\n<option value=\"UTC-6.5\">UTC-6:30</option>\n<option value=\"UTC-6\">UTC-6</option>\n<option value=\"UTC-5.5\">UTC-5:30</option>\n<option value=\"UTC-5\">UTC-5</option>\n<option value=\"UTC-4.5\">UTC-4:30</option>\n<option value=\"UTC-4\">UTC-4</option>\n<option value=\"UTC-3.5\">UTC-3:30</option>\n<option value=\"UTC-3\">UTC-3</option>\n<option value=\"UTC-2.5\">UTC-2:30</option>\n<option value=\"UTC-2\">UTC-2</option>\n<option value=\"UTC-1.5\">UTC-1:30</option>\n<option value=\"UTC-1\">UTC-1</option>\n<option value=\"UTC-0.5\">UTC-0:30</option>\n<option value=\"UTC+0\">UTC+0</option>\n<option value=\"UTC+0.5\">UTC+0:30</option>\n<option value=\"UTC+1\">UTC+1</option>\n<option value=\"UTC+1.5\">UTC+1:30</option>\n<option value=\"UTC+2\">UTC+2</option>\n<option value=\"UTC+2.5\">UTC+2:30</option>\n<option value=\"UTC+3\">UTC+3</option>\n<option value=\"UTC+3.5\">UTC+3:30</option>\n<option value=\"UTC+4\">UTC+4</option>\n<option value=\"UTC+4.5\">UTC+4:30</option>\n<option value=\"UTC+5\">UTC+5</option>\n<option value=\"UTC+5.5\">UTC+5:30</option>\n<option value=\"UTC+5.75\">UTC+5:45</option>\n<option value=\"UTC+6\">UTC+6</option>\n<option value=\"UTC+6.5\">UTC+6:30</option>\n<option value=\"UTC+7\">UTC+7</option>\n<option value=\"UTC+7.5\">UTC+7:30</option>\n<option value=\"UTC+8\">UTC+8</option>\n<option value=\"UTC+8.5\">UTC+8:30</option>\n<option value=\"UTC+8.75\">UTC+8:45</option>\n<option value=\"UTC+9\">UTC+9</option>\n<option value=\"UTC+9.5\">UTC+9:30</option>\n<option value=\"UTC+10\">UTC+10</option>\n<option value=\"UTC+10.5\">UTC+10:30</option>\n<option value=\"UTC+11\">UTC+11</option>\n<option value=\"UTC+11.5\">UTC+11:30</option>\n<option value=\"UTC+12\">UTC+12</option>\n<option value=\"UTC+12.75\">UTC+12:45</option>\n<option value=\"UTC+13\">UTC+13</option>\n<option value=\"UTC+13.75\">UTC+13:45</option>\n<option value=\"UTC+14\">UTC+14</option>\n</optgroup></select>\n<?php\n\tprintf('<a href=\"%s\" >%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id='.$post_id),__('More Event Options','rsvpmaker')); \n}//end content not displayed on initial setup page\t\n?>\n\n</p>\n<?php\n}\n\nfunction rsvpmaker_details_post() {\n\t$output = '';\n\tif(isset($_POST['publish_draft']) && isset($_REQUEST['post_id'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\twp_publish_post((int) $_REQUEST['post_id']);\n\t\nif(isset($_REQUEST['post_id']))\n\t$post = get_post((int) $_REQUEST['post_id']);\n\nif(isset($_GET['template_to_event']))\n\t{\n\tdelete_post_meta($post->ID,'_sked');\n\tdelete_post_meta($post->ID,'_sked_Varies');\n\tupdate_post_meta($post->ID,'_rsvp_dates',date('Y-m-d H:').'00:00',rsvpmaker_strtotime('+2 hours') );\n\t}\n\nif(isset($post->post_status) && ($post->post_status != 'publish') )\n\t$output .= sprintf('<h2>Post not published, status = <span style=\"color:red\">%s</span></h2>',$post->post_status);\nif(isset($_POST[\"_require_webinar_passcode\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\tupdate_post_meta($post->ID,'_require_webinar_passcode',sanitize_text_field($_POST[\"_require_webinar_passcode\"]));\n\t}\nif(isset($_POST['post_id'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\t$template_prompt = (isset($_POST['sked'])) ? sprintf(' - <a href=\"%s\">%s</a> %s',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=') . $post->ID, __('Create/update events','rsvpmaker'),__('based on this template','rsvpmaker') ) : '';\n\t$output .= sprintf('<div class=\"notice notice-info\"><p>%s%s</p></div>',__('Saved RSVP Options','rsvpmaker'),$template_prompt);\n\trsvpmaker_save_calendar_data($post->ID);\n\tcache_rsvp_dates(50);\n\tif(isset($_POST['setrsvp']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\tsave_rsvp_meta($post->ID);\t\t\n\t}\n\telse\n\t\tdo_action('save_post',$post->ID);\n\t$output .= sprintf('<p><a href=\"%s\">View event post</a></p>',get_permalink($post->ID));\n}\nreturn $output;\n}\n\nfunction rsvpmaker_details() {\n\tglobal $post;\n\tglobal $custom_fields;\n\tglobal $rsvp_options;\n\n?>\n<style>\n<?php \n$styles = rsvpmaker_included_styles();\necho $styles; ?>\n</style>\n<div class=\"wrap\" style=\"margin-right: 200px;\"> \n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n<h1 id=\"headline\"><?php esc_html_e('RSVP / Event Options','rsvpmaker'); ?></h1>\n<div id=\"rsvpmaker_details_status\"></div>\n<?php\n\nif(isset($_GET['trash']) && isset($_GET['post_id'])) {\n\twp_trash_post(intval($_GET['post_id']));\n\techo '<div class=\"notice notice-info\"><p>'.__('Event post moved to','rsvpmaker').' <a href=\"'.admin_url('edit.php?post_status=trash&post_type=rsvpmaker').'\">Trash</a></p></div>';\n}\n\necho rsvpmaker_details_post();\n\nif(empty($post->ID))\n{\nglobal $wpdb;\n$sql = \"SELECT DISTINCT $wpdb->posts.ID as post_id, $wpdb->posts.*, date_format(a1.meta_value,'%M %e, %Y') as date\n\t FROM \".$wpdb->posts.\"\n\t JOIN \".$wpdb->postmeta.\" a1 ON \".$wpdb->posts.\".ID =a1.post_id AND a1.meta_key='_rsvp_dates'\n\t WHERE a1.meta_value > '\".get_sql_now().\"' ORDER BY a1.meta_value\";\n\n$results = $wpdb->get_results($sql);\n$options = '<optgroup label=\"'.__('Future Events','rsvpmaker').'\">';\nif(!empty($results))\nforeach($results as $row)\n\t{\n\t\t$s = '';\n\t\tif(isset($_REQUEST[\"post_id\"]) && ($row->ID == $_REQUEST[\"post_id\"]))\n\t\t\t$s = ' selected=\"selected\" ';\n\t\t$options .= sprintf('<option value=\"%d\" %s>%s %s</option>',$row->ID,$s,$row->post_title,$row->date);\n\t}\n$options .= '</optgroup><optgroup label=\"'.__('Event Templates','rsvpmaker').'\">';\n$results = rsvpmaker_get_templates();\nif(!empty($results))\nforeach($results as $row)\n\t{\n\t\tif(!rsvpmaker_is_template($row->ID))\n\t\t\tcontinue;\n\t\t$s = '';\n\t\tif(isset($_REQUEST[\"post_id\"]) && ($row->ID == $_REQUEST[\"post_id\"]))\n\t\t\t$s = ' selected=\"selected\" ';\n\t\t$options .= sprintf('<option value=\"%d\" %s>%s</option>',$row->ID,$s,$row->post_title);\n\t}\n$options .= '</optgroup>';\n\t\nprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_details\" /><select name=\"post_id\">%s</select> <button>Get</button>%s</form>',admin_url('edit.php'),$options,rsvpmaker_nonce('return'));\n\n}\nelse\n{\n\t?>\n<p><?php esc_html_e('Use this form for additional RSVPMaker settings.','rsvpmaker')?> <?php printf('<a href=\"%s\">%s</a>',admin_url('post.php?post='.intval($post->ID).'&action=edit'),__('Return to editor','rsvpmaker'))?></p>\t\n\t<?php\nprintf('<form method=\"post\" action=\"%s\" id=\"rsvpmaker_details\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id='.intval($post->ID)));\n$date = get_rsvp_date($post->ID);\n\t$datef = (empty($date)) ? '' : rsvpmaker_date('F j, Y',rsvpmaker_strtotime($date));\n\t$custom_fields = get_rsvpmaker_custom($post->ID);\n\t\n\t$t = rsvpmaker_strtotime($date);\n\tprintf('<h3>%s<br />%s</h3>',$post->post_title,$datef);\n\t$drawresult = draw_eventdates();\n\tif($drawresult != 'special')\n\t{\n\tGetRSVPAdminForm($post->ID);\n\tif(isset($rsvp_options[\"additional_editors\"]) && $rsvp_options[\"additional_editors\"])\n\t\tadditional_editors();\t\t\n\t}\n\necho '<div style=\"position: fixed; top: 50px; right: 30px; width: 100px;\">';\nif($post->post_status == 'draft')\n\tprintf('<div><input type=\"checkbox\" name=\"publish_draft\" value=\"1\" />%s</div>',__('Publish','rsvpmaker'));\nsubmit_button();\necho '</div>';\nrsvpmaker_nonce();\nprintf('<input type=\"hidden\" name=\"post_id\" value=\"%d\" /></form>',$post->ID);\n?>\n<script>\njQuery(document).ready(function( $ ) {\nvar unsaved = false;\n$(\":input\").change(function(){ //triggers change in all input fields including text type\n    unsaved = true;\n});\n\n$('#rsvpmaker_details').submit(function() {\n    unsaved = false;\n});\n\nfunction unloadPage(){ \n    if(unsaved){\n        return \"Changes you made may not be saved.\";\n    }\n}\nwindow.onbeforeunload = unloadPage;\n\t\n});\n\n</script>\n<?php\n}\n\n?>\n</div>\n<?php\n}\n\nfunction ajax_rsvpmaker_date_handler() {\n\t$post_id = (int) $_REQUEST['post_id'];\n\tif(!$post_id)\n\t\twp_die();\n\tif(isset($_REQUEST['date']))\n\t{\n\t$t = rsvpmaker_strtotime($_REQUEST['date']);\n\t$date = rsvpmaker_date(\"Y-m-d H:i:s\",$t);\n\t$current_date = get_rsvp_date($post_id);\n\tupdate_post_meta($post_id,'_rsvp_dates',$date,$current_date);\n\tdelete_transient('rsvpmakerdates');\n\t}\n    wp_die();\n}\n\nfunction rsvp_customize_form_url($post_id) {\n\tglobal $rsvp_options;\n\t$current_form = get_post_meta($post_id,'_rsvp_form',true);\n\tif(empty($current_form))\n\t\t$current_form = $rsvp_options['rsvp_form'];\n\tif(!is_numeric($current_form))\n\t\treturn;\n\treturn admin_url('?post_id='.$post_id.'&customize_form='.$current_form); // customize url \n}\n\nfunction rsvp_form_url($post_id) {\n\tglobal $rsvp_options;\n\t$current_form = get_post_meta($post_id,'_rsvp_form',true);\n\tif(empty($current_form))\n\t\t$current_form = $rsvp_options['rsvp_form'];\n\tif(!is_numeric($current_form))\n\t\treturn;\n\t$form_post = get_post($current_form);\n\tif(empty($form_post->post_parent) ||($form_post->post_parent != $post_id))\n\t\treturn admin_url('?post_id='.$post_id.'&customize_form='.$current_form); // customize url \n\telse\n\t\treturn admin_url('post.php?action=edit&post=').$current_form; // edit url\n}\n\nfunction rsvp_confirm_url($post_id) {\n\tglobal $rsvp_options;\n\t$current = get_post_meta($post_id,'_rsvp_confirm',true);\n\tif(empty($current))\n\t\t$current = $rsvp_options['rsvp_confirm'];\n\tif(!is_numeric($current))\n\t\treturn;\n\t$confirm = get_post($current);\n\tif(empty($confirm->post_parent) || ($confirm->post_parent != $post_id))\n\t\treturn admin_url('?post_id='.$post_id.'&customize_rsvpconfirm='.$current); // customize url \n\telse\n\t\treturn admin_url('post.php?action=edit&post=').$current; // edit url\n}\n\nfunction rsvpmaker_templates_dropdown ($select = 'template') {\n\t$templates = rsvpmaker_get_templates();\n\t$o = '';\n\tif(is_array($templates))\n\tforeach($templates as $template)\n\t{\n\t\t$o .= sprintf('<option value=\"%d\">%s</option>',$template->ID,$template->post_title);\n\t}\nreturn sprintf('<select name=\"%s\">%s</select>',$select,$o);\n}\n\nfunction toolbar_rsvpmaker( $wp_admin_bar ) {\nglobal $post;\n$args = array(\n\t'parent'    => 'new-rsvpmaker',\n\t'id' => 'rsvpmaker_setup_template',\n\t'title' => 'New Event Template',\n\t'href'  => admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&new_template=1'),\n\t'meta'  => array( 'class' => 'rsvpmaker_setup')\n);\n$wp_admin_bar->add_node( $args );\n$templates = rsvpmaker_get_templates();\nforeach($templates as $template) {\n\t$args = array(\n\t\t'parent'    => 'new-rsvpmaker',\n\t\t'id' => 'template'.$template->ID,\n\t\t'title' => 'Create/Update: '.$template->post_title,\n\t\t'href'  => admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t='.$template->ID),\n\t\t'meta'  => array( 'class' => 'new_from_template')\n\t);\n\t$wp_admin_bar->add_node( $args );\n}\n\nif(!empty($post->post_type) && ($post->post_type != 'rsvpemail'))\n{\n\tif($post->post_type == 'rsvpmaker') {\n\t\t$args = array(\n\t\t\t'parent'    => 'new-rsvpemail',\n\t\t\t'id' => 'embed_to_email',\n\t\t\t'title' => __('Embed Event in Email','rsvpmaker'),\n\t\t\t'href'  => admin_url('edit.php?post_type=rsvpemail&rsvpevent_to_email='.intval($post->ID)),\n\t\t\t'meta'  => array( 'class' => 'rsvpmaker_embed')\n\t\t);\t\n\t\t$wp_admin_bar->add_node( $args );\n\t}\n\t$args = array(\n\t\t'parent'    => 'new-rsvpemail',\n\t\t'id' => 'post_to_email',\n\t\t'title' => __('Copy to Email','rsvpmaker'),\n\t\t'href'  => admin_url('edit.php?post_type=rsvpemail&post_to_email='.intval($post->ID)),\n\t\t'meta'  => array( 'class' => 'rsvpmaker')\n\t);\n\t$wp_admin_bar->add_node( $args );\n\tif($post->post_type != 'rsvmpaker')\n\t{\n\t\t$args = array(\n\t\t\t'parent'    => 'new-rsvpemail',\n\t\t\t'id' => 'excerpt_to_email',\n\t\t\t'title' => __('Excerpt to Email','rsvpmaker'),\n\t\t\t'href'  => admin_url('edit.php?post_type=rsvpemail&excerpt=1&post_to_email='.intval($post->ID)),\n\t\t\t'meta'  => array( 'class' => 'rsvpmaker')\n\t\t);\n\t\t$wp_admin_bar->add_node( $args );\t\n\t}\n}\n\n$noview = true;\n$argarg = get_related_documents ();\nif(empty($argarg))\nreturn;\n\tforeach($argarg as $args) {\n\t\t$wp_admin_bar->add_node($args);\n\t\tif($args['id'] == 'view-event')\n\t\t$wp_admin_bar->remove_node( 'view' );\n\t}\n}\n\nfunction rsvpmaker_quick_post() {\n\tglobal $current_user;\n\tif( ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\treturn;\n\t$_POST = stripslashes_deep($_POST);\n\tif(!empty($_POST['type']))\n\t\t$types[] = (int) $_POST['type'];\n\tif(!empty($_POST['type2']))\n\t\t$types[] = (int) $_POST['type2'];\n\tif(!empty($_POST['newtype']))\n\t{\n\t\t$result = wp_insert_term(sanitize_text_field($_POST['newtype']),'rsvpmaker-type');\n\t\tif(is_array($result) && !empty($result[\"term_id\"]))\n\t\t\t$types[] = $result[\"term_id\"];\n\t}\n\n\tforeach($_POST[\"quicktitle\"] as $index => $title) {\n\t\tif(!empty($title)) {\n\t\t$datetime = trim(sanitize_text_field($_POST[\"quick_rsvp_date\"][$index].' '.$_POST[\"quick_rsvp_time\"][$index]));\n\t\tif(!preg_match('/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$/',$datetime)) {\n\t\t\techo 'invalid time'.$datetime;\n\t\t\tcontinue;\n\t\t}\n\t\t$title = sanitize_text_field($title);\n\t\t$content = (empty($_POST[\"quickcontent\"][$index])) ? '' : wp_kses_post( rsvpautog($_POST[\"quickcontent\"][$index]));\n\t\t$post_id = wp_insert_post(array('post_type' => 'rsvpmaker', 'post_title' => $title, 'post_content' => $content, 'post_author' => $current_user->ID, 'post_status' => sanitize_text_field($_POST['status'])));\n\t\tadd_post_meta($post_id,'_rsvp_dates',$datetime);\n\t\t$end_type = sanitize_text_field($_POST[\"quick_end_time_type\"][$index]);\n\t\t$end_time = sanitize_text_field($_POST[\"quick_rsvp_time_end\"][$index]);\n\t\tif(empty($end_time)) {\n\t\t\t$t = strtotime($datetime.\" +1 hour\");\n\t\t\t$end_time = date('H:i',$t);\n\t\t}\n\t\tadd_post_meta($post_id,'_firsttime',$end_type);\n\t\tadd_post_meta($post_id,'_endfirsttime',$end_time);\n\t\trsvpmaker_add_event_row($post_id,$datetime,$end_time,$end_type);\n\t\tif(!empty($types)) {\n\t\t\twp_set_object_terms( $post_id, $types, 'rsvpmaker-type' );\n\t\t}\n\t\tif(!empty($_POST['rsvp_on']))\n\t\t\tadd_post_meta($post_id,'_rsvp_on',1);\n\t\tif(!empty($_POST['calendar_icons']))\n\t\t\tadd_post_meta($post_id,'_calendar_icons',1);\n\t\tif(!empty($_POST['add_timezone']))\n\t\t\tadd_post_meta($post_id,'_add_timezone',1);\n\t\tif(!empty($_POST['convert_timezone']))\n\t\t\tadd_post_meta($post_id,'_convert_timezone',1);\n\t\t\n\t\tif(empty($confirmation)) {\n\t\t\t$confirmation = sprintf('<h3>%s</h3>',__('Event Posts Created','rsvpmaker'));\n\t\t\techo wp_kses_post($confirmation);\n\t\t}\n\t\tprintf('<p><a href=\"%s\">View</a> <a href=\"%s\">Edit</a> %s %s</p>',get_permalink($post_id),admin_url(\"post.php?post=$post_id&action=edit\"),$title,$datetime);\n\t\t}\t\t\n\t}\n}\n\nfunction print_quick_date_entry($i,$date_text_default,$datedefault) {\n\techo '<div class=\"quickentry\">';\n\techo '<div id=\"event_date'.$i.'\" >\n\t<p><label>Date</label>\n\t<input name=\"quick_rsvp_date[]\" type=\"date\" class=\"quick-rsvp-date\" id=\"quick-rsvp-date-'.$i.'\" count=\"'.$i.'\"> <span id=\"date-weekday-'.$i.'\"></span>\n\t</p>\n\t<p><label>Time</label> \n\t<input name=\"quick_rsvp_time[]\" type=\"time\" class=\"quick-rsvp-time\" id=\"quick-rsvp-time-'.$i.'\" count=\"'.$i.'\" value=\"12:00:00\"> <span id=\"date-weekday-'.$i.'\"></span>\n\t</p>\n\t<p><label>End Time</label> <input type=\"hidden\" id=\"end_time_type-'.$i.'\" name=\"quick_end_time_type[]\" class=\"end_time_type\" value=\"set\" >\n\t<input name=\"quick_rsvp_time_end[]\" type=\"time\" class=\"quick-rsvp-time-end\" id=\"quick-rsvp-time-end-'.$i.'\" size=\"5\" count=\"'.$i.'\" value=\"13:00:00\">\n\t</p></div>';\n\tprintf('<div class=\"quickfield\"><label>%s</label><input type=\"text\" id=\"quicktitle-'.$i.'\" class=\"quicktitle\" name=\"quicktitle[]\"></div>',__('Title','rsvpmaker'));\n\tprintf('<div class=\"quickfield\"><label>%s</label><br /><textarea name=\"quickcontent[]\" rows=\"2\" cols=\"100\"></textarea></div>',__('Starter Text','rsvpmaker'));\n\techo '<div id=\"quickmessage-'.$i.'\"></div>';\n\techo '</div>';\n}\n\nfunction rsvpmaker_quick_ui() {\n\tglobal $rsvp_options;\n\t$t = strtotime('tomorrow noon');\n\t$datedefault = rsvpmaker_date('Y-m-d H:i:s',$t);\n\t$date_text_default = rsvpmaker_date('F j, Y '.$rsvp_options['time_format'],$t);\n\t$limit = (int) $_GET['quick'];\n\tif(!$limit)\n\t\t$limit = 5;\n\tprintf('<h3>%s</h3>',__('Quickly Setup Multiple Event Posts','rsvpmaker'));\n\tprintf('<p>%s</p>',__('Enter start time and title for each event to be created. Optionally, you can include post body text. Can include multiple paragraphs, separated by a blank line. Events can be published immediately or saved as drafts for further editing.','rsvpmaker'));\n\tprintf('<p>%s</p>',__('You must enter at least a title for the event to be recorded.','rsvpmaker'));\n\tprintf('<p>%s</p>',__('Setting the date changes the default date for all the events that follow, which is useful for example for setting up a conference program or other series of events on the same day or subsequent days.','rsvpmaker'));\n\tprintf('<form method=\"post\" action=\"%s\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup'));\n\tfor($i = 0; $i < 50; $i++) {\n\t\tif($i >= $limit)\n\t\t\techo '<div class=\"quick-extra-blank\" id=\"quick-extra-blank-'.$i.'\">';\n\t\techo '<div>Entry '.($i+1).'</div>';\n\t\tprint_quick_date_entry($i,$date_text_default,$datedefault);\n\t\tif($i >= $limit)\n\t\t\techo '</div>';\n\t}\n\techo '<div class=\"quick-extra-blank\" id=\"quick-extra-blank-'.$i.'\"><em>Maximum Entries Reached</em></div>';\n\techo '<div><button id=\"add-quick-blank\" start=\"'.$limit.'\">+ Show more entries</button></div>';\n\t//echo '<div id=\"quick_entry_more\"></div><p><button id=\"quick_entry_add\">Add More</button></p><div id=\"quick_entry_hidden\">';\n\t//print_quick_date_entry('x',$date_text_default,$datedefault);\n\t//echo '</div>';\n\techo '<div>';\n\twp_dropdown_categories( array(\n\t\t'taxonomy'      => 'rsvpmaker-type',\n\t\t'hide_empty'    => 0,\n\t\t'orderby'       => 'name',\n\t\t'order'         => 'ASC',\n\t\t'name'          => 'type',\n\t\t'show_option_none' => __('Event Type (optional)','rsvpmaker'),\n\t\t'option_none_value' => 0\n\t) );\n\twp_dropdown_categories( array(\n\t\t'taxonomy'      => 'rsvpmaker-type',\n\t\t'hide_empty'    => 0,\n\t\t'orderby'       => 'name',\n\t\t'order'         => 'ASC',\n\t\t'name'          => 'type2',\n\t\t'show_option_none' => __('Event Type (optional)','rsvpmaker'),\n\t\t'option_none_value' => 0\n\t) );\n\techo '<label>New Event Type </label> <input type=\"text\" name=\"newtype\"> <div>';\n\t?>\n\t<p>\n\t<?php esc_html_e('Collect RSVPs','rsvpmaker');?>\n\t  <input type=\"radio\" name=\"rsvp_on\" id=\"setrsvpon\" value=\"1\" <?php if( !empty($rsvp_options['rsvp_on']) ) echo 'checked=\"checked\" ';?> />\n\t<?php esc_html_e('YES','rsvpmaker');?> <input type=\"radio\" name=\"rsvp_on\" id=\"setrsvpon\" value=\"0\" <?php if( empty($rsvp_options['rsvp_on']) ) echo 'checked=\"checked\" ';?> />\n\t<?php esc_html_e('NO','rsvpmaker');?> </p>\n\t<p><input type=\"checkbox\" name=\"calendar_icons\" value=\"1\" <?php if($rsvp_options[\"calendar_icons\"]) echo ' checked=\"checked\" ';?> /> <?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?> \n\t<br />\n\t<p id=\"timezone_options\">\n\t<?php\n\tif(!strpos($rsvp_options[\"time_format\"],'T') )\n\t{\n\t?>\n\t<input type=\"checkbox\" name=\"add_timezone\" value=\"1\" <?php if($rsvp_options[\"add_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); echo ' '; ?>\n\t<?php\n\t}\n\t?>\n\t<input type=\"checkbox\" name=\"convert_timezone\" value=\"1\" <?php if($rsvp_options[\"convert_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?>\n\t</p>\n\t<?php\n\trsvpmaker_nonce();\n\techo '<div><input type=\"radio\" name=\"status\" value=\"draft\" checked=\"checked\"> Draft <input type=\"radio\" name=\"status\" value=\"publish\"> Publish </div><p><button>Submit</button></p></form>';\n}\n\nfunction rsvpmaker_setup () {\n\nglobal $rsvp_options, $current_user;\n\n?>\n<style>\nselect {\n\tmax-width: 228px;\n}\n.quickentry label {\n\tdisplay: inline-block;\n\twidth: 100px;\n\tfont-weight: bold;\n}\n</style>\n<div class=\"wrap\">\n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div> \n<h2><?php esc_html_e('Event Setup','rsvpmaker'); ?></h2> \n<?php\nif(isset($_POST[\"quicktitle\"]))\n\trsvpmaker_quick_post();\nelseif(isset($_GET[\"quick\"])) {\n\trsvpmaker_quick_ui();\n\techo '</div>';\n\treturn;\n}\n\n$title = '';\n$template = 0;\nif(isset($_GET['t']))\n{\n\t$post = get_post((int) $_GET['t']);\n\t$title = htmlentities($post->post_title);\n\t$template = $post->ID;\n\t$future = get_events_by_template($template);\n\t$shortlist = $morelist = '';\n\tif($future) {\n\t\tforeach($future as $index => $event) {\n\t\t\t$temp = sprintf('<p><a href=\"%s\">Edit event</a>: %s %s</p>',admin_url('post.php?action=edit&post='.$event->ID),esc_html($event->post_title),esc_html($event->date));\n\t\t\tif($index < 5)\n\t\t\t\t$shortlist .= $temp;\n\t\t\telse\n\t\t\t\t$morelist .= $temp;\n\t\t}\n\tif(!empty($morelist))\n\t\t$morelist = '<p id=\"morelink\"><a onclick=\"document.getElementById'.\"('moreprojected').style.display='block'\".';document.getElementById'.\"('morelink').style.display='none'\".'\" >Show More</a></p><div id=\"moreprojected\" style=\"display: none;\">'.$morelist.'</div>';\n\techo '<div style=\"border: medium solid #999; padding: 15px;\"><h2>'.__('Previously Scheduled','rsvpmaker').'</h2>'.$shortlist.$morelist.'</div>';\n\t\n\techo '<p><em>'.__('To create a new event based on this template, use the form below.','rsvpmaker').'</em><p>';\n\t}\n}\n\n?>\n<h2><?php esc_html_e('Set Event Title and Schedule','rsvpmaker'); ?></h2> \n<?php\nprintf('<p><em>%s</em></p>',__('Start by entering an event title and date or schedule details. A draft event post will be created and loaded into the editor.'));\nprintf('<form id=\"rsvpmaker_setup\" action=\"%s\" method=\"post\"><input type=\"hidden\" name=\"template\" value=\"%d\">', admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup'),$template);\necho '<h1 style=\"font-size: 20px;\">Title: <input type=\"text\" name=\"rsvpmaker_new_post\" style=\"font-size: 20px; width: 60%\" value=\"'.$title.'\" /></h1>';\ndraw_eventdates();\nif(isset($_GET['t']))\n\techo '<p><em>'.__('Event will inherit defaults from template for RSVPs, date format options.','rsvpmaker').'</em></p>';\nelse\n{\n$rsvp_on = $rsvp_options['rsvp_on'];\n?>\n<p>\n<?php esc_html_e('Collect RSVPs','rsvpmaker');?>\n  <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"1\" <?php if( $rsvp_on ) echo 'checked=\"checked\" ';?> />\n<?php esc_html_e('YES','rsvpmaker');?> <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"0\" <?php if( !$rsvp_on ) echo 'checked=\"checked\" ';?> />\n<?php esc_html_e('NO','rsvpmaker');?> </p>\n<p><input type=\"checkbox\" name=\"calendar_icons\" value=\"1\" <?php if($rsvp_options[\"calendar_icons\"]) echo ' checked=\"checked\" ';?> /> <?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?> \n<br />\n<p id=\"timezone_options\">\n<?php\nif(!strpos($rsvp_options[\"time_format\"],'T') )\n{\n?>\n<input type=\"checkbox\" name=\"add_timezone\" value=\"1\" <?php if($rsvp_options[\"add_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); echo ' '; ?>\n<?php\n}\n?>\n<input type=\"checkbox\" name=\"convert_timezone\" value=\"1\" <?php if($rsvp_options[\"convert_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?>\n</p>\n<div><label>Timezone</label> \n<select id=\"timezone_string\" name=\"timezone_string\">\n<script>\nvar tz = jstz.determine();\nvar tzstring = tz.name();\ndocument.write('<option selected=\"selected\" value=\"' + tzstring + '\">' + tzstring + '</option>');\n</script>\n<option value=\"\"><?php esc_html_e('Default','rsvpmaker'); ?></option>\n<optgroup label=\"U.S. (Common Choices)\">\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n</optgroup>\n<?php $choices = wp_timezone_choice('');\necho str_replace('<option selected=\"selected\" value=\"\">Select a city</option>','',$choices);\n?>\n</select> <br /><em><?php esc_html_e('Choose a city in the same timezone as you','rsvpmaker'); ?>.</em>\n\n<?php\n$o = sprintf('<option value=\"%d\">%s</option>',esc_attr($rsvp_options['rsvp_form']),__('Default','rsvpmaker'));\n$forms = rsvpmaker_get_forms();\nforeach($forms as $label => $form_id)\n{\n$o .= sprintf('<option value=\"%d\">%s</option>',esc_attr($form_id),esc_html($label));\n}\nprintf('<p class=\"rsvp_form_select\"><label>%s</label> <select name=\"rsvp_form\">%s</select></p>',__('RSVP Form','rsvpmaker'),$o);\n\n}\nrsvpmaker_nonce();\nsubmit_button();\necho '</form></div>';\n\t\n\tif(isset($_GET['t']))\n\t\treturn;\n\nif(!isset($_GET['new_template']) && !isset($_GET['t'])){\n\techo '<div style=\"background-color: #fff; padding: 10px; border: thin dotted #555; width: 90%;\">';\n\tprintf('%s %s<br /><a href=\"%s\">%s</a>',__('For recurring events','rsvpmaker'),__('create a' ,'rsvpmaker'),admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&new_template=1'),__('New Template','rsvpmaker'));\n\tprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><br />%s <select name=\"page\"><option value=\"rsvpmaker_setup\">%s</option><option value=\"rsvpmaker_template_list\">%s</option></select> %s %s<br >%s</form>',admin_url('edit.php'),__('Or add','rsvpmaker'),__('One event','rsvpmaker'),__('Multiple events','rsvpmaker'),__('based on','rsvpmaker'),rsvpmaker_templates_dropdown('t'),get_submit_button('Submit'));\n\tdo_action('rsvpmaker_setup_template_prompt');\n\tprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_setup\">%s <select name=\"quick\"><option value=\"5\">5</option><option value=\"10\">10</option><option value=\"15\">15</option><option value=\"20\">20</option><option value=\"30\">30</option><option value=\"40\">40</option><option value=\"50\">50</option></select> %s %s</form>',admin_url('edit.php'),__('Or quickly create up to','rsvpmaker'),__('events without a template','rsvpmaker'),get_submit_button('Show Form'));\n\techo '</div>';\n}\t\t\t\t\n\n\t$myevents = get_events_by_author($current_user->ID);\n\tif($myevents)\n\t{\n\t\tprintf('<h3>%s</h3>',__('Your Event Posts','rsvpmaker'));\n\t\tforeach($myevents as $event){\n\t\t\t$draft = ($event->post_status == 'draft') ? ' <strong>(draft)</strong>' : '';\n\t\t\tprintf('<p><a href=\"%s\">Edit event</a>: %s %s %s</p>',admin_url('post.php?action=edit&post='. $event->ID),esc_html($event->post_title),esc_html($event->date),esc_html($draft));\n\t\t}\n\t}\n\t$templates = rsvpmaker_get_templates();\n\t$tedit = $list = '';\n\tif(is_array($templates))\n\tforeach($templates as $template)\n\t{\n\t$eds = get_additional_editors($template->ID);\n\tif(($current_user->ID == $template->post_author) || (!empty($eds) && in_array($current_user->ID,$eds) ) )\n\t{\n\t\t$tedit .= sprintf('<option value=\"%s\">%s</option>',esc_attr($template->ID),esc_html($template->post_title));\n\t\t$list .= '<p><strong>'.$template->post_title.'</strong></p>';\n\t\t$event = rsvpmaker_next_by_template($template->ID);\n\t\tif($event)\n\t\t{\n\t\t$draft = ($event->post_status == 'draft') ? ' <strong>(draft)</strong>' : '';\n\t\t$list .= sprintf('<p><a href=\"%s\">Edit next event</a>: %s %s %s</p>',admin_url('post.php?action=edit&post='.$event->ID),esc_html($event->post_title),esc_html($event->date), esc_html($draft));\t\t\t\n\t\t}\n\t\t$list .= sprintf('<p><a href=\"%s\">Add event</a> based on template: %s</p>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&t='.$template->ID),esc_html($template->post_title));\t\t\t\n\t\t$list .= sprintf('<p><a href=\"%s\">Create / Update</a> multiple events based on: %s</p>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t='.$template->ID),esc_html($template->post_title));\n\t\t$list .= sprintf('<p><a href=\"%s\">Edit template</a> %s</p>',admin_url('post.php?action=edit&post='.$template->ID),esc_html($template->post_title));\t\t\n\t}\n\n\t}\n\n\tif(!empty($tedit))\n\t{\n\t\tprintf('<h3>%s</h3><p>%s</p>',__('Your Templates','rsvpmaker'),__('Your templates and any others you have editing rights to are listed here. Templates allow you to generate multiple events based on a recurring schedule and common details for events in the series.','rsvpmaker'));\n\t\techo $list;\n\n\t\tprintf('<form action=\"%s\" method=\"get\"><p><input type=\"hidden\" name=\"action\" value=\"edit\"><select name=\"post\">%s</select>%s</p></form>',admin_url('post.php'),$tedit,get_submit_button(__('Edit Template','rsvpmaker')));\n\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvpmaker_template_list\">\n\t\t<p><select name=\"t\">%s</select>%s</p></form>',admin_url('edit.php'),$tedit,get_submit_button(__('Create/Update','rsvpmaker')));\n\t}\n\trsvpmaker_debug_log(memory_get_peak_usage(),'peak memory used');\n}\n\nfunction rsvpmaker_setup_post ($ajax = false) {\nif(!empty($_POST[\"rsvpmaker_new_post\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\t$t = 0;\n\t\t$slug = $title = sanitize_text_field(stripslashes($_POST[\"rsvpmaker_new_post\"]));\n\t\t$content = array('post_title' => $title,'post_name' => $slug, 'post_type' => 'rsvpmaker','post_status' => 'draft','post_content' => '');\n\t\tif(!empty($_POST['template']))\n\t\t{\t\n\t\t\t$t = (int) $_POST['template'];\n\t\t\t$template = get_post($t);\n\t\t\t$content['post_content'] = $template->post_content;\n\t\t}\n\t\t$post_id = wp_insert_post($content);\n\t\tif($post_id)\n\t\t{\t\t\n\t\tif($t) {\n\t\t\tadd_post_meta($post_id,'_meet_recur',$t);\n\t\t\trsvpmaker_copy_metadata($t, $post_id);\n\t\t}\n\t\telse {\n\t\t\tsave_rsvp_meta($post_id, true);\n\t\t}\n\t\tif(!empty($_POST['rsvp_form']))\n\t\t\tupdate_post_meta($post_id,'_rsvp_form', (int) $_POST['rsvp_form']);\n\t\tif(!empty($_POST['timezone_string']))\n\t\t\tupdate_post_meta($post_id,'_rsvp_timezone_string', sanitize_text_field($_POST['timezone_string']));\n\t\t\n\t\trsvpmaker_save_calendar_data($post_id);\n\t\t$date = sanitize_text_field($_POST['newrsvpdate'].' '.$_POST['newrsvptime']);\n\t\t$end = sanitize_text_field($_POST['rsvpendtime']);\n\t\t$display_type = sanitize_text_field($_POST['end_time_type']);\n\t\t$timezone = sanitize_text_field($_POST['timezone_string']);\n\t\trsvpmaker_add_event_row($post_id,$date,$end,$display_type,$timezone);\n\t\t$editurl = admin_url('post.php?action=edit&post='.$post_id);\n\t\tif($ajax)\n\t\t\treturn $editurl;\n\t\twp_redirect($editurl);\n\t\tdie();\t\t\t\n\t\t}\n\t}\n\t\n\t//post-new.php?post_type=rsvpmaker\n\tif(strpos(sanitize_text_field($_SERVER['REQUEST_URI']),'post-new.php?post_type=rsvpmaker'))\n\t{\n\t\twp_redirect(admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup'));\n\t\tdie();\n\t}\n}\n\nfunction rsvpmaker_import_cleanup () {\n\tglobal $wpdb;\n\t$sql = \"SELECT ID, post_title from $wpdb->posts WHERE post_type='rsvpmaker' AND post_title LIKE '%rsvpid%' \";\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $post)\n\t{\n\t$title = preg_replace('/rsvpid.+/','',$post->post_title);\n\t$sql = $wpdb->prepare(\"UPDATE $wpdb->posts SET post_title=%s WHERE ID=%d\",$title,$post->ID);\n\t$wpdb->query($sql);\n\t}\n}\n\nfunction rsvpmaker_export_screen () {\n\tglobal $wpdb, $rsvp_options;\n?>\n\t<h1>Import/Export RSVPMaker Events</h1>\n\t<?php\n\t?>\n\t<p>RSVPMaker posts are excluded from the standard WordPress export function because event posts require special handling, particularly those that have the same title but different dates (which by default WordPress rejects as duplicate posts).</p>\n\t<h3>Export Events</h3>\n<?php\nif(isset($_GET['resetrsvpcode'])) {\n\t$jt = strtotime('+ 24 hour');\n\t$export_code = rand().':'.$jt;\n\tupdate_option('rsvptm_export_lock',$export_code);\n}\nelse {\n\t$export_code = get_option('rsvptm_export_lock');\n\t$parts = explode(':',$export_code);\n\t$jt = (empty($parts[1])) ? 0 : (int) $parts[1]; \t\n}\nif(empty($export_code) || ($jt < time())) {\n\tprintf('<p>Coded url is expired or has not been set. To enable importing of event records from this site into another site, (<a href=\"%s\">set code</a>)</p>',admin_url('tools.php?page=rsvpmaker_export_screen&resetrsvpcode=1'));\n}\nelse {\n\t$url = rest_url('/rsvpmaker/v1/import/'.$export_code);\n\tprintf('<p>To move your club\\'s event records to another website that also uses this software, copy this web address:</p>\n\t<pre>%s</pre>\n\t<p>This link will expire at %s. (<a href=\"%s\">reset</a>)</p>',$url,rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'].' T',$jt),admin_url('tools.php?page=rsvpmaker_export_screen&resetrsvpcode=1'));\t\n}\n?>\n<h3>Import Events</h3>\n<p>Copy the link from the site you are <em>exporting from</em> and enter it here on the site you are <em>importing events into</em>.</p>\n<form method=\"post\" id=\"importform\" action=\"<?php echo admin_url('tools.php?page=rsvpmaker_export_screen'); ?>\">\n<div><input type=\"text\" name=\"importrsvp\" id=\"importrsvp\" value=\"<?php if(isset($_POST['importurl'])) echo sanitize_text_field($_POST['importrsvp']); ?>\" /></div>\n<input type=\"hidden\" id=\"importnowurl\" value=\"<?php echo rest_url('/rsvpmaker/v1/importnow'); ?>\" />\n<div><button id=\"import-button\">Import</button></div>\n</form>\n<div id=\"import-result\"></div>\n<p><em>Note: This function does not automatically import images or correct links that may point to the old website.</em></p>\n<?php\nrsvpmaker_jquery_inline('import');\t\t\t\t\t\t\t\t\t \n}\n\nfunction rsvpmaker_override () {\n\tglobal $post, $current_user;\n\tif(isset($_POST['rsvp_tx_template'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\tupdate_post_meta((int) $_POST['rsvp_tx_post_id'],'rsvp_tx_template',sanitize_text_field($_POST['rsvp_tx_template']));\n\tif(!empty($_GET['post']) && !empty($_GET['action']) && ($_GET['action'] == 'edit') )\n\t{\n\t\t$post_id = (int) $_GET['post'];\n\t\tif(current_user_can('edit_post',$post_id))\n\t\t\treturn; // don't mess with it\n\t\tif(empty($post))\n\t\t$post = get_post($post_id);\n\t\tif(isset($post->post_author) && ($post->post_author != $current_user->ID)) {\n\t\t\t$eds = get_additional_editors($post_id);\n\t\t\tif(in_array($current_user->ID,$eds))\n\t\t\t{\n\t\t\tif(!in_array($post->post_author,$eds))\n\t\t\t{\n\t\t\tadd_post_meta($post_id, '_additional_editors',$post->post_author);\n\t\t\t}\n\t\t\twp_update_post(array('ID' => $post_id, 'post_author' => $current_user->ID));\n\t\t\t}\n\t\t}\n\t}\n}\n\n//add_action('admin_init','rsvpmaker_override',1);\n\nfunction rsvpmaker_share() {\n?>\t\n\t<h1>Share Templates</h1>\n\t<p>When you create an event template, you have the option of designating other users who will have the same authoring / editing rights to that template (and all the events based on it) as you do. This is helpful for organizations where more than one person needs to be able to post and update events.</p>\n\t<p>Be careful to only grant this permission to trusted collaborators.</p>\n<?php\t\n\tglobal $current_user;\n\tif(isset($_REQUEST['t']))\n\t\t{\n\t\t\t$t = (int) $_REQUEST['t'];\n\t\t\t$post = get_post($t);\n\t\t}\n\t\n\tif(!empty($_POST['editor_email']) && !empty($t)  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$email = sanitize_text_field($_POST['editor_email']);\n\t\tif(!is_email($email))\n\t\t{\n\t\t\techo '<p>Invalid email</p>';\n\t\t}\n\t\telse {\n\t\t\t$user = get_user_by('email',$email);\n\t\t\tif($user) {\n\t\t\t\tadd_post_meta($t,'_additional_editors',$user->ID);\n\t\t\t\techo '<p>Adding '.$email.'</p>';\n\t\t\t}\n\t\t\telse {\n\t\t\t$user[\"user_login\"] = $email;\n\t\t\t$user[\"user_email\"] = $email;\n\t\t\t$user[\"display_name\"] = 'Editor added by '.$current_user->user_email;\n\t\t\t$user[\"user_pass\"] = wp_generate_password();\n\t\t\t$user['role'] = 'author';\n\t\t\t$id = wp_insert_user($user);\n\t\t\tif($id)\n\t\t\t{\n\t\t\tadd_post_meta($t,'_additional_editors',$id);\n$lostpassword = site_url('wp-login.php?action=lostpassword');\n?>\n<h3>Editor account created</h3>\n<p>Email and username are both set to <?php echo esc_html($email); ?></p>\n<p><strong>IMPORTANT</strong>: Please contact the person you have added and let them know to set their password so they will be able to assist you. Send them this link:</p>\n<p><a href=\"<?php echo esc_attr($lostpassword); ?>\"><?php echo esc_html($lostpassword); ?></a></p>\n<?php\n\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(isset($_POST['remove_editor']) && is_array($_POST['remove_editor']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\tforeach($_POST['remove_editor'] as $ed)\n\t\tdelete_post_meta($t,'_additional_editors',(int) $ed);\n\t\n\tif(!empty($t))\n\t{\n\t$template = get_post($t);\n\t$editors = '';\n\t$eds = get_additional_editors($template->ID);\n\tif(!is_array($eds))\n\t\t$eds = array();\n\tif(current_user_can('edit_rsvpmaker',$template->ID) || (!empty($eds) && in_array($current_user->ID,$eds) ) )\n\t{\n\t\tif(!in_array($template->post_author,$eds))\n\t\t{\n\t\t\t$eds[] = $template->post_author;\n\t\t}\n\t\tforeach($eds as $ed) {\n\t\t\t$user = get_userdata($ed);\n\t\t\t$remove = (isset($_GET['remove'])) ? sprintf('<input type=\"checkbox\" name=\"remove_editor[]\" value=\"%s\" /> Remove ',$ed) : '';\n\t\t\t$editors .= '<div>'.$remove.$user->user_email.' '.$user->display_name.'</div>';\n\t\t}\n\t}\n\t\n\tif(!empty($editors))\n\t{\n\t\t$editors = '<h3>Current Editors</h3>'.$editors;\n\t}\n\t\tprintf('<h2>Update Editors List: %s</h2><form action=\"%s\" method=\"post\">%s\n\t\t<p><input type=\"hidden\" name=\"t\" value=\"%s\" />\n\t\tAdd by Email: <input type=\"email\" name=\"editor_email\" />\n\t\t%s</p>%s</form>',esc_html($post->post_title), admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_share'), $editors,$t,get_submit_button(__('Save','rsvpmaker')),rsvpmaker_nonce('return'));\n\t}\n\t\n\t$templates = rsvpmaker_get_templates();\n\t$tedit = $list = '';\n\tif(is_array($templates))\n\tforeach($templates as $template)\n\t{\n\t$eds = get_additional_editors($template->ID);\n\tif(current_user_can('edit_rsvpmaker',$template->ID) || (!empty($eds) && in_array($current_user->ID,$eds) ) )\n\t{\n\t\t$s = (!empty($t) && ($t == $template->ID)) ? ' selected=\"selected\" ' : '';\n\t\t$tedit .= sprintf('<option value=\"%s\" %s>%s</option>',$template->ID,$s,esc_html($template->post_title));\n\t}\n\n\t}\nif(empty($tedit))\n\techo \"<p>You don't have any templates</p>\";\nelse\n{\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvpmaker_share\">\n\t\t<p><select name=\"t\">%s</select>%s</p>%s</form>',admin_url('edit.php'),$tedit,get_submit_button(__('Choose Template','rsvpmaker')),rsvpmaker_nonce('return'));\n\t\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvpmaker_share\">\n\t\t<input type=\"hidden\" name=\"remove\" value=\"1\">\n\t\t<p><select name=\"t\">%s</select>%s</p>%s</form>',admin_url('edit.php'),$tedit,get_submit_button(__('Remove Editors','rsvpmaker')),rsvpmaker_nonce('return'));\n}\n\t\n}\n\nfunction rsvpmaker_submission ($atts) {\nglobal $rsvp_options;\n$defaultto = isset($rsvp_options['submissions_to']) ? $rsvp_options['submissions_to'] : $rsvp_options['rsvp_to'];\n$to = (isset($atts['to'])) ? $atts['to'] : $defaultto;\nob_start();\n?>\n<style>#rsvpmaker_submission label {\n\tdisplay: inline-block;\n\twidth: 100px;\n}\n</style>\n<script>\ntinymce.init({\nselector:\"textarea\",plugins: \"link\",\nblock_formats: 'Paragraph=p',\nmenu: {\nformat: { title: 'Format', items: 'bold italic | removeformat' },\nstyle_formats: [\n{ title: 'Inline', items: [\n\t{ title: 'Bold', format: 'bold' },\n\t{ title: 'Italic', format: 'italic' },\n]},]},\ntoolbar: 'bold italic link',\n});\t\n</script>\n<?php\nprintf('<form method=\"post\" action=\"%s\" id=\"rsvpmaker_submission\">',get_permalink());\nrsvpmaker_nonce();\nif(isset($_GET['submission_error']))\n{\n\techo '<h2 id=\"results\">Error</h2>';\n\tprintf('<p>%s</p>',esc_html($_GET['submission_error']));\n}\n\nif(isset($_GET['success']))\n{\necho '<h2 id=\"results\">Event Submitted for Review</h2>';\n$post_id = (int) $_GET['success'];\n$post = get_post($post_id);\n$expired = rsvpmaker_strtotime('-5 minutes');\n$submitted_at = rsvpmaker_strtotime($post->post_modified);\nif($submitted_at < $expired)\n{\n\techo '<p>Preview expired</p>';\n}\nelse {\n\techo '<p>Preview</p><div style=\"border: thin dotted #111; padding: 10px; margin: 10px;\">';\n\t$t = get_rsvpmaker_timestamp($post_id);\n\t$date = rsvpmaker_date($rsvp_options['long_date'].' '.$rsvp_options['time_format'],$t);\n\tprintf('<h3>%s</h3><h3>%s</h3>%s',esc_html($post->post_title),esc_html($date),wp_kses_post($post->post_content));\t\n\techo '</div>';\n}\n}\n\t$month = (int) date('m');\n\t$year = (int) date('Y');\n\t$day = (int) date('j');\n\t$hour = 12;\n\t$endhour = 13;\n\t$minutes = 0;\n\t$months = array('January','February','March','April','May','June','July','August','September','October','November','December');\nprintf('<input type=\"hidden\" name=\"pagelink\" value=\"%s\">',get_permalink());\nrsvphoney_ui();\n?>\t\n<h2>Event Title: <input name=\"event_title\"></h2>\n\t<div id=\"date\"><label><?php echo __('Date','rsvpmaker');?></label> <input type=\"date\" name=\"date\">\n\t</div> \n\t<div><label><?php echo __('Time','rsvpmaker');?></label> <input id=\"time\" type=\"time\" name=\"time\" value=\"12:00\"> to <input id=\"endtime\" type=\"time\" name=\"endtime\" value=\"13:00\">\n<?php\nif(!empty($atts['timezone']))\n{\n?>\n<div><label>Timezone</label> \n<select id=\"timezone_string\" name=\"timezone_string\">\n<script>\nvar tz = jstz.determine();\nvar tzstring = tz.name();\ndocument.write('<option selected=\"selected\" value=\"' + tzstring + '\">' + tzstring + '</option>');\n</script>\n<optgroup label=\"U.S. (Common Choices)\">\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n</optgroup>\n<?php $choices = wp_timezone_choice('');\necho str_replace('<option selected=\"selected\" value=\"\">Select a city</option>','',$choices);\n?>\n</select> <br /><em>Choose a city in the same timezone as you.</em>\n</div>\n<?php\n}//end display timezone\n?>\n<div><label>Your Name</label><input name=\"rsvpmaker_submission_contact\" id=\"rsvpmaker_submission_contact\" /></div>\n<div><label>Email</label><input name=\"rsvpmaker_submission_email\" id=\"rsvpmaker_submission_email\" /></div>\n<div><em>If you want your contact information to be published as part of the event listing, also include it in the description below.</em></div>\n<p>Event Details<br /><textarea id=\"rsvpmaker_submission_description\" name=\"rsvpmaker_submission_description\" rows=\"5\" cols=\"100\"></textarea></p>\n<input type=\"hidden\" name=\"to\" value=\"<?php echo esc_attr($to); ?>\" /> \n<input type=\"hidden\" name=\"rsvpmaker_submission_post\" value=\"<?php echo get_permalink(); ?>\" />\n<?php rsvpmaker_recaptcha_output(); ?>\n\t<p><button>Submit</button></p></form>\n<script>\njQuery(document).ready(function( $ ) {\n\nvar addhour = 1;\n\n$('#time').change(function() {\n\tvar time = $( this ).val();\n\tvar date = new Date('2000-01-01T'+time);\n\tdate.setTime(date.getTime()+(60*60*1000));\n\t$('#endtime').val(date.toLocaleTimeString('en-GB'));\n});\n\n});\n</script>\n\t<?php\n\treturn ob_get_clean();\n}\n\nfunction rsvpmaker_submission_post() {\n\tglobal $rsvp_options, $post;\n\n\tif(isset($_POST['rsvpmaker_submission_post']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\t$permalink = sanitize_text_field($_POST['rsvpmaker_submission_post']);\n\t\t$author = isset($rsvp_options['submission_author']) ? $rsvp_options['submission_author'] : 1;\n\t\t$title = sanitize_text_field(stripslashes($_POST['event_title']));\n\t\t$datetime = sanitize_text_field($_POST['date']) .' '.sanitize_text_field($_POST['time']);\n\t\t$t = rsvpmaker_strtotime($datetime);\n\t\t$endtime = sanitize_text_field($_POST['endtime']);\n\t\t$contact = sanitize_text_field(stripslashes($_POST['rsvpmaker_submission_contact']));\n\t\t$email = sanitize_text_field($_POST['rsvpmaker_submission_email']);\n\t\t$description = sanitize_textarea_field(stripslashes($_POST['rsvpmaker_submission_description']));\n\t\t$description = strip_tags($description,'<strong><em><a><b><i>');\n\t\t$description = wp_kses_post(rsvpautog($description));\n\t\tif($t < time()) {\n\t\t\treturn; //ignore dates from the past. common spam pattern. no error message to give them cues\t\n\t\t}\n\n\t\tif(!is_admin() && !empty($rsvp_options[\"rsvp_recaptcha_site_key\"]) && !empty($rsvp_options[\"rsvp_recaptcha_secret\"]))\n\t\t{\n\t\tif(!rsvpmaker_recaptcha_check ($rsvp_options[\"rsvp_recaptcha_site_key\"],$rsvp_options[\"rsvp_recaptcha_secret\"]))\t{\n\t\t\t$r = add_query_arg('submission_error','Failed security check',$permalink).'#results';\n\t\t\twp_redirect($r);\n\t\t\texit();\n\t\t\t}\t\n\t\t}\n\n\t\t$to = sanitize_text_field($_POST['to']);\n\t\tif(!is_email($to))\n\t\t\t$to = $rsvp_options['rsvp_to'];\n\t\tif(empty($title))\n\t\t\t$missing[] = 'event title';\n\t\tif(empty($datetime))\n\t\t\t$missing[] = 'date of event';\n\t\tif(empty($description))\n\t\t\t$missing[] = 'description';\n\t\tif(empty($contact))\n\t\t\t$missing[] = 'contact name';\n\t\tif(empty($email))\n\t\t\t$missing[] = 'contact email';\n\t\tif(!empty($missing))\n\t\t{\n\t\t\t$r = add_query_arg('submission_error',sprintf('missing data %s',implode(\"\\n\",$missing)),$permalink).'#results';\n\t\t\twp_redirect($r);\n\t\t\texit();\n\t\t}\n\t\tif(!is_email($email))\n\t\t{\n\t\t\t$r = add_query_arg('submission_error','invalid email address',$permalink).'#results';\n\t\t\twp_redirect($r);\n\t\t\texit();\n\t\t}\n\t\t\n\t\t$data['post_title'] = $title;\n\t\t$data['post_content'] = $description.'<!-- wp:rsvpmaker/placeholder {\"text\":\"Submitted by '.$contact.' '.$email.'\"} /-->';\n\t\t$data['post_author'] = $author;\n\t\t$data['post_status'] = 'draft';\n\t\t$data['post_type'] = 'rsvpmaker';\n\t\t$post_id = wp_insert_post($data);\n\n\t\tadd_rsvpmaker_date($post_id,$datetime,'set',$endtime );\n\t\tif(!empty($_POST['timezone_string']) )\n\t\t{\n\t\t\tadd_post_meta($post_id,\"_add_timezone\",true);\n\t\t\tadd_post_meta($post_id,\"_convert_timezone\",true);\n\t\t\tadd_post_meta($post_id,\"_rsvp_timezone_string\",sanitize_text_field($_POST['timezone_string']));\t\t\n\t\t}\n\t\tadd_post_meta($post_id,'_rsvpmaker_submission',date('Y-m-d H:i:s'));\n\t\n\t\t$mail['subject'] = \"Event submission: \".$title.' '.$cddate;\n\t\t$mail['html'] = $description.sprintf('<hr />\n\t\t<p><a href=\"%s\">Edit / Approve</a></p>\n\t\t<p>Submitted by %s %s / <a href=\"%s\">submission page</a></p>',admin_url('post.php?action=edit&post='.$post_id),esc_html($contact),esc_html($email),esc_url_raw($_POST['pagelink']));\n\t\t$mail['fromname'] = $contact;\n\t\t$mail['from'] = $email;\n\t\t$mail['to'] = $to;\n\t\trsvpmailer($mail);\n\t\t$r = add_query_arg('success',$post_id,$permalink).'#results';\n\t\twp_redirect($r);\n\t\texit();\n\t}\n}\n\nadd_shortcode('rsvpmaker_submission','rsvpmaker_submission');\n\n/*\n * New columns\n */\nadd_filter('manage_rsvpmaker_posts_columns', 'rsvpmaker_edit_columns');\n// the above hook will add columns only for default 'post' post type, for CPT:\n// manage_{POST TYPE NAME}_posts_columns\nfunction rsvpmaker_edit_columns( $column_array ) {\n\tunset($column_array[\"tags\"]);\n\t$column_array['event_dates'] = __('Event Dates','rsvpmaker');\n\t$column_array['rsvpmaker_end'] = __('End Time','rsvpmaker');\n\t$column_array['rsvpmaker_display'] = __('Display','rsvpmaker');\n\treturn $column_array;\n}\n\n/*\n * quick_edit_custom_box allows to add HTML in Quick Edit\n * Please note: it files for EACH column, so it is similar to manage_posts_custom_column\n */\n\nfunction rsvpmaker_quick_edit_fields( $column_name, $post_type ) {\nglobal $post;\nif(!get_rsvp_date($post->ID))\n\treturn; // only for dated events, not templates etc\n\t// you can check post type as well but is seems not required because your columns are added for specific CPT anyway\n\nswitch( $column_name ) :\n\t\tcase 'event_dates': {\n\n\t\t\t// you can also print Nonce here, do not do it ouside the switch() because it will be printed many times\n\t\t\trsvpmaker_nonce();\n\n\t\t\t// please not the fieldset classes could be:\n\t\t\t// inline-edit-col-left, inline-edit-col-center, inline-edit-col-right\n\t\t\t// each class for each column, all columns are float:left,\n\t\t\t// so, if you want a left column, use clear:both element before\n\t\t\t// the best way to use classes here is to look in browser \"inspect element\" at the other fields\n\n\t\t\t// for the FIRST columns only, it opens <fieldset> element, all our fields will be there\n\t\t\techo '<fieldset class=\"inline-edit-col-right\"><div class=\"inline-edit-col\"><div class=\"inline-edit-group wp-clearfix\">';\n\n\t\t\techo '<label class=\"alignleft\">\n\t\t\t\t\t<span class=\"title\">Datetime</span>\n\t\t\t\t\t<span class=\"input-text-wrap\"><input type=\"text\" class=\"quick_event_date\" id=\"quick_event_date-'.$post->ID.'\" post_id=\"'.$post->ID.'\" name=\"event_dates\" value=\"\"></span>\n\t\t\t\t\t<span id=\"quick_event_date_text-'.$post->ID.'\"></span>\n\t\t\t\t</label>';\n\n\t\t\tbreak;\n\n\t\t}\n\t\tcase 'rsvpmaker_end': {\n\t\t\t$end_type = get_rsvpmaker_meta($post->ID,'_firsttime',true);\n\t\t\t$end = get_rsvpmaker_meta($post->ID,'_endfirsttime',true);\n\t\t\techo '<label class=\"alignleft\">\n\t\t\t<span class=\"title\">End Time</span>\n\t\t\t<span class=\"input-text-wrap\"><input type=\"time\" class=\"quick_end_time\" id=\"quick_end_time-'.$post->ID.'\" post_id=\"'.$post->ID.'\" name=\"end_time\" value=\"\"></span>\n\t\t\t<span id=\"quick_end_time_text-'.$post->ID.'\"></span>\n</label>';\n\n\t\t\tbreak;\n\n\t\t}\n\t\tcase 'rsvpmaker_display': {\n\t\t\t$end_type = get_rsvpmaker_meta($post->ID,'_firsttime',true);\n\t\t\t$end = get_rsvpmaker_meta($post->ID,'_endfirsttime',true);\n\t\t\t//if(!empty($end_type) && (strpos($end,':') > 0))\n\t\t\t$options = array('set' => 'Show End Time','allday' => 'All Day/Times Not Shown','multi|2' => '2 Days','multi|3' => '3 Days','multi|4' => '4 Days','multi|5' => '5 Days','multi|6' => '6 Days','multi|7' => '7 Days');\n\t\t\techo '<label class=\"alignleft\">\n\t\t\t<span class=\"title\">Time Display</span>\n\t\t\t<select name=\"quick_time_display\" class=\"quick_time_display\">\n\t\t\t<option value=\"\">End Time Not Shown</option>';\n\t\t\tforeach($options as $key => $option)\n\t\t\t\tprintf('<option value=\"%s\">%s</option>',$key,$option);\n\t\t\techo '</select>\n</label>';\n\n\t\t\t// for the LAST column only - closing the fieldset element\n\t\t\techo '</div></div></fieldset>';\n\n\t\t\tbreak;\n\n\t\t}\n\n\tendswitch;\n}\n\n/*\n * Quick Edit Save\n */\n\nfunction rsvpmaker_quick_edit_save( $post_id ){\n\tif(empty($_POST['event_dates']))\n\t\treturn;\n\t// check user capabilities\n\tif ( !current_user_can( 'edit_post', $post_id ) ) {\n\t\treturn;\n\t}\n\n\t// check nonce\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\treturn;\n\n\tif ( isset( $_POST['event_dates'] ) ) {\n\t\tif(preg_match('/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/',$_POST['event_dates'])) {\n\t\t\t$date = sanitize_text_field($_POST['event_dates']);\n\t\t\tupdate_post_meta( $post_id, '_rsvp_dates', $date );\n\t\t}\n\t\telse\n\t\t\treturn;\n\t}\n\tif ( isset( $_POST['end_time'] ) ) {\n\t\tif(preg_match('/^\\d{2}:\\d{2}$/',$_POST['end_time'])) {\n\t\t $end = sanitize_text_field($_POST['end_time']);\n\t\t update_post_meta( $post_id, '_endfirsttime', $end );\n\t\t} \n\t}\n\t if ( isset( $_POST['quick_time_display'] ) ) {\n\t\tupdate_post_meta( $post_id, '_firsttime', sanitize_text_field($_POST['quick_time_display']) );\n\t\t$display_type = sanitize_text_field($_POST['quick_time_display']);\n\t\t$enddatetime = rsvpmaker_make_end_date ($date,$display_type,$end);\n\t\tupdate_post_meta($post_id,'_rsvp_end_date',$enddatetime);\n   \t}\n}\n", "<?php\n\n/*\nRSVPMaker API Endpoints\n*/\n\nclass RSVPMaker_Listing_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'future';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$events = get_future_events();\n\n\t\tif ( empty( $events ) ) {\n\n\t\t\treturn new WP_Error( 'empty_category', 'no future events listed', array( 'status' => 404 ) );\n\n\t\t}\n\n\t\treturn new WP_REST_Response( $events, 200 );\n\n\t}\n\n\n\n}\n\nclass RSVPMaker_Types_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'types';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\tpublic function get_items( $request ) {\n\n\t\t$types = get_terms( array('taxonomy' =>'rsvpmaker-type','hide_empty' => false) );\n\n\t\treturn new WP_REST_Response( $types, 200 );\n\n\t}\n\n\n\n\t// other functions to override\n\n\t// create_item(), update_item(), delete_item() and get_item()\n\n\n\n}\n\n\n\nclass RSVPMaker_Authors_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'authors';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$authors = get_rsvpmaker_authors();\n\n\t\treturn new WP_REST_Response( $authors, 200 );\n\n\t}\n\n\n\n}\n\n\n\nclass RSVPMaker_By_Type_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'type/(?P<type>[A-Z0-9a-z_\\-]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$wp_query = rsvpmaker_upcoming_query();\n\t\t$posts    = $wp_query->get_posts();\n\t\tif ( empty( $posts ) ) {\n\t\t\treturn new WP_Error( 'empty_category', 'there is no post in this category ' . $querystring, array( 'status' => 404 ) );\n\t\t}\n\t\treturn new WP_REST_Response( $posts, 200 );\n\t}\n\n\n\n\t// other functions to override\n\n\t// create_item(), update_item(), delete_item() and get_item()\n\n\n\n}\n\nclass RSVPMaker_GuestList_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'guestlist/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\tglobal $rsvp_options;\n\n\t\t$meta = get_post_meta( $request['post_id'], '_rsvp_show_attendees', true );\n\n\t\tif ( $meta ) {\n\n\t\t\treturn true;\n\n\t\t} elseif ( ( $meta == '' ) && $rsvp_options['show_attendees'] ) {\n\n\t\t\treturn true; // if not explicitly set for event, default is positive value\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$event = $request['post_id'];\n\n\t\t$sql = 'SELECT first,last,note FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$event AND yesno=1 ORDER BY id DESC\";\n\n\t\t$attendees = $wpdb->get_results( $sql );\n\n\t\treturn new WP_REST_Response( $attendees, 200 );\n\n\t}\n\n}\n\n\n\nclass RSVPMaker_ClearDateCache extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'clearcache/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tdelete_transient( 'rsvpmakerdates' );\n\n\t\treturn new WP_REST_Response( (object) 'deleted rsvpmakerdates transient', 200 );\n\n\t}\n\n}\n\n\n\nclass RSVPMaker_Sked_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'sked/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$sked = get_template_sked( $request['post_id'] );\n\n\t\treturn new WP_REST_Response( $sked, 200 );\n\n\t}\n\n}\n\nclass RSVPMaker_StripeSuccess_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'stripesuccess/(?P<txkey>.+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$base = get_option( $request['txkey'] );\n\n\t\t$key = 'conf:' . time();\n\n\t\tforeach ( $_POST as $name => $value ) {\n\n\t\t\t$vars[ $name ] = sanitize_text_field( $value );\n\t\t}\n\n\t\tif ( is_array( $base ) ) {\n\n\t\t\tforeach ( $base as $name => $value ) {\n\n\t\t\t\tif ( empty( $vars[ $name ] ) ) {\n\n\t\t\t\t\t$vars[ $name ] = $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// $vars['charge_id'] = $charge->id;\n\n\t\tif ( ! empty( $vars['rsvp_id'] ) ) {\n\n\t\t\t$rsvp_id = $vars['rsvp_id'];\n\n\t\t\t$rsvp_post_id = $vars['rsvp_post_id'];\n\n\t\t\t$paid = $vars['amount'];\n\n\t\t\t$invoice_id = get_post_meta( $rsvp_post_id, '_open_invoice_' . $rsvp_id, true );\n\n\t\t\t$charge = get_post_meta( $rsvp_post_id, '_invoice_' . $rsvp_id, true );\n\n\t\t\t$paid_amounts = get_post_meta( $rsvp_post_id, '_paid_' . $rsvp_id );\n\n\t\t\tif ( is_array( $paid_amounts ) ) {\n\n\t\t\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t\t\t$paid += $payment;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\t\t\tadd_post_meta( $rsvp_post_id, '_paid_' . $rsvp_id, $vars['amount'] );\n\n\t\t\t$vars['payment_confirmation_message'] = '';\n\n\t\t\t$message_id = get_post_meta( $rsvp_post_id, 'payment_confirmation_message', true );\n\n\t\t\tif ( $message_id ) {\n\n\t\t\t\t$message_post = get_post( $message_id );\n\n\t\t\t\t$vars['payment_confirmation_message'] = do_blocks( $message_post->post_content );\n\n\t\t\t}\n\n\t\t\tdelete_post_meta( $rsvp_post_id, '_open_invoice_' . $rsvp_id );\n\n\t\t\tdelete_post_meta( $rsvp_post_id, '_invoice_' . $rsvp_id );\n\n\t\t}\n\n\t\trsvpmaker_stripe_payment_log( $vars, $key );\n\n\t\tdelete_option( $request['txkey'] );\n        wp_schedule_single_event( time() + 30, 'rsvpmaker_after_payment',array('stripe'));\n\t\treturn new WP_REST_Response( $vars, 200 );\n\n\t}\n\n}\n\nclass RSVPMaker_PaypalSuccess_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'paypalsuccess/(?P<post_id>.+)/(?P<tracking>.+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tif(isset($request['tracking']))\n\t\t\t$vars = get_post_meta_by_id( intval($request['tracking']) );\n\t\tif(empty($vars))\n\t\t\t$vars = array();\n\n\t\t$message_id = get_post_meta( $request['post_id'], 'payment_confirmation_message', true );\n\n\t\tif ( $message_id ) {\n\n\t\t\t$message_post = get_post( $message_id );\n\n\t\t\tif ( empty( $message_post->post_content ) ) {\n\n\t\t\t\t$message_post->post_content = '<p>' . __( 'Thank you for your payment', 'rsvpmaker' ) . '</p>';\n\t\t\t}\n\n\t\t\t$vars['payment_confirmation_message'] = do_blocks( $message_post->post_content );\n\n\t\t\tif(!empty($vars['rsvp_id'])) //rsvp_id\n\t\t\t\trsvp_confirmation_after_payment( $vars['rsvp_id'] );\n\t\t}\n\n\t\treturn new WP_REST_Response( $vars, 200 );\n\n\t}\n}\n\nclass RSVP_Export extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'import/(?P<code>.+)/(?P<start>.+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'handle' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\t$code = get_option( 'rsvptm_export_lock' );\n\n\t\tif ( empty( $code ) ) {\n\n\t\t\treturn $false;\n\t\t}\n\n\t\t$parts = explode( ':', $code );\n\n\t\t$t = (int) $parts[1];\n\n\t\tif ( $t < time() ) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ( $code == $request['code'] );\n\n\t}\n\n\n\n\tpublic function handle( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$start = $request['start'];\n\n\t\t$sql = \"SELECT * FROM $wpdb->posts WHERE ID > $start AND post_type='rsvpmaker' AND post_status='publish' ORDER BY ID LIMIT 0,50\";\n\n\t\t$future = $wpdb->get_results( $sql );\n\n\t\tforeach ( $future as $index => $row ) {\n\n\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $row->ID;\n\n\t\t\t$metaresults = $wpdb->get_results( $sql );\n\n\t\t\tforeach ( $metaresults as $metarow ) {\n\n\t\t\t\t$future[ $index ]->meta[] = $metarow;\n\n\t\t\t}\n\t\t}\n\n\t\treturn new WP_REST_Response( $future, 200 );\n\n\t}\n\n}\n\n\n\nclass RSVP_RunImport extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'importnow';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'handle' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\t// nonce check here\n\n\t\treturn (current_user_can( 'manage_options' )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function handle( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$error = '';\n\n\t\t$imported = 0;\n\n\t\t$top = 0;\n\n\t\tif ( isset( $_POST['importrsvp'] ) ) {\n\n\t\t\t$url  = sanitize_text_field( $_POST['importrsvp'] );\n\t\t\t$url .= '/' . (int) $_POST['start'];\n\n\t\t\tif ( rsvpmaker_is_url_local( $url ) ) {\n\n\t\t\t\t$error = 'You cannot import into the same site you are exporting from';\n\n\t\t\t} else {\n\n\t\t\t\t$remote = wp_remote_get( $url );\n\n\t\t\t\tif ( is_wp_error( $remote ) ) {\n\n\t\t\t\t\t$error = $remote->get_error_message();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$remote_events = $remote['body'];\n\n\t\t\t\t\tif ( strpos( $remote_events, 'rest_forbidden' ) ) {\n\n\t\t\t\t\t\t$error = 'forbidden';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( empty( $error ) ) {\n\n\t\t\t\t$events = json_decode( $remote_events );\n\n\t\t\t\tif ( ! empty( $events ) ) {\n\n\t\t\t\t\tforeach ( $events as $event ) {\n\n\t\t\t\t\t\t  $top = $event->ID;\n\n\t\t\t\t\t\t  $newpost['post_title'] = $event->post_title;\n\n\t\t\t\t\t\t  $newpost['post_content'] = $event->post_content;\n\n\t\t\t\t\t\t  $newpost['post_status'] = 'publish';\n\n\t\t\t\t\t\t  $newpost['post_type'] = 'rsvpmaker';\n\n\t\t\t\t\t\t  $post_id = wp_insert_post( $newpost );\n\n\t\t\t\t\t\tif ( $post_id ) {\n\n\t\t\t\t\t\t\t$imported++;\n\n\t\t\t\t\t\t\tif ( ! empty( $event->meta ) ) {\n\n\t\t\t\t\t\t\t\tforeach ( $event->meta as $metarow ) {\n\n\t\t\t\t\t\t\t\t\t  $sql = $wpdb->prepare( \"INSERT INTO $wpdb->postmeta SET post_id=%s, meta_key=%s, meta_value=%s\", $post_id, $metarow->meta_key, $metarow->meta_value );\n\n\t\t\t\t\t\t\t\t\t  $wpdb->query( $sql );\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}//meta array\n\n\t\t\t\t\t\t}//post_id\n\n\t\t\t\t\t}//end for event loop\n\t\t\t\t}\n\t\t\t} //end empty error\n\t\t}//end post value\n\n\t\treturn new WP_REST_Response(\n\t\t\tarray(\n\t\t\t\t'error'    => $error,\n\t\t\t\t'imported' => $imported,\n\t\t\t\t'top'      => $top,\n\t\t\t),\n\t\t\t200\n\t\t);\n\n\t}//end handle()\n\n}//end class\n\n\n\nclass RSVPMaker_Email_Lookup extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'email_lookup/(?P<nonce>.+)/(?P<event>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn wp_verify_nonce( $request['nonce'], 'rsvp_email_lookup' );\n\n\t}\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$event = $request['event'];\n\n\t\t$email = sanitize_email( $_GET['email_search'] );\n\n\t\t$output = ajax_rsvp_email_lookup( $email, $event );\n\n\t\treturn new WP_REST_Response( $output, 200 );\n\n\t}\n\n}\n\n\n\nclass RSVPMaker_Signed_Up extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'signed_up';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'));\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$event = (int) $_GET['event'];\n\n\t\t$output = signed_up_ajax( $event );\n\n\t\treturn new WP_REST_Response( $output, 200 );\n\n\t}\n\n}\n\nclass RSVPMaker_Shared_Template extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'shared_template/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$post_id  = $request['post_id'];\n\t\t$template = get_post( $post_id );\n\t\t$shared   = get_post_meta( $post_id, 'rsvpmaker_shared_template', true );\n\t\tif ( empty( $template ) || empty( $shared ) ) {\n\t\t\treturn new WP_REST_Response( false, 200 );\n\t\t}\n\t\t$export['post_title']   = $template->post_title;\n\t\t$export['post_content'] = $template->post_content;\n\t\treturn new WP_REST_Response( $export, 200 );\n\t}\n}\n\nclass RSVPMaker_Setup extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'setup';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn (current_user_can( 'edit_rsvpmakers' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$editurl = rsvpmaker_setup_post( true );\n\t\treturn new WP_REST_Response( $editurl, 200 );\n\t}\n}\n\nclass RSVPMaker_Email_Templates extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'email_templates';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn (current_user_can( 'edit_others_rsvpemails' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$templates = $_POST['rsvpmaker_email_template']; // array\n\t\t$output    = '<h2>' . __( 'Updated', 'rsvpmaker' ) . '</h2>';\n\t\tforeach ( $templates as $index => $template ) {\n\t\t\t$template['html']    = wp_kses_post(stripslashes( $template['html']) );\n\t\t\t$templates[ $index ] = $template;\n\t\t\t$output             .= sprintf( '<p><a target=\"_blank\" href=\"%s\">Preview %s</a></p>', admin_url( '?preview_broadcast_in_template=' . $index ), $template['slug'] );\n\t\t}\n\t\tupdate_option( 'rsvpmaker_email_template', $templates );\n\t\t$output .= sprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'edit.php?post_type=rsvpemail&page=rsvpmaker_email_template' ), __( 'Edit', 'rsvpmaker' ) );\n\t\treturn new WP_REST_Response( $output, 200 );\n\t}\n}\n\nclass RSVPMaker_Notification_Templates extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'notification_templates';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn rsvpmaker_verify_nonce();\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$output = '<h2>' . __( 'Updated', 'rsvpmaker' ) . '</h2>';\n\t\tif ( isset( $_POST['ntemp'] ) ) {\n\t\t\t$ntemp = $_POST['ntemp'];\n\t\t\tforeach($ntemp as $index => $data) {\n\t\t\t\t$ntemp[$index]['subject'] = sanitize_text_field($ntemp[$index]['subject']);\n\t\t\t\t$ntemp[$index]['body'] = wp_kses_post($ntemp[$index]['body']);\n\t\t\t}\n\t\t\tif ( ! empty( $_POST['newtemplate']['subject'] ) && ! empty( $_POST['newtemplate_label'] ) ) {\n\t\t\t\t$index = sanitize_text_field($_POST['newtemplate_label']);\n\t\t\t\t$ntemp[ $index ]['subject'] = sanitize_text_field( $_POST['newtemplate']['subject'] );\n\t\t\t\t$ntemp[ $index ]['body']    = wp_kses_post( $_POST['newtemplate']['body'] );\n\t\t\t}\n\t\t\tupdate_option( 'rsvpmaker_notification_templates', stripslashes_deep( $ntemp ) );\n\t\t}\n\t\t$output .= sprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'edit.php?post_type=rsvpemail&page=rsvpmaker_notification_templates' ), __( 'Edit', 'rsvpmaker' ) );\n\t\treturn new WP_REST_Response( $output, 200 );\n\t}\n}\n\nclass RSVPMaker_Details extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'rsvpmaker_details';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn (current_user_can( 'edit_rsvpmakers' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$output = rsvpmaker_details_post();\n\t\treturn new WP_REST_Response( $output, 200 );\n\t}\n}\n\nclass RSVPMaker_Time_And_Zone extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'time_and_zone/(?P<post_id>[0-9a-z]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$date = '';\n\t\tif ( $request['post_id'] == 'nextrsvp' ) {\n\t\t\t$event = get_next_rsvp_on();\n\t\t\tif ( $event ) {\n\t\t\t\t$date = $event->datetime;\n\t\t\t}\n\t\t} elseif ( $request['post_id'] == 'next' ) {\n\t\t\t$event = get_next_rsvpmaker();\n\t\t\tif ( $event ) {\n\t\t\t\t$date = $event->datetime;\n\t\t\t}\n\t\t} elseif ( is_numeric( $request['post_id'] ) ) {\n\t\t\t$date = get_rsvp_date( $request['post_id'] );\n\t\t}\n\n\t\tif ( ! empty( $date ) ) {\n\t\t\t$t = rsvpmaker_strtotime( $date ) * 1000;\n\t\t}\n\t\treturn new WP_REST_Response( $t, 200 );\n\t}\n}\n\nclass RSVPMaker_Events_with_Timezone extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'events_with_timezone';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tglobal $default_tz;\n\t\t$last_tz = '';\n\t\t$events  = array();\n\t\t$list    = get_future_events( array( 'limit' => 10 ) );\n\t\tif ( $list ) {\n\t\t\tforeach ( $list as $event ) {\n\t\t\t\t$timezone = rsvpmaker_get_timezone_string( $event->ID );\n\t\t\t\tif ( $timezone != $last_tz ) {\n\t\t\t\t\tdate_default_timezone_set( $timezone );\n\t\t\t\t\t$last_tz = $timezone;\n\t\t\t\t}\n\t\t\t\t$t        = strtotime( $event->datetime );\n\t\t\t\t$end      = strtotime( $event->enddate );\n\t\t\t\t$events[] = array(\n\t\t\t\t\t'ts'              => $t,\n\t\t\t\t\t'end'             => $end,\n\t\t\t\t\t'timezone_string' => $timezone,\n\t\t\t\t\t'site'            => get_option( 'blogname' ),\n\t\t\t\t\t'post_title'      => $event->post_title,\n\t\t\t\t\t'permalink'       => get_permalink( $event->ID ),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn new WP_REST_Response( $events, 200 );\n\t}\n}\n\nclass RSVPMaker_Flux_Capacitor extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'flux_capacitor';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tglobal $default_tz, $rsvp_options, $post;\n\t\t$time   = sanitize_text_field( $_POST['time'] );\n\t\t$end    = sanitize_text_field( $_POST['end'] );\n\t\t$tz     = sanitize_text_field( $_POST['tzstring'] );\n\t\t$format = sanitize_text_field( $_POST['format'] );\n\t\t$timezone_abbrev = sanitize_text_field($_POST['timezone_abbrev']);\n\t\t$post   = get_post( $_POST['post_id'] );\n\t\t$time   = rsvpmaker_strtotime( $time );\n\t\t$s3 = rsvpmaker_date( 'T', $time );\n\t\tif($timezone_abbrev == $s3)\n\t\t\t$times ['content'] = ''; // if city code is different but tz code is same\n\t\telse {\n\t\t\tif ( $end ) {\n\t\t\t\t$end = rsvpmaker_strtotime( $end );\n\t\t\t}\n\t\t\tdate_default_timezone_set( $tz );\n\t\t\t// strip off year\n\t\t\t$rsvp_options['long_date'] = str_replace( ', %Y', '', $rsvp_options['long_date'] );\n\t\t\t$times['content']          = 'Or: ';\n\t\t\tif ( $format == 'time' ) {\n\t\t\t\t$times['content'] .= date( $rsvp_option['time_format'], $time );\n\t\t\t\tif ( $end ) {\n\t\t\t\t\t$times['content'] .= ' to ' . date( 'g:i A T', $end );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$times['content'] .= $day1 = date( $rsvp_options['long_date'], $time );\n\t\t\t\t$times['content'] .= ' ' . date( 'g:i A T', $time );\n\t\t\t\tif ( $end ) {\n\t\t\t\t\t$times['content'] .= ' to ';\n\t\t\t\t\t$day2              = date( $rsvp_options['long_date'], $end );\n\t\t\t\t\tif ( $day2 != $day1 ) {\n\t\t\t\t\t\t$times['content'] .= $day2 . ' ';\n\t\t\t\t\t}\n\t\t\t\t\t$times['content'] .= date( 'g:i A T', $end );\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\t$times['tzoptions'] = wp_timezone_choice( $tz );\n\t\treturn new WP_REST_Response( $times, 200 );\n\t}\n}\n\nclass RSVPMaker_Daily extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'daily/(?P<event>[0-9a-z]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tglobal $wpdb;\n\t\t$sql = $wpdb->prepare(\"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=%d ORDER BY timestamp\",$request['event']);\n\t\t$results = $wpdb->get_results($sql);\n\t\t$daily_count = [];\n\t\t$count = 0;\n\t\t$wasdate = '';\n\t\t$count = 0;\n\t\tforeach($results as $row) {\n\t\t\t$date = rsvpmaker_date('Y-m-d',rsvpmaker_strtotime($row->timestamp));\n\t\t\tif(isset($daily_count[$date]))\n\t\t\t$daily_count[$date]++;\n\t\t\telse\n\t\t\t$daily_count[$date] = 1;\n\t\t}\n\t\t$return_array = [];\n\t\tforeach($daily_count as $date => $count) {\n\t\t\t$return_array[] = array('date' => $date, 'count' => $count);\n\t\t}\n\t\treturn new WP_REST_Response( $return_array, 200 );\n\t}\n}\n\nadd_action(\n\t'rest_api_init',\n\tfunction () {\n\n\t\t$rsvpmaker_sked_controller = new RSVPMaker_Sked_Controller();\n\n\t\t$rsvpmaker_sked_controller->register_routes();\n\n\t\t$rsvpmaker_by_type_controller = new RSVPMaker_By_Type_Controller();\n\n\t\t$rsvpmaker_by_type_controller->register_routes();\n\n\t\t$rsvpmaker_listing_controller = new RSVPMaker_Listing_Controller();\n\n\t\t$rsvpmaker_listing_controller->register_routes();\n\n\t\t$rsvpmaker_types_controller = new RSVPMaker_Types_Controller();\n\n\t\t$rsvpmaker_types_controller->register_routes();\n\n\t\t$rsvpmaker_authors_controller = new RSVPMaker_Authors_Controller();\n\n\t\t$rsvpmaker_authors_controller->register_routes();\n\n\t\t$rsvpmaker_guestlist_controller = new RSVPMaker_GuestList_Controller();\n\n\t\t$rsvpmaker_guestlist_controller->register_routes();\n\n\t\t$rsvpmaker_meta_controller = new RSVPMaker_ClearDateCache();\n\n\t\t$rsvpmaker_meta_controller->register_routes();\n\n\t\t$stripesuccess = new RSVPMaker_StripeSuccess_Controller();\n\n\t\t$stripesuccess->register_routes();\n\n\t\t$ppsuccess = new RSVPMaker_PaypalSuccess_Controller();\n\n\t\t$ppsuccess->register_routes();\n\n\t\t$rsvpexp = new RSVP_Export();\n\n\t\t$rsvpexp->register_routes();\n\n\t\t$rsvpimp = new RSVP_RunImport();\n\n\t\t$rsvpimp->register_routes();\n\n\t\t$signed_up = new RSVPMaker_Signed_Up();\n\n\t\t$signed_up->register_routes();\n\n\t\t$email_lookup = new RSVPMaker_Email_Lookup();\n\n\t\t$email_lookup->register_routes();\n\n\t\t$sharedt = new RSVPMaker_Shared_Template();\n\n\t\t$sharedt->register_routes();\n\t\t$setup = new RSVPMaker_Setup();\n\t\t$setup->register_routes();\n\t\t$et = new RSVPMaker_Email_Templates();\n\t\t$et->register_routes();\n\t\t$nt = new RSVPMaker_Notification_Templates();\n\t\t$nt->register_routes();\n\t\t$deet = new RSVPMaker_Details();\n\t\t$deet->register_routes();\n\t\t$tz = new RSVPMaker_Time_And_Zone();\n\t\t$tz->register_routes();\n\t\t$tzevents = new RSVPMaker_Events_with_Timezone();\n\t\t$tzevents->register_routes();\n\t\t$flux = new RSVPMaker_Flux_Capacitor();\n\t\t$flux->register_routes();\n\t\t$daily = new RSVPMaker_Daily();\n\t\t$daily->register_routes();\n\t}\n);\n", "<?php\nuse RSVPbyDrewM\\MailChimp\\MailChimp as MailChimpRSVP;\n\n$rsvpmaker_message_type = '';\n\nfunction rsvpmailer($mail, $description = '') {\n\tif(defined('RSVPMAILOFF'))\n\t{\n\t\t$log = sprintf('<p style=\"color:red\">RSVPMaker Email Disabled</p><pre>%s</pre>',var_export($mail,true));\n\t\treturn;\n\t}\n\tif(strpos($mail['to'],'@example.com'))\n\t\treturn; // don't try to send to fake addresses\n\tif(empty($mail['skip_check']))\n\t\t$problem = rsvpmail_is_problem($mail['to']);\n\telse\n\t\t$problem = false;\n\tif($problem && ($rsvpmailer_rule != 'permit') ) {\n\t\t$mail['html'] = '[content omitted]';\n\t\trsvpmaker_debug_log($mail,'rsvpmailer blocked sending to unsubscribed email');\n\t\treturn $mail['to'].' not sent - '.$problem;\n\t}\n\n\t$mail['html'] = rsvpmaker_personalize_email($mail['html'],$mail['to'],$description);\n\tif(isset($mail['text']))\n\t\t$mail['text'] = rsvpmaker_personalize_email($mail['text'],$mail['to'],$description);\n\tif(isset($mail['html']) && strpos($mail['html'],'<style'))\n\t\t$mail['html'] = rsvpmaker_inliner( $mail['html'] );\n\n\tif(isset($mail['subject']))\n\t\t$mail['subject'] = do_shortcode($mail['subject']);\n\n\tif(isset($mail['html']))\n\t{\n\t\t$mail['html'] = do_shortcode($mail['html']);\n\t}\n\tglobal $post, $rsvp_options, $rsvpmaker_message_type;\n\tif(isset($mail['message_type']))\n\t\t$rsvpmaker_message_type = $mail['message_type'];\n\n\t$rsvpmailer_rule = apply_filters('rsvpmailer_rule','',$mail['to'], $rsvpmaker_message_type);\n\tif($rsvpmailer_rule == 'deny') {\n\t\t$mail['html'] = '[content omitted]';\n\t\t$message = $mail['to'].' blocks messages of the type: '.$rsvpmaker_message_type;\n\t\treturn $message;\n\t}\n\t\n\tif(empty($rsvp_options[\"from_always\"]) && !empty($rsvp_options[\"smtp_useremail\"]))\n\t\t$rsvp_options[\"from_always\"] = $rsvp_options[\"smtp_useremail\"];\n\t\n\t$site_url = get_site_url();\n\t$p = explode('//',$site_url);\n\t$via = $p[1];\n\tif(empty($mail['fromname']))\n\t\t$mail['fromname'] = get_bloginfo('name');\n\n\tif(!strpos($mail['fromname'],'(via'))\n\t\t$mail['fromname'] = $mail['fromname'] . ' (via '.$via.')';\n\n\tif(!empty($rsvp_options[\"log_email\"]) && isset($post->ID))\n\t\t{\n\t\t\t$mail['timestamp'] = date('Y-m-d H:i');\n\t\t\tadd_post_meta($post->ID, '_rsvpmaker_email_log',$mail);\n\t\t}\n\t$rsvp_options = apply_filters('rsvp_email_options',$rsvp_options);\n\tif(empty($mail['html']))\n\t$mail['html'] = wpautop($mail['text']);\n\tif(empty($mail['text']))\n\t$mail['text'] = strip_tags($mail['html']);\n\n\tif(!strpos($mail['text'],'rsvpmail_unsubscribe'))\n\t\t$mail['text'] .= \"\\n\\nUnsubscribe from email notifications\\n\".site_url('?rsvpmail_unsubscribe='.$mail['to']);\n\n\tif(!strpos($mail['html'],'/html>'))\n\t\t$mail['html'] = \"<html><body>\\n\".$mail['html'].\"\\n</body></html>\";\t\t\n\tif(!strpos($mail['html'],'rsvpmail_unsubscribe'))\n\t\t$mail['html'] = str_replace('</html>',\"\\n<p>\".sprintf('Unsubscribe from email notifications<br /><a href=\"%s\">%s</a></p>',site_url('?rsvpmail_unsubscribe='.$mail['to']),site_url('?rsvpmail_unsubscribe='.$mail['to'])).'</html>',$mail['html']);\n\t\n\tif(function_exists('rsvpmailer_override'))\n\t\treturn rsvpmailer_override($mail);\n\tif(!empty($rsvp_options['from_always']) && ($rsvp_options['from_always'] != $mail['from']))\n\t{\n\t\tif(empty($mail['replyto']))\n\t\t\t$mail['replyto'] = $mail['from'];\n\t\t$mail['from'] = $rsvp_options['from_always'];\n\t}\n\t\t\n\tif(!isset($rsvp_options[\"smtp\"]) || empty($rsvp_options[\"smtp\"]))\n\t\t{\n\t\t$to = $mail[\"to\"];\n\t\t$subject = $mail[\"subject\"];\n\t\tif(!empty($mail[\"html\"]))\n\t\t\t{\n\t\t\t$mail[\"html\"] = str_replace('*|UNSUB|*',site_url('?rsvpmail_unsubscribe='.$to),$mail[\"html\"]);\n\t\t\t\n\t\t\t\t$body = $mail[\"html\"];\n\t\t\t\t\n\t\t\t\tif(function_exists('set_html_content_type') ) // if using sendgrid plugin\n\t\t\t\t\tadd_filter('wp_mail_content_type', 'set_html_content_type');\n\t\t\t\telse\n\t\t\t\t\t$headers[] = 'Content-Type: text/html; charset=UTF-8';\n\t\t\t}\n\t\telse {\n\t\t\t$body = $mail[\"text\"];\t\t\t\n\t\t}\n\t\t$headers[] = 'From: '.$mail[\"fromname\"]. ' <'.$mail[\"from\"].'>'.\"\\r\\n\";\n\t\tif(!empty($mail[\"replyto\"]))\n\t\t\t$headers[] = 'Reply-To: '.$mail[\"replyto\"] .\"\\r\\n\";\n\t\tif(!empty($mail['attachments'])) {\n\t\t\t$attachments = $mail['attachments'];\n\t\t\tprintf('<p>Attachments: %s</p>',var_export($attachments,true));\n\t\t}\n\t\telse\n\t\t\t$attachments = NULL;\n\t\tif(isset($mail[\"ical\"]))\n\t\t\t{\n\t\t\t$temp = tmpfile();\n\t\t\tfwrite($temp, $mail[\"ical\"]);\n\t\t\t$metaDatas = stream_get_meta_data($temp);\n\t\t\t$tmpFilename = $metaDatas['uri'];\n\t\t\t$icalname = $tmpFilename .'.ics';\n\t\t\trename($tmpFilename,$icalname);\n\t\t\t$attachments[] = $icalname;\n\t\t\t}\n\t\t\t\n\t\twp_mail( $to, $subject, $body, $headers, $attachments );\n\t\tif(function_exists('set_html_content_type') )\n\t\t\tremove_filter('wp_mail_content_type', 'set_html_content_type');\n\t\treturn;\n\t}\n\tglobal $wp_version;//once 5.5 is out of beta, delete 2nd test\n\tif(is_wp_version_compatible('5.5')) {\n\trequire_once ABSPATH . WPINC . '/PHPMailer/PHPMailer.php';\n\trequire_once ABSPATH . WPINC . '/PHPMailer/SMTP.php';\n\trequire_once ABSPATH . WPINC . '/PHPMailer/Exception.php';\n\t$rsvpmail = new PHPMailer\\PHPMailer\\PHPMailer();\t\n\t}\n\telse\n\t{\n\t\trequire_once ABSPATH . WPINC . '/class-phpmailer.php';\n\t\trequire_once ABSPATH . WPINC . '/class-smtp.php';\n\t\t$rsvpmail = new PHPMailer();\t\n\t}\n\t\n\tif(!empty($rsvp_options[\"smtp\"]))\n\t{\n\t\t$rsvpmail->IsSMTP(); // telling the class to use SMTP\n\t\n\tif($rsvp_options[\"smtp\"] == \"gmail\") {\n\t\t$rsvpmail->SMTPAuth   = true;                  // enable SMTP authentication\n\t\t$rsvpmail->SMTPSecure = \"tls\";                 // sets the prefix to the servier\n\t\t$rsvpmail->Host       = \"smtp.gmail.com\";      // sets GMAIL as the SMTP server\n\t\t$rsvpmail->Port       = 587;                   // set the SMTP port for the GMAIL server\n\t}\n\telseif($rsvp_options[\"smtp\"] == \"sendgrid\") {\n\t$rsvpmail->SMTPAuth   = true;                  // enable SMTP authentication\n\t$rsvpmail->Host = 'smtp.sendgrid.net';\n\t$rsvpmail->Port = 587; \n\t}\n\telseif(!empty($rsvp_options[\"smtp\"]) ) {\n\t$rsvpmail->Host = $rsvp_options[\"smtp_server\"]; // SMTP server\n\t$rsvpmail->SMTPAuth=true;\n\tif(isset($rsvp_options[\"smtp_prefix\"]) && $rsvp_options[\"smtp_prefix\"] )\n\t\t$rsvpmail->SMTPSecure = $rsvp_options[\"smtp_prefix\"];                 // sets the prefix to the server\n\t$rsvpmail->Port=$rsvp_options[\"smtp_port\"];\n\t}\n \t\n\t}\n\t\n $rsvpmail->Username= (!empty($rsvp_options[\"smtp_username\"]) ) ? $rsvp_options[\"smtp_username\"] : '';\n $rsvpmail->Password= (!empty($rsvp_options[\"smtp_password\"]) ) ? $rsvp_options[\"smtp_password\"] : '';\n $rsvpmail->CharSet = 'UTF-8';\n $rsvpmail->AddAddress($mail[\"to\"]);\n if(isset($mail[\"cc\"]) )\n\t $rsvpmail->AddCC($mail[\"cc\"]);\nif(isset($_GET['debug']))\n{\n\tif(isset($mail['attachments']))\n\t\techo '<p>Attachments set</p>';\n\telse\n\t\techo '<p>Attachments NOT set</p>';\n}\nif(isset($mail['attachments']) && is_array($mail['attachments']))\n\tforeach($mail['attachments'] as $path) {\n\t\t$rsvpmail->AddAttachment($path);\n\t\tif(isset($_GET['debug']))\n\t\t\tprintf('<p>Trying to add %s</p>',$path);\n\t}\n$site_url = get_site_url();\n$p = explode('//',$site_url);\n$via = \"(via \". $p[1].')';\nif(is_admin() && isset($_GET['debug']))\n\t$rsvpmail->SMTPDebug = 4;\nif(!empty($rsvp_options[\"smtp_useremail\"]))\n \t{\n\t $rsvpmail->SetFrom($rsvp_options[\"smtp_useremail\"], $mail[\"fromname\"]. $via);\n\t $rsvpmail->AddReplyTo($mail[\"from\"], $mail[\"fromname\"]);\n\t}\n else\n\t $rsvpmail->SetFrom($mail[\"from\"], $mail[\"fromname\"]. $via); \n $rsvpmail->ClearReplyTos();\n $rsvpmail->AddReplyTo($mail[\"from\"], $mail[\"fromname\"]);\nif(!empty($mail[\"replyto\"]))\n $rsvpmail->AddReplyTo($mail[\"replyto\"]);\n\nif(!empty($mail[\"bcc\"]) && is_array($mail[\"bcc\"]))\n{\n\t foreach($mail[\"bcc\"] as $bcc)\n\t\t $rsvpmail->AddBCC($bcc);\n}\n\n $rsvpmail->Subject = $mail[\"subject\"];\nif($mail[\"html\"])\n\t{\n\t$rsvpmail->isHTML(true);\n\t$rsvpmail->Body = $mail[\"html\"];\t\n\tif(isset($mail[\"text\"]) && !strpos($mail[\"text\"],'</')) // make sure there's no html in our text part\n\t\t$rsvpmail->AltBody = $mail[\"text\"];\n\telse\n\t{\n\t\t$striphead = preg_replace('/<html.+\\/head>/si','',$mail[\"html\"]);\n\t\t$rsvpmail->AltBody = trim(strip_tags($striphead) );\t\t\n\t\t$rsvpmail->WordWrap = 150;\n\t}\n\t}\n\telse\n\t\t{\n\t\t\t$rsvpmail->Body = $mail[\"text\"];\n\t\t\t$rsvpmail->WordWrap = 150;\n\t\t}\n\n\tif(isset($mail[\"ical\"]))\n\t\t$rsvpmail->Ical = $mail[\"ical\"];\n\t\n\ttry {\n\t\t$rsvpmail->Send();\n\t} catch (phpmailerException $e) {\n\t\techo esc_html($e->errorMessage());\n\t} catch (Exception $e) {\n\t\techo esc_html($e->getMessage()); //Boring error messages from anything else!\n\t}\n\treturn $rsvpmail->ErrorInfo;\n}\n\n\n  // Avoid name collisions.\n  if (!class_exists('RSVPMaker_Email_Options'))\n      : class RSVPMaker_Email_Options\n      {\n          // this variable will hold url to the plugin  \n          var $plugin_url;\n          \n          // name for our options in the DB\n          var $db_option = 'chimp';\n          \n          // Initialize the plugin\n          function __construct()\n          {\n              $this->plugin_url = trailingslashit( WP_PLUGIN_URL.'/'. dirname( plugin_basename(__FILE__) ) );\n\n          }\n          \n          // handle plugin options\n          function get_options()\n          {\n              $email = get_option('admin_email');\n\t\t\t  // default values\n              $options = array(\n\t\t\t  'email-from' => $email\n\t\t\t  ,'email-name' => get_bloginfo('name')\n\t\t\t  ,'reply-to' => $email\n\t\t\t  ,'chimp-key' => ''\n\t\t\t  ,'chimp-list' => ''\n\t\t\t  ,'mailing_address' => ''\n\t\t\t  ,'chimp_add_new_users' => ''\n\t\t\t  ,'company' => ''\n\t\t\t  ,\"add_notify\" => $email\n\t\t\t  );\n              \n              // get saved options\n              $saved = get_option($this->db_option);\n              \n              // assign them\n              if (is_array($saved)) {\n                  foreach ($saved as $key => $option)\n                      $options[$key] = $option;\n              }\n              \n              // update the options if necessary\n              if ($saved != $options)\n                  update_option($this->db_option, $options);\n              \n              //return the options  \n              return $options;\n          }\n          \n          // Set up everything\n          function install()\n          {\n              // set default options\n              $this->get_options();\n          }\n          \n          // handle the options page\n          function handle_options()\n          {\n\t\t\tif(!empty($_POST['rsvpelist'])) {\n\t\t\t\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t\t\t\tdie('data error');\n\t\t\t}\n\n              $options = $this->get_options();\n              \n              if (isset($_POST[\"emailsubmitted\"])) {\n                 \t\t\n\t\t\t\t  //$options = array();\n\t\t\t\t  if(is_array($options))\n                  foreach ($options as $name => $value)\n\t\t\t\t  \t{\n\t\t\t\t\tif(isset($_POST[$name]))\n\t\t\t\t\t$options[$name] = sanitize_text_field($_POST[$name]);\n\t\t\t\t  \t}\n\t\t\t\t  if(empty($_POST['chimp_add_new_users']))\n\t\t\t\t\t $options['chimp_add_new_users'] = false;\n                  update_option($this->db_option, $options);\n\n\t\t\t\tif(isset($_POST[\"add_cap\"]))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach($_POST[\"add_cap\"] as $role => $type)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$role = sanitize_text_field($role);\n\t\t\t\t\t\t\t\tif($type == 'publish')\n\t\t\t\t\t\t\t\t\tadd_rsvpemail_caps_role($role, true);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tadd_rsvpemail_caps_role($role);\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\tif(isset($_POST[\"remove_cap\"]))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach($_POST[\"remove_cap\"] as $role => $type)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tremove_rsvpemail_caps_role(sanitize_text_field($role));\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n                  \n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - mailing list.','rsvpmaker').'</p></div>';\n              }\n              \n              // URL for form submit, equals our current page\n              $action_url = admin_url('options-general.php?page=rsvpmaker-admin.php');\n; ?>\n<div class=\"wrap\" style=\"max-width:950px !important;\">\n\t<h3><?php esc_html_e('RSVPMaker Email List','rsvpmaker');?></h3>\n\t<p><?php esc_html_e(\"These settings are related to integration with the MailChimp broadcast email service, as well as RSVPMaker's own functions for broadcasting email to website members or people who have registered for your events.\",'rsvpmaker');?></p>\t\t\t\n\t<p><?php echo __(\"<strong>New for 2021</strong>: scroll down to see options for MailPoet integration\",'rsvpmaker');?></p>\t\t\t\n\t<div id=\"poststuff\" style=\"margin-top:10px;\">\n\t <div id=\"mainblock\" style=\"width:710px\">\n\t<div class=\"dbx-content\">\n\t\t \t<form name=\"EmailOptions\" action=\"<?php echo esc_attr($action_url); ?>\" method=\"post\">\n\t\t\t <?php rsvpmaker_nonce(); ?>\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'email')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"email\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"email\">\n\t\t\t\t\t<input type=\"hidden\" name=\"emailsubmitted\" value=\"1\" /> \n\t\t\t\t\t\n                    <p><?php esc_html_e('Email From','rsvpmaker');?>: \n                      <input type=\"text\" name=\"email-from\" id=\"email-from\" value=\"<?php echo esc_attr($options[\"email-from\"]); ?>\" />\n                    </p>\n                    <p><?php esc_html_e('Email Name','rsvpmaker');?>: \n                      <input type=\"text\" name=\"email-name\" id=\"email-name\" value=\"<?php echo esc_attr($options[\"email-name\"]); ?>\" />\n                    </p>\n                    <p><?php esc_html_e('MailChimp API-Key','rsvpmaker');?>: \n                      <input type=\"text\" name=\"chimp-key\" id=\"chimp-key\" value=\"<?php echo esc_attr($options[\"chimp-key\"]); ?>\" />\n                    <br /><a target=\"_blank\" href=\"http://kb.mailchimp.com/integrations/api-integrations/about-api-keys\"><?php esc_html_e('Get an API key for MailChimp','rsvpmaker');?></a>\n                    </p>\n                    <p><?php esc_html_e('Default List','rsvpmaker');?>: \n                      <select name=\"chimp-list\" id=\"chimp-list\" ><?php echo mailchimp_list_dropdown($options[\"chimp-key\"], $options[\"chimp-list\"]); ?></select>\n                    </p>\n                    <p><?php esc_html_e('Attempt to Subscribe New WordPress user emails','rsvpmaker');?>: \n                      <input type=\"checkbox\" name=\"chimp_add_new_users\" id=\"chimp_add_new_users\" value=\"1\" <?php echo ($options[\"chimp_add_new_users\"]) ? ' checked=\"checked\" ' : ''; ?> />\n                    </p>\n                    <p><?php esc_html_e('Email to notify on API listSubscribe success/failure (optional)','rsvpmaker');?>: \n                      <input type=\"text\" name=\"add_notify\" id=\"add_notify\" value=\"<?php echo esc_attr($options[\"add_notify\"]); ?>\" />\n                    </p>\n\n                    <p><?php esc_html_e('Mailing Address','rsvpmaker');?>: \n                      <input type=\"text\" name=\"mailing_address\" id=\"mailing_address\" value=\"<?php echo esc_attr($options[\"mailing_address\"]); ?>\" />\n                    </p>\n                    <p><?php esc_html_e('Company','rsvpmaker');?>: \n                      <input type=\"text\" name=\"company\" id=\"company\" value=\"<?php echo esc_attr($options[\"company\"]); ?>\" />\n                    </p>\n<h3><?php esc_html_e('Who Can Publish and Send Email?','rsvpmaker');?></h3>\n<p><?php esc_html_e('By default, only the administrator has this right, but you can add it to other roles.','rsvpmaker');?></p>\n<?php $allroles = get_editable_roles(  ); \nforeach($allroles as $slug => $properties)\n{\nif($slug == 'administrator')\n\tcontinue;\n\techo esc_html($properties[\"name\"]);\n\tif(isset($properties[\"capabilities\"]['publish_rsvpemails']))\n\t\tprintf(' %s <input type=\"checkbox\" name=\"remove_cap[%s]\" value=\"1\" /> %s <br />',__('can publish and send broadcasts','rsvpmaker'),$slug,__('Remove','rsvpmaker'));\n\telseif(isset($properties[\"capabilities\"]['edit_rsvpemails']))\n\t\tprintf(' %s <input type=\"checkbox\" name=\"remove_cap[%s]\" value=\"1\" /> %s <br />',__('can edit draft emails','rsvpmaker'),$slug,__('Remove','rsvpmaker'));\n\telse\n\t\tprintf(' %s <input type=\"radio\" name=\"add_cap[%s]\" value=\"edit\" /> %s <input type=\"radio\" name=\"add_cap[%s]\" value=\"publish\" /> %s <br />',__('grant right to','rsvpmaker'),$slug,__('Edit','rsvpmaker'),$slug,__('Publish and Send','rsvpmaker'));\n}\n?>\n\n              <div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker');?>\" /></div>\n\t\t\t</form>\n<p>See also: <a target=\"_blank\" href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_email_template'); ?>\">Email Template</a></p>\n\n\t\t</div>\n\t\t\t\t\n\t </div>\n\n\t</div>\n</div>\n\n<div id=\"mailpoet\">\n<h2>MailPoet Integration</h2>\n<p>MailPoet is a WordPress plugin and web service for sending email newsletters and other mass email, with the permission of the recipients.</p>\n<p>You can add RSVPMaker events or event listings to the content of a MailPoet newsletter using a modified versions of the RSVPMaker Shortcodes (see the <a href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=email_get_content'); ?>\">Content for Email</a> screen and the <a href=\"https://rsvpmaker.com/knowledge-base/shortcodes/\" target=\"_blank\">RSVPMaker Shortcodes Documentation</a>).</p>\n<?php\n\tif (class_exists(\\MailPoet\\API\\API::class)) {\n\t\t$mailpoet_api = \\MailPoet\\API\\API::MP('v1');\n\t\t$lists = $mailpoet_api->getLists();\n\t\tif(isset($_POST['rsvpmaker_mailpoet_list'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t{\n\t\t\t$listok = (int) $_POST['rsvpmaker_mailpoet_list'];\n\t\t\tupdate_option('rsvpmaker_mailpoet_list',$listok);\n\t\t\techo '<div class=\"notice notice-success\"><p>MailPoet List Set</p></div>';\n\t\t}\n\t\telse\n\t\t\t$listok = get_option('rsvpmaker_mailpoet_list');\n\t\t$o = '<option value=\"\">Choose List</option>';\n\t\tforeach($lists as $list) {\n\t\t\t$s = ($list['id'] == $listok) ? ' selected=\"selected\" ' : '';\n\t\t\t$o .= sprintf('<option value=\"%d\" %s>%s</option>',$list['id'], $s, $list['name']);\n\t\t}\n\tprintf('<form method=\"post\" action=\"%s\"><p>List to use with \"Add me to your email list\" checkbox <select name=\"rsvpmaker_mailpoet_list\">%s</select><button>Update</button></p>%s</form>',site_url(sanitize_text_field($_SERVER['REQUEST_URI'])),$o,rsvpmaker_nonce());\n\t}\n\telse\n\t\techo '<p>MailPoet not enabled</p>';\n?>\n<h2>Add to Email Checkbox</h2>\n<p>You can include an \"Add me to your email list\" checkbox on your RSVP forms to enlist people when they sign up for your events. This works with both MailChimp and MailPoet.</p>\n<p><image src=\"<?php echo plugins_url('rsvpmaker/images/add_to_email_block.png'); ?>\" width=\"600\" height=\"348\">\n<br />Adding the Mailing List Checkbox block</p>\n<p><image src=\"<?php echo plugins_url('rsvpmaker/images/add_to_email_checkbox.png'); ?>\" width=\"468\" height=\"578\">\n<br />Checkbox as it appears on the form</p>\n</div>\n\n<?php              \n          }\n      }\n  \n  else\n      : exit(\"Class already declared!\");\n  endif;\n  \n  // create new instance of the class\n  $RSVPMaker_Email_Options = new RSVPMaker_Email_Options();\n  global $RSVPMaker_Email_Options;\n  if (isset($RSVPMaker_Email_Options)) {\n      // register the activation function by passing the reference to our instance\n      register_activation_hook(__FILE__, array(&$RSVPMaker_Email_Options, 'install'));\n  }\n\nfunction RSVPMaker_Chimp_Add($email, $merge_vars, $status = 'pending') {\n$chimp_options = get_option('chimp');\nif(empty($chimp_options) || empty($chimp_options[\"chimp-key\"]))\n\treturn;\n\n$apikey = $chimp_options[\"chimp-key\"];\n$listId = $chimp_options[\"chimp-list\"]; \n\ntry {\n\t$MailChimp = new MailChimpRSVP($apikey);\n} catch (Exception $e) {\n\t\twp_mail($chimp_options[\"add_notify\"],\"RSVPMaker_Chimp_Add error for $email \",$e->getMessage() .' email'.$email.' '.var_export($merge_vars,true));\n    return;\n}\n\n$MailChimp = new MailChimpRSVP($apikey);\n\n$result = $MailChimp->post(\"lists/$listId/members\", array(\n                'email_address' => $email,\n                'merge_fields'        => $merge_vars,\n\t\t\t\t'status' => $status));\n\n\tif(!empty($chimp_options[\"add_notify\"]))\n\t{\n\t\t if($MailChimp->success() ) {\n\t\t\twp_mail($chimp_options[\"add_notify\"],\"RSVPMaker_Chimp_Add invite sent to $email \",var_export($merge_vars, true));\n\t\t}\n\t\telse  {\n\t\t\t// factor out already on list?\n\t\t\twp_mail($chimp_options[\"add_notify\"],\"RSVPMaker_Chimp_Add error for $email \",$MailChimp->getLastError());\n\t\treturn $MailChimp->getLastError();\n\t\t}\n\t}\n}\n\nfunction RSVPMaker_register_chimpmail($user_id) {\n$chimp_options = get_option('chimp');\n//attempt to add people who register with website, if specified on user form\nif(empty($chimp_options[\"chimp_add_new_users\"]))\n\treturn;\n$new_user = get_userdata($user_id);\n$email = $new_user->user_email;\n$merge_vars[\"FNAME\"] = $new_user->first_name;\n$merge_vars[\"LNAME\"] = $new_user->last_name;\nRSVPMaker_Chimp_Add($email, $merge_vars);\n}\n\nadd_filter( 'cron_schedules', 'rsvpmaker_add_weekly_schedule' ); \nfunction rsvpmaker_add_weekly_schedule( $schedules ) {\n  $schedules['weekly'] = array(\n    'interval' => 7 * 24 * 60 * 60, //7 days * 24 hours * 60 minutes * 60 seconds\n    'display' => __( 'Once Weekly', 'rsvpmaker' )\n  );\n  return $schedules;\n}\n\nfunction rsvpmaker_next_scheduled( $post_id, $returnint = false ) {\n\tglobal $rsvp_options;\n\tglobal $rsvpnext_time;\n\tif($returnint && !empty($rsvpnext_time[$post_id]))\n\t\treturn $rsvpnext_time[$post_id];\n\t//\n    $crons = _get_cron_array();\n    if ( empty($crons) )\n        return false;\n\t$msg = '';\n    foreach ( $crons as $timestamp => $cron ) {\n\t\tforeach($cron as $hook => $properties)\n\t\t\t{\n\t\t\tif($hook == 'rsvpmaker_cron_email')\n\t\t\t\tforeach($properties as $key => $property_array)\n\t\t\t\t\t{\n\t\t\t\t\tif(in_array($post_id,$property_array[\"args\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t$schedule = (empty($property_array[\"schedule\"])) ? '' : $property_array[\"schedule\"];\n\t\t\t\t\t\t$rsvpnext_time[$post_id] = $timestamp;\n\t\t\t\t\t\tif($returnint)\n\t\t\t\t\t\t\treturn $timestamp;\n\t\t\t\t\t\treturn utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options[\"time_format\"],$timestamp)).' '.$schedule;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n    }\n    return false;\n}\n\nfunction rsvpmaker_scheduled_email_list(  ) {\nglobal $wpdb;\nglobal $rsvp_options;\nglobal $post;\n?>\n<div class=\"wrap\"> \n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n<h2><?php esc_html_e('Scheduled Email','rsvpmaker'); ?>  </h2> \n<p><?php esc_html_e('Use this screen to create or edit a schedule for sending your email at a specific date and time or on a recurring schedule.','rsvpmaker'); ?></p>\n<?php\n\n\tif(isset($_REQUEST['post_id']))\n\t{\n\t\t$post = get_post((int) $_REQUEST['post_id']);\n\t\tprintf('<h3>Email Post: %s</h3><p><a href=\"post.php?action=edit&post=%s\">Edit Post</a> | <a href=\"%s\">View Post</a></p>',esc_html($post->post_title),esc_attr($post->ID),get_permalink($post->ID));\n\t\tprintf('<form action=\"%s\" method=\"post\">',admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&post_id=').$post->ID);\n\t\techo '<input type=\"hidden\" name=\"post_id\" value=\"'.$post->ID.'\" />';\n\t\tRSVPMaker_draw_blastoptions();\n\t\trsvpmaker_nonce();\n\t\techo '<button>Save</button></form>';\n\t}\n\telse {\n?>\n<form method=\"get\" action=\"edit.php\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpemail\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_scheduled_email_list\" /><h3><?php esc_html_e('Choose a RSVP Mailer Post','rsvpmaker'); ?></h3>\n\t<select name=\"post_id\"><?php\n$sql = \"SELECT ID, post_title FROM $wpdb->posts WHERE post_type='rsvpemail' AND (post_status='publish' OR post_status='draft') ORDER BY ID DESC \";\n$results = $wpdb->get_results($sql);\nif(is_array($results))\nforeach($results as $row)\n{\n\tprintf('<option value=\"%d\">%s</option>',esc_attr($row->ID),esc_html($row->post_title));\n}\n\t\t  ?></select>\n<button>Get</button>\n</form>\n<?php\n\t}\n\n\tif(isset($_GET['cancel'])) {\n\t\t$args[] = intval($_GET['cancel']);\n\t\t$args[] = intval($_GET['user_id']);\n\t\t$timestamp = intval($_GET['timestamp']);\n\t\twp_unschedule_event($timestamp,'rsvpmailer_delayed_send',$args);\n\t}\n\t\n    $crons = _get_cron_array();\n    if ( empty($crons) )\n        esc_html_e('None','rsvpmaker');\n\telse\n\t{\n\tprintf('<h3>%s</h3>',__('Scheduled','rsvpmaker'));\n\tprintf('<table  class=\"wp-list-table widefat fixed posts\" cellspacing=\"0\"><thead><tr><th>%s</th><th>%s</th></tr></thead><tbody>',__('Title','rsvpmaker'),__('Schedule','rsvpmaker'));\n    foreach ( $crons as $timestamp => $cron ) {\n\t\tforeach($cron as $hook => $properties)\n\t\t\t{\n\t\t\tif($hook == 'rsvpmaker_cron_email') {\n\t\t\t\tforeach($properties as $key => $property_array)\n\t\t\t\t\t{\n\t\t\t\t\t////print_r($property_array);\n\t\t\t\t\t$post_id = array_shift($property_array[\"args\"]);\n\t\t\t\t\t$post = get_post($post_id);\n\t\t\t\t\tif(!empty($post))\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprintf('<tr><td>%s <br /><a href=\"%s\">%s</a> | <a href=\"%s\">%s</a></td><td>',$post->post_title,admin_url('post.php?post='.$post_id.'&action=edit'),__('Edit Post','rsvpmaker'),admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&post_id='.$post_id),__('Schedule Options','rsvpmaker'));\n\t\t\t\t\t\t$schedule = (empty($property_array[\"schedule\"])) ? '' : $property_array[\"schedule\"];\n\t\t\t\t\t\t\n\t\t\t\t\t\techo utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options[\"time_format\"],$timestamp)).' '.$schedule;\n\t\t\t\t\t\techo '</td></tr>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($hook == 'rsvpmailer_delayed_send') {\n\t\t\t\t\t//wp_schedule_single_event( $t, 'rsvpmailer_delayed_send', array($post->ID, $current_user->ID));\n\t\t\t\t\tforeach($properties as $key => $property_array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t////print_r($property_array);\n\t\t\t\t\t\t$post_id = $property_array[\"args\"][0];\n\t\t\t\t\t\t$user_id = $property_array[\"args\"][1];\n\t\t\t\t\t\t$post = get_post($post_id);\n\t\t\t\t\t\tif(!empty($post))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintf('<tr><td>%s (%s)<br /><a href=\"%s\">%s</a> | <a href=\"%s\">%s</a></td><td>',$post->post_title,__('Delayed Send','rsvpmaker'),admin_url('post.php?post='.$post_id.'&action=edit'),__('Edit Post','rsvpmaker'),admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&timestamp='.$timestamp.'&cancel='.$post_id.'&user_id='.$user_id),__('Cancel','rsvpmaker'));\n\t\t\t\t\t\t\t$schedule = (empty($property_array[\"schedule\"])) ? '' : $property_array[\"schedule\"];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\techo utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options[\"time_format\"],$timestamp)).' '.$schedule;\n\t\t\t\t\t\t\techo '</td></tr>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n    } // end cron loop\n\techo '</table>';\n\t}\n?>\n<h3><?php esc_html_e('Shortcodes for Scheduled Email Newsletters','rsvpmaker');?></h3>\n<p><?php esc_html_e('Shortcodes you can include with scheduled email include [rsvpmaker_upcoming] (which should be used without the calendar grid) and these others, intended specifically for newsletter style messages. The attributes are optional and shown with the default values.','rsvpmaker');?></p>\n<p>[rsvpmaker_recent_blog_posts weeks=&quot;1&quot;] (<?php esc_html_e('shows blog posts published within the timeframe, default 1 week','rsvpmaker');?>)</p>\n<p>[rsvpmaker_looking_ahead days=&quot;30&quot; limit=&quot;10&quot;] (<?php esc_html_e('include after rsvpmaker_upcoming for a linked listing of just the headlines and dates of events farther out on the schedule','rsvpmaker');?>)</p>\n<?php\n}\n\nfunction cron_schedule_options() {\nglobal $post, $wpdb, $rsvp_options;\n$event_timestamp = (int) get_post_meta($post->ID,'event_timestamp',true);\n$args = array($post->ID);\n$cron = get_post_meta($post->ID,'rsvpmaker_cron_email',true);\n$notekey = get_rsvp_notekey();\n$chimp_options = get_option('chimp');\n\n$ts = rsvpmaker_next_scheduled($post->ID);\nif(empty($ts))\n\t{\n\techo '<p>Next broadcast: NOT SET</p>';\n\t$timestamp = rsvpmaker_strtotime('+1 hour');\n\t$day = (empty($cron[\"cron_active\"])) ? (int) date('w',$timestamp) : $cron[\"cronday\"];\n\t$hour = (empty($cron[\"cron_active\"])) ? (int) date('G',$timestamp)  : $cron[\"cronhour\"];\n\t}\nelse\n\t{\n\tprintf('<p>Next broadcast: %s</p>',$ts);\n\t$ts = rsvpmaker_next_scheduled($post->ID, true);//get the integer value\n\t$day = date('w',$ts);\n\t$hour = date('G',$ts);\n\t}\n?>\n<p><?php if($chimp_options[\"chimp-key\"]) { ?> <input type=\"checkbox\" name=\"cron_mailchimp\" value=\"1\"  <?php if(!empty($cron[\"cron_mailchimp\"])) echo 'checked=\"checked\"' ?> > <?php echo __('Send to MailChimp List','rsvpmaker'); } ?> <input type=\"checkbox\" name=\"cron_members\" value=\"1\"  <?php if(!empty($cron[\"cron_members\"])) echo 'checked=\"checked\"' ?> > <?php echo __('Send to Website Members','rsvpmaker');?><br />\n<?php echo __('Send to This Address','rsvpmaker');?>: <input type=\"text\" name=\"cron_to\" value=\"<?php if(!empty($cron['cron_to'])) echo esc_attr($cron['cron_to']); ?>\" />\n</p>\n<p><input type=\"radio\" name=\"cron_active\" value=\"1\" <?php if(!empty($cron[\"cron_active\"]) && ($cron['cron_active']) == '1') echo 'checked=\"checked\"' ?> /> <?php echo __('Create schedule relative to this day/time','rsvpmaker');?>: <select name=\"cronday\">\n<?php\n$days = array(__('Sunday','rsvpmaker'),__('Monday','rsvpmaker'),__('Tuesday','rsvpmaker'),__('Wednesday','rsvpmaker'),__('Thursday','rsvpmaker'),__('Friday','rsvpmaker'),__('Saturday','rsvpmaker'));\nforeach($days as $index => $daytext)\n\t{\n\t$selected = ($index == $day) ? ' selected=\"selected\" ' : '';\n\tprintf('<option  value=\"%s\" %s>%s</option>',$index,$selected,$daytext);\n\t}\n?>\n</select>\n <select name=\"cronhour\"> \n<?php\nfor($i=0; $i < 24; $i++)\n\t{\n\t$selected = ($i == $hour) ? ' selected=\"selected\" ' : '';\n\t$padded = ($i < 10) ? '0'.$i : $i;\n\tif($i == 0)\n\t\t$twelvehour = \"12 a.m.\";\n\telseif($i == 12)\n\t\t$twelvehour = \"12 p.m.\";\n\telseif($i > 12)\n\t\t$twelvehour = ($i - 12) .\" p.m.\";\n\telse\t\t\n\t\t$twelvehour = $i.\" a.m.\";\n\n\tprintf('<option  value=\"%s\" %s>%s / %s</option>',$padded,$selected,$twelvehour,$padded);\n\t}\n?>\n</select>\n<?php esc_html_e('Recurrence','rsvpmaker');?> <select name=\"cronrecur\"><option value=\"\"><?php echo __('None','rsvpmaker');?></option>\n<?php\n$sked_meta = (empty($cron[\"cronrecur\"])) ? ''  : $cron[\"cronrecur\"];\n$schedules = array('weekly','daily');\nforeach ($schedules as $sked)\n\t{\n\t$selected = ($sked == $sked_meta) ? ' selected=\"selected\" ' : '';\n\tprintf('<option  value=\"%s\" %s>%s</option>',esc_attr($sked),$selected,esc_html($sked));\n\t}\n?>\n</select>\n</p>\n\n<?php\nif($event_timestamp)\n{\n\t$evopt = '';\n\t$i = 1;\n\t$limit = 24 * 5;\n\t$days = 0;\n\t$dtext = '';\n\twhile($i <= $limit)\n\t{\n\t\tif($i < 13)\n\t\t\t$i++;\n\t\telseif($i == 13)\n\t\t\t{\n\t\t\t\t$i = 24;\n\t\t\t\t$days = 1;\n\t\t\t\t$dtext = ' (1 day before)';\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t\t$i += 24;\n\t\t\t\t$days++;\n\t\t\t\t$dtext = ' ('.$days .' days before)';\n\t\t\t}\n\t\t$deduct = $i * 60 * 60;\n\t\t$reminder = $event_timestamp - $deduct;\n\t\t$s = ($reminder == $ts) ? ' selected=\"selected\" ' : '';\n\t\t\t\n\t\t$evopt .= '<option value=\"'.esc_attr($reminder).'\"'.$s.'>'.rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'],$reminder).$dtext.'</option>';\n\t}\n\t$checked = (!empty($cron[\"cron_active\"]) && ($cron[\"cron_active\"]) == \"relative\") ? 'checked=\"checked\"' : '';\nprintf('<p><input type=\"radio\" name=\"cron_active\" value=\"relative\" '.$checked.' /> Set reminder relative to event %s<br /><select name=\"cron_relative\">%s</select></p>',rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'],$event_timestamp),$evopt);\n}\n$checked = (!empty($cron[\"cron_active\"]) && ($cron[\"cron_active\"]) == \"rsvpmaker_strtotime\") ? 'checked=\"checked\"' : '';\n$timestring = ($ts) ? date('Y-m-d H:i:s',$ts) : date('Y-m-d H:00:00',rsvpmaker_strtotime('+ 1 hour'));\n?>\n<p><input type=\"radio\" name=\"cron_active\" value=\"rsvpmaker_strtotime\" <?php echo $checked; ?> /> Custom date time string <input type=\"text\" name=\"cron_rsvpmaker_strtotime\" value=\"<?php echo esc_attr($timestring); ?>\" /></p>\n<p><input type=\"radio\" name=\"cron_active\" value=\"clear\" /> Clear schedule</p>\n\n<p>\n<?php\n$preview = (!empty($cron[\"cron_preview\"]) ) ? (int) $cron[\"cron_preview\"] : 0;\n$preview_options = '';\nfor($i = 0; $i < 25; $i++)\n\t{\n\t$s = ($i == $preview) ? ' selected=\"selected\"' : '';\n\t$label = ($i) ? $i.' hours before' : 'none';\n\t$preview_options .= sprintf('<option value=\"%d\" %s>%s</option>',$i,$s,$label);\n\t}\n?>\n<?php esc_html_e('Preview','rsvpmaker');?> <select name=\"cron_preview\"><?php echo $preview_options; ?></select>\n</p>\n\n<p>\n<?php\n$condition = (!empty($cron[\"cron_condition\"]) ) ? $cron[\"cron_condition\"] : 'none';\n$blog_options = $condition_options = '';\n$conditions = array('none' => __('none','rsvpmaker'),'events' => __('Future events','rsvpmaker'),'posts' => __('Recent posts','rsvpmaker'),'and' => __('Both events and posts','rsvpmaker'),'or' => __('Either events or posts','rsvpmaker'));\nforeach($conditions as $slug => $text)\n\t{\n\t$s = ($slug == $condition) ? ' selected=\"selected\"' : '';\n\t$condition_options .= sprintf('<option value=\"%s\" %s>%s</option>',$slug,$s,$text);\n\t}\n?>\n<?php esc_html_e('Test for','rsvpmaker');?>: <select name=\"cron_condition\"><?php echo $condition_options; ?></select>\n<br /><em><?php esc_html_e('Broadcast will not be sent if it does not meet this test.','rsvpmaker');?></em>\n</p>\n<?php\n\t\n$chosen = (int) get_post_meta($post->ID,$notekey,true);\n$editorsnote[\"add_to_head\"] = $editorsnote[\"note\"] = '';\n\n$recent = $wpdb->get_results(\"SELECT ID, post_title, post_status FROM $wpdb->posts WHERE post_type='post' AND (post_status='publish' OR post_status='draft') ORDER BY ID DESC LIMIT 0,20\");\nif(is_array($recent))\nforeach($recent as $blog)\n\t{\n\t$s = ($blog->ID == $chosen) ? ' selected=\"selected\"' : '';\n\tif($blog->ID == $chosen)\n\t\t$chosentitle = $blog->post_title;\n\t$title = ($blog->post_status == 'draft') ? $blog->post_title. ' (draft)' : $blog->post_title;\n\t$blog_options .= sprintf('<option value=\"%d\" %s>%s</option>',esc_attr($blog->ID),$s,esc_html($title));\n\t}\n\nif($chosen)\n{\n\t$blog = get_post($chosen);\n\t$chosentitle = $blog->post_title;\n\t$blog_options .= sprintf('<option value=\"%d\" selected=\"selected\">%s</option><option value=\"\">(Clear Selection)</option>',esc_attr($blog->ID),esc_html($blog->post_title));\n\tprintf('<p>The current editor\\'s note is based on the blog post <strong>%s</strong>. <a href=\"%s\">(Edit)</a></p>',esc_html($chosentitle),admin_url('post.php?action=edit&post='.(int)$chosen));\n\techo \"<p>notekey $notekey</p>\";\n}\n?>\n<h3 id=\"editorsnote\"><?php esc_html_e(\"Add Editor's Note for\",'rsvpmaker'); if(empty($stamp)) echo ' Next broadcast'; else echo ' '.$ts;?></h3>\n<input type=\"hidden\" name=\"notekey\" value=\"<?php echo esc_attr($notekey); ?>\">\n\n<p><?php esc_html_e(\"A blog post, either public or draft, can be featured as the editor's note at the top of your next email newsletter broadcast. The content of the post title will be added to the end of the email subject line, and the content of the post (up to the more tag, if included) will be included in the body of your email. There are two ways to add an Editor's Note blog post.\",'rsvpmaker');?></p>\n\n<p><input type=\"radio\" name=\"status\" value=\"\" checked=\"checked\" /> <strong><?php esc_html_e('Pick a blog post to feature','rsvpmaker');?>:</strong> <select name=\"chosen\"><option value=\"\"><?php esc_html_e('Select Blog Post','rsvpmaker');?></option><?php echo $blog_options; ?></select></p>\n\n\t<p><input type=\"radio\" name=\"status\" value=\"draft\" /> <strong>Create a draft</strong> based on the headline and message below <br /><input type=\"radio\" name=\"status\" value=\"publish\" /> <strong>Create and publish</strong> blog based on the headline and message below</strong><br /> <em>(<?php esc_html_e('This post will be used as the editors note at the top of your broadcast. Making it public on the blog is optional.','rsvpmaker');?>)</p>\n\n<p><?php esc_html_e('Title/Subject','rsvpmaker');?>: <input type=\"text\" name=\"notesubject\" value=\"\" /></p>\n<p>Message:<br />\n<textarea cols=\"100\" rows=\"5\" name=\"notebody\"></textarea></p>\n\n<?php\n\n}\n\nfunction RSVPMaker_draw_blastoptions() {\nglobal $post;\n$chimp_options = get_option('chimp');\nif(empty($chimp_options[\"email-from\"]))\n\t{\n\tprintf('<p>%s: <a href=\"%s\">%s</a></p>',__('You must fill in the RSVP Mailer settings before first use','rsvpmaker'),admin_url('options-general.php?page=rsvpmaker-email.php'),__('Settings','rsvpmaker'));\n\treturn;\n\t}\nif(empty($_GET[\"post_id\"]))\n\treturn;\n//$post = get_post($_GET[\"post_id\"]);\n$scheduled_email = get_post_meta($post->ID,'scheduled_email',true);\nif(empty($scheduled_email))\n\t$scheduled_email = array();\nforeach($chimp_options as $label => $value)\n{\n\tif(empty($scheduled_email[$label]))\n\t\t$scheduled_email[$label] = $value;\n}\n\t\nif(empty($scheduled_email['preview_to']))\n\t$scheduled_email['preview_to'] = $scheduled_email['email-from'];\nif(empty($scheduled_email['template']))\n\t$scheduled_email['template'] = '';\n\t\n$permalink = get_permalink($post->ID);\n$template = get_rsvpmaker_email_template();\n?>\n<table>\n<tr><td><?php esc_html_e('From Name','rsvpmaker');?>:</td><td><input type=\"text\"  size=\"80\" name=\"scheduled_email[email-name]\" value=\"<?php echo esc_attr($scheduled_email[\"email-name\"]); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('From Email','rsvpmaker');?>:</td><td><input type=\"text\" size=\"80\"  name=\"scheduled_email[email-from]\" value=\"<?php echo esc_attr($scheduled_email[\"email-from\"]); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('Preview To','rsvpmaker');?>:</td><td><input type=\"text\" size=\"80\" name=\"scheduled_email[preview_to]\" value=\"<?php echo esc_attr($scheduled_email['preview_to']); ?>\" />\n</td></tr>\n</table>\n\n<p><?php esc_html_e('MailChimp List','rsvpmaker');?> <select name=\"scheduled_email[list]\">\n<?php\n$chosen = (isset($scheduled_email[\"list\"])) ? $scheduled_email[\"list\"] : $chimp_options[\"chimp-list\"];\necho mailchimp_list_dropdown($chimp_options[\"chimp-key\"], $chosen);\n?>\n</select></p>\n\n<?php\nif(current_user_can('publish_rsvpemails'))\n\tcron_schedule_options();\n}\n\nfunction RSVPMaker_email_notice () {\nglobal $post;\n?>\n\t<div><h3>Email Editor</h3><p>Use the WordPress editor to compose the body of your message, with the post title as your subject line. <a href=\"<?php echo get_permalink($post->ID); ?>\">View Post</a> will display your content in an email template, with a user interface for addressing options.</p>\n<p>See also <a href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&post_id=').esc_attr($post->ID); ?>\">Scheduled email options</a></p>\n</div><?php\n}\n\nfunction my_rsvpemails_menu() {\nif(!function_exists('do_blocks'))\nadd_meta_box( 'BlastBox', 'RSVPMaker Email Options', 'RSVPMaker_email_notice', 'rsvpemail', 'normal', 'high' );\n}\n\nadd_action('admin_init','save_rsvpemail_data');\n\nfunction save_rsvpemail_data() {\n\nif(empty($_POST) || empty($_REQUEST['post_id']) || empty($_REQUEST['page']) || ($_REQUEST['page'] != 'rsvpmaker_scheduled_email_list'))\n\treturn;\nif( ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\treturn;\n$post_id = (int) $_REQUEST['post_id'];\n\nif(isset($_POST['scheduled_email'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\tif(is_array($_POST['scheduled_email']))\n\t\t$scheduled_email = array_map('sanitize_text_field',$_POST['scheduled_email']);\n\telse\n\t\t$scheduled_email = sanitize_text_field($_POST['scheduled_email']);\n\tupdate_post_meta($post_id,'scheduled_email',$scheduled_email);\n}\n\nif(!empty($_POST[\"email\"][\"from_name\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\tglobal $wpdb;\n\tglobal $current_user;\n\t\t\t\n\t\t$ev = array_map('sanitize_text_field',$_POST[\"email\"]);\n\t\tif(empty($ev[\"headline\"]))\n\t\t\t$ev[\"headline\"] = 0;\n\t\tforeach($ev as $name => $value)\n\t\t\t{\n\t\t\t$value = sanitize_text_field($value);\n\t\t\t$field = '_email_'.$name;\n\t\t\t$single = true;\n\t\t\t$current = get_post_meta($post_id, $field, $single);\n\t\t\t \n\t\t\tif($value && ($current == \"\") )\n\t\t\t\tadd_post_meta($post_id, $field, $value, true);\n\t\t\t\n\t\t\telseif($value != $current)\n\t\t\t\tupdate_post_meta($post_id, $field, $value);\n\t\t\t\n\t\t\telseif($value == \"\")\n\t\t\t\tdelete_post_meta($post_id, $field, $current);\n\t\t\t}\n\t}\n\tif( (isset($_POST[\"cron_active\"]) || !empty($_POST[\"cron_relative\"])) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\tprint_r($_POST);\n\t$chosen = (int) $_POST[\"chosen\"]; \n\tif(empty($_POST['cronday']))\n\t{\n\t\t$cronday = (int) $_POST['cronday'];\n\t\t$days = array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday');\n\t\t$day = $days[$cronday];\n\t}\n\tif(!empty($_POST['notesubject']) || !empty($_POST['notebody']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\tglobal $current_user;\n\t\t$newpost['post_title'] = sanitize_text_field(stripslashes($_POST['notesubject']));\n\t\t$newpost['post_content'] = wp_kses_post(rsvpautog(stripslashes($_POST['notebody'])));\n\t\t$newpost['post_type'] = 'post';\n\t\t$newpost['post_status'] = sanitize_text_field($_POST['status']);\n\t\t$newpost['post_author'] = $current_user->ID;\n\t\t$chosen = wp_insert_post( $newpost );\n\t}\n\t\n\tif(!empty($_POST['notekey']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\t\n\t\tupdate_post_meta($post_id,sanitize_text_field($_POST['notekey']),$chosen);\n\t$args = array('post_id' => $post_id);\n\t$cron_checkboxes = array(\"cron_active\", \"cron_mailchimp\", \"cron_members\", \"cron_preview\");\n\tforeach($cron_checkboxes as $check)\n\t\t{\n\t\t\t$cron[$check] = (isset($_POST[$check])) ? sanitize_text_field($_POST[$check]) : 0;\n\t\t}\n\t$cron['cron_to'] = sanitize_text_field($_POST['cron_to']);\n\t//clear if previously set\n\twp_clear_scheduled_hook( 'rsvpmaker_cron_email', $args );\n\twp_clear_scheduled_hook( 'rsvpmaker_cron_email_preview', $args );\n\tupdate_post_meta($post_id,'rsvpmaker_cron_email',$cron);\n\n\tif($cron[\"cron_active\"] == '1')\n\t\t{\n\t\t\t$cron_fields = array(\"cronday\", \"cronhour\", \"cronrecur\",\"cron_condition\");\n\t\t\tforeach($cron_fields as $field)\n\t\t\t\t$cron[$field] = sanitize_text_field($_POST[$field]);\n\t\t\t$days = array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday');\n\t\t\t$t = rsvpmaker_strtotime($days[$cron[\"cronday\"]] .' '.$cron[\"cronhour\"].':00');\n\t\t\tif($t < time())\n\t\t\t\t$t = rsvpmaker_strtotime('next '. $days[$cron[\"cronday\"]] .' '.$cron[\"cronhour\"].':00');\n\t\t}\n\telseif(($cron[\"cron_active\"] == 'relative') && !empty($_POST[\"cron_relative\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t$t = (int) $_POST[\"cron_relative\"];\n\telseif(($cron[\"cron_active\"] == 'rsvpmaker_strtotime') && !empty($_POST[\"cron_rsvpmaker_strtotime\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$t = rsvpmaker_strtotime(sanitize_text_field($_POST[\"cron_rsvpmaker_strtotime\"]));\n\t}\n\t\n\t\n\tif(!empty($t))\n\t\t{\n\t\t\tif($cron[\"cron_preview\"])\n\t\t\t\t{\n\t\t\t\t\t$preview = $t - ($cron[\"cron_preview\"] * 3600);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t$preview = 0;\n\t\t\tif(empty($cron[\"cronrecur\"]))\n\t\t\t\t{\n\t\t\t\t\t// single cron\n\t\t\t\t\twp_schedule_single_event( $t, 'rsvpmaker_cron_email', $args );\n\t\t\t\t\tif($preview)\n\t\t\t\t\t\twp_schedule_single_event( $preview, 'rsvpmaker_cron_email_preview', $args );\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twp_schedule_event( $t, $cron[\"cronrecur\"], 'rsvpmaker_cron_email', $args );\n\t\t\t\t\tif($preview)\n\t\t\t\t\t\twp_schedule_event( $preview, $cron[\"cronrecur\"], 'rsvpmaker_cron_email_preview', $args );\n\t\t\t\t}\n\t\t}\n\telse\n\t\t{\n\t\tdelete_post_meta($post_id,'rsvpmaker_cron_email');\n\t\twp_clear_scheduled_hook( 'rsvpmaker_cron_email', $args );\n\t\twp_clear_scheduled_hook( 'rsvpmaker_cron_email_preview', $args );\n\t\t}\n\theader('Location: ' . site_url(sanitize_text_field($_SERVER['REQUEST_URI'])));\n\tdie();\n\t}\n}\n\nfunction rsvpevent_to_email () {\nglobal $current_user, $rsvp_options, $email_context;\n\nif(!current_user_can('edit_posts'))\n\treturn;\n\nif(!empty($_GET[\"rsvpevent_to_email\"]) || !empty($_GET[\"post_to_email\"]))\n\t{\n\t\t$email_context = true;\n\t\tif(!empty($_GET[\"post_to_email\"]))\n\t\t\t{\n\t\t\t\t$id = (int) $_GET[\"post_to_email\"];\n\t\t\t\t$permalink = get_permalink($id);\n\t\t\t\t$post = get_post($id);\n\t\t\t\t$content = '';\n\t\t\t\tif($post->post_type == 'rsvpmaker')\n\t\t\t\t{\n\t\t\t\t\t$content .= sprintf(\"<!-- wp:heading -->\\n<h2>%s</h2>\\n<!-- /wp:heading -->\\n\",$post->post_title);\n\t\t\t\t\t$block = rsvp_date_block($id);\n\t\t\t\t\t$blockgraph = str_replace('</div><div class=\"rsvpcalendar_buttons\">','<br />',$block['dateblock']);\n\t\t\t\t\t$blockgraph = \"<!-- wp:paragraph -->\\n<p><strong>\".strip_tags($blockgraph,'<br><a>').'</strong></p>'.\"\\n<!-- /wp:paragraph -->\";\n\t\t\t\t\t$content .= $blockgraph;\n\t\t\t\t}\n\t\t\t\tif(!empty($_GET['excerpt'])) {\n\t\t\t\t\t$content .= sprintf(\"<!-- wp:heading -->\\n\".'<h2><a href=\"%s\" class=\"article\">%s</a></h2>'.\"\\n<!-- /wp:heading -->\\n\",$permalink,$post->post_title);\n\t\t\t\t\t$graphs = explode(\"<!-- /wp:paragraph -->\",$post->post_content);\n\t\t\t\t\tfor($i = 0; $i < 5; $i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!empty($graphs[$i]))\n\t\t\t\t\t\t$content .= $graphs[$i].\"<!-- /wp:paragraph -->\";\n\t\t\t\t\t}\n\t\t\t\t\t$content .= sprintf('<!-- wp:paragraph -->\n\t\t\t\t\t<p><a href=\"%s\" class=\"readmore\">Read More</a></p>\n\t\t\t\t\t<!-- /wp:paragraph -->',$permalink);\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$content .= $post->post_content;\n\t\t\t\tif(($post->post_type == 'rsvpmaker') && get_rsvpmaker_meta($post->ID,'_rsvp_on',true))\n\t\t\t\t{\n\t\t\t\t\t$rsvplink = sprintf($rsvp_options['rsvplink'],get_permalink($id).'#rsvpnow');\n\t\t\t\t\t$content .= \"\\n\\n<!-- wp:paragraph -->\\n\".$rsvplink.\"\\n<!-- /wp:paragraph -->\";\n\t\t\t\t}\n\n\t\t\t\t$title = $post->post_title;\n\t\t\t}\n\t\telse\n\t\t{\n\t\t$id = sanitize_text_field($_GET[\"rsvpevent_to_email\"]);\n\t\tif(is_numeric($id))\n\t\t\t{\n\t\t\t\tif(empty($content))\n\t\t\t\t\t$content = '<!-- wp:rsvpmaker/event {\"post_id\":\"'.$id.'\",\"one_format\":\"button\"} /-->';\n\t\t\t\t$title = get_the_title($id);\n\t\t\t\t$date = get_rsvp_date($id);\t\t\n\t\t\t\tif($date) {\n\t\t\t\t\n\t\t\t\t$t = rsvpmaker_strtotime($date);\n\t\t\t\tglobal $rsvp_options;\n\t\t\t\t$title .= ' - '.rsvpmaker_date($rsvp_options[\"short_date\"],$t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\telseif($id == 'upcoming') {\n\t\t\t$content .= '<!-- wp:rsvpmaker/upcoming {\"posts_per_page\":\"20\",\"hideauthor\":\"true\"} /-->';\n\t\t\t$title = 'Upcoming Events';\n\t\t}\n\t\telse\n\t\t\treturn;\n\t\t}\n\t\t$my_post['post_title'] = $title;\n\t\t$my_post['post_content'] = $content;\n\t\t$my_post['post_type'] = 'rsvpemail';\n\t\t$my_post['post_status'] = 'publish';\n\t\t$my_post['post_author'] = $current_user->ID;\n\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t{\n\t\t\tif(!empty($t))\n\t\t\t\tadd_post_meta($post_id,'event_timestamp',$t);\n\t\t\t$loc = admin_url(\"post.php?action=edit&post=\".$post_id);\n\t\t\twp_redirect($loc);\n\t\t\texit;\n\t\t\t}\n\t}\n}\n\nfunction create_rsvpemail_post_type() {\nglobal $rsvp_options;\n  register_post_type( 'rsvpemail',\n    array(\n      'labels' => array(\n        'name' => __( 'RSVP Mailer','rsvpmaker' ),\n        'add_new_item' => __( 'Add New Email','rsvpmaker' ),\n        'edit_item' => __( 'Edit Email','rsvpmaker' ),\n        'new_item' => __( 'RSVP Emails','rsvpmaker' ),\n        'singular_name' => __( 'RSVP Email','rsvpmaker' )\n      ),\n\t'public' => true,\n\t'exclude_from_search' => true,\n    'publicly_queryable' => true,\n    'show_ui' => true, \n    'query_var' => true,\n    'rewrite' => true,\n    'capabilities' => array(\n        'edit_post' => 'edit_rsvpemail',\n        'edit_posts' => 'edit_rsvpemails',\n        'edit_others_posts' => 'edit_others_rsvpemails',\n        'publish_posts' => 'publish_rsvpemails',\n        'read_post' => 'read_rsvpemail',\n        'read_private_posts' => 'read_private_rsvpemails',\n        'delete_post' => 'delete_rsvpemail'\n    ),\n    'hierarchical' => false,\n    'menu_position' => 20,\n\t'menu_icon' => 'dashicons-email-alt',\n    'supports' => array('title','editor'),\n\t'show_in_rest' => true\n    )\n  );\n}\n\nfunction add_rsvpemail_caps() {\n    // gets the administrator role\n    $admins = get_role( 'administrator' );\n    $admins->add_cap( 'edit_rsvpemail' ); \n    $admins->add_cap( 'edit_rsvpemails' ); \n    $admins->add_cap( 'edit_others_rsvpemails' ); \n    $admins->add_cap( 'publish_rsvpemails' ); \n    $admins->add_cap( 'read_rsvpemail' ); \n    $admins->add_cap( 'read_private_rsvpemails' ); \n    $admins->add_cap( 'delete_rsvpemail' ); \n}\n\nfunction add_rsvpemail_caps_role($role, $publish = false) {\n    // gets the administrator role\n    $emailers= get_role( $role );\n    $emailers->add_cap( 'edit_rsvpemail' ); \n    $emailers->add_cap( 'edit_rsvpemails' );\n    $emailers->add_cap( 'edit_others_rsvpemails' ); \n    $emailers->add_cap( 'read_rsvpemail' ); \n    $emailers->add_cap( 'read_private_rsvpemails' ); \n    $emailers->add_cap( 'delete_rsvpemail' ); \n\tif($publish)\n    \t$emailers->add_cap( 'publish_rsvpemails' ); \n}\n\nfunction remove_rsvpemail_caps_role($role) {\n    // gets the administrator role\n    $emailers= get_role( $role );\n    $emailers->remove_cap( 'edit_rsvpemail' ); \n    $emailers->remove_cap( 'edit_rsvpemails' );\n    $emailers->remove_cap( 'edit_others_rsvpemails' ); \n    $emailers->remove_cap( 'read_rsvpemail' ); \n    $emailers->remove_cap( 'read_private_rsvpemails' ); \n    $emailers->remove_cap( 'delete_rsvpemail' ); \n   \t$emailers->remove_cap( 'publish_rsvpemails' ); \n}\n\n// Template selection\nfunction rsvpemail_template_redirect()\n{\n\nglobal $wp;\nglobal $wp_query;\n\n\tif (isset($wp->query_vars[\"post_type\"]) && ($wp->query_vars[\"post_type\"] == \"rsvpemail\"))\n\t{\n\t\tif (have_posts())\n\t\t{\n\t\t\tinclude(WP_PLUGIN_DIR . '/rsvpmaker/rsvpmaker-email-template.php');\n\t\t\tdie();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$wp_query->is_404 = true;\n\t\t}\n\t}\n}\n\nfunction rsvpmaker_text_version($content, $chimpfooter_text = '')\n{\n//match text links (not link around image, which would start with <)\n$content = preg_replace('/<head.+<\\/head>/s','',$content);\npreg_match_all('/href=\"([^\"]+)[^>]*>([^<]+)/',$content,$matches);\nif(!empty($matches))\n\t{\n\t$content .= \"\\n\\nLinks:\\n\\n\";\n\t\tforeach($matches[1] as $index => $link)\n\t\t\t{\n\t\t\t$content .= $matches[2][$index] .\"\\n\"; //anchor text\t\n\t\t\t$content .= $link .\"\\n\\n\";\n\t\t\t}\n\t}\n$text = trim(strip_tags($content));\n$text = preg_replace(\"/[\\r\\n]{3,}/\",\"\\n\\n\",$text);\n\n$text .= $chimpfooter_text;\nreturn $text;\n}\n\nfunction rsvpmaker_personalize_email($content,$to,$description = '', $post_id = 0) {\n$chimp_options = get_option('chimp');\nif(empty($chimp_options['mailing_address'])) $chimp_options['mailing_address'] = apply_filters('rsvpmaker_mailing_address','[not set in RSVPMaker Mailing List settings]');\nglobal $post;\nif($post_id)\n\t$post = get_post($post_id);\n$content = preg_replace('/\\*.{1,4}EMAIL.{1,4}\\*/',$to,$content);\n$content = preg_replace('/\\*.{1,4}UNSUB.{1,4}\\*/',site_url('?rsvpmail_unsubscribe='.$to),$content);\n$content = preg_replace('/\\*.{1,4}REWARDS.{1,4}\\*/','',$content);\n$content = preg_replace('/\\*.{1,4}LIST:DESCRIPTION.{1,4}\\*/',$description,$content);\n$content = preg_replace('/\\*.{1,4}LIST:ADDRESS.{1,4}\\*/',$chimp_options['mailing_address'],$content);\n$content = preg_replace('/\\*.{1,4}HTML:LIST_ADDRESS_HTML.{1,4}\\*/',$chimp_options['mailing_address'],$content);\n$content = preg_replace('/\\*.{1,4}LIST:COMPANY.{1,4}\\*/',$chimp_options['company'],$content);\n$content = preg_replace('/\\*.{1,4}CURRENT_YEAR.{1,4}\\*/',date('Y'),$content);\nif(isset($post->ID))\n$content = preg_replace('/\\*.{1,4}ARCHIVE.{1,4}\\*/',get_permalink($post->ID),$content);\n$content = preg_replace('/<a .+FORWARD.+/','',$content);\n$content = preg_replace('/\\*.+\\*/','',$content); // not recognized, get rid of it.\nreturn $content;\t\n}\n\nadd_shortcode('rsvpmaker_personalize_email_test','rsvpmaker_personalize_email_test');\n\nfunction rsvpmaker_personalize_email_test () {\n\t$content = '<p>A sorry state of *|EMAIL|* other *%CEMAILxy* stuff *|LIST:DESCRIPTION|*</p>';\n\t$to = 'mew@here.com';\n\t$description = 'This is a test';\n\treturn rsvpmaker_personalize_email($content,$to,$description = '');\n\n}\n\nfunction rsvpmailer_submitted($html,$text,$postvars,$post_id,$user_id) {\n\tglobal $wpdb, $current_user;\n\t$mail['html'] = $html;\n\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\tprintf('<p>from %s</p>',$from);\n\tupdate_post_meta($post_id,'rsvprelay_from',$from);\n\tupdate_post_meta($post_id,'rsvprelay_fromname',$postvars[\"from_name\"]);\n\t$post = get_post($post_id);\n\tif(!empty($postvars[\"preview\"]))\n\t\t{\n\t\t$previewto = trim($postvars[\"previewto\"]);\n\t\tif(is_email($previewto))\n\t\t\t{\n\t\t\techo '<p>Sending preview to '.$previewto.'</p>';\n\t\t\t$mail[\"to\"] = $previewto;\n\t\t\t$mail[\"from\"] = $from;\n\t\t\t$mail[\"fromname\"] = stripslashes($postvars[\"from_name\"]);\n\t\t\t$mail[\"subject\"] = stripslashes($postvars[\"subject\"]);\n\t\t\t$result = rsvpmailer($mail,__('You were sent this message as a preview','rsvpmaker'));\n\t\t\techo esc_html($result);\n\t\t\tif(!strpos($result,'unsubscribe') && !strpos($result,'blocked'))\n\t\t\t\tadd_post_meta($post->ID,'rsvpmail_sent',$mail['to'].' (preview) '.rsvpmaker_date('r'));\n\t\t\telse\n\t\t\t\tadd_post_meta($post->ID,'rsvpmail_blocked',$result);\n\t\t\t}\n\t\telse\n\t\t\techo '<div style=\"color:red;\">Error: '.$previewto.' - '.__('Error, not a single valid email address','rsvpmaker').'</div>';\n\t\t\t\n\t\t}\n\n\tif(!empty($postvars['test'])) {\n\t\techo '<p>queuing test</p>';\n\t\tfor($i=70; $i < 75; $i++)\n\t\t\tadd_post_meta($post_id,'rsvprelay_to','test'.$i.'@rsvpmaker.com');\n\t}\n\t\n\tif(!empty($postvars[\"attendees\"]) && !empty($postvars[\"event\"]) )\n\t{\n\t\n\tif($postvars[\"event\"] == 'any')\n\t{\n\t$sql = \"SELECT DISTINCT email \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker`\";\n\t$title = 'one of our previous events';\t\n\t}\n\telse {\n\t$event = (int) $postvars[\"event\"];\n\t$event_post = get_post($event);\n\t$sql = \"SELECT * \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker` \n\tWHERE  `event` = \".$event.\" ORDER BY  `email` ASC\";\n\t$title = $event_post->post_title;\n\t}\n\t$results = $wpdb->get_results($sql);\n\tif(!empty($results))\n\t{\n\techo '<p>'.__('Sending to','rsvpmaker').' '.sizeof($results).' '. __('event attendees','rsvpmaker').'</p>';\n\tforeach($results as $row)\n\t\t{\n\t\tif($problem = rsvpmail_is_problem($row->email))\n\t\t\t{\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tadd_post_meta($post_id,'rsvprelay_to',$row->email);\n\t\t}\n\t}\n\t\n\t}\n\t\n\tif(!empty($postvars[\"rsvps_since\"]) && !empty($postvars[\"since\"]) )\n\t{\n\t$since = (int) $postvars[\"since\"];\n\t$t = rsvpmaker_strtotime('-'.$since.' days');\n\t\n\t$date = date('Y-m-d',$t);\n\t\n\t$sql = \"SELECT DISTINCT email \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker` WHERE `timestamp` > '$date'\";\n\t$title = 'one of our previous events';\n\t\n\t$results = $wpdb->get_results($sql);\n\tif(!empty($results))\n\t{\n\techo '<p>'.__('Sending to','rsvpmaker').' '.sizeof($results).' '. __('RSVPs within the last ','rsvpmaker').' '.sanitize_text_field($postvars[\"since\"]).' days</p>';\n\tforeach($results as $row)\n\t\t{\n\t\tif($problem = rsvpmail_is_problem($row->email))\n\t\t\t{\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\t$unsubscribed[] = $row->email;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tadd_post_meta($post_id,'rsvprelay_to',$row->email);\n\t\t}\n\t}\n\t\n\t}\t\n\t\n\tif(!empty($postvars['custom_list'])) {\n\t\tpreg_match_all (\"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", sanitize_textarea_field($postvars['custom_list']), $emails);\n\t\tif(!empty($emails[0]))\n\t\t{\n\t\t\tprintf('<p>Sending to %s recipients (custom list)</p>',sizeof($emails[0]));\n\t\t\tupdate_post_meta($post_id,'message_description',__('This message was sent from','rsvpmaker').' '.sanitize_text_field($_SERVER['SERVER_NAME']));\n\t\t\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\t\t\tupdate_post_meta($post_id,'rsvprelay_fromname',stripslashes($postvars[\"from_name\"]));\n\t\t\tforeach($emails[0] as $email)\n\t\t\t\t{\n\t\t\t\tif( $problem = rsvpmail_is_problem($email) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$unsubscribed[] = $email;\n\t\t\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tadd_post_meta($post_id,'rsvprelay_to',$email);\n\t\t\t\t}\t\t\t\t\t\n\t\t}\n\t}\n\n\tif(!empty($postvars[\"members\"]))\n\t{\n\t$users = get_users('blog='.get_current_blog_id());\n\tprintf('<p>Sending to %s website members</p>',sizeof($users));\n\tupdate_post_meta($post_id,'message_description',__('This message was sent to you as a member of','rsvpmaker').' '.sanitize_text_field($_SERVER['SERVER_NAME']));\n\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\tupdate_post_meta($post_id,'rsvprelay_fromname',stripslashes($postvars[\"from_name\"]));\n\tforeach($users as $user)\n\t\t{\n\t\tif( $problem = rsvpmail_is_problem($user->user_email) )\n\t\t\t{\n\t\t\t\t$unsubscribed[] = $user->user_email;\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tadd_post_meta($post_id,'rsvprelay_to',$user->user_email);\n\t\t}\n\t}\n\t\n\tif(!empty($postvars[\"network_members\"]) && user_can('manage_network',$user_id) )\n\t{\n\tupdate_post_meta($post_id,'message_description',__('This message was sent to you as a member of ','rsvpmaker').' '.sanitize_text_field($_SERVER['SERVER_NAME']));\n\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\tupdate_post_meta($post_id,'rsvprelay_fromname',sanitize_text_field(stripslashes($postvars[\"from_name\"])));\n\t$users = get_users('blog='.get_current_blog_id());\n\tprintf('<p>Sending to %s website members</p>',sizeof($users));\n\tforeach($users as $user)\n\t\t{\n\t\tif($problem = rsvpmail_is_problem($user->user_email))\n\t\t\t{\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\t$unsubscribed[] = $user->user_email;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tupdate_post_meta($post_id,'rsvprelay_to',$user->user_email);\n\t\t}\n\t}\n\t\n\tif(!empty($postvars[\"mailchimp\"]) )\n\t{\n\t$chimp_options = get_option('chimp');\n\t$MailChimp = new MailChimpRSVP($chimp_options[\"chimp-key\"]);\n\t$listID = sanitize_text_field($postvars[\"mailchimp_list\"]);\n\tupdate_post_meta($post_id, \"_email_list\",$listID);\n\t$custom_fields[\"_email_list\"][0] = $listID;\n\t$segment_opts = array();\n\t\n\tif(!empty($postvars[\"mailchimp_exclude_rsvp\"]))\n\t{\n\t$event = (int) $postvars[\"mailchimp_exclude_rsvp\"];\t\n\t$sql = \"SELECT * \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker` \n\tWHERE  `event` = \".$event;\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $row)\n\t\t$rsvped[] = array('field' => 'EMAIL','condition_type' => 'EmailAddress','op' => 'not','value' => $row->email);\n\tif(!empty($rsvped))\n\t\t$segment_opts = array('match' => 'all','conditions' => $rsvped );\n\t}\n\t\n\t$input = array(\n\t\t\t\t\t'type' => 'regular',\n\t\t\t\t\t'recipients'        => array('list_id' => $listID),\n\t\t\t\t\t'segment_opts'        => $segment_opts,\n\t\t\t\t\t'settings' => array('subject_line' => sanitize_text_field(stripslashes($postvars[\"subject\"])),'from_email' => sanitize_text_field($postvars[\"from_email\"]), 'from_name' => sanitize_text_field($postvars[\"from_name\"]), 'reply_to' => sanitize_text_field($postvars[\"from_email\"]))\n\t);\n\t\n\t$campaign = $MailChimp->post(\"campaigns\", $input);\n\tif(!$MailChimp->success())\n\t\t{\n\t\techo '<div>'.__('MailChimp API error','rsvpmaker').': '.$MailChimp->getLastError().'</div>';\n\t\treturn;\n\t\t}\n\tif(!empty($campaign[\"id\"]))\n\t{\n\t$html = str_replace('<!-- mailchimp -->','<a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a><br>',$html);\n\t$content_result = $MailChimp->put(\"campaigns/\".$campaign[\"id\"].'/content', array(\n\t'html' => $html, 'text' => $text) );\n\tif(!$MailChimp->success())\n\t\t{\n\t\techo '<div>'.__('MailChimp API error','rsvpmaker').': '.$MailChimp->getLastError().'</div>';\n\t\treturn;\n\t\t}\n\tif(empty($postvars[\"chimp_send_now\"]))\n\t\t{\n\t\techo '<div>'.__('View draft on mailchimp.com','rsvpmaker').'</div>';\n\t\t}\n\telse // send now\n\t\t{\n\t$send_result = $MailChimp->post(\"campaigns/\".$campaign[\"id\"].'/actions/send');\n\tif($MailChimp->success())\n\t\techo '<div>'.__('Sent MailChimp campaign','rsvpmaker').': '.$campaign[\"id\"].'</div>';\n\telse\n\t\techo '<div>'.__('MailChimp API error','rsvpmaker').': '.$MailChimp->getLastError().'</div>';\n\t\t}\n\t}\n\t\n\t}\n\t\n\tif(!empty($postvars))\n\t\tdo_action(\"rsvpmaker_email_send_ui_submit\",$postvars, $html, $text);\n\t\n\t// $unsubscribed is global, can be modified by action above\n\tif(!empty($unsubscribed))\n\t\tprintf(__('Skipped %d unsubscribed emails','rsvpmaker'),count($unsubscribed) );\n\t\n\t//if any messages queued, make sure group email schedule is set\n\tif(get_post_meta($post->ID,'rsvprelay_to',true) && !wp_get_schedule('rsvpmaker_relay_init_hook'))\n\t\twp_schedule_event( time(), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n} //end rsvpmailer_submitted\n\nadd_shortcode('rsvpmaker_template_inline_test','rsvpmaker_template_inline_test');\n\nfunction rsvpmaker_template_inline_test($atts) {\n\tif(is_admin())\n\t\treturn;\n\tif(isset($atts['id']))\n\t$html = rsvpmaker_template_inline(intval($atts['id']));\n\t$text = get_post_meta(intval($atts['id']),'_rsvpmail_text',true);\n\treturn $html . '<pre>'.$text.'</pre>';\n}\n\nfunction rsvpmailer_delayed_send($post_id,$user_id) {\n\t$postvars = get_post_meta($post_id,'scheduled_send_vars',true);\n\t$html = get_post_meta($post_id,'_rsvpmail_html',true);\n\t$text = get_post_meta($post_id,'_rsvpmail_text',true);\n\trsvpmailer_submitted($html,$text,$postvars,$post_id,$user_id);\n}\n\nadd_action('rsvpmailer_delayed_send','rsvpmailer_delayed_send',10,2);\n\nfunction rsvpmaker_email_send_ui($html, $text)\n{\nglobal $post;\nglobal $custom_fields;\nglobal $wpdb;\nglobal $current_user;\nglobal $rsvpmaker_cron_context;\nglobal $rsvp_options;\nif(!empty($rsvpmaker_cron_context))\n\treturn;\n$chimp_options = get_option('chimp');\n\nob_start();\n\nif(isset($_POST['preview_text'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\tupdate_post_meta($post->ID,'_rsvpmailer_preview',sanitize_text_field(stripslashes($_POST['preview_text'])));\n\nif(!current_user_can('publish_rsvpemails') )\n\treturn;\n\n$chimp_options = get_option('chimp');\n\nif(!empty($_POST[\"subject\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\t$subject = sanitize_text_field(stripslashes($_POST[\"subject\"]));\n\t\tif($post->post_title != $subject)\n\t\t{\n\t\t\t$post->post_title = $subject;\n\t\t\t$postarr[\"ID\"] = $post->ID;\n\t\t\t$postarr[\"post_title\"] = $subject;\n\t\t\twp_update_post($postarr);\n\t\t}\n\t}\n\nif(!empty($_POST[\"send_when\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\t$postvars = $_POST;\n\t$postvars = array_map('sanitize_text_field',$postvars);\n\t$manage_network = current_user_can('manage_network');\n\tif('now' == $_POST[\"send_when\"])\n\t\trsvpmailer_submitted($html,$text,$postvars,$post->ID,$current_user->ID);\n\telseif('schedule' == $_POST[\"send_when\"])\n\t{\n\t\tupdate_post_meta($post->ID,'scheduled_send_vars',$postvars);\n\t\t$t = rsvpmaker_strtotime($_POST['send_date'].' '.$_POST['send_time']);\n\t\twp_schedule_single_event( $t, 'rsvpmailer_delayed_send', array($post->ID, $current_user->ID));\n\t\tprintf('<p><em>Scheduling to send at %s</em></p>',rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'],$t));\n\t}\n}\n\n$permalink = get_permalink($post->ID);\n$edit_link = get_edit_post_link($post->ID);\n$events_dropdown = get_events_dropdown ();\t\n\n$o = '';\nif($templates && is_array($templates))\nforeach($templates as $index => $template)\n\t{\n\t\t$s = ($index == $t_index) ? ' selected=\"selected\" ' : '';\n\t\t$o .= sprintf('<option value=\"%d\" %s>%s</option>',$index,$s,$template['slug']);\n\t}\n$queued = get_post_meta($post->ID,'rsvprelay_to');\nif($queued) {\n\trsvpmaker_relay_queue();\n\t//make sure this is turned on\n\tupdate_option('rsvpmaker_discussion_active',true);\n\tif(!wp_next_scheduled('rsvpmaker_relay_init_hook'))\n\t\twp_schedule_event( time(), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n\t$queued = get_post_meta($post->ID,'rsvprelay_to');\n\tif($queued) {\n\t\t//if more in queue\n\t\tprintf('<p>%s emails queued to send (<a href=\"%s\">Refresh</a></p>',sizeof($queued),$permalink);\n\t\tif(isset($_GET['show_log']))\n\t\t\tprintf('</p>%s</p>',implode(', ',$queued));\n\t}\n}\n$sent = get_post_meta($post->ID,'rsvpmail_sent');\n$blocked = get_post_meta($post->ID,'rsvpmail_blocked');\nif($sent) {\n\tprintf('<p>%s emails sent, %s blocked (<a href=\"%s\">Refresh</a> | <a href=\"%s\">Show Addresses</a>)</p>',sizeof($sent),sizeof($blocked),$permalink,add_query_arg('show_log',1,$permalink));\n\tif(isset($_GET['show_log'])){\n\t\tprintf('</p>%s</p>',implode('<br>',$sent));\n\t\tprintf('</p>%s</p>',implode('<br>',$blocked));\n\t}\n}\nif(!isset($_POST))\n{\n\t$mailchimp_sent = get_post_meta($post->ID,'rsvp_mailchimp_sent');\n\tif($mailchimp_sent)\n\t\tprintf('</p>%s</p>',implode(', ',$mailchimp_sent));\t\n}\n?>\n<style>\n\t#email-content {\n\t\twidth: 650px;\n\t\tmargin-left:auto;\n\t\tmargin-right: auto;\n\t\tbackground-color: #fff;\n\t\tcolor: #000;\n\t\tpadding: 10px;\n\t}\n</style>\n<p><a href=\"<?php echo esc_attr($edit_link); ?>\"><?php esc_html_e('Edit','rsvpmaker');?></a> - <a href=\"<?php echo admin_url('post-new.php?post_type=rsvpemail'); ?>\">New Email</a> - <a href=\"<?php echo admin_url(); ?>\"><?php esc_html_e('Dashboard','rsvpmaker');?></a> - <a href=\"<?php echo site_url(); ?>\"><?php esc_html_e('Visit Site','rsvpmaker');?></a></p>\n<div style=\"width: 150px; float:right;\"><button onclick=\"hideControls()\">Hide Controls</button></div>\n<form method=\"post\" action=\"<?php echo esc_attr($permalink); ?>\">\n<?php rsvpmaker_nonce(); ?>\n<table>\n<tr><td><?php esc_html_e('Subject','rsvpmaker');?>:</td><td><input type=\"text\"  size=\"50\" name=\"subject\" value=\"<?php echo esc_attr($post->post_title); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('From Name','rsvpmaker');?>:</td><td><input type=\"text\"  size=\"50\" name=\"from_name\" value=\"<?php echo (isset($custom_fields[\"_email_from_name\"][0])) ? esc_attr($custom_fields[\"_email_from_name\"][0]) : esc_attr($chimp_options[\"email-name\"]); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('From Email','rsvpmaker');?>:</td><td><input type=\"text\" size=\"50\"  name=\"from_email\" value=\"<?php echo (isset($custom_fields[\"_email_from_email\"][0])) ? esc_attr($custom_fields[\"_email_from_email\"][0]) : esc_attr($chimp_options[\"email-from\"]); ?>\" />\n</td></tr>\n<tr><td><?php esc_html_e('Preview Text','rsvpmaker');?>:</td><td><input type=\"text\" size=\"50\"  name=\"preview_text\" value=\"<?php echo rsvpmailer_preview(array()); ?>\" />\n</td></tr>\n</table>\n<div><input type=\"checkbox\" name=\"user_email\" value=\"1\" checked=\"checked\" /><?php esc_html_e('Except for MailChimp, use the email of the logged in user as from email.','rsvpmaker'); ?></div>\n<p style=\"clear:both;\"><?php esc_html_e('Send','rsvpmaker');?></p>\n<div><input type=\"checkbox\" name=\"preview\" value=\"1\"> <?php esc_html_e('Preview to','rsvpmaker');?>: <input type=\"text\" name=\"previewto\" value=\"<?php echo (isset($custom_fields[\"_email_preview_to\"][0])) ? $custom_fields[\"_email_preview_to\"][0] : $chimp_options[\"email-from\"]; ?>\" />\n<br><em>Send yourself a test first to check email formatting. Certain WordPress blocks, such as columns, may not translate to email.</em>\n</div>\n<div><input type=\"checkbox\" name=\"members\" value=\"1\" <?php if(isset($_GET['list']) && ($_GET['list'] == 'members') ) echo 'checked=\"checked\"'; ?> > <?php esc_html_e('Website members','rsvpmaker');?></div>\n<div><?php esc_html_e('Custom List','rsvpmaker');?><br /><textarea name=\"custom_list\" rows=\"3\" cols=\"80\"></textarea></div>\n<p><input type=\"checkbox\" name=\"test\" value=\"1\" /> Test</p>\n<?php if(is_multisite() && current_user_can('manage_network') && (get_current_blog_id() == 1)) {\n?>\n<div style=\"border: thin dotted red;\"><strong>Network Administrator Only:</strong><br /> \n<input type=\"checkbox\" name=\"network_members\" value=\"1\"> <?php esc_html_e('All users','rsvpmaker');?>\n</div>\n<?php\n} ?>\n<?php\nif(!empty($chimp_options[\"chimp-key\"]))\n{\n?>\n<input type=\"checkbox\" name=\"mailchimp\" value=\"1\" <?php if(isset($_GET['mailchimp'])) echo ' checked=\"checked\" '; ?> > <?php esc_html_e('MailChimp list','rsvpmaker');?> <select name=\"mailchimp_list\">\n<?php\n$chosen = (isset($custom_fields[\"_email_list\"][0])) ? $custom_fields[\"_email_list\"][0] : $chimp_options[\"chimp-list\"];\necho mailchimp_list_dropdown($chimp_options[\"chimp-key\"], $chosen);\n?>\n</select> <select name=\"chimp_send_now\"><option value=\"1\"><?php esc_html_e('Create and Send','rsvpmaker'); ?></option><option value=\"\" <?php if(isset($_POST[\"mailchimp\"]) && empty($_POST[\"chimp_send_now\"])) echo ' selected=\"selected\" '; ?> ><?php esc_html_e('Save as draft on mailchimp.com','rsvpmaker'); ?></option></select></div>\n<?php if(!empty($rsvp_options['debug']))\n{ //only if debug is on, show this feature.\n?>\n<div style=\"margin-left: 20px;\">\n<?php esc_html_e('Exclude Recipients who RSVPed to','rsvpmaker');?> <select name=\"mailchimp_exclude_rsvp\">\n<option value=\"\">Choose Event</option>\n<?php\necho $events_dropdown;\n?>\n</select>\t\n</div>\n<?php\n} // end if debug\n}\n\n?>\n\t<div><input type=\"checkbox\" name=\"attendees\" value=\"1\"> <?php esc_html_e('Attendees','rsvpmaker');?> <select name=\"event\"><option value=\"\"><?php esc_html_e('Select Event','rsvpmaker');?></option><option value=\"any\"><?php esc_html_e('Any event','rsvpmaker');?></option><?php echo $events_dropdown; ?></select></div>\n\n\t<div><input type=\"checkbox\" name=\"rsvps_since\" value=\"1\"> <?php esc_html_e('RSVPs more recent than ','rsvpmaker');?> <input type=\"text\" name=\"since\" value=\"30\" /> <?php esc_html_e('Days','rsvpmaker');?></div>\n<?php\ndo_action(\"rsvpmaker_email_send_ui_options\");\n?>\n<p><input type=\"submit\" name=\"now\" value=\"<?php esc_html_e('Send','rsvpmaker');?>\" /> <input type=\"radio\" name=\"send_when\" value=\"now\" checked=\"checked\"> Now <input type=\"radio\" name=\"send_when\" value=\"schedule\" > Schedule for <input type=\"date\" name=\"send_date\" value=\"<?php echo rsvpmaker_date('Y-m-d'); ?>\"> <input name=\"send_time\" type=\"time\" value=\"<?php echo rsvpmaker_date('H:i',strtotime('+1 hour')); ?>\"></p>\n</form>\n<script>\nfunction hideControls() {\nvar x = document.getElementById(\"control-wrapper\");\nx.style.display = \"none\";\n}\n</script>\n<?php\n\n$ts = rsvpmaker_next_scheduled($post->ID);\nif($ts)\n\tprintf('<p><a href=\"%s\">Preview scheduled broadcast</a> for %s',add_query_arg('cronemailpreview',$post->ID,$permalink),esc_html($ts));\n\t\nreturn '<div id=\"control-wrapper\" style=\"background-color: #FFFFFF; color: #000000;\">'.ob_get_clean().'</div>';\n}\n\n\nfunction RSVPMaker_extract_email() {\n\nglobal $wpdb;\n$inchimp = '';\nif(isset($_POST[\"emails\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\n$chimp_options = get_option('chimp');\n\n$apikey = $chimp_options[\"chimp-key\"];\n$listId = $chimp_options[\"chimp-list\"];\n \n\tpreg_match_all (\"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", wp_kses_post($_POST[\"emails\"]), $emails);\n\t$emails = $emails[0];\n\tforeach($emails as $email)\n\t\t{\n\t\t\t$email = strtolower($email);\n\t\t\t$unique[$email] = $email;\n\t\t}\n\tsort($unique);\n\tforeach($unique as $email)\n\t\t{\n\t\t$email = strtolower($email);\n\t\t$hash = md5($email);\n\t\tif(!empty($_POST[\"in_mailchimp\"]))\n\t\t\t{\n\t\t\tif(!isset($MailChimp) && !empty($apikey))\n\t\t\t\t$MailChimp = new MailChimpRSVP($apikey);\n\t\t\t$member = $MailChimp->get(\"/lists/\".$listId.\"/members/\".$hash);\n\t\t\tif(!empty($member[\"id\"]) )\n\t\t\t\t{\n\t\t\t\t$inchimp .= \"\\n<br />$email\";\n\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\techo \"\\n<br />$email\";\n\t\t}\nif($inchimp)\n\techo \"<h3>In MailChimp</h3>$inchimp\";\n\n\t}\n\n; ?>\n<div id=\"icon-options-general\" class=\"icon32\"><br /></div>\n<h2><?php esc_html_e('Extract Emails','rsvpmaker');?></h2>\n<p><?php esc_html_e('You can enter an disorganized list of emails mixed in with other text, and this utility will extract just the email addresses.','rsvpmaker');?></p>\n<form id=\"form1\" name=\"form1\" method=\"post\" action=\"\">\n<?php rsvpmaker_nonce(); ?>\n  <p>\n    <textarea name=\"emails\" id=\"emails\" cols=\"45\" rows=\"5\"></textarea>\n  </p>\n  <p><?php esc_html_e('Filter out emails that','rsvpmaker');?>:</p>\n  <p>\n    <input name=\"in_mailchimp\" type=\"checkbox\" id=\"in_mailchimp\" checked=\"checked\" />\n  <?php esc_html_e('Are Registered in MailChimp','rsvpmaker');?></p>\n  <p>\n    <input type=\"submit\" name=\"button\" id=\"button\" value=\"Submit\" />\n  </p>\n</form>\n<?php\n}\n\nfunction inline_array($text) {\n$lines = explode(\"\\n\",$text);\n$inline_array = array();\nforeach($lines as $line)\n\t{\n\t\t$line = trim($line);\n\t\tif(strpos($line,'='))\n\t\t\t{\t\n\t\t\t$parts = explode('=',$line);\n\t\t\t$inline_array[$parts[0]] = $parts[1];\n\t\t\t}\n\t}\nreturn $inline_array;\n}\t\n\t\nfunction rsvpemail_template () {\n$ver = phpversion();\nif (version_compare($ver, '7.1', '<'))\n\tprintf('<div class=\"notice notice-warning\"><p>The Emogrifier CSS inliner library, which is included to improve formatting of HTML email, relies on PHP features introduced in version 7.1 -- and is disabled because your site is on %s</p></div>',$ver);\n?>\n<div id=\"icon-options-general\" class=\"icon32\"><br /></div>\n<?php\n\nif(isset($_POST['extra_email_styles']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\tupdate_option('extra_email_styles',$_POST['extra_email_styles']);\n\n?>\n<h2><?php esc_html_e('RSVPMaker Email Design Templates','rsvpmaker');?></h2>\n<p>Note: This function is being redesigned.</p>\n<form id=\"email_style\" name=\"email_style\" method=\"post\" action=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_email_template'); ?>\">\n<?php\nrsvpmaker_nonce();\nglobal $rsvp_options;\n$chimp_options = get_option('chimp');\nif(empty($chimp_options['mailing_address']))\n\tprintf('<p><strong>%s</strong></p>',__('A physical mailing address should be entered in in RSVPMaker Mailing List settings.','rsvpmaker'));\n?>\n<p>\n  <?php esc_html_e('Email Styles','rsvpmaker');?> (<?php esc_html_e('applied to all email templates','rsvpmaker');?>)<br />\n    <textarea name=\"extra_email_styles\" cols=\"80\" rows=\"5\"><? echo get_option('extra_email_styles'); ?></textarea>\n\t  <br /><a target=\"_blank\" href=\"<?php echo site_url('?show_rsvpmaker_included_styles=1') ?>\"><?php esc_html_e('View default email styles','rsvpmaker');?></a>\n  </p>\n<p>\n<button><?php esc_html_e('Save','rsvpmaker');?></button>\n</p>\n\n\t<p><a href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_email_template&reset_email_template=1'); ?>\"><?php esc_html_e('Reset to default template','rsvpmaker');?></a></p>\n\n<h3>Key CSS Selectors</h3>\n<p>a.rsvplink {/* your CSS here */} - style the RSVP button</p>\n<p>figcaption, .wp-caption {/* your CSS here */} - captions for images</p>\n<p>#messagefooter {/* your CSS here */} - footer that includes unsubscribe link, info about your site/company</p>\n<p>div.rsvpmaker {/* your CSS here */} - an embedded event listing</p>\n<p>div.rsvpmaker-entry-title {/* your CSS here */} - title of event</p>\n<p>div.dateblock {/* your CSS here */} - date and time</p>\n<p>p.rsvpmeta {/* your CSS here */} - event type (category)</p>\n<p>.wp-block-column {/* your CSS here */} - adjustments to the Gutenberg column block (media queries not reliably supported in email)</p>\n\n</form>\n\n<?php\n\n} // end rsvpemail template form\n\nfunction my_rsvpemail_menu() {\nglobal $rsvp_options;\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Scheduled Email\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"rsvpmaker_scheduled_email_list\";\n$function = \"rsvpmaker_scheduled_email_list\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Email Design Templates\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"rsvpmaker_email_template\";\n$function = \"rsvpemail_template\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Notification Templates\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"rsvpmaker_notification_templates\";\n$function = \"rsvpmaker_notification_templates\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Content for Email\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"email_get_content\";\n$function = \"email_get_content\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Extract Addresses\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"extract\";\n$function = \"RSVPMaker_extract_email\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Unsubscribed List\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"unsubscribed_list\";\n$function = \"unsubscribed_list\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\nif(!empty($rsvp_options[\"log_email\"]))\n{\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Email Log\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"email_log\";\n$function = \"email_log\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n}\n\n}\n\nfunction rsvpmaker_mailpoet_notice() {\n\t$screen = get_current_screen();\n\tif(strpos($screen->id,'mailpoet-newsletter-editor')) {\n\t\techo '<div class=\"notice notice-info\">';\n\t\techo '<div><p><button id=\"showhide_mailpoet_shortcodes\">Show RSVPMaker Shortcodes for MailPoet</button></p></div>';\n\t\techo '<div id=\"rsvpmaker_mailpoet_shortcodes_notice\">';\n\t\trsvpmaker_mailpoet_shortcodes();\n\t\techo '<div><p><button id=\"showhide_mailpoet_shortcodes2\">Hide RSVPMaker Shortcodes for MailPoet</button></p></div>';\n\t\techo '</div>';\n\t\techo '</div>';\n?>\n<script>\njQuery(document).ready(function( $ ) {\n\nconsole.log('mailpoet shortcodes button');\n\n$('#rsvpmaker_mailpoet_shortcodes_notice').hide();\nvar mailpoetshow = false;\nfunction toggleMailPoetShort()  {\n\t\tif(mailpoetshow)\n\t\t{\n\t\t\t$('#showhide_mailpoet_shortcodes').text('Show RSVPMaker Shortcodes for MailPoet');\n\t\t\t$('#rsvpmaker_mailpoet_shortcodes_notice').hide();\n\t\t\tmailpoetshow = false;\n\t\t}\n\t\telse {\n\t\t\t$('#showhide_mailpoet_shortcodes').text('Hide RSVPMaker Shortcodes for MailPoet');\n\t\t\t$('#rsvpmaker_mailpoet_shortcodes_notice').show();\n\t\t\tmailpoetshow = true;\n\t\t}\n}\n\n$('#showhide_mailpoet_shortcodes').click( function() {\n\ttoggleMailPoetShort();\n}\n);\n\n$('#showhide_mailpoet_shortcodes2').click( function() {\n\ttoggleMailPoetShort();\n}\n);\n\n});\n</script>\n<?php\n\t} \n}\n\nadd_action('admin_notices','rsvpmaker_mailpoet_notice');\n\nfunction rsvpmaker_mailpoet_shortcodes() {\n?>\n\n<p>You can use standard <a href=\"https://rsvpmaker.com/knowledge-base/shortcodes/\" target=\"_blank\">RSVPMaker shortcodes</a> with a custom:prefix. For rsvpmaker_upcoming, rsvpmaker_next, and rsvpmaker_one, you can include a formatting attribtue, such as [custom:rsvpmaker_next format=\"compact\"]<br />\nUseful formatting codes for email (\"excerpt\" works well in most cases):\n<br />format=\"excerpt\" - shows the first few paragraphs, or all the content up to the more tag (if included), plus a link to read more and the RSVP button if active.\n<br />format=\"compact\" - just the headline, date and button (if RSVPs active).\n<br />format=\"button_only\" - embeds just the RSVP button\n<br />format=\"embed_dateblock\" - embeds just the date and time block\n</p>\n<textarea rows=\"10\" style=\"width:80%;\">\n[custom:rsvpmaker_upcoming hideauthor=\"1\" limit=\"5\" days=\"14\"] list upcoming events\n[custom:event_listing show_time=\"1\" title=\"Upcoming Events\"] links with dates and titles of upcoming events\n[custom:rsvpmaker_next format=\"excerpt\"] next event\n[custom:rsvpmaker_next rsvp_on=\"1\" format=\"excerpt\"] next event with RSVPs active\n[custom:rsvpmaker_youtube url=\"YOUTUBE URL\" link=\"LINK IF DIFFERENT\"] display preview image of a youtube video, with to view\n<?php\n\t$events = get_future_events(array('limit' => 20));\n\tforeach($events as $event) {\n\t\tprintf('[custom:rsvpmaker_one post_id=\"%d\" format=\"excerpt\"] %s %s'.\"\\n\",$event->ID,$event->post_title,$event->date);\n\t}\necho '</textarea>';\n}\n\nfunction email_log () {\nglobal $wpdb;\n$sql = \"SELECT * FROM $wpdb->postmeta WHERE meta_key = '_rsvpmaker_email_log' ORDER BY meta_id DESC LIMIT 0, 100\";\n$results = $wpdb->get_results($sql);\nif($results)\nforeach($results as $row)\n\t{\n\t\t$mail = unserialize($row->meta_value);\n\t\tif(is_array($mail))\n\t\tforeach($mail as $index => $value)\n\t\t\tprintf('<p><strong>%s</strong></p><div>%s</div>',$index,$value);\n\t}\n}\n\nfunction unsubscribed_list () {\nglobal $wpdb;\n$table = $wpdb->prefix . \"rsvpmailer_blocked\";\n$action = admin_url('edit.php?post_type=rsvpemail&page=unsubscribed_list');\nif(isset($_POST['remove']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\tforeach($_POST['remove'] as $email) {\n\t\trsvpmail_remove_problem($email);\n\t}\n}\n\nif(isset($_POST['problems']))\n{\n\t$code = sanitize_text_field($_POST['code']);\n\tpreg_match_all (\"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", $_POST['problems'], $emails);\n\t$emails = $emails[0];\n\tforeach($emails as $email)\n\t\t{\n\t\t\trsvpmail_add_problem($email,$code);\n\t\t\t$email = strtolower($email);\n\t\t}\n}\n\nprintf('<h1>%s</h1><p>%s</p>',__('Unsubscribed and Blocked','rsvpmaker'),__('If recipients have clicked unsubscribe on a confirmation message or any other message sent directly from RSVPMaker (as opposed to via MailChimp) they will be listed here. You can also track messages that are being blocked by the recipient\\'s ISP (not currently automated). You can manually remove emails from this list, but should only do so <strong><em>at the request of the recipient</em></strong>.','rsvpmaker'));\n$sql = \"SELECT * FROM $table ORDER BY code, timestamp DESC\";\n$results = $wpdb->get_results($sql);\nif(!empty($results))\n{\nprintf('<form method=\"post\" action=\"%s\"><table><tr><th>Unblock</th><th>Email</th><th>Issue</th></tr>',$action);\nforeach($results as $row)\n{\n\tprintf('<tr><td><input type=\"checkbox\" name=\"remove[]\" value=\"%s\" /></td><td>%s</td><td>%s</td></tr>',$row->email,$row->email,$row->code);\t\n}\necho '</table><p><input type=\"submit\" value=\"Submit\"></p>'.rsvpmaker_nonce('return').'</form>';\n}\n\nprintf('<h2>Add an Email Addresses as Unsubscribed Or Blocked</h2><form method=\"post\" action=\"%s\">\n<p>\n<textarea rows=\"5\" cols=\"60\" name=\"problems\"></textarea>\n<br><em>Separated by spaces of on separate lines</em>\n</p>%s\n<p>\n<input type=\"radio\" name=\"code\" value=\"unsubscribed\" checked=\"checked\"> Unsubscribed\n<input type=\"radio\" name=\"code\" value=\"blocked\"> Blocked\n<button>Add</button></form>',$action,rsvpmaker_nonce('return'));\n\n}\n\n\nfunction RSVPMaker_chimpshort($atts, $content = NULL ) {\n\n$atts = shortcode_atts( array(\n  'query' => 'post_type=post&posts_per_page=5',\n  'format' => '',\n  ), $atts );\n\n\tob_start();\n\tquery_posts($atts[\"query\"]);\n\nif ( have_posts() ) {\nwhile ( have_posts() ) : the_post(); ?>\n<div id=\"post-<?php the_ID(); ?>\" <?php post_class(); ?>>\n<h3 class=\"entry-title\"><a href=\"<?php the_permalink(); ?>\"><?php the_title(); ?></a></h3>\n<?php\nif(isset($atts[\"format\"]) && ($atts[\"format\"] == 'excerpt'))\n\t{\n; ?>\n<div class=\"excerpt-content\">\n\n<?php the_excerpt(); ?>\n\n</div><!-- .excerpt-content -->\n<?php\t\n\t}\nelseif(isset($atts[\"format\"]) && ($atts[\"format\"] == 'full'))\n\t{\n; ?>\n<div class=\"entry-content\">\n\n<?php the_content(); ?>\n\n</div><!-- .entry-content -->\n<?php\n}\n?>\n</div>\n<?php \nendwhile;\nwp_reset_query();\n} \n\t\n\t$content = ob_get_clean();\n\n\treturn $content;\n}\n\nfunction email_get_content () {\nglobal $wpdb;\n;?>\n<div id=\"icon-options-general\" class=\"icon32\"><br /></div>\n<h2>Content for Email</h2>\n\n<?php\n\n$event_options = $options = '<option value=\"\">'.__('None selected','rsvpmaker').'</option>';\n$event_options .= '<option value=\"upcoming\">'.__('Upcoming Events','rsvpmaker').'</option>';\n$posts = '';\n$future = get_future_events();\nif(is_array($future))\nforeach($future as $event)\n\t{\n\t$event_options .= sprintf('<option value=\"%s\">%s - %s</option>'.\"\\n\",$event->ID,$event->post_title,date('F j, Y',rsvpmaker_strtotime($event->datetime)));\n\t}\n\n\n$sql = \"SELECT ID, post_title FROM $wpdb->posts WHERE post_status='publish' AND post_type='post' ORDER BY post_date DESC LIMIT 0, 50\";\n$wpdb->show_errors();\n$results = $wpdb->get_results($sql, ARRAY_A);\nif($results)\n{\nforeach ($results as $row)\n\t{\n\t$posts .= sprintf(\"<option value=\\\"%d\\\">%s</option>\\n\",$row[\"ID\"],substr($row[\"post_title\"],0,80));\n\t}\n$posts = '<optgroup label=\"'.__('Recent Posts','rsvpmaker').'\">'.$posts.\"</optgroup>\\n\";\n}\n\n$po = '';\n$pages = get_pages();\nforeach($pages as $page)\n\t$po .= sprintf(\"<option value=\\\"%d\\\">%s</option>\\n\",$page->ID,substr($page->post_title,0,80));\n?>\n<form action=\"<?php echo admin_url('edit.php?post_type=rsvpemail'); ?>\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<p><?php esc_html_e('Email Based on Event','rsvpmaker');?>: <select name=\"rsvpevent_to_email\"><?php echo $event_options; ?></select>\n</select>\n</p>\n<button><?php esc_html_e('Load Content','rsvpmaker');?></button>\n</form>\t\n<form action=\"<?php echo admin_url('edit.php?post_type=rsvpemail'); ?>\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<p><?php esc_html_e('Email Based on Post','rsvpmaker');?>: <select name=\"post_to_email\"><?php echo $posts; ?></select>\n</select>\n<br /><input type=\"radio\" name=\"excerpt\" value=\"0\" checked=\"checked\"> <?php esc_html_e('Full text','rsvpmaker');?> <input type=\"radio\" name=\"excerpt\" value=\"1\"> <?php esc_html_e('Excerpt','rsvpmaker');?>\n</p>\n<button><?php esc_html_e('Load Content','rsvpmaker');?></button>\n</form>\t\n<form action=\"<?php echo admin_url('edit.php?post_type=rsvpemail'); ?>\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<p><?php esc_html_e('Email Based on Page','rsvpmaker');?>: <select name=\"post_to_email\"><?php echo $po; ?></select>\n</select>\n<br /><input type=\"radio\" name=\"excerpt\" value=\"0\" checked=\"checked\"> <?php esc_html_e('Full text','rsvpmaker');?> <input type=\"radio\" name=\"excerpt\" value=\"1\"> <?php esc_html_e('Excerpt','rsvpmaker');?>\n</p>\n<button><?php esc_html_e('Load Content','rsvpmaker');?></button>\n</form>\t\n\n<h2>Shortcodes for MailPoet</h2>\n<p>If you use the MailPoet integration, you can include a variations on the <a href=\"https://rsvpmaker.com/knowledge-base/shortcodes/\" target=\"_blank\">RSVPMaker Shortcodes</a> that include the custom: prefix.</p>\n\n<?php\n\nrsvpmaker_mailpoet_shortcodes();\n\n} // end chimp get content\n\nfunction rsvpmaker_email_list_okay ($rsvp) {\n\t\t$mergevars[\"FNAME\"] = stripslashes($rsvp[\"first\"]);\n\t\t$mergevars[\"LNAME\"] = stripslashes($rsvp[\"last\"]);\n\t\tRSVPMaker_Chimp_Add($rsvp[\"email\"],$mergevars);\n\t\tmailpoet_email_list_okay($rsvp);\n}\n\nfunction get_rsvpmaker_email_template() {\nglobal $rsvpmail_templates;\n//$templates = get_option('rsvpmaker_email_template');\n\n$templates[0]['slug'] = 'default';\n$templates[0]['html'] = '<html>\n<head>\n<title>*|MC:SUBJECT|*</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<style>\n#background {background-color: #FFFFFF; padding: 10px; margin-top: 0; max-width: 800px;}\n#content {padding: 5px; background-color: #FFFFFF; margin-left: auto; margin-right: auto; margin-top: 10px; margin-bottom: 10px; padding-bottom: 50px;}\n</style>\n</head>\n<body>\n<div style=\"display: none\">[rsvpmailer_preview]</div>\n<div id=\"background\">\n<div id=\"content\">\n\n<div style=\"font-size: small; border: thin dotted #999;\">Email not displaying correctly? <a href=\"*|ARCHIVE|*\" class=\"adminText\">View it in your browser.</a></div>\n\n[rsvpmaker_email_content]\n\n</div><!-- end content area -->\n</div><!-- end background -->\n\n<div id=\"messagefooter\">\n*|LIST:DESCRIPTION|*<br>\n<br>\n<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list | <a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a>\n<br>\n<strong>Our mailing address is:</strong><br>\n*|LIST:ADDRESS|*<br>\n<em>Copyright (C) *|CURRENT_YEAR|* *|LIST:COMPANY|* All rights reserved.</em><br>    \n*|REWARDS|*</div>\n</body>\n</html>';\n$templates[1]['slug'] = 'transactional';\n$templates[1]['html'] = '<html>\n<head>\n<title>*|MC:SUBJECT|*</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n</head>\n<body>\n<div style=\"display: none\">[rsvpmailer_preview]</div>\n<div id=\"tx-background\">\n<div id=\"tx-content\">\n\n[rsvpmaker_email_content]\n\n<div id=\"messagefooter\">\n*|LIST:DESCRIPTION|*<br>\n<br>\n<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list | <a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a>\n<br>\n<strong>Our mailing address is:</strong><br>\n*|LIST:ADDRESS|*<br>\n<em>Copyright (C) *|CURRENT_YEAR|* *|LIST:COMPANY|* All rights reserved.</em><br>    \n*|REWARDS|*</div>\n\n</div><!-- end content area -->\n</div><!-- end background -->\n</body>\n</html>';\n\n$styles = rsvpmaker_included_styles();\nforeach($templates as $index => $template)\n{\n\t$html = $template['html'];\n\t$html = add_style_to_email_html($html);\n\t$templates[$index]['html'] = $html;\n}\n$rsvpmail_templates = $templates;\t\nreturn $templates;\n}\n\nfunction add_style_to_email_html($html) {\n\t$styles = rsvpmaker_included_styles();\n\tif(strpos($html,'<style'))\n\t\t$html = preg_replace('/<styl.+>/','<style type=\"text/css\">'.\"\\n\".$styles.\"\\n\",$html);\n\telse\n\t\t$html = str_replace('</head>',\"<style>\\n\".$styles.\"\\n</style></head>\",$html);\n\treturn $html;\n}\n\nfunction rsvpmaker_tx_email($event_post, $mail) {\n\n//used with rsvpmaker_email_content shortcode in template\nglobal $rsvpmaker_tx_content;\n$rsvpmaker_tx_content = $mail[\"html\"];\n$templates = get_rsvpmaker_email_template();\nif(!empty($event_post->ID))\n$t_index = (int) get_post_meta($event_post->ID,'rsvp_tx_template',true);\nif(empty($t_index))\n\t$t_index = (int) get_option('rsvpmaker_tx_template');\n\n$template = $templates[$t_index][\"html\"];\nif(!strpos($template,'*|UNSUB')) // if not already in template\n$rsvpmaker_tx_content .= '<div id=\"messagefooter\">\n    *|LIST:DESCRIPTION|*<br>\n    <br>\n    <a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list\n</div>';\n\n$rsvpfooter_text = '\n\n==============================================\n*|LIST:DESCRIPTION|*\n\nUnsubscribe *|EMAIL|* from this list:\n*|UNSUB|*\n';\n\n$text = rsvpmaker_text_version($mail[\"html\"], $rsvpfooter_text);\n\n$mail[\"html\"] = do_blocks(do_shortcode($template));\n\n$mail[\"html\"] = preg_replace('/(?<!\")(https:\\/\\/www.youtube.com\\/watch\\?v=|https:\\/\\/youtu.be\\/)([a-zA-Z0-9_\\-]+)/','<p><a href=\"$0\">Watch on YouTube: $0<br /><img src=\"https://img.youtube.com/vi/$2/mqdefault.jpg\" width=\"320\" height=\"180\" /></a></p>',$mail[\"html\"]);\n\n\tif(rsvpmail_is_problem($mail[\"to\"]) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\trsvpmailer($mail,__('<div class=\"rsvpexplain\">This message was sent to you as a follow up to your registration for','rsvpmaker').' '.$event_post->post_title.'</div>' );\n}\n\nfunction rsvpmaker_email_content ($atts, $content) {\nglobal $wp_filter;\nglobal $post;\nglobal $templatefooter;\n$templatefooter = isset($atts[\"templatefooter\"]);\nglobal $rsvpmaker_tx_content;\nif(!empty($rsvpmaker_tx_content))\n\treturn $rsvpmaker_tx_content;\nif(function_exists('bp_set_theme_compat_active'))\nbp_set_theme_compat_active( false );//stop buddypress from causing trouble\n\nob_start();\n$corefilters = array('convert_chars','wpautop','wptexturize','event_content');\nforeach($wp_filter[\"the_content\"] as $priority => $filters)\n\tforeach($filters as $name => $details)\n\t\t{\n\t\t//keep only core text processing or shortcode\n\t\tif(!in_array($name,$corefilters) && !strpos($name,'hortcode'))\n\t\t\t{\n\t\t\tif(isset($_GET[\"debug\"]))\n\t\t\t\techo '<br />Remove '.$name.' '.$priority;\n\t\t\t$r = remove_filter( 'the_content', $name, $priority );\n\t\t\t}\n\t\t}\nif(isset($_GET[\"debug\"])) {\n\techo '<pre>';\n\t//print_r($wp_filter);\n\techo '</pre>';\n}\n\nglobal $rsvp_options;\n\n?>\n<!-- editors note goes here -->\n<div id=\"post-<?php the_ID(); ?>\" <?php post_class(); ?>>\n<?php if(get_post_meta($post->ID,\"_email_headline\",true)) { ; ?>\n<h1 class=\"entry-title\"><?php the_title(); ?></h1>\n<?php } ; ?>\n<div class=\"entry-content\">\n<?php echo wp_kses_post($post->post_content); ?>\n</div><!-- .entry-content -->\n</div><!-- #post-## -->\n<div class=\"footer\"><!-- footer --></div>\n<?php \n$content = ob_get_clean();\nif(function_exists('do_blocks'))\n\t$content = do_blocks($content);\n$content = str_replace('<img ','<img style=\"display: block; max-width: 90%;\" ',$content);\nreturn $content;\n}\n\nfunction mailchimp_list_dropdown($apikey, $chosen = '') {\nif(empty($apikey))\n\treturn '<option value=\"\">none</option>';\ntry {\n    $MailChimp = new MailChimpRSVP($apikey);\n} catch (Exception $e) {\n    return '<option value=\"\">none '.$e->getMessage().'</option>';\n}\n\n$retval = $MailChimp->get('lists');\n\n$options = '';\nif (is_array($retval)){\n\tforeach ($retval[\"lists\"] as $list){\n\t\t$s = ($chosen == $list['id']) ? ' selected=\"selected\" ' : '';\n\t\t$options .=  '<option value= \"'.esc_attr($list['id']).'\"'. \" $s >\".esc_html($list['name']).'</option>';\n\t}\n}\nreturn $options;\n}\n\nfunction event_to_embed($post_id, $event_post = NULL, $context = '') {\n\t\tglobal $email_context;\n\t\tglobal $rsvp_options;\n\t\tglobal $post;\n\t\t$backup = $post;\n\t\t$email_context = true;\n\t\tif(empty($event_post))\n\t\t\t$event_post = get_post($post_id);\n\t\t$event_embed[\"subject\"] = $event_post->post_title;\n\t\t$event_embed[\"content\"] = sprintf('<!-- wp:heading -->\n<h2 class=\"email_event\"><a href=\"%s\">%s</a></h2>\n<!-- /wp:heading -->'.\"\\n\",get_permalink($post_id),apply_filters('the_title',$event_post->post_title));\n\t\tif($event_post->post_type == 'rsvpmaker')\n\t\t{\n\t\t$date_array = rsvp_date_block($post_id);\n\t\t$dateblock = trim(strip_tags($date_array[\"dateblock\"]));\n\t\t$dur = $date_array[\"dur\"];\n\t\t$last_time = $date_array[\"last_time\"];\n\t\t$tmlogin = (strpos($event_post->post_content,'[toastmaster')) ? sprintf('<!-- wp:paragraph -->\n<p><a href=\"%s\">Login</a> to sign up for roles</p>\n<!-- /wp:paragraph -->',wp_login_url( get_post_permalink( $post_id ) ) ) : '';\n\t\t$event_embed[\"content\"] .= sprintf('<!-- wp:paragraph -->\n<p><strong>%s</strong></p>\n<!-- /wp:paragraph -->',$dateblock).$tmlogin;\t\t\t\n\t\t}\n\t\t$event_embed[\"content\"] .= do_blocks(do_shortcode($event_post->post_content));\n\t\tif(get_rsvpmaker_meta($post_id,'_rsvp_on',true))\n\t\t{\n\t\tif(get_post_meta($post_id,'_rsvp_count',true))\n\t\t\t$event_embed[\"content\"] .= rsvpcount($post_id);\n\t\tif($context != 'confirmation')\n\t\t\t{ // add the rsvp button / link except in confirmation messages that include Update RSVP version\n\t\t\t\t$rsvplink = get_rsvp_link($post_id);\n\t\t\t\t$event_embed[\"content\"] .= \"<!-- wp:paragraph -->\\n\".$rsvplink.\"\\n<!-- /wp:paragraph -->\";\t\t\n\t\t\t}\n\t\t}\n\t\t$post = $backup;\n\t\tif(function_exists('do_blocks')){\n\t\t\t$event_embed[\"content\"] = do_blocks($event_embed[\"content\"]);\t\t\t\n\t\t}\n\t\telse \n\t\t$event_embed[\"content\"] = wpautop($event_embed[\"content\"]);\n\t\t$post = $backup;\n\t\treturn $event_embed;\n}\n\nfunction rsvpmaker_upcoming_email($atts) {\n\t$output = '';\n\t$weeks = (empty($atts[\"weeks\"])) ? 4 : $atts[\"weeks\"];\n\t$end = date('Y-m-d',rsvpmaker_strtotime('+'.$weeks.' weeks')). ' 23:59:59';\n\t$upcoming = get_future_events(' a1.meta_value < \"'.$end.'\"');\n\tif(is_array($upcoming))\n\tforeach($upcoming as $embed)\n\t\t{\n\t\t$event = event_to_embed($embed->ID,$embed);\n\t\t$output .= $event[\"content\"].\"\\n\\n\";\n\t\t}\n\tif(isset($atts[\"looking_ahead\"]))\n\t\t{\n\t\t\t$weeksmore = $atts[\"looking_ahead\"];\n\t\t\t$label = (empty($atts[\"looking_ahead_label\"])) ? '<h2>Looking Ahead</h2>' : '<h2 class=\"looking_ahead\">'.$atts[\"looking_ahead_label\"].'</h2>';\n\t\t\t$extra = date('Y-m-d',rsvpmaker_strtotime($end .' +'.$weeksmore.' weeks')). ' 23:59:59';\n\t\t\t$upcoming = get_future_events(' a1.meta_value > \"'.$end .'\" AND  a1.meta_value < \"'.$extra.'\"');\n\t\t\tif(is_array($upcoming))\n\t\t\t\t{\n\t\t\t\t\t$output .= $label.\"\\n\";\n\t\t\t\t\tforeach($upcoming as $ahead)\n\t\t\t\t\t\t$output .= sprintf('<p><a href=\"%s\">%s - %s</a></p>',get_permalink($ahead->ID),$ahead->post_title,date('F j',rsvpmaker_strtotime($ahead->datetime)));\n\t\t\t\t}\n\t\t}\t\n\treturn $output;\n}\n\nfunction is_email_context () {\n\t\tglobal $email_context;\n\t\treturn (isset($email_context) && $email_context);\n}\n\nfunction rsvpmaker_cron_email_send($post_id) {\nglobal $rsvpmaker_cron_context;\nglobal $wp_query;\n$rsvpmaker_cron_context = 2; // 2 means send live\n$wp_query = new WP_Query( array('post_type' => 'rsvpemail','p' => $post_id) );\ninclude plugin_dir_path(__FILE__) . 'rsvpmaker-email-template.php';\n}\n\nfunction rsvpmaker_cron_email_preview($args) {\nglobal $rsvpmaker_cron_context;\nglobal $wp_query;\n$rsvpmaker_cron_context = 1; // 1 means preview\nif(isset($args['post_id']))\n\t$post_id = $args['post_id'];\nelse\n\t$post_id = (int) $args;// single argument comes as single value\n$wp_query = new WP_Query( array('post_type' => 'rsvpemail','p' => $post_id) );\ninclude plugin_dir_path(__FILE__) . 'rsvpmaker-email-template.php';\n}\n\nfunction rsvpmaker_cron_email_preview_now() {\n\tif(isset($_GET['cronemailpreview']))\n\t{\n\t\trsvpmaker_cron_email_preview(sanitize_text_field($_GET['cronemailpreview']));\n\t\tdie('scheduled email preview');\n\t}\n}\n\nadd_filter( 'post_row_actions', 'rsvpmaker_row_actions', 10, 2 );\nfunction rsvpmaker_row_actions( $actions, WP_Post $post ) {\n\tglobal $current_user;\n    if ($post->post_type == 'rsvpemail') {\n        return $actions;\n    }\n\tif(current_user_can('edit_post',$post->ID))\n\t{\n\t\tif($post->post_type == 'rsvpmaker') {\n\t\t\t$actions['rsvpmaker_options'] = sprintf('<a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=').$post->ID,__('Event Options','rsvpmaker'));\n\t\t\t$actions['rsvpmaker_invite2'] = sprintf('<a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpemail&rsvpevent_to_email=').$post->ID,__('Embed in RSVP Email','rsvpmaker'));\t\n\t\t\t}\n\t\t$actions['rsvpmaker_invite'] = sprintf('<a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpemail&post_to_email=').$post->ID,__('Copy to RSVP Email','rsvpmaker'));\n\t}\n\telse {\n\tif($post->post_type == 'rsvpmaker')\n\t{\n\t\t$eds = get_additional_editors($post->ID);\n\t\tif(!empty($eds) && in_array($current_user->ID,$eds))\n\t\t\t$actions['edit_override'] = sprintf('<a href=\"%s\">%s</a>',admin_url('post.php?action=edit&post=').$post->ID,__('Edit','rsvpmaker'));\n\t}\n\t}\nreturn $actions;\n}\n\n//based on Austin Matzko's code from wp-hackers email list\nfunction filter_where_recent($where = '') {\nglobal $blog_weeks_ago;\n\nif(0 == (int) $blog_weeks_ago)\n\t$blog_weeks_ago = 1;\n\t$week_ago_stamp = rsvpmaker_strtotime('-'.$blog_weeks_ago.' week');\n\t$week_ago = date('Y-m-d H:i:s',$week_ago_stamp);\n    $where .= \" AND post_date > '\" . $week_ago . \"'\";\n    return $where;\n}\n\nfunction get_rsvp_notekey() {\n\tglobal $post, $rsvpmaker_cron_context;\n\t\n\tif(!empty($rsvpmaker_cron_context) && $rsvpmaker_cron_context == 2)\n\t{\n\t\t$notekey = 'editnote'.date('YmdH',time()); // live not preview broadcast or editing\n\t}\n\telse {\n\t\t$stamp = rsvpmaker_next_scheduled($post->ID, true);\n\t\t//$stamp = preg_replace('/M [a-z]+$/','M',$stamp);\n\t\t$notekey = 'editnote'.date('YmdH',$stamp);//date('YmdH',rsvpmaker_strtotime($stamp));\n\t}\n\treturn $notekey;\n}\n\nfunction rsvpmaker_recent_blog_posts ($atts) {\nglobal $wp_query;\nglobal $post;\n$backup = $wp_query;\n$was = $post;\nglobal $blog_weeks_ago;\n$blog_weeks_ago = (!empty($atts[\"weeks\"])) ? $atts[\"weeks\"] : 1;\n\n$ts = rsvpmaker_next_scheduled($post->ID);\n$cron = get_post_meta($post->ID,'rsvpmaker_cron_email',true);\n$notekey = get_rsvp_notekey();\n$chosen = (int) get_post_meta($post->ID,$notekey,true);\n\nadd_filter('posts_where', 'filter_where_recent');\nquery_posts('post_type=post');\nif (have_posts()) :\nwhile (have_posts()) : the_post(); \nif($post->ID == $chosen)\n\t{\n\tcontinue;\n\t}\nif($post->comment_count)\n\t$c = sprintf(\" (%d comments)\",$post->comment_count);\nelse\n\t$c = \"\";\n$output .= '<h4><a href=\"'. get_permalink() .'\" rel=\"bookmark\">'. get_the_title() .'</a> By '. get_the_author() . $c . \"</h4>\\n<p>\".get_the_excerpt().\"</p>\\n\";\n endwhile;\nendif;\nremove_filter('posts_where', 'filter_where_recent');\nif(!empty($output))\n\t$output = '<h3>'.__('From the Blog','rsvpmaker').\"</h3>\\n\".$output;\n$wp_query = $backup;\n$post = $was;\nreturn $output;\n}\n\nfunction rsvpmaker_cron_active ($cron_active,$cron){\nif(empty($cron[\"cron_condition\"]) || ($cron[\"cron_condition\"] == 'none'))\n\treturn $cron_active;\nif(! $cron_active)\n\treturn $cron_active;\nif($cron[\"cron_condition\"] == 'events')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn count_future_events();\n\t}\nelseif($cron[\"cron_condition\"] == 'posts')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn count_recent_posts();\n\t}\nelseif($cron[\"cron_condition\"] == 'and')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn (count_recent_posts() && count_future_events()) ? 1 : 0;\n\t}\nelseif($cron[\"cron_condition\"] == 'or')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn (count_recent_posts() || count_future_events()) ? 1 : 0;\n\t}\nreturn $cron_active;\n}\nadd_filter('rsvpmaker_cron_active','rsvpmaker_cron_active',5,2);\n\nfunction rsvpmail_unsubscribe () {\nif(!isset($_REQUEST['rsvpmail_unsubscribe']))\n\treturn;\n?>\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title><?php bloginfo( 'name' ); echo ' - '.__('Email Unsubscribe'); ?></title>\n<style>\nbody {background-color: #000;}\n#main {background-color: #FFF; max-width: 600px; margin-left: auto; margin-right: auto; margin-top: 25px; padding: 25px;}\nh1 {font-size: 20px;}\n</style>\n</head>\n<body>\n<div id=\"main\">\n<h1><?php bloginfo( 'name' ); echo ' - '.__('Email Unsubscribe'); ?></h1>\n<?php\nif(isset($_POST['rsvpmail_unsubscribe']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n$e = sanitize_text_field(strtolower(trim($_POST['rsvpmail_unsubscribe'])));\nif(!is_email($e))\n\techo 'Error: invalid email address';\nelse\n\t{\n\trsvpmail_add_problem($e,'unsubscribed');\n\techo '<p>'.__('Unsubscribed from website email lists','rsvpmaker').'</p>';\n\t$msg = 'RSVPMaker unsubscribe: '.$e;\n\t$chimp_options = get_option('chimp');\n\tif(!empty($chimp_options) && !empty($chimp_options[\"chimp-key\"]))\n\t{\n\t$apikey = $chimp_options[\"chimp-key\"];\n\t$listId = $chimp_options[\"chimp-list\"];\n\t$MailChimp = new MailChimpRSVP($apikey);\n\t$result = $MailChimp->patch(\"lists/$listId/members/\".md5(strtolower($e)), array(\n\t\t\t\t'status' => 'unsubscribed'));\n\tif($MailChimp->success())\n\t\t{\n\t\techo '<p>'.__('Unsubscribed from MailChimp email list','rsvpmaker').': '.esc_html($listId).'</p>';\n\t\t$msg .= \"\\n\\nRemoved from MailChimp list\";\n\t\t}\n\telse\n\t\t{\n\t\techo '<p>'.__('Error attempting to unsubscribe from MailChimp email list','rsvpmaker').': '.esc_html($listId).'</p>';\t\n\t\t$msg .= \"\\n\\nMailChimp unsubscribe error\";\n\t\t}\n\t}\n\n\twp_mail(get_option('admin_email'), $e.' '.__('unsubscribed','rsvpmaker').': '.get_option('blogname').' (RSVPMaker)',$msg);\n\n\tdo_action('rsvpmail_unsubscribe',$e);\n\t}\n}\nif(isset($_GET['rsvpmail_unsubscribe']))\n{\n$e = sanitize_text_field(trim($_GET['rsvpmail_unsubscribe']));\n?>\n<form method=\"post\" action=\"<?php echo site_url(); ?>\">\n<?php rsvpmaker_nonce(); ?>\n<input type=\"text\" name=\"rsvpmail_unsubscribe\" value=\"<?php echo esc_attr($e); ?>\">\n<button><?php esc_html_e('Unsubscribe','rsvpmaker'); ?></button>\n</form>\n<?php\n}\n\nprintf('<p>%s <a href=\"%s\">%s</a></p>',__('Continue to','rsvpmaker'),site_url(),site_url());\n\n?>\n</div>\n</body>\n</html>\n<?php\nexit();\n}\n\nadd_action('init','rsvpmail_unsubscribe');\n\nfunction rsvpmaker_notification_templates () {\n\n$hook = rsvpmaker_admin_page_top(__('Notification Templates','rsvpmaker'));\necho '<p>'.__('Use this form to customize notification and confirmation messages and the information to be included in them. Template placeholders such as [rsvpdetails] are documented at the bottom of the page.').'</p>';\n\t\n$sample_data = array('rsvpdetails' => \"first: John\\nlast: Smith\\nemail:js@example.com\",'rsvpyesno' => __('YES','rsvpmaker'), 'rsvptitle' => 'Special Event', 'rsvpdate' => 'January 1, 2020','rsvpmessage' => 'Thank you!', 'rsvpupdate' => '<p><a style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\" class=\"rsvplink\" href=\"%s\">'. __('RSVP Update','rsvpmaker').'</a></p>');\n$sample_data = apply_filters('rsvpmaker_notification_sample_data',$sample_data);\n$template_forms = get_rsvpmaker_notification_templates ();\nprintf('<form id=\"rsvpmaker_notification_templates\" action=\"%s\" method=\"post\">',admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_notification_templates'));\nrsvpmaker_nonce();\nforeach($template_forms as $slug => $form)\n\t{\n\tif(!is_array($form))\n\t\tcontinue;\n\techo '<div style=\"border: thin dotted #555; margin-bottom: 5px;\">';\n\tprintf('<h2>%s</h2>',ucfirst(str_replace('_',' ',$slug)));\n\tforeach($form as $field => $value)\n\t\t{\n\t\t\tprintf('<div>%s</div>',ucfirst(str_replace('_',' ',$field)));\n\t\t\tif($field == 'body')\n\t\t\t\techo '<p><textarea name=\"ntemp['.$slug.']['.$field.']\" style=\"width: 90%; height: 100px;\">'.esc_attr($value).'</textarea></p>';\n\t\t\telseif($field == 'sample_data')\n\t\t\t\t$sample_data = $value;\n\t\t\telse\n\t\t\t\techo '<p><input type=\"text\" name=\"ntemp['.$slug.']['.$field.']\" value=\"'.esc_attr($value).'\" style =\"width: 90%\" /></p>';\n\t\t}\n\tif(isset($_GET[$slug]))\n\t{\n\techo '<h3>Example</h3>';\n\t$example = '<p><strong>Subject: </strong>'.$form['subject'].\"</p>\\n\\n\".$form['body'];\n\tforeach($sample_data as $field => $value)\n\t\t$example = str_replace('['.$field.']',$value,$example);\n\t\n\t$example = wpautop($example);\n\techo do_blocks(do_shortcode($example));\n\t}\n\techo '</div>';//end border\n\n\t}\n\tprintf('<h3>%s: <input type=\"text\" name=\"newtemplate_label\"></h3>',__('Custom Label','rsvpmaker-for-toastmasters'));\n\techo '<p>Subject<br /><input type=\"text\" name=\"newtemplate[subject]\" value=\"\" style =\"width: 90%\" /></p>';\n\techo '<p>Body<br /><textarea name=\"newtemplate[body]\" style=\"width: 90%; height: 100px;\"></textarea></p>';\n\necho submit_button().'</form>';\n\nprintf('<p><a href=\"%s\">Reset to defaults</a></p>',admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_notification_templates&reset=1'));\necho   '<p>'.__(\"RSVPMaker template placeholders:<br />[rsvpyesno] YES/NO<br />[rsvptitle] event post title<br />[rsvpdate] event date<br />[datetime] event date and time<br />[rsvpmessage] the message you supplied when you created/edited the event (default is Thank you!)<br />[rsvpdetails] information supplied by attendee<br />[rsvpupdate] button users can click on to update their RSVP<br />[rsvpcount] number of people registered<br />[event_title_link] a link to the event, with the event title and date/time\",'rsvpmaker').'</p>';\necho '<p>[rsvpmessage] and [rsvpdetails] should only be used in a notification template. Other codes can be used in the body of a confirmation message or the subject line of a reminder.</p>';\ndo_action('rsvpmaker_notification_templates_doc');\nrsvpmaker_admin_page_bottom($hook);\n}\n\nfunction get_rsvpmaker_notification_templates () {\nglobal $email_context;\n$email_context = true;\n$templates = get_option('rsvpmaker_notification_templates');\n//$template_forms represents the defaults\n$template_forms['notification'] = array('subject' => 'RSVP [rsvpyesno] for [rsvptitle] on [rsvpdate]','body' => \"Just signed up:\\n\\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]</div>\");\n$template_forms['confirmation'] = array('subject' => 'Confirming RSVP [rsvpyesno] for [rsvptitle] on [rsvpdate]','body' => \"<div class=\\\"rsvpmessage\\\">[rsvpmessage]</div>\\n\\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]</div>\\n\\nIf you wish to change your registration, you can do so using the button below. [rsvpupdate]\");\n$template_forms['confirmation_after_payment'] = array('subject' => 'Confirming payment for [rsvptitle] on [rsvpdate]','body' => \"<div class=\\\"rsvpmessage\\\">[rsvpmessage]</div>\\n\\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]</div>\\n\\nIf you wish to change your registration, you can do so using the button below. [rsvpupdate]\");\n$template_forms['payment_reminder'] = array('subject' => 'Payment Required: [rsvptitle] on [rsvpdate]','body' => \"We received your registration, but it is not complete without a payment. Please follow the link below to complete your registration and payment.\n\n[rsvpupdate]\n\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]<div>\");\nif(isset($_GET['reset']))\n\t{\n\n\t}\n\n$template_forms = apply_filters('rsvpmaker_notification_template_forms',$template_forms);\nif(empty($templates))\n\treturn $template_forms;\nif(isset($_GET['reset']))\n\t{\n\t\t$templates = $template_forms;\n\t\tupdate_option('rsvpmaker_notification_templates',$templates);\n\t}\nelse {\n\t//fill in the blanks\n\tforeach($template_forms as $slug => $form)\n\t{\n\tforeach($form as $field => $value)\n\t\t{\n\t\t\tif(empty($templates[$slug][$field]))\n\t\t\t\t$templates[$slug][$field] = $template_forms[$slug][$field];\n\t\t}\n\t}\n}\nreturn $templates;\n}\n\nfunction rsvpcount ($atts) {\nglobal $wpdb;\nglobal $post;\nif(isset($atts['post_id']))\n\t$post_id = (int) $atts['post_id'];\nelseif(!empty($atts) && is_numeric($atts))\n\t$post_id = $atts;\nelse\n\t$post_id = $post->ID;\n\t\nif(!$post_id)\n\treturn;\n$sql = \"SELECT count(*) FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=$post_id AND yesno=1 ORDER BY id DESC\";\n$total = (int) $wpdb->get_var($sql);\n$rsvp_max = get_post_meta($post_id,'_rsvp_max',true);\n$output = $total.' '.__('signed up so far.','rsvpmaker');\nif($rsvp_max)\n\t$output .= ' '.__('Limit','rsvpmaker').': '.$rsvp_max;\nreturn '<p class=\"signed_up\">'.$output.'</p>';\n}\n\nfunction rsvp_notifications_via_template ($rsvp,$rsvp_to,$rsvpdata) {\nglobal $post;\nglobal $rsvp_options;\ninclude_once 'rsvpmaker-ical.php';\n\n$templates = get_rsvpmaker_notification_templates();\n\n$notification_subject = $templates['notification']['subject']; \nforeach($rsvpdata as $field => $value)\n\t$notification_subject = str_replace('['.$field.']',$value,$notification_subject);\n\n$notification_body = $templates['notification']['body']; \nforeach($rsvpdata as $field => $value)\n\t$notification_body = str_replace('['.$field.']',$value,$notification_body);\n\t$notification_body = do_blocks(do_shortcode($notification_body));\n\n\t$rsvp_to_array = explode(\",\", $rsvp_to);\n\tforeach($rsvp_to_array as $to)\n\t{\n\t$mail[\"to\"] = $to;\n\t$mail[\"from\"] = $rsvp[\"email\"];\n\t$mail[\"fromname\"] = $rsvp[\"first\"].' '.$rsvp[\"last\"];\n\t$mail[\"subject\"] = $notification_subject;\n\t$mail[\"html\"] = wpautop($notification_body);\n\trsvpmaker_tx_email($post, $mail);\n\t}\n\n$send_confirmation = get_post_meta($post->ID,'_rsvp_rsvpmaker_send_confirmation_email',true);\n$confirm_on_payment = get_post_meta($post->ID,'_rsvp_confirmation_after_payment',true);\n\nif(($send_confirmation ||!is_numeric($send_confirmation)) && empty($confirm_on_payment) )//if it hasn't been set to 0, send it\n{\n$confirmation_subject = $templates['confirmation']['subject']; \nforeach($rsvpdata as $field => $value)\n\t$confirmation_subject = str_replace('['.$field.']',$value,$confirmation_subject);\n\n$confirmation_body = $templates['confirmation']['body']; \nforeach($rsvpdata as $field => $value)\n\t$confirmation_body = str_replace('['.$field.']',$value,$confirmation_body);\n\t\n\t$confirmation_body = do_blocks(do_shortcode($confirmation_body));\t\n\t$mail[\"html\"] = wpautop($confirmation_body);\n\tif(isset($post->ID)) // not for replay\n\t$mail[\"ical\"] = rsvpmaker_to_ical_email ($post->ID, $rsvp_to, $rsvp[\"email\"]);\n\t$mail[\"to\"] = $rsvp[\"email\"];\n\t$mail[\"from\"] = $rsvp_to_array[0];\n\t$mail[\"fromname\"] = get_bloginfo('name');\n\t$mail[\"subject\"] = $confirmation_subject;\n\trsvpmaker_tx_email($post, $mail);\t\n}\n\n}\n\nfunction rsvp_payment_reminder ($rsvp_id) {\nglobal $post;\nglobal $rsvp_options;\nglobal $wpdb;\n$sql = \"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE id=$rsvp_id\";\n$rsvp = (array) $wpdb->get_row($sql);\n$post = get_post($rsvp['event']);\n$rsvpdata = unserialize($rsvp['details']);\nif($rsvpdata['total'] <= $rsvp['amountpaid'])\n\treturn;\n\t\n$details = '';\nforeach($rsvpdata as $label => $value)\n\t$details .= sprintf('%s: %s'.\"\\n\",$label,$value);;\n\n$templates = get_rsvpmaker_notification_templates();\n$rsvp_to = get_post_meta($post->ID,'_rsvp_to',true);\n$rsvp_to_array = explode(\",\", $rsvp_to);\n$notification_subject = $templates['payment_reminder']['subject']; \nforeach($rsvpdata as $field => $value)\n\t$notification_subject = str_replace('['.$field.']',$value,$notification_subject);\n\n$notification_body = $templates['payment_reminder']['body']; \nforeach($rsvpdata as $field => $value)\n\t$notification_body = str_replace('['.$field.']',$value,$notification_body);\n$notification_body = str_replace('[rsvpdetails]',$details,$notification_body);\n\n$url = get_permalink($rsvp['event']);\n$url = add_query_arg('rsvp',$rsvp['id'],$url);\n$url = add_query_arg('e',$rsvp['email'],$url);\n\n$notification_body = str_replace('[rsvpupdate]',sprintf('<a href=\"%s\">Complete Registration</a>',$url),$notification_body);\n\t\n$notification_body = do_blocks(do_shortcode($notification_body)).'<p>after shortcode and blocks</p>';\n$mail[\"to\"] = $rsvp['email'];\n$mail[\"from\"] = $rsvp_to_array[0];\n$mail[\"fromname\"] = get_bloginfo('name');\n$mail[\"subject\"] = $notification_subject;\n$mail[\"html\"] = wpautop($notification_body);\nrsvpmaker_tx_email($post, $mail);\n}\n\nfunction rsvp_confirmation_after_payment ($rsvp_id) {\n\tinclude_once 'rsvpmaker-ical.php';\n\tglobal $post;\n\tglobal $rsvp_options;\n\tglobal $wpdb;\n\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE id=$rsvp_id\";\n\t$rsvp = (array) $wpdb->get_row($sql);\n\t$post = get_post($rsvp['event']);\n\t$rsvpdata = unserialize($rsvp['details']);\n\n\t$guests = $wpdb->get_results(\"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE master_rsvp=$rsvp_id\");\n\tif($guests) {\n\t\tforeach($guests as $guestrow) {\n\t\t\t$guestarr[] = $guestrow->first.' '.$guestrow->last;\n\t\t}\n\t\t$rsvpdata['guests'] = implode(', ',$guestarr);\n\t}\n\n\t//rsvpmaker_debug_log($rsvpdata,'rsvp_confirmation_after_payment');\n\t\t\n\t$details = '';\n\tforeach($rsvpdata as $label => $value)\n\t\t$details .= sprintf('%s: %s'.\"\\n\",$label,$value);\n\n\t$templates = get_rsvpmaker_notification_templates();\n\t$rsvp_to = get_post_meta($post->ID,'_rsvp_to',true);\n\t$rsvp_to_array = explode(\",\", $rsvp_to);\n\t$rsvpdata['rsvpmessage'] = '';\n\t$message_id = get_post_meta($post->ID,'_rsvp_confirm',true);\n\tif($message_id)\n\t{\n\t  $message_post = get_post($message_id);\n\t  $rsvpdata['rsvpmessage'] .= do_blocks($message_post->post_content).\"\\n\\n\";\n\t}\n\t$message_id = get_post_meta($post->ID,'payment_confirmation_message',true);\n\tif($message_id)\n\t{\n\t  $message_post = get_post($message_id);\n\t  $rsvpdata['rsvpmessage'] .= do_blocks($message_post->post_content);\n\t}\n\n\t$notification_subject = $templates['confirmation_after_payment']['subject'];\n\tforeach($rsvpdata as $field => $value)\n\t\t$notification_subject = str_replace('['.$field.']',$value,$notification_subject);\n\t\n\t$notification_body = $templates['confirmation_after_payment']['body']; \n\tforeach($rsvpdata as $field => $value)\n\t\t$notification_body = str_replace('['.$field.']',$value,$notification_body);\n\t$notification_body = str_replace('[rsvpdetails]',$details,$notification_body);\n\t\n\t$url = get_permalink($rsvp['event']);\n\t$url = add_query_arg('rsvp',$rsvp['id'],$url);\n\t$url = add_query_arg('e',$rsvp['email'],$url);\n\t\n\t$notification_body = str_replace('[rsvpupdate]',sprintf('<a href=\"%s\">Complete Registration</a>',$url),$notification_body);\t\n\t$notification_body = do_blocks(do_shortcode($notification_body));\n\n\t$mail[\"to\"] = $rsvp['email'];\n\t$mail[\"from\"] = $rsvp_to_array[0];\n\t$mail[\"fromname\"] = get_bloginfo('name');\n\t$mail[\"ical\"] = rsvpmaker_to_ical_email ($post->ID, $rsvp_to, $rsvp[\"email\"]);\n\t$mail[\"subject\"] = $notification_subject;\n\t$mail[\"html\"] = $payment_confirmation_message . wpautop($notification_body);\n\trsvpmaker_tx_email($post, $mail);\t\n}\n\nadd_action('init','rsvp_payment_reminder_test');\nfunction rsvp_payment_reminder_test () {\n\tif(!isset($_GET['payrem']))\n\t\treturn;\n\trsvp_payment_reminder(sanitize_text_field($_GET['payrem']));\n}\n\nadd_action('rsvp_payment_reminder','rsvp_payment_reminder',10,1);\n\nfunction rsvpmaker_payment_reminder_cron ($rsvp_id) {\n\t$time = rsvpmaker_strtotime('+30 minutes');\n\twp_clear_scheduled_hook( 'rsvp_payment_reminder',array($rsvp_id) );\n\twp_schedule_single_event($time,'rsvp_payment_reminder',array($rsvp_id));\n}\n\nfunction previewtest () {\n\t\trsvpmaker_cron_email_preview(array('post_id' => (int) $_GET['rsvpmaker_cron_email_preview']));\n\t\tdie('preview end');\n}\n\nfunction check_mailchimp_email ($email) {\n$chimp_options = get_option('chimp');\n$apikey = $chimp_options[\"chimp-key\"];\n$listId = $chimp_options[\"chimp-list\"];\n$email = trim(strtolower($email));\n$MailChimp = new MailChimpRSVP($apikey);\t\n$member = $MailChimp->get(\"/lists/\".$listId.\"/members/\".md5($email));\nif(isset($_GET['debug']))\n{\n\techo '<pre>';\n\t//print_r($member);\n\techo '</pre>';\n}\nif (!empty($member[\"id\"]) && ($member[\"status\"] == 'subscribed'))\n\treturn $member;\nelse\n\treturn false;\n}\n\n//weed out filters that don't belong in email\nfunction email_content_minfilters() {\n\tglobal $wp_filter, $post, $email_context;\n\t$log = '';\n\t\t$corefilters = array('convert_chars','wpautop','wptexturize','event_content','\n\t\twp_make_content_images_responsive');\n\t\tforeach($wp_filter[\"the_content\"] as $priority => $filters)\n\t\t\tforeach($filters as $name => $details)\n\t\t\t\t{\n\t\t\t\tif(!in_array($name,$corefilters) && !strpos($name,'hortcode') && !strpos($name,'lock'))//don't mess with block/shortcode processing\n\t\t\t\t\t{\n\t\t\t\t\t$r = remove_filter( 'the_content', $name, $priority );\n\t\t\t\t\t}\n\t\t\t\t}\t\n}\n\nfunction rsvpmailer_template_preview() {\n\tglobal $wpdb;\n\tif(isset($_GET['preview_broadcast_in_template'])) {\n\t\t$template = (int) $_GET['preview_broadcast_in_template'];\n\t\t$title = 'Demo: Broadcast Email Message';\n\t\t$id = $wpdb->get_var(\"SELECT ID FROM $wpdb->posts WHERE post_title='$title' \");\n\t\tif(!$id) {\n\t\t\t$postarray['post_title'] = $title;\n\t\t\t$postarray['post_status'] = 'publish';\n\t\t\t$postarray['post_type'] = 'rsvpemail';\n\t\t\t$postarray['post_content'] = '<!-- wp:paragraph {\"dropCap\":true,\"fontSize\":\"larger\"} -->\n\t\t\t<p class=\"has-drop-cap has-larger-font-size\">You have a story to tell about your business, its products, and its services. The catch is the story can\\'t be all about you.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Product features and service quality are important, but you are not the hero of the story. Your customers and future customers must be able to see themselves as the heroes. Your nifty product may be the hot rod spaceship that will ensure their victory, but you want them to envision themselves at the controls.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Technology companies often let their marketing get lost in the details. We help them tell stories that matter.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Our storytellers pay attention to the details, of course, and seek a deep understanding of them. But not all details are equally important. Not all details help tell a clear, convincing story.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p><a href=\"https://www.carrcommunications.com/tell-us-your-story/\">Tell us your story</a>, the way you tell it today, or the story you want to take to the market. We will help you tell it better, or suggest a different story that would be more effective.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Learn how <a href=\"https://carrcommunications.com\">Carr Communications</a> can help you tell a clear, convincing story.</p>\n\t\t\t<!-- /wp:paragraph -->';\n\t\t\t$id = wp_insert_post($postarray);\n\t\t}\n\t\t$permalink = get_permalink($id);\n\t\twp_redirect(add_query_arg('template_preview',1,$permalink));\n\t\texit;\n\t}\n\tif(isset($_GET['preview_confirmation_in_template'])) {\n\t\tglobal $rsvp_options;\n\t\t$template = (int) $_GET['preview_confirmation_in_template'];\n\t\t$title = 'RSVP YES for Demo Event Confirmation on April 1';\n\t\t$id = $wpdb->get_var(\"SELECT ID FROM $wpdb->posts WHERE post_title='$title' \");\n\t\tif(!$id || isset($_GET['reset'])) {\n\t\t\t$postarray['post_title'] = $title;\n\t\t\t$postarray['post_status'] = 'publish';\n\t\t\t$postarray['post_type'] = 'rsvpemail';\n\t\t\t$postarray['post_content'] = '<div class=\"rsvpmessage\">\n\t\t\t<p>Thank you! [your confirmation message here]</p>\n\t\t\t</div>\n\t\t\t<div class=\"rsvpdetails\">First Name: David F.<br>\n\t\t\tLast Name: Carr<br>\n\t\t\tEmail: david@carrcommunications.com<br>\n\t\t\tGuests: Beth Anne Carr, Theresa Carr</div>\n\t\t\t<p><em>If you wish to change your registration, you can do so using the button below. </em></p>\n\t\t\t<p><a class=\"rsvplink\" href=\"https://dev.local/rsvpmaker/gallery-talk-edouard-manet/?e=*EMAIL*#rsvpnow\" style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\">'.$rsvp_options['update_rsvp'].'</a></p>';\n\t\t\tif( isset($_GET['reset']) )\n\t\t\t{\n\t\t\t\t$postarray[\"ID\"] = $id;\n\t\t\t\twp_update_post($postarray);\n\t\t\t}\n\t\t\telse\n\t\t\t\t$id = wp_insert_post($postarray);\n\t\t}\n\t\tupdate_post_meta($id,'_email_template',$template);\n\t\t$permalink = get_permalink($id);\n\t\twp_redirect(add_query_arg('template_preview',1,$permalink));\n\t\texit;\n\t}\n}\n\nfunction event_title_link () {\n\tglobal $post, $rsvp_options;\n\t$time_format = $rsvp_options[\"time_format\"];\n\t$add_timezone = get_rsvpmaker_meta($post->ID,'_add_timezone',true);\t\n\tif(!strpos($time_format,'T') && $add_timezone )\n\t\t{\n\t\t$time_format .= ' T';\n\t\t}\n\t$t = get_rsvpmaker_timestamp($post->ID);\n\t$display_date = utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$time_format,$t));\n\t$permalink = get_permalink($post->ID);\n\treturn sprintf('<p class=\"event-title-link\"><a href=\"%s\">%s - %s</a></p>',$permalink,esc_html($post->post_title),esc_html($display_date));\n}\n\nfunction rsvpmaker_mailchimp_init() {\n$chimp_options = get_option('chimp');\nif(empty($chimp_options[\"chimp-key\"]))\n\treturn;\n$apikey = $chimp_options[\"chimp-key\"];\nreturn new MailChimpRSVP($apikey);\n}\n\nfunction rsvptitle_shortcode($atts) {\n\tglobal $post;\n\treturn esc_html($post->post_title);\n}\n\nfunction rsvpdate_shortcode($atts = array()) {\n\tglobal $post, $rsvp_options;\n\t$format = empty($atts['format']) ? $rsvp_options['long_date'] : $atts['format'];\n\t$daterow = get_rsvpmaker_event($post->ID);\n\t$start_date = preg_replace('/ .+/','',$daterow->date);//date not time\n\t$end_date = preg_replace('/ .+/','',$daterow->enddate);//date not time\n\t$t = (int) $daterow->ts_start;\n\tif($start_date == $end_date){\n\t\treturn rsvpmaker_date($format,$t);\n\t}\n\telse {\n\t\t$endt = (int) $daterow->ts_end;\n\t\treturn rsvpmaker_date($format,$t).' - '.rsvpmaker_date($format,$endt);\n\t}\n}\n\nfunction rsvpdatetime_shortcode($atts) {\n\tglobal $post, $rsvp_options;\n\t$format = empty($atts['format']) ? $rsvp_options['long_date'].' '.$rsvp_options['time_format'] : $atts['format'];\n\t$t = get_rsvpmaker_timestamp($post->ID);\n\treturn rsvpmaker_date($format,$t);\n}\n\nfunction rsvpmaker_cronmail_check_duplicate($content) {\n\t$key = 'cronemail'.md5($content);\n\t$found = get_transient($key);\n\tif($found)\n\t\treturn true;\n\tset_transient($key,time()); // used to set content\n\treturn false;\n}\n\nfunction rsvpmailer_preview($atts = array()) {\nglobal $post, $rsvpmaker_tx_content;\n$preview = get_post_meta($post->ID,'_rsvpmailer_preview',true);\nif(empty($preview)) {\n\nif(!empty($rsvpmaker_tx_content))\n\t$preview = $rsvpmaker_tx_content;\nelse\n\t$preview = trim(strip_tags($post->post_content));\n$preview = trim(strip_tags($preview));\nif(strlen($preview) > 200)\n\t$preview = substr($preview,0,200).' ...';\n}\nreturn $preview;\n}\n\nadd_shortcode('rsvpmailer_preview','rsvpmailer_preview');\n\nfunction rsvpmailer_block_styles() {\n\tglobal $rsvmailer_css;\n\tif(!empty($rsvmailer_css))\n\t\treturn $rsvmailer_css;\n\t$site_url = site_url();\n\t$updir = wp_get_upload_dir()['basedir'];\n\t$home_path = preg_replace('/wp-content.+/','',$updir);\n\t$wp_styles = wp_styles();\n\t$combined = '';\n\tforeach($wp_styles->queue as $handle) {\n\t\t$item = $wp_styles->registered[$handle]->src;\n\t\t$combined .= \"/* url $item */\\n\";\n\t\tif(strpos($item,'ttp') && !strpos($item,$_SERVER['SERVER_NAME']))\n\t\t\tcontinue; // ignore reference to external domains\n\t\t$item = $home_path.str_replace($site_url,'',$item);\n\t\tif(strpos($home_path,'\\\\'))\n\t\t\t$item = str_replace('/','\\\\',$item);\n\t\t$item = str_replace(\"//\",\"/\",$item);\n\t\t$item = str_replace(\"\\\\\\\\\",\"\\\\\",$item);\n\t\t$combined .= \"/* path $item */\\n\";\n\t\t$combined .= file_get_contents($item).\"\\n\";\n\t}\n\t$combined = rsvpmailer_clean_css($combined);\n\treturn $combined;\n}\n\n//remove styles emogrifier chokes on\nfunction rsvpmailer_clean_css($content) {\n\t//nonesuch ignored by inliner 'any-link','first-of-type','last-of-type','nth-last-of-type','only-of-type','optional','required'\n\t$unsupported = array('last-of-type','first-of-type','only-of-type');//\n\tforeach($unsupported as $bad) {\n\t\t$content = str_replace(':'.$bad,'nonesuch',$content); // remove pseudo references emogrifier chokes on\n\t}\n\t//$content = str_replace('*','nonesuch',$content); // remove all wildcard references\n\t$content = str_replace('menu','nonesuch',$content); // remove all menu references\n\t$content = preg_replace('/\\bbody/','nonesuch',$content);\n\treturn $content;\n}\n\nfunction rsvpmaker_included_styles () {\n\tglobal $rsvpemail_styles;\n\tif(!empty($rsvpemail_styles))\n\t\treturn $rsvpemail_styles;\n\t\n\t$rsvpemail_styles = '/* =WordPress Core\n\t-------------------------------------------------------------- */\n\t.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\t.aligncenter,\n\tdiv.aligncenter {\n\t\tdisplay: block;\n\t\tmargin: 5px auto 5px auto;\n\t}\n\t\n\t.alignright {\n\t\tfloat:right;\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t\n\t.alignleft {\n\t\tfloat: left;\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\ta img.alignright {\n\t\tfloat: right;\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t\n\ta img.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\ta img.alignleft {\n\t\tfloat: left;\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\ta img.aligncenter {\n\t\tdisplay: block;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\t\n\t.wp-caption {\n\t\tbackground: #fff;\n\t\tborder: 1px solid #f0f0f0;\n\t\tmax-width: 96%; /* Image does not overflow the content area */\n\t\tpadding: 5px 3px 10px;\n\t\ttext-align: center;\n\t}\n\t\n\t.wp-caption.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\t.wp-caption.alignleft {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\t.wp-caption.alignright {\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t\n\t.wp-caption img {\n\t\tborder: 0 none;\n\t\theight: auto;\n\t\tmargin: 0;\n\t\tmax-width: 98.5%;\n\t\tpadding: 0;\n\t\twidth: auto;\n\t}\n\t\n\t.wp-caption p.wp-caption-text {\n\t\tfont-size: 11px;\n\t\tline-height: 17px;\n\t\tmargin: 0;\n\t\tpadding: 0 4px 5px;\n\t}\n\t#email-content {\n\t\tbackground-color: #fff !important;\n\t\tcolor: #000 !important;\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tpadding: 10px;\n\t}\n\tbody {\n\t\tbackground-color: #fff;\n\t\tcolor: #000;\n\t\tfont-weight: normal;\n\t\tfont-size: initial;\n\t}\n\t.has-background {\n\t\tpadding: 5px;\n\t}\n\ta {\n\t\tdisplay: inline-block !important;\n\t}\n\t#messagefooter {\n\t\tmargin-top: 20px;\n\t\tpadding: 20px;\n\t\tbackground-color: #eee;\n\t\tcolor: #222;\n\t}\n\timg {\n\t\tmax-width: 95% !important;\n\t}\n\t';\n\t\n\t//add common block styles\n\t$rsvpemail_styles .= rsvpmailer_block_styles();\n\t$extra_email_styles = get_option('extra_email_styles');\n\tif(!empty($extra_email_styles))\n\t\t$rsvpemail_styles .= \"\\n\".$extra_email_styles.\"\\n\";\n\t$dir = get_stylesheet_directory();\n\t$rsvmailer_css = $dir.'/rsvpemail-editor-style.css';\n\tfile_put_contents($rsvmailer_css,$rsvpemail_styles);\n\treturn $rsvpemail_styles;\n\t}\n\t\n\tfunction show_rsvpmaker_included_styles () {\n\t\t\techo '<pre>';\n\t\t\techo rsvpmaker_included_styles();\n\t\t\techo '</pre>';\n\t\t\tdie();\n\t}\n\t\nfunction rsvpmaker_template_inline($query_post_id = 0) {\n\t//email_content_minfilters();\n\t//no javascript\n\t\t\n\t\tglobal $post;\n\t\tglobal $email_styles;\n\t\tglobal $custom_fields;\n\t\tglobal $email_context;\n\t\tglobal $chimp_options;\n\t\tglobal $wp_query;\n\t\tglobal $email_context;\t\n\t\t$email_context = true;\n\t\temail_content_minfilters();\n\t\t$wp_query_backup = $wp_query;\n\t\tif($query_post_id)\n\t\t{\n\t\t\tquery_posts('post_type=rsvpemail&p='.$query_post_id);\n\t\t}\n\t\n\t\tob_start();\n\t\twp_head();\n\t\t$head = ob_get_clean();\n\n\t\tob_start();\n\t\t?>\n\t\t<!doctype html>\n\t\t<html <?php language_attributes(); ?> >\n\t\t<head>\n\t\t<title>*|MC:SUBJECT|*</title>\n\t\t\t<meta charset=\"<?php bloginfo( 'charset' ); ?>\" />\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t<style id=\"imported\">\n\t<?php\n\techo rsvpmaker_included_styles ();\n\t?>\n\t</style>\n\t\t</head>\n\t\t<body class=\"rsvpmailer\">\n\t\t<!-- controls go here -->\n\t\t<article>\n\t\t<div class=\"entry-content\">\n\t\t<div id=\"email-content\">\n\t\n\t\t<!-- editors note goes here -->\n\t\n\t\t\t<?php\n\t\t\t//print_r($post);\n\t\t\tthe_post();\n\t\t\tthe_content();\n\t\t\t?>\n\t\n\t<div id=\"messagefooter\">\n\t*|LIST:DESCRIPTION|*<br>\n\t<br>\n\t<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list <span style=\"display: none\">*|UNSUB|*</span>\n\t<br>\n\t<!-- mailchimp -->\n\t<strong>Our mailing address is:</strong><br>\n\t*|LIST:ADDRESS|*<br>\n\t<em>Copyright (C) *|CURRENT_YEAR|* *|LIST:COMPANY|* All rights reserved.</em><br>    \n*|REWARDS|*</div>\n\t\t</div>\n\t\t</div>\n\t\t</article>\n\t\t</body>\n\t\t</html>\n\t\t<?php\n\t\t$content = ob_get_clean();\n\t\t$content = preg_replace('/<style.+<\\/style>/is','',$content);\n\t\tif(preg_match_all('|<iframe.+src=\"https://www.youtube.com/embed/([^\\?]+)|is',$content,$matches)) {\n\t\t\tforeach($matches[1] as $youtube_id) {\n\t\t\t\t$link = 'https://youtu.be/'.$youtube_id;\n\t\t\t\t$img = 'https://img.youtube.com/vi/'.$youtube_id.'/mqdefault.jpg';\n\t\t\t\t$html = '<p><a href=\"'.$link.'\">Watch on YouTube: '.$link.'<br /><img src=\"'.$img.'\" width=\"320\" height=\"180\" /></a></p>';\n\t\t\t\t$content = preg_replace('|<iframe.+'.$youtube_id.'[^<]+</iframe>|',$html,$content);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\t$content = preg_replace( '/(?<!\")(https:\\/\\/www.youtube.com\\/watch\\?v=|https:\\/\\/youtu.be\\/)([a-zA-Z0-9_\\-]+)/', '<p><a href=\"$0\">Watch on YouTube: $0<br /><img src=\"https://img.youtube.com/vi/$2/mqdefault.jpg\" width=\"320\" height=\"180\" /></a></p>', $content );\n\nupdate_post_meta($post->ID,'_rsvpmail_html',$content);\nupdate_post_meta($post->ID,'_rsvpmail_text',rsvpmaker_text_version($content));\n$wp_query = $wp_query_backup;\nreturn $content;\n}\n", "<?php\n\n/*\nGroup Email Functions\n*/\n\nfunction rsvpmaker_relay_active_lists() {\n\n\t$active = get_option( 'rsvpmaker_discussion_active' );\n\n\t$lists = array();\n\n\tif ( ! $active ) {\n\n\t\treturn array();\n\t}\n\n\t$vars = get_option( 'rsvpmaker_discussion_member' );\n\n\tif ( ! empty( $vars['password'] ) ) {\n\n\t\t$lists['member'] = $vars['user'];\n\t}\n\n\t$vars = get_option( 'rsvpmaker_discussion_officer' );\n\n\tif ( ! empty( $vars['password'] ) ) {\n\n\t\t$lists['officer'] = $vars['user'];\n\t}\n\n\treturn $lists;\n\n}\n\n\nfunction rsvpmaker_relay_menu_pages() {\n\n\t$parent_slug = 'edit.php?post_type=rsvpemail';\n\n\tadd_submenu_page(\n\t\t$parent_slug,\n\t\t__( 'Group Email', 'rsvpmaker' ),\n\t\t__( 'Group Email', 'rsvpmaker' ),\n\t\t'manage_options',\n\t\t'rsvpmaker_relay_manual_test',\n\t\t'rsvpmaker_relay_manual_test'\n\t);\n\tadd_submenu_page(\n\t\t$parent_slug,\n\t\t__( 'Group Email Log', 'rsvpmaker' ),\n\t\t__( 'Group Email Log', 'rsvpmaker' ),\n\t\t'manage_options',\n\t\t'rsvpmaker_relay_log',\n\t\t'rsvpmaker_relay_log'\n\t);\n\n}\n\nadd_action( 'admin_menu', 'rsvpmaker_relay_menu_pages' );\n\nfunction rsvpmaker_relay_manual_test() {\n\n\techo '<h1>' . __( 'Manually Trigger Check of Email Lists', 'rsvpmaker' ) . '</h1>';\n\n\t$html = rsvpmaker_relay_init( true );\n\n\tif ( $html ) {\n\n\t\techo wp_kses_post( $html );\n\n\t} else {\n\t\techo '<p>' . __( 'No messages', 'rsvpmaker' ) . '</p>';\n\t}\n\n}\n\nadd_action( 'rsvpmaker_relay_init_hook', 'rsvpmaker_relay_init' );\n\nfunction rsvpmaker_relay_init( $show = false ) {\n\n\t$active = get_option( 'rsvpmaker_discussion_active' );\n\n\t$result = $qresult = '';\n\n\t$qresult = rsvpmaker_relay_queue();\n\n\tif ( ! $active && ! $show ) {\n\n\t\treturn;\n\t}\n\n\tif ( empty( $qresult ) ) {\n\n\t\t$result = rsvpmaker_relay_get_pop( 'member' );\n\n\t\tif ( ! strpos( $result, 'Mail:' ) ) {\n\n\t\t\t$result .= rsvpmaker_relay_get_pop( 'officer' );\n\t\t}\n\n\t\tif ( ! strpos( $result, 'Mail:' ) ) {\n\n\t\t\t$result .= rsvpmaker_relay_get_pop( 'extra' );\n\t\t}\n\n\t\tif ( ! strpos( $result, 'Mail:' ) ) {\n\n\t\t\t$result .= rsvpmaker_relay_get_pop( 'bot' );\n\t\t}\n\t}\n\n\tif ( $show ) {\n\n\t\treturn $qresult . $result;\n\t}\n\n\tif ( ! empty( $qresult ) || strpos( $result, 'Mail:' ) ) {\n\n\t\trsvpmaker_debug_log( $qresult . $result, 'rsvpmaker_relay_result' );\n\n\t}\n\n}\n\nfunction rsvpmaker_relay_queue() {\n\tglobal $wpdb, $post, $page, $pages;\n\n\t$rsvpmaker_message_type = 'email_rule_group_email';\n\t//select a message with pending sends\n\t$sql = \"SELECT ID FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE meta_key='rsvprelay_to' AND (post_status='publish' OR post_status='draft')\";\n\t$epost_id = $wpdb->get_var($sql);\n\tif(empty($epost_id))\n\t\treturn;\n\t$sql = \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE ID=$epost_id AND meta_key='rsvprelay_to' AND (post_status='publish' OR post_status='draft') \";\n\t$results = $wpdb->get_results( $sql );\n\tif ( empty( $results ) ) {\n\t\treturn;\n\t}\n\t$total_to_send = sizeof($results);\n\t$limit = 10;\n\t$sent = 0;\n\n\t$html = '<p>Results: ' . sizeof( $results ) . '</p>';\n\n\t$mail['message_type'] = 'email_rule_group_email';\n\t$mail['override'] = 1;\n\t$mail['from'] = get_post_meta( $epost_id, 'rsvprelay_from', true );;\n\t$mail['fromname'] = get_post_meta( $epost_id, 'rsvprelay_fromname', true );\n\t$message_description = get_post_meta( $epost_id, 'message_description', true );\n\t$mail['html'] = get_post_meta($epost_id,'_rsvpmail_html',true); //rsvpmail broadcast\n\t//rsvpmaker_debug_log($mail['html'],'_rsvpmail_html_for_'.$epost_id);\n\tif(empty($mail['html']))\n\t{\n\t\t$post = get_post($epost_id);\n\t\t$template = '<html>\n\t\t<head>\n\t\t<title>*|MC:SUBJECT|*</title>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t\t</head>\n\t\t<body>\n\t\t\n\t\t[rsvpmaker_email_content]\n\t\t\n\t\t<div id=\"messagefooter\" style=\"padding: 5px; background-color: #eee; color: #000;\">\n\t\t*|LIST:DESCRIPTION|*<br>\n\t\t<br>\n\t\t<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list | <a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a>\n\t\t</div>\n\t\t\n\t\t</body>\n\t\t</html>';\n\t\t$mail['html'] = do_blocks( do_shortcode( $template ) );\n\t\trsvpmaker_debug_log($mail,'group_email_from_template');\n\t}\n\telse\n\t\trsvpmaker_debug_log($mail,'group_email_from_meta');\n\t$count = 0;\n\tif ( ! empty( $results ) ) {\n\t\tforeach ( $results as $row ) {\n\t\t\tif($count == $limit)\n\t\t\t\tbreak;\n\t\t\t$count++;\n\t\t\tif ( ! isset( $_GET['nodelete'] ) ) {\n\t\t\t\t$sql = \"DELETE FROM $wpdb->postmeta WHERE meta_id=\" . $row->meta_id;\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t}\n\t\t\tif ( rsvpmaker_cronmail_check_duplicate( $row->meta_value . $row->post_content ) ) {\n\t\t\t\t$html .= '<div>skipped duplicate to ' . esc_html( $row->meta_value ) . '</div>';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( empty( $row->post_title ) || empty( $row->post_content ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( ! empty( $attachments ) ) {\n\t\t\t\t$mail['attachments'] = $attachments;\n\t\t\t}\n\t\t\t$mail['subject'] = $row->post_title;\n\t\t\t$mail['to'] = $row->meta_value;\n\t\t\t$html .= sprintf( '<p>%s to %s</p>', $row->post_title, $row->meta_value );\n\t\t\t$post = get_post( $row->ID );\n\t\t\t$post_id = $row->ID;\n\t\t\tif ( isset( $_GET['debug'] ) ) {\n\t\t\t\tprintf( '<pre>%s</pre>', htmlentities( $template ) );\n\t\t\t\tprintf( '<pre>%s</pre>', htmlentities( $mail['html'] ) );\n\t\t\t}\n\t\t\trsvpmailer( $mail, '<div class=\"rsvpexplain\">' . $message_description . '</div>' );\n\t\t\tadd_post_meta( $post->ID, 'rsvpmail_sent', $mail['to'] . ' ' . rsvpmaker_date( 'r' ) );\n\t\t\tsleep(2);\n\t\t}\n\t\t//delete old transients used to prevent duplicate sends\n\t\t$sql = \"DELETE FROM $wpdb->options WHERE option_name LIKE '_transient_cronemail%' AND (option_value < \".(time() - DAY_IN_SECONDS) .\" OR option_value LIKE '%@%' )\";\n\t\t$wpdb->query($sql);\n\t\treturn $html;\n\t}\n}\n\nfunction group_emails_extract( $text ) {\n\tpreg_match_all( \"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", $text, $emails );\n\t$emails = $emails[0];\n\t$unique = array();\n\tforeach ( $emails as $email ) {\n\n\t\t$email = strtolower( $email );\n\n\t\t$unique[ $email ] = $email;\n\n\t}\n\n\treturn $unique;\n\n}\n\n\n\nfunction get_mime_type( &$structure ) {\n\n\t$primary_mime_type = array( 'TEXT', 'MULTIPART', 'MESSAGE', 'APPLICATION', 'AUDIO', 'IMAGE', 'VIDEO', 'OTHER' );\n\n\tif ( $structure->subtype ) {\n\n\t\treturn $primary_mime_type[ (int) $structure->type ] . '/' . $structure->subtype;\n\n\t}\n\n\t\treturn 'TEXT/PLAIN';\n\n}\n\n\n\nfunction rsvpmaker_get_part( $stream, $msg_number, $mime_type, $structure = false, $part_number = false ) {\n\n\tif ( ! $structure ) {\n\n\t\t$structure = imap_fetchstructure( $stream, $msg_number );\n\n\t}\n\n\tif ( $structure ) {\n\n\t\tif ( $mime_type == get_mime_type( $structure ) ) {\n\n\t\t\tif ( ! $part_number ) {\n\n\t\t\t\t$part_number = '1';\n\n\t\t\t}\n\n\t\t\t$text = imap_fetchbody( $stream, $msg_number, $part_number );\n\n\t\t\tif ( $structure->encoding == 3 ) {\n\n\t\t\t\treturn imap_base64( $text );\n\n\t\t\t} elseif ( $structure->encoding == 4 ) {\n\n\t\t\t\treturn imap_qprint( $text );\n\n\t\t\t} else {\n\n\t\t\t\treturn $text;\n\n\t\t\t}\n\t\t}\n\n\t\tif ( $structure->type == 1 ) { /* multipart */\n\n\t\t\t// while(list($index, $sub_structure) = each($structure->parts)) {\n\n\t\t\tforeach ( $structure->parts as $index => $sub_structure ) {\n\n\t\t\t\t$prefix = '';\n\n\t\t\t\tif ( $part_number ) {\n\n\t\t\t\t\t$prefix = $part_number . '.';\n\n\t\t\t\t}\n\n\t\t\t\t$data = rsvpmaker_get_part( $stream, $msg_number, $mime_type, $sub_structure, $prefix . ( $index + 1 ) );\n\n\t\t\t\tif ( $data ) {\n\n\t\t\t\t\treturn $data;\n\n\t\t\t\t}\n\t\t\t} // END OF WHILE\n\t\t} // END OF MULTIPART\n\t} // END OF STRUTURE\n\n\t\treturn false;\n\n} // END OF FUNCTION\n\n\n\nfunction rsvpmaker_relay_get_pop( $list_type = '' ) {\n\n\tglobal $wpdb;\n\n\t// $wpdb->show_errors();\n\n\t$server = get_option( 'rsvpmaker_discussion_server' );\n\n\t$recipients = array();\n\n\t$vars = get_option( 'rsvpmaker_discussion_' . $list_type );\n\n\tif ( empty( $vars ) || empty( $vars['password'] ) ) {\n\n\t\treturn '<div>no password set for ' . $list_type . '</div>';\n\t}\n\n\t$user = $vars['user'];\n\n\t$password = $vars['password'];\n\n\t$p = explode( '@', $user );\n\n\t$actionslug = $p[0];\n\n\t$unsubscribed = get_option( 'rsvpmail_unsubscribed' );\n\n\tif ( empty( $unsubscribed ) ) {\n\t\t$unsubscribed = array();\n\t}\n\t// don't want loops, list sending to itself\n\t$unsubscribed[] = $user;\n\n\t$html = '';\n\n\tif ( isset( $_GET['test'] ) ) {\n\n\t\tmail( 'relay@toastmost.org', 'Subject', \"This is a test\\n\\nmultiple lines of text\" );\n\t}\n\n\t// \u00a0Connect\u00a0to\u00a0the\u00a0mail\u00a0server\u00a0and\u00a0grab\u00a0headers\u00a0from\u00a0the\u00a0mailbox\n\n\t$html .= sprintf( '<p>%s, %s, %s</p>', $server, $user, $password );\n\n\t$mail = @imap_open( $server, $user, $password, CL_EXPUNGE );\n\n\tif ( empty( $mail ) ) {\n\n\t\treturn '<div>no mail connection found for ' . $list_type .' ! '. $server .' ! '. $user .' ! '. $password . '</div>';\n\t}\n\n\t$headers = imap_headers( $mail );\n\n\tif ( empty( $headers ) ) {\n\n\t\treturn '<div>no messages found for ' . $list_type . '</div>';\n\t}\n\n\t$html .= '<pre>' . \"Mail:\\n\" . var_export( $mail, true ) . '</pre>';\n\n\t$html .= '<pre>' . \"Headers:\\n\" . var_export( $headers, true ) . '</pre>';\n\n\tif ( $list_type == 'member' ) {\n\n\t\t$members = get_site_members();\n\n\t\tforeach ( $members as $member ) {\n\n\t\t\t$recipients[] = strtolower( $member->user_email );\n\t\t}\n\t} elseif ( $list_type == 'officer' ) {\n\n\t\t// toastmasters integration\n\n\t\t$officers = get_option( 'wp4toastmasters_officer_ids' );\n\n\t\tif ( ! empty( $officers ) && is_array( $officers ) ) {\n\n\t\t\tforeach ( $officers as $id ) {\n\n\t\t\t\t$member = get_userdata( $id );\n\n\t\t\t\tif ( $member ) {\n\n\t\t\t\t\t$recipients[] = strtolower( $member->user_email );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$subject_prefix = empty( $vars['subject_prefix'] ) ? '' : $vars['subject_prefix'];\n\n\t$whitelist = ( empty( $vars['whitelist'] ) ) ? array() : group_emails_extract( $vars['whitelist'] );\n\n\t$blocked = ( empty( $vars['blocked'] ) ) ? array() : group_emails_extract( $vars['blocked'] );\n\n\t$additional_recipients = ( empty( $vars['additional_recipients'] ) ) ? array() : group_emails_extract( $vars['additional_recipients'] );\n\n\tif ( ! empty( $additional_recipients ) ) {\n\n\t\tforeach ( $additional_recipients as $email ) {\n\n\t\t\tif ( ! in_array( $email, $recipients ) ) {\n\n\t\t\t\t$recipients[] = $email;\n\t\t\t}\n\t\t}\n\t}\n\n\t// loop through each email\n\n\tfor ( $n = 1; $n <= count( $headers ); $n++ ) {\n\n\t\t$html .= '<h3>' . $headers[ $n - 1 ] . '</h3><br />';\n\n\t\t$realdata = '';\n\n\t\t$headerinfo = imap_headerinfo( $mail, $n );\n\n\t\tif ( ! empty( $headerinfo->message_id ) && rsvpmaker_relay_duplicate( $headerinfo->message_id ) ) {\n\t\t\techo 'duplicate for ' . $headerinfo->message_id;\n\t\t\tcontinue; // already tried to process this, something is wrong\n\t\t}\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t$html .= '<pre>' . \"Header Info:\\n\" . htmlentities( var_export( $headerinfo, true ) ) . '</pre>';\n\t\t}\n\n\t\t$subject = '';\n\n\t\tif ( ! empty( $headerinfo->subject ) ) {\n\n\t\t\t$subject = $headerinfo->subject;\n\n\t\t} elseif ( ! empty( $headerinfo->Subject ) ) {\n\n\t\t\t$subject = $headerinfo->Subject;\n\t\t}\n\n\t\tif ( ! strpos( $subject, $subject_prefix . ']' ) && ! empty( $subject_prefix ) ) {\n\n\t\t\t$subject = '[' . $subject_prefix . '] ' . $subject;\n\t\t}\n\n\t\t$fromname = $headerinfo->from[0]->personal;\n\n\t\t$from = strtolower( $headerinfo->from[0]->mailbox . '@' . $headerinfo->from[0]->host );\n\n\t\tif ( in_array( $from, $recipients ) ) {\n\n\t\t\t$html .= '<p>' . $from . ' is a member email</p>';\n\n\t\t} else {\n\t\t\t$html .= '<p>' . $from . ' is <strong>NOT</strong> a member email</p>';\n\t\t}\n\n\t\t$html .= var_export( $headerinfo->from, true );\n\n\t\t$html .= '<h3>' . $subject . '<br />' . $fromname . ' ' . $from . '</h3>';\n\n\t\t$mailqtext = rsvpmaker_get_part( $mail, $n, 'TEXT/PLAIN' );\n\n\t\t$mailq = rsvpmaker_get_part( $mail, $n, 'TEXT/HTML' );\n\n\t\t$member_user = get_user_by( 'email', $from );\n\n\t\t$author = ( $member_user && ! empty( $member_user->ID ) ) ? $member_user->ID : 1;\n\n\t\t$qpost = array(\n\t\t\t'post_title'  => $subject,\n\t\t\t'post_type'   => 'rsvpemail',\n\t\t\t'post_status' => 'draft',\n\t\t\t'post_author' => $author,\n\t\t);\n\n\t\tif ( $mailq ) {\n\n\t\t\t$html .= '<p>Capturing HTML email content</p>';\n\n\t\t\t$embedded_images = rsvpmailer_embedded_images( $mailq );\n\n\t\t\t$html .= sprintf( '<p>Embedded images: %s</p>', var_export( $embedded_images, true ) );\n\n\t\t\t$html .= $mailq;\n\n\t\t\t$qpost['post_content'] = preg_replace( \"|<style\\b[^>]*>(.*?)</style>|s\", '', $mailq );\n\n\t\t} else {\n\n\t\t\t$html .= '<p>Capturing TEXT email content</p>';\n\n\t\t\t$temp = wpautop( $mailqtext );\n\n\t\t\t$qpost['post_content'] = $temp;\n\n\t\t\t$html .= $temp;\n\n\t\t}\n\n\t\t$struct = imap_fetchstructure( $mail, $n );\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t$html .= sprintf( '<h1>Structure</h1><pre>%s</pre>', var_export( $struct, true ) );\n\t\t}\n\n\t\t$contentParts = count( $struct->parts );\n\n\t\t$upload_dir = wp_upload_dir();\n\n\t\t$t = time();\n\n\t\t$path = $upload_dir['path'] . '/';\n\n\t\t$urlpath = $upload_dir['url'] . '/';\n\n\t\t$atturls = array();\n\n\t\t$image_types = array( 'jpg', 'jpeg', 'png', 'gif' );\n\n\t\t$imagecount = 0;\n\n\t\tif ( $contentParts >= 2 ) {\n\n\t\t\tfor ( $i = 2;$i <= $contentParts;$i++ ) {\n\n\t\t\t\t$att[ $i - 2 ] = imap_bodystruct( $mail, $n, $i );\n\n\t\t\t}\n\n\t\t\tfor ( $k = 0;$k < sizeof( $att );$k++ ) {\n\n\t\t\t\t$attachment = $att[ $k ];\n\n\t\t\t\t$strFileName = $strFileType = '';\n\n\t\t\t\tif ( ! empty( $att[ $k ]->parameters ) && is_array( $att[ $k ]->parameters ) && ! empty( $att[ $k ]->parameters[0]->value ) ) {\n\n\t\t\t\t\tif ( ( $att[ $k ]->parameters[0]->value == 'us-ascii' ) || ( $att[ $k ]->parameters[0]->value == 'US-ASCII' ) ) {\n\n\t\t\t\t\t\tif ( $att[ $k ]->parameters[1]->value != '' ) {\n\n\t\t\t\t\t\t\t$strFileName = $att[ $k ]->parameters[1]->value;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ( $att[ $k ]->parameters[0]->value != 'iso-8859-1' && $att[ $k ]->parameters[0]->value != 'ISO-8859-1' ) {\n\n\t\t\t\t\t\t\t\t\t$strFileName = $att[ $k ]->parameters[0]->value;\n\n\t\t\t\t\t}\n\t\t\t\t}//end is array\n\n\t\t\t\tif ( strpos( $strFileName, '.' ) ) { // if it's a filename\n\n\t\t\t\t\t$p = explode( '.', $strFileName );\n\n\t\t\t\t\t$strFileType = strtolower( array_pop( $p ) );\n\n\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t$html .= sprintf( '<p>File: %s File type: %s</p>', $strFileName, $strFileType );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( in_array( $strFileType, $image_types ) && ! empty( $embedded_images ) ) {\n\n\t\t\t\t\t\t$html .= '<p>Is an image</p>';\n\n\t\t\t\t\t\t// $key = key($embedded_images);\n\n\t\t\t\t\t\t// printf('<p>key: %s</p>',$key);\n\n\t\t\t\t\t\t$html .= sprintf( '<p>Checking embedded image %s</p>', $imagecount );\n\n\t\t\t\t\t\tif ( ! empty( $embedded_images[ $imagecount ] ) ) {\n\n\t\t\t\t\t\t\t$cid = $embedded_images[ $imagecount ];\n\n\t\t\t\t\t\t\t$html .= 'cid key: ' . $imagecount;\n\n\t\t\t\t\t\t\t$imagecount++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$html .= sprintf( '<p>No CID found for %s or %s</p>', $imagecount, $strFileName );\n\n\t\t\t\t\t\t\t$cid = '';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$addtopath = $t . $k;\n\n\t\t\t\t\t}//if it's an image\n\n\t\t\t\t\telse {\n\n\t\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t\t$html .= '<p>Not an image</p>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$addtopath = '';\n\n\t\t\t\t\t\t$cid = '';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t$html .= sprintf( '<p>Handling attachment %s %s %s %s %s %s</p>', var_export( $attachment, true ), $i, $n, var_export( $mail, true ), $path . $addtopath, $urlpath . $addtopath );\n\t\t\t\t\t}\n\n\t\t\t\t\t $atturl = rsvpmaker_relay_save_attachment( $attachment, $k + 2, $n, $mail, $path . $addtopath, $urlpath . $addtopath, $strFileName, $strFileType );\n\n\t\t\t\t\t $link = sprintf( '<a href=\"%s\" target=\"_blank\">%s</a>', $atturl, $strFileName );\n\n\t\t\t\t\t $atturls[] = $link;\n\n\t\t\t\t\tif ( ! empty( $cid ) ) {\n\n\t\t\t\t\t\t$qpost['post_content'] = str_replace( $cid, $atturl, $qpost['post_content'] );\n\n\t\t\t\t\t\t$html .= printf( '<p>replace %s with %s</p>', $cid, $atturl );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t$html .= sprintf( '<div>Attachment:</div><pre>%s</pre>', var_export( $attachment, true ) );\n\t\t\t\t\t}\n\t\t\t\t}// is filename\n\n\t\t\t}//loop attachments\n\n\t\t}// loop content parts\n\n\t\t// if we weren't able to substitue url for embedded images coding\n\n\t\t$qpost['post_content'] = preg_replace( '/<img.+cid:[^>]+>/', 'IMAGE OMMITTED', $qpost['post_content'] );\n\n\t\tif ( sizeof( $atturls ) > 0 ) {\n\t\t\t$qpost['post_content'] .= '<div style=\"padding: 10px; margin: 5px; background-color: #eee; border: thin solid #555;\"><p><strong>Attachments:</strong> <br />' . implode( '<br />', $atturls ) . '</p></div>';\n\t\t}\n\n\t\tif ( isset( $_GET['nosave'] ) ) {\n\n\t\t\techo '<h1>Version to send (not saved)</h2>' . wp_kses_post( $qpost['post_content'] );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t$log_id = wp_insert_post( $qpost );\n\t\tupdate_post_meta( $log_id, 'headerinfo', $headerinfo );\n\n\t\t// (($list_type == 'extra') && in_array('autoresponder@example.com',$additional_recipients))\n\t\tif ( $list_type == 'bot' ) {\n\t\t\techo \"Action call: 'rsvpmaker_autoreply'\";\n\t\t\tdo_action( 'rsvpmaker_autoreply', $qpost, $user, $from, $headerinfo->toaddress, $fromname, $headerinfo->to );\n\t\t}\n\n\t\tif ( in_array( $from, $blocked ) ) {\n\n\t\t\t$rmail['subject'] = 'BLOCKED ' . $qpost['post_title'];\n\n\t\t\t$rmail['to'] = $from;\n\n\t\t\t$rmail['html'] = '<p>Your message was not delivered to the email list.</p>';\n\n\t\t\t$rmail['from'] = get_option( 'admin_email' );\n\n\t\t\t$rmail['fromname'] = get_option( 'blogname' );\n\n\t\t\tupdate_option( 'rsvpmaker_relay_latest_bounce', var_export( $rmail, true ) );\n\n\t\t\trsvpmailer( $rmail );\n\n\t\t} elseif ( in_array( $from, $recipients ) || in_array( $from, $whitelist ) ) {\n\n\t\t\t$qpost['post_content'] .= \"\\n<p>*****</p>\" . sprintf( '<p>Relayed from the <a href=\"mailto:%s\" target=\"_blank\">%s</a> email list</p><p>Replies will go to SENDER. <a target=\"_blank\" href=\"mailto:%s?subject=Re:%s\">Reply to list instead</a></p>', $user, $user, $user, $subject );\n\t\t\t$post_id                = 0;\n\n\t\t\tif ( ! empty( $qpost['post_content'] ) && ! empty( $from ) ) {\n\n\t\t\t\t$post_id = wp_insert_post( $qpost );\n\t\t\t}\n\n\t\t\t$html .= var_export( $qpost, true );\n\n\t\t\tif ( $post_id ) {\n\t\t\t\tadd_post_meta( $post_id, 'imap_message_id', $headerinfo->message_id );\n\n\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_from', $from );\n\n\t\t\t\t// for debugging\n\n\t\t\t\tadd_post_meta( $post_id, 'imap_body', imap_body( $mail, $n ) );\n\n\t\t\t\tif ( empty( $fromname ) ) {\n\n\t\t\t\t\t$fromname = $from;\n\t\t\t\t}\n\n\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_fromname', $fromname );\n\n\t\t\t\tif ( ! empty( $recipients ) ) {\n\n\t\t\t\t\tforeach ( $recipients as $to ) {\n\n\t\t\t\t\t\t$rsvpmailer_rule = apply_filters( 'rsvpmailer_rule', '', $to, 'email_rule_group_email' );\n\n\t\t\t\t\t\tif ( $rsvpmailer_rule == 'permit' ) {\n\n\t\t\t\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_to', $to );\n\n\t\t\t\t\t\t} elseif ( $rsvpmailer_rule == 'deny' ) {\n\n\t\t\t\t\t\t\trsvpmaker_debug_log( $to, 'group email blocked' );\n\n\t\t\t\t\t\t} elseif ( ! in_array( $to, $unsubscribed ) ) {\n\n\t\t\t\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_to', $to );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ( $list_type != 'bot' ) {\n\n\t\t\t$rmail['subject'] = 'NOT DELIVERED ' . $qpost['post_title'];\n\n\t\t\t$rmail['to'] = $from;\n\n\t\t\t$rmail['html'] = '<p>Your message was not delivered because it did not come from a recognized member email address.</p><p>Reply if you also use an alternate email address that needs to be added to our whitelist.</p>';\n\n\t\t\t$rmail['from'] = get_option( 'admin_email' );\n\n\t\t\t$rmail['fromname'] = get_option( 'blogname' );\n\n\t\t\tupdate_option( 'rsvpmaker_relay_latest_bounce', var_export( $rmail, true ) );\n\n\t\t\trsvpmailer( $rmail );\n\n\t\t}\n\n\t\tif ( isset( $_GET['nodelete'] ) ) {\n\n\t\t\t$html .= '<p>Not deleting</p>';\n\n\t\t} else {\n\n\t\t\t$html .= sprintf( '<p>Delete %s</p>', $n );\n\n\t\t\timap_delete( $mail, $n );\n\n\t\t}\n\t}\n\n\timap_expunge( $mail );\n\n\t$html .= '<p>Expunge deleted messages</p>';\n\n\treturn $html;\n\n\t// end function rsvpmaker_relay_get_pop() {\n}\n\nfunction rsvpmailer_embedded_images( $mailq ) {\n\n\t// preg_match_all('/<img.+(cid:[^\"\\']+)[^>]+/',$mailq, $matches);\n\n\tpreg_match_all( '/cid:[^\"\\']+/', $mailq, $matches );\n\n\treturn $matches[0];\n\n\tforeach ( $matches[1] as $index => $cid ) {\n\n\t\t\t$img[] = $cid;\n\n\t}\n\n\tif ( empty( $img ) ) {\n\n\t\treturn;\n\t}\n\n\treturn $img;\n\n}\n\n\n\nfunction rsvpmaker_relay_save_attachment( $att, $file, $msgno, $mbox, $path, $urlpath, $strFileName, $strFileType ) {\n\n\t\tprintf( '<p>Check %s %s part number %s</p>', $strFileName, $strFileType, $file );\n\n\t\t$allowed = array( 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'pdf', 'jpg', 'jpeg', 'gif', 'png', 'svg', 'ics', 'ifb', 'txt' );\n\n\tif ( ! in_array( $strFileType, $allowed ) ) {\n\n\t\treturn $strFileName . ' (file type not supported: ' . $strFileType . ')';\n\t}\n\n\t\t$fileSize = $att->bytes;\n\n\t\t$fileContent = imap_fetchbody( $mbox, $msgno, $file );\n\n\t\t$ContentType = 'application/octetstream';\n\n\tif ( $strFileType == 'txt' ) {\n\n\t\t$ContentType = 'text/plain';\n\t}\n\n\tif ( ( $strFileType == 'ics' ) || ( $strFileType == 'ifb' ) ) {\n\n\t\t$ContentType = 'text/calendar';\n\t}\n\n\tif ( isset( $_GET['debug'] ) ) {\n\n\t\tprintf( '<p>File characteristics: %s %s %s</p>', $ContentType, $strFileName, $fileSize );\n\t}\n\n\t$strFileName = preg_replace('/[^\\.a-zA-Z0-9]/','_',$strFileName);\n\n\t$writepath = $path . $strFileName;\n\n\t$url = $urlpath . $strFileName;\n\n\tif ( substr( $ContentType, 0, 4 ) == 'text' ) {\n\n\t\t$content = imap_qprint( $fileContent );\n\n\t} else {\n\n\t\t$content = imap_base64( $fileContent );\n\n\t}\n\n\t file_put_contents( $writepath, $content );\n\n\tif ( isset( $_GET['debug'] ) ) {\n\n\t\tprintf( '<p>Writing to %s <a href=\"%s\" target=\"_blank\">%s</a></p>', $writepath, $url, $url );\n\t}\n\n\t return $url;\n\n}\n\nadd_filter( 'cron_schedules', 'rsvpmaker_relay_interval' );\n\nfunction rsvpmaker_relay_interval( $schedules ) {\n\n\t$schedules['minute'] = array(\n\n\t\t'interval' => 60,\n\n\t\t'display'  => esc_html__( 'Every Minute' ),\n\t);\n\n\t$schedules['doubleminute'] = array(\n\n\t\t'interval' => 120,\n\n\t\t'display'  => esc_html__( 'Every Two Minutes' ),\n\t);\n\n\treturn $schedules;\n\n}\n\nfunction rsvpmaker_relay_duplicate( $message_id ) {\n\tglobal $wpdb;\n\treturn $wpdb->get_var( \"SELECT post_id FROM $wpdb->postmeta WHERE meta_value='$message_id' \" );\n}\n\nfunction rsvpmaker_qemail ($mail, $recipients) {\n\tglobal $current_user;\n\tif(is_multisite()) // send through root blog\n\t\tswitch_to_blog(1);\n\tif(strpos($mail['html'],'<body')) {\n\t\tpreg_match('|<bod[^>]+>(.+)</body>|is',$mail['html'],$match);\n\t\tif(!empty($match[1])) {\n\t\t\t$_html = $mail['html'];\n\t\t\t$mail['html'] = $match[1];\t\n\t\t}\n\t}\n\t$qpost['post_content'] = $mail['html'];\n\t$qpost['post_title'] = $mail['subject'];\n\t$qpost['post_type'] = 'rsvpemail';\n\t$qpost['post_author'] = $current_user->ID;\n\t$qpost['post_status'] = 'draft';\n\t$from = $mail['from'];\n\t$fromname = $mail['fromname'];\n\n\tif(!empty($qpost['post_content']) && !empty($from))  \n\t\t$post_id = wp_insert_post($qpost);\n\n\tif($post_id) {\n\t\t//add_post_meta($post_id,'imap_message_id',$headerinfo->message_id);\n\t\tadd_post_meta($post_id,'rsvprelay_from',$from);\n\t\tforeach($recipients as $email)\n\t\t\tadd_post_meta($post_id,'rsvprelay_to',$email);\n\t\t//for debugging\n\t\t//add_post_meta($post_id,'imap_body',imap_body($mail,$n));\n\t\tif(empty($fromname))\n\t\t\t$fromname = $from;\n\t\tadd_post_meta($post_id,'rsvprelay_fromname',$fromname);\n\t\tif(!empty($_html))\n\t\t\tadd_post_meta($post_id,'_rsvpmail_html',$_html);\n\t\t$mail['html'] = 'hidden';\n\t\trsvpmaker_debug_log($mail,'rsvpmaker_qemail_mail_array');\n\t\trsvpmaker_debug_log($recipients,'rsvpmaker_qemail_recipients_added');\n\t}\n\trsvpmaker_debug_log($post_id,'rsvpmaker_qemail_insert_post_result');\n\tif(is_multisite())\n\t\trestore_current_blog();\n}\n\nfunction rsvpmaker_relay_log() {\n\tglobal $wpdb;\n\t$sql = \"SELECT * from $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE post_type='rsvpemail' AND meta_key LIKE 'rsvp%' ORDER BY ID DESC, meta_key LIMIT 0,500\";\n\t$results = $wpdb->get_results($sql);\n\tforeach($results as $row) {\n\t\tprintf('<p>%s<br><strong>%s</strong> %s</p>',$row->post_title,$row->meta_key,$row->meta_value);\n\t}\t\n}\n", "<?php\n\n// start customizable functions, can be overriden by adding a rsvpmaker-custom.php file to the plugins directory (one level up from rsvpmaker directory)\n\nif ( ! function_exists( 'my_events_menu' ) ) {\n\n\tfunction my_events_menu() {\n\n\t\tglobal $rsvp_options;\n\n\t\tif ( function_exists( 'do_blocks' ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tadd_meta_box( 'EventDatesBox', __( 'Event Options', 'rsvpmaker' ), 'draw_eventdates', 'rsvpmaker', 'normal', 'high' );\n\n\t\tif ( isset( $rsvp_options['additional_editors'] ) && $rsvp_options['additional_editors'] ) {\n\n\t\t\tadd_meta_box( 'ExtraEditorsBox', __( 'Additional Editors', 'rsvpmaker' ), 'additional_editors', 'rsvpmaker', 'normal', 'high' );\n\t\t}\n\n\t}\n}\n\nif ( ! function_exists( 'draw_eventdates' ) ) {\n\n\tfunction draw_eventdates() {\n\n\t\tglobal $post;\n\n\t\t$post_id = ( isset( $_GET['post_id'] ) ) ? (int) $_GET['post_id'] : 0;\n\t\t$post    = ( $post_id ) ? get_post( $post_id ) : null;\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $custom_fields;\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\t\t\techo '<pre>';\n\t\t\tprint_r( $post );\n\t\t\techo '</pre>';\n\t\t}\n\n\t\tif ( isset( $_GET['clone'] ) ) {\n\t\t\t$id            = (int) $_GET['clone'];\n\t\t\t$custom_fields = get_rsvpmaker_custom( $id );\n\t\t} elseif ( isset( $post->ID ) ) {\n\n\t\t\t$custom_fields = get_rsvpmaker_custom( $post->ID );\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvpmaker_special'][0] ) ) {\n\n\t\t\t$rsvpmaker_special = $custom_fields['_rsvpmaker_special'][0];\n\n\t\t\tif ( $rsvpmaker_special == 'Landing Page' ) {\n\n\t\t\t\t?>\n\n<p>This is a landing page for an RSVPMaker webinar.</p>\n\n<p><input type=\"radio\" name=\"_require_webinar_passcode\" value=\"<?php echo esc_attr( $custom_fields['_webinar_passcode'][0] ); ?>\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( isset( $custom_fields['_require_webinar_passcode'][0] ) && $custom_fields['_require_webinar_passcode'][0] ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo 'checked=\"checked\"';}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?>\n\t > Passcode required to view webinar</p>\n\n<p><input type=\"radio\" name=\"_require_webinar_passcode\" value=\"0\" \n\t\t\t\t<?php\n\t\t\t\tif ( ! isset( $custom_fields['_require_webinar_passcode'][0] ) || ! $custom_fields['_require_webinar_passcode'][0] ) {\n\t\t\t\t\techo 'checked=\"checked\"';}\n\t\t\t\t?>\n\t> No passcode required</p>\n\n\t\t\t\t<?php\n\n\t\t\t} else {\n\t\t\t\tdo_action( 'rsvpmaker_special_metabox', $rsvpmaker_special );\n\t\t\t}\n\n\t\t\treturn 'special';\n\n\t\t} elseif ( ( isset( $post->ID ) && rsvpmaker_is_template( $post->ID ) ) || isset( $_GET['new_template'] ) ) {\n\n\t\t\t?>\n\n<p><em><strong><?php esc_html_e( 'Event Template', 'rsvpmaker' ); ?>:</strong> <?php esc_html_e( 'This form is for entering generic / boilerplate information, not specific details for an event on a specific date. Groups that meet on a monthly basis can post their standard meeting schedule, location, and contact details to make entering the individual events easier. You can also post multiple future meetings using the generic template and update those event listings as needed when the event date grows closer.', 'rsvpmaker' ); ?></em></p>\n\n\t\t\t<?php\n\n\t\t\t$template = get_template_sked( $post_id );\n\n\t\t\ttemplate_schedule( $template );\n\n\t\t\t rsvp_time_options( $post->ID );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( isset( $custom_fields['_meet_recur'][0] ) ) {\n\n\t\t\t$t = (int) $custom_fields['_meet_recur'][0];\n\n\t\t\tif ( $post_id ) {\n\n\t\t\t\tprintf(\n\t\t\t\t\t'<p><a href=\"%s\">%s</a> | <a href=\"%s\">%s</a> | <a href=\"%s\">%s</a> | <a href=\"%s\">%s</a></p>',\n\t\t\t\t\tadmin_url( 'post.php?action=edit&post=' . $t ),\n\t\t\t\t\t__( 'Edit Template Content', 'rsvpmaker' ),\n\t\t\t\t\tadmin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=' . $t ),\n\t\t\t\t\t__( 'Edit Template Options', 'rsvpmaker' ),\n\t\t\t\t\tadmin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $t ),\n\t\t\t\t\t__( 'See Related Events', 'rsvpmaker' ),\n\t\t\t\t\tadmin_url(\n\t\t\t\t\t\t'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&apply_target=' . intval( $post->ID ) . '&apply_current=' . $t . '#applytemplate\n\n'\n\t\t\t\t\t),\n\t\t\t\t\t__( 'Switch Template', 'rsvpmaker' )\n\t\t\t\t);\n\t\t\t}\n\t\t} elseif ( isset( $post->ID ) ) {\n\n\t\t\tprintf(\n\t\t\t\t'<p><a href=\"%s\">%s</a></p>',\n\t\t\t\tadmin_url(\n\t\t\t\t\t'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&apply_target=' . intval( $post->ID ) . '#applytemplate\n\n'\n\t\t\t\t),\n\t\t\t\t__( 'Apply Template', 'rsvpmaker' )\n\t\t\t);\n\t\t}\n\t\t\n\t\tif(isset($post->ID))\n\t\t$event = get_rsvpmaker_event( $post->ID );\n\t\t$start = 0;\n\n\t\tif ( !empty($event) ) {\n\t\t\t$t = intval($event->ts_start);\n\t\t\t$end = intval($event->ts_end);\n\t\t\techo \"\\n<div class=\\\"event_dates\\\"> \\n\";\n\n\t\t\tif ( $rsvp_options['long_date'] ) {\n\t\t\t\techo utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\t\t\t}\n\n\t\t\t$dur = $event->display_type;\n\n\t\t\tif ( ( $dur != 'allday' ) && ! strpos( $dur, '|' ) ) {\n\n\t\t\t\techo rsvpmaker_date( ' ' . $rsvp_options['time_format'], $t );\n\n\t\t\t} elseif ( ( $dur == 'set' ) && $row['end_time'] ) {\n\n\t\t\t\techo ' to ' . rsvpmaker_date( $rsvp_options['time_format'], $end );\n\t\t\t}\n\t\t\trsvpmaker_date_option_event( $t, $end, $dur );\n\n\t\t\techo \"</div>\\n\";\n\t\t\treturn;\n\t\t} else {\n\n\t\t\techo '<p><em>' . __( 'You can enter dates and times in either text format or the numeric/database format.', 'rsvpmaker' ) . '</em> </p>';\n\n\t\t\t$t = time();\n\n\t\t}\n\n\t\tif ( isset( $_GET['t'] ) ) {\n\n\t\t\t$t = (int) $_GET['t'];\n\n\t\t\t$sked = get_template_sked( $t );\n\n\t\t\t$times = rsvpmaker_get_projected( $sked );\n\n\t\t\tforeach ( $times as $ts ) {\n\n\t\t\t\tif ( $ts > time() ) {\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trsvpmaker_date_option( $ts, 0, rsvpmaker_date( 'Y-m-d H:i:s', $ts ), $sked );\n\n\t\t\t$start = 1;\n\n\t\t} elseif ( $start == 0 ) {\n\n\t\t\t$start = 1;\n\n\t\t\t$date = ( isset( $_GET['add_date'] ) ) ? sanitize_text_field($_GET['add_date']) : 'today ' . $rsvp_options['defaulthour'] . ':' . $rsvp_options['defaultmin'] . ':00';\n\n\t\t\trsvpmaker_date_option( $date, 0, rsvpmaker_date( 'Y-m-d H:i:s', $t ) );\n\n\t\t}\n\n\t\tif ( ! isset( $_GET['t'] ) ) { // if this is based on a template, use the template defaults\n\n\t\t\trsvp_time_options( $post_id );\n\t\t}\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\techo '<pre>';\n\n\t\t\t// print_r($custom_fields);\n\n\t\t\techo '</pre>';\n\n\t\t}\n\n\t}\n} // end draw event dates\n\n\nif ( ! function_exists( 'template_schedule' ) ) {\n\n\tfunction template_schedule( $template ) {\n\n\t\tif ( ! is_array( $template ) ) {\n\n\t\t\t$template = unserialize( $template );\n\t\t}\n\n\t\tglobal $post;\n\n\t\tif ( ! isset( $post->ID ) ) {\n\n\t\t\t$post = (object) array( 'ID' => 0 );\n\t\t}\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\t// backward compatability\n\n\t\tif ( isset( $template['week'] ) && is_array( $template['week'] ) ) {\n\n\t\t\t$weeks = $template['week'];\n\n\t\t\t$dows = $template['dayofweek'];\n\n\t\t} else {\n\n\t\t\t$weeks = array();\n\n\t\t\t$dows = array();\n\n\t\t\t$weeks[0] = ( isset( $template['week'] ) ) ? $template['week'] : 0;\n\n\t\t\t$dows[0] = ( isset( $template['dayofweek'] ) ) ? $template['dayofweek'] : 0;\n\n\t\t}\n\n\t\t// default values\n\n\t\tif ( ! isset( $template['hour'] ) ) {\n\n\t\t\t$template['hour'] = 19;\n\n\t\t\t$template['minutes'] = '00';\n\n\t\t}\n\n\t\t$end_time = ( empty( $template['end_time'] ) ) ? '' : $template['end_time'];\n\n\t\tif ( $post->ID ) {\n\n\t\t\tprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . intval( $post->ID ) ), esc_html( __( 'View/add/update events based on this template', 'rsvpmaker' ) ) );\n\t\t}\n\n\t\tglobal $wpdb;\n\n\t\t$dayarray  = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ) );\n\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t\techo '<p>' . esc_html( __( 'Regular Schedule', 'rsvpmaker' ) ) . ':</p><table id=\"skedtable\"><tr><td>';\n\n\t\tif ( $weeks[0] == 0 ) {\n\t\t\t$weeks = array(); // clear out any other values\n\t\t\t$dows  = array();\n\t\t}\n\n\t\tif ( is_array( $weekarray ) ) {\n\n\t\t\tforeach ( $weekarray as $index => $label ) {\n\n\t\t\t\t$class = ( $index > 0 ) ? ' class=\"regular_sked\" ' : '';\n\n\t\t\t\t$checked = ( in_array( $index, $weeks ) || ( ( $index == 0 ) && empty( $weeks ) ) ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\tprintf( '<div><input type=\"checkbox\" name=\"sked[week][]\" value=\"%d\" id=\"wkcheck%d\" %s %s /> %s<div>', $index, $index, $checked, $class, esc_html( $label ) );\n\n\t\t\t}\n\t\t}\n\n\t\techo '</td><td id=\"daycolumn\">';\n\n\t\tif ( is_array( $dayarray ) ) {\n\n\t\t\tforeach ( $dayarray as $index => $label ) {\n\n\t\t\t\t$checked = ( is_array( $dows ) && ( in_array( $index, $dows ) ) ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\tprintf( '<div><input type=\"checkbox\" name=\"sked[dayofweek][]\" value=\"%d\" id=\"daycheck%d\" %s class=\"days\" /> %s<div>', $index, $index, $checked, esc_html( $label ) );\n\n\t\t\t}\n\t\t}\n\n\t\techo '</td><tr></table><div id=\"daymsg\"></div>';\n\n\t\t?>\n\n<script>\n\njQuery(function () {\n\n\tjQuery('#wkcheck0').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#wkcheck1').prop('checked', false);\n\n\t\tjQuery('#wkcheck2').prop('checked', false);\n\n\t\tjQuery('#wkcheck3').prop('checked', false);\n\n\t\tjQuery('#wkcheck4').prop('checked', false);\n\n\t\tjQuery('#wkcheck5').prop('checked', false);\n\n\t\tjQuery('#wkcheck6').prop('checked', false);\n\n\t\tjQuery('#daycheck0').prop('checked', false);\n\n\t\tjQuery('#daycheck1').prop('checked', false);\n\n\t\tjQuery('#daycheck2').prop('checked', false);\n\n\t\tjQuery('#daycheck3').prop('checked', false);\n\n\t\tjQuery('#daycheck4').prop('checked', false);\n\n\t\tjQuery('#daycheck5').prop('checked', false);\n\n\t\tjQuery('#daycheck6').prop('checked', false);\n\n\t\tjQuery('#daycolumn').css('border', 'none');\t\n\n\t\tjQuery('#daymsg').html('');\n\n\t\t}\n\n\t});\n\n\tjQuery('#wkcheck6').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#wkcheck0').prop('checked', false);\n\n\t\tjQuery('#wkcheck1').prop('checked', false);\n\n\t\tjQuery('#wkcheck2').prop('checked', false);\n\n\t\tjQuery('#wkcheck3').prop('checked', false);\n\n\t\tjQuery('#wkcheck4').prop('checked', false);\n\n\t\tjQuery('#wkcheck5').prop('checked', false);\n\n\t\t}\n\n\t});\n\n\tjQuery('.regular_sked').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#wkcheck0').prop('checked', false);\n\n\t\tif(!jQuery('#daycheck0').prop('checked') && !jQuery('#daycheck1').prop('checked') && !jQuery('#daycheck2').prop('checked') && !jQuery('#daycheck3').prop('checked') && !jQuery('#daycheck4').prop('checked') && !jQuery('#daycheck5').prop('checked') && !jQuery('#daycheck6').prop('checked'))\n\n\t\t\t{\n\n\t\t\t\tjQuery('#daycolumn').css('border', 'thin solid red');\t\n\n\t\t\t\tjQuery('#skedtable td').css('padding', '5px');\n\n\t\t\t\tjQuery('#daymsg').html('<em><?php esc_html_e( 'choose one or more days of the week', 'rsvpmaker' ); ?></em>');\n\n\t\t\t}\n\n\t\t}\n\n\t});\n\n\tjQuery('.days').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#daycolumn').css('border', 'none');\t\n\n\t\tjQuery('#daymsg').html('');\n\n\t\t}\n\n\t});\n\n\n\n});\n\n</script>\n\n\n\n<p><?php esc_html_e( 'Stop date (optional)', 'rsvpmaker' ); ?>: <input type=\"text\" name=\"sked[stop]\" value=\"<?php\n\t\t\t\tif ( isset( $template['stop'] ) ) {\n\t\t\t\t\techo esc_attr($template['stop']);}\n\t\t\t\t?>\" placeholder=\"<?php\n\t\tesc_html_e( 'example', 'rsvpmaker' );\n\t\techo ': ' . date( 'Y' ) . '-12-31';\n\t\t?>\" /> <em>(<?php esc_html_e( 'format', 'rsvpmaker' ); ?>: \"YYYY-mm-dd\" or \"+6 month\" or \"+1 year\")</em></p>\n\t\t<?php\n\t\t$auto = ( ( isset( $_GET['new_template'] ) && ! empty( $rsvp_options['autorenew'] ) ) || get_post_meta( $post->ID, 'rsvpautorenew', true ) );\n\t\t?>\n<p><input type=\"checkbox\" name=\"rsvpautorenew\" id=\"rsvpautorenew\" \n\t\t<?php\n\t\tif ( $auto ) {\n\t\t\techo 'checked=\"checked\"';}\n\t\t?>\n /> <?php esc_html_e( 'Automatically add dates according to this schedule', 'rsvpmaker' ); ?></em></p>\n\n\t\t<?php\n\n\t\t$h = $template['hour'];\n\n\t\t$minutes = $template['minutes'];\n\n\t\t$duration = isset( $template['duration'] ) ? $template['duration'] : '';\n\n\t\t$displayminutes = $displayhour = '';\n\n\t\t?>\n<div><label>Time</label> <input type=\"time\" id=\"sql-time\" name=\"sked[time]\" value=\"<?php echo esc_attr( $h . ':' . $minutes ); ?>\" > </div>\n<div id=\"template-time-error\"></div>\n\t\t<?php\n\n\t\trsvpmaker_duration_select( 'sked[duration]', $template, $h . ':' . $minutes, 0 );\n\n\t}\n} // end template schedule\n\n\nfunction rsvpmaker_sanitize_array_vars($array) {\n\tif(!is_array($array))\n\t\treturn false;\n\tforeach($array as $index => $var) {\n\t\tif(is_array($var))\n\t\t\t$var = array_map('sanitize_text_field',$var);\n\t\telse\n\t\t\t$var = sanitize_text_field($var);\n\t\t$array[$index] = $var;\n\t}\n\treturn $array;\n}\n\nfunction save_rsvp_template_meta( $post_id ) {\n\n\tif ( ! isset( $_POST['sked'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\treturn;\n\t}\n\n\t// we only care about saving template data\n\n\tglobal $wpdb;\n\n\tglobal $post;\n\n\tglobal $current_user;\n\n\tif ( $parent_id = wp_is_post_revision( $post_id ) ) {\n\n\t\t$post_id = $parent_id;\n\n\t}\n\n\t$sked = array_map('rsvpmaker_sanitize_array_vars',$_POST['sked']);\n\n\tif ( $sked['time'] ) {\n\t\t\t$p               = explode( ':', $sked['time'] );\n\t\t\t$sked['hour']    = $p[0];\n\t\t\t$sked['minutes'] = $p[1];\n\t}\n\n\tif ( empty( $sked['dayofweek'] ) ) {\n\t\t$sked['dayofweek'][0] = 9;\n\t}\n\n\t$sked['duration'] = $sked['end_time_type'] = sanitize_text_field( $_POST['end_time_type'] );\n\t$sked['end']      = $sked['rsvp_sql_end'] = sanitize_text_field( $_POST['rsvp_sql_end'] );\n\n\tnew_template_schedule( $post_id, $sked );\n\n\tif ( isset( $_POST['rsvpautorenew'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\tupdate_post_meta( $post_id, 'rsvpautorenew', 1 );\n\t} else {\n\t\tdelete_post_meta( $post_id, 'rsvpautorenew' );\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpmaker_roles' ) ) {\n\n\tfunction rsvpmaker_roles() {\n\n\t\t// by default, capabilities for events are the same as for blog posts\n\n\t\tglobal $wp_roles;\n\n\t\tif ( ! isset( $wp_roles ) ) {\n\n\t\t\t$wp_roles = new WP_Roles();\n\t\t}\n\n\t\t// subscribers should not be able to edit\n\t\t$wp_roles->remove_cap( 'subscriber', 'edit_rsvpmakers' );\n\n\t\t// if roles persist from previous session, return\n\t\tif ( ! empty( $wp_roles->roles['administrator']['capabilities']['edit_rsvpmakers'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_array( $wp_roles->roles ) ) {\n\n\t\t\tforeach ( $wp_roles->roles as $role => $rolearray ) {\n\n\t\t\t\tforeach ( $rolearray['capabilities'] as $cap => $flag ) {\n\n\t\t\t\t\tif ( strpos( $cap, 'post' ) ) {\n\t\t\t\t\t\t$fbcap = str_replace( 'post', 'rsvpmaker', $cap );\n\t\t\t\t\t\t$wp_roles->add_cap( $role, $fbcap );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n\n\nfunction get_confirmation_options( $post_id = 0, $documents = array() ) {\n\n\tglobal $post;\n\n\tif ( isset( $post->ID ) ) {\n\n\t\t$post_id = $post->ID;\n\t}\n\n\t$output = '';\n\n\t$confirm = rsvp_get_confirm( $post_id, true );\n\n\t$output = sprintf( '<h3 id=\"confirmation\">%s</h3>', __( 'Confirmation Message', 'rsvpmaker' ) );\n\n\t$output .= $confirm->post_content;\n\n\tforeach ( $documents as $d ) {\n\n\t\t$id = $d['id'];\n\n\t\tif ( ( $id == 'edit_confirm' ) || ( $id == 'customize_confirmation' ) ) {\n\n\t\t\t$output .= sprintf( '<p><a href=\"%s\">Edit: %s</a></p>', esc_attr( $d['href'] ), esc_html( $d['title'] ) );\n\t\t}\n\t}\n\n\tif ( ( empty( $_GET['page'] ) || $_GET['page'] != 'rsvp_reminders' ) ) {\n\t\t$output              .= sprintf( '<p><a href=\"%s\" target=\"_blank\">Create / Edit Reminders</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=' . $post_id ) );\n\t\t$payment_confirmation = (int) get_post_meta( $post_id, 'payment_confirmation_message', true );\n\t\tif ( empty( $payment_confirmation ) || empty( get_post( $payment_confirmation ) ) ) {\n\t\t\t\t$add_payment_conf = admin_url( 'edit.php?title=Payment%20Confirmation&rsvpcz=payment_confirmation_message&post_id=' . $post_id );\n\t\t\t\t$output          .= sprintf( '<p><a href=\"%s\">%s</a></p>', $add_payment_conf, __( 'Add Payment Confirmation Message' ) );\n\t\t} else {\n\t\t\t$output .= sprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'post.php?post=' . $payment_confirmation . '&action=edit' ), __( 'Edit Payment Confirmation Message' ) );\n\t\t}\n\t}\n\n\t$templates = get_rsvpmaker_email_template();\n\n\t$chosen = (int) get_post_meta( $post_id, 'rsvp_tx_template', true );\n\n\tif ( ! $chosen ) {\n\n\t\t$chosen = (int) get_option( 'rsvpmaker_tx_template' );\n\t}\n\n\t$choose_template = '';\n\n\tif ( $templates ) {\n\n\t\tforeach ( $templates as $index => $template ) {\n\n\t\t\tif ( $index == 0 ) {\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$s = ( $index == $chosen ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t$choose_template .= sprintf( '<option value=\"%d\" %s>%s</option>', $index, $s, $template['slug'] );\n\n\t\t}\n\t}\n\n\t$output .= sprintf( '<p>%s: <select name=\"rsvp_tx_template\">%s</select></p><input type=\"hidden\" name=\"rsvp_tx_post_id\" value=\"%d\">', __( 'Confirmation Email Template' ), $choose_template, $post_id );\n\n\t$output = '<div style=\"max-width: 800px\">' . $output . '</div>';\n\n\treturn $output;\n\n}\n\n\n\nif ( ! function_exists( 'GetRSVPAdminForm' ) ) {\n\n\tfunction GetRSVPAdminForm( $post_id ) {\n\t\tglobal $custom_fields;\n\n\t\tglobal $post;\n\n\t\tglobal $rsvp_options;\n\n\t\t$rsvp_on = ( isset( $custom_fields['_rsvp_on'][0] ) && ( ! $custom_fields['_rsvp_on'][0] ) ) ? 0 : 1;\n\n\t\t$include_event = $custom_fields['_rsvp_confirmation_include_event'][0];\n\n\t\t$after_payment = $custom_fields['_rsvp_confirmation_include_event'][0];\n\n\t\t$login_required = $custom_fields['_rsvp_login_required'][0];\n\n\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\n\t\t$rsvp_instructions = $custom_fields['_rsvp_instructions'][0];\n\n\t\t$rsvp_form = $custom_fields['_rsvp_form'][0];\n\n\t\t$rsvp_max = $custom_fields['_rsvp_max'][0];\n\n\t\t$rsvp_count = $custom_fields['_rsvp_count'][0]; // else $rsvp_count = 1;\n\n\t\t$rsvp_show_attendees = $custom_fields['_rsvp_show_attendees'][0];\n\n\t\t$rsvp_captcha = $custom_fields['_rsvp_captcha'][0];\n\n\t\t$rsvp_count_party = $custom_fields['_rsvp_count_party'][0];\n\n\t\t$rsvp_yesno = $custom_fields['_rsvp_yesno'][0];\n\n\t\tif ( isset( $custom_fields['_rsvp_reminder'][0] ) && $custom_fields['_rsvp_reminder'][0] ) {\n\n\t\t\t$t = rsvpmaker_strtotime( $custom_fields['_rsvp_reminder'][0] );\n\n\t\t\t$remindyear = date( 'Y', $t );\n\n\t\t\tif ( $remindyear == 1970 ) {\n\n\t\t\t\t$remindyear = '';\n\n\t\t\t} else {\n\n\t\t\t\t$remindmonth = date( 'm', $t );\n\n\t\t\t\t$remindday = rsvpmaker_date( 'd', $t );\n\n\t\t\t\t$remindtime = rsvpmaker_date( 'H:i:s', $t );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_deadline'][0] ) && $custom_fields['_rsvp_deadline'][0] ) {\n\n\t\t\t$t = (int) $custom_fields['_rsvp_deadline'][0];\n\n\t\t\t$deadyear = date( 'Y', $t );\n\n\t\t\t$deadmonth = rsvpmaker_date( 'm', $t );\n\n\t\t\t$deadday = rsvpmaker_date( 'd', $t );\n\n\t\t\t$deadtime = rsvpmaker_date( 'H:i:00', $t );\n\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_start'][0] ) && $custom_fields['_rsvp_start'][0] ) {\n\n\t\t\t$t = (int) $custom_fields['_rsvp_start'][0];\n\n\t\t\t$startyear = date( 'Y', $t );\n\n\t\t\t$startmonth = rsvpmaker_date( 'm', $t );\n\n\t\t\t$startday = rsvpmaker_date( 'd', $t );\n\n\t\t\t$starttime = rsvpmaker_date( 'H:00:00', $t );\n\n\t\t}\n\n\t\t?>\n\n\t\t<?php\n\n\t\techo '</p>';\n\n\t\tif ( empty( $deadtime ) ) {\n\t\t\t$deadtime = '23:59:59';\n\t\t}\n\n\t\tif ( empty( $starttime ) ) {\n\t\t\t$starttime = '00:00:00';\n\t\t}\n\n\t\tif ( empty( $remindtime ) ) {\n\t\t\t$remindtime = '00:00:00';\n\t\t}\n\n\t\t?>\n\n<p>\n\n\t\t<?php esc_html_e( 'Collect RSVPs', 'rsvpmaker' ); ?>\n\n  <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_on ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php esc_html_e( 'YES', 'rsvpmaker' ); ?> <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"0\" \n\t\t\t\t  <?php\n\t\t\t\t\tif ( ! $rsvp_on ) {\n\t\t\t\t\t\techo 'checked=\"checked\" ';}\n\t\t\t\t\t?>\n\t\t\t />\n\n\t\t<?php esc_html_e( 'NO', 'rsvpmaker' ); ?> </p>\n\n<div id=\"rsvpdetails\">\n\n  <input type=\"checkbox\" name=\"setrsvp[login_required]\" id=\"setrsvp[login_required]\" value=\"1\" \n\t\t<?php\n\t\tif ( $login_required ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( 'Login required', 'rsvpmaker' ); ?> <?php\n\t\tif ( ! $rsvp_on ) {\n\t\t\techo ' <strong style=\"color: red;\">' . __( 'Check to activate', 'rsvpmaker' ) . '</strong> ';}\n\t\t?>\n\n  <input type=\"checkbox\" name=\"setrsvp[yesno]\" id=\"setrsvp[yesno]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_yesno ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( 'Show Yes/No Radio Buttons', 'rsvpmaker' ); ?> \n\n<br />  <input type=\"radio\" name=\"setrsvp[show_attendees]\" id=\"setrsvp[show_attendees]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_show_attendees == 1 ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t />\n\n\t\t<?php echo __( ' Display attendee names and content of note field publicly', 'rsvpmaker' ); ?>\n\n <input type=\"radio\" name=\"setrsvp[show_attendees]\" id=\"setrsvp[show_attendees]\" value=\"2\" \n\t\t<?php\n\t\tif ( $rsvp_show_attendees == 2 ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( ' Display attendees for logged in users', 'rsvpmaker' ); ?>\n\n <input type=\"radio\" name=\"setrsvp[show_attendees]\" id=\"setrsvp[show_attendees]\" value=\"0\" \n\t\t<?php\n\t\tif ( ! $rsvp_show_attendees ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( ' Do not display', 'rsvpmaker' ); ?>\n\n\t\t\n<br />  <input type=\"checkbox\" name=\"setrsvp[captcha]\" id=\"setrsvp[captcha]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_captcha ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t />\n\n\t\t<?php echo __( ' Include CAPTCHA challenge', 'rsvpmaker' ); ?> <?php\n\t\tif ( ! $rsvp_captcha ) {\n\t\t\techo ' <strong style=\"color: red;\">' . __( 'Check to activate', 'rsvpmaker' ) . '</strong> ';}\n\t\t?>\n\n</p>\n\n<div id=\"rsvpoptions\">\n\n\t\t<?php echo __( 'Email Address for Notifications', 'rsvpmaker' ); ?>: <input id=\"setrsvp[to]\" name=\"setrsvp[to]\" type=\"text\" value=\"<?php echo esc_attr( $rsvp_to ); ?>\"><br />\n\n<br /><?php echo __( 'Instructions for User', 'rsvpmaker' ); ?>:<br />\n\n<textarea id=\"setrsvp[instructions]\" name=\"setrsvp[instructions]\" cols=\"80\" style=\"max-width: 95%;\"><?php echo esc_attr( $rsvp_instructions ); ?></textarea>\n\n<br />\n\n  <input type=\"checkbox\" name=\"setrsvp[rsvpmaker_send_confirmation_email]\" id=\"rsvpmaker_send_confirmation_email\" value=\"1\" \n\t\t<?php\n\t\tif ( ! isset( $custom_fields['_rsvp_rsvpmaker_send_confirmation_email'][0] ) || $custom_fields['_rsvp_rsvpmaker_send_confirmation_email'][0] ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > <?php esc_html_e( 'Send confirmation emails', 'rsvpmaker' ); ?>\n\n  <input type=\"checkbox\" name=\"setrsvp[confirmation_after_payment]\" id=\"rsvpmaker_send_confirmation_email\" value=\"1\" \n\t\t<?php\n\t\tif ( ! isset( $custom_fields['_rsvp_confirmation_after_payment'][0] ) || $custom_fields['_rsvp_confirmation_after_payment'][0] ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > <?php esc_html_e( 'Send confirmation AFTER payment', 'rsvpmaker' ); ?>\n\n  <input type=\"checkbox\" name=\"setrsvp[confirmation_include_event]\" id=\"rsvp_confirmation_include_event\"  value=\"1\" \n\t\t<?php\n\t\tif ( $include_event ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > <?php esc_html_e( 'Include event listing with confirmation and reminders', 'rsvpmaker' ); ?>\n\n\t\t<?php\n\t\techo get_confirmation_options( $post->ID, get_related_documents() );\n\n\t\tif ( empty( $custom_fields['_webinar_landing_page_id'][0] ) || isset( $_GET['youtube'] ) ) {\n\n\t\t\techo '<br /><strong>' . __( 'Webinar Setup', 'rsvpmaker' ) . '</strong><br />YouTube Live: <input type=\"text\" name=\"youtube_live\" /> <input type=\"checkbox\" name=\"webinar_other\" value=\"1\" /> ' . __( 'Other webinar', 'rsvpmaker' ) . ' <input type=\"checkbox\" name=\"youtube_require_passcode\" value=\"1\" /> ' . __( 'Require passcode to view', 'rsvpmaker' ) . '<br /><em>' . __( 'If your event is a webinar, entering a YouTube Live url or checking &quot;Other webinar&quot; will create a landing page, plus suggested cofirmation and reminder messages to get you started. For YouTube Live, RSVPMaker adds the codes for the video player and chat.', 'rsvpmaker' ) . '.</em>';\n\t\t}\n\n\t\t?>\n\n<br /><br /><strong><?php echo __( 'Special Options', 'rsvpmaker' ); ?></strong>\n<br /><em><?php esc_html_e( 'By default, RSVP registration opens when the event is published and ends at the start time of the event. The options below allow you to specify when registration shold open and set an earlier deadline for RSVPs to close (or keep RSVPs open after the start of the event).', 'rsvpmaker' ); ?></em>\n\n<table>\n\n\t\t<?php\n\n\t\tif ( rsvpmaker_is_template() ) {\n\n\t\t\t$deadlinedaysbefore = '';\n\n\t\t\tfor ( $i = 0; $i < 31; $i++ ) {\n\n\t\t\t\t$s = ( isset( $custom_fields['_rsvp_deadline_daysbefore'] ) && ( $custom_fields['_rsvp_deadline_daysbefore'][0] == $i ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$deadlinedaysbefore .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'days before', 'rsvpmaker' ) );\n\n\t\t\t}\n\n\t\t\t$regdays = '';\n\n\t\t\tfor ( $i = 0; $i < 181; $i++ ) {\n\n\t\t\t\t$s = ( isset( $custom_fields['_rsvp_reg_daysbefore'] ) && ( $custom_fields['_rsvp_reg_daysbefore'][0] == $i ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$regdays .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'days before', 'rsvpmaker' ) );\n\n\t\t\t}\n\n\t\t\t$deadlinehours    = '';\n\t\t\t$currentdeadhours = ( empty( $custom_fields['_rsvp_deadline_hours'][0] ) ) ? 0 : (int) $custom_fields['_rsvp_deadline_hours'][0];\n\t\t\tfor ( $i = -12; $i < 0; $i++ ) {\n\t\t\t\t$dhour          = abs( $i );\n\t\t\t\t$s              = ( $currentdeadhours == $i ) ? ' selected=\"selected\" ' : '';\n\t\t\t\t$deadlinehours .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'hours after', 'rsvpmaker' ) );\n\t\t\t}\n\n\t\t\tfor ( $i = 0; $i < 24; $i++ ) {\n\t\t\t\t$s              = ( $currentdeadhours == $i ) ? ' selected=\"selected\" ' : '';\n\t\t\t\t$deadlinehours .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'hours before', 'rsvpmaker' ) );\n\t\t\t}\n\n\t\t\t$reghours = '';\n\n\t\t\tfor ( $i = 0; $i < 24; $i++ ) {\n\n\t\t\t\t$s = ( isset( $custom_fields['_rsvp_reg_hours'] ) && ( $custom_fields['_rsvp_reg_hours'][0] == $i ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$reghours .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'hours before', 'rsvpmaker' ) );\n\n\t\t\t}\n\n\t\t\tprintf( '<tr><td>%s</td><td> <select name=\"setrsvp[deadline_daysbefore]\">%s</select> <select name=\"setrsvp[deadline_hours]\">%s</select>  </td></tr>', __( 'Deadline (optional)', 'rsvpmaker' ), $deadlinedaysbefore, $deadlinehours );\n\n\t\t\tprintf( '<tr><td>%s</td><td> <select name=\"setrsvp[reg_daysbefore]\">%s</select> <select name=\"setrsvp[reg_hours]\">%s</select></td></tr>', __( 'Registration Starts (optional)', 'rsvpmaker' ), $regdays, $reghours );\n\n\t\t} else {\n\n\t\t\t?>\n\n<tr><td><?php echo __( 'Deadline (optional)', 'rsvpmaker' ) . '</td><td> ' . __( 'Month', 'rsvpmaker' ); ?>: <input type=\"text\" name=\"deadmonth\" id=\"deadmonth\" value=\"<?php \nif ( isset( $deadmonth ) ) {echo esc_attr($deadmonth);}?>\" size=\"2\" /> <?php echo __( 'Day', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"deadday\" id=\"deadday\" value=\"<?php\nif ( isset( $deadday ) ) {\n\techo esc_attr($deadday);}\n?>\" size=\"2\" /> <?php echo __( 'Year', 'rsvpmaker' ); ?>: \n\n<input type=\"text\" name=\"deadyear\" id=\"deadyear\" value=\"<?php\n\t\t\tif ( isset( $deadyear ) ) {\n\t\t\t\techo esc_attr($deadyear);}\n\t\t\t?>\" size=\"4\" /> \n<?php rsvptimes( $deadtime, 'deadtime' ); ?> </td></tr>\n\n<tr><td><?php echo __( 'Registration Starts (optional)', 'rsvpmaker' ) . '</td><td>' . __( 'Month', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"startmonth\" id=\"startmonth\" value=\"<?php\n\t\t\t\t\tif ( isset( $startmonth ) ) {\n\t\t\t\t\t\techo esc_attr($startmonth);}\n\t\t\t\t\t?>\" size=\"2\" /> <?php echo __( 'Day', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"startday\" id=\"startday\" value=\"<?php\nif ( isset( $startday ) ) {\n\techo esc_attr($startday);}\n?>\" size=\"2\" /> <?php echo __( 'Year', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"startyear\" id=\"startyear\" value=\"<?php\n\t\t\tif ( isset( $startyear ) ) {\n\t\t\t\techo esc_attr($startyear);}\n\t\t\t?>\" size=\"4\" /> <?php rsvptimes( $starttime, 'starttime' ); ?></td></tr>\n\n\t\t\t<?php\n\n\t\t}//end not template\n\n\t\tif ( ! empty( $remindday ) ) { // only show if this was previously set\n\n\t\t\t?>\n\n<tr><td><?php echo __( 'Reminder (optional)', 'rsvpmaker' ) . '</td><td>' . __( 'Month', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"remindmonth\" id=\"remindmonth\" value=\"<?php\n\t\t\t\t\tif ( isset( $remindmonth ) ) {\n\t\t\t\t\t\techo esc_attr( $remindmonth );}\n\t\t\t\t\t?>\" size=\"2\" /> <?php echo __( 'Day', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"remindday\" id=\"remindday\" value=\"<?php\n\t\t\tif ( isset( $remindday ) ) {\n\t\t\t\techo esc_attr( $remindday );}\n\t\t\t?>\" size=\"2\" /> <?php echo __( 'Year', 'rsvpmaker' ); ?>: \n\n<input type=\"text\" name=\"remindyear\" id=\"remindyear\" value=\"<?php\nif ( isset( $remindyear ) ) {\n\techo esc_attr( $remindyear );}\n?>\" size=\"4\" /> <?php rsvptimes( $remindtime, 'remindtime' ); ?></td></tr>\n\n<?php\n\n\t\t}\n\n\t\t?>\n</table>\n\n<br /><?php echo __( 'Show RSVP Count', 'rsvpmaker' ); ?> \n<input type=\"checkbox\" name=\"setrsvp[count]\" id=\"setrsvp[count]\" value=\"1\" <?php\n\t\t\t\t\tif ( isset( $rsvp_count ) && $rsvp_count ) {\n\t\t\t\t\t\techo ' checked=\"checked\" ';}\n\t\t\t\t\t?>\n\t /> \n\n<br /><?php echo __( 'Maximum participants', 'rsvpmaker' ); ?> \n<input type=\"text\" name=\"setrsvp[max]\" id=\"setrsvp[max]\" value=\"<?php\n\t\t\t\t\tif ( isset( $rsvp_max ) ) {\n\t\t\t\t\t\techo esc_attr( $rsvp_max );}\n\t\t\t\t\t?>\" size=\"4\" /> (<?php echo __( '0 for none specified', 'rsvpmaker' ); ?>)\n\n<br /><?php echo __( 'Time Slots', 'rsvpmaker' ); ?>:\n\n<select name=\"setrsvp[timeslots]\" id=\"setrsvp[timeslots]\">\n\n<option value=\"0\">None</option>\n\n<option value=\"0:30\" \n\t\t<?php\n\t\tif ( isset( $custom_fields['_rsvp_timeslots'][0] ) && ( $custom_fields['_rsvp_timeslots'][0] == '0:30' ) ) {\n\t\t\techo ' selected = \"selected\" ';}\n\t\t?>\n\t >30 minutes</option>\n\n\t\t<?php\n\n\t\t$tslots = (int) $custom_fields['_rsvp_timeslots'][0];\n\n\t\tfor ( $i = 1; $i < 13; $i++ ) {\n\n\t\t\t$selected = ( $i == $tslots ) ? ' selected = \"selected\" ' : '';\n\n\t\t\techo '<option value=\"' . $i . '\" ' . $selected . \">$i-hour slots</option>\";\n\n\t\t};\n\t\t?>\n\n</select>\n\n<br /><em><?php echo __( 'Used for volunteer shift signups. Duration must also be set.', 'rsvpmaker' ); ?></em>\n\n\t\t<?php\n\n\t\tif ( is_numeric( $rsvp_form ) ) {\n\n\t\t\tif ( ! empty( $_POST['reset_form'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t\t\t$rsvp_form = (int) $_POST['reset_form'];\n\t\t\t\tupdate_post_meta( $post->ID, '_rsvp_form', $rsvp_form );\n\t\t\t}\n\n\t\t\t$fpost = get_post( $rsvp_form );\n\n\t\t\t$edit = admin_url( 'post.php?action=edit&post=' . $fpost->ID . '&back=' . $post_id );\n\n\t\t\t$customize = admin_url( '?post_id=' . $post->ID . '&customize_form=' . $fpost->ID );\n\n\t\t\techo '<h3 id=\"rsvpform-section\">' . __( 'RSVP Form', 'rsvpmaker' ) . '</h3>';\n\n\t\t\t$guest = ( strpos( $fpost->post_content, 'rsvpmaker-guests' ) ) ? 'Yes' : 'No';\n\n\t\t\t$note = ( strpos( $fpost->post_content, 'name=\"note\"' ) || strpos( $fpost->post_content, 'formnote' ) ) ? 'Yes' : 'No';\n\n\t\t\tpreg_match_all( '/\\[([A-Za-z0_9_]+)/', $fpost->post_content, $matches );\n\n\t\t\tif ( ! empty( $matches ) ) {\n\n\t\t\t\tforeach ( $matches[1] as $match ) {\n\n\t\t\t\t\t$fields[ $match ] = $match;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpreg_match_all( '/\"slug\":\"([^\"]+)/', $fpost->post_content, $matches );\n\n\t\t\tif ( ! empty( $matches ) ) {\n\n\t\t\t\tforeach ( $matches[1] as $match ) {\n\n\t\t\t\t\t$fields[ $match ] = $match;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$merged_fields = ( empty( $fields ) ) ? '' : implode( ',', $fields );\n\n\t\t\tprintf( '<div>Fields: %s<br />Guests: %s<br />Note field: %s</div>', $merged_fields, $guest, $note );\n\n\t\t\tif ( current_user_can( 'edit_post', $fpost->ID ) ) {\n\n\t\t\t\tif ( $fpost->post_parent == 0 ) {\n\n\t\t\t\t\tprintf( '<div id=\"editconfirmation\"><a href=\"%s\" target=\"_blank\">Edit</a> (default from Settings)</div><div><a href=\"%s\" target=\"_blank\">Customize</a></div>', $edit, $customize );\n\n\t\t\t\t} elseif ( $fpost->post_parent != $post->ID ) {\n\n\t\t\t\t\tprintf( '<div id=\"editconfirmation\"><a href=\"%s\" target=\"_blank\">Edit</a> (inherited from Template)</div><div><a href=\"%s\" target=\"_blank\">Customize</a></div>', $edit, $customize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprintf( '<div id=\"editconfirmation\"><a href=\"%s\" target=\"_blank\">Edit</a></div>', $edit );\n\n\t\t\t\t\tprintf( '<div><input type=\"checkbox\" name=\"reset_form\" value=\"%d\" /> Reset to default form', intval( $rsvp_options['rsvp_form'] ) );\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprintf( '<div><a href=\"%s\" target=\"_blank\">Customize</a></div>', $customize );\n\t\t\t}\n\t\t} else {\n\n\t\t\t?>\n\n<br /><?php echo __( 'RSVP Form', 'rsvpmaker' ); ?> (<a href=\"#\" id=\"enlarge\">Enlarge</a>):<br />\n\n<textarea id=\"rsvpform\" name=\"setrsvp[form]\" cols=\"120\" rows=\"5\" style=\"max-width: 95%;\">\n\t\t\t<?php\n\t\t\tif ( isset( $rsvp_form ) ) {\n\t\t\t\techo htmlentities( $rsvp_form );}\n\t\t\t?>\n\t</textarea>\n\n\t\t\t<?php rsvp_form_setup_form( $rsvp_form ); ?>\n\n<div>\n\n <button id=\"create-form\">Generate form</button>\n\n</div>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\t?>\n\n<h3>Payment Gateway</h3>\n\n\t\t<?php\n\n\t\t$gateway_options = get_rsvpmaker_payment_options();\n\n\t\t$gateway = get_rsvpmaker_payment_gateway();\n\n\t\t$o = '';\n\n\t\tif ( is_array( $gateway_options ) ) {\n\n\t\t\tforeach ( $gateway_options as $gateway_option ) {\n\n\t\t\t\t$s = ( $gateway == $gateway_option ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$o .= sprintf( '<option %s value=\"%s\">%s</option>', $s, $gateway_option, $gateway_option );\n\n\t\t\t}\n\t\t}\n\n\t\tprintf( '<p>Gateway: <select name=\"payment_gateway\">%s</select></p>', $o );\n\n\t\tif ( ( class_exists( 'Stripe_Checkout_Functions' ) || ( ! empty( $rsvp_options['rsvpmaker_stripe_sk'] ) ) ) && empty( $rsvp_options['stripe'] ) && ! empty( $rsvp_options['paypal_config'] ) ) {\n\n\t\t\t$s = ( ! empty( $custom_fields['_rsvp_stripe'][0] ) ) ? 'checked=\"checked\"' : '';\n\n\t\t\techo '<p><input type=\"checkbox\" name=\"setrsvp[stripe]\" value=\"1\" ' . $s . ' /> ' . __( 'use RSVPMakerStripe instead of PayPal', 'rsvpmaker' ) . '</p>';\n\n\t\t}\n\n\t\t?>\n\n<p><strong><?php echo __( 'Pricing', 'rsvpmaker' ); ?></strong></p>\n\n<p><?php echo __( 'You can set a different price for members vs. non-members, adults vs. children, etc.', 'rsvpmaker' ); ?></p>\n\n<p><input type=\"radio\" name=\"setrsvp[count_party]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_count_party ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > Multiply price times size of party\n\n<br /><input type=\"radio\" name=\"setrsvp[count_party]\" value=\"0\" \n\t\t<?php\n\t\tif ( ! $rsvp_count_party ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > Let user specify number of admissions per category\n\n</p>\n\n\t\t<?php\n\t\techo '<p>' . __( 'Optionally, you can add a time limit on specific prices, if for example you are offering \"early bird\" pricing on registration, after which the price goes up. Enter a full date and time. Example:', 'rsvpmaker' ) . ' ' . date( 'Y-m-d' ) . '  23:59:00 or ' . date( 'F j, Y' ) . ' 11:59 pm ' . __( 'for midnight tonight', 'rsvpmaker' );\n\n\t\tif ( $rsvp_count_party ) {\n\t\t\tprintf( '<p>%s</p>', __( 'You can also specify fields that should not be displayed depending on price selections. Example: <em>The meal options at a conference should be disabled for attendees who choose \"workshop only\" pricing, or the dinner options should be disabled for those who select the lunch only.</em>', 'rsvptoast' ) );\n\t\t}\n\n\t\t$hide = array();\n\n\t\tif ( isset( $custom_fields['_hiddenrsvpfields'][0] ) ) {\n\t\t\t$hide = unserialize( $custom_fields['_hiddenrsvpfields'][0] );\n\t\t}\n\n\t\tif ( isset( $custom_fields['_per'][0] ) ) {\n\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\t\t}\n\n\t\tif ( empty( $per['unit'][0] ) ) {\n\t\t\t$per            = array();\n\t\t\t$per['unit'][0] = __( 'Tickets', 'rsvpmaker' );\n\t\t}\n\n\t\t$defaultfields = array( 'first', 'last', 'email', 'phone', 'phone_type' );\n\n\t\tpreg_match_all( '/(textfield|selectfield|radio|checkbox)=\"([^\"]+)\"/', $rsvp_form, $matches );\n\n\t\t$newfields = array_diff( $matches[2], $defaultfields );\n\n\t\techo '<div id=\"priceper\">';\n\n\t\t$start = 1;\n\n\t\tforeach ( $per['unit'] as $i => $value ) {\n\n\t\t\t$start = $i + 1;\n\n\t\t\t?>\n\n<div class=\"priceblock\" id=\"block_<?php echo esc_attr($i); ?>\">\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Units', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"unit[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['unit'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['unit'][ $i ] );}\n\t\t\t?>\" /></div>\n\n<div class=\"pricelabel\">@ <?php esc_html_e( 'Price', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"price[<?php\nif ( isset( $i ) ) {\n\techo esc_attr($i);}\n?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['price'][ $i ] );}\n\t\t\t?>\" /> \n\t\t\t<?php\n\t\t\tif ( isset( $rsvp_options['paypal_currency'] ) ) {\n\t\t\t\techo esc_html($rsvp_options['paypal_currency']);}\n\t\t\t?>\n\t</div>\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Deadline (optional)', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"price_deadline[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_deadline'][ $i ] ) ) {\n\t\t\t\techo rsvpmaker_date( 'Y-m-d H:i:s', (int) $per['price_deadline'][ $i ] );}\n\t\t\t?>\" placeholder=\"<?php echo date( 'Y-m-d 23:59:00' ); ?>\" /></div>\n\n\t<div class=\"pricelabel\"><?php esc_html_e( 'Multiple Admissions', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\">\n\t<input name=\"price_multiple[<?php\n\t\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_multiple'][ $i ] ) ) {\n\t\t\t\techo (int) $per['price_multiple'][ $i ];\n\t\t\t} else {\n\t\t\t\techo 1;\n\t\t\t}\n\t\t\t?>\" /><br /><em><?php echo __( 'Example: If the price is for a table of 8, enter \"8\"', 'rsvpmaker' ); ?></em></div>\n\n\t\t\t<?php\n\n\t\t\tif ( $rsvp_count_party && ! empty( $newfields ) ) {\n\n\t\t\t\tforeach ( $newfields as $field ) {\n\n\t\t\t\t\tif ( isset( $hide[ $i ] ) && is_array( $hide[ $i ] ) && in_array( $field, $hide[ $i ] ) ) {\n\n\t\t\t\t\t\t\t$showcheck = '';\n\n\t\t\t\t\t\t\t$hidecheck = ' checked=\"checked\" ';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$showcheck = ' checked=\"checked\" ';\n\n\t\t\t\t\t\t\t$hidecheck = '';\n\n\t\t\t\t\t}\n\n\t\t\t\t\t\tprintf( '<div class=\"pricelabel\">%s:</div><div class=\"pricevalue\"><input type=\"radio\" name=\"showhide[%d][%s]\" value=\"0\" %s /> Show <input type=\"radio\" name=\"showhide[%d][%s]\" value=\"1\" %s /> Hide</div>', $field, $i, $field, $showcheck, $i, $field, $hidecheck );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n</div>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\t$pad = ( $start < 3 ) ? 5 : 1;\n\n\t\tfor ( $i = $start; $i < ( $start + $pad ); $i++ ) {\n\n\t\t\t$starterblanks = $i + 1;\n\n\t\t\t?>\n\n<div class=\"priceblock\" id=\"block_<?php echo esc_attr($i); ?>\">\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Units', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"unit[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['unit'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['unit'][ $i ] );}\n\t\t\t?>\" /></div>\n\n<div class=\"pricelabel\">@ <?php esc_html_e( 'Price', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\">\n<input name=\"price[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"\n\t\t\t<?php\n\t\t\tif ( isset( $per['price'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['price'][ $i ] );}\n\t\t\t?>\n\t\" /> \n\t\t\t<?php\n\t\t\tif ( isset( $rsvp_options['paypal_currency'] ) ) {\n\t\t\t\techo esc_html($rsvp_options['paypal_currency']);}\n\t\t\t?>\n\t</div>\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Deadline (optional)', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"price_deadline[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_deadline'][ $i ] ) ) {\n\t\t\t\techo rsvpmaker_date( 'Y-m-d H:i:s', (int) $per['price_deadline'][ $i ] );}\n\t\t\t?>\" placeholder=\"<?php echo date( 'Y-m-d 23:59:00' ); ?>\" /></div>\n\n\t<div class=\"pricelabel\"><?php esc_html_e( 'Multiple Admissions', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\">\n\t<input name=\"price_multiple[<?php\n\t\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_multiple'][ $i ] ) ) {\n\t\t\t\techo (int) $per['price_multiple'][ $i ];\n\t\t\t} else {\n\t\t\t\techo 1;\n\t\t\t}\n\t\t\t?>\" /><br /><em><?php echo __( 'Example: If the price is for a table of 8, enter \"8\"', 'rsvpmaker' ); ?></em>\t\n\n\t</div>\n\n\t\t\t<?php\n\n\t\t\tif ( $rsvp_count_party && ! empty( $newfields ) ) {\n\n\t\t\t\tforeach ( $newfields as $field ) {\n\n\t\t\t\t\t\tprintf( '<div class=\"pricelabel\">%s: </div> <div class=\"pricevalue\"> <input type=\"radio\" name=\"showhide[%d][%s]\" value=\"0\" checked=\"checked\" /> Show <input type=\"radio\" name=\"showhide[%d][%s]\" value=\"1\" /> Hide</div>', $field, $i, $field, $i, $field );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n</div>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\techo '</div>';\n\n\t\t?>\n\n<p><a id=\"add_blanks\" href=\"#\">+ <?php esc_html_e( '', 'rsvpmaker' ); ?>More Prices</a></p>\n\n\t\n\n\t<h3><?php esc_html_e( 'Coupon Codes', 'rsvpmaker' ); ?></h3>\n\n\t<p><?php esc_html_e( 'Optional: Set one or more codes for a discounted fee or a percent off the total.', 'rsvpmaker' ); ?></p>\n\n\t\t<?php\n\n\t\t$coupon_codes = get_post_meta( $post->ID, '_rsvp_coupon_code' );\n\n\t\tif ( empty( $coupon_codes ) ) {\n\n\t\t\t$coupon_codes = array();\n\n\t\t\t$coupon_methods = array( 'amount' );\n\n\t\t\t$coupon_discounts = array();\n\n\t\t} else {\n\n\t\t\t$coupon_methods = get_post_meta( $post->ID, '_rsvp_coupon_method' );\n\n\t\t\t$coupon_methods[] = 'amount'; // gives us one blank row\n\n\t\t\t$coupon_discounts = get_post_meta( $post->ID, '_rsvp_coupon_discount' );\n\n\t\t}\n\n\t\tforeach ( $coupon_methods as $index => $coupon_method ) {\n\n\t\t\t$coupon_code = ( isset( $coupon_codes[ $index ] ) ) ? $coupon_codes[ $index ] : '';\n\n\t\t\t$coupon_discount = ( isset( $coupon_discounts[ $index ] ) ) ? $coupon_discounts[ $index ] : '';\n\n\t\t\t?>\n\n\t<p><?php esc_html_e( 'Coupon Code', 'rsvpmaker' ); ?> <input type=\"text\" name=\"coupon_code[]\" value=\"<?php echo esc_attr( $coupon_code ); ?>\" /> <?php esc_html_e( 'Method', 'rsvpmaker' ); ?>: <select name=\"coupon_method[]\"><option value=\"amount\" \n\t\t\t\t <?php\n\t\t\t\t\tif ( $coupon_method == 'amount' ) {\n\t\t\t\t\t\techo 'selected=\"selected\"';}\n\t\t\t\t\t?>\n\t\t >Discounted Fee</option><option value=\"percent\" \n\t\t\t<?php\n\t\t\tif ( $coupon_method == 'percent' ) {\n\t\t\t\t\techo 'selected=\"selected\"';}\n\t\t\t?>\n\t\t >Percent Off</option></select> <?php esc_html_e( 'Discount', 'rsvpmaker' ); ?>: <input type=\"text\" name=\"coupon_discount[]\" value=\"<?php echo esc_attr( $coupon_discount ); ?>\" /> <br /></p>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\t?>\n\n\t<div id=\"morecodes\"></div>\n\n<p><a id=\"add_codes\" href=\"#\">+ <?php esc_html_e( 'More Codes', 'rsvpmaker' ); ?></a></p>\n\n<script type=\"text/javascript\">\t\n\njQuery(document).ready(function($) {\n\nvar blankcount = <?php echo esc_attr( $starterblanks ); ?>;\n\nvar lastblank = blankcount - 1;\n\nvar blank = $('#block_' + lastblank).html();\n\n$('#add_blanks').click(function(event){\n\n\tevent.preventDefault();\n\nvar newblank = '<' + 'div class=\"priceblock\" id=\"blank_'+blankcount+'\">' +\n\n\tblank.replace(/\\[[0-9]+\\]/g,'['+blankcount+']') +\n\n\t'<' + '/div>';\n\nblankcount++;\n\n$('#priceper').append(newblank);\n\n});\n\n\n\n$('#add_codes').click(function(event){\n\n\tevent.preventDefault();\n\nvar newblank = '<p><?php esc_html_e( 'Coupon Code', 'rsvpmaker' ); ?> <input type=\"text\" name=\"coupon_code[]\" value=\"\" /> Method: <select name=\"coupon_method[]\"><option value=\"amount\" selected=\"selected\" >Discounted Fee</option><option value=\"percent\"  >Percent Off</option></select> Discount: <input type=\"text\" name=\"coupon_discount[]\" value=\"\" /> </p>';\n\n$('#morecodes').append(newblank);\n\n});\n\n\n\n\n\n});\n\n</script>\n\n\t\t<?php\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t$defaultfields = array( 'first', 'last', 'email', 'phone', 'phone_type' );\n\n\t\t\tpreg_match_all( '/(textfield|selectfield|radio|checkbox)=\"([^\"]+)\"/', $rsvp_form, $matches );\n\n\t\t\t$newfields = array_diff( $matches[2], $defaultfields );\n\n\t\t}\n\n\t\tif ( isset( $_GET['showmeta'] ) ) {\n\n\t\t\techo '<pre>';\n\n\t\t\tprint_r( $custom_fields );\n\n\t\t\techo '</pre>';\n\n\t\t}\n\n\t\t?>\n\n</div><!-- end rsvpdetails -->\n\n</div>\n\n\t\t<?php\n\n\t}\n} // end rsvp admin ui\n\nfunction ajax_rsvp_email_lookup( $email, $event ) {\n\n\t$p = get_permalink( $event );\n\n\tif ( ! is_email( $email ) ) {\n\n\t\treturn;\n\t}\n\n\tglobal $wpdb;\n\n\t$wpdb->show_errors();\n\n\t$sql = $wpdb->prepare( 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE email LIKE %s AND event=%d', $email, $event );\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( $results ) {\n\n\t\t$out = '<div class=\"previous_rsvp_prompt\">' . __( 'Did you RSVP previously?', 'rsvpmaker' ) . '</div>';\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$out .= 'RSVP ';\n\n\t\t\t$out .= ( $row->yesno ) ? __( 'YES', 'rsvpmaker' ) : __( 'NO', 'rsvpmaker' );\n\n\t\t\t$out .= esc_html( ' ' . $row->first . ' ' . $row->last );\n\n\t\t\t$sql = $wpdb->prepare( 'SELECT count(*) FROM ' . $wpdb->prefix . 'rsvpmaker WHERE master_rsvp=%d', intval( $row->id ) );\n\n\t\t\t$guests = $wpdb->get_var( $sql );\n\n\t\t\tif ( $guests ) {\n\n\t\t\t\t$out .= ' + ' . esc_html( $guests ) . ' ' . __( 'guests', 'rsvpmaker' );\n\t\t\t}\n\n\t\t\treturn sprintf(\n\t\t\t\t'<div><a href=\"%s\">%s</a> %s</div>',\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'e'      => $row->email,\n\t\t\t\t\t\t'update' => $row->id,\n\t\t\t\t\t),\n\t\t\t\t\t$p\n\t\t\t\t),\n\t\t\t\t__( 'Update', 'rsvpmaker' ),\n\t\t\t\t$out\n\t\t\t);\n\n\t\t}\n\t} else {\n\t\treturn;\n\t}\n\n}\n\n\n\nfunction rsvp_form_setup_form( $rsvp_form ) {\n\n\t$hidden = ( strpos( $rsvp_form, 'hidden=\"email\"' ) );\n\n\t$email_list_ok = ( strpos( $rsvp_form, 'checkbox=\"email_list_ok\"' ) );\n\n\tpreg_match( '/textfield=\"([^\"]+)\"/', $rsvp_form, $match );\n\n\t$emailfirst = ( $match[1] == 'email' ) ? ' checked=\"checked\" ' : '';\n\n\t?>\n\n<div id=\"rsvp-dialog-form\" title=\"Form setup\">\n\n  <p><?php esc_html_e( 'First Name, Last Name, Email (required)', 'rsvpmaker' ); ?> Display options: <select id=\"name_email_hidden\" name=\"name_email_hidden\">\n\n\t  <option value=\"email_first\" \n\t  <?php\n\t\tif ( $emailfirst ) {\n\t\t\techo 'selected=\"selected\"';}\n\t\t?>\n\t\t\t ><?php esc_html_e( 'email, then name', 'rsvpmaker' ); ?></option>\n\n\t  <option value=\"name_first\" \n\t  <?php\n\t\tif ( ! $emailfirst && ! $hidden ) {\n\t\t\techo 'selected=\"selected\"';}\n\t\t?>\n\t\t\t ><?php esc_html_e( 'name, then email', 'rsvpmaker' ); ?></option>\n\n\t  <option value=\"hidden\" \n\t  <?php\n\t\tif ( $hidden ) {\n\t\t\techo 'selected=\"selected\"';}\n\t\t?>\n\t\t\t ><?php esc_html_e( 'hidden (use with login required)', 'rsvpmaker' ); ?></option>\n\n\t  </select>\n\n<br /><?php esc_html_e( 'For radio buttons or select fields, use the format Label:option 1, option 2', 'rsvpmaker' ); ?> (<em><?php esc_html_e( 'Meal:Steak,Chicken,Vegitarian', 'rsvpmaker' ); ?></em>)</p> \n\n\t<fieldset>\n\n\t<?php\n\n\tpreg_match_all( '/(\\[.+\\])/', $rsvp_form, $matches );\n\n\tpreg_match( '/max_party=\"(\\d+\")/', $rsvp_form, $maxparty );\n\n\t$codes = implode( $matches[1] );\n\n\t$codes .= '[rsvpfield textfield=\"\"][rsvpfield textfield=\"\"][rsvpfield textfield=\"\"]';\n\n\techo do_shortcode( $codes );\n\n\tglobal $extrafield;\n\n\tprintf( '<input type=\"hidden\" id=\"extrafields\" value=\"%s\" />', $extrafield );\n\n\t$mp = ( empty( $maxparty[1] ) ) ? '' : $maxparty[1] - 1;\n\n\t?>\n\n<p><input type=\"checkbox\" name=\"guests\" id=\"guests\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpguests' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t /> <?php esc_html_e( 'Include guest form', 'rsvpmaker' ); ?> - <?php esc_html_e( 'up to', 'rsvpmaker' ); ?> <input type=\"text\" name=\"maxguests\" id=\"maxguests\" value=\"<?php echo esc_attr($mp); ?>\" size=\"2\" /> <?php esc_html_e( ' guests (enter # or leave blank for no limit)', 'rsvpmaker' ); ?><br /> <input type=\"checkbox\" name=\"note\" id=\"note\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpnote' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t> <?php esc_html_e( 'Include notes field', 'rsvpmaker' ); ?> <input type=\"checkbox\" name=\"emailcheckbox\" id=\"emailcheckbox\" value=\"1\" \n\t<?php\n\tif ( $email_list_ok ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t > <?php esc_html_e( 'Include \"Add me to email list\" checkbox', 'rsvpmaker' ); ?></p>\n\n<p><input type=\"checkbox\" name=\"guests\" id=\"guests\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpguests' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t /> <?php esc_html_e( 'Include guest form', 'rsvpmaker' ); ?> - <?php esc_html_e( 'up to', 'rsvpmaker' ); ?> <input type=\"text\" name=\"maxguests\" id=\"maxguests\" value=\"<?php echo esc_attr($mp); ?>\" size=\"2\" /> <?php esc_html_e( ' guests (enter # or leave blank for no limit)', 'rsvpmaker' ); ?><br /> <input type=\"checkbox\" name=\"note\" id=\"note\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpnote' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t> <?php esc_html_e( 'Include notes field', 'rsvpmaker' ); ?> <input type=\"checkbox\" name=\"emailcheckbox\" id=\"emailcheckbox\" value=\"1\" \n\t<?php\n\tif ( $email_list_ok ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t > <?php esc_html_e( 'Include \"Add me to email list\" checkbox', 'rsvpmaker' ); ?></p>\n\n\t  <!-- Allow form submission with keyboard without duplicating the dialog button -->\n\n\t  <input type=\"submit\" tabindex=\"-1\" style=\"position:absolute; top:-1000px\">\n\n\t</fieldset>\n\n</div> \n\n\t<?php\n\n}\n\n\n\nif ( ! function_exists( 'capture_email' ) ) {\n\n\tfunction capture_email( $rsvp ) {\n\n\t\t// placeholder function, may be overriden to sign person up for email list\n\n\t\t// or use this action, triggered by email_list_ok parameter in form\n\n\t\tif ( isset( $rsvp['email_list_ok'] ) && $rsvp['email_list_ok'] ) {\n\n\t\t\tdo_action( 'rsvpmaker_email_list_okay', $rsvp );\n\t\t}\n\n\t}\n} // end capture email\n\n\n\nif ( ! function_exists( 'save_replay_rsvp' ) ) {\n\n\tfunction save_replay_rsvp() {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $rsvp_id;\n\n\t\tif ( isset( $_POST['replay_rsvp'] ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\tif ( get_magic_quotes_gpc() ) {\n\n\t\t\t\t$_POST = array_map( 'stripslashes_deep', $_POST );\n\t\t\t}\n\n\t\t\t$req_uri = trim( sanitize_text_field($_POST['replay_rsvp']) );\n\n\t\t\t$req_uri .= ( strpos( $req_uri, '?' ) ) ? '&' : '?';\n\n\t\t\t// sanitize input\n\n\t\t\tforeach ( $_POST['profile'] as $name => $value ) {\n\n\t\t\t\t$rsvp[ $name ] = sanitize_text_field( $value );\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['note'] ) ) {\n\n\t\t\t\t$note = sanitize_text_field( $_POST['note'] );\n\n\t\t\t} else {\n\t\t\t\t$note = '';\n\t\t\t}\n\n\t\t\t$answer = 'YES';\n\n\t\t\t$event = ( ! empty( $_POST['event'] ) ) ? (int) $_POST['event'] : 0;\n\n\t\t\tif ( ! $event ) {\n\n\t\t\t\tdie( 'Event ID not set' );\n\t\t\t}\n\n\t\t\t// page hasn't loaded yet, so retrieve post variables based on event\n\n\t\t\t$post = get_post( $event );\n\n\t\t\t// get rsvp_to\n\n\t\t\t$custom_fields = get_post_custom( $post->ID );\n\n\t\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\t// if permalinks are not turned on, we need to append to query string not add our own ?\n\n\t\t\tif ( ! is_admin() && isset( $custom_fields['_rsvp_captcha'][0] ) && $custom_fields['_rsvp_captcha'][0] ) {\n\n\t\t\t\tif ( ! isset( $_SESSION['captcha_key'] ) ) {\n\n\t\t\t\t\tsession_start();\n\t\t\t\t}\n\n\t\t\t\tif ( $_SESSION['captcha_key'] != md5( $_POST['captcha'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'security code not entered correctly! Please try again.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! is_admin() && ! empty( $rsvp_options['rsvp_recaptcha_site_key'] ) && ! empty( $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\tif ( ! rsvpmaker_recaptcha_check( $rsvp_options['rsvp_recaptcha_site_key'], $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'failed recaptcha test' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['required'] ) || empty( $rsvp['email'] ) ) {\n\n\t\t\t\t$required = explode( ',', $_POST['required'] );\n\n\t\t\t\tif ( ! in_array( 'email', $required ) ) {\n\n\t\t\t\t\t$required[] = 'email';\n\t\t\t\t}\n\n\t\t\t\t$missing = '';\n\n\t\t\t\tforeach ( $required as $r ) {\n\t\t\t\t\t$r = sanitize_text_field($r);\n\t\t\t\t\tif ( empty( $rsvp[ $r ] ) ) {\n\n\t\t\t\t\t\t$missing .= $r . ' ';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( $missing != '' ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'missing required fields: ' . esc_attr( $missing ) ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( preg_match_all( '/http/', $_POST['note'], $matches ) > 2 ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( preg_match( '|//|', implode( ' ', $rsvp ) ) ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( isset( $rsvp['email'] ) ) {\n\n\t\t\t\t// assuming the form includes email, test to make sure it's a valid one\n\n\t\t\t\tif ( ! apply_filters( 'rsvmpmaker_spam_check', $rsvp['email'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid input.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! filter_var( $rsvp['email'], FILTER_VALIDATE_EMAIL ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid email.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['onfile'] ) ) {\n\n\t\t\t\t$sql = $wpdb->prepare( 'SELECT details FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event='$event' AND email LIKE %s AND first LIKE %s AND last LIKE %s  ORDER BY id DESC\", $rsvp['email'], $rsvp['first'], $rsvp['last'] );\n\n\t\t\t\t$details = $wpdb->get_var( $sql );\n\n\t\t\t\tif ( $details ) {\n\n\t\t\t\t\t$contact = unserialize( $details );\n\n\t\t\t\t} else {\n\t\t\t\t\t$contact = rsvpmaker_profile_lookup( $rsvp['email'] );\n\t\t\t\t}\n\n\t\t\t\tif ( $contact ) {\n\n\t\t\t\t\tforeach ( $contact as $name => $value ) {\n\n\t\t\t\t\t\tif ( ! isset( $rsvp[ $name ] ) ) {\n\n\t\t\t\t\t\t\t$rsvp[ $name ] = $value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tglobal $current_user; // if logged in\n\n\t\t\t$future = is_rsvpmaker_future( $event, 1 ); // if start time in the future (or within one hour)\n\n\t\t\t$yesno = ( $future ) ? 1 : 2;// 2 for replay\n\n\t\t\t$rsvp_sql = $wpdb->prepare( ' SET first=%s, last=%s, email=%s, yesno=%d, event=%d, note=%s, details=%s, participants=%d, user_id=%d ', $rsvp['first'], $rsvp['last'], $rsvp['email'], $yesno, $event, $note, serialize( $rsvp ), 1, $current_user->ID );\n\n\t\t\tcapture_email( $rsvp );\n\n\t\t\t$rsvp_id = ( isset( $_POST['rsvp_id'] ) ) ? (int) $_POST['rsvp_id'] : 0;\n\n\t\t\tif ( $rsvp_id ) {\n\n\t\t\t\t$rsvp_sql = 'UPDATE ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql . \" WHERE id=$rsvp_id\";\n\n\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t} else {\n\n\t\t\t\t$rsvp_sql = 'INSERT INTO ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql;\n\n\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t\t$rsvp_id = $wpdb->insert_id;\n\n\t\t\t\t$sql = 'SELECT date FROM ' . $wpdb->prefix . \"rsvpmaker_event WHERE event=$event \";\n\n\t\t\t\tif ( empty( $wpdb->get_var( $sql ) ) ) {\n\t\t\t\t\t$sql = $wpdb->prepare( 'INSERT INTO  ' . $wpdb->prefix . 'rsvpmaker_event SET event=%d, post_title=%s, date=%s', $event, $post->post_title, get_rsvp_date( $event ) );\n\t\t\t\t\t$wpdb->query( $sql );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetcookie( 'rsvp_for_' . $event, $rsvp_id, time() + ( 60 * 60 * 24 * 90 ), '/', sanitize_text_field($_SERVER['SERVER_NAME']) );\n\n\t\t\tif ( $future ) {\n\n\t\t\t\t$cleanmessage = '';\n\n\t\t\t\tforeach ( $rsvp as $name => $value ) {\n\n\t\t\t\t\t$label = get_post_meta( $event, 'rsvpform' . $name, true );\n\n\t\t\t\t\tif ( $label ) {\n\n\t\t\t\t\t\t$name = $label;\n\t\t\t\t\t}\n\n\t\t\t\t\t$cleanmessage .= $name . ': ' . $value . \"\\n\";// labels from form\n\n\t\t\t\t}\n\n\t\t\t\t$subject = __( 'You registered for ', 'rsvpmaker' ) . ' ' . esc_html( $post->post_title );\n\n\t\t\t\tif ( ! empty( $_POST['note'] ) ) {\n\n\t\t\t\t\t$cleanmessage .= 'Note: ' . sanitize_textarea_field( stripslashes( $_POST['note'] ) );\n\t\t\t\t}\n\n\t\t\t\trsvp_notifications( $rsvp, $rsvp_to, $subject, $cleanmessage, $rsvp_confirm );\n\n\t\t\t} else {\n\n\t\t\t\t// cron for follow up messages\n\n\t\t\t\t$sql = \"SELECT * \n\nFROM  `$wpdb->postmeta` \n\nWHERE meta_key REGEXP '_rsvp_reminder_msg_[0-9]{1,2}'\n\nAND  `post_id` = \" . $event;\n\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t\t// $msg = var_export($results,true);\n\n\t\t\t\tif ( $results ) {\n\n\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\t$parts = explode( '_msg_', $row->meta_key );\n\n\t\t\t\t\t\t$hours = $parts[1];\n\n\t\t\t\t\t\trsvpmaker_replay_cron( $event, $rsvp_id, $hours );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$landing_id = (int) $_POST['landing_id'];\n\n\t\t\t$passcode = get_post_meta( $landing_id, '_webinar_passcode', true );\n\n\t\t\t$landing_permalink = $req_uri . '&webinar=' . $passcode . '&e=' . $rsvp['email'];\n\n\t\t\theader( 'Location: ' . $landing_permalink );\n\n\t\t\texit();\n\n\t\t}\n\n\t}\n} // end save replay rsvp\n\n\n\nif ( ! function_exists( 'save_rsvp' ) ) {\n\n\tfunction save_rsvp() {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $post;\n\n\t\tglobal $rsvp_id;\n\n\t\tglobal $rsvpdata;\n\n\t\t$rsvp_id = ( isset( $_POST['rsvp_id'] ) ) ? (int) $_POST['rsvp_id'] : 0;\n\n\t\t$cleanmessage = '';\n\n\t\tif ( isset( $_POST['withdraw'] ) ) {\n\n\t\t\tforeach ( $_POST['withdraw'] as $withdraw_id ) {\n\n\t\t\t\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET yesno=0 WHERE id=\".intval($withdraw_id) );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_POST['yesno'] ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$_POST = stripslashes_deep( $_POST );\n\n\t\t\t// sanitize input\n\n\t\t\tforeach ( $_POST['profile'] as $name => $value ) {\n\n\t\t\t\t$rsvp[ $name ] = sanitize_text_field( $value );\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['note'] ) ) {\n\n\t\t\t\t$note = sanitize_text_field( $_POST['note'] );\n\n\t\t\t} else {\n\t\t\t\t$note = '';\n\t\t\t}\n\n\t\t\t$yesno = (int) $_POST['yesno'];\n\n\t\t\t$answer = ( $yesno ) ? __( 'YES', 'rsvpmaker' ) : __( 'NO', 'rsvpmaker' );\n\n\t\t\t$event = ( ! empty( $_POST['event'] ) ) ? (int) $_POST['event'] : 0;\n\n\t\t\tif ( ! $event ) {\n\n\t\t\t\tdie( 'Event ID not set' );\n\t\t\t}\n\t\t\tif(!get_post_meta($event,'_rsvp_on'))\n\t\t\t\treturn;\n\n\t\t\t// page hasn't loaded yet, so retrieve post variables based on event\n\n\t\t\t$post = get_post( $event );\n\n\t\t\t// get rsvp_to\n\n\t\t\t$custom_fields = get_post_custom( $post->ID );\n\n\t\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\t$rsvp_max = $custom_fields['_rsvp_max'][0];\n\n\t\t\t$count = $wpdb->get_var( 'SELECT count(*) FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$event AND yesno=1\" );\n\n\t\t\t// if permalinks are not turned on, we need to append to query string not add our own ?\n\n\t\t\t$guest_sql = array();\n\n\t\t\t$guest_text = array();\n\n\t\t\tif ( is_admin() ) {\n\n\t\t\t\t$req_uri = admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . $event );\n\n\t\t\t} else {\n\n\t\t\t\t$req_uri = site_url( '?post_type=rsvpmaker&p=' . $event . '&e=' . $rsvp['email'] );\n\n\t\t\t}\n\n\t\t\tif ( ! is_admin() && isset( $custom_fields['_rsvp_captcha'][0] ) && $custom_fields['_rsvp_captcha'][0] ) {\n\n\t\t\t\tif ( ! isset( $_SESSION['captcha_key'] ) ) {\n\n\t\t\t\t\tsession_start();\n\t\t\t\t}\n\n\t\t\t\tif ( $_SESSION['captcha_key'] != md5( $_POST['captcha'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'security code not entered correctly! Please try again.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! is_admin() && ! empty( $rsvp_options['rsvp_recaptcha_site_key'] ) && ! empty( $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\tif ( ! rsvpmaker_recaptcha_check( $rsvp_options['rsvp_recaptcha_site_key'], $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'failed recaptcha test' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['required'] ) || empty( $rsvp['email'] ) ) {\n\n\t\t\t\t$required = explode( ',', $_POST['required'] );\n\n\t\t\t\tif ( ! in_array( 'email', $required ) ) {\n\n\t\t\t\t\t$required[] = 'email';\n\t\t\t\t}\n\n\t\t\t\t$missing = '';\n\n\t\t\t\tforeach ( $required as $r ) {\n\t\t\t\t\t$r = sanitize_text_field($r);\n\t\t\t\t\tif ( empty( $rsvp[ $r ] ) ) {\n\t\t\t\t\t\t$missing .= $r . ' ';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( $missing != '' ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'missing required fields: ' . $missing ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! isset( $rsvp['first'] ) ) {\n\n\t\t\t\t$rsvp['first'] = '';\n\t\t\t}\n\n\t\t\tif ( ! isset( $rsvp['last'] ) ) {\n\n\t\t\t\t$rsvp['last'] = '';\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['note'] ) && preg_match_all( '/http/', $_POST['note'], $matches ) > 2 ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( preg_match( '|//|', implode( ' ', $rsvp ) ) ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( isset( $rsvp['email'] ) ) {\n\n\t\t\t\t// assuming the form includes email, test to make sure it's a valid one\n\n\t\t\t\tif ( ! apply_filters( 'rsvmpmaker_spam_check', $rsvp['email'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid input.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! filter_var( $rsvp['email'], FILTER_VALIDATE_EMAIL ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid email.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( empty( $rsvp_id ) ) {\n\n\t\t\t\t$duplicate_check = $wpdb->get_var( 'SELECT id FROM ' . $wpdb->prefix . \"rsvpmaker WHERE email='\" . $rsvp['email'] . \"' AND first='\" . $rsvp['first'] . \"' AND last='\" . $rsvp['last'] . \"' AND event=$post->ID \" );\n\n\t\t\t\tif ( $duplicate_check ) {\n\n\t\t\t\t\trsvpmaker_debug_log( $rsvp, 'duplicate check' );\n\n\t\t\t\t\t$rsvp_id = $duplicate_check;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $rsvp_id ) {\n\n\t\t\t\t$sql = 'SELECT details FROM ' . $wpdb->prefix . \"rsvpmaker WHERE email !='' AND id=\" . $rsvp_id;\n\n\t\t\t\t$details = $wpdb->get_var( $sql );\n\n\t\t\t\tif ( $details ) {\n\n\t\t\t\t\t$contact = unserialize( $details );\n\n\t\t\t\t\tif ( is_array( $contact ) ) {\n\n\t\t\t\t\t\tforeach ( $contact as $name => $value ) {\n\n\t\t\t\t\t\t\tif ( ! isset( $rsvp[ $name ] ) ) {\n\n\t\t\t\t\t\t\t\t$rsvp[ $name ] = $value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$rsvp_id = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$rsvp['payingfor'] = '';\n\n\t\t\tif ( isset( $_POST['payingfor'] ) && is_array( $_POST['payingfor'] ) ) {\n\n\t\t\t\t$rsvp['total'] = 0;\n\n\t\t\t\t$participants = 0;\n\n\t\t\t\tforeach ( $_POST['payingfor'] as $index => $value ) {\n\n\t\t\t\t\t$value = (int) $value;\n\n\t\t\t\t\t$unit = sanitize_text_field( $_POST['unit'][ $index ] );\n\n\t\t\t\t\t$price = (float) $_POST['price'][ $index ];\n\n\t\t\t\t\t$price = rsvpmaker_check_coupon_code( $price );\n\n\t\t\t\t\t$cost = $value * $price;\n\n\t\t\t\t\t$rsvp['payingfor'] .= '<div class=\"payingfor\">' . \"$value $unit @ \" . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] . '</div>';\n\n\t\t\t\t\t$rsvp['total'] += $cost;\n\n\t\t\t\t\t$participants += $value;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['timeslot'] ) && is_array( $_POST['timeslot'] ) ) {\n\n\t\t\t\t$participants = $rsvp['participants'] = (int) $_POST['participants'];\n\n\t\t\t\t$rsvp['timeslots'] = ''; // ignore anything retrieved from prev rsvps\n\n\t\t\t\tforeach ( $_POST['timeslot'] as $slot ) {\n\n\t\t\t\t\tif ( ! empty( $rsvp['timeslots'] ) ) {\n\n\t\t\t\t\t\t$rsvp['timeslots'] .= ', ';\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvp['timeslots'] .= rsvpmaker_date( 'g:i A', sanitize_text_field($slot) );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! isset( $participants ) && $yesno ) {\n\n\t\t\t\t// if they didn't specify # of participants (paid tickets or volunteers), count the host plus guests\n\n\t\t\t\t$participants = 1;\n\n\t\t\t\tif ( ! empty( $_POST['guest']['first'] ) ) {\n\n\t\t\t\t\tforeach ( $_POST['guest']['first'] as $first ) {\n\n\t\t\t\t\t\tif ( $first ) {\n\n\t\t\t\t\t\t\t$participants++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $_POST['guestdelete'] ) ) {\n\n\t\t\t\t\t$participants -= sizeof( $_POST['guestdelete'] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! $yesno ) {\n\n\t\t\t\t$participants = 0; // if they said no, they don't count\n\t\t\t}\n\n\t\t\tif ( $participants && isset( $_POST['guest_count_price'] ) ) {\n\n\t\t\t\t$cleanmessage .= '<div>' . __( 'Participants', 'rsvpmaker' ) . \": $participants</div>\\n\";\n\n\t\t\t\t$index = (int) $_POST['guest_count_price'];\n\n\t\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\n\t\t\t\t$price = $per['price'][ $index ];\n\n\t\t\t\t$unit = $per['unit'][ $index ];\n\n\t\t\t\t$multiple = (int) ( isset( $per['price_multiple'][ $index ] ) ) ? $per['price_multiple'][ $index ] : 1;\n\n\t\t\t\tif ( $multiple == 1 ) { // coupon codes not applied to multiple admission \"table\" pricing\n\n\t\t\t\t\t$price = rsvpmaker_check_coupon_code( $price );\n\t\t\t\t}\n\n\t\t\t\tif ( $multiple > 1 ) {\n\n\t\t\t\t\t$rsvp['total'] = $price;\n\n\t\t\t\t\tif ( $participants > $multiple ) {\n\n\t\t\t\t\t\t$multiple_warning = '<div style=\"color:red;\">' . \"Warning: party of $participants exceeds table size\" . '</div>';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$padguests = $multiple - $participants;\n\n\t\t\t\t\t\t$participants = $multiple;\n\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$rsvp['total'] = $price * $participants;\n\t\t\t\t}\n\n\t\t\t\t$rsvp['payingfor'] .= \"$participants $unit @ \" . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] );\n\n\t\t\t\t$rsvp['pricechoice'] = $index;\n\n\t\t\t}\n\n\t\t\tglobal $current_user; // if logged in\n\n\t\t\tglobal $rsvpmaker_coupon_message;\n\n\t\t\tif ( ! empty( $rsvpmaker_coupon_message ) ) {\n\n\t\t\t\t$rsvp['coupon'] = $rsvpmaker_coupon_message;\n\t\t\t}\n\n\t\t\t$rsvp_sql = $wpdb->prepare( ' SET first=%s, last=%s, email=%s, yesno=%d, event=%d, note=%s, details=%s, participants=%d, user_id=%d ', $rsvp['first'], $rsvp['last'], $rsvp['email'], $yesno, $event, $note, serialize( $rsvp ), $participants, $current_user->ID );\n\n\t\t\tcapture_email( $rsvp );\n\n\t\t\tif ( $rsvp_id ) {\n\n\t\t\t\t$rsvp_sql = 'UPDATE ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql . \" WHERE id=$rsvp_id\";\n\n\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t} else {\n\n\t\t\t\t$count++;\n\n\t\t\t\tif ( $rsvp_max && ( $count > $rsvp_max ) ) {\n\n\t\t\t\t\t$cleanmessage .= '<div style=\"color:red;\">' . __( 'Max RSVP count limit reached, entry not added for:', 'rsvpmaker' ) . \"\\n\" . $rsvp['first'] . ' ' . $rsvp['last'] . '</div>';\n\n\t\t\t\t\t$rsvp_id = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$rsvp_sql = 'INSERT INTO ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql;\n\n\t\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t\t\t$rsvp_id = $wpdb->insert_id;\n\n\t\t\t\t\t$sql = 'SELECT date FROM ' . $wpdb->prefix . \"rsvpmaker_event WHERE event=$event \";\n\n\t\t\t\t\tif ( empty( $wpdb->get_var( $sql ) ) ) {\n\n\t\t\t\t\t\t$sql = $wpdb->prepare( 'INSERT INTO  ' . $wpdb->prefix . 'rsvpmaker_event SET event=%d, post_title=%s, date=%s', $event, $post->post_title, get_rsvp_date( $event ) );\n\t\t\t\t\t\t//rsvpmaker_debug_log( $sql, 'save_rsvp rsvpmaker_event' );\n\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $rsvp_options['send_payment_reminders'] ) && isset( $price ) && ( $price > 0 ) ) {\n\n\t\t\t\trsvpmaker_payment_reminder_cron( $rsvp_id );\n\t\t\t}\n\n\t\t\tsetcookie( 'rsvp_for_' . $post->ID, $rsvp_id, time() + 60 * 60 * 24 * 90, '/', sanitize_text_field($_SERVER['SERVER_NAME']) );\n\n\t\t\tsetcookie( 'rsvpmaker', $rsvp_id, time() + 60 * 60 * 24 * 90, '/', sanitize_text_field($_SERVER['SERVER_NAME']) );\n\n\t\t\tif ( isset( $_POST['timeslot'] ) ) {\n\n\t\t\t\t$participants = (int) $_POST['participants'];\n\n\t\t\t\t// clear previous response, if any\n\n\t\t\t\t$wpdb->query( 'DELETE FROM ' . $wpdb->prefix . \"rsvp_volunteer_time WHERE rsvp=$rsvp_id\" );\n\n\t\t\t\tforeach ( $_POST['timeslot'] as $slot ) {\n\n\t\t\t\t\t$slot = (int) $slot;\n\n\t\t\t\t\t$sql = $wpdb->prepare( 'INSERT INTO ' . $wpdb->prefix . 'rsvp_volunteer_time SET time=%d, event=%d, rsvp=%d, participants=%d', $slot, $post->ID, $rsvp_id, $participants );\n\n\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// get start date\n\n\t\t\t$rows = get_rsvp_dates( $event );\n\n\t\t\t$row = $rows[0];\n\n\t\t\t$date = rsvpdate_shortcode( array( 'format' => '%b %e' ) );\n\n\t\t\tforeach ( $rsvp as $name => $value ) {\n\n\t\t\t\t$label = get_post_meta( $post->ID, 'rsvpform' . $name, true );\n\n\t\t\t\tif ( $label ) {\n\n\t\t\t\t\t$name = $label;\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $value ) ) {\n\n\t\t\t\t\t$cleanmessage .= $name . ': ' . $value . \"\\n\";// labels from rsvp form\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$guestof = (empty($rsvp['first'])) ? '' : $rsvp['first'] . ' ';\n\t\t\t$guestof .=  (empty($rsvp['last'])) ? '' : $rsvp['last'];\n\n\t\t\tif ( isset( $_POST['guest']['first'] ) ) {\n\n\t\t\t\tforeach ( $_POST['guest']['first'] as $index => $first ) {\n\n\t\t\t\t\t$last = ( empty( $_POST['guest']['last']) || !empty($_POST['guest']['last'][ $index ]) ) ? '' : sanitize_text_field($_POST['guest']['last'][ $index ]);\n\t\t\t\t\tif ( ! empty( $first ) ) {\n\t\t\t\t\t\t$guest_sql[ $index ] = $wpdb->prepare( ' SET event=%d, yesno=%d, `master_rsvp`=%d, `guestof`=%s, `first` = %s, `last` = %s', $event, $yesno, $rsvp_id, $guestof, $first, $last );\n\t\t\t\t\t\t$guest_text[ $index ] = sprintf( \"Guest: %s %s\\n\", $first, $last );\n\t\t\t\t\t\t$guest_list[ $index ] = sprintf( '%s %s', $first, $last );\n\t\t\t\t\t\t$lastguest = $index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $padguests ) ) {\n\n\t\t\t\tfor ( $i = 0; $i < $padguests; $i++ ) {\n\n\t\t\t\t\t$index = $i + 100;\n\n\t\t\t\t\t$tbd = $i + 1;\n\n\t\t\t\t\t$guest_sql[ $index ] = $wpdb->prepare( ' SET event=%d, yesno=%d, `master_rsvp`=%d, `guestof`=%s, `first` = %s, `last` = %s', $event, $yesno, $rsvp_id, $guestof, 'Placeholder', 'Guest TBD ' . $tbd );\n\n\t\t\t\t\t$guest_text[ $index ] = sprintf( \"Guest: %s %s\\n\", 'Placeholder', 'Guest TBD ' . $tbd );\n\n\t\t\t\t\t$guest_list[ $index ] = sprintf( '%s %s', 'Placeholder', 'Guest TBD ' . $tbd );\n\n\t\t\t\t\t$newrow[ $index ]['first'] = 'Placeholder';\n\n\t\t\t\t\t$newrow[ $index ]['last'] = 'Guest TBD ' . $tbd;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sizeof( $guest_sql ) ) {\n\t\t\t\tforeach ( $_POST['guest'] as $field => $column ) {\n\t\t\t\t\tforeach ( $column as $index => $value ) {\n\t\t\t\t\t\tif ( empty( $guest_text[ $index ] ) ) {\n\t\t\t\t\t\t\t$guest_text[ $index ] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( isset( $guest_sql[ $index ] ) ) {\n\t\t\t\t\t\t\t$newrow[ $index ][ $field ] = $value;\n\t\t\t\t\t\t\tif ( ( $field != 'first' ) && ( $field != 'last' ) && ( $field != 'id' ) ) {\n\t\t\t\t\t\t\t\t$guest_text[ $index ] .= sprintf( \"%s: %s\\n\", $field, $value );\n\t\t\t\t\t\t\t\t$guestlast = (empty($_POST['guest']['last'][ $index ])) ? '' : sanitize_text_field($_POST['guest']['last'][ $index ]);\n\t\t\t\t\t\t\t\t$guest_list[ $index ] = sprintf( '%s %s', $first, $guestlast );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sizeof( $guest_sql ) ) {\n\n\t\t\t\tforeach ( $guest_sql as $index => $sql ) {\n\n\t\t\t\t\t$sql .= $wpdb->prepare( ', `details`=%s ', serialize( $newrow[ $index ] ) );\n\n\t\t\t\t\t$id = ( isset( $_POST['guest']['id'][ $index ] ) ) ? (int) $_POST['guest']['id'][ $index ] : 0;\n\n\t\t\t\t\tif ( isset( $_POST['guestdelete'][ $id ] ) ) {\n\n\t\t\t\t\t\t$gd = (int) $_POST['guestdelete'][ $id ];\n\n\t\t\t\t\t\t$sql = 'DELETE FROM ' . $wpdb->prefix . 'rsvpmaker WHERE id=' . $gd;\n\n\t\t\t\t\t\t$guest_text[ $index ] = __( 'Deleted:', 'rsvpmaker' ) . \"\\n\" . $guest_text[ $index ];\n\n\t\t\t\t\t\t$guest_list[ $index ] = __( 'Deleted:', 'rsvpmaker' ) . ' ' . $guest_list[ $index ];\n\n\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t} elseif ( $id ) {\n\n\t\t\t\t\t\t$sql = 'UPDATE ' . $wpdb->prefix . 'rsvpmaker ' . $sql . ' WHERE id=' . $id;\n\n\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$count++;\n\n\t\t\t\t\t\tif ( $rsvp_max && ( $count > $rsvp_max ) ) {\n\n\t\t\t\t\t\t\t$guest_text[ $index ] = '<div style=\"color:red;\">' . __( 'Max RSVP count limit reached, entry not added for:', 'rsvpmaker' ) . \"\\n\" . $guest_text[ $index ] . '</div>';\n\n\t\t\t\t\t\t\t$guest_list[ $index ] = '<div style=\"color:red;\">' . __( 'Max RSVP count limit reached, entry not added for:', 'rsvpmaker' ) . \"\\n\" . $guest_text[ $index ] . '</div>';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$sql = 'INSERT INTO ' . $wpdb->prefix . 'rsvpmaker ' . $sql;\n\n\t\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $guest_list ) ) {\n\n\t\t\t\t$cleanmessage .= __( 'Guests', 'rsvpmaker' ) . ': ' . implode( ', ', $guest_list );\n\t\t\t}\n\n\t\t\tif ( ! empty( $multiple_warning ) ) {\n\n\t\t\t\t$cleanmessage .= $multiple_warning;\n\t\t\t}\n\n\t\t\tif ( ! is_admin() ) {\n\n\t\t\t\tif ( ! empty( $_POST['note'] ) ) {\n\n\t\t\t\t\t$cleanmessage .= 'Note: ' . stripslashes( $_POST['note'] );\n\t\t\t\t}\n\n\t\t\t\t$include_event = get_post_meta( $post->ID, '_rsvp_confirmation_include_event', true );\n\n\t\t\t\tif ( $include_event ) {\n\n\t\t\t\t\t$embed = event_to_embed( $post->ID, $post, 'confirmation' );\n\n\t\t\t\t\t$cleanmessage .= \"\\n\\n\" . $embed['content'];\n\n\t\t\t\t}\n\n\t\t\t\t$rsvpdata['rsvpdetails'] = $cleanmessage;\n\n\t\t\t\t$rsvpdata['rsvpmessage'] = $rsvp_confirm; // confirmation message from editor\n\n\t\t\t\t// $rsvpdata[\"rsvptitle\"] = $post->post_title;\n\n\t\t\t\t$rsvpdata['rsvpyesno'] = $answer;\n\n\t\t\t\t$rsvpdata['rsvpdate'] = $date;\n\n\t\t\t\t$rsvp_options['rsvplink'] = get_rsvp_link( $post->ID );\n\n\t\t\t\t$rsvpdata['rsvpupdate'] = preg_replace( '/#rsvpnow\">[^<]+/', '#rsvpnow\">' . $rsvp_options['update_rsvp'], str_replace( '*|EMAIL|*', $rsvp['email'] . '&update=' . $rsvp_id, $rsvp_options['rsvplink'] ) );\n\n\t\t\t\trsvp_notifications_via_template( $rsvp, $rsvp_to, $rsvpdata );\n\n\t\t\t\t// rsvp_notifications ($rsvp,$rsvp_to,$subject,$cleanmessage,$rsvp_confirm);\n\n\t\t\t}\n\n\t\t\tdo_action( 'rsvp_recorded', $rsvp );\n\n\t\t\theader( 'Location: ' . $req_uri . '&rsvp=' . $rsvp_id . '#rsvpmaker_top' );\n\n\t\t\texit();\n\n\t\t}\n\n\t}\n} // end save rsvp\n\n\n\nif ( ! function_exists( 'rsvp_notifications' ) ) {\n\n\tfunction rsvp_notifications( $rsvp, $rsvp_to, $subject, $message, $rsvp_confirm = '' ) {\n\n\t\tinclude_once 'rsvpmaker-ical.php';\n\n\t\tglobal $post;\n\n\t\t$message = wpautop( $message );\n\n\t\t$mail['html'] = $rsvp_confirm . \"\\n\\n\" . $message;\n\n\t\tglobal $rsvp_options;\n\n\t\t$mail['to'] = $rsvp_to;\n\n\t\t$mail['from'] = $rsvp['email'];\n\n\t\t$mail['fromname'] = $rsvp['first'] . ' ' . $rsvp['last'];\n\n\t\t$mail['subject'] = $subject;\n\n\t\trsvpmaker_tx_email( $post, $mail );\n\n\t\tif ( isset( $post->ID ) ) { // not for replay\n\n\t\t\t$mail['ical'] = rsvpmaker_to_ical_email( $post->ID, $rsvp_to, $rsvp['email'] );\n\t\t}\n\n\t\t$mail['to'] = $rsvp['email'];\n\n\t\t$mail['from'] = $rsvp_to;\n\n\t\t$mail['fromname'] = get_bloginfo( 'name' );\n\n\t\t$mail['subject'] = 'Confirming ' . $subject;\n\n\t\trsvpmaker_tx_email( $post, $mail );\n\n\t}\n} // end rsvp notifications\n\n\nif ( ! function_exists( 'admin_payment' ) ) {\n\n\tfunction admin_payment( $rsvp_id, $charge ) {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $current_user;\n\n\t\t$event = (int) $_GET['event'];\n\n\t\t$paid = $charge;\n\n\t\t$paid_amounts = get_post_meta( $event, '_paid_' . $rsvp_id );\n\n\t\tif ( is_array( $paid_amounts ) ) {\n\n\t\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t\t$paid += $payment;\n\t\t\t}\n\t\t}\n\n\t\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\t\tadd_post_meta( $event, '_paid_' . $rsvp_id, $charge );\n\n\t\tdelete_post_meta( $event, '_open_invoice_' . $rsvp_id );\n\n\t\tdelete_post_meta( $event, '_invoice_' . $rsvp_id );\n\n\t\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$rsvp_id \", ARRAY_A );\n\n\t\t$message = sprintf( '<p>%s ' . __( 'payment for', 'rsvpmaker' ) . ' %s %s ' . __( ' manually recorded by', 'rsvpmaker' ) . ' %s<br />' . __( 'Post ID', 'rsvpmaker' ) . ': %s<br />' . __( 'Time', 'rsvpmaker' ) . ': %s</p>', $charge, esc_attr( $row['first'] ), esc_attr( $row['last'] ), $current_user->display_name, $event, date( 'r' ) );\n\n\t\tadd_post_meta( $event, '_paypal_log', $message );\n\n\t\techo wp_kses_post($message);\n\n\t}\n} // end admin payment\n\nfunction rsvpmaker_localdate() {\n\n\tif ( empty( $_REQUEST['action'] ) || $_REQUEST['action'] != 'rsvpmaker_localstring' ) {\n\n\t\treturn;\n\t}\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\treturn;\n\n\t$output = '';\n\n\tglobal $rsvp_options;\n\n\tif ( ! empty( $_REQUEST['localstring'] ) ) {\n\n\t\tpreg_match( '/(.+:00 ).+\\(([^)]+)/', sanitize_text_field($_REQUEST['localstring']), $matches );\n\n\t\t$tf = str_replace( 'T', '', $rsvp_options['time_format'] );\n\n\t\t$t = rsvpmaker_strtotime( $matches[1] );\n\n\t\t$output = rsvpmaker_date( $rsvp_options['long_date'], $t ) . ' ' . rsvpmaker_date( $tf, $t ) . ' ' . $matches[2];\n\n\t}\n\n\techo wp_kses_post($output);\n\n\twp_die();\n\n}\n\n\n\nif ( ! function_exists( 'basic_form' ) ) {\n\n\tfunction basic_form( $form = '' ) {\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $post;\n\n\t\tif ( empty( $form ) ) {\n\n\t\t\t$form = get_post_meta( $post->ID, '_rsvp_form', true );\n\t\t}\n\n\t\tif ( empty( $form ) ) {\n\n\t\t\t$form = $rsvp_options['rsvp_form'];\n\t\t}\n\n\t\tif ( is_numeric( $form ) ) {\n\n\t\t\t$fpost = get_post( $form );\n\n\t\t\techo do_blocks( $fpost->post_content );\n\n\t\t} else {\n\t\t\techo do_shortcode( $form );\n\t\t}\n\n\t}\n}\n\n\n\n// global variable for content\n\n$confirmed_content = '';\n\n\n\nif ( ! function_exists( 'event_content' ) ) {\n\n\tfunction event_content( $content, $formonly = false, $form = '' ) {\n\n\t\tif ( is_admin() ) { // || !in_the_loop()\n\n\t\t\treturn $content;\n\t\t}\n\n\t\tglobal $wpdb, $post, $rsvp_options, $profile, $master_rsvp, $showbutton, $blanks_allowed, $email_context, $confirmed_content;\n\t\t// If the post is not an event, leave it alone\n\n\t\tif ( $post->post_type != 'rsvpmaker' ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t$rsvpconfirm = $rsvp_confirm = '';\n\n\t\t$display = array();\n\n\t\tif ( post_password_required( $post ) ) {\n\n\t\t\treturn $content;\n\n\t\t}\n\n\t\tglobal $custom_fields; // make this globally accessible\n\n\t\t$custom_fields = get_rsvpmaker_custom( $post->ID );\n\n\t\t$content = apply_filters( 'rsvpmaker_event_content_top', $content, $custom_fields );\n\n\t\t// if requiring passcode, check code (unless RSVP cookie is set)\n\n\t\tif ( isset( $custom_fields['_require_webinar_passcode'][0] ) && $custom_fields['_require_webinar_passcode'][0] && ! isset( $_COOKIE[ 'rsvp_for_' . $post->ID ] ) ) {\n\n\t\t\t$event_id = $custom_fields['_require_webinar_passcode'][0];\n\n\t\t\tif ( ! isset( $_GET['webinar'] ) ) {\n\n\t\t\t\treturn rsvpmaker_replay_form( $custom_fields['_webinar_event_id'][0] );\n\t\t\t}\n\n\t\t\t$code = sanitize_text_field($_GET['webinar']);\n\n\t\t\t$required = $custom_fields['_require_webinar_passcode'][0];\n\n\t\t\tif ( $required != trim( $code ) ) {\n\n\t\t\t\treturn rsvpmaker_replay_form( $custom_fields['_webinar_event_id'][0] );\n\t\t\t}\n\t\t}\n\n\t\t$permalink = site_url( '?post_type=rsvpmaker&p=' . intval( $post->ID ) );\n\n\t\tif ( isset( $custom_fields['_rsvp_on'][0] ) ) {\n\n\t\t\t$rsvp_on = $custom_fields['_rsvp_on'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_login_required'][0] ) ) {\n\n\t\t\t$login_required = $custom_fields['_rsvp_login_required'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_to'][0] ) ) {\n\n\t\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_max'][0] ) ) {\n\n\t\t\t$rsvp_max = $custom_fields['_rsvp_max'][0];\n\t\t}\n\n\t\t$rsvp_count = ( isset( $custom_fields['_rsvp_count'][0] ) && $custom_fields['_rsvp_count'][0] ) ? 1 : 0;\n\n\t\t$rsvp_show_attendees = ( isset( $custom_fields['_rsvp_show_attendees'][0] ) && $custom_fields['_rsvp_show_attendees'][0] ) ? $custom_fields['_rsvp_show_attendees'][0] : 0;\n\n\t\tif ( isset( $custom_fields['_rsvp_deadline'][0] ) && $custom_fields['_rsvp_deadline'][0] ) {\n\n\t\t\t$deadline = (int) $custom_fields['_rsvp_deadline'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_start'][0] ) && $custom_fields['_rsvp_start'][0] ) {\n\n\t\t\t$rsvpstart = (int) $custom_fields['_rsvp_start'][0];\n\t\t}\n\n\t\t$rsvp_instructions = ( isset( $custom_fields['_rsvp_instructions'][0] ) ) ? $custom_fields['_rsvp_instructions'][0] : null;\n\n\t\t$rsvp_yesno = ( isset( $custom_fields['_rsvp_yesno'][0] ) ) ? $custom_fields['_rsvp_yesno'][0] : 1;\n\n\t\t$replay = ( isset( $custom_fields['_replay'][0] ) ) ? $custom_fields['_replay'][0] : null;\n\n\t\t$first = ( isset( $_GET['first'] ) ) ? sanitize_text_field($_GET['first']) : null;\n\n\t\t$last = ( isset( $_GET['last'] ) ) ? sanitize_text_field($_GET['last']) : null;\n\n\t\t$rsvprow = null;\n\n\t\t$e = get_rsvp_email();\n\n\t\t$rsvp_id = get_rsvp_id( $e );\n\n\t\t$profile = rsvpmaker_profile_lookup( $e );\n\n\t\tif ( $rsvp_id && $e ) {\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$rsvp_id and email='$e'\";\n\n\t\t\t$rsvprow = $wpdb->get_row( $sql, ARRAY_A );\n\n\t\t}\n\n\t\tif ( $profile ) {\n\n\t\t\t$first = $profile['first'];\n\n\t\t\t$last = $profile['last'];\n\n\t\t}\n\n\t\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\t$rsvp_confirm .= \"\\n\\n\" . wpautop( get_post_meta( $post->ID, '_rsvp_' . $e, true ) );\n\n\t\t\t$rsvpconfirm = '<h3>' . esc_html( __( 'RSVP Recorded', 'rsvpmaker' ) ) . '</h3>\t\n\n' . $rsvp_confirm;\n\n\t\t} elseif ( isset( $_COOKIE[ 'rsvp_for_' . $post->ID ] ) && ! $email_context ) {\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\tif ( $rsvprow ) {\n\n\t\t\t\t$permalink .= ( strpos( $permalink, '?' ) ) ? '&' : '?';\n\n\t\t\t\t$rsvpconfirm = '\n\n<h4>' . $rsvp_options['update_rsvp'] . '?</h4>\t\n\n<p><a href=\"' . esc_url_raw( $permalink . 'update=' . $rsvp_id . '&e=' . $rsvprow['email'] ) . '#rsvpnow\">' . __( 'Yes', 'rsvpmaker' ) . '</a>, ' . __( 'I want to update this record for ', 'rsvpmaker' ) . esc_html( $rsvprow['first'] . ' ' . $rsvprow['last'] ) . '</p>\n\n';\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ( ( $e && isset( $_GET['rsvp'] ) ) || ( is_user_logged_in() && ! $email_context ) ) ) {\n\n\t\t\tif ( $rsvprow && is_single() ) {\n\n\t\t\t\t$master_rsvp = $rsvprow['id'];\n\n\t\t\t\t$rsvpwithdraw = sprintf( '<div><input type=\"checkbox\" checked=\"checked\" name=\"withdraw[]\" value=\"%d\"> %s %s</div>', esc_attr( $rsvprow['id'] ), esc_html( $rsvprow['first'] ), esc_html( $rsvprow['last'] ) );\n\n\t\t\t\t$answer = ( $rsvprow['yesno'] ) ? __( 'Yes', 'rsvpmaker' ) : __( 'No', 'rsvpmaker' );\n\n\t\t\t\t$rsvpconfirm .= '<div class=\"rsvpdetails\"><p>' . __( 'Your RSVP', 'rsvpmaker' ) . \": $answer</p>\\n\";\n\n\t\t\t\t$profile = $details = rsvp_row_to_profile( $rsvprow );\n\n\t\t\t\tif ( isset( $details['total'] ) && $details['total'] ) {\n\n\t\t\t\t\t$invoice_id = (int) get_post_meta( $post->ID, '_open_invoice_' . $rsvp_id, true );\n\n\t\t\t\t\t$paid = 0;\n\n\t\t\t\t\t$paid_amounts = get_post_meta( $post->ID, '_paid_' . $rsvp_id );\n\n\t\t\t\t\tif ( is_array( $paid_amounts ) ) {\n\n\t\t\t\t\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t\t\t\t\t$paid += $payment;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$charge = $details['total'] - $paid;\n\n\t\t\t\t\t$price_display = ( $charge == $details['total'] ) ? $details['total'] : $details['total'] . ' - ' . $paid . ' = ' . $charge;\n\n\t\t\t\t\tif ( $invoice_id ) {\n\n\t\t\t\t\t\tupdate_post_meta( $post->ID, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$invoice_id = 'rsvp' . add_post_meta( $post->ID, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t\tadd_post_meta( $post->ID, '_open_invoice_' . $rsvp_id, $invoice_id );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . __( 'Pay for ', 'rsvpmaker' ) . ' ' . esc_html( $details['payingfor'] ) . ' = ' . number_format( $details['total'], 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] . ' ' . $rsvp_options['paypal_currency'] ) . '</strong></p>';\n\n\t\t\t\t\tif ( $charge != $details['total'] ) {\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . __( 'Previously Paid', 'rsvpmaker' ) . ' ' . number_format( $paid, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] . '</strong></p>';\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . __( 'Balance Owed', 'rsvpmaker' ) . ' ' . number_format( $charge, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] . '</strong></p>';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $charge > 0 ) {\n\n\t\t\t\t\t\t$gateway = get_rsvpmaker_payment_gateway();\n\n\t\t\t\t\t\tif ( $gateway == 'Stripe' ) {\n\n\t\t\t\t\t\t\t$rsvprow['amount'] = $charge;\n\n\t\t\t\t\t\t\t$rsvprow['rsvp_id'] = $rsvp_id;\n\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_to_stripe( $rsvprow );\n\n\t\t\t\t\t\t} \n\t\t\t\t\t\telseif ( $gateway == 'Both Stripe and PayPal' ) {\n\n\t\t\t\t\t\t\t$rsvprow['amount'] = $charge;\n\t\t\t\t\t\t\t$rsvprow['rsvp_id'] = $rsvp_id;\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_to_stripe( $rsvprow );\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p>'. __('Credit card processing by Stripe','rsvpmaker').'</p>';\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p>'. __('Or pay with PayPal','rsvpmaker').'</p>';\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_paypal_button( $charge, $rsvp_options['paypal_currency'], $post->post_title, array('rsvp'=>$rsvp_id,'event' => $post->ID) );\n\t\t\t\t\t\t} \n\t\t\t\t\t\telseif ( $gateway == 'Stripe via WP Simple Pay' ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p>' . do_shortcode( '[stripe amount=\"' . ( $charge * 100 ) . '\" description=\"' . htmlentities( $post->post_title ) . ' ' . esc_html( $details['payingfor'] ) . '\" ]' ) . '</p>';\n\n\t\t\t\t\t\t} elseif ( $gateway == 'Cash or Custom' ) {\n\n\t\t\t\t\t\t\tob_start();\n\n\t\t\t\t\t\t\tdo_action( 'rsvpmaker_cash_or_custom', $charge, $invoice_id, $rsvp_id, $details, $profile, $post );\n\n\t\t\t\t\t\t\t$rsvpconfirm .= ob_get_clean();\n\n\t\t\t\t\t\t} elseif ( $gateway == 'PayPal REST API' ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_paypal_button( $charge, $rsvp_options['paypal_currency'], $post->post_title, array('rsvp'=>$rsvp_id,'event' => $post->ID) );\n\n\t\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! isset( $_GET['rsvp'] ) ) {\n\n\t\t\t\t\t$guestsql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE master_rsvp=' . $rsvprow['id'];\n\n\t\t\t\t\tif ( $results = $wpdb->get_results( $guestsql, ARRAY_A ) ) {\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p>' . __( 'Guests', 'rsvpmaker' ) . ':</p>';\n\n\t\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= $row['first'] . ' ' . $row['last'] . '<br />';\n\n\t\t\t\t\t\t\t$rsvpwithdraw .= sprintf( '<div><input type=\"checkbox\" checked=\"checked\" name=\"withdraw[]\" value=\"%d\"> %s %s</div>', $row['id'], esc_html( $row['first'] ), esc_html( $row['last'] ) );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$rsvpconfirm .= \"</p></div>\\n\";\n\n\t\t\t}\n\t\t} elseif ( $e && isset( $_GET['update'] ) ) {\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE ' . $wpdb->prepare( 'event=%d AND email=%s AND id=%d', $post->ID, $e, intval($_GET['update']) );\n\n\t\t\t$rsvprow = $wpdb->get_row( $sql, ARRAY_A );\n\n\t\t\tif ( $rsvprow ) {\n\n\t\t\t\t$master_rsvp = $rsvprow['id'];\n\n\t\t\t\t$answer = ( $rsvprow['yesno'] ) ? __( 'Yes', 'rsvpmaker' ) : __( 'No', 'rsvpmaker' );\n\n\t\t\t\t$profile = $details = rsvp_row_to_profile( $rsvprow );\n\n\t\t\t}\n\t\t}\n\n\t\t$dateblock = ( strpos( $post->post_content, 'rsvpdateblock]' ) ) ? '' : rsvpmaker_format_event_dates( $post->ID );\n\t\t$event     = get_rsvpmaker_event( $post->ID );\n\t\tif ( $event ) {\n\t\t\t$dur       = $event->display_type;\n\t\t\t$last_time = (int) $event->ts_end;\n\t\t\t$firstrow  = $event->date;\n\t\t} else {\n\t\t\t$dur = $last_time = $firstrow = '';\n\t\t}\n\n\t\tif ( ! empty( $rsvpconfirm ) ) {\n\n\t\t\t$rsvpconfirm = '<div id=\"rsvpconfirm\">' . $rsvpconfirm . '</div>';\n\t\t}\n\n\t\t// $content = '<div>'.$content;\n\n\t\tif ( ! $formonly && ! empty( $dateblock ) ) {\n\n\t\t\t$content = $dateblock . $content;\n\t\t}\n\n\t\tif ( ! empty( $rsvpconfirm ) ) {\n\n\t\t\t$content = $rsvpconfirm . $content;\n\t\t}\n\n\t\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t\t// don't repeat form\n\n\t\t\t$link = get_permalink();\n\n\t\t\t$args = array(\n\t\t\t\t'e'      => $_GET['e'],\n\t\t\t\t'update' => $_GET['rsvp'],\n\t\t\t);\n\n\t\t\t$link = add_query_arg( $args, $link );\n\n\t\t\t$content .= sprintf( '<p><a href=\"%s#rsvpnow\">%s</a>', esc_url_raw( $link ), esc_html( $rsvp_options['update_rsvp'] ) );\n\n\t\t\t$confirmed_content[ $post->ID ] = $content;\n\n\t\t\treturn $content;\n\n\t\t}\n\n\t\t$showbutton = apply_filters( 'rsvpmaker_showbutton', $showbutton );\n\n\t\tif ( isset( $rsvp_on ) && $rsvp_on ) {\n\n\t\t\t// check for responses so far\n\n\t\t\t$sql = 'SELECT first,last,note FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$post->ID AND yesno=1 ORDER BY id DESC\";\n\n\t\t\t$attendees = $wpdb->get_results( $sql );\n\n\t\t\t$total = sizeof( $attendees ); // (int) $wpdb->get_var($sql);\n\n\t\t\tif ( isset( $rsvp_max ) && $rsvp_max ) {\n\n\t\t\t\t$blanks_allowed = ( $total + 1 ) - $rsvp_max;\n\n\t\t\t\tif ( $total >= $rsvp_max ) {\n\n\t\t\t\t\t$too_many = true;\n\t\t\t\t}\n\n\t\t\t\t$blanks_allowed = $rsvp_max - ( $total );\n\n\t\t\t\tif ( ! isset( $answer ) ) {\n\n\t\t\t\t\t$blanks_allowed--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$blanks_allowed = 1000;\n\t\t\t}\n\n\t\t\tif ( $rsvp_count ) {\n\n\t\t\t\t$content .= '<div class=\"signed_up_ajax\" id=\"signed_up_' . esc_attr( $post->ID ) . '\" post=\"' . esc_attr( $post->ID ) . '\"></div>';\n\n\t\t\t}\n\n\t\t\t$now = time();\n\n\t\t\t$rsvplink = get_rsvp_link( $post->ID, true );\n\t\t\tif ( !is_rsvpmaker_deadline_future( $post->ID ) ) {\n\t\t\t\t$content .= '<p class=\"rsvp_status\">' . __( 'RSVP deadline is past', 'rsvpmaker' ) . '</p>';\n\t\t\t} \n\t\t\telseif ( isset( $rsvpstart ) && ( $now < $rsvpstart ) ) {\n\n\t\t\t\t$content .= '<p class=\"rsvp_status\">' . esc_html( __( 'RSVPs accepted starting: ', 'rsvpmaker' ) . utf8_encode( rsvpmaker_date( $rsvp_options['long_date'] ), $rsvpstart ) ) . '</p>';\n\n\t\t\t} elseif ( isset( $too_many ) ) {\n\n\t\t\t\t$content .= '<p class=\"rsvp_status\">' . esc_html( __( 'RSVPs are closed', 'rsvpmaker' ) ) . '</p>';\n\t\t\t\tif ( isset( $rsvpwithdraw ) ) {\n\n\t\t\t\t\t$content .= sprintf( '<h3>%s</h3><form method=\"post\" action=\"%s\">%s<p><button>%s</button></p>%s</form>', esc_html( __( 'To cancel, check the attendee names to be removed', 'rsvpmaker' ) ), esc_url_raw( $rsvplink ), esc_url_raw( $rsvpwithdraw ), __( 'Cancel RSVP', 'rsvpmaker' ), rsvpmaker_nonce('return') );\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif ( ( $rsvp_on && is_admin() && isset( $_GET['page'] ) && ( $_GET['page'] != 'rsvp' ) ) || ( $rsvp_on && is_email_context() ) || ( $rsvp_on && isset( $_GET['load'] ) ) ) { // when loaded into editor\n\n\t\t\t\t$content .= sprintf( $rsvp_options['rsvplink'], $rsvplink );\n\n\t\t\t} elseif ( $rsvp_on && $login_required && ! is_user_logged_in() ) { // show button, coded to require login\n\n\t\t\t\t$content .= sprintf( $rsvp_options['rsvplink'], $rsvplink );\n\n\t\t\t} elseif ( $rsvp_on && ! is_admin() && ! $formonly && ( ! is_single() || $showbutton ) ) { // show button\n\n\t\t\t\t$content .= sprintf( $rsvp_options['rsvplink'], $rsvplink );\n\n\t\t\t} elseif ( $rsvp_on && ( is_single() || is_admin() || $formonly ) ) {\n\n\t\t\t\tob_start();\n\t\t\t\techo '<div id=\"rsvpsection\">';\n\t\t\t\t?>\n\n<form id=\"rsvpform\" action=\"<?php echo esc_url_raw( $permalink ); ?>\" method=\"post\">\n\n\n\n<h3 id=\"rsvpnow\"><?php echo esc_html( $rsvp_options['rsvp_form_title'] ); ?></h3> \n\n\t\t\t\t<?php\n\n\t\t\t\tif ( get_post_meta( $post->ID, '_rsvp_form_show_date', true ) ) {\n\t\t\t\t\techo rsvpmaker_format_event_dates( $post->ID );\n\t\t\t\t}\n\n\t\t\t\tif ( $rsvp_instructions ) {\n\t\t\t\t\techo '<p>' . wp_kses_post( nl2br( $rsvp_instructions ) ) . '</p>';\n\t\t\t\t}\n\n\t\t\t\tif ( $rsvp_show_attendees ) {\n\n\t\t\t\t\t  echo '<p class=\"rsvp_status\">' . __( 'Names of attendees will be displayed publicly, along with the contents of the notes field.', 'rsvpmaker' ) . '</p>';\n\n\t\t\t\t\tif ( $rsvp_show_attendees == 2 ) {\n\n\t\t\t\t\t\techo ' (' . __( 'only for logged in users', 'rsvpmaker' ) . ')';\n\t\t\t\t\t}\n\n\t\t\t\t\techo '</p>';\n\n\t\t\t\t}\n\n\t\t\t\tif ( $rsvp_yesno ) {\n\t\t\t\t\techo '<p>' . __( 'Your Answer', 'rsvpmaker' );\n\t\t\t\t\t?>\n\t\t\t\t\t: <input name=\"yesno\" class=\"radio_buttons\" type=\"radio\" value=\"1\" \n\t\t\t\t\t<?php\n\t\t\t\t\tif ( ! isset( $rsvprow ) || $rsvprow['yesno'] ) {\n\t\t\t\t\t\techo 'checked=\"checked\"';\n\t\t\t\t\t}\n\t\t\t\t\t?>\n /> <?php echo __( 'Yes', 'rsvpmaker' ); ?> <input name=\"yesno\" type=\"radio\"  class=\"radio_buttons\" value=\"0\" \n\t\t\t\t\t<?php\n\t\t\t\t\tif ( isset( $rsvprow['yesno'] ) && ( $rsvprow['yesno'] == 0 ) ) {\n\t\t\t\t\t\techo 'checked=\"checked\"';\n\t\t\t\t\t}\n\t\t\t\t\t?>\n /> \n\t\t\t\t\t<?php\n\t\t\t\t\techo __( 'No', 'rsvpmaker' ) . '</p>';\n\t\t\t\t} else {\n\t\t\t\t\techo '<input name=\"yesno\" type=\"hidden\" value=\"1\" />';\n\t\t\t\t}\n\n\t\t\t\trsvphoney_ui();\n\n\t\t\t\tif ( $dur && ( $slotlength = ! empty( $custom_fields['_rsvp_timeslots'][0] ) ) ) {\n\n\t\t\t\t\t?>\n\n<div><?php echo __( 'Number of Participants', 'rsvpmaker' ); ?>: <select name=\"participants\">\n\n\t<option value=\"1\">1</option>\n\n\t<option value=\"2\">2</option>\n\n\t<option value=\"3\">3</option>\n\n\t<option value=\"4\">4</option>\n\n\t<option value=\"5\">5</option>\n\n\t<option value=\"6\">6</option>\n\n\t<option value=\"7\">7</option>\n\n\t<option value=\"8\">8</option>\n\n\t<option value=\"9\">9</option>\n\n\t<option value=\"10\">10</option>\n\n  </select></div>\n\n\n\n<div><?php echo __( 'Choose timeslots', 'rsvpmaker' ); ?></div>\n\n\t\t\t\t\t<?php\n\n\t\t\t\t\t$t = rsvpmaker_strtotime( $firstrow['datetime'] );\n\n\t\t\t\t\t$dur = $firstrow['duration'];\n\n\t\t\t\t\tif ( strpos( $dur, ':' ) ) {\n\n\t\t\t\t\t\t$dur = rsvpmaker_strtotime( $dur );\n\t\t\t\t\t}\n\n\t\t\t\t\t$day = rsvpmaker_date( 'j', $t );\n\n\t\t\t\t\t$month = date( 'n', $t );\n\n\t\t\t\t\t$year = date( 'Y', $t );\n\n\t\t\t\t\t$hour = rsvpmaker_date( 'G', $t );\n\n\t\t\t\t\t$minutes = rsvpmaker_date( 'i', $t );\n\n\t\t\t\t\t$slotlength = explode( ':', $slotlength );\n\n\t\t\t\t\t$min_add = $slotlength[0] * 60;\n\n\t\t\t\t\t$min_add = ( empty( $slotlength[1] ) ) ? $min_add : ( $min_add + $slotlength[1] );\n\n\t\t\t\t\tfor ( $i = 0; ( $slot = rsvpmaker_mktime( $hour, $minutes + ( $i * $min_add ), 0, $month, $day, $year ) ) < $dur; $i++ ) {\n\n\t\t\t\t\t\t$sql = 'SELECT SUM(participants) FROM ' . $wpdb->prefix . \"rsvp_volunteer_time WHERE time=$slot AND event = $post->ID\";\n\n\t\t\t\t\t\t$signups = ( $signups = $wpdb->get_var( $sql ) ) ? $signups : 0;\n\n\t\t\t\t\t\techo '<div><input type=\"checkbox\" name=\"timeslot[]\" value=\"' . $slot . '\" /> ' . rsvpmaker_date( ' ' . $rsvp_options['time_format'], $slot ) . \" $signups participants signed up</div>\";\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $custom_fields['_per'][0] ) && $custom_fields['_per'][0] ) {\n\n\t\t\t\t\t$pf = '';\n\n\t\t\t\t\t$options = '';\n\n\t\t\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\n\t\t\t\t\tforeach ( $per['unit'] as $index => $value ) {\n\n\t\t\t\t\t\tif ( ( $index == 0 ) && empty( $per['price'][ $index ] ) ) { // no price = $0 where no other price is specified\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( empty( $per['price'][ $index ] ) && ( $per['price'][ $index ] != 0 ) ) {\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t$deadstring = '';\n\n\t\t\t\t\t\tif ( ! empty( $per['price_deadline'][ $index ] ) ) {\n\n\t\t\t\t\t\t\t$deadline = (int) $per['price_deadline'][ $index ];\n\n\t\t\t\t\t\t\tif ( time() > $deadline ) {\n\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$deadstring = ' (' . __( 'until', 'rsvpmaker' ) . ' ' . rsvpmaker_date( $rsvp_options['short_date'] . ' ' . $rsvp_options['time_format'], $deadline ) . ')';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$display[ $index ] = $value . ' @ ' . ( ( $rsvp_options['paypal_currency'] == 'USD' ) ? '$' : $rsvp_options['paypal_currency'] ) . ' ' . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . $deadstring;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset( $custom_fields['_rsvp_count_party'][0] ) && $custom_fields['_rsvp_count_party'][0] ) {\n\n\t\t\t\t\t\t$number_prices = sizeof( $display );\n\n\t\t\t\t\t\tif ( $number_prices ) {\n\n\t\t\t\t\t\t\tif ( $number_prices == 1 ) { // don't show options, just one choice\n\n\t\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\t\t\t\t\t\t\t\t\tprintf( '<h3 id=\"guest_count_pricing\"><input type=\"hidden\" name=\"guest_count_price\" value=\"%s\">%s</h3>', $index, esc_html( $value ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t$s = ( isset( $profile['pricechoice'] ) && ( $index == $profile['pricechoice'] ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t\t\t\t\t$options .= sprintf( '<option value=\"%d\" %s>%s</option>', $index, $s, esc_html( $value ) );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tprintf( '<div id=\"guest_count_pricing\">' . __( 'Options', 'rsvpmaker' ) . ': <select name=\"guest_count_price\"  id=\"guest_count_price\">%s</select></div>', $options );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( sizeof( $display ) ) {\n\n\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\n\t\t\t\t\t\t\t\tif ( empty( $per['price'][ $index ] ) && ( $per['price'][ $index ] != 0 ) ) {\n\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t\t\t$unit = $per['unit'][ $index ];\n\n\t\t\t\t\t\t\t\t$pf .= '<div class=\"paying_for_tickets\"><select name=\"payingfor[' . $index . ']\" class=\"tickets\"><option value=\"0\">0</option><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option><option value=\"6\">6</option><option value=\"7\">7</option><option value=\"8\">8</option><option value=\"9\">9</option><option value=\"10\">10</option></select><input type=\"hidden\" name=\"unit[' . $index . ']\" value=\"' . esc_attr( $unit ) . '\" />' . esc_html( $value ) . '<input type=\"hidden\" name=\"price[' . $index . ']\" value=\"' . esc_attr( $price ) . '\" /></div>' . \"\\n\";\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! empty( $pf ) ) {\n\n\t\t\t\t\t\t\techo '<h3>' . __( 'Paying For', 'rsvpmaker' ) . '</h3><p>' . $pf . \"</p>\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// coupon code\n\n\t\t\t\t\tif ( ! empty( $custom_fields['_rsvp_coupon_code'][0] ) ) {\n\n\t\t\t\t\t\tprintf( '<p>Coupon Code: <input type=\"text\" name=\"coupon_code\" size=\"10\" /><br /><em>If you have a coupon code, enter it above</em>.</p>' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbasic_form( $form );\n\n\t\t\t\tif ( isset( $custom_fields['_rsvp_captcha'][0] ) && $custom_fields['_rsvp_captcha'][0] ) {\n\n\t\t\t\t\t?>\n\n<p>          <img src=\"<?php echo plugins_url( '/captcha/captcha_ttf.php', __FILE__ ); ?>\" alt=\"CAPTCHA image\">\n\n<br />\n\n\t\t\t\t\t<?php esc_html_e( 'Type the hidden security message', 'rsvpmaker' ); ?>:<br />                    \n\n<input maxlength=\"10\" size=\"10\" name=\"captcha\" type=\"text\" autocomplete=\"off\" />\n\n</p>\n\n\t\t\t\t\t<?php\n\n\t\t\t\t\tdo_action( 'rsvpmaker_after_captcha' );\n\n\t\t\t\t}\n\t\t\t\tglobal $rsvp_required_field;\n\t\t\t\t$rsvp_required_field['email'] = 'email';// at a minimum\t\t\t\n\n\t\t\t\trsvpmaker_recaptcha_output();\n\t\t\t\tif ( isset( $rsvp_options['privacy_confirmation'] ) && ( $rsvp_options['privacy_confirmation'] == '1' ) ) {\n\n\t\t\t\t\techo '<p><input type=\"checkbox\" name=\"profile[privacy_consent]\" id=\"privacy_consent\" value=\"1\" /> ' . wp_kses_post( $rsvp_options['privacy_confirmation_message'] ) . '</p>';\n\n\t\t\t\t\tif ( ! in_array( 'privacy_consent', $rsvp_required_field ) ) {\n\n\t\t\t\t\t\t$rsvp_required_field[] = 'privacy_consent';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $rsvp_required_field ) ) {\n\n\t\t\t\t\techo '<div id=\"jqerror\"></div><input type=\"hidden\" name=\"required\" id=\"required\" value=\"' . esc_attr( implode( ',', $rsvp_required_field ) ) . '\" />';\n\t\t\t\t}\n\n\t\t\t\t?>\n\n\t\t<p> \n\n\t\t  <input type=\"submit\" id=\"rsvpsubmit\" name=\"Submit\" value=\"<?php esc_html_e( 'Submit', 'rsvpmaker' ); ?>\" /> \n\n\t\t</p> \n\n<input type=\"hidden\" name=\"rsvp_id\" id=\"rsvp_id\" value=\"\n\t\t\t\t<?php\n\t\t\t\tif ( isset( $profile['id'] ) ) {\n\t\t\t\t\techo esc_attr( $profile['id'] );}\n\t\t\t\t?>\n\" /><input type=\"hidden\" name=\"event\" id=\"event\" value=\"<?php echo esc_attr( $post->ID ); ?>\" /><?php rsvpmaker_nonce(); ?>\n\n</form>\t\n\n</div>\n\n\t\t\t\t<?php\n\t\t\t\t$content .= ob_get_clean();\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['err'] ) ) {\n\n\t\t\t\t$error = sanitize_text_field($_GET['err']);\n\n\t\t\t\t$content = '<div id=\"rsvpconfirm\" >\n\n<h3 class=\"rsvperror\">' . __( 'Error', 'rsvpmaker' ) . '<br />' . esc_attr( $error ) . '</h3>\n\n<p>' . __( 'Please correct your submission.', 'rsvpmaker' ) . '</p>\n\n</div>\n\n' . $content;\n\n\t\t\t}\n\n\t\t\tif ( ( ( $rsvp_show_attendees == 1 ) || ( ( $rsvp_show_attendees == 2 ) && is_user_logged_in() ) ) && $total && ! isset( $_GET['load'] ) && ! isset( $_POST['profile'] ) ) {\n\n\t\t\t\t// use api\n\n\t\t\t\t$content .= '<p><button class=\"rsvpmaker_show_attendees\" post_id=\"' . esc_attr( $post->ID ) . '\" >' . __( 'Show Attendees', 'rsvpmaker' ) . '</button></p>\n\n<div id=\"attendees-' . esc_attr( $post->ID ) . '\"></div>';\n\n\t\t\t}\n\t\t} // end if($rsvp_on)\n\n\t\t$terms = get_the_term_list( $post->ID, 'rsvpmaker-type', '', ', ', ' ' );\n\n\t\tif ( $terms && is_string( $terms ) ) {\n\n\t\t\t$content .= '<p class=\"rsvpmeta\">' . __( 'Event Types', 'rsvpmaker' ) . ': ' . $terms . '</p>';\n\t\t}\n\n\t\t$content = apply_filters( 'rsvpmaker_event_content_bottom', $content, $custom_fields );\n\n\t\treturn $content;\n\n\t}\n} // end event content\n\nfunction rsvp_report_shortcode( $atts ) {\n\n\tif ( ! isset( $atts['public'] ) || ( $atts['public'] == '0' ) ) {\n\n\t\tif ( ! is_user_logged_in() ) {\n\n\t\t\treturn sprintf( /* translators: login link */    __( 'You must <a href=\"%s\">login</a> to view this.', 'rsvpmaker' ), login_redirect( $_SERVER['REQUEST_URI'] ) );\n\t\t}\n\t}\n\n\tglobal $post;\n\n\t$permalink = get_permalink( $post->ID );\n\n\t$permalink .= ( strpos( $permalink, '?' ) ) ? '&rsvp_print=1&' . rsvpmaker_nonce('query') : '?rsvp_print=1&' . rsvpmaker_nonce('query');\n\n\tob_start();\n\n\trsvp_report();\n\n\t$report = ob_get_clean();\n\n\treturn str_replace( admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp' ), $permalink, $report );\n\n}\n\n\n\nif ( ! function_exists( 'rsvp_report' ) ) {\n\n\tfunction rsvp_report() {\n\n\t\tglobal $wpdb, $post, $rsvp_options;\n\t\t$daily_count = [];\n\n\t\t$wpdb->show_errors();\n\n\t\tif ( isset( $_GET['event'] ) ) {\n\n\t\t\t$post = get_post( (int) $_GET['event'] );\n\t\t}\n\n\t\tif ( isset( $_POST['move_rsvp'] ) && isset( $_POST['move_to'] ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  ) {\n\n\t\t\tif ( empty( $_POST['move_rsvp'] ) ) {\n\n\t\t\t\tprintf( '<div class=\"notice notice-error\"><p>%s</p></option>', __( 'No RSVP entry selected', 'rsvpmaker' ) );\n\n\t\t\t} else {\n\n\t\t\t\t$move_rsvp = (int) $_POST['move_rsvp'];\n\t\t\t\t$move_to   = (int) $_POST['move_to'];\n\t\t\t\t$sql       = 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET event=$move_to WHERE id=$move_rsvp \";\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t\t$sql = 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET event=$move_to WHERE master_id=$move_rsvp \";\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t}\n\t\t}\n\n\t\t$guest_check = '';\n\n\t\t$wpdb->show_errors();\n\n\t\t?>\n\n<div class=\"wrap\"> \n\n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n\n<h2>\n\t\t<?php\n\t\t$param = ( empty( $_GET['limit'] ) ) ? '' : sanitize_text_field($_GET['limit']) . ' ' . sanitize_text_field($_GET['detail']);\n\n\t\tif ( sizeof( $_GET ) > 2 ) {\n\t\t\tprintf( '<a href=\"%s\">%s</a> - %s %s', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp' ), __( 'RSVP Report', 'rsvpmaker' ), __( 'Details', 'rsvpmaker' ), $param );\n\t\t} else {\n\t\t\tesc_html_e( 'RSVP Report', 'rsvpmaker' );\n\t\t}\n\t\t?>\n\t\t</h2> \n\n\t\t<?php\n\n\t\tif ( ! empty( $_GET['fields'] ) ) {\n\n\t\t\trsvp_report_table();\n\n\t\t\techo '</div>';\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( isset( $_POST['deletenow'] ) && current_user_can( 'edit_others_posts' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  ) {\n\n\t\t\tif (  ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t\tdie( 'failed security check' );\n\t\t\t}\n\n\t\t\tforeach ( $_POST['deletenow'] as $d ) {\n\n\t\t\t\t$wpdb->query( 'DELETE FROM ' . $wpdb->prefix . \"rsvpmaker where id=\".intval($d) );\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_GET['delete'] ) && current_user_can( 'edit_others_posts' ) ) {\n\n\t\t\t$delete = intval($_GET['delete']);\n\n\t\t\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$delete\" );\n\n\t\t\t$guests = $wpdb->get_results( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE master_rsvp=$delete\" );\n\n\t\t\tif ( is_array( $guests ) ) {\n\n\t\t\t\tforeach ( $guests as $guest ) {\n\n\t\t\t\t\t$guestcheck .= sprintf( '<input type=\"checkbox\" name=\"deletenow[]\" value=\"%s\" checked=\"checked\" /> Delete guest: %s %s<br />', $guest->id, esc_html( $guest->first ), esc_html( $guest->last ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo sprintf(\n\t\t\t\t'<form action=\"%s\" method=\"post\">\n\n<h2 style=\"color: red;\">' . __( 'Confirm Delete for', 'rsvpmaker' ) . ' %s %s</h2>\n\n<input type=\"hidden\" name=\"deletenow[]\" value=\"%s\"  />\n\n%s\n\n%s\n\n<input type=\"submit\" style=\"color: red;\" value=\"' . __( 'Delete Now', 'rsvpmaker' ) . '\"  />\n\n</form>\n\n',\n\t\t\t\tadmin_url() . 'edit.php?post_type=rsvpmaker&page=rsvp',\n\t\t\t\tesc_html( $row->first ),\n\t\t\t\tesc_html( $row->last ),\n\t\t\t\tesc_attr( $delete ),\n\t\t\t\tesc_attr( $guestcheck ),\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\n\t\t}\n\n\t\tif ( isset( $_GET['event'] ) ) {\n\n\t\t\t$eventid   = (int) $_GET['event'];\n\t\t\t$permalink = get_permalink( $eventid );\n\n\t\t\t$event_row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker_event WHERE event=$eventid\" );\n\n\t\t\t$date = $event_row->date;\n\n\t\t\t$t = rsvpmaker_strtotime( $date );\n\n\t\t\t$title = '<a target=\"_blank\" href=\"' . $permalink . '\">' . esc_html( $event_row->post_title ) . ' ' . rsvpmaker_date( $rsvp_options['long_date'], $t ) . '</a>';\n\n\t\t\techo '<h2>' . __( 'RSVPs for', 'rsvpmaker' ) . ' ' . $title . \"</h2>\\n\";\n\n\t\t\tif ( ! isset( $_GET['rsvp_print'] ) ) {\n\n\t\t\t\techo '<div style=\"float: right; margin-left: 15px; margin-bottom: 15px;\"><a href=\"edit.php?post_type=rsvpmaker&page=rsvp\">' . __( 'Show Events List', 'rsvpmaker' ) . '</a> |\n\n<a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&rsvp_order=alpha\">Alpha Order</a> <a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&rsvp_order=timestamp\">Most Recent First</a> | <a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&rsvp_order=alpha\">Alpha Order</a>\n\n\t\t</div>';\n\n\t\t//printf('<p>%d registered</p>',sizeof($rsvps));\n\n\t\t\t\techo '<p><a href=\"' . sanitize_text_field($_SERVER['REQUEST_URI']) . '&print_rsvp_report=1&rsvp_print=1&' . rsvpmaker_nonce('query') . '\" target=\"_blank\" >Format for printing</a></p>';\n\n\t\t\t\techo '<p><a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&paypal_log=1\">Show PayPal Log</a></p>';\n\n\t\t\t\tif ( isset( $phpexcel_enabled ) ) {\n\n\t\t\t\t\techo '<p><a href=\"#excel\">Download to Excel</a></p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $_GET['paypal_log'] ) ) {\n\n\t\t\t\t$log = get_post_meta( $eventid, '_paypal_log' );\n\n\t\t\t\tif ( $log ) {\n\n\t\t\t\t\techo '<div style=\"border: thin solid red; padding: 5px;\"><strong>PayPal</strong><br />';\n\n\t\t\t\t\techo implode( '', $log );\n\n\t\t\t\t\techo '</div>';\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $_POST['paymentAmount'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t\t$rsvp_id = (int) $_POST['rsvp_id'];\n\n\t\t\t\t$paid = (float) $_POST['paymentAmount'];\n\n\t\t\t\tadmin_payment( $rsvp_id, $paid );\n\n\t\t\t}\n\n\t\t\tif ( ! empty( $_POST['markpaid'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t\tforeach ( $_POST['markpaid'] as $value ) {\n\t\t\t\t\t$value = sanitize_text_field($value);\n\t\t\t\t\t$parts = explode( ':', $value );\n\t\t\t\t\tadmin_payment( $parts[0], $parts[1] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE ' . $wpdb->prepare( 'id=%d', intval($_GET['rsvp']) );\n\n\t\t\t\t$rsvprow = $wpdb->get_row( $sql, ARRAY_A );\n\n\t\t\t\tif ( $rsvprow ) {\n\n\t\t\t\t\t$master_rsvp = $rsvprow['id'];\n\n\t\t\t\t\t$answer = ( $rsvprow['yesno'] ) ? __( 'Yes', 'rsvpmaker' ) : __( 'No', 'rsvpmaker' );\n\n\t\t\t\t\tif ( empty( $rsvpconfirm ) ) {\n\n\t\t\t\t\t\t$rsvpconfirm = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvpconfirm .= '<div style=\"border: medium solid #555; padding: 10px;\"><p>' . esc_html( $rsvprow['first'] . ' ' . $rsvprow['last'] ) . \": $answer</p>\\n\";\n\n\t\t\t\t\t$profile = $details = rsvp_row_to_profile( $rsvprow );\n\n\t\t\t\t\tif ( isset( $details['total'] ) && $details['total'] ) {\n\n\t\t\t\t\t\t$rsvp_id = (int) $_GET['rsvp'];\n\n\t\t\t\t\t\t$invoice_id = (int) get_post_meta( $eventid, '_open_invoice_' . $rsvp_id, true );\n\n\t\t\t\t\t\t$paid = $rsvprow['amountpaid'];\n\n\t\t\t\t\t\t$charge = $details['total'] - $paid;\n\n\t\t\t\t\t\t$price_display = ( $charge == $details['total'] ) ? $details['total'] : $details['total'] . ' - ' . $paid . ' = ' . $charge;\n\n\t\t\t\t\t\tif ( $invoice_id ) {\n\n\t\t\t\t\t\t\tupdate_post_meta( $eventid, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$invoice_id = 'rsvp' . add_post_meta( $eventid, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t\t\tadd_post_meta( $eventid, '_open_invoice_' . $rsvp_id, $invoice_id );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . esc_html( __( 'Record Payment', 'rsvpmaker' ) . ' ' . esc_html( $details['payingfor'] ) . ' = ' . number_format( $details['total'], 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] ) . '</strong></p>';\n\n\t\t\t\t\t\tif ( $charge != $details['total'] ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . esc_html( __( 'Previously Paid', 'rsvpmaker' ) . ' ' . number_format( $paid, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] ) . '</strong></p>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $charge > 0 ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= '<form method=\"post\" name=\"donationform\" id=\"donationform\" action=\"' . admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . $eventid ) . '\">\n\n<p>' . __( 'Amount', 'rsvpmaker' ) . ': ' . $charge . '<input name=\"markpaid[]\" type=\"hidden\" id=\"markpaid_' . $rsvp_id . '\"  value=\"' . $rsvp_id . ':' . $charge . '\"> ' . $rsvp_options['paypal_currency'] . '</p><input name=\"rsvp_id\" type=\"hidden\" id=\"rsvp_id\" value=\"' . $rsvp_id . '\" ><input type=\"submit\" name=\"Submit\" value=\"' . __( 'Mark Paid', 'rsvpmaker' ) . '\"></p>\n'.rsvpmaker_nonce('return').'\n</form>';\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvpconfirm .= '</div>';\n\n\t\t\t\t\techo $rsvpconfirm;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['edit_rsvp'] ) && current_user_can( 'edit_rsvpmakers' ) ) {\n\n\t\t\t\tadmin_edit_rsvp( $_GET['edit_rsvp'], $eventid );\n\t\t\t}\n\n\t\t\t$rsvp_order = ( isset( $_GET['rsvp_order'] ) && ( $_GET['rsvp_order'] == 'alpha' ) ) ? ' ORDER BY yesno DESC, last, first' : ' ORDER BY yesno DESC, timestamp DESC';\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid $rsvp_order\";\n\n\t\t\t$wpdb->show_errors();\n\n\t\t\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t\tformat_rsvp_details( $results );\n\n\t\t} elseif ( isset( $_GET['detail'] ) ) {\n\n\t\t\tif ( ! isset( $_GET['rsvp_print'] ) ) {\n\n\t\t\t\techo '<p><a href=\"' . admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp' ) . '\">' . __( 'Show Events List', 'rsvpmaker' ) . '</a> | <a href=\"' . sanitize_text_field($_SERVER['REQUEST_URI']) . '&print_rsvp_report=1&rsvp_print=1&' . rsvpmaker_nonce('query') . '\" target=\"_blank\" >' . __( 'Format for printing', 'rsvpmaker' ) . '</a></p>';\n\t\t\t}\n\n\t\t\t$limit = (int) $_GET['limit'];\n\n\t\t\tif ( $_GET['detail'] == 'future' ) {\n\n\t\t\t\t$future = get_future_events( '', $limit );\n\n\t\t\t} else {\n\t\t\t\t$future = get_past_events( '', $limit );\n\t\t\t}\n\n\t\t\t$all_emails = array();\n\n\t\t\tif ( is_array( $future ) ) {\n\n\t\t\t\tforeach ( $future as $f ) {\n\n\t\t\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE event=' . $f->ID . ' ORDER BY yesno DESC, timestamp DESC';\n\n\t\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t\t$rsvps = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t\t\t\tif ( ! empty( $rsvps ) ) {\n\n\t\t\t\t\t\tprintf( '<h1>RSVPs for <a target=\"_blank\" href=\"%s\">%s %s</a></h1>', get_permalink( $f->ID ), esc_html( $f->post_title ), esc_html( $f->date ) );\n\n\t\t\t\t\t\t$emails = format_rsvp_details( $rsvps );\n\n\t\t\t\t\t\tif ( ! empty( $emails ) ) {\n\n\t\t\t\t\t\t\t$all_emails = array_merge( $all_emails, $emails );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $all_emails ) ) {\n\n\t\t\t\t$attendees = implode( ', ', $all_emails );\n\n\t\t\t\t$label = __( 'Email Attendees (all)', 'rsvpmaker' );\n\n\t\t\t\tprintf( '<p><a href=\"mailto:%s\">%s: %s</a>', esc_attr( $attendees ), esc_html( $label ), esc_html( $attendees ) );\n\n\t\t\t}\n\t\t} else { // show events list\n\n\t\t\t$eventlist = '';\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker_event ';\n\n\t\t\tif ( ! isset( $_GET['show'] ) ) {\n\n\t\t\t\t$sql2 = $sql . ' WHERE date < CURDATE( ) ORDER BY date DESC LIMIT 0,10';\n\n\t\t\t\t$sql .= ' WHERE date > CURDATE( ) ORDER BY date';\n\n\t\t\t\t$eventlist .= '<p>' . __( 'Showing future and recent events', 'rsvpmaker' ) . ' (<a href=\"' . sanitize_text_field($_SERVER['REQUEST_URI']) . '&show=all\">show all</a>)<p>';\n\n\t\t\t\t?>\n\n<form action=\"edit.php\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n\t\t\t\t<?php esc_html_e( 'Show details for', 'rsvpmaker' ); ?>\n\n<input type=\"hidden\" name=\"page\" value=\"rsvp\">\n\n<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\n<select name=\"limit\">\n\n<option value=\"5\">5</option>\n\n<option value=\"10\">10</option>\n\n<option value=\"25\">25</option>\n\n<option value=\"50\">50</option>\n\n<option value=\"100\">100</option>\n\n</select>\n\n<select name=\"detail\">\n\n<option value=\"past\">past</option>\n\n<option value=\"future\">future</option>\n\n</select> events \n\n<button><?php esc_html_e( 'Show', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\t\t\t\t<?php\n\n\t\t\t} else {\n\n\t\t\t\t$eventlist .= '<p>' . esc_html( __( 'Showing past events (for which RSVPs were collected) as well as upcoming events.', 'rsvpmaker' ) ) . '<p>';\n\n\t\t\t\t$sql .= ' ORDER BY date DESC';\n\n\t\t\t}\n\n\t\t\t$wpdb->show_errors();\n\n\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\tif ( $results ) {\n\n\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\tif ( empty( $events[ $row->event ] ) ) {\n\n\t\t\t\t\t\t$events[ $row->event ] = $row->post_title;\n\t\t\t\t\t}\n\n\t\t\t\t\t$t = rsvpmaker_strtotime( $row->date );\n\n\t\t\t\t\t$events[ $row->event ] .= ' ' . rsvpmaker_date( $rsvp_options['long_date'], $t );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $sql2 ) ) {\n\n\t\t\t\t$results = $wpdb->get_results( $sql2 );\n\n\t\t\t\tif ( $results ) {\n\n\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\tif ( empty( $events[ $row->event ] ) ) {\n\n\t\t\t\t\t\t\t$events[ $row->event ] = $row->post_title;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$t = rsvpmaker_strtotime( $row->date );\n\n\t\t\t\t\t\t$events[ $row->event ] .= ' ' . rsvpmaker_date( $rsvp_options['long_date'], $t );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $events ) ) {\n\n\t\t\t\tforeach ( $events as $post_id => $event ) {\n\n\t\t\t\t\t$eventlist .= \"<h3>$event</h3>\";\n\n\t\t\t\t\t$sql = 'SELECT count(*) FROM ' . $wpdb->prefix . 'rsvpmaker WHERE yesno=1 AND event=' . intval( $post_id );\n\n\t\t\t\t\tif ( $rsvpcount = $wpdb->get_var( $sql ) ) {\n\n\t\t\t\t\t\t$eventlist .= '<p><a href=\"' . admin_url() . 'edit.php?post_type=rsvpmaker&page=rsvp&event=' . intval( $post_id ) . '\">' . __( 'RSVP', 'rsvpmaker' ) . ' ' . __( 'Yes', 'rsvpmaker' ) . ': ' . $rsvpcount . '</a></p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $eventlist && ! isset( $_GET['rsvp_print'] ) ) {\n\t\t\t\techo '<h2>' . esc_html( __( 'Events', 'rsvpmaker' ) ) . \"</h2>\\n\" . $eventlist;\n\t\t\t}\n\t\t}\n\n\t}\n} // end rsvp report\n\n\n\nif ( ! function_exists( 'format_rsvp_details' ) ) {\n\n\tfunction format_rsvp_details( $results, $editor_options = true ) {\n\n\t\tglobal $rsvp_options, $wpdb;\n\t\t$update      = false;\n\t\t\n\t\t$missing = $owed_list = '';\n\n\t\t$members = $nonmembers = 0;\n\n\t\tif ( $results ) {\n\n\t\t\t$fields = array( 'yesno', 'first', 'last', 'email', 'guestof', 'amountpaid' );\n\t\t}\n\n\t\tprintf('<p>%d registered</p>',sizeof($results));\n\n\t\tforeach ( $results as $index => $row ) {\n\n\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\tif ( $row['yesno'] ) {\n\n\t\t\t\t$emails[ $row['email'] ] = $row['email'];\n\t\t\t}\n\n\t\t\tif ( get_user_by( 'email', $row['email'] ) ) {\n\n\t\t\t\t$members++;\n\n\t\t\t} else {\n\t\t\t\t$nonmembers++;\n\t\t\t}\n\n\t\t\techo '<h3>' . esc_html( $row['yesno'] . ' ' . $row['first'] . ' ' . $row['last'] . ' ' . $row['email'] );\n\n\t\t\tif ( $row['guestof'] ) {\n\n\t\t\t\techo esc_html( ' (' . __( 'guest of', 'rsvpmaker' ) . ' ' . $row['guestof'] . ')' );\n\t\t\t}\n\n\t\t\techo '</h3>';\n\n\t\t\tif ( $row['master_rsvp'] ) {\n\n\t\t\t\tif ( isset( $guestcount[ $row['master_rsvp'] ] ) ) {\n\n\t\t\t\t\t$guestcount[ $row['master_rsvp'] ]++;\n\n\t\t\t\t} else {\n\t\t\t\t\t$guestcount[ $row['master_rsvp'] ] = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$master_row[ $row['id'] ] = $row['first'] . ' ' . $row['last'];\n\t\t\t}\n\n\t\t\tif ( $row['details'] ) {\n\t\t\t\t$details = unserialize( $row['details'] );\n\t\t\t}\n\n\t\t\tif ( isset( $details['total'] ) ) {\n\t\t\t\techo '<div style=\"font-weight: bold;\">' . __( 'Total', 'rsvpmaker' ) . ': ' . esc_html( $details['total'] ) . '</div>';\n\t\t\t}\n\n\t\t\tif ( ! empty( $details['payingfor'] ) ) {\n\t\t\t\techo '<div style=\"font-weight: bold;\">' . __( 'Paying For', 'rsvpmaker' ) . ': ' . esc_html( $details['payingfor'] ) . '</div>';\n\t\t\t}\n\n\t\t\tif ( $row['amountpaid'] > 0 ) {\n\t\t\t\techo '<div style=\"color: #006400;font-weight: bold;\">' . __( 'Paid', 'rsvpmaker' ) . ': ' . esc_html( $row['amountpaid'] ) . '</div>';\n\t\t\t}\n\n\t\t\tif ( isset( $details['total'] ) ) {\n\t\t\t\t$owed = $details['total'] - $row['amountpaid'];\n\t\t\t\tif ( $owed ) {\n\t\t\t\t\techo '<div style=\"color: red;font-weight: bold;\">' . __( 'Owed', 'rsvpmaker' ) . ': ' . $owed . '</div>';\n\n\t\t\t\t\tif ( $owed > 0 ) {\n\n\t\t\t\t\t\t$owed_list .= sprintf( '<p><input type=\"checkbox\" name=\"markpaid[]\" value=\"%s:%s\">%s %s %s %s</p>', esc_attr( $row['id'] ), esc_html( $owed ), esc_html( $row['first'] ), esc_html( $row['last'] ), esc_html( $owed ), __( 'Owed', 'rsvpmaker' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '<p>';\n\n\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t$details    = unserialize( $row['details'] );\n\t\t\t\t$newdetails = array();\n\t\t\t\tif ( is_array( $details ) ) {\n\t\t\t\t\tforeach ( $details as $name => $value ) {\n\n\t\t\t\t\t\tif ( $value ) {\n\t\t\t\t\t\t\tif ( strpos( $name, ' ' ) ) {\n\t\t\t\t\t\t\t\t$update = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$label = get_post_meta( $row['event'], 'rsvpform' . $name, true );\n\t\t\t\t\t\t\tif ( $label ) {\n\t\t\t\t\t\t\t\t$name = $label;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\techo esc_attr($name) . ': ' . esc_attr( $value ) . '<br />';\n\n\t\t\t\t\t\t\t$field                = preg_replace( '/[^a-z0-9_]/', '_', strtolower( $name ) );\n\t\t\t\t\t\t\t$newdetails[ $field ] = $value;\n\t\t\t\t\t\t\tif ( ! in_array( $name, $fields ) ) {\n\t\t\t\t\t\t\t\t$fields[] = $name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $row['note'] ) {\n\n\t\t\t\techo 'note: ' . nl2br( esc_attr( $row['note'] ) ) . '<br />';\n\t\t\t}\n\n\t\t\t$t = rsvpmaker_strtotime( $row['timestamp'] );\n\n\t\t\techo 'posted: ' . rsvpmaker_date( $rsvp_options['short_date'], $t );\n\t\t\t\n\t\t\tif(isset($daily_count[rsvpmaker_date( 'Y-m-d', $t )]))\n\t\t\t\t$daily_count[rsvpmaker_date( 'Y-m-d', $t )]++;\n\t\t\telse\n\t\t\t\t$daily_count[rsvpmaker_date( 'Y-m-d', $t )] = 1;\n\n\t\t\techo '</p>';\n\n\t\t\tif ( $update ) {\n\t\t\t\t$sql = $wpdb->prepare( 'UPDATE ' . $wpdb->prefix . 'rsvpmaker SET details=%s WHERE id=%d', serialize( $newdetails ), $row['id'] );\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t}\n\n\t\t\tif ( ! isset( $_GET['rsvp_print'] ) && current_user_can( 'edit_others_posts' ) && $editor_options ) {\n\n\t\t\t\techo sprintf( '<p><a href=\"%s&delete=%d\">Delete record for: %s %s</a></p>', admin_url() . 'edit.php?post_type=rsvpmaker&page=rsvp', $row['id'], esc_attr( $row['first'] ), esc_attr( $row['last'] ) );\n\t\t\t}\n\n\t\t\t$userrsvps[] = $row['user_id'];\n\n\t\t}\n\n\t\tif ( ! empty( $rsvp_options['missing_members'] ) ) {\n\n\t\t\t$blogusers = get_users( 'blog_id=1&orderby=nicename' );\n\n\t\t\tforeach ( $blogusers as $user ) {\n\n\t\t\t\tif ( in_array( $user->ID, $userrsvps ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$userdata = get_userdata( $user->ID );\n\n\t\t\t\t$missing .= \"<p>$userdata->display_name $userdata->user_email</p>\\n\";\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $missing ) ) {\n\n\t\t\techo '<hr /><h3>' . __( 'Members Who Have Not Responded', 'rsvpmaker' ) . '</h3>' . esc_html( $missing );\n\n\t\t}\n\n\t\tif ( ! empty( $emails ) ) {\n\n\t\t\t$emails = apply_filters( 'rsvp_yes_emails', $emails );\n\t\t}\n\n\t\tif ( isset( $emails ) && is_array( $emails ) ) {\n\n\t\t\t$emails = array_filter( $emails ); // removes empty elements\n\n\t\t\t$attendees = implode( ', ', $emails );\n\n\t\t\t$label = __( 'Email Attendees', 'rsvpmaker' );\n\n\t\t\tprintf( '<p><a href=\"mailto:%s\">%s: %s</a>', esc_attr( $attendees ), esc_html( $label ), esc_html( $attendees ) );\n\n\t\t}\n\n\t\tif ( $members && $nonmembers ) {\n\n\t\t\tprintf( '<p>Responses from %d members with user accounts and %d nonmembers.</p>', $members, $nonmembers );\n\t\t}\n\n\t\tif(!empty($daily_count))\n\t\t{\n\t\t\techo '<h3>RSVPs Per Day</h3>';\n\t\t\tforeach($daily_count as $day => $count) {\n\t\t\t\tprintf('<p>%s: %s</p>',$day, $count);\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $_GET['event'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $phpexcel_enabled; // set if excel extension is active\n\n\t\tif ( isset( $fields ) ) {\n\n\t\t\tif ( $fields && ! isset( $_GET['rsvp_print'] ) && ! isset( $_GET['limit'] ) ) {\n\n\t\t\t\t$fields[] = 'note';\n\n\t\t\t\t$fields[] = 'timestamp';\n\n\t\t\t\tforeach ( $fields as $field ) {\n\n\t\t\t\t\t// no duplicates, please\n\n\t\t\t\t\t$i = preg_replace( '/[^a-z0-9]/', '_', strtolower( $field ) );\n\n\t\t\t\t\tif ( $i == 'first_name' ) {\n\n\t\t\t\t\t\t$i = 'first';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $i == 'last_name' ) {\n\n\t\t\t\t\t\t$i = 'last';\n\t\t\t\t\t}\n\n\t\t\t\t\t$newfields[ $i ] = $i;\n\n\t\t\t\t};\n\t\t\t\t?>\n\n<div id=\"excel\" name=\"excel\" style=\"padding: 10px; border: thin dotted #333; width: 300px;margin-top: 30px;\">\n\n<h3><?php esc_html_e( 'Data Table / Spreadsheet', 'rsvpmaker' ); ?></h3>\n\n<form method=\"get\" action=\"edit.php\" target=\"_blank\">\n\n\t\t\t\t<?php\n\n\t\t\t\tforeach ( $_GET as $name => $value ) {\n\n\t\t\t\t\techo sprintf( '<input type=\"hidden\" name=\"%s\" value=\"%s\" />', esc_attr( $name ), esc_attr( $value ) );\n\t\t\t\t}\n\n\t\t\t\tforeach ( $newfields as $i => $field ) {\n\n\t\t\t\t\techo '<input type=\"checkbox\" name=\"fields[]\" value=\"' . $i . '\" checked=\"checked\" /> ' . $field . \"<br />\\n\";\n\t\t\t\t}\n\n\t\t\t\trsvpmaker_nonce();\n\n\t\t\t\t?>\n\n<p><button name=\"print_rsvp_report\" value=\"1\" ><?php esc_html_e( 'Print Report', 'rsvpmaker' ); ?></button> <button name=\"rsvp_csv\" value=\"1\" ><?php esc_html_e( 'Download CSV', 'rsvpmaker' ); ?></button></p>\n\n\t\t\t\t<?php\n\n\t\t\t\tif ( isset( $phpexcel_enabled ) ) {\n\n\t\t\t\t\t$rsvpexcel = wp_create_nonce( 'rsvpexcel' );\n\n\t\t\t\t\tprintf( '<p><button name=\"rsvpexcel\" value=\"%s\" />%s</button></p>', $rsvpexcel, __( 'Download to Excel', 'rsvpmaker' ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\techo '<br />';\n\n\t\t\t\t\tesc_html_e( 'Additional RSVPMaker Excel plugin required for download to Excel function.', 'rsvpmaker' );\n\n\t\t\t\t\techo '<a href=\"https://wordpress.org/plugins/rsvpmaker-excel/\">https://wordpress.org/plugins/rsvpmaker-excel/</a>';\n\n\t\t\t\t}\n\n\t\t\t\t?>\n\n</form>\n\n</div>\n\n\t\t\t\t<?php\n\n\t\t\t}\n\t\t}\n\n\t\t$options = $name = '';\n\n\t\tif ( is_admin() && ! isset( $_GET['rsvp_print'] ) ) {\n\n\t\t\tif ( ! empty( $master_row ) ) {\n\n\t\t\t\tforeach ( $master_row as $id => $name ) {\n\n\t\t\t\t\tif ( isset( $guestcount[ $id ] ) ) {\n\n\t\t\t\t\t\t$name .= sprintf( ' + %d guests', $guestcount[ $id ] );\n\t\t\t\t\t}\n\n\t\t\t\t\t$options .= sprintf( '<option value=\"%d\">%s</option>', $id, esc_attr( $name ) );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n<h3><?php esc_html_e( 'Edit Entries', 'rsvpmaker' ); ?></h3>\n\n<form action=\"edit.php\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<select name=\"edit_rsvp\"><option value=\"0\">Add New</option><?php echo $options; ?></select>\n\n<input type=\"hidden\" name=\"page\" value=\"rsvp\">\n\n<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\n<input type=\"hidden\" name=\"event\" value=\"<?php echo intval($_GET['event']); ?>\">\n\n<button><?php esc_html_e( 'Edit', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\n\n<h3><?php esc_html_e( 'Move Between Events', 'rsvpmaker' ); ?></h3>\n\n<p><?php esc_html_e( 'Transfers the individual who registered and any guests registered as part of the same party to another event. Payment status is also transferred.' ); ?></p>\n\n<form action=\"<?php admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . sanitize_text_field($_GET['event']) ); ?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<p><select name=\"move_rsvp\"><option value=\"\"><?php esc_html_e( 'Pick Entry', 'rsvpmaker' ); ?></option><?php echo $options; ?></select>\n\nto <select name=\"move_to\">\n\n\t\t\t<?php\n\n\t\t\t$future = get_future_events( '', 50 );\n\n\t\t\tif ( $future ) {\n\n\t\t\t\tforeach ( $future as $event ) {\n\n\t\t\t\t\tif ( $event->ID != $_GET['event'] ) {\n\n\t\t\t\t\t\tprintf( '<option value=\"%d\">%s - %s</option>', $event->ID, esc_html( $event->post_title ), esc_html( $event->date ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n</select> </p>\n\n<button><?php esc_html_e( 'Move', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\n\n\t\t\t<?php\n\n\t\t\tif ( ! empty( $owed_list ) ) {\n\n\t\t\t\tprintf( '<h3>Record Payments</h3><form action=\"%s\" method=\"post\">%s', admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . intval( $_GET['event'] ) ), rsvpmaker_nonce('return') );\n\n\t\t\t\techo $owed_list;\n\n\t\t\t\t?>\n\n<button><?php esc_html_e( 'Mark Paid', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\t\t\t\t<?php\n\n\t\t\t} // end is admin\n\t\t}\n\n\t\tif ( ! empty( $emails ) ) {\n\n\t\t\treturn $emails;\n\t\t}\n\n\t}\n} // end format_rsvp_details\n\n\n\nfunction admin_edit_rsvp( $id, $event ) {\n\n\tglobal $wpdb;\n\n\tglobal $profile;\n\n\tglobal $master_rsvp;\n\n\tglobal $post;\n\n\tif ( $id == 0 ) {\n\n\t\t$profile = array( 'yesno' => 1 );\n\n\t} else {\n\n\t\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE id=' . $id, ARRAY_A );\n\n\t\t$profile = rsvp_row_to_profile( $row );\n\n\t}\n\n\t$master_rsvp = $id;\n\n\t$custom_fields = get_rsvpmaker_custom( $event );\n\n\tglobal $rsvp_options;\n\n\t$form = $custom_fields['_rsvp_form'][0];\n\n\tprintf( '<form action=\"%s\" method=\"post\">', admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . $event ) );\n\trsvpmaker_nonce();\n\techo '<p>';\n\t?>\n\t<input name=\"yesno\" type=\"radio\" value=\"1\" <?php echo ( $profile['yesno'] ) ? 'checked=\"checked\"' : ''; ?> /> <?php echo __( 'Yes', 'rsvpmaker' ); ?> <input name=\"yesno\" type=\"radio\" value=\"0\" <?php echo ( ! $profile['yesno'] ) ? 'checked=\"checked\"' : ''; ?> /> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo __( 'No', 'rsvpmaker' ) . '</p>';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$results = get_rsvp_dates( $event );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $results ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$start = 2;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$firstrow = null;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tglobal $last_time;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$timeblock = '<span class=\"time\">';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! $firstrow ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$firstrow = $row;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$last_time = $t = rsvpmaker_strtotime( $row['datetime'] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= '<div itemprop=\"startDate\" datetime=\"' . date( 'c', $t ) . '\">';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = $row['duration'];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$timeblock .= rsvpmaker_date( ' ' . $rsvp_options['time_format'], $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// dchange\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $dur == 'set' ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = rsvpmaker_strtotime( $row['end_time'] );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( is_numeric( $dur ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$timeblock .= ' <span class=\"end_time\">' . __( 'to', 'rsvpmaker' ) . ' ' . rsvpmaker_date( $rsvp_options['time_format'], $dur ) . '</span>';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ( $dur != 'allday' ) && ! strpos( $dur, '|' ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= $timeblock . '<span>';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= \"</div>\\n\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<div class=\"dateblock\">' . $dateblock . \"\\n</div>\\n\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $dur && ( $slotlength = $custom_fields['_rsvp_timeslots'][0] ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?>\n\n<div><?php echo __( 'Number of Participants', 'rsvpmaker' ); ?>: <select name=\"participants\">\n\n\t<option value=\"1\">1</option>\n\n\t<option value=\"2\">2</option>\n\n\t<option value=\"3\">3</option>\n\n\t<option value=\"4\">4</option>\n\n\t<option value=\"5\">5</option>\n\n\t<option value=\"6\">6</option>\n\n\t<option value=\"7\">7</option>\n\n\t<option value=\"8\">8</option>\n\n\t<option value=\"9\">9</option>\n\n\t<option value=\"10\">10</option>\n\n  </select></div>\n\n\n\n<div><?php echo __( 'Choose timeslots', 'rsvpmaker' ); ?></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$t = rsvpmaker_strtotime( $firstrow['datetime'] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = $firstrow['duration'];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( strpos( $dur, ':' ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = rsvpmaker_strtotime( $dur );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$day = rsvpmaker_date( 'j', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$month = rsvpmaker_date( 'n', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$year = date( 'Y', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$hour = rsvpmaker_date( 'G', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$minutes = rsvpmaker_date( 'i', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$slotlength = explode( ':', $slotlength );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$min_add = $slotlength[0] * 60;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$min_add = $min_add + $slotlength[1];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( $i = 0; ( $slot = rsvpmaker_mktime( $hour, $minutes + ( $i * $min_add ), 0, $month, $day, $year ) ) < $dur; $i++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$sql = 'SELECT SUM(participants) FROM ' . $wpdb->prefix . \"rsvp_volunteer_time WHERE time=$slot AND event = $post->ID\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$signups = ( $signups = $wpdb->get_var( $sql ) ) ? $signups : 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<div><input type=\"checkbox\" name=\"timeslot[]\" value=\"' . $slot . '\" /> ' . rsvpmaker_date( ' ' . $rsvp_options['time_format'], $slot ) . \" $signups participants signed up</div>\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( isset( $custom_fields['_per'][0] ) && $custom_fields['_per'][0] ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pf = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$options = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( isset( $custom_fields['_rsvp_count_party'][0] ) && $custom_fields['_rsvp_count_party'][0] ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $per['unit'] as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! $price ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$display[] = $value . ' @ ' . ( ( $rsvp_options['paypal_currency'] == 'USD' ) ? '$' : $rsvp_options['paypal_currency'] ) . ' ' . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$number_prices = ( empty( $display ) ) ? 0 : sizeof( $display );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $number_prices ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $number_prices == 1 ) { // don't show options, just one choice\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf( '<h3 id=\"guest_count_pricing\"><input type=\"hidden\" name=\"guest_count_price\" value=\"%s\">%s ' . __( 'per person', 'rsvpmaker' ) . '</h3>', 0, esc_html( $display[0] ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$s = ( $index == $profile['pricechoice'] ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$options .= sprintf( '<option value=\"%d\" %s>%s</option>', $index, $s, esc_html( $value ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf( '<div id=\"guest_count_pricing\">' . __( 'Options', 'rsvpmaker' ) . ': <select name=\"guest_count_price\">%s</select></div>', $options );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $per['unit'] as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! $price ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pf .= '<div><select name=\"payingfor[' . $index . ']\" class=\"tickets\"><option value=\"0\">0</option><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option><option value=\"6\">6</option><option value=\"7\">7</option><option value=\"8\">8</option><option value=\"9\">9</option><option value=\"10\">10</option></select><input type=\"hidden\" name=\"unit[' . $index . ']\" value=\"' . $value . '\" />' . $value . ' @ <input type=\"hidden\" name=\"price[' . $index . ']\" value=\"' . $price . '\" />' . ( ( $rsvp_options['paypal_currency'] == 'USD' ) ? '$' : $rsvp_options['paypal_currency'] ) . ' ' . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . '</div>' . \"\\n\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! empty( $pf ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<h3>' . __( 'Paying For', 'rsvpmaker' ) . '</h3><p>' . $pf . \"</p>\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( is_numeric( $form ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$fpost = get_post( $form );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$form = $fpost->post_content;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( function_exists( 'do_blocks' ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$form = do_blocks( $form );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo do_blocks( do_shortcode( $form ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf( '<input type=\"hidden\" name=\"rsvp_id\" id=\"rsvp_id\" value=\"%d\" /><input type=\"hidden\" id=\"event\" name=\"event\" value=\"%d\" />%s<p><button>Submit</button></p></form>', $id, $event, rsvpmaker_nonce('query') );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<p>' . __( 'Tip: If you do not have an email address for someone you registered offline, you can use the format firstnamelastname@example.com (example.com is an Internet domain reserved for examples and testing). You will get an error message if you try to leave it blank' ) . '</p>';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo rsvp_form_jquery();\n\n}\n\nif ( ! function_exists( 'rsvp_print' ) ) {\n\n\tfunction rsvp_print() {\n\n\t\tif ( isset( $_GET['rsvp_print'] ) && isset( $_GET['page'] ) && is_admin() ) {\n\n\t\t\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t\t\tdie(\"Security error\");\n\t\t\tif ( 'word' == $_GET['rsvp_print'] ) {\n\t\t\t\tglobal $post;\n\t\t\t\t$fname = (empty($post->post_name)) ? time() : $post->post_name;\n\t\t\t\t$fname = apply_filters('rsvp_print_to_word',$fname);\n\t\t\t\theader( 'Content-Type: application/msword' );\n\t\t\t\theader( 'Content-disposition: attachment; filename=' . $fname . '.doc' );\n\t\t\t}\n\t\t\t\t\n\t\t\t$slug = sanitize_text_field($_GET['page']);\n\n\t\t\t$hookname = get_plugin_page_hookname( $slug, '' );\n\n\t\t\techo '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n\n<head>\n\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n<title>' . get_admin_page_title() . '</title>\n\n</head>\n\n\n\n<body>\n\n';\n\n\t\t\tdo_action( $hookname );\n\n\t\t\techo '</body></html>';\n\n\t\t\texit();\n\n\t\t}\n\n\t}//end rsvp_print()\n}// if exists\n\n\n\nif ( ! function_exists( 'rsvp_csv' ) ) {\n\n\tfunction rsvp_csv() {\n\n\t\tif ( ! isset( $_GET['rsvp_csv'] ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) { \n\t\t\tdie( 'Security error' );\n\t\t}\n\n\t\tglobal $wpdb;\n\t\t$fields  = array_map('sanitize_text_field',$_GET['fields']);\n\t\t$eventid = (int) $_GET['event'];\n\t\t$post    = get_post( $eventid );\n\n\t\theader( 'Content-Type: text/csv' );\n\n\t\theader( 'Content-Disposition: attachment;filename=\"' . $post->post_name . '-' . date( 'Y-m-d-H-i' ) . '.csv\"' );\n\n\t\theader( 'Cache-Control: max-age=0' );\n\n\t\t$out = fopen( 'php://output', 'w' );\n\n\t\tfputcsv( $out, $fields );\n\n\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid ORDER BY yesno DESC, last, first\";\n\n\t\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t$rows = sizeof( $results );\n\n\t\t$phonecells = $phonecol . '1:' . $phonecol . ( $rows + 1 );\n\n\t\tif ( is_array( $results ) ) {\n\n\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t$index++;\n\n\t\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t\t$details = unserialize( $row['details'] );\n\n\t\t\t\t\t$row = array_merge( $row, $details );\n\n\t\t\t\t}\n\n\t\t\t\t$newrow = array();\n\n\t\t\t\tif ( is_array( $fields ) ) {\n\n\t\t\t\t\tforeach ( $fields as $column => $name ) {\n\n\t\t\t\t\t\tif ( isset( $row[ $name ] ) ) {\n\n\t\t\t\t\t\t\t$newrow[] = $row[ $name ];\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$newrow[] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfputcsv( $out, $newrow );\n\n\t\t\t}\n\t\t}\n\n\t\tfclose( $out );\n\n\t\texit();\n\n\t}\n} // end rsvp_csv\n\n\n\nfunction rsvp_report_table() {\n\n\t?>\n\n<style>\n\ntable#rsvptable {\n\n\tborder-collapse: collapse;\n\n}\n\ntable#rsvptable td, table#rsvptable td {\n\nborder: thin solid #555;\n\npadding: 3px;\n\ntext-align: left;\n\n}\n\n</style>\n\n\t<?php\n\n\tglobal $wpdb;\n\n\t$fields = array_map('sanitize_text_field',$_GET['fields']);\n\n\t$eventid = (int) $_GET['event'];\n\n\t$sql = 'SELECT post_title FROM ' . $wpdb->posts . \" WHERE ID = $eventid\";\n\n\t$title = $wpdb->get_var( $sql );\n\n\techo \"<h2>$title</h2>\\n<table id=\\\"rsvptable\\\"><tr>\\n\";\n\n\t// Create new PHPExcel object\n\n\tif ( is_array( $fields ) ) {\n\n\t\tforeach ( $fields as $column => $name ) {\n\n\t\t\techo \"<th>$name</th>\";\n\n\t\t}\n\t}\n\n\techo '</tr>';\n\n\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid ORDER BY yesno DESC, last, first\";\n\n\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t$rows = sizeof( $results );\n\n\t$phonecells = $phonecol . '1:' . $phonecol . ( $rows + 1 );\n\n\tif ( is_array( $results ) ) {\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$index++;\n\n\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t$details = unserialize( $row['details'] );\n\n\t\t\t\t$row = array_merge( $row, $details );\n\n\t\t\t}\n\n\t\t\techo '<tr>';\n\n\t\t\tif ( is_array( $fields ) ) {\n\n\t\t\t\tforeach ( $fields as $column => $name ) {\n\n\t\t\t\t\tif ( isset( $row[ $name ] ) ) {\n\n\t\t\t\t\t\tprintf( '<td>%s</td>', esc_html( $row[ $name ] ) );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<td></td>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '</tr>';\n\n\t\t}\n\t}\n\n\t\techo '</table>';\n\n}\n\n\n\nif ( ! function_exists( 'get_spreadsheet_data' ) ) {\n\n\tfunction get_spreadsheet_data( $eventid ) {\n\n\t\tglobal $wpdb;\n\n\t\t$sql = 'SELECT yesno,first,last,email, details, note, guestof FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid ORDER BY yesno DESC, last, first\";\n\n\t\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\tforeach ( $results as $index => $row ) {\n\n\t\t\t$srow['answer'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\t$srow['name'] = $row['first'] . ' ' . $row['last'];\n\n\t\t\t$details = unserialize( $srow['details'] );\n\n\t\t\t$srow['address'] = $details['address'] . ' ' . $details['city'] . ' ' . $details['state'] . ' ' . $details['zip'];\n\n\t\t\t$srow['employment'] = $details['occupation'] . ' ' . $details['company'];\n\n\t\t\t$srow['email'] = $row['email'];\n\n\t\t\t$srow['guestof'] = $row['guestof'];\n\n\t\t\t$srow['note'] = $row['note'];\n\n\t\t\t$spreadsheet[] = $srow;\n\n\t\t}\n\n\t\treturn $spreadsheet;\n\n\t}\n} // end get spreadsheet data\n\n\n\nif ( ! function_exists( 'widgetlink' ) ) {\n\n\tfunction widgetlink( $evdates, $plink, $evtitle ) {\n\n\t\treturn sprintf( '<a href=\"%s\">%s</a> %s', esc_attr( $plink ), esc_html( $evtitle ), esc_html( $evdates ) );\n\n\t}\n} // end widgetlink\n\n\nif ( ! function_exists( 'rsvpmaker_profile_lookup' ) ) {\n\n\tfunction rsvpmaker_profile_lookup( $email = '' ) {\n\n\t\tglobal $wpdb;\n\n\t\t$profile = array();\n\n\t\tif ( isset( $_GET['blank'] ) ) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ! empty( $email ) ) {\n\n\t\t\t$sql = 'SELECT details FROM ' . $wpdb->prefix . 'rsvpmaker WHERE email LIKE \"' . $email . '\" ORDER BY id DESC';\n\n\t\t\t$details = $wpdb->get_var( $sql );\n\n\t\t\tif ( ! empty( $details ) ) {\n\n\t\t\t\t$details = unserialize( $details );\n\n\t\t\t\t$profile['email'] = $details['email'];\n\n\t\t\t\t$profile['first'] = $details['first'];\n\n\t\t\t\t$profile['last'] = $details['last'];\n\n\t\t\t\tforeach ( $details as $name => $value ) {\n\n\t\t\t\t\tif ( strpos( $name, 'phone' ) !== false ) {\n\n\t\t\t\t\t\t$profile[ $name ] = $value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// if members are registered and logged in, retrieve basic info for profile\n\n\t\t\tif ( is_user_logged_in() ) {\n\n\t\t\t\tglobal $current_user;\n\n\t\t\t\t$profile['email'] = $current_user->user_email;\n\n\t\t\t\t$profile['first'] = $current_user->first_name;\n\n\t\t\t\t$profile['last'] = $current_user->last_name;\n\n\t\t\t}\n\t\t}\n\n\t\treturn $profile;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'ajax_guest_lookup' ) ) {\n\n\tfunction ajax_guest_lookup() {\n\n\t\t$event = (int) $_GET['ajax_guest_lookup'];\n\n\t\tglobal $wpdb;\n\n\t\t$sql = 'SELECT first,last,note FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$event AND yesno=1 ORDER BY id DESC\";\n\n\t\t$attendees = $wpdb->get_results( $sql );\n\n\t\techo '<div class=\"attendee_list\">';\n\n\t\tif ( is_array( $attendees ) ) {\n\n\t\t\tforeach ( $attendees as $row ) {\n\n\t\t\t\t;\n\t\t\t\t?>\n\n<h3 class=\"attendee\"><?php echo esc_html( $row->first ); ?> <?php echo esc_html( $row->last ); ?></h3>\n\n\t\t\t\t<?php\n\n\t\t\t\tif ( $row->note ) {\n\t\t\t\t}\n\n\t\t\t\techo wpautop( $row->note );\n\n\t\t\t}\n\t\t}\n\n\t\techo '</div>';\n\n\t\texit();\n\n\t}\n}\n\n\n\nfunction rsvp_reminder_activation() {\n\n\tif ( isset( $_GET['autorenew'] ) ) {\n\n\t\trsvpautorenew_test();\n\t}\n\n\tif ( ! wp_next_scheduled( 'rsvp_daily_reminder_event' ) ) {\n\n\t\t$hour = 12 - get_option( 'gmt_offset' );\n\n\t\t$t = rsvpmaker_mktime( $hour, 0, 0, date( 'n' ), date( 'j' ), date( 'Y' ) );\n\n\t\twp_schedule_event( current_time( 'timestamp' ), 'daily', 'rsvp_daily_reminder_event' );\n\n\t}\n\n\t$active = get_option( 'rsvpmaker_discussion_active' );\n\n\t// if stalled, restart email queue process\n\n\tif ( $active && ! wp_next_scheduled( 'rsvpmaker_relay_init_hook' ) ) {\n\n\t\twp_schedule_event( time(), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n\t}\n\n}\n\n\n\nif ( ! function_exists( 'rsvp_daily_reminder' ) ) {\n\n\tfunction rsvp_daily_reminder() {\n\n\t\trsvpautorenew_test(); // also check for templates that autorenew\n\t\tcleanup_rsvpmaker_child_documents(); // delete form and confirmation messages\n\t\trsvpmaker_reminders_nudge(); // make sure events with reminders set are in cron\n\t\trsvpmaker_consistency_check();\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\t$today = rsvpmaker_date( 'Y-m-d' );\n\n\t\t$sql = \"SELECT * FROM `$wpdb->postmeta` WHERE `meta_key` LIKE '_rsvp_reminder' AND `meta_value`='$today'\";\n\n\t\tif ( $reminders = $wpdb->get_results( $sql ) ) {\n\n\t\t\tforeach ( $reminders as $reminder ) {\n\n\t\t\t\t$post_id = $reminder->post_id;\n\n\t\t\t\t$q = \"p=$post_id&post_type=rsvpmaker\";\n\n\t\t\t\techo \"Post $post_id is scheduled for a reminder $q<br />\";\n\n\t\t\t\tglobal $post;\n\n\t\t\t\tquery_posts( $q );\n\n\t\t\t\tglobal $wp_query;\n\n\t\t\t\t// treat as single, display rsvp button, not form\n\n\t\t\t\t$wp_query->is_single = false;\n\n\t\t\t\tthe_post();\n\n\t\t\t\tif ( $post->post_title ) {\n\n\t\t\t\t\t$event_title = $post->post_title;\n\n\t\t\t\t\tob_start();\n\n\t\t\t\t\techo '<h1>';\n\n\t\t\t\t\tthe_title();\n\n\t\t\t\t\techo \"</h1>\\n<div>\\n\";\n\n\t\t\t\t\tthe_content();\n\n\t\t\t\t\techo \"\\n</div>\\n\";\n\n\t\t\t\t\t$event = ob_get_clean();\n\n\t\t\t\t\t$rsvpto = get_post_meta( $post_id, '_rsvp_to', true );\n\n\t\t\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$post_id AND yesno=1\";\n\n\t\t\t\t\t$rsvps = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t\t\t\tif ( $rsvps ) {\n\n\t\t\t\t\t\tforeach ( $rsvps as $row ) {\n\n\t\t\t\t\t\t\t$notify = $row['email'];\n\n\t\t\t\t\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\t\t\t\t\t$notification = '<p>' . __( 'This is an automated reminder that we have you on the RSVP list for the event shown below. If your plans have changed, you can update your response by clicking on the RSVP button again.', 'rsvpmaker' ) . '</p>';\n\n\t\t\t\t\t\t\t$notification .= '<h3>' . esc_html( $row['yesno'] . ' ' . $row['first'] . ' ' . $row['last'] . ' ' . $row['email'] );\n\n\t\t\t\t\t\t\tif ( $row['guestof'] ) {\n\n\t\t\t\t\t\t\t\t$notification .= esc_html( ' (' . __( 'guest of', 'rsvpmaker' ) . ' ' . $row['guestof'] . ')' );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$notification .= \"</h3>\\n\";\n\n\t\t\t\t\t\t\t$notification .= '<p>';\n\n\t\t\t\t\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t\t\t\t\t$details = unserialize( $row['details'] );\n\n\t\t\t\t\t\t\t\tif ( is_array( $details ) ) {\n\n\t\t\t\t\t\t\t\t\tforeach ( $details as $name => $value ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t$notification .= esc_html( \"$name: $value\" ) . '<br />';\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( $row['note'] ) {\n\n\t\t\t\t\t\t\t\t$notification .= 'note: ' . wp_kses_post( nl2br( $row['note'] ) ) . '<br />';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$t = rsvpmaker_strtotime( $row['timestamp'] );\n\n\t\t\t\t\t\t\t$notification .= 'posted: ' . rsvpmaker_date( $rsvp_options['short_date'], $t );\n\n\t\t\t\t\t\t\t$notification .= '</p>';\n\n\t\t\t\t\t\t\t$notification .= \"<h3>Event Details</h3>\\n\" . str_replace( '*|EMAIL|*', $notify, $event );\n\n\t\t\t\t\t\t\t$notification = wp_kses_post( $notification );\n\n\t\t\t\t\t\t\techo \"Notification for $notify<br />$notification\";\n\n\t\t\t\t\t\t\t$subject = '=?UTF-8?B?' . base64_encode( __( 'Event Reminder for', 'rsvpmaker' ) . ' ' . $event_title ) . '?=';\n\n\t\t\t\t\t\t\tif ( isset( $rsvp_options['smtp'] ) && ! empty( $rsvp_options['smtp'] ) ) {\n\n\t\t\t\t\t\t\t\t$mail['subject'] = __( 'Event Reminder for', 'rsvpmaker' ) . ' ' . $event_title;\n\n\t\t\t\t\t\t\t\t$mail['html'] = $notification;\n\n\t\t\t\t\t\t\t\t$mail['to'] = $notify;\n\n\t\t\t\t\t\t\t\t$mail['from'] = $rsvp_to;\n\n\t\t\t\t\t\t\t\t$mail['fromname'] = get_bloginfo( 'name' );\n\n\t\t\t\t\t\t\t\trsvpmailer( $mail );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t$subject = '=?UTF-8?B?' . base64_encode( __( 'Event Reminder for', 'rsvpmaker' ) . ' ' . $event_title ) . '?=';\n\n\t\t\t\t\t\t\t\tmail( $notify, $subject, $notification, \"From: $rsvpto\\nContent-Type: text/html; charset=UTF-8\" );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\techo 'none found';\n\t\t}\n\n\t}\n}// end\n\n\n\nif ( ! function_exists( 'rsvpguests' ) ) {\n\n\tfunction rsvpguests( $atts ) {\n\n\t\tif ( is_admin() || wp_is_json_request() ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : __( 'Guest', 'rsvpmaker' );\n\n\t\t$addmore = ( isset( $atts['addmore'] ) ) ? $atts['addmore'] : __( 'Add more guests', 'rsvpmaker' );\n\n\t\tglobal $guestextra;\n\n\t\tglobal $wpdb;\n\n\t\tglobal $blanks_allowed;\n\n\t\tglobal $master_rsvp;\n\n\t\t$wpdb->show_errors();\n\n\t\t$output = '';\n\n\t\t$count = 1; // reserve 0 for host\n\n\t\t$max_party = ( isset( $atts['max_party'] ) ) ? (int) $atts['max_party'] : 0;\n\n\t\tif ( isset( $master_rsvp ) && $master_rsvp ) {\n\n\t\t\t$guestsql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE master_rsvp=' . $master_rsvp . ' ORDER BY id';\n\n\t\t\tif ( $results = $wpdb->get_results( $guestsql, ARRAY_A ) ) {\n\n\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t$guestprofile = rsvp_row_to_profile( $row );\n\n\t\t\t\t\t$output .= sprintf( '<div class=\"guest_blank\"><p><strong>%s %d</strong></p>', esc_html( $label ), $count ) . \"\\n\";\n\n\t\t\t\t\t$output .= guestfield( array( 'textfield' => 'first' ), $guestprofile, $count );\n\n\t\t\t\t\t$output .= guestfield( array( 'textfield' => 'last' ), $guestprofile, $count );\n\n\t\t\t\t\tif ( is_array( $guestextra ) ) {\n\n\t\t\t\t\t\tforeach ( $guestextra as $atts ) {\n\n\t\t\t\t\t\t\t$output .= guestfield( $atts, $guestprofile, $count );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$output .= sprintf( '<div><input type=\"checkbox\" name=\"guestdelete[%s]\" value=\"%s\" /> ' . __( 'Delete Guest', 'rsvpmaker' ) . ' %d</div><input type=\"hidden\" name=\"guest[id][%s]\" value=\"%s\">', $row['id'], $row['id'], $count, $count, $row['id'] );\n\n\t\t\t\t\t$output .= '</div>' . \"\\n\";\n\n\t\t\t\t\t$count++;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$max_guests = $blanks_allowed + $count;\n\n\t\tif ( $max_party ) {\n\n\t\t\t$max_guests = ( $max_party > $max_guests ) ? $max_guests : $max_party; // use the lower limit\n\t\t}\n\n\t\t// now the blank field\n\n\t\tif ( $blanks_allowed < 1 ) {\n\n\t\t\treturn $output . '<p><em>' . __( 'No room for additional guests', 'rsvpmaker' ) . '</em><p>'; // if event is full, no additional guests\n\n\t\t} elseif ( $count > $max_guests ) {\n\n\t\t\treturn $output . '<p><em>' . __( 'No room for additional guests', 'rsvpmaker' ) . '</em><p>'; // limit by # of guests per person\n\n\t\t} elseif ( $max_guests && ( $count >= $max_guests ) ) {\n\n\t\t\treturn $output . '<p><em>' . __( 'No room for additional guests (max per party)', 'rsvpmaker' ) . '</em><p>'; // limit by # of guests per person\n\t\t}\n\n\t\t\t$output .= '<input type=\"hidden\" id=\"max_guests\" value=\"' . $max_guests . '\" />';\n\n\t\t\t$output .= '<div class=\"guest_blank\" id=\"first_blank\"><p><strong>' . $label . ' ###</strong></p>' . \"\\n\";\n\n\t\t\t$output .= guestfield( array( 'textfield' => 'first' ), array(), '' );\n\n\t\t\t$output .= guestfield( array( 'textfield' => 'last' ), array(), '' );\n\n\t\tif ( is_array( $guestextra ) ) {\n\n\t\t\tforeach ( $guestextra as $atts ) {\n\n\t\t\t\t$output .= guestfield( $atts, array(), '' );\n\t\t\t}\n\t\t}\n\n\t\t\t$output .= '</div>' . \"\\n\";\n\n\t\t$output = '<div id=\"guest_section\" tabindex=\"-1\">' . \"\\n\" . $output . '</div>' . '<!-- end of guest section-->';\n\n\t\tif ( $max_guests > ( $count + 1 ) ) {\n\n\t\t\t$output .= '<p><a href=\"#guest_section\" id=\"add_guests\" name=\"add_guests\">(+) ' . $addmore . \"</a><!-- end of guest section--></p>\\n\";\n\t\t}\n\n\t\t$output .= '<script type=\"text/javascript\"> var guestcount =' . $count . '; </script>';\n\n\t\treturn $output;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpprofiletable' ) ) {\n\n\tfunction rsvpprofiletable( $atts, $content = null ) {\n\n\t\tglobal $profile;\n\n\t\tif ( ! isset( $atts['show_if_empty'] ) || ! ( isset( $profile[ $atts['show_if_empty'] ] ) && $profile[ $atts['show_if_empty'] ] ) ) {\n\n\t\t\treturn do_shortcode( $content );\n\n\t\t} else {\n\n\t\t\t$p = get_post_permalink();\n\n\t\t\t$p .= ( strpos( $p, '?' ) ) ? '&blank=1' : '?blank=1';\n\n\t\t\treturn '\n\n<p id=\"profiledetails\">' . __( 'Profile details on file. To update profile, or RSVP for someone else', 'rsvpmaker' ) . ' <a href=\"' . $p . '\">' . __( 'fetch a blank form', 'rsvpmaker' ) . '</a></p>\n\n<input type=\"hidden\" name=\"onfile\" value=\"1\" />';\n\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpfield' ) ) {\n\n\tfunction rsvpfield( $atts ) {\n\n\t\tglobal $profile;\n\n\t\tglobal $rsvp_required_field;\n\n\t\tglobal $guestextra;\n\n\t\tglobal $current_user;\n\n\t\t// synonyms\n\n\t\tif ( isset( $atts['text'] ) && ! isset( $atts['textfield'] ) ) {\n\t\t\t$atts['textfield'] = $atts['text'];\n\t\t}\n\n\t\tif ( isset( $atts['select'] ) && ! isset( $atts['selectfield'] ) ) {\n\t\t\t$atts['selectfield'] = $atts['select'];\n\t\t}\n\n\t\tif ( is_admin() && ! isset( $_REQUEST['edit_rsvp'] ) ) {\n\n\t\t\t$output = '';\n\n\t\t\t$guestfield = ( isset( $atts['guestfield'] ) ) ? (int) $atts['guestfield'] : 0;\n\n\t\t\t$guestoptions = array( __( 'main form', 'rsvpmaker' ), __( 'main+guest', 'rsvpmaker' ), __( 'guest form only', 'rsvpmaker' ) );\n\n\t\t\t$goptions = '';\n\n\t\t\tforeach ( $guestoptions as $index => $option ) {\n\n\t\t\t\t$s = ( $index == $guestfield ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$goptions .= '<option value=\"' . $index . '\" ' . $s . '>' . $option . '</option>';\n\n\t\t\t}\n\n\t\t\t$private = ( isset( $atts['private'] ) && $atts['private'] ) ? ' checked=\"checked\" ' : '';\n\n\t\t\tif ( isset( $atts['textfield'] ) ) {\n\n\t\t\t\t$field = $atts['textfield'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'first' ) || ( $field == 'last' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( strpos( $field, 'hone' ) && empty( $atts['private'] ) ) {\n\n\t\t\t\t\t$private = ' checked=\"checked\" ';\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select name=\"type' . $extrafield . '\" id=\"type' . $extrafield . '\"><option value=\"text\" selected=\"selected\">text</option><option value=\"hidden\">hidden</option><option value=\"radio\">radio</option><option value=\"select\">select</option><option value=\"checkbox\">checkbox</option></select> ' . __( 'Show', 'rsvpmaker' ) . ': <select id=\"guest' . $extrafield . '\" name=\"guest' . $extrafield . '\">' . $goptions . '</select>\n\n<input type=\"checkbox\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" value=\"1\" ' . $private . ' /> ' . __( 'private', 'rsvpmaker' ) . '\n\n<br /><input type=\"text\" name=\"extra' . $extrafield . '\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\tif ( isset( $atts['hidden'] ) ) {\n\n\t\t\t\t$field = $atts['hidden'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'email' ) || ( $field == 'email' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select id=\"type' . $extrafield . '\"><option value=\"text\">text</option><option value=\"hidden\" selected=\"selected\">hidden</option><option value=\"radio\">radio</option><option value=\"select\">select</option><option value=\"checkbox\">checkbox</option></select><input type=\"hidden\" id=\"guest' . $extrafield . '\" />\n\n<input type=\"hidden\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" /> \n\n<br /><input type=\"text\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\tif ( isset( $atts['radio'] ) ) {\n\n\t\t\t\t$field = $atts['radio'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'email' ) || ( $field == 'email' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select id=\"type' . $extrafield . '\"><option value=\"text\">text</option><option value=\"hidden\">hidden</option><option value=\"radio\"  selected=\"selected\">radio</option><option value=\"select\">select</option><option value=\"checkbox\">checkbox</option></select> ' . __( 'Show', 'rsvpmaker' ) . ': <select id=\"guest' . $extrafield . '\" name=\"guest' . $extrafield . '\">' . $goptions . '</select>\n\n<input type=\"checkbox\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" value=\"1\" ' . $private . ' /> ' . __( 'private', 'rsvpmaker' ) . '\n\n<br /><input type=\"text\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label ) . ':' . esc_attr( $atts['options'] ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\tif ( isset( $atts['selectfield'] ) ) {\n\n\t\t\t\t$field = $atts['selectfield'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'email' ) || ( $field == 'email' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( strpos( $field, 'hone' ) && empty( $atts['private'] ) ) {\n\n\t\t\t\t\t$private = ' checked=\"checked\" ';\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select id=\"type' . $extrafield . '\"><option value=\"text\">text</option><option value=\"hidden\">hidden</option><option value=\"radio\">radio</option><option value=\"select\" selected=\"selected\">select</option><option value=\"checkbox\">checkbox</option></select> \n\n' . __( 'Show', 'rsvpmaker' ) . ': <select id=\"guest' . $extrafield . '\" name=\"guest' . $extrafield . '\">' . $goptions . '</select> <input type=\"checkbox\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" value=\"1\" ' . $private . ' /> ' . __( 'private', 'rsvpmaker' ) . '\t\t\n\n<br /><input type=\"text\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label . ':' . $atts['options'] ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\treturn $output;\n\n\t\t}\n\n\t\t// front end behavior\n\n\t\tif ( isset( $atts['textfield'] ) ) {\n\n\t\t\t$field = str_replace( ' ', '_', $atts['textfield'] );// preg_replace('/[^a-zA-Z0-9_]/','_',$atts[\"textfield\"]);\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! is_admin() && ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\t$output = '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\n\t\t\t} else {\n\n\t\t\t\t$size = ( isset( $atts['size'] ) ) ? ' size=\"' . $atts['size'] . '\" ' : '';\n\n\t\t\t\t$data = ( isset( $profile[ $field ] ) ) ? ' value=\"' . $profile[ $field ] . '\" ' : '';\n\n\t\t\t\t$output = '<input  class=\"' . $field . '\" type=\"text\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" ' . $size . $data . ' />';\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $atts['hidden'] ) ) {\n\n\t\t\t$field = $atts['hidden'];\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\t$size = ( isset( $atts['size'] ) ) ? ' size=\"' . $atts['size'] . '\" ' : '';\n\n\t\t\t$data = ( isset( $profile[ $field ] ) ) ? ' value=\"' . $profile[ $field ] . '\" ' : '';\n\n\t\t\t$output = '<input  class=\"' . $field . '\" type=\"hidden\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" ' . $size . $data . ' />';\n\n\t\t} elseif ( isset( $atts['selectfield'] ) ) {\n\n\t\t\t$field = $atts['selectfield'];\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! is_admin() && ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\treturn '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\t\t\t}\n\n\t\t\t$selected = ( isset( $atts['selected'] ) ) ? trim( $atts['selected'] ) : '';\n\n\t\t\tif ( ! empty( $profile[ $field ] ) ) {\n\n\t\t\t\t$selected = $profile[ $field ];\n\t\t\t}\n\n\t\t\t$output = '<span  class=\"' . $field . '\"><select class=\"' . $field . '\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" >' . \"\\n\";\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$s = ( $selected == $i ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t$output .= '<option value=\"' . $i . '\" ' . $s . '>' . $i . '</option>' . \"\\n\";\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output .= '</select></span>' . \"\\n\";\n\n\t\t} elseif ( isset( $atts['checkbox'] ) ) {\n\n\t\t\t$field = $atts['checkbox'];\n\n\t\t\t$value = $atts['value'];\n\n\t\t\t$ischecked = ( isset( $atts['checked'] ) ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\treturn '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\t\t\t}\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$ischecked = ' checked=\"checked\" ';\n\t\t\t}\n\n\t\t\t$output = '<input class=\"' . $field . '\" type=\"checkbox\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" value=\"' . $value . '\" ' . $ischecked . '/>';\n\n\t\t} elseif ( isset( $atts['radio'] ) ) {\n\n\t\t\t$field = $atts['radio'];\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\treturn '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\t\t\t}\n\n\t\t\t$sep = ( isset( $atts['sep'] ) ) ? $atts['sep'] : ' ';\n\n\t\t\t$checked = ( isset( $atts['checked'] ) ) ? trim( $atts['checked'] ) : '';\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$checked = $profile[ $field ];\n\t\t\t}\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\t$radio = array();\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$ischecked = ( $checked == $i ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\t\t$radio[] = '<span  class=\"' . $field . '\"><input class=\"' . $field . '\" type=\"radio\" name=\"profile[' . $field . ']\" id=\"' . $field . $i . '\" class=\"' . $field . '\"  value=\"' . $i . '\"  ' . $ischecked . '/> ' . $i . '</span> ';\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output = implode( $sep, $radio );\n\n\t\t}\n\n\t\tif ( isset( $atts['required'] ) || isset( $atts['require'] ) ) {\n\n\t\t\t$output = '<span class=\"required\">' . $output . '</span>';\n\n\t\t\t$rsvp_required_field[ $field ] = $field;\n\n\t\t}\n\n\t\tif ( isset( $atts['demo'] ) ) {\n\n\t\t\t$demo = \"<div>Shortcode:</div>\\n<p><strong>[</strong>rsvpfield\";\n\n\t\t\tforeach ( $atts as $name => $value ) {\n\n\t\t\t\tif ( $name == 'demo' ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$demo .= ' ' . $name . '=\"' . $value . '\"';\n\n\t\t\t}\n\n\t\t\t$demo .= \"<strong>]</strong></p>\\n\";\n\n\t\t\t$demo .= \"<div>HTML:</div>\\n<pre>\" . htmlentities( $output ) . \"</pre>\\n\";\n\n\t\t\t$demo .= \"<div>Profile:</div>\\n<pre>\" . var_export( $profile, true ) . \"</pre>\\n\";\n\n\t\t\t$demo .= \"<div>Display:</div>\\n<p>\";\n\n\t\t\t$output = $demo . $output . '</p>';\n\n\t\t}\n\n\t\tif ( isset( $atts['guestfield'] ) && $atts['guestfield'] ) {\n\n\t\t\t$guestextra[ $field ] = $atts;\n\n\t\t\tif ( $atts['guestfield'] == 2 ) {\n\n\t\t\t\treturn; // guest only don't display on main form\n\t\t\t}\n\t\t}\n\n\t\tif ( $field == 'email' ) {\n\n\t\t\t$output .= '<div id=\"rsvp_email_lookup\"></div>';\n\t\t}\n\n\t\treturn $output;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'guestfield' ) ) {\n\n\tfunction guestfield( $atts, $profile, $count ) {\n\n\t\tglobal $fieldcount;\n\n\t\tif ( ! $fieldcount ) {\n\n\t\t\t$fieldcount = 1;\n\t\t}\n\n\t\t// synonyms\n\n\t\tif ( isset( $atts['text'] ) && ! isset( $atts['textfield'] ) ) {\n\t\t\t$atts['textfield'] = $atts['text'];\n\t\t}\n\n\t\tif ( isset( $atts['select'] ) && ! isset( $atts['selectfield'] ) ) {\n\t\t\t$atts['selectfield'] = $atts['select'];\n\t\t}\n\n\t\tif ( isset( $atts['textfield'] ) ) {\n\n\t\t\t$field = $atts['textfield'];\n\n\t\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t$firstlabel = __( 'First', 'rsvpmaker' );\n\n\t\t\t$lastlabel = __( 'Last', 'rsvpmaker' );\n\n\t\t\tif ( ( $label == 'First' ) && ( $label != $firstlabel ) ) {\n\n\t\t\t\t$label = str_replace( 'First', $firstlabel, $label );\n\t\t\t}\n\n\t\t\tif ( ( $label == 'Last' ) && ( $label != $lastlabel ) ) {\n\n\t\t\t\t$label = str_replace( 'Last', $lastlabel, $label );\n\t\t\t}\n\n\t\t\t$size = ( isset( $atts['size'] ) ) ? ' size=\"' . $atts['size'] . '\" ' : '';\n\n\t\t\t$data = ( isset( $profile[ $field ] ) ) ? ' value=\"' . $profile[ $field ] . '\" ' : '';\n\n\t\t\t$output = '<div class=\"' . $field . '\"><label>' . $label . ':</label> <input type=\"text\" name=\"guest[' . $field . '][' . $count . ']\" id=\"' . $field . $fieldcount++ . '\" ' . $size . $data . '  class=\"' . $field . '\" /></div>';\n\n\t\t} elseif ( isset( $atts['selectfield'] ) ) {\n\n\t\t\t$field = $atts['selectfield'];\n\n\t\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t$selected = ( isset( $atts['selected'] ) ) ? trim( $atts['selected'] ) : '';\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$selected = $profile[ $field ];\n\t\t\t}\n\n\t\t\t$output = '<div class=\"' . $field . '\"><label>' . $label . ':</label> <select  class=\"' . $field . '\" name=\"guest[' . $field . '][' . $count . ']\" id=\"' . $field . $fieldcount++ . '\" >' . \"\\n\";\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$s = ( $selected == $i ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t$output .= '<option value=\"' . $i . '\" ' . $s . '>' . $i . '</option>' . \"\\n\";\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output .= '</select></div>' . \"\\n\";\n\n\t\t} elseif ( isset( $atts['radio'] ) ) {\n\n\t\t\t$field = $atts['radio'];\n\n\t\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t$sep = ( isset( $atts['sep'] ) ) ? $atts['sep'] : ' ';\n\n\t\t\t$checked = ( isset( $atts['checked'] ) ) ? trim( $atts['checked'] ) : '';\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$checked = $profile[ $field ];\n\t\t\t}\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$ischecked = ( $checked == $i ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\t\t$radio[] = '<input  class=\"' . $field . '\" type=\"radio\" name=\"guest[' . $field . '][' . $count . ']\" id=\"' . $field . $i . $fieldcount++ . '\" class=\"' . $field . '\"  value=\"' . $i . '\"  ' . $ischecked . '/> ' . $i . ' ';\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output = '<div  class=\"' . $field . '\"><label>' . $label . ':</label> ' . implode( $sep, $radio ) . '</div>';\n\n\t\t}\n\n\t\treturn $output;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpnote' ) ) {\n\n\tfunction rsvpnote() {\n\n\t\tglobal $rsvp_row;\n\n\t\treturn ( isset( $rsvp_row->note ) ) ? $rsvp_row->note : '';\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'date_title' ) ) {\n\n\tfunction date_title( $title, $sep = '&raquo;', $seplocation = 'left' ) {\n\n\t\tglobal $post;\n\n\t\tglobal $wpdb;\n\n\t\tif ( empty( $post->post_type ) ) {\n\n\t\t\treturn $title;\n\t\t}\n\n\t\tif ( $post->post_type == 'rsvpmaker' ) {\n\n\t\t\t// get first date associated with event\n\n\t\t\t$sql = 'SELECT meta_value FROM ' . $wpdb->postmeta . \" WHERE meta_key='_rsvp_dates' AND post_id = $post->ID ORDER BY meta_value\";\n\n\t\t\t$dt = $wpdb->get_var( $sql );\n\n\t\t\t$title .= rsvpmaker_date( 'F jS', rsvpmaker_strtotime( $dt ) );\n\n\t\t\tif ( $seplocation == 'right' ) {\n\n\t\t\t\t$title .= \" $sep \";\n\n\t\t\t} else {\n\t\t\t\t$title = \" $sep $title \";\n\t\t\t}\n\t\t}\n\n\t\treturn $title;\n\n\t}\n}\n\nadd_filter( 'wp_title', 'date_title', 1, 3 );\n\nif ( ! function_exists( 'rsvpmaker_template_list' ) ) {\n\n\tfunction rsvpmaker_template_list() {\n\n\t\tglobal $rsvp_options, $wpdb, $current_user;\n\n\t\t?>\n\n<div class=\"wrap\"> \n\n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n\n<h2>\n\t\t<?php\n\t\tesc_html_e( 'Event Templates', 'rsvpmaker' );\n\n\t\tprintf( ' <a href=\"%s\"  class=\"add-new-h2\">%s</a>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&new_template=1' ), __( 'New Template', 'rsvpmaker' ) );\n\n\t\t?>\n  </h2> \n\n\t\t<?php\n\n\t\tif ( ! empty( $_POST['import_shared_template'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  ) {\n\t\t\t$url = sanitize_text_field( $_POST['import_shared_template'] );\n\t\t\tprintf( '<p>Importing %s</p>', $url );\n\t\t\t$duplicate = $wpdb->get_var( \"SELECT ID FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id  WHERE meta_key='template_imported_from' AND meta_value='$url' \" );\n\t\t\t$response  = wp_remote_get( $url );\n\n\t\t\tif ( empty( $duplicate ) && is_array( $response ) && ! is_wp_error( $response ) ) {\n\t\t\t\t$headers = $response['headers']; // array of http header lines\n\t\t\t\t$body    = $response['body']; // use the content\n\t\t\t\t$data    = json_decode( $body );\n\t\t\t\t// print_r($data);\n\t\t\t\t$newpost['post_type']    = 'rsvpmaker';\n\t\t\t\t$newpost['post_status']  = 'publish';\n\t\t\t\t$newpost['post_author']  = $current_user->ID;\n\t\t\t\t$newpost['post_title']   = $data->post_title;\n\t\t\t\t$newpost['post_content'] = $data->post_content;\n\t\t\t\t$id                      = wp_insert_post( $newpost );\n\t\t\t\trsvpmaker_set_template_defaults( $id );\n\t\t\t\tupdate_post_meta( $id, 'template_imported_from', $url );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $_POST['share_template'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t\tupdate_post_meta( $_POST['share_template'], 'rsvpmaker_shared_template', true );\n\t\t}\n\n\t\tif ( ! empty( $_POST['override'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$override = (int) $_POST['override'];\n\n\t\t\t$overridden = (int) $_POST['overridden'];\n\n\t\t\t$opost = get_post( $override );\n\n\t\t\t$target = get_post( $overridden );\n\n\t\t\t$sk = get_template_sked( $overridden );\n\n\t\t\tif ( $sk ) {\n\n\t\t\t\twp_update_post(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'ID'         => $override,\n\t\t\t\t\t\t'post_title' => $opost->post_title . ' (backup)',\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$newpost = array(\n\t\t\t\t'ID'           => $overridden,\n\t\t\t\t'post_title'   => $opost->post_title,\n\t\t\t\t'post_content' => $opost->post_content,\n\t\t\t\t'post_name'    => $target->post_name,\n\t\t\t);\n\n\t\t\twp_update_post( $newpost );\n\t\t\t$sql = $wpdb->prepare( \"UPDATE $wpdb->postmeta SET meta_key='_detached_from_template' WHERE meta_key='_meet_recur' AND post_id=%d\", $overridden );\n\t\t\t$wpdb->query( $sql );\n\t\t\tupdate_post_meta( $overridden, '_meet_recur', $override );\n\n\t\t\tprintf( '<div class=\"updated notice notice-success\">Applied \"%s\" template: <a href=\"%s\">View</a> | <a href=\"%s\">Edit</a></div>', $opost->post_title, get_permalink( $overridden ), admin_url( 'post.php?action=edit&post=' . $overridden ) );\n\n\t\t\tif(isset($_POST['copymeta']))\n\t\t\t{\n\t\t\t\tforeach($_POST['copymeta'] as $key)\n\t\t\t\t{\n\t\t\t\t\t$key = sanitize_text_field($key);\n\t\t\t\t\tif(empty($keysql))\n\t\t\t\t\t\t$keysql = '';\n\t\t\t\t\telse\n\t\t\t\t\t\t$keysql .= ' OR ';\n\t\t\t\t\t$keysql .= \"  meta_key LIKE '$key%' \";//match multiple reminder messages\n\t\t\t\t}\n\n\t\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $override .\" AND ($keysql) \";\n\t\t\t\techo $sql;\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\t\n\t\t\t\tif ( is_array( $results ) ) {\n\t\n\t\t\t\t\tforeach ( $results as $row ) {\t\n\t\t\t\t\t\t\tupdate_post_meta( $overridden, $row->meta_key, $row->meta_value );\n\t\t\t\t\t\t\t$copied[] = $row->meta_key;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif ( ! empty( $copied ) ) {\n\n\t\t\t\tprintf( '<p>Settings copied: %s</p>', implode( ', ', $copied ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_GET['override_template'] ) || ( isset( $_GET['t'] ) && isset( $_GET['overconfirm'] ) ) ) {\n\n\t\t\t$t = ( isset( $_GET['override_template'] ) ) ? (int) $_GET['override_template'] : (int) $_GET['t'];\n\n\t\t\t$e = (int) $_GET['event'];\n\n\t\t\t$ts = get_rsvp_date( $e );\n\n\t\t\tif ( isset( $_GET['overconfirm'] ) ) {\n\n\t\t\t\t$event = get_post( $e );\n\n\t\t\t\t$newpost = array(\n\t\t\t\t\t'ID'           => $t,\n\t\t\t\t\t'post_title'   => $event->post_title,\n\t\t\t\t\t'post_content' => $event->post_content,\n\t\t\t\t);\n\n\t\t\t\twp_update_post( $newpost );\n\n\t\t\t\tprintf( '<h1>Template updated based on contents of event for %s</h1>', rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $ts ) ) );\n\n\t\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $e;\n\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t\t$docopy = array( '_add_timezone', '_convert_timezone', '_calendar_icons', 'tm_sidebar', 'sidebar_officers' );\n\n\t\t\t\tif ( is_array( $results ) ) {\n\n\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\tif ( ( strpos( $row->meta_key, 'rsvp' ) && ( $row->meta_key != '_rsvp_dates' ) ) || ( in_array( $row->meta_key, $docopy ) ) ) {\n\n\t\t\t\t\t\t\tupdate_post_meta( $t, $row->meta_key, $row->meta_value );\n\n\t\t\t\t\t\t\t$copied[] = $row->meta_key;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $copied ) ) {\n\n\t\t\t\t\tprintf( '<p>Settings copied: %s</p>', implode( ', ', $copied ) );\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tprintf( '<h1 style=\"color: red;\">Update Template?</h1><p>Click &quot;Confirm&quot; to override template with the contents of your %s event<p><form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_template_list\" /><input type=\"hidden\" name=\"t\" value=\"%d\" /><input type=\"hidden\" name=\"event\" value=\"%d\" /><input type=\"hidden\" name=\"overconfirm\" value=\"1\" /><button>Confirm</button>%s</form> ', rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $ts ) ), admin_url( 'edit.php' ), $t, $e, rsvpmaker_nonce('return') );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_POST['event_to_template'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$e = (int) $_POST['event_to_template'];\n\n\t\t\t$ts = get_rsvp_date( $e );\n\n\t\t\t$tsexplode = preg_split( '/[\\s:]/', $ts );\n\n\t\t\t$event = get_post( $e );\n\n\t\t\t$newpost = array(\n\t\t\t\t'post_title'   => $event->post_title,\n\t\t\t\t'post_content' => $event->post_content,\n\t\t\t\t'post_type'    => 'rsvpmaker',\n\t\t\t\t'post_author'  => $current_user->ID,\n\t\t\t\t'post_status'  => 'publish',\n\t\t\t);\n\n\t\t\t$t = wp_insert_post( $newpost );\n\n\t\t\tarray(\n\t\t\t\t'week'      => array( 0 ),\n\t\t\t\t'dayofweek' => array( 0 ),\n\t\t\t\t'hour'      => $tsexplode[1],\n\t\t\t\t'minutes'   => $tsexplode[2],\n\t\t\t);\n\n\t\t\tnew_template_schedule( $t, $template );\n\n\t\t\tprintf( '<h1>Template updated based on contents of event for %s</h1>', rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $ts ) ) );\n\n\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $e;\n\n\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t$docopy = array( '_add_timezone', '_convert_timezone', '_calendar_icons', 'tm_sidebar', 'sidebar_officers' );\n\n\t\t\tif ( is_array( $results ) ) {\n\n\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\tif ( ( strpos( $row->meta_key, 'rsvp' ) && ( $row->meta_key != '_rsvp_dates' ) ) || ( in_array( $row->meta_key, $docopy ) ) ) {\n\n\t\t\t\t\t\tupdate_post_meta( $t, $row->meta_key, $row->meta_value );\n\n\t\t\t\t\t\t$copied[] = $row->meta_key;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $copied ) ) {\n\n\t\t\t\tprintf( '<p>Settings copied: %s</p>', implode( ', ', $copied ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $_REQUEST['t'] ) ) {\n\n\t\t\tprintf( '<h3>Add One or More Events Based on a Template</h3><form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" />%s <select name=\"page\"><option value=\"rsvpmaker_setup\">%s</option><option value=\"rsvpmaker_template_list\">%s</option></select><br /><br />%s %s<br >%s %s</form>', admin_url( 'edit.php' ), __( 'Add', 'rsvpmaker' ), __( 'One event', 'rsvpmaker' ), __( 'Multiple events', 'rsvpmaker' ), __( 'based on', 'rsvpmaker' ), rsvpmaker_templates_dropdown( 't' ), get_submit_button( 'Submit' ), rsvpmaker_nonce('return') );\n\t\t}\n\n\t\tdo_action( 'rsvpmaker_template_list_top' );\n\n\t\tif ( isset( $_GET['t'] ) ) {\n\n\t\t\t$t = (int) $_GET['t'];\n\n\t\t\trsvp_template_checkboxes( $t );\n\n\t\t}\n\n\t\t$dayarray = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ) );\n\n\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t\tglobal $wpdb;\n\n\t\t$wpdb->show_errors();\n\n\t\tglobal $current_user;\n\n\t\tglobal $rsvp_options;\n\n\t\t$current_template = $event_options = $template_options = '';\n\n\t\t$template_override = '';\n\n\t\tif ( isset( $_GET['restore'] ) ) {\n\n\t\t\techo '<div class=\"notice notice-info\">';\n\n\t\t\t$r = (int) $_GET['restore'];\n\n\t\t\t$sked['week'] = array( 6 );\n\n\t\t\t$sked['dayofweek'] = array();\n\n\t\t\t$sked['hour'] = $rsvp_options['defaulthour'];\n\n\t\t\t$sked['minutes'] = $rsvp_options['defaultmin'];\n\n\t\t\tif ( $_GET['specimen'] ) {\n\n\t\t\t\t$date = get_rsvp_date( $_GET['specimen'] );\n\n\t\t\t\tif ( $date ) {\n\n\t\t\t\t\t$t = strtotime( $date );\n\n\t\t\t\t\t$sked['dayofweek'] = array( date( 'w', $t ) );\n\n\t\t\t\t\t$sked['hour'] = date( 'h', $t );\n\n\t\t\t\t\t$sked['minutes'] = date( 'i', $t );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sked['duration'] = '';\n\n\t\t\t$sked['stop'] = '';\n\n\t\t\tnew_template_schedule( $r, $sked );\n\n\t\t\techo '<p>Restoring template. Edit to fix schedule parameters.</p></div>';\n\n\t\t}\n\n\t\t$results = rsvpmaker_get_templates('',true);\n\n\t\tif ( $results ) {\n\n\t\t\tprintf( '<h3>Templates</h3><table  class=\"wp-list-table widefat fixed posts\" cellspacing=\"0\"><thead><tr><th>%s</th><th>%s</th><th>%s</th><th>%s</th></tr></thead><tbody>', __( 'Title', 'rsvpmaker' ), __( 'Schedule', 'rsvpmaker' ), __( 'Projected Dates', 'rsvpmaker' ), __( 'Event', 'rsvpmaker' ) );\n\n\t\t\tforeach ( $results as $post ) {\n\n\t\t\t\tif($post->post_status == 'draft')\n\t\t\t\t\t$post->post_title .= ' (draft)';\n\n\t\t\t\tif ( isset( $_GET['apply_current'] ) && ( $post->ID == $_GET['apply_current'] ) ) {\n\n\t\t\t\t\t$current_template = '<option value=\"' . $post->ID . '\">Current Template: ' . $post->post_title . '</option>';\n\t\t\t\t}\n\n\t\t\t\t$sked = get_template_sked( $post->ID );\n\n\t\t\t\t// backward compatability\n\n\t\t\t\tif ( is_array( $sked['week'] ) ) {\n\n\t\t\t\t\t$weeks = $sked['week'];\n\n\t\t\t\t\t$dows = ( empty( $sked['dayofweek'] ) ) ? 0 : $sked['dayofweek'];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$weeks = array();\n\n\t\t\t\t\t$dows = array();\n\n\t\t\t\t\t$weeks[0] = ( isset( $sked['week'] ) ) ? $sked['week'] : 0;\n\n\t\t\t\t\t$dows[0] = ( isset( $sked['dayofweek'] ) ) ? $sked['dayofweek'] : 0;\n\n\t\t\t\t}\n\n\t\t\t\t$dayarray = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ) );\n\n\t\t\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t\t\t\tif ( empty( $sked['week'] ) || ( (int) $sked['week'][0] == 0 ) ) {\n\n\t\t\t\t\t$s = __( 'Schedule Varies', 'rsvpmaker' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tforeach ( $weeks as $week ) {\n\n\t\t\t\t\t\tif ( empty( $s ) ) {\n\n\t\t\t\t\t\t\t$s = '';\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$s .= '/ ';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$s .= $weekarray[ (int) $week ] . ' ';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! empty( $dows ) && is_array( $dows ) ) {\n\n\t\t\t\t\t\tforeach ( $dows as $dow ) {\n\n\t\t\t\t\t\t\tif ( $dow > -1 ) {\n\n\t\t\t\t\t\t\t\t$s .= $dayarray[ (int) $dow ] . ' ';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( empty( $sked['hour'] ) || empty( $sked['minutes'] ) ) {\n\n\t\t\t\t\t\t$time = '';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$time = rsvpmaker_strtotime( $sked['hour'] . ':' . $sked['minutes'] );\n\n\t\t\t\t\t\t$s .= ' ' . rsvpmaker_date( $rsvp_options['time_format'], $time );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(get_post_meta( $post->ID, 'rsvpautorenew', true ) )\n\t\t\t\t\t$s .= '<br><strong>'.__('Set to automatically add dates','rsvpmaker').'</strong>';\n\n\t\t\t\t$eds = get_additional_editors( $post->ID );\n\n\t\t\t\tif ( ( $post->post_author == $current_user->ID ) || in_array( $current_user->ID, $eds ) || current_user_can( 'edit_post', $post->ID ) ) {\n\n\t\t\t\t\t$template_edit_url = admin_url( 'post.php?action=edit&post=' . intval( $post->ID ) );\n\n\t\t\t\t\t$title = sprintf( '<a href=\"%s\">%s</a>', esc_attr( $template_edit_url ), esc_html( $post->post_title ) );\n\n\t\t\t\t\tif ( strpos( $post->post_content, '[toastmaster' ) && function_exists( 'agenda_setup_url' ) ) { // rsvpmaker for toastmasters\n\n\t\t\t\t\t\t$title .= sprintf( ' (<a href=\"%s\">Toastmasters %s</a>)', agenda_setup_url( $post->ID ), __( 'Agenda Setup', 'rsvptoast' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t$template_options .= sprintf( '<option value=\"%d\">%s</option>', $post->ID, esc_html( $post->post_title ) );\n\n\t\t\t\t\t$template_override .= sprintf( '<option value=\"%d\">APPLY TO TEMPLATE: %s</option>', $post->ID, esc_html( $post->post_title ) );\n\n\t\t\t\t\t$template_recur_url = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . intval( $post->ID ) );\n\n\t\t\t\t\t$schedoptions = sprintf( ' (<a href=\"%s\">Options</a>)', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=' ) . intval( $post->ID ) );\n\n\t\t\t\t\tprintf( '<tr><td>%s</td><td>%s</td><td><a href=\"%s\">' . __( 'Create/Update', 'rsvpmaker' ) . '</a></td><td>%s</td></tr>' . \"\\n\", wp_kses_post( $title ) . wp_kses_post( $schedoptions ), $s, esc_attr( $template_recur_url ), next_or_recent( $post->ID ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$title = $post->post_title;\n\n\t\t\t\t\tprintf( '<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>' . \"\\n\", esc_html( $title ), $s, __( 'Not an editor', 'rsvpmaker' ), next_or_recent( $post->ID ) );\n\n\t\t\t\t}\n\n\t\t\t\t$s = '';\n\n\t\t\t}\n\n\t\t\techo '</tbody></table>';\n\n\t\t\tprintf( '<p><a href=\"%s\">See all templates (including drafts)</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&rsvpsort=templates' ) );\n\n\t\t\tif ( isset( $template_options ) ) {\n\n\t\t\t\techo '<div id=\"applytemplate\"></div><h3>Apply Template to Existing Event</h3>';\n\n\t\t\t\t$target_id = isset( $_GET['apply_target'] ) ? (int) $_GET['apply_target'] : 0;\n\n\t\t\t\tif ( $target_id ) {\n\n\t\t\t\t\t$event = get_rsvp_event( 'ID = ' . $target_id );\n\n\t\t\t\t\tif ( ! empty( $event ) ) {\n\n\t\t\t\t\t\t$event_options .= sprintf( '<option value=\"%d\" selected=\"selected\">%s %s</option>', $event->ID, esc_html( $event->post_title ), esc_html( $event->datetime ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$current_template .= '<option value=\"0\">Choose Template</option>';\n\n\t\t\t\t$sql = \"SELECT *, $wpdb->posts.ID as postID, meta_value as datetime\n\nFROM `\" . $wpdb->postmeta . \"`\n\nJOIN $wpdb->posts ON \" . $wpdb->postmeta . \".post_id = $wpdb->posts.ID AND meta_key='_rsvp_dates'\n\nWHERE meta_value >= '\" . get_sql_curdate() . \"' AND $wpdb->posts.post_status = 'publish'\n\nORDER BY meta_value LIMIT 0,100\";\n\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t\tif ( is_array( $results ) ) {\n\n\t\t\t\t\tforeach ( $results as $r ) {\n\n\t\t\t\t\t\t$event_options .= sprintf( '<option value=\"%d\">%s %s</option>', $r->postID, esc_html( $r->post_title ), $r->datetime );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' );\n\t\n\t\t\t\tprintf( '<form method=\"post\" action=\"%s\"><p>Apply <select name=\"override\">%s</select> to <select name=\"overridden\">%s</select></p><p>Copy settings:</p>', $action, $current_template . $template_options, $event_options . $template_override );\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_add_timezone\" name=\"copymeta[]\">  %s</div>',__('Show Timezone','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_convert_timezone\" name=\"copymeta[]\">  %s</div>',__('Convert Timezone','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_calendar_icons\" name=\"copymeta[]\">  %s</div>',__('Show Calendar Icons','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_on\" name=\"copymeta[]\">  %s</div>',__('Collect RSVPs on/off','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_instructions\" name=\"copymeta[]\">  %s</div>',__('RSVP Instructions','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_to\" name=\"copymeta[]\">  %s</div>',__('Email for RSVP Notifications','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_rsvpmaker_send_confirmation_email\" name=\"copymeta[]\">  %s</div>',__('Send Confirmation Email on/off','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_confirm\" name=\"copymeta[]\">  %s</div>',__('Confirmation Email Message','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_confirmation_include_event\" name=\"copymeta[]\">  %s</div>',__('Include Event Details in Confirmation','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_confirmation_after_payment\" name=\"copymeta[]\">  %s</div>',__('Send Confirmation After Payment on/off','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_reminder_\" name=\"copymeta[]\">  %s</div>',__('Reminder Email Messages','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_timezone_string\" name=\"copymeta[]\">  %s</div>',__('Timezone','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_count\" name=\"copymeta[]\">  %s</div>',__('Show RSVP Count Publicly','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_show_attendees\" name=\"copymeta[]\">  %s</div>',__('Show Attendees Publicly','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_login_required\" name=\"copymeta[]\">  %s</div>',__('Login Required','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_max\" name=\"copymeta[]\">  %s</div>',__('Maximum Number of Attendees','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_per\" name=\"copymeta[]\">  %s</div>',__('Pricing','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_count_party\" name=\"copymeta[]\">  %s</div>',__('Count Members of Party for Event Pricing','rsvpmaker'));\n\t\t\t\tsubmit_button();\n\t\t\t\trsvpmaker_nonce();\n\t\t\t\techo '</form>';\n\n\t\t\t}\n\t\t}\n\n\t\t$event_options = '';\n\n\t\t$sql = \"SELECT *, $wpdb->posts.ID as postID, meta_value as datetime\n\nFROM `\" . $wpdb->postmeta . \"`\n\nJOIN $wpdb->posts ON \" . $wpdb->postmeta . \".post_id = $wpdb->posts.ID AND meta_key='_rsvp_dates'\n\nWHERE meta_value >= DATE_SUB('\" . get_sql_curdate() . \"',INTERVAL 3 MONTH) AND $wpdb->posts.post_status = 'publish'\n\nORDER BY meta_value LIMIT 0,100\";\n\n\t\t$results = $wpdb->get_results( $sql );\n\n\t\tif ( is_array( $results ) ) {\n\n\t\t\tforeach ( $results as $r ) {\n\n\t\t\t\t$event_options .= sprintf( '<option value=\"%d\">%s %s</option>', $r->postID, esc_html( $r->post_title ), $r->datetime );\n\n\t\t\t}\n\t\t}\n\n\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' );\n\n\t\techo '<h3>Create Template Based on Existing Event</h3>';\n\n\t\tprintf(\n\t\t\t'<form method=\"post\" action=\"%s\"><p>%s <select name=\"event_to_template\">%s</select>\n\n\t\t</p>',\n\t\t\t$action,\n\t\t\t__( 'Copy', 'rsvpmaker' ),\n\t\t\t$event_options\n\t\t);\n\n\t\tsubmit_button( __( 'Copy Event', 'rsvpmaker' ) );\n\t\trsvpmaker_nonce();\n\t\techo '</form>';\n\n\t\tprintf( '<h2>%s</h2><p>%s</p>', __( 'Shared Templates', 'rsvpmaker' ), __( 'RSVPMaker users can share the content of templates between websites', 'rsvpmaker' ) );\n\n\t\t$shared_templates = '';\n\t\t$results          = $wpdb->get_results( \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID= $wpdb->postmeta.post_id WHERE meta_key='rsvpmaker_shared_template'\" );\n\t\tif ( $results ) {\n\t\t\techo '<h3>My Shared Templates</h3>';\n\t\t\tforeach ( $results as $row ) {\n\t\t\t\tprintf( '<p>%s<br />%s</p>', $row->post_title, rest_url( 'rsvpmaker/v1/shared_template/' . intval( $row->ID ) ) );\n\t\t\t}\n\t\t}\n\n\t\tdo_action( 'import_shared_template_prompt' );\n\n\t\tprintf( '<h3>%s</h3><form action=\"%s\" method=\"post\"><input name=\"import_shared_template\" />', __( 'Import Shared Template', 'rsvpmaker' ), admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' ) );\n\t\tsubmit_button( __( 'Import', 'rsvpmaker' ) );\n\t\trsvpmaker_nonce();\n\t\techo '</form>';\n\n\t\tif ( $template_options ) {\n\t\t\tprintf( '<h3>%s</h3><form action=\"%s\" method=\"post\"><select name=\"share_template\">%s</select>', __( 'Share Template', 'rsvpmaker' ), admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' ), $template_options );\n\t\t\tsubmit_button( __( 'Share Template', 'rsvpmaker' ) );\n\t\t\trsvpmaker_nonce();\n\t\t\techo '</form>';\n\t\t}\n\n\t\t$restore = '';\n\n\t\t$sql = \"select count(*) as copies, meta_value as t FROM $wpdb->postmeta WHERE `meta_key` = '_meet_recur' group by meta_value\";\n\n\t\t$results = $wpdb->get_results( $sql );\n\n\t\tforeach ( $results as $index => $row ) {\n\n\t\t\tif ( ! rsvpmaker_is_template( $row->t ) ) {\n\n\t\t\t\t$corrupted = get_post( $row->t );\n\n\t\t\t\tif ( $corrupted ) {\n\n\t\t\t\t\t$future = future_rsvpmakers_by_template( $row->t );\n\n\t\t\t\t\t$futurecount = ( $future ) ? sizeof( $future ) : 0;\n\n\t\t\t\t\t$specimen = ( $futurecount ) ? $future[0] : 0;\n\n\t\t\t\t\t$restore .= sprintf( '<p><a href=\"%s\">Restore</a> - This template appears to have been corrupted: <strong>%s</strong> (%d) last modified: %s, used for %d future events.</p>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&restore=' . intval( $corrupted->ID ) . '&specimen=' . intval( $specimen ) ), esc_html( $corrupted->post_title ), esc_attr( $corrupted->ID ), esc_attr( $corrupted->post_modified ), esc_attr( $futurecount ) );\n\n\t\t\t\t\t// $restore .= var_export($future,true);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $restore ) ) {\n\n\t\t\techo '<h3>Restore Templates</h3>' . $restore;\n\t\t}\n\n\t\t$templates = rsvpmaker_get_templates();\n\t\tforeach ( $templates as $template ) {\n\t\t\t$date = get_rsvp_date( $template->ID );\n\t\t\tif ( $date ) {\n\t\t\t\tprintf( '<p>Template %d also shows date %s</p>', $template->ID, esc_html( $date ) );\n\t\t\t}\n\t\t}\n\t\t?>\n\n\n\n</div>\n\n\t\t<?php\n\n\t}\n}// end if pluggable\n\n\n\nfunction rsvpmaker_week( $index = 0, $context = '' ) {\n\n\tif ( $context == 'rsvpmaker_strtotime' ) {\n\n\t\t$weekarray = array( 'Varies', 'First', 'Second', 'Third', 'Fourth', 'Last', 'Every' );\n\n\t} else {\n\n\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t}\n\n\treturn $weekarray[ $index ];\n\n}\n\n\n\nfunction rsvpmaker_day( $index = 0, $context = '' ) {\n\n\tif ( $context == 'rsvpmaker_strtotime' ) {\n\n\t\t$dayarray = array( 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' );\n\n\t} else {\n\n\t\t$dayarray = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ), '' );\n\n\t}\n\n\treturn $dayarray[ $index ];\n\n}\n\n\n\nif ( ! function_exists( 'rsvp_template_checkboxes' ) ) {\n\n\tfunction rsvp_template_checkboxes( $t ) {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $current_user,$rsvp_options;\n\n\t\t$nomeeting = $editlist = $add_one = $add_date_checkbox = $event_options = $updatelist = '';\n\n\t\t$template = get_template_sked( $t );\n\n\t\t$post = get_post( $t );\n\n\t\t$template_editor = false;\n\n\t\tif ( current_user_can( 'edit_others_rsvpmakers' ) ) {\n\n\t\t\t$template_editor = true;\n\n\t\t} else {\n\n\t\t\t$eds = get_post_meta( $t, '_additional_editors', false );\n\n\t\t\t$eds[] = $wpdb->get_var( \"SELECT post_author FROM $wpdb->posts WHERE ID = $t\" );\n\n\t\t\t$template_editor = in_array( $current_user->ID, $eds );\n\n\t\t}\n\n\t\t$template = get_template_sked( $t );\n\n\t\t$weeks = $template['week'];\n\n\t\t$dows = $template['dayofweek'];\n\n\t\t$hour = ( isset( $template['hour'] ) ) ? (int) $template['hour'] : 17;\n\n\t\t$minutes = isset( $template['minutes'] ) ? $template['minutes'] : '00';\n\n\t\t$terms = get_the_terms( $t, 'rsvpmaker-type' );\n\n\t\tif ( $terms && ! is_wp_error( $terms ) ) {\n\n\t\t\t$rsvptypes = array();\n\n\t\t\tforeach ( $terms as $term ) {\n\n\t\t\t\t$rsvptypes[] = $term->term_id;\n\n\t\t\t}\n\t\t}\n\n\t\t$cy = date( 'Y' );\n\n\t\t$cm = rsvpmaker_date( 'm' );\n\n\t\t$cd = rsvpmaker_date( 'j' );\n\n\t\t$schedule = '';\n\n\t\tif ( $weeks[0] == 0 ) {\n\n\t\t\t$schedule = __( 'Schedule Varies', 'rsvpmaker' );\n\n\t\t} else {\n\n\t\t\tforeach ( $weeks as $week ) {\n\n\t\t\t\t$schedule .= rsvpmaker_week( $week ) . ' ';\n\t\t\t}\n\n\t\t\t$schedule .= ' / ';\n\n\t\t\tif ( ! empty( $dows ) && is_array( $dows ) ) {\n\n\t\t\t\tforeach ( $dows as $dow ) {\n\n\t\t\t\t\t$schedule .= rsvpmaker_day( $dow ) . ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(!empty($template['stop']))\n\t\t{\n\t\t\t$schedule .= ' - stop date set for '.$template['stop'] .' (<a href=\"'.admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id='.$t).'\">Options</a>)';\n\t\t}\n\n\t\tprintf( '<p id=\"template_ck\">%s:</p><h2>%s</h2><h3>%s</h3><blockquote><a href=\"%s\">%s</a></blockquote>', __( 'Template', 'rsvpmaker' ), esc_html( $post->post_title ), $schedule, admin_url( 'post.php?action=edit&post=' . $t ), __( 'Edit Template', 'rsvpmaker' ) );\n\n\t\t$hour = (int) $template['hour'];\n\n\t\t$minutes = $template['minutes'];\n\n\t\t$his = ( $hour < 10 ) ? '0' . $hour : $hour;\n\n\t\t$his .= ':' . $minutes . ':00';\n\n\t\t$cy              = date( 'Y' );\n\t\t$template_editor = false;\n\n\t\tif ( current_user_can( 'edit_others_rsvpmakers' ) ) {\n\n\t\t\t$template_editor = true;\n\n\t\t} else {\n\n\t\t\t$eds = get_post_meta( $t, '_additional_editors', false );\n\n\t\t\t$eds[] = $wpdb->get_var( \"SELECT post_author FROM $wpdb->posts WHERE ID = $t\" );\n\n\t\t\t$template_editor = in_array( $current_user->ID, $eds );\n\n\t\t}\n\n\t\t$cm = rsvpmaker_date( 'm' );\n\n\t\t$cd = rsvpmaker_date( 'j' );\n\n\t\tglobal $current_user;\n\n\t\t$sched_result = get_events_by_template( $t );\n\n\t\t$add_date_checkbox = $updatelist = $editlist = $nomeeting = '';\n\n\t\tif ( $sched_result ) {\n\n\t\t\tforeach ( $sched_result as $index => $sched ) {\n\n\t\t\t\t$thistime = rsvpmaker_strtotime( $sched->datetime );\n\n\t\t\t\t$fulldate = rsvpmaker_date( $rsvp_options['long_date'] . ' ' . $rsvp_options['time_format'], $thistime );\n\n\t\t\t\t$a = ( $index % 2 ) ? '' : 'alternate';\n\n\t\t\t\t$tparts = preg_split( '/\\s+/', $sched->datetime );\n\n\t\t\t\tif ( $his != $tparts[1] ) {\n\n\t\t\t\t\t$newtime = str_replace( $tparts[1], $his, $sched->datetime );\n\n\t\t\t\t\t$timechange = sprintf( '<input type=\"hidden\" name=\"timechange[%d]\" value=\"%s\" />', $sched->ID, $newtime );\n\n\t\t\t\t\tif ( empty( $timechangemessage ) ) {\n\n\t\t\t\t\t\t$timechangemessage = '<p>' . __( 'Start time for updated events will be changed to', 'rsvpmaker' ) . ' ' . rsvpmaker_date( $rsvp_options['time_format'], rsvpmaker_strtotime( $newtime ) );\n\t\t\t\t\t\techo wp_kses_post($timechangemessage);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$timechange = '';\n\t\t\t\t}\n\n\t\t\t\t$donotproject[] = rsvpmaker_date( 'Y-m-j', $thistime );\n\n\t\t\t\t$nomeeting .= sprintf( '<option value=\"%s\">%s (%s)</option>', $sched->postID, date( 'F j, Y', $thistime ), __( 'Already Scheduled', 'rsvpmaker' ) );\n\n\t\t\t\t$cy = date( 'Y', $thistime ); // advance starting time\n\n\t\t\t\t$cm = rsvpmaker_date( 'm', $thistime );\n\n\t\t\t\t$cd = rsvpmaker_date( 'j', $thistime );\n\n\t\t\t\tif ( strpos( $sched->post_title, 'o Meeting:' ) ) {\n\n\t\t\t\t\t$sched->post_title = '<span style=\"color:red;\">' . $sched->post_title . '</span>';\n\t\t\t\t}\n\n\t\t\t\tif ( current_user_can( 'delete_post', $sched->postID ) ) {\n\n\t\t\t\t\t$delete_text = __( 'Move to Trash' );\n\n\t\t\t\t\t$d = '<input type=\"checkbox\" name=\"trash_template[]\" value=\"' . $sched->postID . '\" class=\"trash_template\" /> <a class=\"submitdelete deletion\" href=\"' . get_delete_post_link( $sched->postID ) . '\">' . esc_html( $delete_text ) . '</a>';\n\n\t\t\t\t} else {\n\t\t\t\t\t$d = '-';\n\t\t\t\t}\n\n\t\t\t\t$ifdraft = ( $sched->post_status == 'draft' ) ? ' (draft) ' : '';\n\n\t\t\t\t$edit = ( ( $sched->post_author == $current_user->ID ) || $template_editor ) ? sprintf( '<a href=\"%s?post=%d&action=edit\">' . __( 'Edit', 'rsvpmaker' ) . '</a>', admin_url( 'post.php' ), $sched->postID ) : '-';\n\n\t\t\t\t$schedoptions = sprintf( ' (<a href=\"%s\">Options</a>)', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=' ) . $sched->ID );\n\n\t\t\t\t$editlist .= sprintf( '<tr class=\"%s\"><td><input type=\"checkbox\" name=\"update_from_template[]\" value=\"%s\" class=\"update_from_template\" /> %s </td><td>%s</td><td><input type=\"checkbox\" name=\"detach_from_template[]\" value=\"%d\" /> </td><td>%s</td><td>%s</td><td><a href=\"%s\">%s</a></td></tr>', $a, $sched->postID, $timechange, $edit, $sched->postID, $d, rsvpmaker_date( 'F d, Y', $thistime ), get_post_permalink( $sched->postID ), $sched->post_title . $ifdraft . $schedoptions );\n\n\t\t\t\t$template_update = get_post_meta( $sched->postID, '_updated_from_template', true );\n\n\t\t\t\tif ( ! empty( $template_update ) && ( $template_update != $sched->post_modified ) ) {\n\t\t\t\t\t$mod = ' <span style=\"color:red;\">* ' . __( 'Modified independently of template. Update could overwrite customizations.', 'rsvpmaker' ) . '</span> ' . sprintf( '<input type=\"checkbox\" name=\"detach_from_template[]\" value=\"%d\" /> ', $sched->postID ) . __( 'Detach', 'rsvpmaker' );\n\t\t\t\t} else {\n\t\t\t\t\t$mod = '';\n\t\t\t\t}\n\n\t\t\t\t// $sametime_events\n\t\t\t\t$mod        .= rsvpmaker_sametime( $sched->datetime, $sched->ID );\n\t\t\t\t$updatelist .= sprintf( '<p class=\"%s\"><input type=\"checkbox\" name=\"update_from_template[]\" value=\"%s\"  class=\"update_from_template\" /><em>%s</em> %s <span class=\"updatedate\">%s</span> %s %s</p>', $a, $sched->postID, __( 'Update', 'rsvpmaker' ), $sched->post_title . $ifdraft, $fulldate, $mod, $timechange );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $updatelist ) ) {\n\n\t\t\t$updatelist = '<p>' . __( 'Already Scheduled' ) . \"</p>\\n\" . '<fieldset>\n\n<div><input type=\"checkbox\" class=\"checkall\"> ' . __( 'Check all', 'rsvpmaker' ) . '</div>' . \"\\n\"\n\n\t\t\t. $updatelist . \"\\n</fieldset>\\n\";\n\t\t}\n\n\t\t// missing template variable\n\n\t\t// problem call\n\n\t\t// print_r($template);\n\n\t\t$projected = rsvpmaker_get_projected( $template );\n\t\tif(isset($_GET['debug']))\n\t\tprint_r($projected);\n\t\tif ( $projected && is_array( $projected ) ) {\n\t\t\tforeach ( $projected as $i => $ts ) {\n\t\t\t\tob_start();\n\n\t\t\t\t$today = rsvpmaker_date( 'd', $ts );\n\n\t\t\t\t$cm = rsvpmaker_date( 'n', $ts );\n\n\t\t\t\t$y = date( 'Y', $ts );\n\n\t\t\t\t$y0 = $y - 1;\n\n\t\t\t\t$y2 = $y + 1;\n\n\t\t\t\tif ( ( $ts < current_time( 'timestamp' ) ) && ! isset( $_GET['start'] ) ) {\n\n\t\t\t\t\tcontinue; // omit dates past\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $donotproject ) && is_array( $donotproject ) && in_array( rsvpmaker_date( 'Y-m-j', $ts ), $donotproject ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( empty( $nomeeting ) ) {\n\t\t\t\t\t$nomeeting = '';\n\t\t\t\t}\n\n\t\t\t\t$nomeeting .= sprintf( '<option value=\"%s\">%s</option>', date( 'Y-m-d', $ts ), date( 'F j, Y', $ts ) );\n\n\t\t\t\t?>\n\n<div style=\"font-family:Courier, monospace\"><input name=\"recur_check[<?php echo esc_attr($i); ?>]\" type=\"checkbox\" class=\"update_from_template\" value=\"1\">\n\n\t\t\t\t<?php esc_html_e( 'Month', 'rsvpmaker' ); ?>: \n\n\t\t\t  <select name=\"recur_month[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t  <option value=\"<?php echo esc_attr($cm); ?>\"><?php echo esc_attr($cm); ?></option> \n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  </select> \n\n\t\t\t\t<?php esc_html_e( 'Day', 'rsvpmaker' ); ?> \n\n\t\t\t<select name=\"recur_day[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t\t<?php\n\n\t\t\t\techo sprintf( '<option value=\"%s\">%s</option>', $today, $today );\n\n\t\t\t\t?>\n\n\t\t\t  <option value=\"\">Not Set</option>\n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  <option value=\"13\">13</option> \n\n\t\t\t  <option value=\"14\">14</option> \n\n\t\t\t  <option value=\"15\">15</option> \n\n\t\t\t  <option value=\"16\">16</option> \n\n\t\t\t  <option value=\"17\">17</option> \n\n\t\t\t  <option value=\"18\">18</option> \n\n\t\t\t  <option value=\"19\">19</option> \n\n\t\t\t  <option value=\"20\">20</option> \n\n\t\t\t  <option value=\"21\">21</option> \n\n\t\t\t  <option value=\"22\">22</option> \n\n\t\t\t  <option value=\"23\">23</option> \n\n\t\t\t  <option value=\"24\">24</option> \n\n\t\t\t  <option value=\"25\">25</option> \n\n\t\t\t  <option value=\"26\">26</option> \n\n\t\t\t  <option value=\"27\">27</option> \n\n\t\t\t  <option value=\"28\">28</option> \n\n\t\t\t  <option value=\"29\">29</option> \n\n\t\t\t  <option value=\"30\">30</option> \n\n\t\t\t  <option value=\"31\">31</option> \n\n\t\t\t</select> \n\n\t\t\t\t<?php esc_html_e( 'Year', 'rsvpmaker' ); ?>\n\n\t\t\t<select name=\"recur_year[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t<option value=\"<?php echo esc_attr($y0); ?>\"><?php echo esc_attr($y0); ?></option> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y); ?>\" selected=\"selected\"><?php echo esc_attr($y); ?></option> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y2); ?>\"><?php echo esc_attr($y2); ?></option> \n\n\t\t\t</select>\n\n\t\t\t<input type=\"text\" name=\"recur_title[<?php echo esc_attr($i); ?>]\" value=\"<?php echo esc_html( $post->post_title ); ?>\" >\n\t\t\t\t<?php echo rsvpmaker_sametime( rsvpmaker_date( 'Y-m-d H:i:s', $ts ) ); ?>\n</div>\n\n\t\t\t\t<?php\n\n\t\t\t\t$add_date_checkbox .= ob_get_clean();\n\n\t\t\t\tif ( empty( $add_one ) ) {\n\n\t\t\t\t\t$add_one = str_replace( 'type=\"checkbox\"', 'type=\"hidden\"', $add_date_checkbox );\n\t\t\t\t}\n\t\t\t} // end for loop\n\t\t}\n\n\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $t );\n\n\t\tif ( empty( $updatelist ) ) {\n\t\t\t$updatelist = '';\n\t\t}\n\n\t\tif ( current_user_can( 'edit_rsvpmakers' ) ) {\n\n\t\t\tprintf(\n\t\t\t\t'<div class=\"group_add_date\"><br />\n\n<form method=\"post\" action=\"%s\">\n\n%s\n\n<div><strong>' . __( 'Projected Dates', 'rsvpmaker' ) . ':</strong></div>\n\n<fieldset>\n\n<div><input type=\"checkbox\" class=\"checkall\"> ' . __( 'Check all', 'rsvpmaker' ) . '</div>\n\n%s\n\n</fieldset>\n\n<br />' . __( 'New Post Status', 'rsvpmaker' ) . ': <input name=\"newstatus\" type=\"radio\" value=\"publish\" checked=\"checked\" /> publish <input name=\"newstatus\" type=\"radio\" value=\"draft\" /> draft<br />\n\n<br /><input type=\"submit\" value=\"' . __( 'Add/Update From Template', 'rsvpmaker' ) . '\" />\n\n<input type=\"hidden\" name=\"template\" value=\"%s\" />\n%s\n</form>\n\n</div><br />',\n\t\t\t\t$action,\n\t\t\t\t$updatelist,\n\t\t\t\t$add_date_checkbox,\n\t\t\t\t$t,\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\t\t}\n\n\t\tif ( isset( $_GET['trashed'] ) ) {\n\n\t\t\t\t$ids = (int) $_GET['ids'];\n\n\t\t\t\t$message = '<a href=\"' . esc_url( wp_nonce_url( \"edit.php?post_type=rsvpmaker&doaction=undo&action=untrash&ids=$ids\", 'bulk-posts' ) ) . '\">' . __( 'Undo' ) . '</a>';\n\n\t\t\t\techo '<div id=\"message\" class=\"updated\"><p>' . __( 'Moved to trash', 'rsvpmaker' ) . ' ' . $message . '</p></div>';\n\n\t\t}\n\n\t\t$projected = rsvpmaker_get_projected( $template );\n\n\t\tif ( $projected && is_array( $projected ) ) {\n\t\t\tforeach ( $projected as $i => $ts ) {\n\n\t\t\t\t$today = rsvpmaker_date( 'd', $ts );\n\n\t\t\t\t$cm = rsvpmaker_date( 'n', $ts );\n\n\t\t\t\t$y = date( 'Y', $ts );\n\n\t\t\t\t$y2 = $y + 1;\n\n\t\t\t\tob_start();\n\n\t\t\t\tif ( ( $ts < current_time( 'timestamp' ) ) && ! isset( $_GET['start'] ) ) {\n\n\t\t\t\t\tcontinue; // omit dates past\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $donotproject ) && is_array( $donotproject ) && in_array( date( 'Y-m-j', $ts ), $donotproject ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$nomeeting .= sprintf( '<option value=\"%s\">%s</option>', date( 'Y-m-d', $ts ), date( 'F j, Y', $ts ) );\n\n\t\t\t\t?>\n\n<div style=\"font-family:Courier, monospace\"><input name=\"recur_check[<?php echo esc_attr($i); ?>]\" type=\"checkbox\" value=\"1\">\n\n\t\t\t\t<?php esc_html_e( 'Month', 'rsvpmaker' ); ?>: \n\n\t\t\t  <select name=\"recur_month[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t  <option value=\"<?php echo esc_attr($cm); ?>\"><?php echo esc_attr($cm); ?></option> \n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  </select> \n\n\t\t\t\t<?php esc_html_e( 'Day', 'rsvpmaker' ); ?> \n\n\t\t\t<select name=\"recur_day[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t\t<?php\n\n\t\t\t\tprintf( '<option value=\"%s\">%s</option>', $today, $today );\n\n\t\t\t\t?>\n\n\t\t\t  <option value=\"\"><?php esc_html_e( 'Not Set', 'rsvpmaker' ); ?></option>\n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  <option value=\"13\">13</option> \n\n\t\t\t  <option value=\"14\">14</option> \n\n\t\t\t  <option value=\"15\">15</option> \n\n\t\t\t  <option value=\"16\">16</option> \n\n\t\t\t  <option value=\"17\">17</option> \n\n\t\t\t  <option value=\"18\">18</option> \n\n\t\t\t  <option value=\"19\">19</option> \n\n\t\t\t  <option value=\"20\">20</option> \n\n\t\t\t  <option value=\"21\">21</option> \n\n\t\t\t  <option value=\"22\">22</option> \n\n\t\t\t  <option value=\"23\">23</option> \n\n\t\t\t  <option value=\"24\">24</option> \n\n\t\t\t  <option value=\"25\">25</option> \n\n\t\t\t  <option value=\"26\">26</option> \n\n\t\t\t  <option value=\"27\">27</option> \n\n\t\t\t  <option value=\"28\">28</option> \n\n\t\t\t  <option value=\"29\">29</option> \n\n\t\t\t  <option value=\"30\">30</option> \n\n\t\t\t  <option value=\"31\">31</option> \n\n\t\t\t</select> \n\n\t\t\t\t<?php esc_html_e( 'Year', 'rsvpmaker' ); ?>\n\n\t\t\t<select name=\"recur_year[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y); ?>\"><?php echo esc_attr($y); ?></option> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y2); ?>\"><?php echo esc_attr($y2); ?></option> \n\n\t\t\t</select>\n\n</div>\n\n\n\n\t\t\t\t<?php\n\n\t\t\t\t$add_date_checkbox .= ob_get_clean();\n\n\t\t\t\tif ( empty( $add_one ) ) {\n\n\t\t\t\t\t$add_one = str_replace( 'type=\"checkbox\"', 'type=\"hidden\"', $add_date_checkbox );\n\t\t\t\t}\n\t\t\t} // end for loop\n\t\t}\n\n\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $t );\n\n\t\tif ( $editlist ) {\n\n\t\t\tdo_action( 'update_from_template_prompt' );\n\n\t\t\techo '<strong>' . __( 'Already Scheduled', 'rsvpmaker' ) . ':</strong><br /><br /><form method=\"post\" action=\"' . $action . '\">\n\n<fieldset>\n\n<table  class=\"wp-list-table widefat fixed posts\" cellspacing=\"0\">\n\n<thead>\n\n<tr><th class=\"manage-column column-cb check-column\" scope=\"col\" ><input type=\"checkbox\" class=\"checkall\" title=\"Check all\"></th><th>' . __( 'Edit' ) . '</th><th>' . __( 'Detach' ) . '</th><th><input type=\"checkbox\" class=\"trashall\" title=\"Trash all\"> ' . __( 'Move to Trash' ) . '<th>' . __( 'Date' ) . '</th><th>' . __( 'Title' ) . '</th></tr>\n\n</thead>\n\n<tbody>\n\n' . $editlist . '\n\n</tbody></table>\n\n</fieldset>\n\n<input type=\"submit\" value=\"' . __( 'Update Checked', 'rsvpmaker' ) .'\" />'.rsvpmaker_nonce('return').'</form>' . '<p>' . __( 'Update function copies title and content of current template, replacing the existing content of checked posts.', 'rsvpmaker' ) . '</p>';\n\n\t\t}\n\n\t\tif ( current_user_can( 'edit_rsvpmakers' ) && ! empty( $add_one ) ) {\n\n\t\t\tdo_action( 'add_from_template_prompt' );\n\n\t\t\tprintf(\n\t\t\t\t'<div class=\"group_add_date\"><br />\n\n<form method=\"post\" action=\"%s\">\n\n<strong>' . __( 'Add One', 'rsvpmaker' ) . ':</strong><br />\n\n%s\n\n<input type=\"hidden\" name=\"rsvpmaker_add_one\" value=\"1\" />\n\n<input type=\"hidden\" name=\"template\" value=\"%s\" />\n\n<br /><input type=\"submit\" value=\"' . __( 'Add From Template', 'rsvpmaker' ) . '\" />\n%s\n</form>\n\n</div><br />',\n\t\t\t\t$action,\n\t\t\t\t$add_one,\n\t\t\t\t$t,\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\n\t\t}\n\n\t\tif ( current_user_can( 'edit_rsvpmakers' ) ) {\n\n\t\t\tprintf(\n\t\t\t\t'<div class=\"group_add_date\"><br />\n\n<form method=\"post\" action=\"%s\">\n\n<strong>%s:</strong><br />\n\n%s: <select name=\"nomeeting\">%s</select>\n\n<br />%s:<br /><textarea name=\"nomeeting_note\" cols=\"60\" %s></textarea>\n\n<input type=\"hidden\" name=\"template\" value=\"%s\" />\n\n<br /><input type=\"submit\" value=\"%s\" />\n%s\n</form>\n\n</div><br />\n\n',\n\t\t\t\t$action,\n\t\t\t\t__( 'No Meeting', 'rsvpmaker' ),\n\t\t\t\t__( 'Regularly Scheduled Date', 'rsvpmaker' ),\n\t\t\t\t$nomeeting,\n\t\t\t\t__( 'Note (optional)', 'rsvpmaker' ),\n\t\t\t\t'style=\"max-width: 95%;\"',\n\t\t\t\t$t,\n\t\t\t\t__( 'Submit', 'rsvpmaker' ),\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\t\t}\n\n\t\techo \"<script>\n\njQuery(function () {\n\n    jQuery('.checkall').on('click', function () {\n\n\tjQuery(this).closest('fieldset').find('.update_from_template:checkbox').prop('checked', this.checked);\n\n    });\n\n    jQuery('.trashall').on('click', function () {\n\n\tjQuery(this).closest('fieldset').find('.trash_template:checkbox').prop('checked', this.checked);\n\n    });\n\n});\n\n</script>\n\n\";\n\n\t}\n} // end function_exists\n\n\n\nif ( ! function_exists( 'rsvpmaker_updated_messages' ) ) {\n\n\tfunction rsvpmaker_updated_messages( $messages ) {\n\n\t\tif ( empty( $messages ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $post;\n\n\t\t$post_ID = $post->ID;\n\n\t\tif ( $post->post_type != 'rsvpmaker' ) {\n\t\t\treturn; // only for RSVPMaker\n\t\t}\n\n\t\t$singular = __( 'Event', 'rsvpmaker' );\n\n\t\t$link = sprintf( ' <a href=\"%s\">%s %s</a>', esc_url( get_post_permalink( $post_ID ) ), __( 'View', 'rsvpmaker' ), $singular );\n\n\t\t$sked = get_template_sked( $post_ID );\n\n\t\tif ( ! empty( $sked ) ) {\n\n\t\t\t$singular = __( 'Event Template', 'rsvpmaker' );\n\n\t\t\t$link = sprintf( ' -> <a class=\"update_from_template\" href=\"%s\">%s</a>', esc_url( admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $post_ID ) ), __( 'Create/update events from template', 'rsvpmaker' ) );\n\n\t\t}\n\n\t\t$messages['rsvpmaker'] = array(\n\n\t\t\t0  => '', // Unused. Messages start at index 1.\n\n\t\t\t1  => $singular . ' ' . __( 'updated', 'rsvpmaker' ) . $link,\n\n\t\t\t2  => __( 'Custom field updated.' ),\n\n\t\t\t3  => __( 'Custom field deleted.' ),\n\n\t\t\t4  => $singular . ' ' . __( 'updated', 'rsvpmaker' ) . $link,\n\n\t\t\t5  => isset( $_GET['revision'] ) ? sprintf( __( $singular . ' restored to revision from %s' ), wp_post_revision_title( (int) $_GET['revision'], false ) ) : false,\n\n\t\t\t6  => $singular . ' ' . __( 'published', 'rsvpmaker' ) . $link,\n\n\t\t\t7  => __( 'Page saved.' ),\n\n\t\t\t8  => sprintf( __( $singular . ' submitted. <a target=\"_blank\" href=\"%s\">Preview ' . strtolower( $singular ) . '</a>' ), esc_url( add_query_arg( 'preview', 'true', get_post_permalink( $post_ID ) ) ) ),\n\n\t\t\t9  => sprintf( __( $singular . ' scheduled for: <strong>%s</strong>. <a target=\"_blank\" href=\"%s\">Preview ' . strtolower( $singular ) . '</a>' ), date_i18n( __( 'M j, Y @ G:i' ), rsvpmaker_strtotime( $post->post_date ) ), esc_url( get_post_permalink( $post_ID ) ) ),\n\n\t\t\t10 => sprintf( __( $singular . ' draft updated. <a target=\"_blank\" href=\"%s\">Preview ' . strtolower( $singular ) . '</a>' ), esc_url( add_query_arg( 'preview', 'true', get_post_permalink( $post_ID ) ) ) ),\n\n\t\t);\n\n\t\treturn $messages;\n\n\t}\n} // end if function\n\n\n\nif ( ! function_exists( 'rsvpmaker_template_admin_title' ) ) {\n\n\tfunction rsvpmaker_template_admin_title() {\n\n\t\tglobal $title;\n\n\t\tglobal $post;\n\n\t\tglobal $post_new_file;\n\n\t\tif ( ! isset( $post ) || ( $post->post_type != 'rsvpmaker' ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! empty( $_GET['new_template'] ) || get_template_sked( $post->ID ) ) {\n\n\t\t\t$title .= ' ' . __( 'Template', 'rsvpmaker' );\n\n\t\t\tif ( isset( $post_new_file ) ) {\n\n\t\t\t\t$post_new_file = 'post-new.php?post_type=rsvpmaker&new_template=1';\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'next_or_recent' ) ) {\n\n\tfunction next_or_recent( $template_id ) {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\t$event = '';\n\n\t\t$sql = \"SELECT DISTINCT $wpdb->posts.ID as postID, a1.meta_value as datetime, a2.meta_value as template\n\n\t FROM \" . $wpdb->posts . '\n\n\t JOIN ' . $wpdb->postmeta . ' a1 ON ' . $wpdb->posts . '.ID =a1.post_id \n\n\t JOIN ' . $wpdb->postmeta . ' a2 ON ' . $wpdb->posts . \".ID =a2.post_id \n\n\t WHERE a1.meta_key='_rsvp_dates' AND a1.meta_value > '\" . get_sql_curdate() . \"' AND a2.meta_key='_meet_recur' AND a2.meta_value=\" . $template_id . \" AND post_status='publish'\n\n\t ORDER BY a1.meta_value LIMIT 0,1\";\n\n\t\tif ( $row = $wpdb->get_row( $sql ) ) {\n\n\t\t\t$t = rsvpmaker_strtotime( $row->datetime );\n\n\t\t\t$neatdate = utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\n\t\t\t$event = sprintf( '<a href=\"%s\">%s: %s</a>', get_post_permalink( $row->postID ), __( 'Next Event', 'rsvpmaker' ), $neatdate );\n\n\t\t} else {\n\n\t\t\t$sql = \"SELECT DISTINCT $wpdb->posts.ID as postID, a1.meta_value as datetime, a2.meta_value as template\n\n\t FROM \" . $wpdb->posts . '\n\n\t LEFT JOIN ' . $wpdb->postmeta . ' a1 ON ' . $wpdb->posts . '.ID =a1.post_id\n\n\t LEFT JOIN ' . $wpdb->postmeta . ' a2 ON ' . $wpdb->posts . \".ID =a2.post_id \n\n\t WHERE a1.meta_key='_rsvp_dates' AND a1.meta_value < '\" . get_sql_curdate() . \"' AND a2.meta_key='_meet_recur' AND a2.meta_value=\" . $template_id . \" AND post_status='publish'\n\n\t ORDER BY a1.meta_value DESC LIMIT 0,1\";\n\n\t\t\tif ( $row = $wpdb->get_row( $sql ) ) {\n\n\t\t\t\t$t = rsvpmaker_strtotime( $row->datetime );\n\n\t\t\t\t$neatdate = utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\n\t\t\t\t$event = sprintf( '<a style=\"color:#333;\" href=\"%s\">%s: %s</a>', get_post_permalink( $row->postID ), __( 'Most Recent', 'rsvpmaker' ), $neatdate );\n\n\t\t\t}\n\t\t}\n\n\t\treturn $event;\n\n\t}\n} // end if funnction\n\n\n\nif ( isset( $_GET['message'] ) ) {\n\tadd_filter( 'post_updated_messages', 'rsvpmaker_updated_messages' );\n}\n\nif ( ! function_exists( 'additional_editors_setup' ) ) {\n\n\tfunction additional_editors_setup() {\n\n\t\tglobal $rsvp_options;\n\n\t\tif ( isset( $rsvp_options['additional_editors'] ) && $rsvp_options['additional_editors'] ) {\n\n\t\t\tadd_action( 'save_post', 'save_additional_editor' );\n\n\t\t\t// add_filter( 'user_has_cap', 'rsvpmaker_cap_filter', 99, 3 );\n\n\t\t\tadd_filter( 'map_meta_cap', 'rsvpmaker_map_meta_cap', 10, 4 );\n\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpmaker_cap_filter_test' ) ) {\n\n\tfunction rsvpmaker_cap_filter_test( $cap, $post_id ) {\n\n\t\tif ( strpos( $cap, 'rsvpmaker' ) ) {\n\n\t\t\treturn true;\n\n\t\t} elseif ( $post = get_post( $post_id ) ) {\n\n\t\t\tif ( isset( $post->post_type ) && ( $post->post_type == 'rsvpmaker' ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'get_additional_editors' ) ) {\n\n\tfunction get_additional_editors( $post_id ) {\n\n\t\tglobal $wpdb;\n\n\t\t$eds = array();\n\n\t\t$recurid = get_post_meta( $post_id, '_meet_recur', true );\n\n\t\tif ( $recurid ) {\n\n\t\t\t$eds = get_post_meta( $recurid, '_additional_editors', false );\n\n\t\t}\n\n\t\t$post_eds = get_post_meta( $post_id, '_additional_editors', false );\n\n\t\tif ( is_array( $post_eds ) ) {\n\n\t\t\tforeach ( $post_eds as $this_eds ) {\n\n\t\t\t\tif ( ! in_array( $this_eds, $eds ) ) {\n\n\t\t\t\t\t$eds[] = $this_eds;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $eds;\n\n\t}\n}// end if exists\n\n\n\nif ( ! function_exists( 'save_additional_editor' ) ) {\n\n\tfunction save_additional_editor( $post_id ) {\n\n\t\tif ( ! empty( $_POST['additional_editor'] ) || ! empty( $_POST['remove_editor'] ) ) {\n\n\t\t\tif ( $parent_id = wp_is_post_revision( $post_id ) ) {\n\n\t\t\t\t$post_id = $parent_id;\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $_POST['additional_editor'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$ed = (int) $_POST['additional_editor'];\n\n\t\t\tif ( $ed ) {\n\n\t\t\t\tadd_post_meta( $post_id, '_additional_editors', $ed, false );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $_POST['remove_editor'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\tforeach ( $_POST['remove_editor'] as $remove ) {\n\n\t\t\t\t$remove = (int) $remove;\n\n\t\t\t\tif ( $remove ) {\n\n\t\t\t\t\tdelete_post_meta( $post_id, '_additional_editors', $remove );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n} // end function exists\n\n\n\nif ( ! function_exists( 'rsvpmaker_editor_dropdown' ) ) {\n\n\tfunction rsvpmaker_editor_dropdown( $eds ) {\n\n\t\tglobal $wpdb;\n\n\t\t$options = '';\n\n\t\t$sql = \"SELECT * FROM $wpdb->users ORDER BY user_login\";\n\n\t\t$results = $wpdb->get_results( $sql );\n\n\t\tif ( is_array( $results ) ) {\n\n\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\tif ( in_array( $row->ID, $eds ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$member = get_userdata( $row->ID );\n\n\t\t\t\t$index = preg_replace( '/[^a-zA-Z]/', '', $member->last_name . $member->first_name . $row->user_login );\n\n\t\t\t\t$sortmember[ $index ] = $member;\n\n\t\t\t}\n\t\t}\n\n\t\tksort( $sortmember );\n\n\t\tforeach ( $sortmember as $index => $member ) {\n\n\t\t\tif ( isset( $member->last_name ) && ! empty( $member->last_name ) ) {\n\n\t\t\t\t$label = $member->first_name . ' ' . $member->last_name;\n\n\t\t\t} else {\n\t\t\t\t$label = $index;\n\t\t\t}\n\n\t\t\t$label = esc_html( $label );\n\n\t\t\tif ( $member->ID == $assigned ) {\n\n\t\t\t\t$s = ' selected=\"selected\" ';\n\n\t\t\t} else {\n\t\t\t\t$s = '';\n\t\t\t}\n\n\t\t\t$options .= sprintf( '<option %s value=\"%d\">%s</option>', $s, $member->ID, esc_html( $label ) );\n\n\t\t}\n\n\t\treturn $options;\n\n\t}\n} // end function exists\n\n\n\nif ( ! function_exists( 'additional_editors' ) ) {\n\n\tfunction additional_editors() {\n\n\t\tglobal $post;\n\n\t\tglobal $custom_fields;\n\n\t\tif ( $post->ID ) {\n\n\t\t\t$eds = get_post_meta( $post->ID, '_additional_editors', false );\n\t\t}\n\n\t\tif ( $eds ) {\n\n\t\t\techo '<strong>' . __( 'Editors', 'rsvpmaker' ) . ':</strong><br />';\n\n\t\t\tforeach ( $eds as $user_id ) {\n\n\t\t\t\t$member = get_userdata( $user_id );\n\n\t\t\t\tif ( isset( $member->last_name ) && ! empty( $member->last_name ) ) {\n\n\t\t\t\t\t$label = $member->first_name . ' ' . $member->last_name;\n\n\t\t\t\t} else {\n\t\t\t\t\t$label = $member->user_login;\n\t\t\t\t}\n\n\t\t\t\t$label .= ' ' . $member->user_email;\n\n\t\t\t\techo esc_html( $label ) . sprintf( ' <strong>( <input type=\"checkbox\" name=\"remove_editor[]\" value=\"%d\"> %s)</strong><br />', $user_id, __( 'Remove', 'rsvpmaker' ) );\n\n\t\t\t}\n\t\t}\n\n\t\t?>\n\n<p><?php esc_html_e( 'Add Editor', 'rsvpmaker' ); ?>: <select name=\"additional_editor\" ><option value=\"\"><?php esc_html_e( 'Select' ); ?></option><?php echo rsvpmaker_editor_dropdown( $eds ); ?></select></p>\n\n\t\t<?php\n\n\t\tif ( isset( $custom_fields['_meet_recur'][0] ) ) {\n\t\t}\n\n\t\t{\n\n\t\techo '<strong>' . __( 'Template', 'rsvpmaker' ) . ' ' . __( 'Editors', 'rsvpmaker' ) . ':</strong><br />';\n\n\t\t$t = isset( $custom_fields['_meet_recur'][0] ) ? $custom_fields['_meet_recur'][0] : 0;\n\n\t\t$eds = get_post_meta( $t, '_additional_editors', false );\n\n\t\tif ( $eds ) {\n\n\t\t\tforeach ( $eds as $user_id ) {\n\n\t\t\t\t$member = get_userdata( $user_id );\n\n\t\t\t\tif ( isset( $member->last_name ) && ! empty( $member->last_name ) ) {\n\n\t\t\t\t\t$label = $member->first_name . ' ' . $member->last_name;\n\n\t\t\t\t} else {\n\t\t\t\t\t$label = $member->user_login;\n\t\t\t\t}\n\n\t\t\t\techo esc_html( $label ) . '<br />';\n\n\t\t\t}\n\t\t} else {\n\t\t\tesc_html_e( 'None', 'rsvpmaker' );\n\t\t}\n\n\t\tprintf( '<p><a href=\"%s\">' . __( 'Edit Template', 'rsvpmaker' ) . '</a></p>', admin_url( 'post.php?action=edit&post=' . $t ) );\n\n\t\t}\n\n\t\tdo_action( 'rsvpmaker_additional_editors' );\n\n\t}\n} // function exists\n\n\n\nif ( ! function_exists( 'rsvpmaker_dashboard_widget_function' ) ) {\n\n\tfunction rsvpmaker_dashboard_widget_function() {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $current_user;\n\n\t\t// $wpdb->show_errors();\n\n\t\tdo_action( 'rsvpmaker_dashboard_action' );\n\n\t\tif ( isset( $rsvp_options['dashboard_message'] ) && ! empty( $rsvp_options['dashboard_message'] ) ) {\n\n\t\t\techo '<div>' . wp_kses_post( $rsvp_options['dashboard_message'] ) . '</div>';\n\t\t}\n\n\t\techo '<p><strong>' . __( 'My Events', 'rsvpmaker' ) . '</strong><br /></p>';\n\n\t\t$results = get_future_events( 'post_author=' . $current_user->ID );\n\n\t\tif ( $results ) {\n\n\t\t\tforeach ( $results as $index => $row ) {\n\n\t\t\t\t$draft = ( $row->post_status == 'draft' ) ? ' (draft)' : '';\n\n\t\t\t\tprintf( '<p><a href=\"%s\">(' . __( 'Edit', 'rsvpmaker' ) . ')</a> <a href=\"%s\">%s %s%s</a></p>', admin_url( 'post.php?action=edit&post=' . $row->ID ), get_post_permalink( $row->ID ), esc_html( $row->post_title ), utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $row->datetime ) ) ), $draft );\n\n\t\t\t\tif ( $index == 10 ) {\n\n\t\t\t\t\tprintf( '<p><a href=\"%s\">&gt; &gt; ' . __( 'More', 'rsvpmaker' ) . '</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&rsvpsort=chronological&author=' . $current_user->ID ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t'<p>' . __( 'None', 'rsvpmaker' ) . '</p>';\n\n\t\t}\n\n\t\tprintf( '<p><a href=\"%s\">' . __( 'Add Event', 'rsvpmaker' ) . '</a></p>', admin_url( 'post-new.php?post_type=rsvpmaker' ) );\n\n\t\t$sql = \"SELECT $wpdb->posts.ID as editid FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id \n\nWHERE $wpdb->posts.post_type = 'rsvpmaker' AND $wpdb->postmeta.meta_key = '_additional_editors' AND $wpdb->postmeta.meta_value = $current_user->ID\";\n\n\t\t$wpdb->show_errors();\n\n\t\t$result = $wpdb->get_results( $sql );\n\n\t\t$r2 = rsvpmaker_get_templates( 'AND post_author=$current_user->ID' );// $wpdb->get_results($sql);\n\n\t\tif ( $result && $r2 ) {\n\n\t\t\t$result = array_merge( $r2, $result );\n\n\t\t} elseif ( $r2 ) {\n\n\t\t\t$result = $r2;\n\t\t}\n\n\t\tif ( $result ) {\n\n\t\t\tforeach ( $result as $row ) {\n\n\t\t\t\trsvp_template_checkboxes( $row->editid );\n\n\t\t\t}\n\t\t}\n\n\t}\n} // end function exists\n\n\n\nfunction rsvpmaker_add_dashboard_widgets() {\n\n\tglobal $rsvp_options;\n\n\twp_add_dashboard_widget( 'rsvpmaker_dashboard_widget', __( 'Events', 'rsvpmaker' ), 'rsvpmaker_dashboard_widget_function' );\n\n\tif ( empty( $rsvp_options['dashboard'] ) || ( $rsvp_options['dashboard'] != 'top' ) ) {\n\n\t\treturn;\n\t}\n\n\t// Globalize the metaboxes array, this holds all the widgets for wp-admin\n\n\tglobal $wp_meta_boxes;\n\n\t// Get the regular dashboard widgets array\n\n\t// (which has our new widget already but at the end)\n\n\t$normal_dashboard = $wp_meta_boxes['dashboard']['normal']['core'];\n\n\t// Backup and delete our new dashbaord widget from the end of the array\n\n\t$rsvpmaker_widget_backup = array(\n\t\t'rsvpmaker_dashboard_widget' =>\n\n\t\t\t\t$normal_dashboard['rsvpmaker_dashboard_widget'],\n\t);\n\n\tunset( $normal_dashboard['rsvpmaker_dashboard_widget'] );\n\n\t// Merge the two arrays together so our widget is at the beginning\n\n\t$sorted_dashboard = array_merge( $rsvpmaker_widget_backup, $normal_dashboard );\n\n\t// Save the sorted array back into the original metaboxes\n\n\t$wp_meta_boxes['dashboard']['normal']['core'] = $sorted_dashboard;\n\n}\n\n\n\n// Hook into the 'wp_dashboard_setup' action to register our other functions\n\n\n\nfunction rsvpmaker_check_coupon_code( $price ) {\n\n\tglobal $post;\n\n\tglobal $rsvpmaker_coupon_message;\n\n\t$coupon_message = '';\n\n\t$codes = get_post_meta( $post->ID, '_rsvp_coupon_code' ); // array of codes\n\n\t// printf('<p>Initial price %s %s</p>',$price,$code);\n\n\tif ( ! empty( $codes ) && ! empty( $_POST['coupon_code'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t$user_code = trim( $_POST['coupon_code'] );\n\n\t\tif ( ( in_array( $user_code, $codes ) ) ) {\n\n\t\t\t$index = array_search( $user_code, $codes );\n\n\t\t\t$discounts = get_post_meta( $post->ID, '_rsvp_coupon_discount' );\n\n\t\t\t$methods = get_post_meta( $post->ID, '_rsvp_coupon_method' );\n\n\t\t\t$discount = (float) $discounts[ $index ];\n\n\t\t\t$method = $methods[ $index ];\n\n\t\t\t$rsvpmaker_coupon_message = 'Coupon code applied: ' . $user_code;\n\n\t\t\tif ( $method == 'percent' ) {\n\n\t\t\t\t$price = $price - ( $price * ( $discount / 100 ) );\n\n\t\t\t} else {\n\n\t\t\t\t$price = $discount;\n\n\t\t\t}\n\t\t} else {\n\n\t\t\t$rsvpmaker_coupon_message = 'Coupon code not recognized';\n\n\t\t}\n\t}\n\n\treturn $price;\n\n}\n\n?>\n", "<?php\nfunction rsvpmaker_to_stripe( $rsvp ) {\n\n\tglobal $post;\n\n\t$vars['description'] = $post->post_title;\n\n\t$vars['name'] = $rsvp['first'] . ' ' . $rsvp['last'];\n\n\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t$vars['rsvp_id'] = (int) $_GET['rsvp'];\n\n\t} else {\n\t\t$vars['rsvp_id'] = $rsvp['id'];\n\t}\n\n\t$vars['rsvp_post_id'] = $post->ID;\n\n\t$include = array( 'amount', 'rsvp_id', 'email', 'event' );\n\n\tforeach ( $rsvp as $index => $value ) {\n\n\t\tif ( in_array( $index, $include ) ) {\n\n\t\t\t$vars[ $index ] = $value;\n\t\t}\n\t}\n\t// transform\n\n\treturn rsvpmaker_stripe_form( $vars );\n\n}\n\n\n\n// called from Gutenberg init\n\nfunction rsvpmaker_stripecharge( $atts ) {\n\n\tif ( is_admin() || wp_is_json_request() ) {\n\n\t\treturn;\n\t}\n\n\tglobal $current_user;\n\n\t$vars['description'] = ( ! empty( $atts['description'] ) ) ? $atts['description'] : __( 'charge from', 'rsvpmaker' ) . ' ' . get_bloginfo( 'name' );\n\n\t$vars['paymentType'] = $paymentType = ( empty( $atts['paymentType'] ) ) ? 'once' : $atts['paymentType'];\n\n\t$vars['paypal'] = (empty($atts['paypal'])) ? 0 : $atts['paypal'];\n\n\t$show = ( ! empty( $atts['showdescription'] ) && ( $atts['showdescription'] == 'yes' ) ) ? true : false;\n\n\tif ( $paymentType == 'schedule' ) {\n\n\t\t$months = array( 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december' );\n\n\t\t$index = date( 'n' ) - 1;\n\n\t\tif ( isset( $_GET['next'] ) ) {\n\n\t\t\tif ( $index == 11 ) {\n\n\t\t\t\t$index = 0;\n\n\t\t\t} else {\n\t\t\t\t$index++;\n\t\t\t}\n\t\t}\n\n\t\t$month = $months[ $index ];\n\n\t\t$vars['amount'] = $atts[ $month ];\n\n\t\t$vars['description'] = $vars['description'] . ': ' . ucfirst( $month );\n\n\t\tif ( ! empty( $current_user->user_email ) ) {\n\n\t\t\t$vars['email'] = $current_user->user_email;\n\t\t}\n\n\t\treturn rsvpmaker_stripe_form( $vars, $show );\n\n\t}\n\n\t$vars['amount'] = ( ! empty( $atts['amount'] ) ) ? $atts['amount'] : '';\n\n\tif ( $paymentType != 'once' ) {\n\n\t\t$vars['description'] .= ' ' . $paymentType;\n\t}\n\n\treturn rsvpmaker_stripe_form( $vars, $show );\n\n\t// return rsvpmaker_stripe_form($vars,$show);\n}\n\n\n$rsvpmaker_stripe_form = '';\n\nfunction rsvpmaker_stripe_form( $vars, $show = false ) {\n\n\trsvpmaker_debug_log( $vars, 'rsvpmaker_stripe_form' );\n\n\tglobal $post, $rsvp_options, $current_user, $button, $rsvpmaker_stripe_form, $wpdb;\n\tif ( ! $show ) {\n\n\t\t$show = ( ! empty( $vars['showdescription'] ) && ( $vars['showdescription'] == 'yes' ) ) ? true : false;\n\t}\n\n\t$currency = ( empty( $rsvp_options['paypal_currency'] ) ) ? 'usd' : strtolower( $rsvp_options['paypal_currency'] );\n\n\t$vars['currency'] = $currency;\n\n\t$rsvpmaker_stripe_checkout_page_id = $wpdb->get_var( \"SELECT ID FROM $wpdb->posts WHERE post_status='publish' AND  post_content LIKE '%[rsvpmaker_stripe_checkout]%' \" );\n\n\tif ( empty( $rsvpmaker_stripe_checkout_page_id ) ) {\n\n\t\trsvpmaker_debug_log( $rsvpmaker_stripe_checkout_page_id, 'attempting rsvpmaker_stripe_checkout_page_id' );\n\n\t\t$postvar['post_content'] = '<!-- wp:shortcode -->\n\n\t[rsvpmaker_stripe_checkout]\n\n\t<!-- /wp:shortcode -->\n\n\t<!-- wp:paragraph -->\n\n<p>Secure payment processing by <a href=\"https://stripe.com/\" target=\"_blank\">Stripe</a>.</p>\n\n<!-- /wp:paragraph -->\n\n';\n\n\t\t$postvar['post_title'] = 'Payment';\n\n\t\t$postvar['post_status'] = 'publish';\n\n\t\t$postvar['post_author'] = 1;\n\n\t\t$postvar['post_type'] = 'rsvpmaker';\n\n\t\t$rsvpmaker_stripe_checkout_page_id = wp_insert_post( $postvar );\n\n\t\tupdate_post_meta( $rsvpmaker_stripe_checkout_page_id, '_rsvpmaker_special', 'Payment checkout page for Stripe' );\n\n\t\trsvpmaker_debug_log( $rsvpmaker_stripe_checkout_page_id, 'new checkout page' );\n\n\t}\n\n\t$currency_symbol = '';\n\n\tif ( isset( $vars['currency'] ) ) {\n\n\t\tif ( $vars['currency'] == 'usd' ) {\n\n\t\t\t$currency_symbol = '$';\n\n\t\t} elseif ( $vars['currency'] == 'eur' ) {\n\n\t\t\t$currency_symbol = '\u20ac';\n\t\t}\n\t}\n\n\t$idempotency_key = 'stripe_' . time() . '_' . rand( 0, 100000000000 );\n\n\tupdate_option( $idempotency_key, $vars );\n\n\t$url = get_permalink( $rsvpmaker_stripe_checkout_page_id );\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif(empty($keys['pk']) && $keys['sandbox_pk'])\n\t\t;//if Stripe not enabled\n\telseif ( isset( $vars['paymentType'] ) && ( $vars['paymentType'] == 'donation' ) ) {\n\t\tif(isset($_GET['amount']))\n\t\t\t$vars['amount'] = sanitize_text_field($_GET['amount']); //needed when both Stripe and PayPal are active\n\t\t$output = sprintf( '<form action=\"%s\" method=\"get\">%s (%s): <input type=\"text\" name=\"amount\" value=\"%s\"><br />%s<br /><textarea name=\"stripenote\" cols=\"80\" rows=\"2\"></textarea><br /><input type=\"hidden\" name=\"txid\" value=\"%s\"><button class=\"stripebutton\">%s</button>%s</form>', $url, __( 'Amount', 'rsvpmaker' ), esc_attr( strtoupper( $vars['currency'] ) ), esc_attr( $vars['amount'] ), __('Note','rsvpmaker'), esc_attr( $idempotency_key ), __( 'Pay with Card' ), rsvpmaker_nonce('return') );\n\t} else {\n\t\t$output = sprintf( '<form action=\"%s\" method=\"get\"><input type=\"hidden\" name=\"txid\" value=\"%s\"><button class=\"stripebutton\">%s</button>%s</form>', $url, esc_attr( $idempotency_key ), __( 'Pay with Card' ), rsvpmaker_nonce('return') );\n\t}\n\n\tif(!empty($vars['paypal'])) {\n\t\t$output .= '<p>'. __('Credit card processing by Stripe','rsvpmaker').'</p>'.rsvpmaker_paypay_button_embed($vars);\n\t}\n\n\tif ( $show ) {\n\t\tif(isset($_GET['amount']))\n\t\t\t$vars['amount'] = sanitize_text_field($_GET['amount']); //needed when both Stripe and PayPal are active\n\t\t$output .= sprintf( '<p>%s%s %s<br />%s</p>', $currency_symbol, esc_html( $vars['amount'] ), esc_html( $rsvp_options['paypal_currency'] ), esc_html( $vars['description'] ) );\n\t}\n\n\treturn $output;\n\n}\n\nfunction rsvpmaker_stripe_validate($public, $secret) {\n\trequire_once 'stripe-php/init.php';\n\ttry {\n\t\t$stripe = new \\Stripe\\StripeClient($secret);\n\t\t$history = $stripe->balanceTransactions->all( array( 'limit' => 10 ) );\n\t} catch (\\Stripe\\Exception\\InvalidRequestException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (\\Stripe\\Exception\\AuthenticationException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (\\Stripe\\Exception\\ApiConnectionException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (\\Stripe\\Exception\\ApiErrorException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (Exception $e) {\n\t\treturn '<span style=\"color:red\">Error'.var_export($e,true).'</span>';// Something else happened, completely unrelated to Stripe\n\t  }\n\t  //nothing blew up!\n\t  return ' <span style=\"color: green; font-weight: bold;\">'.__('Connected','rsvpmaker').'</span>';\n}\n\nfunction rsvpmaker_stripe_checkout() {\n\n\trsvpmaker_debug_log( 'rsvpmaker_stripe_checkout' );\n\n\tglobal $post, $rsvp_options, $current_user;\n\n\tif ( empty( $_GET['txid'] ) ) {\n\n\t\treturn;\n\t}\n\n\tob_start();\n\n\t$varkey = $idempotency_key = sanitize_text_field( $_GET['txid'] );\n\n\t$vars = get_option( $idempotency_key );\n\n\tif ( empty( $vars ) ) {\n\n\t\treturn '<p>' . __( 'No pending payment found for', 'rsvpmaker' ) . ' ' . esc_html( $idempotency_key ) . '</p>';\n\t}\n\n\tif ( $vars['paymentType'] == 'donation' ) {\n\n\t\tif ( empty( $_GET['amount'] ) ) {\n\n\t\t\treturn '<p>No amount given</p>';\n\t\t}\n\n\t\t$vars['amount'] = sanitize_text_field( $_GET['amount'] );\n\n\t}\n\n\tif(!empty($_GET['stripenote']))\n\t\t$vars['note'] = sanitize_text_field($_GET['stripenote']);\n\n\tupdate_option( $idempotency_key, $vars );\n\t\n\trequire_once 'stripe-php/init.php';\n\n\t$keys = get_rsvpmaker_stripe_keys();\n\n\tif ( ! empty( $vars['email'] ) ) {\n\n\t\t$email = sanitize_email( $vars['email'] );\n\n\t\t$name = ( empty( $vars['name'] ) ) ? '' : sanitize_text_field( $vars['name'] );\n\n\t} else {\n\n\t\t$email = ( empty( $current_user->user_email ) ) ? '' : $current_user->user_email;\n\n\t\t$wpname = '';\n\t\tif ( ! empty( $current_user->ID ) ) {\n\t\t\t$userdata = get_userdata( $current_user->ID );\n\t\t\tif ( $userdata->first_name ) {\n\t\t\t\t$wpname = $userdata->first_name . ' ' . $userdata->last_name;\n\t\t\t} else {\n\t\t\t\t$wpname = $userdata->display_name;\n\t\t\t}\n\t\t}\n\t\t$name = ( empty( $wpname ) ) ? '' : $wpname;\n\t}\n\n\t$public = $keys['pk'];\n\n\t$secret = $keys['sk'];\n\n\tif ( strpos( $public, 'test' ) ) {\n\n\t\t$vars['test'] = 'TEST TRANSACTION';\n\t}\n\n\t$currency_symbol = '';\n\n\tif ( $vars['currency'] == 'usd' ) {\n\n\t\t$currency_symbol = '$';\n\n\t} elseif ( $vars['currency'] == 'eur' ) {\n\n\t\t$currency_symbol = '\u20ac';\n\t}\n\n\t$paylabel = __( 'Pay', 'rsvpmaker' ) . ' ' . $currency_symbol . esc_attr( $vars['amount'] ) . ' ' . esc_attr( strtoupper( $vars['currency'] ) );\n\n\t\\Stripe\\Stripe::setApiKey( $secret );\n\n\t\\Stripe\\Stripe::setAppInfo(\n\t\t'WordPress RSVPMaker events management plugin',\n\t\tget_rsvpversion(),\n\t\t'https://rsvpmaker.com'\n\t);\n\n\trsvpmaker_debug_log( 'call to PaymentIntent' );\n\n\t$intent = \\Stripe\\PaymentIntent::create(\n\t\tarray(\n\n\t\t\t'amount'               => $vars['amount'] * 100,\n\n\t\t\t'currency'             => $vars['currency'],\n\n\t\t\t'description'          => $vars['description'],\n\n\t\t\t'payment_method_types' => array( 'card' ),\n\n\t\t\t'statement_descriptor' => substr( 'Paid on ' . sanitize_text_field($_SERVER['SERVER_NAME']), 0, 21 ),\n\n\t\t),\n\t\tarray( 'idempotency_key' => $idempotency_key )\n\t);\n\n\tupdate_post_meta( $post->ID, $varkey, $vars );\n\n\t$price = $vars['amount'] * 100;\n\n\t?>\n\n<!-- Stripe library must be loaded stripe.com per https://stripe.com/docs/js/including -->\n\n<script src=\"https://js.stripe.com/v3/\"></script>\n\n<!-- We'll put the success / error messages in this element -->\n\n<div id=\"card-result\" role=\"alert\"></div>\n\n<div id=\"stripe-checkout-form\">\n\n<form id=\"payee-form\">\n\n<div><input id=\"stripe-checkout-name\" name=\"name\" placeholder=\"<?php esc_html_e( 'Your Name Here', 'rsvpmaker' ); ?>\" value=\"<?php echo esc_attr( $name ); ?>\"></div>\n\n<div><input id=\"stripe-checkout-email\" name=\"email\" placeholder=\"email@example.com\" value=\"<?php echo esc_attr( $email ); ?>\"></div>\n\n<div id=\"card-element\">\n\n  <!-- Elements will create input elements here -->\n\n</div>\n\n\n\n<p><button id=\"card-button\" class=\"stripebutton\" data-secret=\"<?php echo esc_attr( $intent->client_secret ); ?>\">\n\n\t<?php echo esc_html( $paylabel ); ?>\n\n</button></p>\n\n</form>\n\n\t<?php\n\n\tif ( strpos( $public, 'test' ) && ! isset( $_GET['hidetest'] ) ) {\n\n\t\tprintf( '<p>%s</p>', __( 'Stripe is in TEST mode. To simulate a transaction, use:<br />Credit card 4111 1111 1111 1111<br />Any future date<br />Any three digit CVC code<br />Any 5-digit postal code', 'rsvpmaker' ) );\n\t}\n\n\t?>\n\n</div>\n\n<script>\n\nvar stripe = Stripe('<?php echo esc_attr($public); ?>');\n\nvar elements = stripe.elements();\n\nvar style = {\n\n  base: {\n\n\ticonColor: '#111111',\n\n\tcolor: \"#111111\",\n\n\tfontWeight: 400,\n\n\tfontSize: '16px',\n\n\t'::placeholder': {\n\n\tcolor: '#333333',\n\n\t},\n\n\t'::-ms-clear': {\n\n\tbackgroundColor: '#fff',\n\n\t},\n\n\t  },\n\n\tempty: {\n\n\tbackgroundColor: '#fff',\n\n\t  },\n\n\tcompleted: {\n\n\tbackgroundColor: '#eee',\n\n\t  },\n\n};\n\n\n\nvar card = elements.create(\"card\", { style: style });\n\ncard.mount(\"#card-element\");\n\n\n\ncard.addEventListener('change', ({error}) => {\n\n  const displayError = document.getElementById('card-result');\n\n  if (error) {\n\n\tdisplayError.textContent = error.message;\n\n  } else {\n\n\tdisplayError.textContent = '';\n\n  }\n\n});\n\nvar cardFields = document.getElementById('stripe-checkout-form');\n\nvar submitButton = document.getElementById('card-button');\n\nvar cardResult = document.getElementById('card-result');\n\nvar clientSecret = document.getElementById('card-button').getAttribute('data-secret');\n\nsubmitButton.addEventListener('click', function(ev) {\nev.preventDefault();\nvar name = document.getElementById('stripe-checkout-name').value;\nvar email = document.getElementById('stripe-checkout-email').value;\nvar successurl = '<?php echo site_url( '/wp-json/rsvpmaker/v1/stripesuccess/' . $idempotency_key ); ?>';\nif((name == '') || (email == '')){\n\tcardResult.innerHTML = 'Name and email are both required';\n\treturn;\n}\ncardResult.innerHTML = '<?php esc_html_e( 'Please wait', 'rsvpmaker' ); ?>';\ncardResult.style.cssText = 'background-color: #fff; padding: 10px;';\n\n  stripe.confirmCardPayment(clientSecret, {\n\tpayment_method: {\n\t  card: card,\n\t  billing_details: {\n\t\tname: name,\n\t\temail: email,\n\t  }\n\t}\n  }).then(function(result) {\n\tif (result.error) {\n\t\tcardResult.innerHTML = result.error.message;\n\t  console.log(result.error.message);\n\t  console.log(result);\n\t} else {\n\tsubmitButton.style = 'display: none';\n\tcardFields.style = 'display: none';\n\t  if (result.paymentIntent.status === 'succeeded') {\n\t\t  console.log(result);\n\t\tcardResult.innerHTML = '<?php esc_html_e( 'Recording payment', 'rsvpmaker' ); ?> ...';\n\t\tconst form = new FormData(document.getElementById('payee-form'));\n\t\tfetch(successurl, {\n  method: 'POST',\n\n  body: form,\n\n})\n\n\t\t.then((response) => {\n\n\t\t\treturn response.json();\n\n\t\t})\n\n\t\t.then((myJson) => {\n\n\t\t\tconsole.log(myJson);\n\n\t\t\tif(!myJson.name)\t\t\t\n\n\t\t\t\tcardResult.innerHTML = '<?php esc_html_e( 'Payment processed, but may not have been recorded correctly', 'rsvpmaker' ); ?>';\n\n\t\t\telse\n\n\t\t\t\tcardResult.innerHTML = '<?php esc_html_e( 'Payment processed for', 'rsvpmaker' ); ?> '+myJson.name+', '+myJson.description+' <?php echo esc_attr($currency_symbol); ?>'+myJson.amount+' '+myJson.currency.toUpperCase();\n\n\t\t});\n\n\t  }\n\n\t}\n\n  });\n\n});\n\n</script>\n\n\t<?php\n\n\treturn ob_get_clean();\n\n}\n\n\n\nfunction stripe_log_by_email( $email, $months = 0 ) {\n\n\tglobal $wpdb;\n\n\tif ( empty( $email ) ) {\n\n\t\treturn '';\n\t}\n\n\t$log = '';\n\n\t$sql = \"SELECT * FROM $wpdb->postmeta WHERE meta_key='rsvpmaker_stripe_payment' AND meta_value LIKE '%\" . $email . \"%' ORDER BY meta_id DESC\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( empty( $results ) ) {\n\n\t\treturn '';\n\t}\n\n\tif ( $months ) {\n\n\t\t$start = strtotime( '-' . $months . ' months' );\n\t}\n\n\tforeach ( $results as $row ) {\n\n\t\t$vars = unserialize( $row->meta_value );\n\n\t\t$timestamp = strtotime( $vars['timestamp'] );\n\n\t\tif ( $months && ( $timestamp < $start ) ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tforeach ( $vars as $name => $value ) {\n\n\t\t\t\t$log .= $name . ': ' . $value . \"\\n\";\n\n\t\t}\n\n\t\t\t$log .= \"\\n\";\n\n\t}\n\n\treturn wpautop( $log );\n\n}\n\nfunction rsvpmaker_stripe_payment_log( $vars, $confkey ) {\n\tglobal $post, $current_user, $wpdb;\n\t$vars['timestamp'] = rsvpmaker_date( 'r' );\n\tif ( ! empty( $vars['email'] ) ) {\n\t\trsvpmaker_stripe_notify( $vars );\n\t}\n\t$rsvpmaker_stripe_checkout_page_id = get_option( 'rsvpmaker_stripe_checkout_page_id' );\n\t$meta_id = add_post_meta( $rsvpmaker_stripe_checkout_page_id, 'rsvpmaker_stripe_payment', $vars );\n\tdo_action( 'rsvpmaker_stripe_payment', $vars );\n\twp_schedule_single_event( time() + 300, 'stripe_balance_history_cron' ); // update stripe history table in 5 minutes\n}\n\nfunction rsvpmaker_stripe_notify( $vars ) {\n\n\t// $receipt = get_option('rsvpmaker_stripe_receipt');\n\t$receipt = true;\n\n\tif ( ! empty( $vars['rsvp_id'] ) ) {\n\t\trsvp_confirmation_after_payment( $vars['rsvp_id'] );\n\n\t\treturn;\n\n\t}\n\n\t$keys = get_rsvpmaker_stripe_keys();\n\n\t$public = $keys['pk'];\n\n\t$secret = $keys['sk'];\n\n\t$to = $keys['notify'];\n\n\tif ( empty( $to ) ) {\n\n\t\treturn;\n\t}\n\n\t$mail['to'] = $to;\n\n\t$mail['from'] = get_option( 'admin_email' );\n\n\t$mail['fromname'] = get_option( 'blogname' );\n\n\t$mail['html'] = '';\n\n\tforeach ( $vars as $index => $value ) {\n\n\t\t$mail['html'] .= sprintf( '<div>%s: %s</div>', $index, esc_html( $value ) );\n\n\t}\n\n\t$mail['subject'] = 'Stripe payment from ' . $vars['name'];\n\n\trsvpmailer( $mail );\n\tif ( $receipt ) {\n\t\t$mail['to']      = $vars['email'];\n\t\t$mail['subject'] = __( 'Confirming your payment', 'rsvpmaker' ) . ': ' . $vars['description'];\n\t\trsvpmailer( $mail );\n\t}\n\n}\n\nfunction rsvpmaker_stripe_report() {\n\n\tglobal $wpdb;\n\n\techo '<h1>Stripe and PayPal Charges</h1>';\n\n\tif ( isset( $_GET['history'] ) ) {\n\t\tstripe_balance_history( (int) $_GET['history'] );\n\t}\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( !empty( $keys ) && isset( $keys['pk'] ) ) {\n\t\tprintf(\n\t\t\t'<div style=\"padding: 5px; border: thin dotted #000;\"><h3>Retrieve Transactions from Stripe Service</h3>\n\t\n\t\t<p>Includes fees, refunds, and payouts</p>\n\t\n\t\t<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_stripe_report\" />\n\t\n\t\tUp to <select name=\"history\">\n\t\n\t\t<option value=\"10\">10</option>\n\t\n\t\t<option value=\"20\" selected=\"selected\">20</option>\n\t\n\t\t<option value=\"50\">50</option> \n\t\n\t\t<option value=\"100\">100</option> \n\t\n\t\t</select>transactions<br />starting <input type=\"text\" name=\"date\" placeholder=\"YYYY-mm-dd\"> (optional) <br /><input type=\"checkbox\" name=\"payouts\" value=\"1\"> Show payouts to bank<br />\n\t\t%s\n\t\t<button>Get</button></form></div>',\n\t\t\tadmin_url( 'edit.php' ),\n\t\t\trsvpmaker_nonce('return')\n\t\t);\n\t}\n\n\t$tx = rsvpmaker_stripe_transactions( 100 );\n\techo wp_kses_post( $tx['content'] );\n\techo '<h3>Export Format</h3>\n\t<p>Formatted for copy-paste into Excel or other spreadsheet program\n\t<br />\n\t<textarea rows=\"20\" style=\"width: 100%\">' . $tx['export'] . '</textarea></p>';\n\n}\n\nfunction stripe_latest_logged() {\n\tglobal $wpdb;\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( empty( $keys ) || empty( $keys['pk'] ) ) {\n\t\treturn;\n\t}\n\t$stripetable = rsvpmaker_money_table();\n\tif ( ! $wpdb->get_results( \"show tables like '$stripetable' \" ) ) {\n\t\tstripe_balance_history( 200, false );\n\t}\n\treturn $wpdb->get_var( \"SELECT date FROM $stripetable ORDER BY date DESC\" );\n}\n\nfunction rsvpmaker_stripe_transactions_list( $limit = 50, $where = '' ) {\n\tglobal $wpdb;\n\t$stripetable = rsvpmaker_money_table();\n\treturn $wpdb->get_results( \"SELECT name,email,description,date,status,transaction_id,amount,fee, format((amount - fee),2) as yield FROM $stripetable $where ORDER BY date DESC LIMIT 0, $limit \" );\n}\n\nfunction rsvpmaker_stripe_transactions_no_user( $limit = 50, $recent = true ) {\n\tglobal $wpdb;\n\t$stripetable = rsvpmaker_money_table();\n\t$where       = ( $recent ) ? ' AND date > DATE_SUB(CURDATE(), INTERVAL 3 MONTH) ' : '';\n\treturn $wpdb->get_results( \"SELECT * FROM $stripetable WHERE user_id=0 $where ORDER BY date DESC\" );\n}\n\nfunction rsvpmaker_stripe_latest_transaction_by_user( $user_id, $start_date = '' ) {\n\tglobal $wpdb;\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( empty( $keys ) || empty( $keys['pk'] ) ) {\n\t\treturn;\n\t}\n\t$where       = ( $start_date ) ? \" AND date > '$start_date' \" : '';\n\t$stripetable  = rsvpmaker_money_table();\n\t$sql         = \"SELECT * FROM $stripetable WHERE user_id=$user_id $where ORDER BY date DESC\";\n\treturn $wpdb->get_row( $sql );\n}\n\nadd_action( 'stripe_balance_history_cron', 'stripe_balance_history_cron' );\n\nfunction stripe_balance_history_cron() {\n\tstripe_balance_history( 20, false );\n}\n\nfunction stripe_balance_history( $limit = 20, $output = true ) {\n\tglobal $wpdb;\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( empty( $keys ) || empty( $keys['pk'] ) ) {\n\t\treturn;\n\t}\n\t$public = $keys['pk'];\n\t$secret = $keys['sk'];\n\n\t$stripetable = rsvpmaker_money_table();\n\n\trsvpmaker_debug_log( 'call to stripe_balance_history' );\n\n\trequire_once 'stripe-php/init.php';\n\t\\Stripe\\Stripe::setApiKey( $secret );\n\n\t\\Stripe\\Stripe::setAppInfo(\n\t\t'WordPress RSVPMaker events management plugin',\n\t\tget_rsvpversion(),\n\t\t'https://rsvpmaker.com'\n\t);\n\n\t$stripe = new \\Stripe\\StripeClient( $secret );\n\n\t$history = $stripe->balanceTransactions->all( array( 'limit' => $limit ) );\n\n\t$charges = $stripe->charges->all( array( 'limit' => $limit * 5 ) );\n\n\tforeach ( $charges->data as $charge ) {\n\t\t$names[ $charge->balance_transaction ]        = $charge->billing_details->name;\n\t\t$emails[ $charge->balance_transaction ]       = $charge->billing_details->email;\n\t\t$descriptions[ $charge->balance_transaction ] = $charge->description;\n\t}\n\n\tif ( isset( $_GET['date'] ) ) {\n\n\t\t$startdate = strtotime( $_GET['date'] );\n\t}\n\n\t$table = '';\n\n\tforeach ( $history->data as $index => $data ) {\n\n\t\tif ( ( $data->reporting_category == 'payout' ) && empty( $_GET['payouts'] ) ) {\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( isset( $startdate ) && ( $data->created < $startdate ) ) {\n\n\t\t\tcontinue;\n\t\t}\n\n\t\t$amount = number_format( ( $data->amount / 100 ), 2 );\n\n\t\t$fee = number_format( ( $data->fee / 100 ), 2 );\n\n\t\t$yield = $amount - $fee;\n\n\t\t$date                          = date( 'Y-m-d H:i', $data->created );\n\t\t$name                          = ( empty( $names[ $data->id ] ) ) ? '' : $names[ $data->id ];\n\t\t$email                         = ( empty( $emails[ $data->id ] ) ) ? '' : $emails[ $data->id ];\n\t\t$description                   = ( empty( $descriptions[ $data->id ] ) ) ? '' : $descriptions[ $data->id ];\n\t\t$user                          = get_user_by( 'email', $email );\n\t\t$user_id                       = ( empty( $user->ID ) ) ? 0 : $user->ID;\n\t\t$tablerow[ $date . $data->id ] = \"$date,$name,$email,$description,$amount,$fee,$yield\\n\";\n\t\t$sql                           = \"select transaction_id FROM $stripetable WHERE transaction_id='$data->id'\";\n\t\t$check                         = $wpdb->get_var( $sql );\n\t\t// echo '<div>check: '.$sql.'<br />'.$check.'</div>';\n\t\tif ( ! $check ) {\n\t\t\t$sql = $wpdb->prepare(\n\t\t\t\t\"INSERT INTO $stripetable SET name=%s,email=%s,description=%s,amount=%s,fee=%s,date=%s,status='Stripe',transaction_id=%s, user_id=%d\",\n\t\t\t\t$name,\n\t\t\t\t$email,\n\t\t\t\t$description,\n\t\t\t\t$amount,\n\t\t\t\t$fee,\n\t\t\t\t$date,\n\t\t\t\t$data->id,\n\t\t\t\t$user_id\n\t\t\t);\n\t\t\t// echo '<div>'.$sql.'</div>';\n\t\t\t$wpdb->query( $sql );\n\t\t}\n\t\tif ( $data->fee ) {\n\n\t\t\t$fees[ $data->id ] = $fee;\n\t\t}\n\n\t\tif ( $data->reporting_category == 'refund' ) {\n\n\t\t\t$refunds[ $data->id ] = array(\n\t\t\t\t'amount' => $amount,\n\t\t\t\t'date'   => $date,\n\t\t\t);\n\t\t}\n\t\tif ( $output ) {\n\t\t\tprintf( '<p>%s %s<br />%s<br />Fee: %s %s<br />%s</p>', esc_html( $name ), esc_html( $date ), number_format( ( $data->amount / 100 ), 2 ), number_format( ( $data->fee / 100 ), 2 ), esc_html( $data->reporting_category ), esc_html( $data->id ) );\n\t\t}\n\t}\n\n\tif ( ! $output ) {\n\t\treturn;\n\t}\n\n\tif ( ! empty( $tablerow ) ) {\n\t\tksort( $tablerow );\n\t\t$table = implode( '', $tablerow );\n\t\techo '<h3>Export Format</h3><pre>Date,Name,Amount,Fee,Yield' . \"\\n\" . wp_kses_post( $table ) . '</pre>';\n\t}\n\n\tif ( ! empty( $fees ) ) {\n\t\techo '<h2>Fees</h2>';\n\n\t\t$feetotal = 0;\n\n\t\tforeach ( $fees as $index => $fee ) {\n\t\t\t$feetotal += $fee;\n\t\t\tprintf( '<p>%s %s</p>', esc_html( $index ), esc_html( $fee ) );\n\t\t}\n\n\t\tprintf( '<p>Total Fees: %s</p>', esc_html( $feetotal ) );\n\t}\n\n\tif ( ! empty( $refunds ) ) {\n\t\techo '<h2>Refunds</h2>';\n\t\t$rtotal = 0;\n\t\tforeach ( $refunds as $index => $refund ) {\n\t\t\t$rtotal += $refund['amount'];\n\t\t\tprintf( '<p>%s %s %s</p>', esc_html( $index ), esc_html( $refund['amount'] ), esc_html( $refund['date'] ) );\n\t\t}\n\t\tprintf( '<p>Total Refunds: %s</p>', esc_html( $rtotal ) );\n\t}\n\n}\n\nfunction rsvpmaker_stripe_transactions() {\n\t$transactions = rsvpmaker_stripe_transactions_list();\n\tif ( $transactions ) {\n\t\t$transaction = (array) $transactions[0];\n\t\t$th                   = '<tr>';\n\t\t$td                   = '';\n\t\tforeach ( $transaction as $column => $value ) {\n\t\t\t$th       .= '<th>' . $column . '</th>';\n\t\t\t$columns[] = $column;\n\t\t}\n\t\t$th    .= '</tr>';\n\t\t$export = implode( ',', $columns ) . \"\\n\";\n\t\tfputcsv( $temp_memory, $columns );\n\t\tforeach ( $transactions as $index => $transaction ) {\n\t\t\t$row         = array();\n\t\t\t$line        = '';\n\t\t\t$td         .= '<tr>';\n\t\t\t$transaction = (array) $transaction;\n\t\t\t/*\n\t\t\tfor future use\n\t\t\tif(!empty($transaction['metadata']) ) {\n\t\t\t//could be used for paid to toastmasters amount\n\t\t\t$metadata = unserialize($transaction['metadata']);\n\t\t\t$transaction['metadata'] = var_export($metadata,true);\n\t\t\t}\n\t\t\t*/\n\t\t\tforeach ( $transaction as $column => $value ) {\n\t\t\t\t$td .= '<td>' . esc_html( $value ) . '</td>';\n\t\t\t\tif ( strpos( $value, '\"' ) ) {\n\t\t\t\t\t$value = str_replace( '\"', '\\\"', $value );\n\t\t\t\t}\n\t\t\t\tif ( ! is_numeric( $value ) ) {\n\t\t\t\t\t$value = '\"' . $value . '\"';\n\t\t\t\t}\n\t\t\t\t$row[ $column ] = $value;\n\t\t\t}\n\t\t\t$lines[] = implode( ',', $row );\n\t\t\t$td     .= \"<td>$yield</td></tr>\\n\";\n\t\t}\n\t\tkrsort( $lines );\n\t\t$export .= implode( \"\\n\", $lines );\n\t\treturn array(\n\t\t\t'content' => '<h3>50 Most Recent Payments</h3><table>' . $th . $td . '</table>',\n\t\t\t'export'  => $export,\n\t\t);\n\t}\n}\n", "<?php\n/*\nPlugin Name: RSVPMaker\nPlugin URI: http://www.rsvpmaker.com\nDescription: Schedule events, send invitations to your mailing list and track RSVPs. You get all your familiar WordPress editing tools with extra options for setting dates and RSVP options. Online payments with PayPal or Stripe can be added with a little extra configuration. Email invitations can be sent through MailChimp or to members of your website community who have user accounts. Recurring events can be tracked according to a schedule such as \"First Monday\" or \"Every Friday\" at a specified time, and the software will calculate future dates according to that schedule and let you track them together. <a href=\"options-general.php?page=rsvpmaker-admin.php\">Options</a>\nAuthor: David F. Carr\nAuthor URI: http://www.carrcommunications.com\nText Domain: rsvpmaker\nDomain Path: /translations\nVersion: 9.2.5\n*/\n\nfunction get_rsvpversion() {\n\treturn '9.2.5';\n}\nglobal $wp_version;\nglobal $default_tz;\n\n$default_tz = date_default_timezone_get();\n\nif ( version_compare( $wp_version, '3.0', '<' ) ) {\n\texit( __( 'RSVPmaker plugin requires WordPress 3.0 or greater', 'rsvpmaker' ) );\n}\n\nfunction rsvpmaker_load_plugin_textdomain() {\n\tload_plugin_textdomain( 'rsvpmaker', false, basename( dirname( __FILE__ ) ) . '/translations/' );\n}\n\nglobal $rsvp_options;\n\n$rsvp_options = get_option( 'RSVPMAKER_Options' );\n\n$locale = get_locale();\n\nfunction rsvp_options_defaults() {\n\n\tglobal $rsvp_options;\n\n\tif ( empty( $rsvp_options ) ) {\n\t\t$rsvp_options = array();\n\t}\n\n\t// defaults\n\n\t$rsvp_defaults = array(\n\t\t'menu_security'                     => 'manage_options',\n\n\t\t'rsvpmaker_template'                => 'publish_rsvpmakers',\n\n\t\t'recurring_event'                   => 'publish_rsvpmakers',\n\n\t\t'multiple_events'                   => 'publish_rsvpmakers',\n\n\t\t'documentation'                     => 'edit_rsvpmakers',\n\n\t\t'calendar_icons'                    => 1,\n\n\t\t'social_title_date'                 => 1,\n\n\t\t'default_content'                   => '',\n\n\t\t'rsvp_to'                           => get_bloginfo( 'admin_email' ),\n\n\t\t'confirmation_include_event'        => 0,\n\n\t\t'rsvpmaker_send_confirmation_email' => 1,\n\n\t\t'rsvp_instructions'                 => '',\n\n\t\t'rsvp_count'                        => 1,\n\n\t\t'rsvp_count_party'                  => 1,\n\n\t\t'rsvp_yesno'                        => 1,\n\n\t\t'send_payment_reminders'            => 1,\n\n\t\t'rsvp_on'                           => 0,\n\n\t\t'rsvp_max'                          => 0,\n\n\t\t'login_required'                    => 0,\n\n\t\t'rsvp_captcha'                      => 0,\n\n\t\t'show_attendees'                    => 0,\n\n\t\t'convert_timezone'                  => 0,\n\n\t\t'add_timezone'                      => 0,\n\n\t\t'rsvplink'                          => '<p><a style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\" class=\"rsvplink\" href=\"%s\">' . __( 'RSVP Now!', 'rsvpmaker' ) . '</a></p>',\n\n\t\t'rsvp_form_title'                   => __( 'RSVP Now!', 'rsvpmaker' ),\n\n\t\t'defaulthour'                       => 19,\n\n\t\t'defaultmin'                        => 0,\n\n\t\t'long_date'                         => '%A %B %e, %Y',\n\n\t\t'short_date'                        => '%B %e',\n\n\t\t'time_format'                       => '%l:%M %p',\n\n\t\t'smtp'                              => '',\n\n\t\t'paypal_currency'                   => 'USD',\n\n\t\t'currency_decimal'                  => '.',\n\n\t\t'currency_thousands'                => ',',\n\n\t\t'paypal_invoiceno'                  => 1,\n\n\t\t'stripe'                            => 0,\n\n\t\t'show_screen_recurring'             => 0,\n\n\t\t'show_screen_multiple'              => 0,\n\n\t\t'dashboard_message'                 => '',\n\n\t\t'update_rsvp'                       => __( 'Update RSVP', 'rsvpmaker' ),\n\n\t);\n\n\t$rsvp_defaults = apply_filters( 'rsvpmaker_defaults', $rsvp_defaults );\n\n\tforeach ( $rsvp_defaults as $index => $value ) {\n\t\tif ( ! isset( $rsvp_options[ $index ] ) ) {\n\t\t\t$rsvp_options[ $index ] = $rsvp_defaults[ $index ];\n\t\t}\n\t}\n\n\tif ( empty( $rsvp_options['long_date'] ) || ( strpos( $rsvp_options['long_date'], '%' ) !== false ) ) {\n\n\t\t$rsvp_options['long_date'] = 'l F j, Y';\n\n\t\t$rsvp_options['short_date'] = 'M j';\n\n\t\t$rsvp_options['time_format'] = 'g:i A';\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\t}\n\n\tif ( isset( $rsvp_options['rsvp_to_current'] ) && $rsvp_options['rsvp_to_current'] && is_user_logged_in() ) {\n\n\t\tglobal $current_user;\n\n\t\t$rsvp_options['rsvp_to'] = $current_user->user_email;\n\n\t}\n\n\tif ( empty( $rsvp_options['rsvp_form'] ) || isset( $_GET['reset_form'] ) ) {\n\n\t\tif ( function_exists( 'do_blocks' ) && ! class_exists( 'Classic_Editor' ) ) {\n\n\t\t\t$form = '<!-- wp:rsvpmaker/formfield {\"label\":\"First Name\",\"slug\":\"first\",\"guestform\":true,\"sluglocked\":true,\"required\":\"required\"} /-->\n\n<!-- wp:rsvpmaker/formfield {\"label\":\"Last Name\",\"slug\":\"last\",\"guestform\":true,\"sluglocked\":true,\"required\":\"required\"} /-->\n\n<!-- wp:rsvpmaker/formfield {\"label\":\"Email\",\"slug\":\"email\",\"sluglocked\":true,\"required\":\"required\"} /-->\n\n<!-- wp:rsvpmaker/formfield {\"label\":\"Phone\",\"slug\":\"phone\"} /-->\n\n<!-- wp:rsvpmaker/formselect {\"label\":\"Phone Type\",\"slug\":\"phone_type\",\"choicearray\":[\"Mobile Phone\",\"Home Phone\",\"Work Phone\"]} /-->\n\n<!-- wp:rsvpmaker/guests -->\n\n<div class=\"wp-block-rsvpmaker-guests\"><!-- wp:paragraph -->\n\n<p></p>\n\n<!-- /wp:paragraph --></div>\n\n<!-- /wp:rsvpmaker/guests -->\n\n<!-- wp:rsvpmaker/formnote /-->';\n\n\t\t} else {\n\n\t\t\t$form = '<p><label>' . __( 'Email', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"email\" required=\"1\"]</p>\n\n\t\t<p><label>' . __( 'First Name', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"first\" required=\"1\"]</p>\n\n\t\t<p><label>' . __( 'Last Name', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"last\" required=\"1\"]</p>\n\n\t\t[rsvpprofiletable show_if_empty=\"phone\"]\n\n\t\t<p><label>' . __( 'Phone', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"phone\" size=\"20\"]</p>\n\n\t\t<p><label>' . __( 'Phone Type', 'rsvpmaker' ) . ':</label> [rsvpfield selectfield=\"phone_type\" options=\"Work Phone,Mobile Phone,Home Phone\"]</p>\n\n\t\t[/rsvpprofiletable]\n\n\t\t[rsvpguests]\n\n\t\t<p>' . __( 'Note', 'rsvpmaker' ) . ':<br />\n\n\t\t<textarea name=\"note\" cols=\"60\" rows=\"2\" id=\"note\">[rsvpnote]</textarea></p>';\n\n\t\t}\n\n\t\t$data['post_title'] = 'Form:Default';\n\n\t\t$data['post_content'] = $form;\n\n\t\t$data['post_status'] = 'publish';\n\n\t\t$data['post_author'] = 1;\n\n\t\t$data['post_type'] = 'rsvpmaker';\n\n\t\t$rsvp_options['rsvp_form'] = wp_insert_post( $data );\n\n\t\tupdate_post_meta( $rsvp_options['rsvp_form'], '_rsvpmaker_special', 'RSVP Form' );\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t} elseif ( ! is_numeric( $rsvp_options['rsvp_form'] ) ) {\n\n\t\t$data['post_title'] = 'Form:Default';\n\n\t\t$data['post_content'] = $rsvp_options['rsvp_form'];\n\n\t\t$data['post_status'] = 'publish';\n\n\t\t$data['post_type'] = 'rsvpmaker';\n\n\t\t$data['post_author'] = 1;\n\n\t\t$rsvp_options['rsvp_form'] = wp_insert_post( $data );\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n\t$rsvp_defaults['rsvp_form'] = $rsvp_options['rsvp_form'];\n\n\tif ( strpos( $rsvp_options['rsvplink'], '*|EMAIL|*' ) ) {\n\n\t\t$rsvp_options['rsvplink'] = str_replace( '?e=*|EMAIL|*#rsvpnow', '', $rsvp_options['rsvplink'] );\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n\t// if html removed (recover from error with sanitization on settings screen)\n\n\tif ( ! strpos( $rsvp_options['rsvplink'], '</a>' ) ) {\n\n\t\t$rsvp_options['rsvplink'] = '<p><a style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\" class=\"rsvplink\" href=\"%s\">' . __( 'RSVP Now!', 'rsvpmaker' ) . '</a></p>';\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n\tif ( empty( $rsvp_options['rsvp_confirm'] ) ) {\n\n\t\t$message = '<!-- wp:paragraph -->\n\n<p>' . __( 'Thank you!', 'rsvpmaker' ) . '</p>\n\n<!-- /wp:paragraph -->';\n\n\t\t$rsvp_options['rsvp_confirm'] = wp_insert_post(\n\t\t\tarray(\n\t\t\t\t'post_title'   => 'Confirmation:Default',\n\t\t\t\t'post_content' => $message,\n\t\t\t\t'post_status'  => 'publish',\n\t\t\t\t'post_type'    => 'rsvpemail',\n\t\t\t\t'post_parent'  => 0,\n\t\t\t)\n\t\t);\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t} elseif ( ! is_numeric( $rsvp_options['rsvp_confirm'] ) ) {\n\n\t\t$rsvp_options['rsvp_confirm'] = wp_insert_post(\n\t\t\tarray(\n\t\t\t\t'post_title'   => 'Confirmation:Default',\n\n\t\t\t\t'post_content' => rsvpautog( $rsvp_options['rsvp_confirm'] ),\n\n\t\t\t\t'post_status'  => 'publish',\n\t\t\t\t'post_type'    => 'rsvpemail',\n\t\t\t\t'post_parent'  => 0,\n\t\t\t)\n\t\t);\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n}\n\nfunction rsvpmaker_defaults_for_post( $post_id ) {\n\n\tglobal $rsvp_options;\n\n\t$defaults = array(\n\n\t\t'calendar_icons'                    => '_calendar_icons',\n\n\t\t'rsvp_to'                           => '_rsvp_to',\n\n\t\t'rsvp_confirm'                      => '_rsvp_confirm',\n\n\t\t'rsvpmaker_send_confirmation_email' => '_rsvp_rsvpmaker_send_confirmation_email',\n\n\t\t'confirmation_include_event'        => '_rsvp_confirmation_include_event',\n\n\t\t'rsvp_instructions'                 => '_rsvp_instructions',\n\n\t\t'rsvp_count'                        => '_rsvp_count',\n\n\t\t'rsvp_count_party'                  => '_rsvp_count_party',\n\n\t\t'rsvp_yesno'                        => '_rsvp_yesno',\n\n\t\t'rsvp_max'                          => '_rsvp_max',\n\n\t\t'login_required'                    => '_rsvp_login_required',\n\n\t\t'rsvp_captcha'                      => '_rsvp_captcha',\n\n\t\t'show_attendees'                    => '_rsvp_show_attendees',\n\n\t\t'convert_timezone'                  => '_convert_timezone',\n\n\t\t'add_timezone'                      => '_add_timezone',\n\n\t\t'rsvp_form'                         => '_rsvp_form',\n\n\t);\n\n\tforeach ( $defaults as $index => $label ) {\n\n\t\tupdate_post_meta( $post_id, $label, $rsvp_options[ $index ] );\n\t}\n\n}\n\n\n\nfunction get_rsvpmaker_custom( $post_id ) {\n\n\tglobal $rsvp_options;\n\n\t$defaults = array(\n\n\t\t'calendar_icons'                    => '_calendar_icons',\n\n\t\t'rsvp_to'                           => '_rsvp_to',\n\n\t\t'rsvp_confirm'                      => '_rsvp_confirm',\n\n\t\t'rsvpmaker_send_confirmation_email' => '_rsvp_rsvpmaker_send_confirmation_email',\n\n\t\t'confirmation_include_event'        => '_rsvp_confirmation_include_event',\n\n\t\t'rsvp_instructions'                 => '_rsvp_instructions',\n\n\t\t'rsvp_count'                        => '_rsvp_count',\n\n\t\t'rsvp_count_party'                  => '_rsvp_count_party',\n\n\t\t'rsvp_yesno'                        => '_rsvp_yesno',\n\n\t\t'rsvp_max'                          => '_rsvp_max',\n\n\t\t'login_required'                    => '_rsvp_login_required',\n\n\t\t'rsvp_captcha'                      => '_rsvp_captcha',\n\n\t\t'show_attendees'                    => '_rsvp_show_attendees',\n\n\t\t'convert_timezone'                  => '_convert_timezone',\n\n\t\t'add_timezone'                      => '_add_timezone',\n\n\t\t'rsvp_form'                         => '_rsvp_form',\n\n\t);\n\n\tif ( strpos( $_SERVER['REQUEST_URI'], 'post-new.php' ) && ! isset( $_GET['clone'] ) ) {\n\n\t\t$custom['_rsvp_on'][0] = $rsvp_options['rsvp_on'];\n\n\t\tforeach ( $defaults as $default_key => $custom_key ) {\n\n\t\t\t$custom[ $custom_key ][0] = $rsvp_options[ $default_key ];\n\t\t}\n\n\t\treturn $custom;\n\n\t} else {\n\n\t\t$custom = get_post_custom( $post_id );\n\n\t\t$custom['_rsvp_on'][0] = ( isset( $custom['_rsvp_on'][0] ) && $custom['_rsvp_on'][0] ) ? 1 : 0;\n\n\t\tforeach ( $defaults as $default_key => $custom_key ) {\n\n\t\t\tif ( ! isset( $custom[ $custom_key ][0] ) ) {\n\n\t\t\t\t$custom[ $custom_key ][0] = $rsvp_options[ $default_key ];\n\t\t\t}\n\t\t}\n\n\t\treturn $custom;\n\n\t}\n\n}\n\nrsvpmaker_includes();\nfunction rsvpmaker_includes() {\n\t$plugins_dir   = plugin_dir_path( __DIR__ );\n\t$rsvpmaker_dir = trailingslashit(plugin_dir_path( __FILE__ ));\n\n\tif ( file_exists( $plugins_dir . 'rsvpmaker-custom.php' ) ) {\n\t\tinclude_once $plugins_dir . 'rsvpmaker-custom.php';\n\t}\n\n\tinclude $rsvpmaker_dir . 'rsvpmaker-util.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-admin.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-api-endpoints.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-display.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-plugabble.php';\n\tinclude $rsvpmaker_dir . 'mailchimp-api-master/src/MailChimp.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-email.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-privacy.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-actions.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-form.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-widgets.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-group-email.php';\n\tinclude $rsvpmaker_dir . 'script.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-money.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-ical.php';\n}\n$gateways = get_rsvpmaker_payment_options();\nif ( in_array( 'Stripe', $gateways ) ) {\n\n\trequire WP_PLUGIN_DIR . '/rsvpmaker/rsvpmaker-stripe.php';\n}\n\nif ( in_array( 'PayPal REST API', $gateways ) ) {\n\n\trequire WP_PLUGIN_DIR . '/rsvpmaker/paypal-rest/paypal-rest.php';\n}\t\n\nfunction rsvpmaker_gutenberg_check() {\n\n\tglobal $carr_gut_test;\n\n\tif ( function_exists( 'register_block_type' ) && ! isset( $carr_gut_test ) ) {\n\n\t\trequire_once plugin_dir_path( __FILE__ ) . 'gutenberg/src/init.php';\n\t}\n\n}\n\n\n\nif ( version_compare( PHP_VERSION, '5.3.0' ) >= 0 ) {\n\n\tinclude WP_PLUGIN_DIR . '/rsvpmaker/rsvpmaker-recaptcha.php';\n\n}\n\n\n\nfunction rsvpmaker_create_post_type() {\n\n\tglobal $rsvp_options;\n\n\t$menu_label = ( isset( $rsvp_options['menu_label'] ) ) ? $rsvp_options['menu_label'] : __( 'RSVP Events', 'rsvpmaker' );\n\n\t$supports = array( 'title', 'editor', 'author', 'excerpt', 'custom-fields', 'thumbnail', 'revisions' );\n\n\tregister_post_type(\n\t\t'rsvpmaker',\n\t\tarray(\n\n\t\t\t'labels'             => array(\n\n\t\t\t\t'name'          => $menu_label,\n\n\t\t\t\t'add_new_item'  => __( 'Add New RSVP Event', 'rsvpmaker' ),\n\n\t\t\t\t'edit_item'     => __( 'Edit RSVP Event', 'rsvpmaker' ),\n\n\t\t\t\t'new_item'      => __( 'RSVP Events', 'rsvpmaker' ),\n\n\t\t\t\t'singular_name' => __( 'RSVP Event', 'rsvpmaker' ),\n\n\t\t\t),\n\n\t\t\t'menu_icon'          => 'dashicons-calendar-alt',\n\n\t\t\t'public'             => true,\n\n\t\t\t'can_export'         => false,\n\n\t\t\t'publicly_queryable' => true,\n\n\t\t\t'show_ui'            => true,\n\n\t\t\t'query_var'          => true,\n\n\t\t\t'rewrite'            => array(\n\t\t\t\t'slug'       => 'rsvpmaker',\n\t\t\t\t'with_front' => false,\n\t\t\t),\n\n\t\t\t'capability_type'    => 'rsvpmaker',\n\n\t\t\t'map_meta_cap'       => true,\n\n\t\t\t'has_archive'        => true,\n\n\t\t\t'hierarchical'       => false,\n\n\t\t\t'menu_position'      => 5,\n\n\t\t\t'supports'           => $supports,\n\n\t\t\t'show_in_rest'       => true,\n\n\t\t\t'taxonomies'         => array( 'rsvpmaker-type', 'post_tag' ),\n\n\t\t)\n\t);\n\n\t// Add new taxonomy, make it hierarchical (like categories)\n\n\t$labels = array(\n\n\t\t'name'              => _x( 'Event Types', 'taxonomy general name', 'rsvpmaker' ),\n\n\t\t'singular_name'     => _x( 'Event Type', 'taxonomy singular name', 'rsvpmaker' ),\n\n\t\t'search_items'      => __( 'Search Event Types', 'rsvpmaker' ),\n\n\t\t'all_items'         => __( 'All Event Types', 'rsvpmaker' ),\n\n\t\t'parent_item'       => __( 'Parent Event Type', 'rsvpmaker' ),\n\n\t\t'parent_item_colon' => __( 'Parent Event Type:', 'rsvpmaker' ),\n\n\t\t'edit_item'         => __( 'Edit Event Type', 'rsvpmaker' ),\n\n\t\t'update_item'       => __( 'Update Event Type', 'rsvpmaker' ),\n\n\t\t'add_new_item'      => __( 'Add New Event Type', 'rsvpmaker' ),\n\n\t\t'new_item_name'     => __( 'New Event Type', 'rsvpmaker' ),\n\n\t\t'menu_name'         => __( 'Event Type', 'rsvpmaker' ),\n\n\t);\n\n\tregister_taxonomy(\n\t\t'rsvpmaker-type',\n\t\tarray( 'rsvpmaker' ),\n\t\tarray(\n\n\t\t\t'hierarchical' => true,\n\n\t\t\t'labels'       => $labels,\n\n\t\t\t'show_ui'      => true,\n\n\t\t\t'show_in_rest' => true,\n\n\t\t\t'query_var'    => true,\n\n\t\t)\n\t);\n\n\t/*     'rewrite' => array( 'slug' => 'rsvpmaker-type' ), */\n\n\t// tweak for users who report \"page not found\" errors - flush rules on every init\n\n\tglobal $rsvp_options;\n\n\tif ( isset( $rsvp_options['flush'] ) && $rsvp_options['flush'] ) {\n\n\t\tflush_rewrite_rules();\n\t}\n\n\t// if there is a logged in user, set editing roles\n\n\tglobal $current_user;\n\n\tif ( isset( $current_user ) ) {\n\n\t\trsvpmaker_roles();\n\t}\n\n}\n\n// make sure new rules will be generated for custom post type - flush for admin but not for regular site visitors\nfunction cpevent_activate() {\n\n\trsvpmaker_single_block_template(); // if this is a block template, add RSVPMaker Single\n\n\tglobal $wpdb;\n\n\tglobal $rsvp_options;\n\n\trequire_once ABSPATH . 'wp-admin/includes/upgrade.php';\n\n\t$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvpmaker` (\n  `id` int(11) NOT NULL auto_increment,\n  `email` varchar(255)   CHARACTER SET utf8 COLLATE utf8_general_ci  default NULL,\n  `yesno` tinyint(4) NOT NULL default '0',\n  `first` varchar(255)  CHARACTER SET utf8 COLLATE utf8_general_ci  NOT NULL default '',\n  `last` varchar(255)  CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default '',\n  `details` text  CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `event` int(11) NOT NULL default '0',\n  `owed` float(6,2) NOT NULL default '0.00',\n  `amountpaid` float(6,2) NOT NULL default '0.00',\n  `master_rsvp` int(11) NOT NULL default '0',\n  `guestof` varchar(255)   CHARACTER SET utf8 COLLATE utf8_general_ci  default NULL,\n  `note` text   CHARACTER SET  utf8 COLLATE utf8_general_ci NOT NULL,\n  `participants` INT NOT NULL DEFAULT '0',\n  `user_id` INT NOT NULL DEFAULT '0',\n  `timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,\n  PRIMARY KEY  (`id`)\n) ENGINE=MyISAM  DEFAULT CHARSET=utf8;\";\n\n\tdbDelta( $sql );\n\n\t$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvpmaker_event` (\n\n  `event` int(11) NOT NULL default '0',\n\n  `post_title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci default NULL,\n\n  `display_type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci default NULL,\n\n  `date` datetime,\n\n  `enddate` datetime,\n\n  `ts_start` int(11) NOT NULL default '0',\n\n  `ts_end` int(11) NOT NULL default '0',\n\n  `timezone` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci default NULL,\n\n  PRIMARY KEY  (`event`)\n\n) ENGINE=MyISAM DEFAULT CHARSET=utf8;\";\n\n\tdbDelta( $sql );\n\n\t$sql = 'SELECT post_title, event, meta_value FROM `' . $wpdb->prefix . \"rsvpmaker` join $wpdb->posts ON \" . $wpdb->prefix . \"rsvpmaker.event=wp_posts.ID join $wpdb->postmeta ON $wpdb->posts.ID = wp_postmeta.post_id WHERE meta_key='_rsvp_dates' group by event\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( $results ) {\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$sql = $wpdb->prepare( 'REPLACE INTO `' . $wpdb->prefix . 'rsvpmaker_event` SET event=%d, post_title=%s, date=%s ', $row->event, $row->post_title, $row->meta_value );\n\n\t\t\t$wpdb->query( $sql );\n\n\t\t}\n\t}\n\n\t$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvp_volunteer_time` (\n\n  `id` int(11) NOT NULL auto_increment,\n\n  `event` int(11) NOT NULL default '0',\n\n  `rsvp` int(11) NOT NULL default '0',\n\n  `time` int(11) default '0',\n\n  `participants` int(11) NOT NULL default '0',\n\n  PRIMARY KEY  (`id`)\n\n) ENGINE=MyISAM  DEFAULT CHARSET=utf8;\";\n\n\tdbDelta( $sql );\n\n$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvpmailer_blocked` (\n`ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n`email` varchar(100) NOT NULL DEFAULT '',\n`code` varchar(50) NOT NULL DEFAULT '',\n`timestamp` timestamp NOT NULL ON UPDATE CURRENT_TIMESTAMP,\nPRIMARY KEY (`ID`),\nKEY `email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n\ndbDelta( $sql );\n\nrsvpmail_problem_init();\n\n\t$sql = 'SELECT slug FROM ' . $wpdb->prefix . 'terms JOIN `' . $wpdb->prefix . 'term_taxonomy` on ' . $wpdb->prefix . 'term_taxonomy.term_id= ' . $wpdb->prefix . \"terms.term_id WHERE taxonomy='rsvpmaker-type' AND slug='featured'\";\n\n\tif ( ! $wpdb->get_var( $sql ) ) {\n\n\t\twp_insert_term(\n\t\t\t'Featured', // the term\n\t\t\t'rsvpmaker-type', // the taxonomy\n\t\t\tarray(\n\n\t\t\t\t'description' => 'Featured event. Can be used to put selected events in a listing, for example on the home page',\n\n\t\t\t\t'slug'        => 'featured',\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\t$sql = \"UPDATE $wpdb->posts SET post_type='rsvpemail' WHERE post_type='rsvpmaker' AND post_parent != 0 \";\n\n\t$wpdb->query( $sql );\n\n\t$rsvp_options['dbversion'] = 19;\n\n\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n}\n\nregister_activation_hook( __FILE__, 'cpevent_activate' );\n\n// upgrade database if necessary\nif ( isset( $rsvp_options['dbversion'] ) && ( $rsvp_options['dbversion'] < 19 ) ) {\n\tcpevent_activate();\n}\n\nfunction rsvpmaker_deactivate() {\n\n\t// Unregister the post type, so the rules are no longer in memory.\n\n\tunregister_post_type( 'rsvpmaker' );\n\n\tunregister_post_type( 'rsvpemail' );\n\n\t// Clear the permalinks to remove our post type's rules from the database.\n\n\tflush_rewrite_rules();\n\n\twp_unschedule_hook( 'rsvp_cleanup_hook' );\n\n\twp_unschedule_hook( 'rsvpmaker_relay_init_hook' );\n\n\twp_unschedule_hook( 'rsvpmaker_cron_email' );\n\n\twp_unschedule_hook( 'rsvpmaker_cron_email_preview' );\n\n\twp_unschedule_hook( 'rsvp_daily_reminder_event' );\n\n}\n\nregister_deactivation_hook( __FILE__, 'rsvpmaker_deactivate' );\n\n\n\nadd_action( 'init', 'rsvp_firsttime', 1 );\n\nfunction rsvp_firsttime() {\n\n\tglobal $rsvp_options;\n\n\tif ( $rsvp_options['dbversion'] > 12 ) {\n\n\t\treturn;\n\t}\n\n\t$rsvp_options['dbversion'] = 13;\n\n\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t$future = get_future_events();\n\n\tif ( is_array( $future ) ) {\n\n\t\tforeach ( $future as $event ) {\n\n\t\t\t$post_id = $event->ID;\n\n\t\t\t$datetime = get_rsvp_date( $post_id );\n\n\t\t\t$end = get_post_meta( $post_id, '_end' . $datetime, true );\n\n\t\t\tif ( empty( $end ) ) {\n\n\t\t\t\t$t = rsvpmaker_strtotime( $datetime . ' +1 hour' );\n\n\t\t\t\t$end = rsvpmaker_date( 'H:i', $t );\n\n\t\t\t}\n\n\t\t\t$duration = get_post_meta( $post_id, '_' . $datetime, true );\n\n\t\t\tupdate_post_meta( $post_id, '_firsttime', $duration );\n\n\t\t\tupdate_post_meta( $post_id, '_endfirsttime', $end );\n\n\t\t}\n\t}\n\n}\n\n\n\nfunction convert_date_meta() {\n\n\tglobal $wpdb;\n\n\t$date_table = $wpdb->prefix . rsvp_dates;\n\n\t$sql = \"SELECT * FROM $date_table\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( ! $results ) {\n\n\t\treturn;\n\t}\n\n\tforeach ( $results as $row ) {\n\n\t\tadd_post_meta( $row->postID, '_rsvp_dates', $row->datetime );\n\n\t\tif ( $row->duration ) {\n\n\t\t\tadd_post_meta( $row->postID, '_' . $row->datetime, $row->duration );\n\t\t}\n\t}\n\n\t// fix for duplicate dates\n\n\t// rsvpmaker_duplicate_dates();\n}\n\nadd_filter('single_template_hierarchy','rsvpmaker_single_template_hierarchy');\nfunction rsvpmaker_single_template_hierarchy($templates) {\n\tglobal $post;\n\tif(isset($post->post_type) && ($post->post_type == 'rsvpmaker'))\n\t{\n\t\t$index = array_search('single.php',$templates);\n\t\tif($index) {\n\t\t\t// prefer the page template, doesn't emphasize date posted as much in most themes\n\t\t\t$templates[$index] = 'page.php';\n\t\t\t$templates[] = 'single.php';\n\t\t}\n\t}\n\treturn $templates;\n}\n\nfunction log_paypal( $message ) {\n\n\tglobal $post;\n\n\t$ts = rsvpmaker_date( 'r' );\n\n\t$invoice = sanitize_text_field($_SESSION['invoice']);\n\n\t$message .= \"\\n<br /><br />Post ID: \" . $post->ID;\n\n\t$message .= \"\\n<br /><br />Invoice: \" . $invoice;\n\n\t$message .= \"\\n<br />Email: \" . sanitize_text_field($_SESSION['payer_email']);\n\n\t$message .= \"\\n<br />Time: \" . $ts;\n\n\tadd_post_meta( $post->ID, '_paypal_log', $message );\n\n}\n\nif ( ! function_exists( 'rsvpmaker_permalink_query' ) ) {\n\n\tfunction rsvpmaker_permalink_query( $id, $query = '' ) {\n\n\t\t$key = 'pquery_' . $id;\n\n\t\t$p = wp_cache_get( $key );\n\n\t\tif ( ! $p ) {\n\n\t\t\t$p = get_permalink( $id );\n\n\t\t\t$p .= strpos( $p, '?' ) ? '&' : '?';\n\n\t\t\twp_cache_set( $key, $p );\n\n\t\t}\n\n\t\tif ( is_array( $query ) ) {\n\n\t\t\tforeach ( $query as $name => $value ) {\n\n\t\t\t\t$qstring .= $name . '=' . $value . '&';\n\t\t\t}\n\t\t} else {\n\n\t\t\t$qstring = $query;\n\n\t\t}\n\n\t\treturn $p . $qstring;\n\n\t}\n} // end function exists\n\n\n\nfunction format_cddate( $year, $month, $day, $hours, $minutes ) {\n\n\t$month = (int) $month;\n\n\tif ( $month < 10 ) {\n\n\t\t$month = '0' . $month;\n\t}\n\n\t$day = (int) $day;\n\n\tif ( $day < 10 ) {\n\n\t\t$day = '0' . $day;\n\t}\n\n\treturn $year . '-' . $month . '-' . $day . ' ' . $hours . ':' . $minutes . ':00';\n\n}\n\n\n\nfunction update_rsvpmaker_dates( $post_id, $dates_array, $durations_array, $end_array = array() ) {\n\n\t$current_dates = get_rsvpmaker_meta( $post_id, '_rsvp_dates', false );\n\n\tforeach ( $dates_array as $index => $cddate ) {\n\n\t\t$duration = $durations_array[ $index ];\n\n\t\t$end_time = ( empty( $end_array[ $index ] ) ) ? '' : $end_array[ $index ];\n\n\t\tif ( empty( $current_dates ) ) {\n\n\t\t\t add_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\n\t\t} elseif ( is_array( $current_dates ) ) {\n\n\t\t\tif ( empty( $current_dates[ $index ] ) ) {\n\n\t\t\t\t\tadd_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\n\t\t\t\t\t// rsvpmaker_debug_log(\"$post_id,$cddate,$duration,$end_time\",'add date parameters');\n\n\t\t\t} else {\n\n\t\t\t\tupdate_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\n\t\t\t\t// rsvpmaker_debug_log(\"$post_id,$cddate,$duration,$end_time,$index\".$current_dates[$index],'update date parameters');\n\n\t\t\t}\n\t\t} else {\n\t\t\t add_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\t\t}\n\n\t\t$current_dates[] = $cddate;\n\n\t}\n\n\t$missing = array_diff( $current_dates, $dates_array );\n\n\tif ( ! empty( $missing ) ) {\n\n\t\tforeach ( $missing as $cddate ) {\n\n\t\t\tdelete_rsvpmaker_date( $post_id, $cddate );\n\t\t}\n\t}\n\n}\n\n\n\nfunction delete_rsvpmaker_date( $post_id, $cddate ) {\n\n\tdelete_post_meta( $post_id, '_rsvp_dates', $cddate );\n\n\tdelete_post_meta( $post_id, '_' . $cddate );\n\n\tdelete_transient( 'rsvpmakerdates' );\n\n}\n\n\n\nfunction add_rsvpmaker_date( $post_id, $cddate, $duration = '', $end_time = '', $index = 0 ) {\n\n\t$slug = ( $index == 0 ) ? 'firsttime' : $cddate;\n\n\tadd_post_meta( $post_id, '_rsvp_dates', $cddate );\n\n\tadd_post_meta( $post_id, '_' . $slug, $duration );\n\n\tif ( empty( $end_time ) ) {\n\n\t\t$et = rsvpmaker_strtotime( $cddate . ' +1 hour' );\n\n\t\t$end_time = rsvpmaker_date( 'H:i', $et );\n\n\t}\n\n\tadd_post_meta( $post_id, '_end' . $slug, $end_time );\n\n}\n\n\n\nfunction update_rsvpmaker_date( $post_id, $cddate, $duration = '', $end_time = '', $index = 0 ) {\n\n\t$slug = ( $index == 0 ) ? 'firsttime' : $cddate;\n\n\tupdate_post_meta( $post_id, '_rsvp_dates', $cddate );\n\n\tupdate_post_meta( $post_id, '_' . $slug, $duration );\n\n\tif ( ! empty( $end_time ) ) {\n\n\t\tupdate_post_meta( $post_id, '_end' . $slug, $end_time );\n\t}\n\n\tdelete_transient( 'rsvpmakerdates' );\n\n}\n\n\n\nfunction rsvpmaker_upcoming_data( $atts ) {\n\tglobal $post;\n\n\tglobal $dataloop;\n\n\t$waspost = $post;\n\n\t$dataloop = true; // prevent ui output of More Events link\n\n\t$rsvp_query = rsvpmaker_upcoming_query( $atts );\n\n\t$events = array();\n\n\tif ( $rsvp_query->have_posts() ) {\n\n\t\twhile ( $rsvp_query->have_posts() ) :\n\t\t\t$rsvp_query->the_post();\n\n\t\t\t$events[] = $post;\n\n\t\tendwhile;\n\n\t}\n\n\twp_reset_postdata();\n\n\t$post = $waspost;\n\n\treturn $events;\n\n}\n\n\n\nfunction rsvpmaker_duplicate_dates() {\n\n\tglobal $wpdb;\n\n\t$sql = \"SELECT $wpdb->posts.ID as postID, $wpdb->posts.*, a1.meta_value as datetime, meta_id\n\n\t FROM \" . $wpdb->posts . '\n\n\t JOIN ' . $wpdb->postmeta . ' a1 ON ' . $wpdb->posts . \".ID =a1.post_id AND a1.meta_key='_rsvp_dates'\n\n\t ORDER BY postID, a1.meta_value\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( $results ) {\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$slug = $row->datetime . $row->postID;\n\n\t\t\t$dup = ( empty( $count[ $slug ] ) ) ? false : true;\n\n\t\t\tif ( $dup ) {\n\n\t\t\t\t$wpdb->query( \"DELETE FROM $wpdb->postmeta WHERE meta_id=\" . $row->meta_id );\n\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['clean_duplicate_dates'] ) && isset( $_GET['debug'] ) ) {\n\n\t\t\t\tprintf( '<p>%s<br />%s %s</p>', $row->post_title, $row->datetime, $row->meta_id );\n\t\t\t}\n\n\t\t\t$count[ $slug ]++;\n\n\t\t}\n\t}\n\n\texit();\n\n}\n\n\n\nfunction rsvpmaker_menu_order( $menu_ord ) {\n\n\tif ( ! $menu_ord || ! is_array( $menu_ord ) ) {\n\t\treturn true;\n\t}\n\n\tforeach ( $menu_ord as $menu_item ) {\n\n\t\tif ( $menu_item == 'edit.php?post_type=page' ) {\n\n\t\t\t$neworder[] = 'edit.php?post_type=page';\n\n\t\t\t$neworder[] = 'edit.php?post_type=rsvpmaker';\n\n\t\t\t$neworder[] = 'edit.php?post_type=rsvpemail';\n\n\t\t} elseif ( ( $menu_item == 'edit.php?post_type=rsvpmaker' ) || ( $menu_item == 'edit.php?post_type=rsvpemail' ) ) {\n\n\t\t} else {\n\t\t\t\t$neworder[] = $menu_item;\n\t\t}\n\t}\n\n\treturn $neworder;\n\n}\n\nadd_filter( 'custom_menu_order', 'rsvpmaker_menu_order' ); // Activate custom_menu_order\nadd_filter( 'menu_order', 'rsvpmaker_menu_order' );\n\nfunction rsvpmaker_sc_after_charge( $charge_response ) {\n\n\tglobal $post;\n\n\tif ( $post->post_type != 'rsvpmaker' ) {\n\n\t\treturn;\n\t}\n\n\t$tx_id = $charge_response->id;\n\n\t$charge = $paid = $charge_response->amount / 100;\n\n\tif ( ! isset( $_COOKIE[ 'rsvp_for_' . $post->ID ] ) ) {\n\n\t\techo '<p style=\"color:red;\">Error logging payment to RSVP record</p>';\n\n\t}\n\n\t$rsvp_id = intval($_COOKIE[ 'rsvp_for_' . $post->ID ]);\n\n\tglobal $wpdb;\n\n\tglobal $post;\n\n\t$event = $post->ID;\n\n\tif ( get_post_meta( $event, '_stripe_' . $tx_id, true ) ) {\n\n\t\techo '<p style=\"color:red;\">Payment already recorded</p>';\n\n\t\treturn; // if transaction ID recorded, do not duplicate payment\n\n\t}\n\n\t$paid_amounts = get_post_meta( $event, '_paid_' . $rsvp_id );\n\n\tif ( ! empty( $paid_amounts ) ) {\n\n\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t$paid += $payment;\n\t\t}\n\t}\n\n\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\tadd_post_meta( $event, '_stripe_' . $tx_id, $charge );\n\n\tadd_post_meta( $event, '_paid_' . $rsvp_id, $charge );\n\n\tdelete_post_meta( $event, '_open_invoice_' . $rsvp_id );\n\n\tdelete_post_meta( $event, '_invoice_' . $rsvp_id );\n\n\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$rsvp_id \", ARRAY_A );\n\n\t$message = sprintf( '<p>%s ' . __( 'payment for', 'rsvpmaker' ) . ' %s %s ' . __( ' c/o Stripe transaction', 'rsvpmaker' ) . ' %s<br />' . __( 'Post ID', 'rsvpmaker' ) . ': %s<br />' . __( 'Time', 'rsvpmaker' ) . ': %s</p>', esc_html( $charge ), esc_html( $row['first'] ), esc_html( $row['last'] ), esc_html( $tx_id ), esc_html( $event ), date( 'r' ) );\n\n\tadd_post_meta( $event, '_paypal_log', $message );\n\n}\n\nfunction rsvpmaker_custom_payment( $method, $paid, $rsvp_id, $event, $tx_id = 0 ) {\n\n\tglobal $wpdb;\n\n\t$charge = $paid;\n\n\t$paid_amounts = get_post_meta( $event, '_paid_' . $rsvp_id );\n\n\tif ( ! empty( $paid_amounts ) ) {\n\n\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t$paid += $payment;\n\t\t}\n\t}\n\n\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\tadd_post_meta( $event, '_' . $method . '_' . $tx_id, $charge );\n\n\tadd_post_meta( $event, '_paid_' . $rsvp_id, $charge );\n\n\tdelete_post_meta( $event, '_open_invoice_' . $rsvp_id );\n\n\tdelete_post_meta( $event, '_invoice_' . $rsvp_id );\n\n\t$log = sprintf( '%s amount: %s rsvp_id: %s event: %s, tx: %s', $method, $paid, $rsvp_id, $event, $tx_id = 0 );\n\n\trsvpmaker_debug_log( $log );\n\n}\n\nfunction rsvpmaker_before_post_display_action() {\n\n\tglobal $post;\n\n\tif ( isset( $post->post_type ) && ( $post->post_type == 'rsvpmaker' ) ) {\n\n\t\tdo_action( 'rsvpmaker_before_display' );\n\t}\n\n}\n\nfunction add_rsvpmaker_roles() {\n\n\t$rsvpmakereditor = get_role( 'rsvpmakereditor' );\n\n\tif ( ! $rsvpmakereditor ) {\n\n\t\tadd_role(\n\t\t\t'rsvpmakereditor',\n\t\t\t'RSVPMaker Editor',\n\t\t\tarray(\n\n\t\t\t\t'read'                      => true,\n\n\t\t\t\t'upload_files'              => true,\n\n\t\t\t\t'delete_posts'              => true,\n\n\t\t\t\t'delete_private_posts'      => true,\n\n\t\t\t\t'delete_published_posts'    => true,\n\n\t\t\t\t'edit_posts'                => true,\n\n\t\t\t\t'edit_private_posts'        => true,\n\n\t\t\t\t'edit_published_posts'      => true,\n\n\t\t\t\t'publish_posts'             => true,\n\n\t\t\t\t'delete_others_rsvpmakers'  => true,\n\n\t\t\t\t'delete_rsvpmakers'         => true,\n\n\t\t\t\t'edit_rsvpmakers'           => true,\n\n\t\t\t\t'edit_others_rsvpmakers'    => true,\n\n\t\t\t\t'edit_published_rsvpmakers' => true,\n\n\t\t\t\t'publish_rsvpmakers'        => true,\n\n\t\t\t\t'read_private_rsvpmakers'   => true,\n\n\t\t\t)\n\t\t);\n\t}\n\n}\n\n\nfunction rsvpmaker_wp_editor( $content, $editor_id, $settings = array() ) {\n\tif ( function_exists( 'do_blocks' ) ) { // gutenberg world\n\n\t\tprintf( '<p><textarea rows=\"10\" cols=\"80\" id=\"%s\" name=%s>%s</textarea></p>', esc_attr( $editor_id ), esc_attr( $editor_id ), wp_kses_post( $content ) );\n\n\t} else {\n\t\twp_editor( $content, $editor_id, $settings );\n\t}\n\n}\n\nfunction rsvpmaker_dequeue_script() {\n\n\twp_dequeue_script( 'tiny_mce' );\n\n}\n\n\n\nfunction rsvpautog( $content ) {\n\n\tif ( strpos( $content, '<!-- /wp:paragraph -->' ) ) {\n\n\t\treturn $content; // already coded for gutenberg\n\t}\n\n\t$content = wpautop( $content );\n\n\t$content = str_replace( '</p>', \"</p>\\n<!-- /wp:paragraph -->\\n\", $content );\n\n\t$content = str_replace( '<p>', \"<!-- wp:paragraph -->\\n<p>\", $content );\n\n\treturn $content;\n\n}\n\nfunction rsvpmaker_server_block_render() {\n\n\tif ( wp_is_json_request() ) {\n\n\t\treturn;\n\t}\n\n\tregister_block_type( 'rsvpmaker/event', array( 'render_callback' => 'rsvpmaker_one' ) );\n\n\tregister_block_type( 'rsvpmaker/upcoming', array( 'render_callback' => 'rsvpmaker_upcoming' ) );\n\n\tregister_block_type( 'rsvpmaker/stripecharge', array( 'render_callback' => 'rsvpmaker_stripecharge' ) );\n\n\tregister_block_type( 'rsvpmaker/paypal', array( 'render_callback' => 'rsvpmaker_paypay_button_embed' ) );\n\n\tregister_block_type( 'rsvpmaker/limited', array( 'render_callback' => 'rsvpmaker_limited_time' ) );\n\n\tregister_block_type( 'rsvpmaker/formfield', array( 'render_callback' => 'rsvp_form_text' ) );\n\n\tregister_block_type( 'rsvpmaker/formtextarea', array( 'render_callback' => 'rsvp_form_textarea' ) );\n\n\tregister_block_type( 'rsvpmaker/formselect', array( 'render_callback' => 'rsvp_form_select' ) );\n\n\tregister_block_type( 'rsvpmaker/formradio', array( 'render_callback' => 'rsvp_form_radio' ) );\n\n\tregister_block_type( 'rsvpmaker/formnote', array( 'render_callback' => 'rsvp_form_note' ) );\n\n\tregister_block_type( 'rsvpmaker/guests', array( 'render_callback' => 'rsvp_form_guests' ) );\n\n\tregister_block_type( 'rsvpmaker/stripe-form-wrapper', array( 'render_callback' => 'stripe_form_wrapper' ) );\n\n\tregister_block_type( 'rsvpmaker/eventlisting', array( 'render_callback' => 'rsvpmaker_event_listing' ) );\n\n\tregister_block_type( 'rsvpmaker/rsvpdateblock', array( 'render_callback' => 'rsvpdateblock' ) );\n\n\tregister_block_type( 'rsvpmaker/upcoming-by-json', array( 'render_callback' => 'rsvpjsonlisting' ) );\n\n\tregister_block_type( 'rsvpmaker/embedform', array( 'render_callback' => 'rsvpmaker_form' ) );\n\n\tregister_block_type( 'rsvpmaker/schedule', array( 'render_callback' => 'rsvpmaker_daily_schedule' ) );\n\n\tregister_block_type( 'rsvpmaker/future-rsvp-links', array( 'render_callback' => 'future_rsvp_links' ) );\n\n\tregister_block_type( 'rsvpmaker/submission', array( 'render_callback' => 'rsvpmaker_submission' ) );\n\n\tregister_block_type( 'rsvpmaker/formchimp', array( 'render_callback' => 'rsvpmaker_formchimp' ) );\n\tregister_block_type( 'rsvpmaker/next-events', array( 'render_callback' => 'rsvpmaker_next_rsvps' ) );\n\n}\n"], "fixing_code": ["=== RSVPMaker ===\nContributors: davidfcarr\nDonate: http://www.rsvpmaker.com\nTags: event, calendar, rsvp, custom post type, paypal, stripe, email, mailchimp, gutenberg\nDonate link: http://rsvpmaker.com/\nLicense: GPLv2\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\nRequires PHP: 5.6\nRequires at least: 5.0\nTested up to: 5.9.3\nStable tag: 9.2.6\n\nSchedule events, send invitations, track RSVPs, and collect payment via PayPal or Stripe.\n\n== Description ==\n\nRSVPMaker is an event scheduling and RSVP tracking plugin for WordPress. Use it to:\n\n* Schedule and promote events of all sorts: conferences, classes, seminars, speaking events, parties and weddings are a few common uses.\n* Register attendees, prompting them to enter whatever information you need, including the names of guests.\n* Collect money using PayPal or Stripe.\n* Promote your event on social media and send out email list invitations using the integrations with MailChimp and MailPoet. Can also be used to for email newsletters based on blog posts or event roundups from your website.\n* Create webinars and other online events leveraging free resources like the YouTube Live service.\n* Use the Limited Time Content Gutenberg block -- a wrapper block that can include paragraphs, images, and other content -- to set a start and/or end time for the display of content. Useful for promoting events and limited time pricing on your home page or in the body of a blog post, without looking foolish if you forget to take down those promotions.\n\nhttps://youtu.be/NmwN1T9s44E\n\nRSVPMaker is free and open source, with no upsell to a premium version. The author is available to consult on customizations, but generally useful enhancements are folded back into the core plugin code. RSVPMaker also aims to be developer-friendly, allowing you to build event-centric applications on top of it.\n\nCreating and Managing Events\n\nRSVPMaker events are created and edited just like blog posts in the WordPress editor, with the addition of parameters like event date (so the items can be listed chronologically and displayed on a calendar grid). Supports the Gutenberg editor as well as the classic WordPress editor.\n\nYou can use RSVPMaker for event announcements, or turn on the Collect RSVPs function and set additional options for sending email notifications, customizing confirmation and reminder messages, and setting a price or prices if you will be requesting online payments via PayPal.\n\nRSVP reports can be viewed on the administrator's dashboard or downloaded as spreadsheets.\n\nIf you hold events on a recurring schedule, such as First Monday or Every Friday, you can define a template with the boilerplate details and quickly generate multiple entries that follow that schedule. Individual event posts can still be customized. For example, you might book a series of monthly events for the year and add the names of speakers or agenda details as you go along.\n\nIn addition to being useful for event invitations, the MailChimp integration can be used to generate newsletters incorporating roundups of upcoming events and recent blog posts.\n\n[__RSVPMaker.com__](http://www.rsvpmaker.com/)\n[RSVPMaker on GitHub](https://github.com/davidfcarr/rsvpmaker)\n\nExtensions:\n\n[RSVPMaker for Toastmasters](http://wordpress.org/plugins/rsvpmaker-for-toastmasters) provides meeting management for public speaking and leadership development clubs that are part of Toastmasters International.\n\n[RSVPMaker Volunteer Roles](https://wordpress.org/plugins/rsvpmaker-volunteer-roles/) Sign up people to fill specific roles at an event.\n\n[RSVPMaker Excel](http://wordpress.org/plugins/rsvpmaker-excel) lets you download RSVP reports in Excel for nicer formatting than you get with the CSV output. Uses functions from the [PHPExcel](http://www.phpexcel.net/) library.\n\nTranslations (some may be out of date):\n\nGerman: Markus K\u00f6nig, Bj\u00f6rn Wilkens\n\nDutch: Els van der Zalm\n\nSpanish: Andrew Kurtis, [__WebHostingHub__](http://www.webhostinghub.com/)\n\nPolish: Jaros\u0142aw \u017beli\u0144ski\n\nNorwegian: Thomas Nyb\u00f8\n\nTurkish: G\u00f6ksel U\u00c7AK\n\nThank you!\n\nTranslators please reach out to me if you want an updated POT source file\n\n== Installation ==\n\n1. Upload the entire `rsvpmaker` folder to the `/wp-content/plugins/` directory.\n1. Activate the plugin through the 'Plugins' menu in WordPress.\n1. Visit the RSVPMaker options page to configure default values for RSVP email notifications, etc.\n1. Check that you have set the timezone for your site on the Settings -> General WordPress admin screen\n1. Add the Gutenberg block for the RSVPMaker events listing to a page on your site. For the Classic Editor, see the documentation for shortcodes you can use to create an events listing page, or a list of event headlines for the home page. Use the RSVPMaker widget if you would like to add an events listing to your WordPress sidebar.\n1. OPTIONAL: Depending on your theme, you may want to create a single-rsvpmaker.php template to prevent confusion between the post date and the event date (move the post date display code to the bottom or just remove it). A sample for the Twentyten theme is included with this distribution.\n1. OPTIONAL: To enable online payments for events, obtain the necessary credentials from PayPal or Stripe to enter into RSVPMaker settings.\n\nFor basic usage, you can also have a look at the [plugin homepage](http://www.rsvpmaker.com/).\n\n== Frequently Asked Questions ==\n\n= Where can I get more information about using RSVPMaker? =\n\nFor basic usage, you can also have a look at the [plugin homepage](http://www.rsvpmaker.com/).\n\n== Screenshots ==\n\n1. Example of an event listing with an RSVP Now! button (click to display a customizable form with info you want to collect).\n2. Edit events like WordPress posts, setting date, time, and RSVP options.\n3. Event Options screen allows you to set additional parameters, such as event pricing and RSVP deadlines\n4. Event templates let you schedule multiple events that occur on a regular schedule, projecting future dates and adding them as a batch. You can also track events associated with the template. Individual events can still be customized as needed.\n5. Use the RSVPMaker Upcoming block for Gutenberg or the rsvpmaker_upcoming shortcode to add events listing and/or calendar.\n6. Collect event fees using integrations with PayPal and Stripe.\n7. Use the built-in mailer to send invitations and email newsletters, such as roundups of events. Integrates with MailChimp.\n\n== Credits ==\n\n    RSVPMaker\n    Copyright (C) 2010-2021 David F. Carr\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    See the GNU General Public License at <http://www.gnu.org/licenses/gpl-2.0.html>.\n\t\n\tRSVPMaker also includes code derived from the software development kits for PayPal, \n    Stripe and MailChimp under the license of their creators. Inlining of CSS code in\n    the HTML of email messages provided by the [Emogrifier](https://github.com/MyIntervals/emogrifier) library.\n\n== Changelog ==\n\n= 9.2.5 =\n\n* Fix for issue where transients used to prevent duplicate emails accumulated in the options table\n\n= 9.2.4 =\n\n* Improvement to the convert timezone function, in the context of schedule display.\n\n= 9.2.2 =\n\n* Bug fix, projected time for templates\n\n= 9.2.1 =\n\n* When you activate a full-site editing block theme (or activate RSVPMaker on a site that has it active), the plugin will now create a template based on the single post template tweaked to remove the post date (which can be confusing when emphasized over the event date) and post author fields.\n\n= 9.2 =\n\n* Fixed issues with RSVP Mail utility conflicts with lazy loading of images (not useful for email)\n* Cleaned up email preview display\n* Tweak for compatibility with block-based themes introduced with WordPress 5.9.\n\n= 9.1.9 =\n\n* Fix to CSS for Stripe widgets\n* Ensuring initiation of table that tracks payments\n\n= 9.1.8 =\n\n* Fix problem with templates set to automatically add dates.\n\n= 9.1.7 =\n\n* Making it easier to see if \"Auto add dates\" is active for a template.\n\n= 9.1.6 =\n\n* Added get_rsvpmaker_timestamp utility function\n* Tweak to rsvpmaker_where filter, correcting for timezone\n\n= 9.1.4 =\n\n* Update event row whenever event post is updated\n\n= 9.1.3 =\n\n* Auto add events checkbox for templates in Gutenberg editor\n* Email notification to admin when events are automatically added\n\n= 9.1.1 =\n\n* Form spam countermeasures \n\n= 9.1 =\n\n* Fix for autornew templates\n\n= 9.0.7 =\n\n* Additional checks to sync rsvp_dates meta tag with rsvpmaker_event table\n\n= 9.0.6 =\n\n* Fix RSVPMaker Submission` block for front end (allow anonymous users to submit event draft event posts for approval)\n\n= 9.0.5 =\n\n* Fix to agenda notification templates setup screen.\n\n= 9.0.4 =\n\n* Tweaks to some payment functions\n* rsvpmaker_verify_nonce() for simplified verification of form submissions\n\n= 9.0.3 =\n\n* Simplified date entry for new events, quick event setup screen, front end submission\n\n= 9.0.2 =\n\n* bug fix, consistency check function post titles\n\n= 9.0.1 =\n\n* Selectively copy metadata when applying a template to an existing event\n\n= 8.9.8 =\n\n* More consistency between PayPal and Stripe integrations\n\n= 8.9.4 =\n\n* Fine tune date table routines\n\n= 8.9.3 =\n\n* Check that event timestamps, deadlines are set properly.\n\n= 8.9.2 =\n\n* Test whether PayPal and Stripe keys are valid\n\n= 8.9.1 =\n\n* Updates to PayPal integration\n* Option to show both Stripe and PayPal buttons - toggle on in Stripe block\n* Separate PayPal payment block\n\n= 8.9 =\n\n* Updated translation POT file\n* Updated French translation with content from https://translate.wordpress.org/projects/wp-plugins/rsvpmaker\n\n= 8.8.9 =\n\n* Caching of event attributes using transient\n\n= 8.8.6 =\n\n* Updates to email queue functions\n\n= 8.8.5 =\n\n* Utility for checking database tables added to Cleanup RSVPMaker (under Tools)\n\n= 8.8.3 =\n\n* Simplified email template for group email function.\n\n= 8.8.1 =\n\n* Fix for MailChimp integration\n\n= 8.7.9 =\n\n* Delayed send option for RSVP Mail Utility\n\n* Turkish translation care of G\u00f6ksel U\u00c7AK\n\n= 8.7.4 =\n\n* Security fix\n\n= 8.7.2 =\n\n* Fix to calendar navigation \n\n= 8.7.1 =\n\n* Switched from strftime to wp_date to take advantage of WordPress internationalization functions for dates\n\n= 8.7 =\n\n* Consistency check after event dates are updated\n* Timezone conversion API tweaked to prevent inappropriate display when two region/city zones are effectively same timezone\n\n= 8.6.9 =\n\n* Email reminder to do Create/Update after template update\n\n= 8.6.8 =\n\n* If timezone conversions are active, they're now displayed automatically if the user's timezone is diff from event local time\n* User can switch to display timezones other than ones reported by JavaScript\n\n= 8.6.7 =\n\n* Refinements to timezone adjustment functions\n* Fine tuning rsvpmaker/next-events\n\n= 8.6.5 =\n\n* rsvpmaker/next-events block\n* Tweaks to projected events function (timezone adjustment)\n\n= 8.6.3 =\n\n* When viewing a specific post status like draft or trashed, show all events, not just future.\n\n= 8.6.1 =\n\n* Fix csv export issue\n* Prompt in editor for individual event in series (edit template instead?)\n\n= 8.6 =\n\n* Check post status on autorenew templates\n* Updates to RSVPMaker cleanup tool\n\n= 8.5.8 =\n\n* Using input type=\"time\" on setup form\n\n= 8.5.7 =\n\n* Correct issue with rsvpmaker/schedule block\n\n= 8.5.6 =\n\n* More efficient date and time formatting\n\n= 8.5.5 =\n\n* Better handling of the events database upgrade, particularly for large databases\n* Better fixing of dates with missing enddate.\n\n= 8.5.2 =\n\n* For MailPoet integration, custom:rsvpmaker_youtube shortcode for embedding preview image for a video\n\n= 8.5.1 =\n\n* New API endpoint wp-json/rsvpmaker/v1/events_with_timezone for future events with timezone information\n\n= 8.4.8 =\n\n* Updates to MailPoet and Stripe integration features\n\n= 8.4.5 =\n\n* Improved shortcodes display for MailPoet\n\n= 8.4.4 =\n\n* MailPoet shortcodes widget displayed in the notices header with show/hide toggle\n\n= 8.4.3 =\n\n* Change name space on included MailChimp library to avoid conflicts with other plugins\n\n= 8.4.2 =\n\n* MailPoet integration\n\n= 8.4 =\n\n* Another adjustment to HTML output, specifically for dates and calendar icons at the top of each block.\n* Better way of checking whether rsvpmaker_event table needs to be updated\n\n= 8.3.8 =\n\n* Fix to group email functions.\n\n= 8.3.7 =\n\n* Fix for HTML output error\n\n= 8.3.5 =\n\n* Fixes related to updated custom table for event dates\n\n= 8.3.2 =\n\n* Bot account added to RSVPMailer Utilities\n* Bug fix SQL reference missing $wpdb\n\n= 8.3.1 =\n\n* Tweaks for Toastmasters integration\n* Fixed bug in email template setup\n* Moved server side block registration to rsvpmaker.php (was in gutenberg source folder)\n\n= 8.2.8 =\n\n* Alternative RSVP Forms, such as variant for webinars\n* Restored calendar button on event setup form\n* CSS fix for forms to display correctly with the Twenty Twenty One theme\n\n= 8.2.7 =\n\n* Better cross-browser support for countdown block\n\n= 8.2.6 =\n\n* Tweaked countdown timer block to allow you to use next event (or next event with rsvp on) instead of specifying event ID. Added options for what to display after the countdown expires.\n* Fix for glitch in Quick Edit options for setting event dates.\n\n= 8.2.4 =\n\n* New Countdown Timer block. Can be used within an event or on another page or post where you specify the event you want to count down to.\n* Fix issue with Stripe code and minification\n\n= 8.2.1 =\n\n* Fixing confirmation / reminder links on RSVP Options page\n\n= 8.1.9 =\n\n* New template UI more consistent with datetime UI for new events\n* Fix timezone convert link for email\n* Limit quick edit UI for setting dates to events (not templates or special documents)\n\n= 8.1.8 =\n\n* Multiple event entry screen lets you add blanks for additional events (up to 50).\n* Updated video demo included in readme.txt\n\n= 8.1.7 =\n\n* Further refinements to timezone conversion and new date/time editing UI\n\n= 8.1.6 =\n\n* Bug fix, new template creation\n\n= 8.1.5 =\n\n* Additional validation for dates. Removed reference to JQuery UI datepicker\n\n= 8.1.4 =\n\n* New date setup UI allows you to enter dates in either free text or SQL format\n* Quickly Setup Multiple Event Posts screen also uses this format. Good for setting up a series of events on the same day (for example, sessions within a conference) or on subsequent days.\n\n= 8.1.1 =\n\n* Timezone conversion now applied to blocks and cells in tables with tz-convert class (hyphen not underscore)\n* For tables, use tz-table1, tz-table2, tz-table3 class on table to target 1st, 2nd or 3rd column\n* Gutenberg fix to make rsvpmaker-type taxonomy display properly\n* RSVPMaker Schedule block now allows you to specify that Show in my timezone button should be displayed\n* RSVPMaker Setup screen now allows you to quickly specify a series of events without a template. Enter a few paragraphs of text and edit further later. Event Type and basic parameters can be specified.\n\n= 8.1.0 =\n\n* Show in my timezone button will now convert times in paragaphs, headings, or other blocks tagged with \"tz_convert\"\n* Also applied to cells of a table where the table is tagged with the class \"tz_convert\"\n\n= 8.0.9 =\n\n* Updated way of handling multi-date events, works better with Gutenberg editor and other updated code\n* Updates to iCal export and add to Google for multi-date events\n\n= 8.0.8 =\n\n* Don't run inliner on emails with no html\n\n= 8.0.7 =\n\n* AJAX fix for RSVP Options page\n* Correct end time for iCal calendar items\n\n= 8.0.6 =\n\n* Added timezone / calendar icons back to setup page\n* Option to revert to default confirmation message or default form\n\n= 8.0.5 =\n\n* Fix for white screen issue when creating new events or templates (theme or plugin conflict?)\n\n= 8.0.2 =\n\n* Dropping support for multi-date events. Use templates instead.\n\n= 8.0.1 =\n\n* Workaround for problem with event end time gutenberg component\n* Bug fix for template listings\n\n= 7.9.9 =\n\n* Adding defaults to register_meta\n* Check for empty templates (no schedule set)\n\n= 7.9.7 =\n\n* Bug fix, rsvp link\n\n= 7.9.6 =\n\n* More consistent handling of email placeholder codes, whether in a notification template or the body of the confirmation message.\n\n= 7.9.5 =\n\n* Cleanup of data model for templates\n* Import templates between websites\n\n= 7.9.4 =\n\n* Allow RSVP deadline to extend past start time (if you want to welcome people to register after event starts)\n* Fix error in event pricing code (incorrect sanitization)\n\n= 7.9.3 =\n\n* Fix inappropriate data sanitization on Settings screen\n\n= 7.9.2 =\n\n* Tweaks to Group Email mailing list functions\n\n= 7.9.1 =\n\n* Tweaks to RSVP Report, Stipe payment page, Stripe Report\n\n= 7.9 =\n\n* Correcting error in email template setup\n\n= 7.8.9 =\n\n* Fix error with $email_context global.\n\n= 7.8.8 =\n\n* Fix error in save_post action\n\n= 7.8.4 =\n\n* Fixing plugins_url() syntax to use __FILE__\n\n= 7.8.3 =\n\n* Additional security fixes required by wordpress.org plugin team\n* MailChimp API functions more clearly bundled as an external library https://github.com/DrewM/mailchimp-api\n* Stripe report screen now allows you to fetch records of past transactions, including fees and refunds\n\n= 7.8.2 =\n\n* Fixed issue with email queue initialization\n* Addressed potential SQL injection vulnerability flagged by GitHub\n\n= 7.8.1 =\n\n* Fixed issue with auto-renew from templates formatting dates incorrectly\n* Improved routine for detecting and fixing garbled dates\n\n= 7.8 =\n\n= 7.7.9 =\n\n* Filter events listing by author\n\n= 7.7.8 =\n\n* New import/export function for transferring events between sites.\n* Updated PHPMailer init code in anticipation of WordPress 5.5 change\n\n= 7.7.7 =\n\n* Copy to Email option under New RSVP Email, plus Embed in Email for rsvpmaker events\n\n= 7.7.5 =\n\n* ReCaptcha anti-spam enabled on RSVPMaker Event Submission form (if configured in Settings)\n\n= 7.7.4 =\n\n* Added support for limited rich text editing (bold, italic, and link) with RSVPMaker Event Submission block.\n\n= 7.7.3 =\n\n* RSVPMaker Event Submission block. Adds a form to allow site visitors to submit an event for approval by an editor.\n\n= 7.6.9 =\n\n* Fix for event end times in templates.\n\n= 7.6.8 =\n\n* Tweaks to admin menu options\n* Full screen editing off by default for RSVPMaker and related documents.\n* Option to reset confirmation and reminder messages to default\n\n= 7.6.7 =\n\n* Reminder and follow up messages can be set to go only to those who have paid.\n* Clearer admin bar menu structure for related documents, including confirmations, reminders, and forms, as well as showing those inherited from default and template.\n* Admin bar links are also shown in the Related panel of the RSVPMaker editor sidebar. Links in the Confirmation / Reminder and RSVP Form panels are also more consistent.\n\n= 7.6.6 =\n\n* Fixing a glitch with the auto-renew function for automatically adding event dates based on a template schedule.\n\n= 7.6.5 =\n\n* Refinements for payment confirmation message, RSVPMaker Schedule block for displaying a series of related events.\n\n= 7.6.1 =\n\n* Utility for fixing corrupted dates\n\n= 7.6 =\n\n* Refinements to payment setup screens\n* Created separate payment confirmation message document for details that should only be disclosed after payment, such as the link to a webinar you're charging for.\n\n= 7.5.9 =\n\n* Better detection of duplicate entries\n* Group email uses transactional template\n* Date and time displayed in RSVP form.\n* Future RSVP Links block\n\n= 7.5.8 =\n\n* Tweaks to javascript for changing views on the RSVP Events post listing\n* When other plugins, including my Toastmasters extension, send email, the filter 'rsvpmailer_rule' is called with email address and type of message as arguments. Return 'permit' or 'deny' to determine whether the message will be sent. Supersedes the unsubscribed list. Meant to be a user perference for membership applications.\n\n= 7.5.7 =\n\n* Fix for Future Events / Past Events dropdown on posts listing screen. Previous implementation interfered with standard \"Bulk Actions\" behavior.\n\n= 7.5.4 =\n\n* Fixed error in event template code\n\n= 7.5.3 =\n\n* Fixed error in Gutenberg code.\n\n= 7.5.2 =\n\n* Bug fixes for copying template metadata, rsvpmaker_is_template function\n\n= 7.5.1 =\n\n* Updating POT source file for translators.\n\n= 7.4.9 =\n\n* Complex template schedules like first and third Monday now display properly in Gutenberg editor.\n\n= 7.4.8 =\n\n* Tweaks to the new event setup screen.\n\n= 7.4.5 =\n\n* Limit debug log (if activated) to current day and previous days (delete older files)\n* Clean up WP Cron jobs on plugin deactivate\n\n= 7.4.3 =\n\n* Better support for attachments and embedded images in email shared through the Group Email feature. Still has an issue with messages that have both embedded images and attachments.\n* Polling mailbox and sending messages now handled via WP Cron actions, interval 1 minute (may take longer) \n\n= 7.4.2 =\n\n* Limited support for attachments in Group Email discussion lists.\n\n= 7.4 =\n\n* Email distribution lists for member-oriented sites. Any member with a user can send a message from the email address on their profile (or another whietlisted address) for distribution to other list members. See the Group Email tab under settings.\n\n= 7.3.9 =\n\n* Corrects a couple of issues with copying metadata from templates to individual events (when it's not appropriate).\n\n= 7.3.8 =\n\n* Fix for Stripe payment confirmation message\n\n= 7.3.7 =\n\n* Fix to calendar display (timezone issue)\n* Function to lookup Stripe payments by email\n\n= 7.3.4 =\n\n* Fix to make REST API calls to correct site url\n\n= 7.3.3 =\n\n* Better control over specialized blocks like those for use in the form not being shown in the editor outside of that context.\n* Fix to make the RSVP Mailer module distinguish between sending to all users and users who are members of a specific website in a multisite setup.\n\n= 7.3.2 =\n\n* Wrapping shortcodes and dynamic blocks in test that wp_is_json_request returns false. Was seeing unintended output on document save confusing JSON confirmation message.\n\n= 7.2.6 =\n\n* RSVPMaker Schedule block (also rsvpmaker_daily_schedule shortcode) for displaying an hour by hour schedule of events (for example, for a conference)\n\n= 7.2.5 =\n\n* Make sure Stripe submissions include name and email\n\n= 7.2.2 =\n\n* Fix to calendar display\n\n= 7.2.1 =\n\n* Stripe integration fix, better styling of form.\n\n= 7.1.9 =\n\n* Fixes/updates to blocks for embedding single events or elements of single events (just the button, just the form)\n* Fix to confirmation message option for including the event content with the confirmation.\n\n= 7.1.3 =\n\n* Better compatability with Classic Editor\n* Better guidance on Privacy Page setup.\n\n= 7.1.1 =\n\n* Correcting an error in data validation routine.\n\n= 7.1.0 =\n\n* Neater presentation of the essential options to be set including timezone and the creation of a calendar page.\n* Tweaks to Gutenberg code.\n\n= 7.0.6 =\n\n* Most template schedules can now be set from the Gutenberg editor sidebar. For example, First Monday at 7 pm or Every Wednesday at noon. Exception: More complex schedules (First and Third Monday) still require exiting to the RSVP / Event Options screen.  \n\n= 7.0.5 =\n\n* Single event prices can now be set from Gutenberg editor sidebar. Information about additional options that can be edited in RSVP / Event Options also displayed.\n* Improved display on some themes where RSVPMaker posts are displayed in the default index.php (Archive) template, including Twenty Twenty \n\n= 7.0.1 =\n\n* Updated Stripe support to reflect API that supports newer European regulations for credit card processing (SCA and PSD2).\n* Dropped support, at least for now, for recurring payments (subscriptions) when Stripe is used as a standalone payment button.\n\n= 7.0.0 =\n\n* Fixed error in register_meta function. Updated POT file for translations.\n\n= 6.6.4 =\n\n* Added PHP version check before loading Emogrifier CSS inliner library, which relies on features of PHP 7.1\n\n= 6.6.2 =\n\n* Fix to the option to set relative \"days before\" times for deadline or registration start in the template and have them calculated and copied to individual event posts.\n* Yet more email template tweaks.\n\n= 6.6.1 =\n\n* More email template tweaks\n\n= 6.6.0 =\n\n* Tweaks to email message templating / styling.\n\n= 6.5.8 =\n\n* Improved Email Template editor. New default template for transactional messages.\n* Inlining of CSS code in HTML email documents, based on the [Emogrifier](https://github.com/MyIntervals/emogrifier) library.\n\n= 6.5.6 =\n\n* Tweaks to timing functions.\n\n= 6.5.5 =\n\n* More sidebar improvements. Now divided into panels, with links to confirmation message and RSVP form posts\n\n= 6.5.4 =\n\n* Better Gutenberg sidebar access to setting start and end time and other basic variables. Multi-date events and event pricing still must be handled through RSVP / Event Options screen.\n\n= 6.5.2 =\n\n* More variables can now be edited through the Gutenberg sidebar, rather than the RSVP / Event Options screen.\n\n= 6.5 =\n\n* Event end time now displayed in Gutenberg interface (still have to click through to RSVP / Event Options screen to change)\n* More compact display of admin bar options on front end (shown as submenu under Edit RSVP Event)\n* Portugese translation (thanks to Letrajato)\n\n= 6.4.4 =\n\n* Fix for email unsubscribes\n\n= 6.4.3 =\n\n* Eliminating the use of create_function (deprecated as of PHP 7.2+) in widget definitions\n\n= 6.4.2 =\n\n* Introducing widget and editor block for dynamically loading lists of events from RSVPMaker API endpoints, using JavaScript and JSON. Can be used to fetch event listings from other sites or to perform better in combination with caching solutions.\n\n= 6.4.1 =\n\n* Fix for issue where RSVP Form did not reset properly if the document was deleted.\n\n= 6.4 =\n\n* Fix for scheduled email (featured message)\n* Fix for default options not being applied correctly on event setup (Add New) screen\n* Option to change event post title when adding events from a template\n\n= 6.3.9 =\n\n* Updated support for PayPal (newer REST API) [blog post](https://rsvpmaker.com/blog/2019/09/09/paypal-rest/)\n\n= 6.3.8 =\n\n* UI tweaks to make it more obvious how to create an event based on a template.\n* Fix for an intermittent glitch that prevented Gutenberg from displaying the proper error message after saving an event post.\n\n= 6.3.7 =\n\n* Adding RSVPMaker Dateblock block - changes placement of date/time block. Same as rsvpdateblock shortcode\n* Adding Placeholder block. Add a note that only appears in the editor, not on the front end. Example: \"event description goes here\" text for an event template.\n\n= 6.3.6 =\n\n* In a template, option to set deadline and registration start as x days before rather than a specific date\n* When adding event posts from a template, you now have the option to add them as drafts rather than published posts\n* Tweak to function that allows you to jump ahead to a specific date\n\n= 6.3.4 =\n\n* rsvpdateblock shortcode can be inserted in the body of a post, altering where the date and time information appears.\n* Fix to preserve event end time from template to screen for creating an individual event.\n* Additional span elements wrapped around the time display within datetime block. CSS can be used to change display of span.time or span.end_time\n\n= 6.3.4 =\n\n* Fixes to event_listing shortcode\n* Addition of an RSVPMaker event listing Gutenberg block. For showing a listing of just headlines, dates and links to upcoming events.\n\n= 6.3.1 =\n\n* Corrected an issue with editing of the RSVP form. Under some circumstances, WordPress would strip HTML form field tags from the Gutenberg blocks, so now those are formatted on the server.\n* Added Stripe Form Wrapper Gutenberg component. Can be used for simple order forms for payments independent of the RSVP Form.\n\n= 6.2.6 =\n\n* Changed how event end times are set, more consistent with how other calendaring programs do it.\n\n= 6.2.5 =\n\n* If timezone is not set, suggest one based on JavaScript detection of the user's timezone. Uses https://github.com/iansinnott/jstz\n* Bug fix related to multi-day events.\n\n= 6.2.4 =\n\n* Updated German translation files, thanks to Markus K\u00f6nig\n\n= 6.2.3 =\n\n* Fixing a glitch that caused duplicate posts to be created when a template is set to automatically generate new events according to the template schedule.\n* Fixed the function for loading blog posts into the RSVP Email editor.\n\n= 6.2.2 =\n\n* Tweaks to the scheduled email function. You can now schedule broadcasts relative to the date of the event or for an arbitrary date and time.\n\n= 6.2.1 =\n\n* Fixes for broken features: links to edit confirmation message, adding RSVP records on the back end (from RSVP Report)\n\n= 6.1.9 =\n\n* Change start time based on template\n* Series of updates in 6.1.6-8 related to confirmation / reminder messages\n* Bug fix for stripe charges in currencies other than usd\n\n= 6.1.5 =\n\n* Prevent WordPress from filtering out form tags in and RSVPMaker form posts (was happening for non-admins in Gutenberg version)\n* Make standard RSVPMaker Upcoming block / shortcode work in email.\n\n= 6.1.4 =\n\n* UX changes. Tweaks to admin bar menu, other navigation labels / methods.\n* Fix for date / time display on new events (using defaults from settings screen, not defaulting to midnight)\n* Fix to the mailer utility, import of an event listing or blog post (body content wasn't being imported correctly)\n\n= 6.1.1 =\n\n* RSVPMaker Setup screen now gives more context on previously published events and works for adding a single event based on a template.\n* Notice after template is saved (in Gutenberg) now gives 2 options: New Event from template or Create / Update events.\n\n= 6.1.0 =\n\n* Trying to fix an issue with confirmation messages / payment buttons not showing up for logged in users.\n* Assigning slug to new draft posts.\n\n= 6.0.7 =\n\nBackwards compatibility for sites not running Gutenberg, specifically for confirmation messages.\n\n= 6.0.6 =\n\n* Important bug fix. Options screen was not working properly\n\n= 6.0.5 =\n\n* Added Edit / Customize RSVP Form to admin bar, where relevant\n* More bug fixes (also 6.0.1 to 6.0.4)\n\n= 6.0 =\n\n* New RSVP form, customizable using the Gutenberg editor.\n* Further refinements to setup for confirmation / reminder messages and navigation back to parent post.\n* RSVP reports can now be run on past events that have been deleted as posts. Event titles and dates are tracked in a separate custom DB table.\n* RSVPMaker Cleanup utility added under tools to make it easier to delete old events.\n\n= 5.9.9 =\n\n* Caching of date lookups to improve performance\n* Fix to author archive lookup query setting (to show events as well as blog posts)\n\n= 5.9.7 =\n\n* Tweaked data model for relationship between confirmation / reminder messages and their parent posts.\n* Updated the Event Templates screen, particularly the features for applying a template to an existing event and for creating a template based on an existing event.\n\n= 5.9.6 =\n\n* Fix for DB performance issues\n* Updates to event reminder messages functions\n\n= 5.9.5 =\n\n* More template options shown on Event Setup screen. Trying to make the choice between creating an individual event and using a template clearer from the user interface.\n* Excluding templates and special documents (such as confirmation messages) from search.\n\n= 5.9.4 =\n\n* Yet a better implementation of the custom Gutenberg notification for RSVPMaker templates (no longer displayed more than once if user saves template again)\n* Bug fix related to date display in email newsletter output.\n\n= 5.9.2 =\n\n* Better implementation of the custom Gutenberg notification for RSVPMaker templates.\n\n= 5.9.1 =\n\n* Notice on Gutenberg editing screen prompting user editing template to create / update individual events\n* Tweak to shortcodes such as rsvpmaker_next\n\n= 5.8.9 =\n\n* Tweaks to Event Options screen, routine for automatically adding a Calendar page (uses block format for WordPress 5.0)\n\n= 5.8.8 =\n\n* After registration, form is no longer displayed on the confirmation page unless the user clicks Update RSVP link (removes a source of confusion)\n* Adding API endpoints /wp-json/rsvpmaker/v1/future /wp-json/rsvpmaker/v1/types /wp-json/rsvpmaker/vi/type/slug-goes-here\n* Fixed display of event types in RSVPMaker Upcoming Events block\n\n= 5.8.6 =\n\n* Fix to coupon codes\n* Multiple Admissions option for pricing (Example: reserving a table of 6, rather than counting host/guests individually)\n\n= 5.8.5 =\n\n* Limited Time Content block now allows you to set expired content to automatically be deleted from a post. By default, expired content is hidden (you can go back and change it or remove it manually). If you have WordPress set to save revisions, deleted content will be preserved as part of a past revision.\n\n= 5.8.4 =\n\n* Support for coupon codes (discount pricing for events)\n* Option to send a payment reminders. If someone registers but does not pay, they will get an email reminder after 30 minutes.\n\n= 5.8.3 =\n\n* Added the Limited Time Content block (a wrapper for content with a start time and/or end time specified for how long it should be displayed)\n\n= 5.8.2 =\n\nImprovements to the Stripe payment functions\n\n= 5.8 =\n\n* Update Template Based on Event option added to admin bar - adjust template based on changes to the latest event in a series, rather than the other way around.\n* If an event is based on a template, Edit Template appears under the main Edit link on the admin bar.\n* Added action - do_action('rsvpmaker_stripe_payment',$vars) - other plugins can detect when a successful Stripe online payment transaction is logged.\n\n= 5.7.9 =\n\n* Native support for Stripe online payments (previously supported through an integration with WP Simple Pay)\n* Stripe Charge block for Gutenberg for processing other sorts of charges, such as dues payments or consulting fees, in addition to event payments.\n\n= 5.7.6 =\n\n* Fix for some issues with items being added twice.\n* RSVP On radio buttons now displayed in Gutenberg sidebar.\n\n= 5.7.5 =\n\n* Bug fix, positioning of navigation links at top and/or bottom of calendar.\n\n= 5.7.4 =\n\n* The guest blanks at the bottom of the RSVP form can now be changed to use another label other than \"Guest\" and alter the text of the \"Add to guests\" link. This is not supported by the visual form builder, but you can alter the rsvpguests shortcode with attributes such as [rsvpguests label=\"Athlete\" addmore=\"Add more athletes\"]\n* Send RSVP Email link in admin bar and editor listing for posts and RSVPMaker events.\n\n= 5.7.2 =\n\n* Option to make all notification emails come from the same address (reply to header can be different) to avoid issues with spam filters flagging messages as \"spoofed.\"\n* Code cleanup. Most action calls moved to a separate file. Utilities such as lookups of past and future events moved to rsvpmaker-util.php.\n\n= 5.7.0 =\n\n* WordPress 5.0 / Gutenberg tweaks\n\n= 5.6.8 =\n\n* If you set up reminders associated with an event template, as opposed to an individual event, RSVPMaker will now automatically create a reminders for the next scheduled event in the series and add WordPress cron events for the specified number of hours ahead.\n\n= 5.6.6 =\n\n* Fix for recording units and price when multiple prices offered (for example, adult versus child tickets)\n\n= 5.6.5 =\n\n* Adjusting for a breaking change in the latest Gutenberg release (getSettings function removed from the date component)\n\n= 5.6.4 =\n\n* Fix for potential SQL injection security issue\n\n= 5.6.3 =\n\n* Tested for WordPress 5.0 / Gutenberg\n* Fixed bug with scheduled email broadcasts (featured post for blog roundups)\n* Fixed bug with calendar navigation display of current month\n* Option to set different timezone for individual event\n\n= 5.6.2 =\n\n* Option to limit the size of the export file. You can now also include pages, posts and other WordPress content, in addition to RSVPMaker events.\n\n= 5.6.1 =\n\n* Export RSVPMaker screen added under Tools, plus action hook to clean up imported RSVPMaker event posts.\n\n= 5.5.7 =\n\n* Add Email Options / fix Send Invites links to RSVP Events listing\n* Tweaked the basic form builder for the RSVP form to allow you to set max guests per party\n\n= 5.5.6 =\n\nFix to feature for adding an editor's note to a scheduled email.\n\n= 5.5.5 =\n\nFix for RSVP count display.\n\n= 5.5.1 =\n\n* Fixes to make RSVPMaker \"special\" pages (landing pages, locations) work with Gutenberg turned on.\n* RSVPMaker count of people signed up loaded into event listing via AJAX (prevents issues with caching)\n\n= 5.5 =\n\nRestoring saved locations feature for use with the Classic Editor. Gutenberg version to follow.\n\n= 5.4.9 =\n\n* Eliminating reload of page when event date/time is edited in the Gutenberg sidebar. Most other date / RSVP options set on a separate page ... at least until I can get features working more reliably on Javascript powered screens.\n\n= 5.4.7 =\n\n* Fix for proper multipart alternative coding on HTML email.\n\n= 5.4.6 =\n\n* Limiting output of JS/CSS for admin screens to screens specific to RSVPMaker as a way of avoiding conflicts with other plugins.\n\n= 5.4.2 =\n\n* Further improvements to Gutenberg support. Event Options and RSVP Mailer scheduled email options broken out onto separate screens. Only essential event setting options shown in the Gutenberg editor.\n\n= 5.4.1 =\n\n* Refinements to RSVPMaker support for the Gutenberg editor.\n* RSVP Mailer tool now also works with Gutenberg.\n\n= 5.4 =\n\n* With Gutenberg enabled for RSVPMaker event posts, the meta box at the bottom of the page goes away (because it tends to cause compatability issues) and basic date setting options are instead shown on the sidebar. You can click through to a separate screen for more detailed options, such as customizing the RSVP form or setting event prices. Option to use Gutenberg with RSVPMaker posts is still turned off by default, even if you have the Gutenberg plugin installed or are on WordPress 5.0.\n\n= 5.3.9 =\n\n* To improve compatability with Gutenberg, moved RSVPMaker event registration options from the meta box at the bottom of each event post to a separate screen.\n* Improved sort options for the RSVP Events listing in admin.\n\n= 5.3.7 =\n\n* Adding a Gutenberg-compatible prompt to \"Create/update events from template\" to be displayed when a post is updated, linking to the template projected dates page. The old code for immediately displaying checkboxes for updating future events no longer works because it relied on features of the classic WordPress editor.\n* Added links to the Gutenberg document status section of the sidebar that make it easier to navigate to the Event Options panel (for setting dates, RSVP options), from an event to the template it is based on, or from a template to the projected dates screen.\n* Fixed Event Types (RSVPMaker equivalent of post Categories taxonomy) to be displayed in Gutenberg\n\n= 5.3.4 =\n\n* Preliminary support for Gutenberg, the new WordPress editor, with blocks for inserting events listings: RSVPMaker Upcoming Events for display of an events listing and/or calendar and RSVPMaker Event Embed for inserting a single event (for example in a blog post or a landing page).\n* Checkbox on the RSVPMaker settings page for enabling the Gutenberg editor for composing new RSVPMaker posts.\n\n= 5.3.1 =\n\n* Option to add a privacy consent checkbox to your RSVP forms (recommended for GDPR compliance)\n\n= 5.3 =\n\n* Integration with the new Export Personal Data and Erase Personal Data tools WordPress 4.9.6 added to simplify compliance with privacy regulations such as the EU's General Data Protection Regulation (GDPR)\n\n= 5.2.1 =\n\n* Calendar view now shows events from earlier in the month. In the default styling, past dates are shown with a gray background - to override, change styling for #cpcalendar td.past\n* Unsubscribed emails list now allows you to remove email addresses from the unsubscribed list.\n\n= 5.1.8 =\n\n* Added a server-side check on RSVPs exceeding the maximum count allowed (helps counter some form spam issues)\n\n= 5.1.7 =\n\n* Added setting for RSVP form title\n* Bug fix related to limited time pricing (\"early bird\" scenario)\n\n= 5.1.6 =\n\n* Tweak to tabbed js and css for settings screen.\n\n= 5.1.4 =\n\n* Apply Template / Switch Template options added on editing screen. Makes it easier to apply a new template to the current post.\n\n= 5.1 =\n\n* Save locations and add saved locations to an event post\n* Duplicate reminders for all events associated with a given template\n\n= 5.0 =\n\n* Better / more consistent formatting for Show in My Timezone\n* Tested for WordPress 4.9\n\n= 4.9.8 =\n\n* Adding support for post_type attribute in rsvpmaker_timed shortcode\n\n= 4.9.7 =\n\n* bug fix for rsvpmaker_next shortcode\n* check to make sure function exists before calling rsvpmaker_recaptcha_output (not loaded for older PHP versions)\n\n= 4.9.5 =\n\n* Updates to the rsvpmaker_timed shortcode, including the addition of a post_id attribute (post_id=\"123\" will insert headline and body of the post with the ID 123). You can also include a style attribute for CSS wrapper code such as a border, padding, and background color for the block. If no post_id is specified, the output will be all the content from the start tag to the end tag. With a post_id, no end tag is required. Include the attributes start and/or end to specify a start or end time for the display of a post, for example start=\"2017-11-01 07:00\" end=\"2017-12-31 23:00\" or start=\"November 1, 2017\" end=\"December 31, 2017 11 pm\"\n* The style attribute now also works with the rsvpmaker_one shortcode. Fixed it so you can specify something like [rsvpmaker_one post_id=\"next\" one_format=\"compact\"] and the one_format attribute will be respected. (In the last release, specifying \"next\" instead of a number would always output the full post).\n\n= 4.9.4 =\n\n* Fixes to RSVP Mailer functions for setting up email design templates, pulling content from the blog or calendar.\n\n= 4.9.3 =\n\n* Better organization of the RSVPMaker settings screen, divided into tabs\n\n= 4.9.2 =\n\n* Option to have RSVPMaker calculate event fees, even if you haven't set up an online payment service. This \"Cash or Custom\" option also allows you to add a custom payment gateway.\n* Added hook for custom payment methods, 'rsvpmaker_cash_or_custom' action [documentation](https://rsvpmaker.com/blog/2017/10/18/custom-payment-gateway/)\n\n= 4.9.1 =\n\n* Changed the way the \"additional editors\" function works, if activated in settings. This allows users with authoring but not editing rights to share the right to edit an RSVPMaker event or all the events based on a particular template. To make this work more reliably, the author ID # on the post is now changed when another authorized user (designated by the original author) updates the post.\n* Events embedded in a post or page using the rsvpmaker_one shortcode can now be set to automatically stop displaying when the event date is past.\n* Added new RSVP Mailer options for sending to all past event attendees or all who registered within a specified timeframe.\n\n= 4.9 =\n\n* Test for PHP version before loading code that requires namespace support (introduced in PHP 5.3). Required for ReCaptcha library.\n\n= 4.8.9 =\n\n* Added embed_dateblock shortcode\n* Bug fix, properly removing calendar sql filter\n* Bug fix, css for admin screens\n\n= 4.8.8 =\n\n* Event templates can now be set to let RSVPMaker automatically add dates to the end of the specified schedule\n* Fixed a bug with the recording of timeslot signups (often used to enroll volunteers for specific shifts)\n\n= 4.8.7 =\n\n* Adding support for Google ReCaptcha by incorporating Google's PHP library\n\n= 4.8 =\n\n* Never show \"0 signed up so far\" (start at 1)\n* Checkbox for pages to supress the display of page menu on the front end. Intended as a simple way of turning a full width page template into a landing page, reducing temptation for visitors to click away rather than completing a call to action such as registering for an event embedded in the page.\n\n= 4.7.9 =\n\n* Changed defaults, such as number of days listed on calendar page, to match most common usage.\n* Added a button for inserting a single event on a page, covering variations to show full event with button or form, form only, or button only. Useful for building landing pages promoting one or more events.\n\n= 4.7.8 =\n\n* Fix for email lookup on multisite\n\n= 4.7.7 =\n\n* Fixed lookup of contact info based on email. Also checks for prior rsvps for the current event.\n\n= 4.7.6 =\n\n* Fixing bug in the tracking of \"private data on file\"\n\n= 4.7.5 =\n\n* Try to minimize duplicate RSVPs by searching RSVP list by email address, as the user is typing their email address into the form. On match, they are prompted to update their existing registration rather than adding a new one.\n* Option to turn off email confirmations\n\n= 4.7.4 =\n\n* Factoring out anonymous function call (fails on older versions of PHP)\n\n= 4.7.3 =\n\n* Fix for bug overwriting $_GET[\"page\"] on admin screens\n\n= 4.7.2 =\n\n* Improvements to clone event / create template from event functions\n* Fix to prevent other plugins from modifying the mce editor on reminders editor page\n\n= 4.7.1 =\n\n* Fix to rsvpmaker_upcoming display so doesn't show \"No events listed\" when future events out of date range\n* Meeting durations of 10-55 minutes now supported in dropdown; 15 minute increments after 1 hour\n\n= 4.7 =\n\n* Fix conflict with Jetpack\n\n= 4.6.9 =\n\n* Cleanup of utility functions.\n\n= 4.6.8 =\n\n* RSVP form fields can now be set to appear only on the guest form, not on the main RSVP form. Previously, all fields appeared on the main form and only displaying them on the guest form was optional.\n\n= 4.6.7 =\n\nTweaks for compatibility with PHP 7\n\n= 4.6.4 =\n\n* Notification Templates screen, which appears under RSVP Mailer on the admin dashboard, lets you customize notification and confirmation messages and the information to be included in them. For example, if you want to use the word Registration rather than RSVP in your subject line, or remove the Update RSVP button from confirmation messages, you can now do so.\n* Tagged a few front-end translation strings that had been missed previously.\n\n= 4.6.3 =\n\n* RSVP Report now lets you see details for multiple upcoming or recent events\n\n= 4.6 =\n\n* Tweak to More Events link\n\n= 4.5.9 =\n\n* Improved navigation for archive pages.\n\n= 4.5.6 =\n\n* Fix for volunteer slots signups.\n\n= 4.5.5 =\n\n* New action 'rsvp_recorded' passes and array that you can log or process with your own add_action hook\n* Bug fix for changing time format\n\n= 4.5.2 =\n\n* Support for creating a webinar landing page for something other than YouTube Live.\n* Added filter for data copied from template to individual posts during updates.\n\n= 4.5.1 =\n\n* Fix for copying metadata from template, plus another random bug\n\n= 4.4.9 =\n\n* Fix for UTF-8 encoding of non-English characters in strftime output\n\n= 4.4.8 =\n\n* Fix for event_listing shortcode\n* Tweaks to get_future_events and get_past_events functions\n\n= 4.4.7 =\n\n* Change coding for date display to work in other locales (PHP strftime instead of date)\n\n= 4.4.6 =\n\n* Integration with WP Simple Pay Lite for Stripe (should also work with Pro version), making Stripe payment service an alternative to PayPal. Requires that your site (or at least the event page) be secured via SSL\n* Fix to numbering for guest blanks\n\n= 4.4.4 =\n\nTweaks to the system for scheduled reminder / follow up messages. Plus some overdue code cleanup.\n\n= 4.4.1 =\n\nAdded option to show timezone conversion. Uses JavaScript to convert from UTC time to local time, according to the settings on the user's computer. Useful for online events such as webinars with a worldwide audience.\n\n= 4.3.9 =\n\n* Updated system for managing YouTube Live webinars through RSVPMaker, now automatically generates model landing page plus confirmation, reminder, and follow up messages that you can use as a starting point. When you view an event or a landing page in the editor, navigation links make it easier to navigate between the two, or to the related confirmation and reminder messages.\n* Confirmation and reminder messages are now displayed in the RSVPMailer email template. If you have several templates, you can designate which one should be used for these transactional messages.\n* Registration can be required to view the landing page containing the YouTube Live player. If people register to watch a replay, they will get whatever series of follow up messages you created for the original event. So if a follow up message was supposed to go out two hours after the live event, replay viewers will get that message two hours after watching the replay.\n* \\[ylchat\\] shortcode now automatically stops outputting the iframe for the YouTube Live chat associated with the video feed when it is no longer available after the program. This prevents people from seeing what looks like an error if they view the replay. Now instead of supporting an attribute asking for the time when the feed should be deactivated, the only supported attribute is a note field for a message to be displayed over the chat box. Example: \\[ylchat note=\"Enter your questions below\"\\]\n\n= 4.3.8 =\n\n* Styling tweaks to avoid conflicts with Twentyseventeen (and probably other themes)\n* New shortcode: \\[rsvpmaker_one post_id=\"10\"\\] displays a single event post with ID 10. Shows the complete form unless the attribute showbutton=\"1\" is set\n* New shortcode: \\[rsvpmaker_form post_id=\"10\"\\] displays just the form associated with an event (ID 10 in this example. Could be useful for embedding the form in a landing page that describes the event but where you do not want to include the full event content.\n\n= 4.3.7 =\n\nYouTube Live webinar setup help on reminders page\n\n= 4.3.5 =\n\nTweak to PayPal code\n\n= 4.3.4 =\n\nTweak to localization/translation code.\n\n= 4.3.3 =\n\nNotification to make sure timezone is set properly.\n\n= 4.3.2 =\n\n* Improved event post previews on Facebook by adding event date to the end of the title. RSPMaker now outputs its own og:title Facebook Open Graph metadata (on by default, but can be turned off in settings if this interferes with other SEO plugins).\n* New shortcode, \\[rsvpmaker_next\\], displays just the next scheduled event. If the type attribute is set, that becomes the next event of that type. Example: \\[rsvpmaker_next type=\"webinar\"\\]. Also, this displays the complete form rather than the RSVP Now! button unless showbutton=\"1\" is set.\n* When embedding a YouTube Live stream in a page or post of your WordPress site, you can use the shortcode \\[ylchat\\] to embed the associated comment stream (which can be used to take questions from the audience). This extracts the video ID from the YouTube link included in the page and constructs the iframe for the chat window, according to Google's specifications. You can add attributes for width and height to override the default values (100% wide x 200 pixels tall). To make the comments box stop displaying after the end time for the webinar, use the attribute until as in \\[ylchat until=\"January 30, 2017 8 pm\"\\] or \\[ylchat until=\"2017-01-30 20:00:00\"\\]\n\n= 4.3 =\n\nMade sure all metadata, including pricing, is copied from event templates to individual events.\n\n= 4.2.8 =\n\nFixes to captcha, date encoding in post slug\n\n= 4.2.7 =\n\n* Option for RSVP attendees to cancel when RSVPs are closed (max attendees threshhold met)\n* Number of guests added limited according to max attendees setting\n\n= 4.2.5 =\n\n* Tracking of email unsubscribes for local email broadcasts (to members and event attendees). Will also unsubscribe email address from the default MailChimp list, if set.\n\n= 4.2.4 =\n\n* Option to have calendar grid display week starting on Monday rather than Sunday (add attribute weekstart=\"Monday\" to rsvpmaker_upcoming or rsvpmaker_calendar shortcodes)\n* Tweaks to mailer. For email to website members or event attendees, default is now to use from email of logged in user rather than email address specified for use with MailChimp.\n\n= 4.2.3 =\n\n* Improvements to RSVP form builder. Better round trip handling of additional fields added.\n* Bug fix to code the encodes date into permalink.\n\n= 4.2 =\n\n* RSVPMaker Events widget can now be set to only show events of a specific type (event types are a taxonomy similar to post categories). Example: only show events of the type Featured, rather than all upcoming events.\n* New RSVPMaker Events By Type widget shows a listing of the types you have established, with a count of the upcoming events for each.\n\n= 4.1.8 =\n\nUpdate for better compatibility with SMTP plugins and the SendGrid plugin.\n\n= 4.1.7 =\n\nAdding JQuery datepicker calendar widget (longtime wishlist item, finally got it working)\n\n= 4.1.6 =\n\n* Added rich text editor for Editor's Note on scheduled email broadcasts.\n* Fixes to content import for email broadcasts and iCal appointment reminder.\n\n= 4.1.5 =\n\n* Code updated for translation\n* Mailer now provides an equivalent of the WordPress YouTube embed (displays the YouTube preview image for a video with a link to the YouTube address for that content)\n* Bug fixes to mailer function\n\n= 4.1.4 =\n\n* Additional options for scheduled email.\n* Set a condition that has to be met for the message to be sent (example: roundup of events shouldn't be sent if there are currently no future events listed).\n* Making it easier to see which posts have scheduled broadcasts and for what time.\n\n= 4.1.3 =\n\n* More options for adding an Editors Note to a scheduled email newsletter (can be based on an excerpt from a sselected blog post).\n* Option to send a preview version of a scheduled email 1 to 24 hours prior to the scheduled broadcast time.\n\n= 4.0 =\n\n* Addition of mailer for invitations and other messages, with support for MailChimp lists.\n* Mailer includes the ability to schedule emails or establish newsletters that will be sent on a recurring schedule, such as a roundup of events from the calendar to be sent weekly.\n\n= 3.9.9 =\n\nFix for duplicate dates appearing on posts after upgrading.\n\n= 3.9.8 =\n\n* Fixed the archive feed for the rsvpmaker post type to sort by date order. So a url like rsvpmaker.com/rsvpmaker/ now works for showing an event listing. You can also get an RSS feed of your events at rsvpmaker.com/rsvpmaker/feed/\n* Event Types set in the editor are now displayed like categories on a blog post, and clicking on them will take you to a feed for that event type. Example: http://rsvpmaker.com/blog/rsvpmaker-type/featured/\n* Added shortcode for displaying the RSVP Report publicly on the website. Tag: rsvp_report_shortcode, accepts one attribute, public=\"1\" or public=\"0\" with the default being public=\"0\" (login required)\n* Settings page for RSVPMaker now allows you to specify one of the page templates included with your theme that should be used for single event posts. If you have a custom theme, you can create a single-rsvpmaker.php template specifically for events. But if you're working with a free or purchased theme, you may find that it includes a full-width page template or other variation that works better than the one that would be used by default.\n\n= 3.9.7 =\n\nBetter functionality for membership websites, where the people entering RSVPs have user accounts and log in prior to responding.\n* The system will now automatically look up any previous RSVPs associated with the same account (which for unauthenticated users only happens if they click the update link in a confirmation email).\n* Form fields will be filled in based on user metadata, provided that the form field names match the usermeta fields. Example: a membership site records the user's mobile number as mobile_phone, so the form field for Mobile Phone will be filled in automatically on the RSVP form - [See blog post](http://rsvpmaker.com/blog/2016/06/20/using-rsvpmaker-on-membership-websites/)\n\n= 3.9.6 =\n\nBug fix - delete guests\n\n= 3.9.4 =\n\n* Restoring iCal attachments on RSVP confirmation emails. This was included in a previous release but removed because of a problem with Microsoft Outlook compatibility - now fixed.\n* Updated coding for translation - all display strings should now be coded to allow for translation.\n\n= 3.9 =\n\nSignificant change to the event data model. By storing dates as post metadata, this release eliminates the dependency on the custom database table previously used for event dates. One advantage: content will be easier to move between websites using standard WordPress import/export routines.\n\n= 3.8.1 =\n\nBug fix: timezone display\n\n= 3.8 =\n\nConditional display of form options depending on pricing (whether the user is paying for the lunch as well as the workshop)\n\n= 3.7.5 =\n\nTime limits on prices for online payments. Example: \"early bird\" pricing for conference registration, where after the deadline pricing goes up.\n\n= 3.7.4 =\n\n* Attendees who update an RSVP for which they previously recorded a payment are now prompted to pay any difference (for additional guests or a change in pricing options)\n* The RSVP Report screen now lets an administrator update attendee records or record a payment (for example, if a payment was received offline rather than through PayPal). Payments recorded by an administrator are logged on the 'PayPal log' with the username of the user who recorded them.\n\n= 3.7 =\n\n* Overhaul of PayPal payment functionality, including easier setup\n* Better handling of guest registration, including the ability to prompt guests for data such as meal choices\n\n= 3.6.4 =\n\n* German translation, courtesy of Bj\u00f6rn Wilkens\n* Update of PO Edit POT catalog for translations\n* Warning message to make it easier to see when updating events based on a new event template might overwrite customizations\n\n= 3.6.3 =\n\nAdded checkbox option for whether to include the content of an event listing in the RSVP confirmation and reminder messages.\n\n= 3.6.2 =\n\nAdds the rsvpmaker_timed shortcode, which can be wrapped around any bit of content in a page or a post that should only be displayed after a given time, until a given time, or between a start and end time. The shortcode attributes are start, end, too_early, and too_late. Put a plain language date like 'January 1, 2016 7 pm' in the start and/or end fields, or use a database style date like '2016-01-20 19:00' and RSVPMaker will test the current time against those rules. If the viewer is coming too the site too early or too late, according to those rules, the shortcode will return either an empty string or the contents of the too_early / too_late parameters, if set. Otherwise, the content will be returned as it normally would be.\n\nExample:\n\n[rsvpmaker_timed start=\"January 1, 2016\" end=\"January 30, 2016 11:59 pm\" too_early=\"sorry, too early\" too_late=\"sorry, too late\" ]\n\nSpecial offer details here\n\n[/rsvpmaker_timed]\n\n= 3.6 =\n\n* CSS changes aimed at more consistent formatting of the form across themes.\n* RSVP Reminders function will now let you create and edit follow up email messages to attendees for events from the past week.\n\n= 3.5.9 =\n\nCreate a template based on an existing event, or clone an event (copy content to a new title for a new date).\n\n= 3.5.8 =\n\nGot drop-down lists for future events, event types working in calendar popup\n\n= 3.5.7 =\n\n* Placeholder image and popup user interface for the calendar now provided for the WordPress rich text editor. This allows a site editor to insert or update an events listing with optional calendar display, without the need to work directly with the rsvpmaker_upcoming shortcode and its parameters.\n* Popup editor also provided for setup of the RSVPMaker form. You can still edit or enhance the HTML/shortcodes directly, but this should make it easier to get the coding right (particularly when you don't want to do anything more elaborate than add an additional field.\n\n= 3.5.6 =\n\n* You can now download to CSV for basic spreadsheets without the need to install the additional RSVPMaker Excel plugin.\n* Removing iCal attachments from confirmation and reminder messages for now. Ran into some problems with Microsoft Outlook that will take time to debug.\n\n= 3.5.4 =\n\nConfirmation and reminder messages now include an iCal attachment, making it easier for recipients to add the event to their own appointment calendars.\n\n= 3.5 =\n\n* [Support for Google Hangouts on Air](http://rsvpmaker.com/hangouts), the free video broadcast service, makes it possible to organize webinars on a budget using RSVPMaker.\n* Overhaul of the system for creating and sending email confirmation messages and scheduled reminders.\n\n= 3.4.4 =\n\nFixing bug in RSVP Report.\n\n= 3.3.8, 3.3.9 =\n\nRevisiting fix to widget code. Not as fixed as I thought.\n\n= 3.3.7 =\n\nUpdated widget code to use the newer style of PHP object constructor, replacing code deprecated under WordPress 4.3.\n\n= 3.3.1 =\n\nBug fix: display of multiday events in calendar view\n\n= 3.3 =\n\n* Event templates modified to support multiple choices on frequency and day of the week. For example, \"Every week on Monday and Wednesday\" or \"First and Third Monday\"\n* Add to Google Calendar / Download to Outlook (iCal) icons now shown by default (can be disabled on settings screen)\n* Added rsvpmaker_calendar shortcode for displaying the calendar independently of the rsvpmaker_upcoming event listing.\n\n= 3.2.8 =\n\n* Updated for WordPress 4.2.2.\n* Translation files updated.\n* Duration and category set in event templates now copied to events based on that template.\n* Fix to date display when duration is set (timezone adjustment)\n\n= 3.2.6 =\n\nFixed next post / previous post links to reflect chronological order of events, rather than post_date\n\n= 3.2.5 =\n\nAdded option to include timestamp when RSVP was recorded in RSVP Report or download to Excel.\n\n= 3.2.4 =\n\n* Bug fix - projected dates for event templates\n* Email attendees option added to RSVP Report (a mailto: link with the addresses of all attendees)\n\n= 3.2.3 =\n\nFixes a CSS bug with the display of multiple prices\n\n= 3.2.2 =\n\n* Bug fixe: wp_title filter was missing defaults for optional values\n* Print format option for RSVP Report when displayed as a table\n\n= 3.2 =\n\n* More responsive calendar display, works better in themes with a narrow content area (including Twenty Fifteen) or on mobile devices.\n* Option to display RSVP Report in a table, similar to the excel export format\n* Fixed a bug in event template projected dates\n\n= 3.1.1 =\n\n* Adjusts for timezones if set in the WordPress Settings > General screen\n* Invoice tracking can be disabled for PayPal payments\n\n= 3.1 =\n\n* Updating for WordPress 4.0\n* Fixed a bug with form templates (support for hidden fields)\n* Event Template screen now includes an option to apply a template to an existing event.\n\n= 3.0.9 =\n\n* Clearer prompt to update existing events based on a template, or add new events on the schedule set in the template, after a template is created or updated.\n* Fix for bug with setting to display or hide the count of people who have RSVP'ed for an event.\n\n= 3.0.8 =\n\n* Tweak to PayPal success/error messages, logging of messages\n* Fixing bug related to rsvpmaker_upcoming shortcode display (unset variable)\n\n= 3.0.7 =\n\nFix to calendar display\n\n= 3.0.6 =\n\nBug fix: correct handing of \"More Events\" link. The \"events page\" field on the RSVPMaker settings screen should be set to a full url like http://rsvpmaker.com/events/\n\n= 3.0.5 = \n\nAdditional rsvpmaker_upcoming attribute of one=\"next\" or one=\"slug-here\" or one=\"123\" (post id) to [highlight a single event in a page or blog post](http://rsvpmaker.com/2014/01/embedding-a-single-event-in-a-page-or-post/).\n\n= 3.0.4 =\n\nFix to handle password protected posts properly (previously was showing RSVP form even if content was supposed to be protected).\n\n= 3.0.3 =\n\n* Updated Spanish translation\n* Fix to dashboard widget\n\n= 3.0.2 =\n\n* Tweaked code to avoid overwriting event post slugs that have been set manually.\n* Updated translation for Norwegian\n\n= 3.0.1 =\n\n* Optional dashboard widget\n* Updated admin screen for better control of custom menus (display for only authors, only editors, or only admins)\n* Updated Norwegian translation (thank you Thomas Nyb\u00f8)\n\n= 3.0 =\n\nBug fixes for additional editors function (very tricky)\n\n= 2.8.9 =\n\nBug fixes, primarily in the event template functions.\n\n= 2.8.8 =\n\nBug fixes. Checkbox settings on editing screen weren't being recorded properly.\n\n= 2.8.7 =\n\nBug fix for incorrect rounding of ticket prices.\n\n= 2.8.6 =\n\nMore complete Spanish translation\n\n= 2.8.5 =\n\n* Spanish language translation\n* Option to allow event authors to designate other users who can edit an event or, more importantly, an event template -- and all events derived from that template. This allows users who do not have full editing rights to be granted rights to edit specific events or series of events. Useful on community websites where several representatives of a group or club may wish to share editing rights, without the site owner having to make them editors of the entire site or of all events.\n\n= 2.8.4 =\n\nAdditional form customization shortcodes for checkbox and radio buttons. See [form customization](http://rsvpmaker.com/2012/07/rsvpmaker2-5/)\n\n= 2.8.3 =\n\nBug fix - trying to address issue some users report with permalinks. Switched to get_post_permalink() instead of get_permalink() (according to Codex, may be better at handling custom post types)\n\n= 2.8.1 and 2.8.2 =\n\nImprovements to template function.\n\n= 2.8 =\n\n* Event template function - more flexible way of handling recurring events\n* Update of translation files, more admin functions included\n\n= 2.7.8 =\n\n* Bug fix: recurring events utility was broken, now it's not\n* Bug fix: calendar navigation from month to month fixed for sites without pretty permalinks (?page_id=123 format)\n\n= 2.7.7 =\n\nRemoved a spam check that created more problems than it solved.\n\n= 2.7.6 =\n\n* Fixes to paypal code\n* Better handling of query string post addresses (question mark format rather than pretty permalinks)\n* Sort by chronological option for RSVPMaker posts in admin screen\n* RSVP Report option to show members who have not responded (for membership sites where users log in to a WordPress account before responding, tracks user IDs). Must be activated on settings screen.\n\n= 2.7.5 =\n\n* Fixed a glitch with display of CAPTCHA image\n* Added option to hide yes/no radio boxes (assume the answer is yes)\n\n= 2.7.4.1 and 2.7.4.2 =\n\nBug fixes\n\n= 2.7.4 =\n\nYou can now specify an SMTP account to be used for more reliable delivery of notification emails (less likely to be flagged as spam if they're coming from a real account).\n\n= 2.7.3 =\n\nAnother bug fix related to JavaScript output.\n\n= 2.7.2 =\n\nBug fix. RSVPMaker-specific JavaScript was being output on other post types. Oops.\n\n= 2.7.1 =\n\n* Improved functionality for attendees updating their RSVPs. Previous data loaded from email address coded in link (from confirmation message) or from profile of a logged in user.\n* Fixed JavaScript error that was interfering with display attendees function.\n* Fixed error in More Events link for an event listing.\n\n= 2.7 =\n\n* Added the option to require a login prior to RSVP for membership-oriented sites where event attendees have a user name and password in WordPress. Name and email can automatically be filled in on the form. It's possible to read in other profile data by customizing the rsvpmaker_profile_lookup function (see the documentation on RSVPMaker customization at rsvpmaker.com).\n\n= 2.6 =\n\nIncremental update to translation files.\n\n= 2.5.9 =\n\n* Norwegian translation (thank you: Thomas Nyb\u00f8) and update of translation source file.\n\n* Added checkbox to let you specify whether the count of people who have RSVPed should always be shown (or only when a maximum number of participants is specified).\n\n= 2.5.8 =\n\nBugfix\n\n= 2.5.7 =\n\n* Form customization now includes the ability to set fields as required, with both client and server-side validation. This works with the new shortcode-style method of specifying form fields and form layout. Example: `[rsvpfield textfield=\"phone\" required=\"1\"]`. By default, the required fields are first, last, and email.\n\n* The filter used to add RSVP form fields has also been updated with a lower priority index to make it execute before other filters on the_content. This is in response to a user complaint about interaction with a related posts plugin that also operates on the_content, where the related posts widget was appearing above rather than below the form. New call is `add_filter('the_content','event_content',5)`\n\n= 2.5.6 =\n\nFixes bug fix with some checkbox options not being set / cleared correctly in the event editor.\n\n= 2.5.5 =\n\n* The date editing section of the event editor now uses drop-downs controls for both adding dates and editing dates.\n\n* rsvpmaker_upcoming shortcode now accepts limit=\"x\" (show x number of events) as an attribute. Example `[rsvpmaker_upcoming limit=\"3\"]` would retrieve a maximum of 3 posts. You can also use add_to_query=\"myquerystring\" to modify the query using query_posts() syntax. Example: `[rsvpmaker_upcoming add_to_query=\"p=99\"]` would retrieve a single rsvpmaker post with the ID of 99. \n\n* Code changes to prevent a potential security risk with user submitted data in RSVP Reports, use of esc_attr() on variables to prevent script injection.\n\n= 2.5.4 =\n\n* Moved functions for downloading RSVP results to Excel to a separate plugin, RSVPMaker Excel.\n\n* Several bugfixes were released following version 2.5, and a few more are included in this release.\n\n= 2.5 =\n\nIntroduced a new method for customizing the RSVP form, either on the settings screen or on a per-event basis. NOTE THAT PREVIOUS CUSTOMIZATIONS WILL NOT BE AUTOMATICALLY BE PRESERVED. The new method provides greater design freedom, allowing you to change the form layout, the order in which fields appear, and whether you want to include the guest section or a note field. A series of shortcodes are provide to generate the fields in the correct format for RSVPMaker.\n\nThis release also includes some code cleanup and a fix to the JavaScript function for adding guest fields (thanks to soaringthor for the code shared on the support forum).\n\n= 2.4.2 =\n\nFix to PayPal code for handling currency other than USD.\n\n= 2.4.1 =\n\nFix to calendar grid display, navigation between months.\n\n= 2.4 =\n\nNumber format options on settings screen for non-U.S. currencies. For example, PLN 1.000,00 (Polish currency, European separation for thousands and decimal) instead of $1,000.00\n\n= 2.3.9 =\n\n* Updates to Polish translation by Jaroslaw Zelinski\n* Fix for multi-currency support (display of currency code rather than $ for currencies other than USD)\n\n= 2.3.6 =\n\n* Introducing Polish translation by Jaroslaw Zelinski\n* Corrections to translation file setup\n\n= 2.3.5 =\n\n* Improvements to automated reminders. Ability to set timing for reminders cron job\n* Even more tweaks for UTF-8 email (coding for From and Subject headers)\n\n= 2.3.4 =\n\n* Automated event reminders to people on RSVP list for an event (experimental)\n* Email and confirmation messages set to UTF-8\n\n= 2.3.3 =\n\nBug fix - rsvp report\n\n= 2.3.2 =\n\n* Fixing character encoding issue with database table for RSVP responses (setting to utf-8 for better multi-language compatibility).\n* Fixed typographical error on calendar display (comma between month and year)\n\n= 2.3.1 =\n\nMore changes for use with ChimpBlast\n\n= 2.3 =\n\n* Currency for use with PayPal payments can now be customized on Settings screen\n* Minor changes for use with ChimpBlast\n\n= 2.2 =\n\nAdded option to require people to decode the secret message in a CAPTCHA image when completing the RSVP form. Useful if you're getting spam bot submissions.\n\n= 2.1 =\n\n* Fields for RSVP form can now be edited from the settings panel. Previously modifying the form required some PHP hacking.\n* You can now get a listing of past events with some attributes for the event_listings shortcode. Suggesting past=\"1\" format=\"headline\" date_format=\"F jS, Y\"\n\n= 2.0 =\n\nFixed code for downloading reports to Excel (again), this time based on the [PHPExcel](http://www.phpexcel.net/) library\n\n= 1.9.3 =\n\n* Fix to code for downloading reports to Excel (bundling of PEAR libraries)\n* Changed loading of translation domain.\n\n= 1.9.1 =\n\n* Tweak to handing of the loop within rsvpmaker_upcoming shortcode\n* Update to plugin url references using plugins_url() instead of constant\n\n= 1.9 =\n\n* Integrated ability to download reports to Excel (still based on PEAR Spreadsheet Writer, but you no longer have to download it separately).\n* Bug fixes and code cleanup.\n\n= 1.8 =\n\nFixing translation files that were missing from svn\n\n= 1.7 =\n\nBug fixes: display glitch, form spam filtering\n\n= 1.6 =\n\nAdded by request: support for custom-fields and post_tag in the rsvpmaker content type. I understand this helps with WooThemes integratiton?\n\n= 1.3, 1.4, 1.5 =\n\nBug fixes. Sorry\n\n= 1.2 =\n\n* Update to pluggable function rsvpmaker_profile_lookup - will now look up profile details of users who are logged in. Override to retrieve profile details from a member database or any other source.\n* Customizable security settings for RSVP Report.\n\n= 1.1 =\n\n* Bug fix for uninstall.php file.\n* Fixed display of events with no RSVP set.\n\n= 1.0 =\n\n* Added a `basic_form` function that you can override to change the basic fields of the RSVP form. For example, you can change it to omit the section that asks for the names of guests. This is in addition to the `rsvp_profile` function, which is used to collect additional contact details such as phone # or mailing address. See the instructions for [__adding custom functions__](http://www.rsvpmaker.com/2010/12/changing-the-rsvp-form-other-customizations/).\n* You have the option of allowing the names of attendees and the contents of the notes field to be displayed publicly. To avoid encouraging spam entries, this content is loaded via AJAX and only when the user clicks the Show Attendees button\n* Moved most of the default formatting into a CSS file that is queued up on pages that show event content. There is in option on the settings page for specifying your own css file to use instead.  Most inline styles have been replaced by class selectors. However, the styling of the RSVP Now button is still set on the RSVPMaker settings screen. Works better for email distribution of events.\n* RSVP Report now lists timestamp on reply and lets you sort by either alphabetical order or most recent.\n* If you're signing up employees or workers for specific timeslots, you can now set that to half-hour increments\n* Tweaked redirection code to handle confirmation and error messages on sites that don't have permalinks enabled\n* Changed label for RSVPMaker widget as it shows up on the administrator's screen under Appearance.\n* Added an uninstall script for removing custom tables and database entries.\n\n= 0.9.2 =\n\nBug fix\n\n= 0.9.1 =\n\nAdded debug checkbox in options. When this is turned on, it creates an additional admin screen for checking that RSVPs are recorded properly, displaying system variables.\n\n= 0.9 =\n\n* Made it easier to edit dates for events previously entered in system.\n* Widget and headlines listing shortcode output now include a link to your event listing page.\n* Cleanup on options handling.\n\n= 0.8 =\n\n* Added type parameter for shortcode so you can display only events tagged with \"featured\" or another event type using `[rsvpmaker_upcoming type=\"featured\"]`\n* Added ability to set RSVP start date as well as deadline for RSVPs\n* If signing up workers or volunteers for specific timeslots, you can now specify the duration of the timeslots in one-hour increments\n* Cleaned up Event Dates, RSVP Options box in editor, moving less commonly used parameters to the bottom.\n* Added a Tweak Permalinks setting (a hack for a few users who have reported \"page not found\" errors, possibly because some other plugin is overwriting the RSVPMaker rewrite rules).\n* Tested with WP 3.1 release candidate\n\n= 0.7.6 =\n\nFixed issue with setting default options.\n\n= 0.7.5 =\n\nImproved ability to add a series of recuring events, including ability for software to calculate the dates based on a schedule like \"Second Tuesday of the month\"\n\n= 0.7.4 =\n\nBug fix to prevent customizations from being overwritten. Custom functions should be placed in rsvpmaker-custom.php and the file must be installed in the plugins directory above the rsvpmaker folder: wp-content/plugins/ instead of wp-content/plugins/rsvpmaker/\n\n= 0.7.3 =\n\n* Updated code for displaying RSVP Reports. Added functionality for deleting entries.\n* Beginning to introduce translation support. See translations directory for rsvp.pot file to be used by translators.\n\n= 0.7.2 =\n\nBug fix, RSVP Reports\n\n= 0.7.1 =\n\nBug fix, tweak to register post type configuration\n\n= 0.7 =\n\n* Custom post type slug changed from 'event' to 'rsvpmaker' in an attempt to avoid name conflicts, permalink issues.\n* Widget now lets you set the # of posts to display and date format string\n\n= 0.6.2 =\n\n* Updated to WP 3.03\n* Addition of event type taxonomy\n\n= 0.6.1 =\n\n* Fixed errors in database code for recording guests and payments\n* Added option to switch between 12-hour and 24-hour time formats\n* Added ability to set maximum participants per event.\n\n= 0.6 =\n\n* First public release November 2010.\n\n== Upgrade Notice ==\n\n= 3.9 =\n\nSignificant change to the event data model. By storing dates as post metadata, this release eliminates the dependency on the custom database table previously used for event dates. One advantage: content will be easier to move between websites using standard WordPress import/export routines.\n\n= 3.0 =\n\nImportant fixes if you are using the event templates or additional editors functions\n\n= 2.5.4 =\n\nExport to Excel function moved to a separate plugin.\n\n= 2.5 =\n\nNew method for customizing the RSVP form introduced.", "<?php\n/*\n* Backend functions\n*/\nfunction rsvpmaker_date_slug($data) {\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\treturn $data;\n\t\n\tif(!empty($_POST[\"override\"]))\n\t\treturn $data; // don't do this for template override\n\t\n\tif($data[\"post_status\"] != 'publish')\n\t\treturn $data;\n\n\tif(isset($_POST[\"edit_month\"][0]) )\n\t\t{\n\t\t$y = (int) $_POST[\"edit_year\"][0];\n\t\t$m = (int) $_POST[\"edit_month\"][0];\n\t\tif($m < 10)\n\t\t\t$m = '0'.$m;\n\t\t$d = (int) $_POST[\"edit_day\"][0];\n\t\tif($d < 10)\n\t\t\t$d = '0'.$d;\t\t\t\n\t\t$date = $y.'-'.$m.'-'.$d;\n\t\n\t\tif (empty($data['post_name']) || !strpos($data['post_name'],$date) ) {\n\t\t\t$data['post_name'] = sanitize_title($data['post_title']);\n\t\t\t$data['post_name'] .= '-' .$date;\n\t\t\t}\n\t\t}\n\telseif(isset($_POST[\"event_month\"][0]) )\n\t\t{\n\t\t$y = (int) $_POST[\"event_year\"][0];\n\t\t$m = (int) $_POST[\"event_month\"][0];\n\t\tif($m < 10)\n\t\t\t$m = '0'.$m;\n\t\t$d = (int) $_POST[\"event_day\"][0];\n\t\tif($d < 10)\n\t\t\t$d = '0'.$d;\t\t\t\n\t\t$date = $y.'-'.$m.'-'.$d;\n\t\n\t\tif (empty($data['post_name']) || !strpos($data['post_name'],$date) ) {\n\t\t\t$data['post_name'] = sanitize_title($data['post_title']);\n\t\t\t$data['post_name'] .= '-' .$date;\n\t\t\t}\n\t\t}\n\t\n\treturn $data;\n}\n\nadd_filter('wp_insert_post_data', 'rsvpmaker_date_slug', 10);\n\nfunction rsvpmaker_unique_date_slug($slug, $post_ID = 0, $post_status = '', $post_type = '', $post_parent = 0, $original_slug='' )\n\t{\n\tglobal $wpdb;\n\tif($post_type != 'rsvpmaker')\n\t\treturn $slug;\n\tif($post_status != 'publish')\n\t\treturn $slug;\n\tif(!empty($_POST[\"override\"]))\n\t\treturn $slug; // don't do this for template override\n\t\n\t$post = get_post($post_ID);\n\tif(empty($post->post_type)) return $slug;\n\t$date = str_replace(' ', '_',str_replace(':00','',get_rsvp_date($post_ID)));\n\t$newslug = sanitize_text_field($post->post_title.'-' .$date);\n\treturn $newslug;\n\t}\n\nadd_filter('wp_unique_post_slug','rsvpmaker_unique_date_slug',10);\n\nfunction rsvpmaker_save_calendar_data($post_id) {\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\treturn;\n\n\tglobal $wpdb, $current_user;\n\t$end_array = array();\n\t\n\tif($parent_id = wp_is_post_revision($post_id))\n\t\t{\n\t\t$post_id = $parent_id;\n\t\t}\n\tif(rsvpmaker_is_template($post_id))\n\t{\n\t\t$args = array($post_id,$current_user->user_email);\n\t\twp_clear_scheduled_hook( 'rsvpmaker_create_update_reminder', $args );\n\t\twp_schedule_single_event( strtotime('+2 hours'), 'rsvpmaker_create_update_reminder', $args);\n\t}\n\tif(!empty($_POST['newrsvpdate'])) {\n\t\tupdate_post_meta($post_id,'_rsvp_dates',sanitize_text_field($_POST['newrsvpdate'].' '.$_POST['newrsvptime']));\n\t}\n\tif(!empty($_POST['rsvpendtime']))\n\t\tupdate_post_meta($post_id,'_endfirsttime',sanitize_text_field($_POST['rsvpendtime']));\n\tif(!empty($_POST['end_time_type']))\n\t\tupdate_post_meta($post_id,'_firsttime',sanitize_text_field($_POST['end_time_type']));\n\tif(isset($_POST[\"_require_webinar_passcode\"]))\n\t\t{\n\t\tupdate_post_meta($post_id,'_require_webinar_passcode',sanitize_text_field($_POST[\"_require_webinar_passcode\"]));\n\t\t}\n\tif(isset($_POST[\"event_month\"]) )\n\t\t{\n\t\tforeach($_POST[\"event_year\"] as $index => $year)\n\t\t\t{\n\t\t\t$year = (int) $year;\n\t\t\tif(isset($_POST[\"event_day\"][$index]) && $_POST[\"event_day\"][$index])\n\t\t\t\t{\n\t\t\t\t$cddate = format_cddate($year,(int) $_POST[\"event_month\"][$index], (int) $_POST[\"event_day\"][$index], (int) $_POST[\"event_hour\"][$index], (int) $_POST[\"event_minutes\"][$index]);\n\t\t\t\t$dpart = explode(':',$_POST[\"event_duration\"][$index]);\n\t\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t\t{\n\t\t\t\t\t$hour = intval($_POST[\"event_hour\"][$index]) + intval($dpart[0]);\n\t\t\t\t\t$minutes = (isset($dpart[1]) ) ? intval($_POST[\"event_minutes\"][$index]) + intval($dpart[1]) : sanitize_text_field($_POST[\"event_minutes\"][$index]);\n\t\t\t\t\t$t = rsvpmaker_mktime( $hour, $minutes,0,intval($_POST[\"event_month\"][$index]),intval($_POST[\"event_day\"][$index]),$year);\n\t\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$t);\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$duration = sanitize_text_field($_POST[\"event_duration\"][$index]); // empty or all day\n\t\t\t\tif($duration == 'set')\n\t\t\t\t\t$end_array[] = sanitize_text_field($_POST[\"hourevent_duration\"][$index]).':'.sanitize_text_field($_POST[\"minevent_duration\"][$index]);\n\t\t\t\t$dates_array[] = $cddate;\n\t\t\t\t$durations_array[] = $duration;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\tif(isset($_POST[\"edit_month\"]))\n\t\t{\n\t\tdelete_transient('rsvpmakerdates');//invalidate cached values\n\t\tforeach($_POST[\"edit_year\"] as $index => $year)\n\t\t\t{\n\t\t\t\t$year = (int) $year;\n\t\t\t\t$cddate = format_cddate(intval($year),intval($_POST[\"edit_month\"][$index]), intval($_POST[\"edit_day\"][$index]), intval($_POST[\"edit_hour\"][$index]), intval($_POST[\"edit_minutes\"][$index]));\n\t\t\t\tif(strpos( $_POST[\"edit_duration\"][$index],':' ))\n\t\t\t\t\t{\n\t\t\t\t\t$dpart = explode(':',sanitize_text_field($_POST[\"edit_duration\"][$index]));\n\t\t\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t$hour = intval($_POST[\"edit_hour\"][$index]) + intval($dpart[0]);\n\t\t\t\t\t\t$minutes = (isset($dpart[1]) ) ? intval($_POST[\"edit_minutes\"][$index]) + intval($dpart[1]) : intval($_POST[\"edit_minutes\"][$index]);\n\t\t\t\t\t\t//dchange\n\t\t\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',rsvpmaker_mktime( $hour, $minutes,0,intval($_POST[\"edit_month\"][$index]),intval($_POST[\"edit_day\"][$index]),$year));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\telseif( is_numeric($_POST[\"edit_duration\"][$index]) )\n\t\t\t\t\t{\n\t\t\t\t\t$d_duration = (int) $_POST[\"edit_duration\"][$index];\n\t\t\t\t\t$minutes = (int) $_POST[\"edit_minutes\"][$index];\t\t\t\t\n\t\t\t\t\t$minutes = $minutes + (60*$d_duration);\n\t\t\t\t\t//dchange - can this be removed?\n\t\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',rsvpmaker_mktime( sanitize_text_field($_POST[\"edit_hour\"][$index]), $minutes,0,sanitize_text_field($_POST[\"edit_month\"][$index]),sanitize_text_field($_POST[\"edit_day\"][$index]),$year));\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$duration = sanitize_text_field($_POST[\"edit_duration\"][$index]); // empty or all day\t\t\t\n\t\t\t\tif(($duration == 'set') || strpos($duration,'|') )\n\t\t\t\t\t$end_array[] = sanitize_text_field($_POST[\"houredit_duration\"][$index]).':'.sanitize_text_field($_POST[\"minedit_duration\"][$index]);\n\t\t\t\t$dates_array[] = $cddate;\n\t\t\t\t$durations_array[] = $duration;\n\t\t\t\t}\n\t\t} // end edit month\n\t\n\t\tif(!empty($dates_array) )\n\t\t\t{\n\t\t\t\tupdate_post_meta($post_id, '_rsvp_dates', $dates_array[0]);\n\t\t\t\tif(!empty($durations_array[0]))\n\t\t\t\tupdate_post_meta($post_id, '_firsttime', $durations_array[0]);\n\t\t\t\tif(!empty($end_array[0]))\n\t\t\t\tupdate_post_meta($post_id, '_endfirsttime', $end_array[0]);\n\t\t\t}\n\t\n\t\tif(isset($_POST[\"delete_date\"]))\n\t\t\t{\n\t\t\tforeach($_POST[\"delete_date\"] as $delete_date)\n\t\t\t\t{\n\t\t\t\tdelete_rsvpmaker_date($post_id,sanitize_text_field($delete_date));\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\tif(isset($_POST[\"setrsvp\"]) )\n\t\t{ // if rsvp parameters were set, was RSVP box checked?\n\t\tif(isset($_POST[\"setrsvp\"][\"on\"]))\n\t\t\tupdate_post_meta($post_id, '_rsvp_on', (int) $_POST[\"setrsvp\"][\"on\"]);\n\t\t}\n\t\t\n\t\tif(isset($_POST['payment_gateway']))\n\t\t\tupdate_post_meta($post_id, 'payment_gateway', sanitize_text_field($_POST[\"payment_gateway\"]));\n\t\n\t\tif(isset($_POST[\"sked\"][\"week\"]))\n\t\t\t{\n\t\t\tsave_rsvp_template_meta($post_id);\n\t\t\t}\n\t\tif(!isset($_POST[\"sked\"]) && !isset($_POST[\"setrsvp\"]))\n\t\t\treturn;\n\t\tif(isset($_POST['add_timezone']) && $_POST['add_timezone'])\n\t\t\tupdate_post_meta($post_id,'_add_timezone',1);\n\t\telse\n\t\t\tupdate_post_meta($post_id,'_add_timezone',0);\t\n\t\tif(isset($_POST['convert_timezone']) && $_POST['convert_timezone'])\n\t\t\tupdate_post_meta($post_id,'_convert_timezone',1);\n\t\telse\n\t\t\tupdate_post_meta($post_id,'_convert_timezone',0);\t\n\t\n\t\tif(isset($_POST['calendar_icons']) && $_POST['calendar_icons'])\n\t\t\tupdate_post_meta($post_id,'_calendar_icons',1);\n\t\telse\n\t\t\tupdate_post_meta($post_id,'_calendar_icons',0);\n}\n\nadd_action('rsvpmaker_create_update_reminder','rsvpmaker_create_update_reminder',10,3);\nfunction rsvpmaker_create_update_reminder($t, $author_email = '') {\n\t$template = get_post($t);\n\t$output = '';\n\t$sched_result = get_events_by_template($t);\n\tif(empty($sched_result))\n\t\treturn;//no events to update\n\t$nag = true;\n\tforeach($sched_result as $event) {\n\t\t$updated_from_template = get_post_meta($event->ID,\"_updated_from_template\",true);\n\t\tif($updated_from_template >= $template->post_modified)\n\t\t\t$nag = false; // at least one event has been updated\n\t\t$up = ($updated_from_template < $template->post_modified) ? 'not updated'.\" $updated_from_template < $template->post_modified \" : 'updated';\n\t\t$output .= sprintf('%d %s ',$event->ID, $up);\n\t}\n\tif($nag) {\n\t\t$mail['html'] = sprintf('<p>You updated the <strong>%s</strong> template but not the events based on that template.</p>'.\"\\n\".'<p>To update the whole series, use <a href=\"%s\">Create/Update<a></p>',$template->post_title,admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t='.$t));\n\t\t$mail['to'] = get_option('admin_email');\n\t\t$mail['from'] = get_option('admin_email');\n\t\t$mail['subject'] = __('Event template not applied to existing events:','rsvpmaker').' '.$template->post_title;\n\t\trsvpmailer($mail);\n\t\tif($author_email != $mail['to'])\n\t\t{\n\t\t\t$mail['to'] = $author_email;\n\t\t\trsvpmailer($mail);\n\t\t}\n\t}\n}\n\nfunction rsvpmaker_date_option($datevar = NULL, $index = NULL, $jquery_date = NULL, $sked = NULL) {\n\nglobal $rsvp_options;\n$prefix = \"event_\";\n\nif(is_int($datevar))\n\t{\n\t$t = $datevar;\n\t$datevar = array();\n\t}\nelseif(is_array($datevar) )\n{\n\t$datestring = $datevar[\"datetime\"];\n\t//dchange - check this\n\t$duration = $datevar[\"duration\"];\n\tif(strpos($duration,':'))\n\t\t{\n\t\t$datevar['end_time'] = rsvpmaker_date('H:i',rsvpmaker_strtotime($duration));\n\t\t$datevar['duration'] = 'set';\n\t\t}\n\t$prefix = \"edit_\";\n\tif(isset($datevar[\"id\"]))\n\t\t$index = $datevar[\"id\"];\n}\nelse\n{\n\t$datestring = $datevar;\n\t$datevar = array();\n}\nif(!empty($datestring))\n\t{\n\t$datestring = str_replace('Every','Next',$datestring);\n\t$t = rsvpmaker_strtotime($datestring);\n\t}\n\n$endtime = (is_array($sked) && isset($sked['end'])) ? rsvpmaker_strtotime('2000-01-01 '. $sked['end']) : $t+HOUR_IN_SECONDS;\n\n?>\n<div id=\"<?php echo esc_attr($prefix); ?>date<?php echo esc_attr($index);?>\" ><input type=\"hidden\" id=\"defaulthour\" value=\"<?php echo esc_attr($rsvp_options[\"defaulthour\"]); ?>\" /><input type=\"hidden\" id=\"defaultmin\" value=\"<?php echo esc_attr($rsvp_options[\"defaultmin\"]); ?>\" />\n<p><label>Date</label> <input type=\"date\" name=\"newrsvpdate\" id=\"newrsvpdate\" value=\"<?php echo date('Y-m-d',$t); ?>\"> \n</p>\n<p><label>Time</label> <input name=\"newrsvptime\" type=\"time\" class=\"newrsvptime\" id=\"newrsvptime\" value=\"<?php echo rsvpmaker_date('H:i:s',$t) ?>\"><span id=\"endtimespan\"> to <input name=\"rsvpendtime\" type=\"time\" class=\"rsvpendtime\" id=\"rsvpendtime\" value=\"<?php echo rsvpmaker_date('H:i:s',$endtime) ?>\"> </span>\n</p>\n\n<?php\nif(!empty($sked['duration']))\n\t$datevar['duration'] = $sked['duration'];\nif(empty($datestring))\n\t$datestring ='';\nrsvpmaker_duration_select ($prefix.'duration['.$index.']', $datevar, $datestring, $index );\n\n?>\n</div>\n<?php\n\n}\n\nfunction rsvpmaker_date_option_event($t, $endtime, $type) {\n\n\tglobal $rsvp_options;\n\t$prefix = \"edit_\";\n\t\n\t?>\n\t<div id=\"<?php echo esc_attr($prefix); ?>date<?php echo esc_attr($index);?>\" ><input type=\"hidden\" id=\"defaulthour\" value=\"<?php echo esc_attr($rsvp_options[\"defaulthour\"]); ?>\" /><input type=\"hidden\" id=\"defaultmin\" value=\"<?php echo esc_attr($rsvp_options[\"defaultmin\"]); ?>\" />\n\t<p><label>Date</label> <input type=\"date\" name=\"newrsvpdate\" id=\"newrsvpdate\" value=\"<?php echo date('Y-m-d',$t); ?>\"> \n\t</p>\n\t<p><label>Time</label> <input name=\"newrsvptime\" type=\"time\" class=\"newrsvptime\" id=\"newrsvptime\" value=\"<?php echo rsvpmaker_date('H:i:s',$t) ?>\"><span id=\"endtimespan\"> to <input name=\"rsvpendtime\" type=\"time\" class=\"rsvpendtime\" id=\"rsvpendtime\" value=\"<?php echo rsvpmaker_date('H:i:s',$endtime) ?>\"> </span>\n\t</p>\n\t\n\t<?php\n\trsvpmaker_duration_select_2021 ($type);\n\t?>\n\t</div>\n\t<?php\n}\n\nfunction save_rsvp_meta($post_id, $new = false)\n{\nif( !wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\treturn;\n$setrsvp = array_map('sanitize_text_field',$_POST[\"setrsvp\"]);\nif($new)\n{\nrsvpmaker_defaults_for_post($post_id); \n}\nelse\n{\n\t$checkboxes = array(\"show_attendees\",\"count\",\"captcha\",\"login_required\",'confirmation_include_event','rsvpmaker_send_confirmation_email','yesno');\n\tforeach($checkboxes as $check)\n\t\t{\n\t\t\tif(!isset($setrsvp[$check]))\n\t\t\t\t$setrsvp[$check] = 0;\n\t\t}\t\n}\n\nif(isset($_POST[\"deadyear\"]) && isset($_POST[\"deadmonth\"]) && isset($_POST[\"deadday\"]))\n\t{\n\tif(empty(trim($_POST[\"deadday\"])))\n\t\t$setrsvp[\"deadline\"] = '';\n\telse\n\t\t$setrsvp[\"deadline\"] = rsvpmaker_strtotime(sanitize_text_field($_POST[\"deadyear\"]).'-'.sanitize_text_field($_POST[\"deadmonth\"]).'-'.sanitize_text_field($_POST[\"deadday\"]).' '.sanitize_text_field($_POST[\"deadtime\"]));\n\t}\n\nif(isset($_POST[\"startyear\"]) && isset($_POST[\"startmonth\"]) && isset($_POST[\"startday\"]))\n\t{\n\tif(empty(trim($_POST[\"startday\"])))\n\t\t$setrsvp[\"start\"] = '';\n\telse\n\t\t$setrsvp[\"start\"] = rsvpmaker_strtotime(sanitize_text_field($_POST[\"startyear\"].'-'.$_POST[\"startmonth\"].'-'.$_POST[\"startday\"].' '.$_POST[\"starttime\"]));\n\t}\n\nforeach($setrsvp as $name => $value)\n\t{\n\t$field = '_rsvp_'.$name;\n\t$single = true;\n\tupdate_post_meta($post_id, $field, sanitize_text_field($value));\n\t}\n\nif(isset($_POST[\"unit\"]))\n\t{\n\t\t\t\t\n\tforeach($_POST[\"unit\"] as $index => $value)\n\t\t{\n\t\t$value = sanitize_text_field($value);\n\t\tif(empty($value))\n\t\t\tcontinue;\n\t\tif( empty($_POST[\"price\"][$index]) && ($_POST[\"price\"][$index] != 0) )\n\t\t\tcontinue;\n\t\t$per[\"unit\"][$index] = $value;\n\t\t$per[\"price\"][$index] = sanitize_text_field($_POST[\"price\"][$index]);\n\t\tif(isset($_POST[\"price_multiple\"][$index]) && ($_POST[\"price_multiple\"][$index] > 1))\n\t\t\t$per[\"price_multiple\"][$index] = sanitize_text_field($_POST[\"price_multiple\"][$index]);\n\t\tif(!empty($_POST[\"price_deadline\"][$index]))\n\t\t\t{\n\t\t\t\n\t\t\t$per[\"price_deadline\"][$index] = rsvpmaker_strtotime(sanitize_text_field($_POST[\"price_deadline\"][$index]));\n\t\t\t\n\t\t\t}\n\t\tif(isset($_POST['showhide'][$index]))\n\t\t\t{\n\t\t\t\tforeach($_POST['showhide'][$index] as $showindex => $showhide)\n\t\t\t\t\t{\n\t\t\t\t\t\tif($showhide)\n\t\t\t\t\t\t\t$pricehide[$index][] = $showindex;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\n\tif(!empty($pricehide))\n\t\t{\n\t\t\tupdate_post_meta($post_id, '_hiddenrsvpfields', $pricehide);\n\t\t}\n\t\n\t$value = $per;\n\t$field = \"_per\";\n\t\n\t$current = get_post_meta($post_id, $field, $single); \n\t\n\tif($value && ($current == \"\") )\n\t\tadd_post_meta($post_id, $field, $value, true);\n\t\n\telseif($value != $current)\n\t\tupdate_post_meta($post_id, $field, $value);\n\t\n\telseif($value == \"\")\n\t\tdelete_post_meta($post_id, $field, $current);\n\t\n\t}\n\tif(!empty($_POST[\"youtube_live\"]) || !empty($_POST[\"webinar_other\"]))\n\t\t{\n\t\t$ylive = sanitize_text_field($_POST[\"youtube_live\"]);\n\t\tunset($_POST);\n\t\trsvpmaker_youtube_live($post_id, $ylive);\n\t\t}\n\n\t\tif(isset($_POST['coupon_code']))\n\n\t\t{\n\t\n\t\tdelete_post_meta($post_id,'_rsvp_coupon_code');\n\t\n\t\tdelete_post_meta($post_id,'_rsvp_coupon_discount');\n\t\n\t\tdelete_post_meta($post_id,'_rsvp_coupon_method');\n\t\n\t\tforeach($_POST['coupon_code'] as $index => $value)\n\t\n\t\t{\n\t\n\t\t\t$value = sanitize_text_field($value);\n\t\n\t\t\t$discount = sanitize_text_field($_POST['coupon_discount'][$index]);\n\t\n\t\t\tif(!empty($value) && is_numeric($discount))\n\t\n\t\t\t{\n\t\n\t\t\t\t$method = sanitize_text_field($_POST['coupon_method'][$index]);\n\t\n\t\t\t\tadd_post_meta($post_id,'_rsvp_coupon_code',$value);\n\t\n\t\t\t\tadd_post_meta($post_id,'_rsvp_coupon_discount',$discount);\n\t\n\t\t\t\tadd_post_meta($post_id,'_rsvp_coupon_method',$method);\t\t\n\t\n\t\t\t}\n\t\t}\n\t\n\t\t}\n}\n\nfunction rsvpmaker_menu_security($label, $slug,$options) {\necho esc_html($label);\n?>\n <select name=\"security_option[<?php echo esc_attr($slug); ?>]\" id=\"<?php echo esc_attr($slug); ?>\">\n  <option value=\"manage_options\" <?php if(isset($options[$slug]) && ($options[$slug] == 'manage_options')) echo ' selected=\"selected\" ';?> ><?php esc_html_e('Administrator','rsvpmaker');?> (manage_options)</option>\n  <option value=\"edit_others_rsvpmakers\" <?php if(isset($options[$slug]) && ($options[$slug] == 'edit_others_rsvpmakers')) echo ' selected=\"selected\" ';?>><?php esc_html_e('Editor','rsvpmaker');?> (edit_others_rsvpmakers)</option>\n  <option value=\"publish_rsvpmakers\" <?php if(isset($options[$slug]) && ($options[$slug] == 'publish_rsvpmakers')) echo ' selected=\"selected\" ';?> ><?php esc_html_e('Author','rsvpmaker');?> (publish_rsvpmakers)</option>\n  <option value=\"edit_rsvpmakers\" <?php if(isset($options[$slug]) && ($options[$slug] == 'edit_rsvpmakers')) echo ' selected=\"selected\" ';?> ><?php esc_html_e('Contributor','rsvpmaker');?> (edit_rsvpmakers)</option>\n  </select><br />\n<?php\n}\n  \n  // Avoid name collisions.\n  if (!class_exists('RSVPMAKER_Options'))\n      : class RSVPMAKER_Options\n      {\n          // this variable will hold url to the plugin  \n          var $plugin_url;\n          \n          // name for our options in the DB\n          var $db_option = 'RSVPMAKER_Options';\n          \n          // Initialize the plugin\n          function __construct()\n          {\n              $this->plugin_url = plugins_url('',__FILE__).'/';\n\n              // add options Page\n              add_action('admin_menu', array(&$this, 'admin_menu'));\n              \n          }\n          \n          // hook the options page\n          function admin_menu()\n          {\n              add_options_page('RSVPMaker', 'RSVPMaker', 'manage_options', basename(__FILE__), array(&$this, 'handle_options'));\n          }\n          \n          \n          // handle plugin options\n          function get_options()\n          {\n              global $rsvp_options;\n              return $rsvp_options;\n          }\n          \n          // Set up everything\n          function install()\n          {\n              // set default options\n              $this->get_options();\n          }\n          \n          // handle the options page\n          function handle_options()\n          {\n\t\t\tif(!empty($_POST) && !isset($_POST['rsvpelist']) && !wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\t\t\twp_die('nonce security error');\n\t\t\tif(!empty($_POST['rsvpmaker_save_form']) && !empty($_POST['form_id']))\n\t\t\t{\n\t\t\t\t$forms = rsvpmaker_get_forms();\n\t\t\t\t$forms[sanitize_text_field($_POST['rsvpmaker_save_form'])] = (int) $_POST['form_id'];\n\t\t\t\tupdate_option('rsvpmaker_forms',$forms);\n\t\t\t}\n\n\t\t\t$options = $this->get_options();\n\t\t\t  if(isset($_POST[\"payment_option\"])) {\n              $newoptions = array_map('sanitize_text_field',stripslashes_deep($_POST[\"payment_option\"]));\n\t\t\t\t$newoptions[\"stripe\"] = (isset($_POST['payment_gateway']) && ($_POST['payment_gateway'] == 'stripe')) ? 1 : 0;\n\t\t\t\t$newoptions[\"cash_or_custom\"] = (isset($_POST['payment_gateway']) && ($_POST['payment_gateway'] == 'cash_or_custom')) ? 1 : 0;\n\t\t\t\t$nfparts = explode('|',$_POST[\"currency_format\"]);\n\t\t\t\t$newoptions[\"currency_decimal\"] = sanitize_text_field($nfparts[0]);\n\t\t\t\t$newoptions[\"currency_thousands\"] = sanitize_text_field($nfparts[1]);\n\n\t\t\t\tforeach($newoptions as $name => $value)\n\t\t\t\t  $options[$name] = sanitize_text_field($value);\n\t\t\t\t  \n                  update_option($this->db_option, $options);\n\n\t\t\t\t  if(isset($_POST['rsvpmaker_stripe_keys']))\n\t\t\t\t  {\n\t\t\t\t\t//don't overwrite keys that are not displayed\n\t\t\t\t\t$stripe_keys = array_map( 'sanitize_text_field', $_POST['rsvpmaker_stripe_keys']);\n\n\t\t\t\t\tif(!isset($stripe_keys['sk']) || !isset($stripe_keys['sandbox_pk']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$prev = get_option('rsvpmaker_stripe_keys');\n\t\t\t\t\t\tif(!isset($stripe_keys['sk']))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$stripe_keys['sk'] = $prev['sk'];\n\t\t\t\t\t\t\t\t$stripe_keys['pk'] = $prev['pk'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!isset($stripe_keys['sandbox_sk']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$stripe_keys['sandbox_sk'] = $prev['sandbox_sk'];\n\t\t\t\t\t\t\t$stripe_keys['sandbox_pk'] = $prev['sandbox_pk'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tupdate_option('rsvpmaker_stripe_keys',$stripe_keys);\n\t\t\t\t  }\n\t\t\t\tif(isset($_POST['rsvpmaker_paypal_rest_keys']))\n\t\t\t\t{\n\t\t\t\t\t$pkeys = array_map( 'sanitize_text_field', $_POST['rsvpmaker_paypal_rest_keys']);\n\n\t\t\t\t\tif(!isset($pkeys['client_id']) || !isset($keys['sandbox_client_id']))\n\t\t\t\t\t{\n\t\t\t\t\t\t$prev = get_option('rsvpmaker_paypal_rest_keys');\n\t\t\t\t\t\tif(!isset($pkeys['client_id']))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$pkeys['client_id'] = $prev['client_id'];\n\t\t\t\t\t\t\t\t$pkeys['client_secret'] = $prev['client_secret'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!isset($pkeys['sandbox_client_id']))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$pkeys['sandbox_client_id'] = $prev['sandbox_client_id'];\n\t\t\t\t\t\t\t$pkeys['sandbox_client_secret'] = $prev['sandbox_client_secret'];\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tupdate_option('rsvpmaker_paypal_rest_keys',$pkeys);\n\t\t\t\t}\n\t\t\t\t  \n\t\t\t\t  $paypal_rest_keys = get_option('rsvpmaker_paypal_rest_keys');\n\n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - payments.','rsvpmaker').' <a href=\"'.admin_url('options-general.php?page=rsvpmaker-admin.php&payment_key_test=1').'\">',__('Test Keys','rsvpmaker').'</a></p>'.default_gateway_check( get_rsvpmaker_payment_gateway () ).'</div>';\n\t\t\t  }\t\n\n\t\t\t  if(isset($_POST[\"enotify_option\"])) {\n\t\t\t\t  //print_r($_POST[\"enotify_option\"]);\n\t\t\t\t$newoptions = array_map( 'sanitize_text_field', stripslashes_deep($_POST[\"enotify_option\"] ) );\n\t\t\t\tforeach($newoptions as $name => $value)\n\t\t\t\t  $options[$name] = sanitize_text_field($value);\n\n                  update_option($this->db_option, $options);\n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - email server.','rsvpmaker').'</p></div>';\n\t\t\t  }\t\n\t\t\t  \n\t\t\t  if(isset($_POST[\"security_option\"])) {\n\t\t\t\tforeach($_POST[\"security_option\"] as $index => $value) {\n\t\t\t\t\t$newoptions[sanitize_text_field($index)] = sanitize_text_field($value);\n\t\t\t\t}\n\t\t\t\t$newoptions[\"additional_editors\"] = (isset($_POST[\"security_option\"][\"additional_editors\"]) && $_POST[\"security_option\"][\"additional_editors\"]) ? 1 : 0;\n\t\t\t\tforeach($newoptions as $name => $value)\n\t\t\t\t  $options[$name] = sanitize_text_field($value);\n                update_option($this->db_option, $options);\n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - security.','rsvpmaker').'</p></div>';\n\t\t\t\t  //print_r($newoptions);\n\t\t\t  }\t\n\n\t\t\t  if (isset($_POST['submitted'])) {\n              \t\t\n                  $newoptions = stripslashes_deep($_POST[\"option\"]);\n                  $newoptions[\"rsvp_on\"] = (isset($_POST[\"option\"][\"rsvp_on\"]) && $_POST[\"option\"][\"rsvp_on\"]) ? 1 : 0;\n                  $newoptions[\"confirmation_include_event\"] = (isset($_POST[\"option\"][\"confirmation_include_event\"]) && $_POST[\"option\"][\"confirmation_include_event\"]) ? 1 : 0;\n                  $newoptions['rsvpmaker_send_confirmation_email'] = (isset($_POST[\"option\"]['rsvpmaker_send_confirmation_email']) && $_POST[\"option\"]['rsvpmaker_send_confirmation_email']) ? 1 : 0;\n                  $newoptions[\"login_required\"] = (isset($_POST[\"option\"][\"login_required\"]) && $_POST[\"option\"][\"login_required\"]) ? 1 : 0;\n                  $newoptions[\"rsvp_captcha\"] = (isset($_POST[\"option\"][\"rsvp_captcha\"]) && $_POST[\"option\"][\"rsvp_captcha\"]) ? 1 : 0;\n\t\t\t\t  if(isset($_POST[\"option\"][\"rsvp_recaptcha_site_key\"])) {\n                  $newoptions[\"rsvp_recaptcha_site_key\"] = sanitize_text_field($_POST[\"option\"][\"rsvp_recaptcha_site_key\"]);\n                  $newoptions[\"rsvp_recaptcha_secret\"] = sanitize_text_field($_POST[\"option\"][\"rsvp_recaptcha_secret\"]);\t\t  \n\t\t\t\t  }\n                  $newoptions[\"rsvp_yesno\"] = (isset($_POST[\"option\"][\"rsvp_yesno\"]) && $_POST[\"option\"][\"rsvp_yesno\"]) ? 1 : 0;\n                  $newoptions[\"calendar_icons\"] = (isset($_POST[\"option\"][\"calendar_icons\"]) && $_POST[\"option\"][\"calendar_icons\"]) ? 1 : 0;\n                  $newoptions[\"convert_timezone\"] = (isset($_POST[\"option\"][\"convert_timezone\"]) && $_POST[\"option\"][\"convert_timezone\"]) ? 1 : 0;\n                  $newoptions[\"social_title_date\"] = (isset($_POST[\"option\"][\"social_title_date\"]) && $_POST[\"option\"][\"social_title_date\"]) ? 1 : 0;\n                  $newoptions[\"rsvp_count\"] = (isset($_POST[\"option\"][\"rsvp_count\"]) && $_POST[\"option\"][\"rsvp_count\"]) ? 1 : 0;\n                  $newoptions[\"show_attendees\"] = (isset($_POST[\"option\"][\"show_attendees\"]) && $_POST[\"option\"][\"show_attendees\"]) ? 1 : 0;\n                  $newoptions[\"debug\"] = (isset($_POST[\"option\"][\"debug\"]) && $_POST[\"option\"][\"debug\"]) ? 1 : 0;\n\t\t\t\t  \n\t\t\t\t  $newoptions[\"dbversion\"] = $options[\"dbversion\"]; // gets set by db upgrade routine\n\t\t\t\t  \n\t\t\t\t$newoptions[\"eventpage\"] = sanitize_text_field($_POST[\"option\"][\"eventpage\"]);\n                  $newoptions[\"log_email\"] = (isset($_POST[\"option\"][\"log_email\"]) && $_POST[\"option\"][\"log_email\"]) ? 1 : 0;\n\n\t\t\t\tforeach($newoptions as $name => $value) {\n\t\t\t\t\tif($name == 'rsvplink')\n\t\t\t\t\t\t$options[$name] = $value;\n\t\t\t\t\telse\n\t\t\t\t\t\t$options[$name] = sanitize_text_field($value);\n\t\t\t\t}\n\t\t\t\t  \n                  update_option($this->db_option, $options);\n                  \n\t\t\t\t  echo '<div class=\"updated fade\"><p>Plugin settings saved.</p></div>';\n\t\t\t\t  if(isset($_POST['defaultoverride'])) {\n\t\t\t\t\t$future = get_future_events();\n\t\t\t\t\t$fcount = sizeof($future);\n\t\t\t\t\t$templates = rsvpmaker_get_templates();\n\t\t\t\t\t$tcount = sizeof($templates);\n\t\t\t\t\t$future = array_merge($future,$templates);\n\t\t\t\t\tforeach($future as $event) {\n\t\t\t\t\t\tforeach($_POST['defaultoverride'] as $slug) {\n\t\t\t\t\t\t\t$dbslug = '_'.sanitize_text_field($slug);\n\t\t\t\t\t\t\tupdate_post_meta($event->ID, $dbslug, $options[$slug]);\n\t\t\t\t\t\t\t//printf('<p>updating %s %s %s</p>',$event->ID, $dbslug, $options[$slug]);\n\t\t\t\t\t\t}\t\t\t\t\t\t  \n\t\t\t\t\t}\n\t\t\t\tprintf('<p>Updating %s for %s events and %s templates',esc_html(implode(', ',$_POST['defaultoverride']), $fcount, $tcount ));  \n\t\t\t\t}\n\t\t\t  }\n              \n              // URL for form submit, equals our current page\n$action_url = admin_url('options-general.php?page=rsvpmaker-admin.php');\nglobal $wpdb;\n$defaulthour = (isset($options[\"defaulthour\"])) ? ( (int) $options[\"defaulthour\"]) : 19;\n$defaultmin = (isset($options[\"defaultmin\"])) ? ( (int) $options[\"defaultmin\"]) : 0;\n$houropt = $minopt =\"\";\n\nfor($i=0; $i < 24; $i++)\n\t{\n\t$selected = ($i == $defaulthour) ? ' selected=\"selected\" ' : '';\n\t$padded = ($i < 10) ? '0'.$i : $i;\n\tif($i == 0)\n\t\t$twelvehour = \"12 a.m.\";\n\telseif($i == 12)\n\t\t$twelvehour = \"12 p.m.\";\n\telseif($i > 12)\n\t\t$twelvehour = ($i - 12) .\" p.m.\";\n\telse\t\t\n\t\t$twelvehour = $i.\" a.m.\";\n\n\t$houropt .= sprintf('<option  value=\"%s\" %s>%s / %s:</option>',$padded,$selected,$twelvehour,$padded);\n\t}\n\nfor($i=0; $i < 60; $i += 5)\n\t{\n\t$selected = ($i == $defaultmin) ? ' selected=\"selected\" ' : '';\n\t$padded = ($i < 10) ? '0'.$i : $i;\n\t$minopt .= sprintf('<option  value=\"%s\" %s>%s</option>',$padded,$selected,$padded);\n\t}\n\nif(isset($_POST['timezone_string']))\n{\n\t$tz = sanitize_text_field($_POST['timezone_string']);\n\tupdate_option('timezone_string',$tz);\n\techo '<div class=\"notice notice-info\"><p>'. __('Timezone set to','rsvpmaker').' '.$tz.'</p></div>';\n}\n\n?>\n\n<div class=\"wrap\" style=\"max-width:950px !important;\">\n\n    <h2 class=\"rsvpmaker-nav-tab-wrapper nav-tab-wrapper\">\n      <a class=\"rsvpmaker-nav-tab nav-tab rsvpmaker-nav-tab-active nav-tab-active\" href=\"#calendar\"><?php esc_html_e('Calendar Settings','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#security\"><?php esc_html_e('Security','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#payments\"><?php esc_html_e('Payments','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#notification_email\"><?php esc_html_e('Email Server','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#email\"><?php esc_html_e('Mailing List','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#groupemail\"><?php esc_html_e('Group Email','rsvpmaker');?></a>\n      <a class=\"rsvpmaker-nav-tab nav-tab\" href=\"#rsvpforms\"><?php esc_html_e('RSVP Forms','rsvpmaker');?></a>\n    </h2>\n\n    <div id='sections' class=\"rsvpmaker\">\n    <section id=\"calendar\" class=\"rsvpmaker\">\n\t<?php\nif(!isset($_REQUEST['tab']))\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"calendar\" />\n<?php\t\n}\n?>\n<div style=\"float: right;\">\n<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\">\n<input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\">\n<input type=\"hidden\" name=\"hosted_button_id\" value=\"N6ZRF6V6H39Q8\">\n<input type=\"image\" src=\"https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" alt=\"PayPal - The safer, easier way to pay online!\">\n<img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\">\n</form>\n</div>\n\n\t<h2><?php esc_html_e('Calendar Options','rsvpmaker');?></h2>\n    \n    <?php\nif(file_exists(WP_PLUGIN_DIR.\"/rsvpmaker-custom.php\") )\n\techo \"<p><em>\".__('Note: This site also implements custom code in','rsvpmaker').' '.WP_PLUGIN_DIR.\"/rsvpmaker-custom.php.</em></p>\";\n\t?>\n    \n\t<div id=\"poststuff\" style=\"margin-top:10px;\">\n\n\t <div id=\"mainblock\" style=\"width:710px\">\n\t \n\t\t<div class=\"dbx-content\">\n\t\t \t<form name=\"caldendar_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n\t\t\t\t\t\n                    <input type=\"hidden\" name=\"submitted\" value=\"1\" /> \n\t\t\t\t\t<?php rsvpmaker_nonce(); ?>\n<?php\n//legacy feature\nif(!empty($options[\"default_content\"])) {\n?>\n<h3><?php esc_html_e('Default Content for Events (such as standard meeting location)','rsvpmaker'); ?>:</h3>\n<textarea name=\"option[default_content]\"  rows=\"5\" cols=\"80\" id=\"default_content\"><?php if(isset($options[\"default_content\"])) echo esc_html($options[\"default_content\"]);?></textarea>\n<br />\n<?php\n}\n?>\n<strong><?php esc_html_e('Default Time','rsvpmaker'); ?></strong><br /> <?php esc_html_e('Hour','rsvpmaker'); ?>: <select name=\"option[defaulthour]\"> \n<?php echo $houropt;?>\n</select> \n \n<?php esc_html_e('Minutes','rsvpmaker'); ?>: <select name=\"option[defaultmin]\"> \n<?php echo $minopt;?>\n</select>\n<br />\n<?php echo __('See also','rsvpmaker') . ' <a href=\"'.admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list').'\">'.__('Event Templates','rsvpmaker').'</a> '.__('for events held an a recurring schedule.','rsvpmaker'); ?><br />\n<input type=\"checkbox\" name=\"option[autorenew]\" value=\"1\" <?php if(isset($options[\"autorenew\"]) && $options[\"autorenew\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Autorenew Events from Template','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?> - <?php esc_html_e('means new events are automatically added according to the schedule set in the template.','rsvpmaker');?>\n<br />\n<strong><?php esc_html_e('RSVP TO','rsvpmaker'); ?>:</strong><br />\n<input type=\"radio\" name=\"option[rsvp_to_current]\" value=\"0\" <?php if(!isset($options[\"rsvp_to_current\"]) || ! $options[\"rsvp_to_current\"] ) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Use this address','rsvpmaker'); ?></strong>: \n<input type=\"text\" name=\"option[rsvp_to]\" id=\"rsvp_to\" value=\"<?php if(isset($options[\"rsvp_to\"])) echo esc_attr($options[\"rsvp_to\"]);?>\" /><br />\n<input type=\"radio\" name=\"option[rsvp_to_current]\" value=\"1\" <?php if(isset($options[\"rsvp_to_current\"]) && $options[\"rsvp_to_current\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Use email of current user (event author)','rsvpmaker'); ?></strong>\n<br />\n<br />\n<input type=\"checkbox\" name=\"option[rsvp_on]\" value=\"1\" <?php if(isset($options[\"rsvp_on\"]) && $options[\"rsvp_on\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVP On','rsvpmaker'); ?></strong>\n<?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\t<br />    \n\n<input type=\"checkbox\" name=\"option[rsvp_captcha]\" value=\"1\" <?php if(isset($options[\"rsvp_captcha\"]) && $options[\"rsvp_captcha\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVP CAPTCHA On','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?><br />\n<?php\nif(function_exists('rsvpmaker_recaptcha_output'))\n{\n?>\n<strong>Or use Google ReCaptcha (v2) </strong> <a href=\"https://www.google.com/recaptcha/admin\" target=\"_blank\">register</a><br />\nReCaptcha (v2) Site Key: <input type=\"text\" name=\"option[rsvp_recaptcha_site_key]\" value=\"<?php if(isset($options[\"rsvp_recaptcha_site_key\"]) && $options[\"rsvp_recaptcha_site_key\"]) echo esc_attr($options[\"rsvp_recaptcha_site_key\"]);?>\"><br />\nReCaptcha (v2) Secret: <input type=\"text\" name=\"option[rsvp_recaptcha_secret]\" value=\"<?php if(isset($options[\"rsvp_recaptcha_site_key\"]) && $options[\"rsvp_recaptcha_secret\"]) echo esc_attr($options[\"rsvp_recaptcha_secret\"]);?>\"><br />\n<?php\n}\n?>\n<input type=\"checkbox\" name=\"option[login_required]\" value=\"1\" <?php if(isset($options[\"login_required\"]) && $options[\"login_required\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Login Required to RSVP','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n<br />\n\n  <input type=\"checkbox\" name=\"option[show_attendees]\" value=\"1\" <?php if(isset($options[\"show_attendees\"]) && $options[\"show_attendees\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVPs Attendees List Public','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n\t<br />\n\n  <input type=\"checkbox\" name=\"option[rsvp_count]\" value=\"1\" <?php if(isset($options[\"rsvp_count\"]) && $options[\"rsvp_count\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show RSVP Count','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n\t<br />\n\n  <input type=\"checkbox\" name=\"option[rsvp_yesno]\" value=\"1\" <?php if(isset($options[\"rsvp_yesno\"]) && $options[\"rsvp_yesno\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show RSVP Yes/No Radio Buttons','rsvpmaker'); ?></strong> <?php esc_html_e('check to turn on by default','rsvpmaker'); ?>\n\t<br />\n\n  <input type=\"checkbox\" name=\"option[calendar_icons]\" value=\"1\" <?php if(isset($options[\"calendar_icons\"]) && $options[\"calendar_icons\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?></strong> \n\t<br />\n\n  <input type=\"checkbox\" name=\"option[convert_timezone]\" value=\"1\" <?php if(isset($options[\"convert_timezone\"]) && $options[\"convert_timezone\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?></strong> \n\t<br />\n\n<input type=\"checkbox\" name=\"option[add_timezone]\" value=\"1\" <?php if(isset($options[\"add_timezone\"]) && $options[\"add_timezone\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); ?></strong> \n\t<br />\n\n  <input type=\"checkbox\" name=\"option[social_title_date]\" value=\"1\" <?php if(isset($options[\"social_title_date\"]) && $options[\"social_title_date\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Include date with title shown on Facebook/Twitter previews (og:title and twitter:title metatags)','rsvpmaker'); ?></strong> \n\t<br />\n\n  <input type=\"checkbox\" name=\"option[missing_members]\" value=\"1\" <?php if(isset($options[\"missing_members\"]) && $options[\"missing_members\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('RSVP Form Shows Members Not Responding','rsvpmaker'); ?></strong><br /><em><?php esc_html_e('if members log in to RSVP, this shows user accounts NOT associated with an RSVP (tracking WordPress user IDs)','rsvpmaker'); ?>.</em>\n\t<br />\n\n\t\t\t\t\t<h3><?php esc_html_e('Instructions for Form','rsvpmaker'); ?>:</h3>\n  <textarea name=\"option[rsvp_instructions]\"  rows=\"5\" cols=\"80\" id=\"rsvp_instructions\"><?php if(isset($options[\"rsvp_instructions\"]) ) echo esc_textarea($options[\"rsvp_instructions\"]);?></textarea>\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('Confirmation Message','rsvpmaker'); ?>:</h3>\n<?php\n$confirm = get_post($options['rsvp_confirm']);\necho (strpos($confirm->post_content,'</p>')) ? $confirm->post_content : wpautop($confirm->post_content);\n$confedit = admin_url('post.php?action=edit&post='.$confirm->ID);\nprintf('<div id=\"editconfirmation\"><a target=\"_blank\" href=\"%s\">'.__('Edit','rsvpmaker').'</a></div>',$confedit);\t\t\t\t\n?>\n<br />\n <input type=\"checkbox\" name=\"option[rsvpmaker_send_confirmation_email]\" id=\"rsvpmaker_send_confirmation_email\" <?php if( isset($options[\"rsvpmaker_send_confirmation_email\"]) && $options[\"rsvpmaker_send_confirmation_email\"] ) echo ' checked=\"checked\" ' ?> > <?php esc_html_e('Send confirmation emails','rsvpmaker'); ?> <input type=\"checkbox\" name=\"option[confirmation_include_event]\" id=\"rsvp_confirmation_include_event\" <?php if( isset($options[\"confirmation_include_event\"]) && $options[\"confirmation_include_event\"] ) echo ' checked=\"checked\" ' ?> > <?php esc_html_e('Include event listing with confirmation and reminders','rsvpmaker'); ?>\n\t<br />\n<?php\nif(isset($options[\"rsvp_form\"]) && is_numeric($options[\"rsvp_form\"]))\n{\necho '<h3>Default RSVP Form</h3>';\n$fpost = get_post($options[\"rsvp_form\"]);\nif(empty($fpost))\n\t{\n\t$options[\"rsvp_form\"] = upgrade_rsvpform();\n\t$fpost = get_post($options[\"rsvp_form\"]);\n\t}\necho rsvpmaker_form_summary($fpost);\n$edit = admin_url('post.php?action=edit&post='.$options[\"rsvp_form\"]);\nprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\nprintf('<div><a style=\"display: block; margin-top: 15px; color: red;\" href=\"%s\">%s</a></div>',admin_url('options-general.php?page=rsvpmaker-admin.php&rsvp_form_reset='. (int) $options['rsvp_form']),__('Reset Form to Default','rsvpmaker'));\nprintf('<div>%s <a href=\"%s\">%s</a></div>',__('For alternative forms, see ','rsvpmaker'),admin_url('options-general.php?page=rsvpmaker-admin.php&tab=rsvpforms'), __('RSVP Forms tab','rsvpmaker'));\n}\nelse\n{\n?>\n<h3><?php esc_html_e('RSVP Form','rsvpmaker'); ?> (<a href=\"#\" id=\"enlarge\"><?php esc_html_e('Enlarge','rsvpmaker'); ?></a>):</h3>\n  <textarea name=\"option[rsvp_form]\"  rows=\"5\" cols=\"80\" id=\"rsvpform\"><?php if( isset($options[\"rsvp_form\"]) ) echo htmlentities($options[\"rsvp_form\"]);?></textarea>\n<br /><button id=\"create-form\">Generate Form</button> or <a href=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php&reset_form=1'); ?>\"><?php esc_html_e('Reset to default','rsvpmaker'); ?></a>\n<br /><?php esc_html_e(\"This is a customizable template for the RSVP form, introduced as part of the Aug. 2012 update. With the exception of the yes/no radio buttons and the notes textarea, fields are represented by the shortcodes [rsvpfield textfield=&quot;fieldname&quot;] or [rsvpfield selectfield=&quot;fieldname&quot; options=&quot;option1,option2&quot;]. There is also a [rsvpprofiletable show_if_empty=&quot;phone&quot;] shortcode which is an optional block that will not be displayed if the required details (such as a phone number) are already &quot;on file&quot; from a prior RSVP. For this to work, there must also be a [/rsvpprofiletable] closing tag. The guest section of the form is represented by [rsvpguests] (no parameters). If you don't want the guest blanks to show up, you can remove this. The form code you supply will be wrapped in a form tag with the CSS ID of\",'rsvpmaker'); ?> &quot;rsvpform&quot;.\n<script>\njQuery('#enlarge').click(function() {\n  jQuery('#rsvpform').attr('rows','40');\n  return false;\n});\n</script>\n<?php\nrsvp_form_setup_form($options[\"rsvp_form\"]);\n}\n?>\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('RSVP Link','rsvpmaker'); ?>:</h3>\n\n  <textarea name=\"option[rsvplink]\"  rows=\"5\" cols=\"80\" id=\"rsvplink\"><?php if(isset($options[\"rsvplink\"]) ) echo wp_kses_post($options[\"rsvplink\"]);?></textarea>\n\t<br />Example:\n<?php if(isset($options[\"rsvplink\"]) ) echo wp_kses_post($options[\"rsvplink\"]);?>\n<h3><?php esc_html_e('Label for Updates','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[update_rsvp]\"  rows=\"5\" cols=\"80\" id=\"update_rsvp\" value=\"<?php if(isset($options[\"update_rsvp\"]) ) echo esc_attr($options[\"update_rsvp\"]);?>\" />\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('RSVP Form Title','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[rsvp_form_title]\"  rows=\"5\" cols=\"80\" id=\"rsvp_form_title\" value=\"<?php if(isset($options[\"rsvp_form_title\"]) ) echo esc_attr($options[\"rsvp_form_title\"]);?>\" />\n\t<br />\n<h3 id=\"privacy_consent\"><?php esc_html_e('Privacy Consent','rsvpmaker'); ?>:</h3>\n\t\t\t\t<p>For compliance with the European Union's General Data Protection Regulation (GDPR) and other data privacy and security regulations, you can add a checkbox to your form requiring the user to agree to your privacy policy. WordPress 4.9.6 added a privacy policy tool, and you can consult the <a href=\"https://rsvpmaker.com/privacy-policy/#rsvpmaker\">rsvpmaker.com privacy policy</a> for suggested language about the use of this plugin. RSVPMaker also hooks into the WordPress tools for exporting or deleting a user's information on demand. See the <a href=\"https://rsvpmaker.com/blog/2018/05/20/control-of-personal-data-gdpr-compliance/\">blog post</a>.</p>\n\t\t\t\t<?php \n\t\t\t  \t$privacy_page = rsvpmaker_check_privacy_page();\n\t\t\t  if($privacy_page)\n\t\t\t  {\n\t\t\t\t  $privacy_url = get_permalink($privacy_page);\n?>\n\t\t\t\t<p><input type=\"radio\" name=\"option[privacy_confirmation]\" value=\"1\" <?php if(!empty($options[\"privacy_confirmation\"]) && ($options[\"privacy_confirmation\"]) ) echo 'checked=\"checked\"'; ?> /> Yes <input type=\"radio\" name=\"option[privacy_confirmation]\" value=\"no\" <?php if(empty($options[\"privacy_confirmation\"]) || ($options[\"privacy_confirmation\"] == 'no')) echo 'checked=\"checked\"'; ?> /> <?php esc_html_e('No - Add checkbox?','rsvpmaker');?></p>\n\t\t\t\t<p><textarea name=\"option[privacy_confirmation_message]\" style=\"width: 95%\"><?php if(empty($options['privacy_confirmation_message'])) printf('I consent to the <a target=\"_blank\" href=\"%s\">privacy policy</a> site of this site for purposes of follow up to this registration.',$privacy_url); else echo wp_kses_post($options['privacy_confirmation_message']); ?></textarea></p>\n<?php\t\t\t\t  \n\t\t\t  }\n\t\t\t  else\n\t\t\t  \techo'<p>'.__('First, you must register a privacy page with WordPress','rsvpmaker').': <a href=\"'.admin_url('options-privacy.php').'\">'.admin_url('options-privacy.php').'</a></p>';\n\t\t\t  \n\t\t\t\t?>\n\t\t\t\t\n\t\t\t<h3><?php esc_html_e('Date Format (long)','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[long_date]\"  id=\"long_date\" value=\"<?php if(isset($options[\"long_date\"]) ) echo esc_attr($options[\"long_date\"]);?>\" /> (used at the top of event listings)\n\t<br />\n\t\t\t\t\t<h3><?php esc_html_e('Date Format (short)','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[short_date]\"  id=\"short_date\" value=\"<?php if(isset($options[\"short_date\"]) ) echo esc_attr($options[\"short_date\"]);?>\" /> (used in headlines for event_listing shortcode, also sidebar widget)\n\t\n<br />For reference, see PHP <a target=\"_blank\" href=\"https://www.php.net/manual/en/datetime.format.php\">date format strings</a>\n<br />Examples:<br />\n<?php\necho 'l F j, Y = '.rsvpmaker_date('l F j, Y').'<br />'; \necho 'j F Y = '.rsvpmaker_date('j F Y').'<br />'; \necho 'm-d-Y = '.rsvpmaker_date('m-d-Y').'<br />'; \n?>\n<br />\n<h3><?php esc_html_e('Time Format','rsvpmaker'); ?>:</h3>\n<p>\n<input type=\"radio\" name=\"option[time_format]\" value=\"g:i A\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"g:i A\")) echo ' checked=\"checked\"';?> /> 12 hour AM/PM \n<input type=\"radio\" name=\"option[time_format]\" value=\"H:i\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"H:i\")) echo ' checked=\"checked\"';?> /> 24 hour \n\n<input type=\"radio\" name=\"option[time_format]\" value=\"g:i A T\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"g:i A T\")) echo ' checked=\"checked\"';?> /> 12 hour AM/PM (include timezone)\n<input type=\"radio\" name=\"option[time_format]\" value=\"H:i T\" <?php if( isset($options[\"time_format\"]) && ($options[\"time_format\"] == \"H:i T\")) echo ' checked=\"checked\"';?> /> 24 hour (include timezone)\n\n<br />\n\t\t\t\t\t<h3><?php esc_html_e('Event Page','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[eventpage]\" value=\"<?php if(isset($options[\"eventpage\"]))  echo esc_attr($options[\"eventpage\"]);?>\" size=\"80\" />\n\n<br /><h3><?php esc_html_e('Custom CSS','rsvpmaker'); ?>:</h3>\n  <input type=\"text\" name=\"option[custom_css]\" value=\"<?php if(isset($options[\"custom_css\"]) ) echo esc_attr($options[\"custom_css\"]);?>\" size=\"80\" />\n<?php\nif(isset($options[\"custom_css\"]) && $options[\"custom_css\"])\n\t{\n\n\t\t$file_headers = @get_headers($options[\"custom_css\"]);\n\t\tif($file_headers[0] == 'HTTP/1.1 404 Not Found') {\n\t\t\techo ' <span style=\"color: red;\">'.__('Error: CSS not found','rsvpmaker').'</span>';\n\t\t}\n\t\telse {\n\t\t\techo ' <span style=\"color: green;\">'.__('OK','rsvpmaker').'</span>';\n\t\t}\n\n\t}\n$dstyle = plugins_url('style.css',__FILE__);\n?>\n\n\t<br /><em><?php esc_html_e('Allows you to override the standard styles from','rsvpmaker'); ?> <br /><a href=\"<?php echo esc_attr($dstyle);?>\"><?php echo esc_html($dstyle);?></a></em>\n\t<br /><em><?php esc_html_e('Probably a better option: use the Customize utility built into WordPress to override the defaults','rsvpmaker'); ?></em>\n<h3><?php esc_html_e('Theme Template for Events'); ?></h3>\n<br /><select name=\"option[rsvp_template]\"><?php\n$current_template = (empty($options[\"rsvp_template\"])) ? 'page.php' : $options[\"rsvp_template\"];\n$templates = get_page_templates();\n$templates['Page'] = 'page.php';\n$templates['Single'] = 'single.php';\nforeach($templates as $tname => $tfile)\n\t{\n\t$s = ($tfile == $current_template) ? ' selected=\"selected\" ' : '';\n\tprintf('<option value=\"%s\" %s>%s</option>',$tfile,$s,$tname);\n\t}\n?></select> <br /><em><?php esc_html_e('Template from your theme to be used in the absence of a single-rsvpmaker.php file.','rsvpmaker'); ?></em>\n\n\n<h3><?php esc_html_e('Dashboard','rsvpmaker');?></h3>\n<select name=\"option[dashboard]\">\n<option value=\"\"><?php esc_html_e('No Widget','rsvpmaker');?></option>\n<option value=\"show\" <?php if(isset($options[\"dashboard\"]) && ($options[\"dashboard\"] == 'show')) echo ' selected=\"selected\" '; ?> ><?php esc_html_e('Show Widget','rsvpmaker');?></option>\n<option value=\"top\" <?php if(isset($options[\"dashboard\"]) && ($options[\"dashboard\"] == 'top')) echo ' selected=\"selected\" '; ?> ><?php esc_html_e('Show Widget on Top','rsvpmaker');?></option>\n</select>\n<br /><?php esc_html_e('Note','rsvpmaker'); ?>\n<br />\n<textarea name=\"option[dashboard_message]\" style=\"width:90%;\"><?php echo esc_html($options[\"dashboard_message\"]); ?></textarea>\n\n<h3><?php esc_html_e('Event Submissions','rsvpmaker'); ?></h3>\n<p>Notify <input style=\"width: 90%\" type=\"text\" name=\"option[submissions_to]\" id=\"rsvp_to\" value=\"<?php if(isset($options[\"submissions_to\"])) echo esc_attr($options[\"submissions_to\"]); elseif(isset($options[\"rsvp_to\"])) echo esc_attr($options[\"rsvp_to\"]);?>\" />\n<br />Attribute to <?php $submission_author = (isset($options['submission_author'])) ? $options['submission_author'] : 1; wp_dropdown_users(array('name' => 'option[submission_author]','selected' => $submission_author)); ?>\n</p>\n<p>To accept event submissions on the front end of your website, include the RSVPMaker Event Submission block or [rsvpmaker_submission] shortcode. Submissions are saved as drafts for an editor's approval.</p>\n\n<h3><?php esc_html_e('Apply to Existing Events','rsvpmaker'); ?></h3>\n<p>Check here if you want any of the following variables to be applied to existing events and event templates (will override any customizations).</p>\n<p><input  type=\"checkbox\"  name=\"defaultoverride[]\" value=\"rsvp_on\" /> Collect RSVPs <input type=\"checkbox\" name=\"defaultoverride[]\" value=\"rsvp_form\" /> Form <input type=\"checkbox\" name=\"defaultoverride[]\" value=\"rsvp_confirm\" /> Confirmation Message </p>\n\n<h3><?php esc_html_e('Troubleshooting and Logging','rsvpmaker'); ?></h3>\n  <input type=\"checkbox\" name=\"option[debug]\" value=\"1\" <?php if(isset($options[\"debug\"]) && $options[\"debug\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Debug and log. Log messages will be saved in the uploads directory with file names in the pattern rsvpmaker_log_2018-01-01.txt','rsvpmaker'); ?></strong>\n\t<br />\n  <input type=\"checkbox\" name=\"option[log_email]\" value=\"1\" <?php if(isset($options[\"log_email\"]) && $options[\"log_email\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Log email','rsvpmaker'); ?>: Monitor notification/confirmation messages generated</strong>\n\t<br />\n\t\t\t  <div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n\t\t\t</form>\n\n\t    </div>\n\t\t\n\t </div>\n\n\t</div>\n\n</section>\n<section id=\"security\" class=\"rsvpmaker\">\n<form name=\"rsvpmaker_security_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<h3><?php esc_html_e('Menu Security','rsvpmaker'); ?>:</h3>\n<?php\nrsvpmaker_menu_security( __(\"RSVP Report\",'rsvpmaker'),  \"menu_security\", $options );\nrsvpmaker_menu_security(__(\"Event Templates\",'rsvpmaker'),\"rsvpmaker_template\",$options );\nrsvpmaker_menu_security( __(\"Recurring Event\",'rsvpmaker'), \"recurring_event\", $options );\nrsvpmaker_menu_security( __(\"Multiple Events\",'rsvpmaker'), \"multiple_events\",$options );\nrsvpmaker_menu_security( __(\"Documentation\",'rsvpmaker'), \"documentation\",$options );\n?>\n<p><em><?php esc_html_e('Security level required to access custom menus (RSVP Report, Documentation)','rsvpmaker'); ?></em></p>\n<h3><?php esc_html_e('Additional Editors / Co-Authors','rsvpmaker'); ?></h3>\n  <input type=\"checkbox\" name=\"security_option[additional_editors]\" value=\"1\" <?php if(isset($options[\"additional_editors\"]) && $options[\"additional_editors\"]) echo ' checked=\"checked\" ';?> /> <strong><?php esc_html_e('Additional Editors','rsvpmaker'); ?></strong> <em><?php esc_html_e('Allow users to share editing rights for event templates and related events.','rsvpmaker'); ?></em>\n\t<p><strong>How this works: </strong> When this function is enabled, event authors have the option of allowing other users to be additional editors or co-authors for an event or a series of events based  on a template. This is useful for community websites where multiple organizations post their events. The organization can appoint multiple officers or representatives to have equal rights to update the events template for their meetings and all the individual events based on that template.</p>\n\t<p>Note that to unlock events for editing, RSVPMaker changes the author ID for a post to the ID of the authorized user editing the post.</p>\t\t\t\t\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'security')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"security\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"security\">\n\t\t\t\t \t\t\t\t \t\t\t\t\n<div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n\t</form>\n</section>\n<section id=\"payments\" class=\"rsvpmaker\">\n<?php do_action('rsvpmaker_payments_setting_top'); ?>\n<form name=\"rsvpmaker_payment_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<h1>Online Payments</h1>\n<p>If you wish to collect online payments, please set up API access to the payment gateway of your choice.</p>\n<?php do_action('rsvpmaker_payment_settings'); ?>\n<h3><?php esc_html_e('Track RSVP as &quot;invoice&quot; number','rsvpmaker'); ?>:</h3>\n<div>\n<input type=\"radio\" name=\"payment_option[paypal_invoiceno]\" value =\"1\" <?php if($options[\"paypal_invoiceno\"]) echo ' checked=\"checked\" ' ?> /> Yes\n\t<input type=\"radio\" name=\"payment_option[paypal_invoiceno]\" value =\"0\" <?php if(!$options[\"paypal_invoiceno\"]) echo ' checked=\"checked\" ' ?> /> No</div>\n\t<div><em><?php esc_html_e('Must be enabled for RSVPMaker to track payments','rsvpmaker'); ?></em></div>\n<h3><?php esc_html_e('Send Payment Reminder','rsvpmaker'); ?>:</h3>\n<div>\n<input type=\"radio\" name=\"payment_option[send_payment_reminders]\" value =\"1\" <?php if($options[\"send_payment_reminders\"]) echo ' checked=\"checked\" ' ?> /> Yes\n\t<input type=\"radio\" name=\"payment_option[send_payment_reminders]\" value =\"0\" <?php if(!$options[\"send_payment_reminders\"]) echo ' checked=\"checked\" ' ?> /> No</div>\n\t<div><em><?php esc_html_e('If someone RSVPs but does not pay, send an email reminder that their registration is not complete without payment.','rsvpmaker'); ?></em></div>\n\n<h3><?php esc_html_e('Payment Currency','rsvpmaker'); ?>:</h3>\n<div><input type=\"text\" name=\"payment_option[paypal_currency]\" value=\"<?php if(isset($options[\"paypal_currency\"])) echo esc_attr($options[\"paypal_currency\"]);?>\" size=\"5\" /> <a href=\"https://cms.paypal.com/us/cgi-bin/?cmd=_render-content&content_ID=developer/e_howto_api_nvp_currency_codes\">(list of codes)</a>\n\n<select name=\"currency_format\">\n<option value=\"<?php if(isset($options[\"currency_decimal\"]) ) echo esc_attr($options[\"currency_decimal\"]);?>|<?php if(isset($options[\"currency_thousands\"])) echo esc_attr($options[\"currency_thousands\"]);?>\"><?php echo esc_attr(number_format(1000.00, 2, $options[\"currency_decimal\"], $options[\"currency_thousands\"])); ?></option>\n<option value=\".|,\"><?php echo esc_html(number_format(1000.00, 2, '.',  ',')); ?></option>\n<option value=\",|.\"><?php echo esc_html(number_format(1000.00, 2, ',',  '.')); ?></option>\n<option value=\",| \"><?php echo esc_html(number_format(1000.00, 2, ',',  ' ')); ?></option>\n</select>    \n</div>\n\n<h3><?php esc_html_e('Minimum Amount','rsvpmaker'); ?>:</h3>\n<div><input type=\"text\" name=\"payment_option[payment_minimum]\" value=\"<?php if(isset($options[\"payment_minimum\"])) {echo esc_attr($options[\"payment_minimum\"]);} else echo '5.00';?>\" size=\"5\" /> <br /><em><?php _e('Prevents fraudulent uses such as $1 donations to test stolen cards','rsvpmaker'); ?></em>\n</div>\n\n<h3>PayPal (REST API)</h3>\n<p><?php esc_html_e('Keys may be obtained from','rsvpmaker'); ?> <a target=\"_blank\" href=\"https://developer.paypal.com/developer/applications\">developer.paypal.com/developer/applications/</a></p>\n<?php\n$test_keys = sprintf(' <a href=\"%s\">%s</a> ',admin_url('options-general.php?page=rsvpmaker-admin.php&payment_key_test=1'),__('Test Keys','rsvpmaker'));\n$pp_on = false;\n$paypal_rest_keys = get_option('rsvpmaker_paypal_rest_keys');\nif(empty($paypal_rest_keys))\n\t$paypal_rest_keys = array('client_id' => '','client_secret' => '','sandbox_client_id' => '','sandbox_client_secret' => '');\n$checkboxes = (empty($paypal_rest_keys['sandbox'])) ? '<input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"1\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"0\" checked=\"checked\" /> Production' : '<input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"1\"  checked=\"checked\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_paypal_rest_keys[sandbox]\" value=\"0\" /> Production';\nif(!empty($paypal_rest_keys['client_id']) && !empty($paypal_rest_keys['client_secret']))\n{\n\t$pp_on = true;\n?>\n<div id=\"paypal_production\"><?php esc_html_e('Production keys set','rsvpmaker'); echo ' '.  $test_keys; ?> <p><button id=\"reset_paypal_production\"><?php esc_html_e('Reset PayPal','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse\n{\n?>\n<p>Client ID (Production):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[client_id]\"  class=\"paypal_keys\" value=\"<?php echo esc_attr($paypal_rest_keys['client_id']); ?>\"></p>\n<p>Client Secret (Production):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[client_secret]\" class=\"paypal_keys\"  value=\"<?php echo esc_attr($paypal_rest_keys['client_secret']); ?>\"></p>\n<?php\n}\nif(!empty($paypal_rest_keys['sandbox_client_id']) && !empty($paypal_rest_keys['sandbox_client_secret']))\n{\n\t$pp_on = true;\n?>\n<div id=\"paypal_sandbox\"><?php esc_html_e('Sandbox keys set','rsvpmaker'); echo ' '.$test_keys; ?> <p><button id=\"reset_paypal_sandbox\"><?php esc_html_e('Reset PayPal Sandbox','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse {\n?>\n<p>Client ID (Sandbox):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[sandbox_client_id]\"  class=\"paypal_keys\" value=\"<?php echo esc_attr($paypal_rest_keys['sandbox_client_id']); ?>\"></p>\n<p>Client Secret (Sandbox):<br />\n<input name=\"rsvpmaker_paypal_rest_keys[sandbox_client_secret]\"  class=\"paypal_keys\" value=\"<?php echo esc_attr($paypal_rest_keys['sandbox_client_secret']); ?>\"></p>\n<?php\n}\n\n?>\n<p>Operating Mode: <?php echo $checkboxes; ?></p>\n\n<h3>Stripe</h3>\n<p><?php esc_html_e('Keys may be obtained from','rsvpmaker'); ?> <a target=\"_blank\" href=\"https://dashboard.stripe.com/apikeys\">dashboard.stripe.com/apikeys</a></p>\n<?php \n$stripe_on = false;\n$stripe_keys = get_rsvpmaker_stripe_keys_all (); \n$checkboxes = ($stripe_keys['mode'] == 'production') ? '<input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"sandbox\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"production\" checked=\"checked\" /> Production' : '<input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"sandbox\"  checked=\"checked\" /> Sandbox <input type=\"radio\" name=\"rsvpmaker_stripe_keys[mode]\" value=\"production\" /> Production';\nif(!empty($stripe_keys['pk']) && !empty($stripe_keys['sk']))\n{\n$stripe_on = true;\n?>\n<div id=\"stripe_production\"><?php esc_html_e('Production keys set','rsvpmaker'); echo ' '.$test_keys; ?> <p><button id=\"reset_stripe_production\"><?php esc_html_e('Reset Stripe','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse\n{\n?>\n<p>Publishable Key (Production):<br />\n\t<input name=\"rsvpmaker_stripe_keys[pk]\"  class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['pk']); ?>\"></p>\n<p>Secret Key (Production):<br />\n\t<input name=\"rsvpmaker_stripe_keys[sk]\"  class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['sk']);  ?>\"></p>\n<?php\t\n}\nif(!empty($stripe_keys['sandbox_pk']) && !empty($stripe_keys['sandbox_sk']))\n{\n$stripe_on =true;\n?>\n<div id=\"stripe_sandbox\"><?php esc_html_e('Sandbox keys set','rsvpmaker'); echo ' '.$test_keys; ?> <p><button id=\"reset_stripe_sandbox\"><?php esc_html_e('Reset Stripe Sandbox','rsvpmaker'); ?></button></p></div>\n<?php\n}\nelse\n{\n?>\n<p>Publishable Key (Sandbox):<br />\n<input name=\"rsvpmaker_stripe_keys[sandbox_pk]\"  class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['sandbox_pk']); ?>\"></p>\n<p>Secret Key (Sandbox):<br />\n<input name=\"rsvpmaker_stripe_keys[sandbox_sk]\" class=\"stripe_keys\" value=\"<?php echo esc_attr($stripe_keys['sandbox_sk']);  ?>\"></p>\n<?php\n}\n?>\n<p>Notification Email for Stripe (optional):<br />\n\t<input name=\"rsvpmaker_stripe_keys[notify]\" value=\"<?php echo esc_attr($stripe_keys['notify']); ?>\"></p>\t\n<p>Operating Mode: <?php echo $checkboxes; ?></p>\n\t<?php\nif (class_exists('Stripe_Checkout_Functions'))\n\t{\n\techo '<h3>'.__('WP Simple Pay Lite for Stripe plugin detected','rsvpmaker').'</h3>';\n\tprintf('<div>Use WP Simple Pay <select name=\"stripe\"><option value =\"1\" %s>Yes</option><option value =\"0\" %s>No</option></select></div>', ((!empty($options[\"stripe\"])) ? 'selected=\"selected\"' : ''), ((empty($options[\"stripe\"])) ? 'selected=\"selected\"' : '') );\n\techo '<div><em>'.__('Note: RSVPMaker now includes its own independent support for Stripe. You can enter the API keys below.').'</em></div>';\n\t}\n\n?>\n<p><?php echo __('Developers also have the option of hooking into the \"rsvpmaker_cash_or_custom\" action hook (<a href=\"https://rsvpmaker.com/blog/2017/10/18/custom-payment-gateway/\" target=\"_blank\">documentation</a>)','rsvpmaker'); ?></p>\n\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'payments')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"payments\" />\n<?php\t\n}\n$gateways = get_rsvpmaker_payment_options ();\n$chosen_gateway = get_rsvpmaker_payment_gateway ();\n$o = '';\nforeach($gateways as $gateway)\n\t{\n\t\t$s = ($chosen_gateway == $gateway) ? ' selected=\"selected\" ' : '';\n\t\t$o .= sprintf('<option %s value=\"%s\">%s</option>',$s,$gateway,$gateway);\n\t}\n?>\n<input type=\"hidden\" id=\"paypal_on\" value=\"<?php echo $pp_on; ?>\">\n<input  type=\"hidden\"  id=\"stripe_on\" value=\"<?php echo $stripe_on; ?>\">\n<h3><?php esc_html_e('Preferred Payment Gateway','rsvpmaker');?></h3>\n<p><select id=\"payment_gateway\" name=\"payment_option[payment_gateway]\"><?php echo $o; ?></select></p>\n<?php\necho default_gateway_check($chosen_gateway);\n?>\n<p><em><?php esc_html_e('If you have set up more than one, specify the one to be used by default.','rsvpmaker');?></em></p>\n\n<input type=\"hidden\" name=\"tab\" value=\"payments\">\n\n<div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n</form>\n\n</section>\n<section id=\"notification_email\" class=\"rsvpmaker\">\n<form name=\"notify_options\" action=\"<?php echo esc_attr($action_url);?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<?php do_action('rsvpmaker_email_settings'); ?>\n<p><?php esc_html_e('These settings are related to transactional emails, such as registration confirmation messages. If you are using another plugin that improves the delivery of other WordPress generated emails such as password resets, you may be able to leave these settings at their defaults.','rsvpmaker'); ?></p>\n\n<p>\n<?php esc_html_e('From Email Address for All Notifications','rsvpmaker'); ?><br />\n<input type=\"text\" name=\"enotify_option[from_always]\" value=\"<?php if(!empty($options[\"from_always\"])) echo esc_attr($options[\"from_always\"]); elseif(!empty($options[\"smtp_useremail\"])) echo esc_attr($options[\"smtp_useremail\"]);?>\" size=\"15\" />\n</p>\n<h3 id=\"smtp\"><?php esc_html_e('SMTP for Notifications','rsvpmaker'); ?></h3>\n<p><?php esc_html_e('For more reliable delivery of email notifications, enable delivery through the SMTP email protocol. Standard server parameters will be used for Gmail and the SendGrid service, or specify the server port number and security protocol','rsvpmaker'); ?>.</p>\n<p><?php esc_html_e('If you are using another plugin that improves the delivery of email notifications, such one of the <a href=\"https://wordpress.org/plugins/sendgrid-email-delivery-simplified/\">SendGrid plugin</a> (which uses the SendGrid API rather than SMTP), leave this set to \"None - use wp_mail().\"','rsvpmaker'); ?>.</p>\n  <select name=\"enotify_option[smtp]\" id=\"smtp\">\n  <option value=\"\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == '' )) {echo ' selected=\"selected\" ';}?> ><?php esc_html_e('None - use wp_mail()','rsvpmaker'); ?></option>\n  <option value=\"gmail\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == 'gmail')) {echo ' selected=\"selected\" ';}?> >Gmail</option>\n  <option value=\"sendgrid\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == 'sendgrid')) {echo ' selected=\"selected\" ';}?> >SendGrid (SMTP)</option>\n  <option value=\"other\" <?php if(isset($options[\"smtp\"]) && ($options[\"smtp\"] == 'other')) {echo ' selected=\"selected\" ';}?> ><?php esc_html_e('Other SMTP (specified below)','rsvpmaker'); ?></option>\n  </select>\n<br />\n<?php esc_html_e('Email Account for Notifications','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_useremail]\" value=\"<?php if(isset($options[\"smtp_useremail\"])) echo esc_attr($options[\"smtp_useremail\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('Email Username','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_username]\" value=\"<?php if(isset($options[\"smtp_username\"])) echo esc_attr($options[\"smtp_username\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('Email Password','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_password]\" value=\"<?php if(isset($options[\"smtp_password\"])) echo esc_attr($options[\"smtp_password\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('Server (parameters below not necessary if you specified Gmail or SendGrid)','rsvpmaker'); ?><br />\n<input type=\"text\" name=\"enotify_option[smtp_server]\" value=\"<?php if(isset($options[\"smtp_server\"])) echo esc_attr($options[\"smtp_server\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('SMTP Security Prefix (ssl or tls, leave blank for non-encrypted connections)','rsvpmaker'); ?> \n<br />\n<input type=\"text\" name=\"enotify_option[smtp_prefix]\" value=\"<?php if(isset($options[\"smtp_prefix\"])) echo esc_attr($options[\"smtp_prefix\"]);?>\" size=\"15\" />\n<br />\n<?php esc_html_e('SMTP Port','rsvpmaker'); ?>\n<br />\n<input type=\"text\" name=\"enotify_option[smtp_port]\" value=\"<?php if(isset($options[\"smtp_port\"])) echo esc_attr($options[\"smtp_port\"]);?>\" size=\"15\" />\n<br />\n\n<p><?php esc_html_e('See <a href=\"http://www.wpsitecare.com/gmail-smtp-settings/\">this article</a> for additional guidance on using Gmail (requires a tweak to security settings in your Google account). If you have trouble getting Gmail or ssl or tls connections to work, an unencrypted port 25 connection to an email account on the same server that hosts your website should be reasonably secure since no data will be passed over the network.','rsvpmaker');?></p>\n\n<?php \nif(!empty($options[\"smtp\"]))\n\t{\n?>\n<a href=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php&smtptest=1'); ?>\"><?php esc_html_e('Send SMTP Test to RSVP To address','rsvpmaker'); ?></a>\n<?php\n\t}\n?>\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'notification_email')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"notification_email\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"notification_email\">\n\n<div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker'); ?>\" /></div>\n</form>\n</section>\n<section id=\"email\" class=\"rsvpmaker\">\n\n<?php\nglobal $RSVPMaker_Email_Options;\nif(empty($RSVPMaker_Email_Options))\n$RSVPMaker_Email_Options = new RSVPMaker_Email_Options();\n$RSVPMaker_Email_Options->handle_options();\n?>\n\n    </section>\n<section id=\"groupemail\" class=\"rsvpmaker\">\n<form action=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php'); ?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<h2><?php esc_html_e('Group Email','rsvpmaker'); ?></h2>\n<?php\ndo_action('group_email_admin_notice');\n\necho '<p>'.__('Membership oriented websites can use this feature to relay messages from any member with a user account to all other members. Designed to work with POP3 email accounts. Members can unsubscribe.','rsvpmaker').'</p>';\n\n$hooksays = wp_get_schedule('rsvpmaker_relay_init_hook');\n\nif(isset($_POST['rsvpmaker_discussion_server']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\tupdate_option('rsvpmaker_discussion_server',sanitize_text_field($_POST['rsvpmaker_discussion_server']));\nif(isset($_POST['rsvpmaker_discussion_member']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_member'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_member',$newarray);\t\n}\nif(isset($_POST['rsvpmaker_discussion_officer']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_officer'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_officer',$newarray);\n}\nif(isset($_POST['rsvpmaker_discussion_extra']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_extra'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_extra',$newarray);\n}\nif(isset($_POST['rsvpmaker_discussion_bot']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t$newarray = array();\n\tforeach($_POST['rsvpmaker_discussion_bot'] as $index => $value)\n\t\t$newarray[$index] = sanitize_textarea_field($value);\n\tupdate_option('rsvpmaker_discussion_bot',$newarray);\n}\nif(isset($_POST['rsvpmaker_discussion_active']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\tupdate_option('rsvpmaker_discussion_active',(int) $_POST['rsvpmaker_discussion_active']);\n\tdeactivate_plugins('wp-mailster/wp-mailster.php',false,false);\n\tif(!wp_get_schedule('rsvpmaker_relay_init_hook')) {\n\t\twp_schedule_event( strtotime('+2 minutes'), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n\t\techo '<p>Activating rsvpmaker_relay_init_hook</p>';\n\t}\n}\nelseif(isset($_POST))\n\twp_unschedule_hook( 'rsvpmaker_relay_init_hook' );\n\n$active = (int) get_option('rsvpmaker_discussion_active');\n\n$server = get_option('rsvpmaker_discussion_server');\nif(empty($server))\n\t{\n\t$server = '{localhost:995/pop3/ssl/novalidate-cert}';\n\tupdate_option('rsvpmaker_discussion_server',$server);\n\t}\n$member = get_option('rsvpmaker_discussion_member');\n$officer = get_option('rsvpmaker_discussion_officer');\n\nif(is_plugin_active( 'wp-mailster/wp-mailster.php' ) )\n\t{\n\techo '<div style=\"border: thin dotted red; padding: 10px; margin: 5px;\">';\n\t\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"mailster_lists WHERE name LIKE 'Member%' \";\n\t\t$row = $wpdb->get_row($sql);\n\t\tif(!empty($row->list_mail) && empty($member) ){\n\t\t\t$member = array('user' => $row->list_mail,'password' => $row->mail_in_pw, 'subject_prefix' => 'Members:'.get_option('blogname'), 'whitelist' => '','additional_recipients' => '', 'blocked' => '');\n\t\t\tupdate_option('rsvpmaker_discussion_member',$member);\n\t\t\techo '<p>'.__('Importing Member List settings from WP Mailster','rsvpmaker').'</p>';\n\t\t}\n\t\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"mailster_lists WHERE name LIKE 'Officer%' \";\n\t\t$row = $wpdb->get_row($sql);\n\t\tif(!empty($row->list_mail) && empty($officer) ){\n\t\t\t$officer = array('user' => $row->list_mail,'password' => $row->mail_in_pw, 'subject_prefix' => 'Officers:'.get_option('blogname'), 'whitelist' => '','additional_recipients' => '', 'blocked' => '');\n\t\t\tupdate_option('rsvpmaker_discussion_officer',$officer);\n\t\t\techo '<p>'.__('Importing Officer List settings from WP Mailster','rsvpmaker').'</p>';\n\t\t}\n\techo '<p>'.__('If you activate this feature, WP Mailster will be deactivated','rsvpmaker').'</p>';\n\techo '</div>';\n\t}\n\necho rsvpmaker_relay_get_pop('member');\necho rsvpmaker_relay_get_pop('officer');\necho rsvpmaker_relay_get_pop('extra');\necho rsvpmaker_relay_get_pop('bot');\n\nprintf('<p><label>Activate</label> <input type=\"radio\" name=\"rsvpmaker_discussion_active\" value=\"1\" %s /> Yes <input type=\"radio\" name=\"rsvpmaker_discussion_active\" value=\"0\" %s /> No</p>',($active) ? ' checked=\"checked\" ' : '',(!$active) ? ' checked=\"checked\" ' : '');\n\nprintf('<p><label>Server</label> <input type=\"text\" name=\"rsvpmaker_discussion_server\" value=\"%s\" /></p>',esc_attr($server));\n\n$member = get_option('rsvpmaker_discussion_member');\nif(empty($member))\n\t$member = array('user' => '','password' => '','subject_prefix' => 'Members:'.get_option('blogname'), 'whitelist' => '', 'blocked' => '','additional_recipients' => '');\nprint_group_list_options('member', $member);\n\nif(is_plugin_active( 'rsvpmaker-for-toastmasters/rsvpmaker-for-toastmasters.php' ))\n{\n\t//officers section\n\t$officer = get_option('rsvpmaker_discussion_officer');\n\tif(empty($officer))\n\t\t$officer = array('user' => '','password' => '', 'subject_prefix' => 'Officer:'.get_option('blogname'),  'whitelist' => '', 'blocked' => '','additional_recipients' => '');\n\tprint_group_list_options('officer', $officer);\n}\n\n$extra = get_option('rsvpmaker_discussion_extra');\nif(empty($extra))\n\t$extra = array('user' => '','password' => '', 'subject_prefix' => '', 'whitelist' => get_option('admin_email'), 'blocked' => '','additional_recipients' => '');\nprint_group_list_options('extra', $extra);\necho '<p><em>'.__('Use for small custom distribution lists. Or use to forward an email you want to share to WordPress, then edit further with RSVP Mailer before sending.','rsvpmaker').'</em></p>';\n\n$bot = get_option('rsvpmaker_discussion_bot');\nif(empty($bot))\n\t$bot = array('user' => '','password' => '', 'subject_prefix' => '', 'whitelist' => get_option('admin_email'), 'blocked' => '','additional_recipients' => '');\nprint_group_list_options('bot', $bot);\necho '<p><em>'.__('Use for automations triggered by an email.','rsvpmaker').'</em></p>';\n\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'groupemail')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"groupemail\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"groupemail\">\n<button>Submit</button>\n</form>\n\n<h3>Using the Bot Account</h3>\n<p>Email sent to the bot account can be processed using a WordPress action where the email content is past in the form of post variables (subject as post_title, content as post_content). Example:</p>\n<pre>\nadd_action('rsvpmaker_autoreply','my_post_to_email',10,5);\nfunction my_post_to_email($email_as_post, $email_user, $from, $to, $fromname = '') {\n\t$myemail = 'mytrustedemail@gmail.com';\n\tif($from == $myemail) {\n\t$email_as_post['post_type'] = 'post';\n\t$email_as_post['post_status'] = 'draft';\n\t$id = wp_insert_post($email_as_post);\n\twp_mail($myemail,'Draft '.$id.' '.$email_as_post['post_title'],'Edit draft '.$id);\n\t}\n}\n</pre>\n\n</section>\n<section id=\"rsvpforms\" class=\"rsvpmaker\">\n<?php\nprintf('<p>%s</p>',__('Use this page to manage alternative RSVP Forms. Like the default form, any of these alternative forms can be customized for an event post or template. If you created a custom form that worked well, you can assign it a name so that it can be reused with other events and templates.','rsvpmaker'));\nprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><h3>%s</h3><p><label>%s</label> <input type=\"text\" name=\"rsvp_form_new\" value=\"\"></p><p><em>%s</em></p><p> %s</p></form>',admin_url('edit.php'),__('Create a Reusable RSVP Form','rsvpmaker'),__('Label','rsvpmaker'),__('A form will be created with a sampling of input fields you can copy, modify, or delete to create a form that meets your needs.','rsvpmaker'),get_submit_button('Create'));\n$forms = rsvpmaker_get_forms();\necho '<h3>Default Form</h3>';\n$fpost = get_post($options[\"rsvp_form\"]);\nif(empty($fpost))\n\t{\n\t$options[\"rsvp_form\"] = upgrade_rsvpform();\n\t$fpost = get_post($options[\"rsvp_form\"]);\n\t}\necho rsvpmaker_form_summary($fpost);\n$edit = admin_url('post.php?action=edit&post='.$options[\"rsvp_form\"]);\nprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\nforeach($forms as $label => $form_id) {\n\t$fpost = get_post($form_id);\n\tif($fpost && $fpost->post_status != 'trash') {\n\t\tprintf('<h3>Form: %s</h3>',$label);\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$form_id);\n\t\tprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\t}\n}\n\n$results = $wpdb->get_results(\"SELECT ID, post_title, post_parent, post_content FROM $wpdb->posts JOIN $wpdb->postmeta ON ID=post_id WHERE meta_key='_rsvpmaker_special' AND meta_value='RSVP Form' AND post_parent ORDER BY ID DESC \");\nif($results)\n{\n\tprintf('<h2>%s</h2>',__('Save Existing Forms for Reuse','rsvpmaker'));\n\n$tab = (isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'rsvpforms') ? '<input type=\"hidden\" id=\"activetab\" value=\"rsvpforms\" />' : '';\n$tab .= '<input type=\"hidden\" name=\"tab\" value=\"rsvpforms\">';\n\n\tforeach($results as $fpost) {\n\t\tif(in_array($fpost->ID,$forms)) // if already in collection\n\t\t\tcontinue;\n\t\tprintf('<h3>%s %s</h3>',get_the_title($fpost->post_parent),get_rsvp_date($fpost->post_parent));\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$fpost->ID);\n\t\tprintf('<form action=\"%s\" method=\"post\"><input type=\"hidden\" name=\"form_id\" value=\"%d\">%s: <input type=\"text\" name=\"rsvpmaker_save_form\">%s <button>%s</button>%s</form>',admin_url('options-general.php?page=rsvpmaker-admin.php'),$fpost->ID,__('Name','rsvpmaker'),$tab,__('Save','rsvpmaker'),rsvpmaker_nonce('return'));\n\t}\n}\n\n?>\n</section>\n<section id=\"rsvpforms\" class=\"rsvpmaker\">\n<?php\nprintf('<p>%s</p>',__('Use this page to manage alternative RSVP Forms. Like the default form, any of these alternative forms can be customized for an event post or template. If you created a custom form that worked well, you can assign it a name so that it can be reused with other events and templates.','rsvpmaker'));\nprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><h3>%s</h3><p><label>%s</label> <input type=\"text\" name=\"rsvp_form_new\" value=\"\"></p><p><em>%s</em></p><p> %s</p></form>',admin_url('edit.php'),__('Create a Reusable RSVP Form','rsvpmaker'),__('Label','rsvpmaker'),__('A form will be created with a sampling of input fields you can copy, modify, or delete to create a form that meets your needs.','rsvpmaker'),get_submit_button('Create'));\n$forms = rsvpmaker_get_forms();\necho '<h3>Default Form</h3>';\n$fpost = get_post($options[\"rsvp_form\"]);\nif(empty($fpost))\n\t{\n\t$options[\"rsvp_form\"] = upgrade_rsvpform();\n\t$fpost = get_post($options[\"rsvp_form\"]);\n\t}\necho rsvpmaker_form_summary($fpost);\n$edit = admin_url('post.php?action=edit&post='.$options[\"rsvp_form\"]);\nprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\nforeach($forms as $label => $form_id) {\n\t$fpost = get_post($form_id);\n\tif($fpost) {\n\t\tprintf('<h3>Form: %s</h3>',$label);\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$form_id);\n\t\tprintf('<div id=\"editconfirmation\"><a href=\"%s\">%s</a></div>',$edit,__('Edit','rsvpmaker'));\n\t}\n}\n\n$results = $wpdb->get_results(\"SELECT ID, post_title, post_parent, post_content FROM $wpdb->posts JOIN $wpdb->postmeta ON ID=post_id WHERE meta_key='_rsvpmaker_special' AND meta_value='RSVP Form' AND post_parent ORDER BY ID DESC \");\nif($results)\n{\n\tprintf('<h2>%s</h2>',__('Save Existing Forms for Reuse','rsvpmaker'));\n\n$tab = (isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'rsvpforms') ? '<input type=\"hidden\" id=\"activetab\" value=\"rsvpforms\" />' : '';\n$tab .= '<input type=\"hidden\" name=\"tab\" value=\"rsvpforms\">';\n\n\tforeach($results as $fpost) {\n\t\tif(in_array($fpost->ID,$forms)) // if already in collection\n\t\t\tcontinue;\n\t\tprintf('<h3>%s %s</h3>',get_the_title($fpost->post_parent),get_rsvp_date($fpost->post_parent));\n\t\techo rsvpmaker_form_summary($fpost);\n\t\t$edit = admin_url('post.php?action=edit&post='.$fpost->ID);\n\t\tprintf('<form action=\"%s\" method=\"post\"><input type=\"hidden\" name=\"form_id\" value=\"%d\">%s: <input type=\"text\" name=\"rsvpmaker_save_form\">%s <button>%s</button>%s</form>',admin_url('options-general.php?page=rsvpmaker-admin.php'),$fpost->ID,__('Name','rsvpmaker'),$tab,__('Save','rsvpmaker'),rsvpmaker_nonce('return'));\n\t}\n}\n\n?>\n</section>\n</sections>\n\n</div>\n\n<?php              \n\n          }\n      }\n  \n  else\n      : exit(\"Class already declared!\");\n  endif;\n  \n\n  // create new instance of the class\n  $RSVPMAKER_Options = new RSVPMAKER_Options();\n  ////print_r($RSVPMAKER_Options);\n  if (isset($RSVPMAKER_Options)) {\n      // register the activation function by passing the reference to our instance\n      register_activation_hook(__FILE__, array(&$RSVPMAKER_Options, 'install'));\n}\n\nfunction rsvpmaker_form_summary($fpost) {\n\t$guest = (strpos($fpost->post_content,'rsvpmaker-guests')) ? __('Yes','rsvpmaker') : __('No','rsvpmaker');\n\t$note = (strpos($fpost->post_content,'name=\"note\"') || strpos($fpost->post_content,'formnote')) ?  __('Yes','rsvpmaker') : __('No','rsvpmaker');\n\tpreg_match_all('/\"slug\":\"([^\"]+)/',$fpost->post_content,$matches);\n\tif(!empty($matches[1]))\n\tforeach($matches[1] as $match)\n\t\t$fields[$match] = $match;\n\tif(empty($fields))\n\t\treturn;\n\treturn sprintf('<div>'.__('Fields','rsvpmaker').': %s<br />'.__('Guests','rsvpmaker').': %s<br />'.__('Note field','rsvpmaker').': %s</div>',implode(', ',$fields),$guest,$note);\n}\n\nfunction print_group_list_options($list_type, $vars) {\n\tprintf('<h3>%s List</h3>',ucfirst($list_type));\n\t$fields = array('user','password','subject_prefix','whitelist','blocked','additional_recipients');\n\tforeach($fields as $field)\n\t\t{\n\t\t\tif(empty($vars[$field]))\n\t\t\t\t$vars[$field] = '';\n\t\t}\n\t////print_r($vars);\n\tprintf('<p><label>%s</label><br /><input type=\"text\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[user]\" value=\"%s\" /> </p>',__('Email/User','rsvpmaker'),esc_attr($vars[\"user\"]));\t\n\tprintf('<p><label>%s</label><br /><input type=\"text\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[password]\" value=\"%s\" /> </p>',__('Password','rsvpmaker'),esc_attr($vars[\"password\"]));\n\tif($list_type != 'bot') {\n\t\tprintf('<p><label>%s</label><br /><input type=\"text\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[subject_prefix]\" value=\"%s\" /> </p>',__('Subject Prefix','rsvpmaker'),esc_attr($vars[\"subject_prefix\"]));\n\t\tprintf('<p><label>%s</label> <br /><textarea rows=\"3\" cols=\"80\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[whitelist]\">%s</textarea> </p>',__('Whitelist - additional allowed sender emails','rsvpmaker'),esc_attr($vars[\"whitelist\"]));\t\n\t\tprintf('<p><label>%s</label> <br /><textarea rows=\"3\" cols=\"80\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[blocked]\">%s</textarea> </p>',__('Blocked - not allowed to send to list','rsvpmaker'),esc_attr($vars[\"blocked\"]));\t\n\t\tprintf('<p><label>%s</label> <br /><textarea  rows=\"3\" cols=\"80\" name=\"rsvpmaker_discussion_'.esc_attr($list_type).'[additional_recipients]\">%s</textarea> </p>',__('Additional Recipients','rsvpmaker'),esc_attr($vars[\"additional_recipients\"]));\n\t}\t\n}\n\nfunction rsvpmaker_default_event_content($content) {\nglobal $post;\nglobal $rsvp_options;\nglobal $rsvp_template;\nif(empty($post->post_type))\n\treturn $content;\nif(($post->post_type == 'rsvpmaker') && ($content == ''))\n{\nif(isset($rsvp_template->post_content))\n\treturn $rsvp_template->post_content;\nreturn wp_kses_post($rsvp_options['default_content']);\n}\nelse\nreturn $content;\n}\n\nfunction rsvpmaker_title_from_template($title) {\nglobal $rsvp_template;\nglobal $post;\nglobal $wpdb;\nif(isset($_GET[\"from_template\"]) ) \n\t{\n\t$t = (int) $_GET[\"from_template\"];\n\t$sql = \"SELECT post_title, post_content FROM $wpdb->posts WHERE ID=$t\";\n\t$rsvp_template = $wpdb->get_row($sql);\n\treturn $rsvp_template->post_title;\n\t}\nreturn $title;\n}\n\nadd_filter('the_editor_content','rsvpmaker_default_event_content');\nadd_filter('default_title','rsvpmaker_title_from_template');\n\nfunction rsvpmaker_doc () {\nglobal $rsvp_options;\n?>\n<style>\n#docpage ul {\nmargin-left: 10px;\n}\n#docpage li {\nmargin-left: 10px;\nlist-style-type: circle;\n}\n</style>\n<div id=\"docpage\">\n<h2>Documentation</h2><p>More detailed documentation at <a href=\"http://www.rsvpmaker.com/documentation/\">http://www.rsvpmaker.com/documentation/</a></p><h3>Shortcodes and Event Listing / Calendar Views</strong></h3><p>RSVPMaker provides the following shortcodes for listing events, listing event headlines, and displaying a calendar with links to events.</p><p><strong>[rsvpmaker_upcoming]</strong> displays the index of upcoming events. If an RSVP is requested, the event includes the RSVP button link to the single post view, which will include your RSVP form. The calendar icon in the WordPress visual editor simplifies adding the rsvpmaker_upcoming code to any page or post.</p><p>[rsvpmaker_upcoming calendar=&quot;1&quot;] displays the calendar, followed by the index of upcoming events.</p><p>Attributes can be added in the format [rsvpmaker_upcoming attribute_name=\"attribute_value\"]<p><ul><li>type=\"type_name\" displays only the events with the matching event type, as set in the editor (example: type=\"featured\") </li><li>no_event=\"message\" message to display if no events are in the database (example=\"We are workin on scheduling new events. Check back soon\")</li><li>one=\"ID|slug|next\" embed a single message, identified by either post ID number, slug, or \"next\" to display the next upcoming event. (examples one=\"123\" or one=\"special-event\" or one=\"next\")</li><li>limit=\"posts_per_page\" limits the number of posts to display. If not specified, this will be the same as the number of posts displayed on your blog index page. (example: limit=\"30\")</li><li>add_to_query=\"querystring\" adds an arbitrary command to the WordPress query (example: add_to_query=\"posts_per_page=30&amp;post_status=draft\" would retrieve 30 draft posts)</li><li>hideauthor=\"1\" set this to prevent the author displayname from being shown at the bottom of an event post.</li>\n</ul>\n  \n            <div style=\"background-color: #FFFFFF; padding: 15px; text-align: center;\">\n            <img src=\"<?php echo plugins_url('/shortcode.png',__FILE__);?>\" width=\"535\" height=\"412\" />\n<br /><em><?php esc_html_e('Contents for an events page.','rsvpmaker');?></em>\n            </div>\n\n<p><strong>[rsvpmaker_calendar]</strong> displays the calendar by itself.</p><p><strong>[rsvpmaker_calendar nav=\"top\"]</strong> displays the calendar with the next / previous month navigation on the top rather than the bottom. By default, navigation is displayed on the bottom.</p><p>Attributes: type=\"type_name\" and add_to_query=\"querystring\" also work with rsvpmaker_calendar.</p><p><strong>[event_listing format=&quot;headlines&quot;]</strong> displays a list of headlines</p><p>[event_listing format=&quot;calendar&quot;] OR [event_listing calendar=&quot;1&quot;] displays the calendar (recommend using [rsvpmaker_calendar] instead)</p><p>Other attributes:</p><ul><li>limit=&quot;posts_per_page&quot; limits the number of posts to display. If not specified, this will be the same as the number of posts displayed on your blog index page. (example: limit=&quot;30&quot;)</li><li>past=&quot;1&quot; will show a listing of past events, most recent first, rather than upcoming events.</li><li>title=&quot;Title Goes Here&quot; Specifies a title to be displayed in bold at the top of the listing.</li></ul>\n\n<h3>To Embed a Single Event</h3>\n\n<p><strong>[rsvpmaker_next]</strong>, displays just the next scheduled event. If the type attribute is set, that becomes the next event of that type. Example: [rsvpmaker_next type=\"webinar\"]. Also, this displays the complete form rather than the RSVP Now! button unless showbutton=\"1\" is set.</p>\n<p><strong>[rsvpmaker_one post_id=\"10\"]</strong> displays a single event post with ID 10. Shows the complete form unless the attribute showbutton=\"1\" is set</p>\n<p><strong>[rsvpmaker_form post_id=\"10\"]</strong> displays just the form associated with an event (ID 10 in this example. Could be useful for embedding the form in a landing page that describes the event but where you do not want to include the full event content.</p>\n\n<p>The rsvpmaker_one and rsvpmaker_form shortcodes also accept one=\"10\" as equivalent to post_id=\"10\"</p>\n\n<?php esc_html_e('<h3>RSVP Form</h3><p>The RSVP from is also now formatted using shortcodes, which you can edit in the RSVP Form section of the Settings screen. You can also vary the form on a per-event basis, which can be handy for capturing an extra field. This is your current default form:</p>','rsvpmaker');?>\n<pre>\n<?php echo(htmlentities($rsvp_options[\"rsvp_form\"])); ?>\n</pre>\n<?php esc_html_e('<p>Explanation:</p><p>[rsvpfield textfield=&quot;myfield&quot;] outputs a text field coded to capture data for &quot;myfield&quot;</p><p>[rsvpfield textfield=&quot;myfield&quot; required=&quot;1&quot;] treats &quot;myfield&quot; as a required field.</p><p>[rsvpfield selectfield=&quot;phone_type&quot; options=&quot;Work Phone,Mobile Phone,Home Phone&quot;] HTML select field with specified options</p><p>[rsvpfield checkbox=&quot;checkboxtest&quot; value=&quot;1&quot;] Checkbox named checkboxtext with a value of 1 when checked.</p><p>[rsvpfield checkbox=&quot;checkboxtest&quot; value=&quot;1&quot; checked=&quot;1&quot;] Checkbox checked by default.</p><p>[rsvpfield radio=&quot;radiotest&quot; options=&quot;one,two,three,four&quot;] When checked, records one of the 4 values for the field &quot;radiotest&quot;</p><p>[rsvpfield radio=&quot;radiotest&quot; options=&quot;one,two,three,four&quot; checked=&quot;two&quot;] choice &quot;two&quot; is checked by default</p><p>[rsvpfield radio=&quot;radiotest&quot; options=&quot;one,two,three,four&quot; checked=&quot;two&quot; sep=&quot; &quot;] separate choices with a space (by default, each appears on a separate line)</p><p>[rsvpprofiletable show_if_empty=&quot;phone&quot;]CONDITIONAL CONTENT GOES HERE[/rsvpprofiletable] This section only shown if the required field is empty; otherwise displays a message that the info is &quot;on file&quot;. Because RSVPMaker is capable of looking up profile data based on an email address, you may want some data to be hidden for privacy reasons.</p><p>[rsvpguests] Outputs the guest blanks.</p>','rsvpmaker'); ?>\n\n<p><?php esc_html_e(\"If you're having trouble with the form fields not being formatted correctly\",'rsvpmaker')?>, <a href=\"<?php echo admin_url('options-general.php?page=rsvpmaker-admin.php&amp;reset_form=1');?>\"><?php esc_html_e('Reset default RSVP Form','rsvpmaker');?></a></p>\n\n<h3>Timed Content</h3>\n\n<p>To make a set a start or end time for the display of a block of content, wrap it in the rsvpmaker_timed shortcode.</p>\n\n<p>Example:</p>\n\n<p>[rsvpmaker_timed start=\"June 1, 2018\" end=\"June 15, 2018\" too_soon=\"Sorry, too soon\" too_late=\"Sorry, too late\"]</p>\n\n<p>Timed Content goes here ...<br />continues until close tag.</p>\n\n<p>[/rsvpmaker_timed]</p>\n\n<p>Include either a start or end attribute, or both. For more precision, use a database style YYYY-MM-DD format for the date. Example: start=\"2018-06-01 13:00\" for the content to start displaying June 1 after 1 pm local time.</p>\n<p>The too_soon and too_late attributes are optional, for the output of messages before and after the specified time time period. Leave them out or leave them blank, and no content will be displayed outside the specified time period. </p>\n\n<h3>YouTube Live webinars</h3>\n<p>When embedding a YouTube Live stream in a page or post of your WordPress site, you can use the shortcode [ylchat] to embed the associated comment stream (which can be used to take questions from the audience). This extracts the video ID from the YouTube link included in the page and constructs the iframe for the chat window, according to Google's specifications. You can add attributes for width and height to override the default values (100% wide x 200 pixels tall). You can add a note to be displayed above the comments field using the note parameter, as in [ylchat note=&quot;During the program, please post questions and comments in the chat box below.&quot;]</p>\n\n<p>RSVPMaker will stop displaying the chat field once the live event is over and the live chat is no longer active. Because this requires RSVPMaker to keep polling YouTube to see if the chat is live, you may wish to remove the shortcode from the page for replay views.</p>\n\n<?php\n\n}\n\nfunction rsvpmaker_admin_menu() {\n\t\nglobal $rsvp_options;\n//do_action('rsvpmaker_admin_menu_top');\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Event Setup\",'rsvpmaker'), __(\"Event Setup\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_setup\", \"rsvpmaker_setup\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"New Template\",'rsvpmaker'), __(\"New Template\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_setup&new_template=1\", \"rsvpmaker_setup\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Event Templates\",'rsvpmaker'), __(\"Event Templates\",'rsvpmaker'), $rsvp_options[\"rsvpmaker_template\"], \"rsvpmaker_template_list\", \"rsvpmaker_template_list\" );\nif(!empty($rsvp_options['additional_editors']))\n\tadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Share Templates\",'rsvpmaker'), __(\"Share Templates\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_share\", \"rsvpmaker_share\" );\nif($rsvp_options[\"show_screen_recurring\"])\n\tadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Recurring Event\",'rsvpmaker'), __(\"Recurring Event\",'rsvpmaker'), $rsvp_options[\"recurring_event\"], \"add_dates\", \"add_dates\" );\nif(!empty($rsvp_options[\"show_screen_multiple\"]))\n\tadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Multiple Events\",\"rsvpmaker\"), __(\"Multiple Events\",'rsvpmaker'), $rsvp_options[\"multiple_events\"], \"multiple\", \"multiple\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Multiple Events (without a template)\",'rsvpmaker'), __(\"Multiple Events (without a template)\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_setup&quick=5\", \"rsvpmaker_setup\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Event Options\",'rsvpmaker'), __(\"Event Options\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvpmaker_details\", \"rsvpmaker_details\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"Confirmation / Reminders\",'rsvpmaker'), __(\"Confirmation / Reminders\",'rsvpmaker'), 'edit_rsvpmakers', \"rsvp_reminders\", \"rsvp_reminders\" );\nadd_submenu_page('edit.php?post_type=rsvpmaker', __(\"RSVP Report\",'rsvpmaker'), __(\"RSVP Report\",'rsvpmaker'), $rsvp_options[\"menu_security\"], \"rsvp\", \"rsvp_report\" );\nadd_submenu_page( 'edit.php?post_type=rsvpmaker', __( 'RSVPMaker Payments', 'rsvpmaker' ), __( 'RSVPMaker Payments', 'rsvpmaker' ), 'edit_rsvpmakers', 'rsvpmaker_stripe_report', 'rsvpmaker_stripe_report' );\nadd_submenu_page('tools.php',__('Import/Export RSVPMaker'),__('Import/Export RSVPMaker'),'manage_options','rsvpmaker_export_screen','rsvpmaker_export_screen');\nadd_submenu_page('tools.php',__('Cleanup RSVPMaker'),__('Cleanup RSVPMaker'),'manage_options','rsvpmaker_cleanup','rsvpmaker_cleanup');\n\n}\n\nadd_filter('manage_posts_columns', 'rsvpmaker_columns');\nfunction rsvpmaker_columns($defaults) {\n\tif(!empty($_GET[\"post_type\"]) && ($_GET[\"post_type\"] == 'rsvpemail'))\n    \t$defaults['rsvpmaker_cron'] = __('Scheduled','rsvpmaker');\n    return $defaults;\n}\n\nfunction rsvpmaker_custom_column($column_name, $post_id) {\n\tglobal $wpdb, $rsvp_options;\n\t\n    if( $column_name == 'rsvpmaker_end' ) {\n\t\t$event = get_rsvpmaker_event($post_id);\n\t\tif($event)\n\t\techo esc_html($event->enddate);\n\t}\n    elseif( $column_name == 'rsvpmaker_display' ) {\n\t\t$end_type = get_rsvpmaker_meta($post_id,'_firsttime');\n\t\tif(empty($end_type))\n\t\t\techo 'End Time Not Shown';\n\t\telse {\n\t\t\t$options = array('set' => 'Show End Time','allday' => 'All Day/Times Not Shown','multi|2' => '2 Days','multi|3' => '3 Days','multi|4' => '4 Days','multi|5' => '5 Days','multi|6' => '6 Days','multi|7' => '7 Days');\n\t\t\tif(!empty($options[$end_type]))\n\t\t\t\techo esc_html($options[$end_type]);\n\t\t}\n\t\tprintf('<input type=\"hidden\" class=\"end_display_code\" value=\"%s\" />',$end_type);\n\t\t$rsvp_on = get_rsvpmaker_meta($post_id,'_rsvp_on');\n\t\t$convert_timezone = get_rsvpmaker_meta($post_id,'_convert_timezone',true);\n\t\t$add_timezone = get_rsvpmaker_meta($post_id,'_add_timezone',true);\n\t\tif(!empty($rsvp_on))\n\t\t\techo '<br />RSVP On';\n\t\tif(!empty($add_timezone))\n\t\t\techo '<br />Timezone code added to time';\n\t\tif(!empty($convert_timezone))\n\t\t\techo '<br /><em>Show in my timezone</em> button displayed';\n\t}\n    elseif( $column_name == 'event_dates' ) {\n\n$datetime = get_rsvp_date($post_id);\n$template = get_template_sked($post_id);\n$rsvpmaker_special = get_rsvpmaker_meta($post_id,'_rsvpmaker_special',true);\n\n$s = $dateline = '';\n\nif($datetime)\n{\n\t\tprintf('<span class=\"rsvpmaker-date\" id=\"rsvpmaker-date-%d\">%s</span>',esc_attr($post_id),esc_attr($datetime));\n}\nelseif($template)\n\t{\necho __(\"Template\",'rsvpmaker').\": \";\n//backward compatability\nif(is_array($template[\"week\"]))\n\t{\n\t\t$weeks = $template[\"week\"];\n\t\t$dows = $template[\"dayofweek\"];\n\t}\nelse\n\t{\n\t\t$weeks[0] = $template[\"week\"];\n\t\t$dows[0] = (isset($template[\"dayofweek\"])) ? $template[\"dayofweek\"] : 0;\n\t}\n\n$weekarray = Array(__(\"Varies\",'rsvpmaker'),__(\"First\",'rsvpmaker'),__(\"Second\",'rsvpmaker'),__(\"Third\",'rsvpmaker'),__(\"Fourth\",'rsvpmaker'),__(\"Last\",'rsvpmaker'),__(\"Every\",'rsvpmaker'));\n$dayarray = Array(__(\"Sunday\",'rsvpmaker'),__(\"Monday\",'rsvpmaker'),__(\"Tuesday\",'rsvpmaker'),__(\"Wednesday\",'rsvpmaker'),__(\"Thursday\",'rsvpmaker'),__(\"Friday\",'rsvpmaker'),__(\"Saturday\",'rsvpmaker'));\n\nif($weeks[0] == 0)\n\techo __('Schedule varies','rsvpmaker');\nelse\n\t{\n\tforeach($weeks as $week)\n\t\t{\n\t\tif(!empty($s))\n\t\t\t$s .= '/ ';\n\t\t$s .= $weekarray[(int) $week].' ';\n\t\t}\n\tforeach($dows as $dow)\n\t\t$s .= $dayarray[(int) $dow] . ' ';\t\n\techo esc_html($s);\n\t\t\n\t}\n\n\t} // end sked\n\telseif($rsvpmaker_special)\n\t\t{\n\t\t\techo __('Special Page','rsvpmaker').': '.$rsvpmaker_special;\n\t\t}\n\t} // end event dates column\n\telseif($column_name == 'rsvpmaker_cron') {\n\t\techo rsvpmaker_next_scheduled($post_id);\t\n\t}\n}\n\nfunction rsvpmaker_reminders_list($post_id)\n{\nglobal $wpdb;\n$sql = \"SELECT  `meta_key` \nFROM  `$wpdb->postmeta` \nWHERE  `meta_key` LIKE  '_rsvp_reminder_msg%' AND post_id = $post_id\nORDER BY  `meta_key` ASC \";\n$results = $wpdb->get_results($sql);\n$txt = '';\nif($results)\n\t{\n\t\tforeach ($results as $row)\n\t\t\t{\n\t\t\t\t$p = explode('_msg_',$row->meta_key);\n\t\t\t\t$hours[] = (int) $p[1];\n\t\t\t}\n\tsort($hours);\n\tforeach($hours as $hour)\n\t\t{\n\t\t\t$hour = (int) $hour;\n\t\t\tif($hour > 0)\n\t\t\t\t$label = __('Follow up','rsvpmaker').': '.$hour.' '.__('hours after','rsvpmaker');\n\t\t\telse\n\t\t\t\t$label = __('Reminder','rsvpmaker').': '.abs($hour).' '.__('hours before','rsvpmaker');\n\t\t$txt .= sprintf(' | <a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&hours='.$hour.'&page=rsvp_reminders&message_type=reminder&post_id=').$post_id,$label);\n\t\t}\n\t}\nreturn $txt;\n}\n\n//add_action('admin_init','rsvpmaker_create_calendar_page');\n\nfunction rsvpmaker_create_calendar_page() {\nglobal $current_user;\nif(isset($_GET[\"create_calendar_page\"]))\n\t{\n\t$content = (function_exists('register_block_type')) ? '<!-- wp:rsvpmaker/upcoming {\"calendar\":\"1\",\"nav\":\"both\"} /-->' : '[rsvpmaker_upcoming calendar=\"1\" days=\"180\" posts_per_page=\"10\" type=\"\" one=\"0\" hideauthor=\"1\" past=\"0\" no_events=\"No events currently listed\" nav=\"bottom\"]';\n\t$post = array(\n\t  'post_content'   => $content,\n\t  'post_name'      => 'calendar',\n\t  'post_title'     => 'Calendar',\n\t  'post_status'    => 'publish',\n\t  'post_type'      => 'page',\n\t  'post_author'    => $current_user->ID,\n\t  'ping_status'    => 'closed'\n\t);\n\t$id = wp_insert_post($post);\n\twp_redirect(admin_url('post.php?action=edit&post=').$id);\n\texit();\n\t}\n}\n\nfunction rsvpmaker_essentials () {\n\tglobal $rsvp_options, $current_user;\n\t$cleared = get_option('cleared_rsvpmaker_notices');\n\t$cleared = is_array($cleared) ? $cleared : array();\n\t$message = '';\n\tif(isset($_POST[\"create_calendar_page\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$content = (function_exists('register_block_type')) ? '<!-- wp:rsvpmaker/upcoming {\"calendar\":\"1\",\"nav\":\"both\"} /-->' : '[rsvpmaker_upcoming calendar=\"1\" days=\"180\" posts_per_page=\"10\" type=\"\" one=\"0\" hideauthor=\"1\" past=\"0\" no_events=\"No events currently listed\" nav=\"bottom\"]';\n\t\t$post = array(\n\t\t  'post_content'   => $content,\n\t\t  'post_name'      => 'calendar',\n\t\t  'post_title'     => 'Calendar',\n\t\t  'post_status'    => 'publish',\n\t\t  'post_type'      => 'page',\n\t\t  'post_author'    => $current_user->ID,\n\t\t  'ping_status'    => 'closed'\n\t\t);\n\t\t$id = wp_insert_post($post);\n\t\t$link = get_permalink($id);\n\t\t$message .= '<p>'.__('Calendar page created: ','rsvpmaker').sprintf('<a href=\"%s\">%s</a>',$link,$link).'</p>';\n\t}\n\tif(isset($_POST[\"clear_calendar_page_notice\"]) && !isset($_POST[\"create_calendar_page\"])) {\n\t\tupdate_option('noeventpageok',1);\n\t\t$message .= '<p>Calendar notice cleared.</p>';\t\t\n\t}\n\tif(isset($_POST[\"timezone_string\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$tz = sanitize_text_field($_POST[\"timezone_string\"]);\n\t\tupdate_option('timezone_string',$tz);\n\t\t$message .= '<p>Timezone set: '.$tz.'.</p>';\t\t\n\t}\n\tif(isset($_POST[\"privacy_confirmation\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) {\n\t\t$rsvp_options[\"privacy_confirmation\"] = (int) $_POST[\"privacy_confirmation\"];\n\t\t$message .= '<p>Privacy confirmation option set.</p>';\n\t\t$privacy_page = get_option('wp_page_for_privacy_policy');\n\t\tif($privacy_page)\n\t\t{\n\t\t\t$privacy_url = get_permalink($privacy_page);\n\t\t\t$conf_message = sprintf('I consent to the <a target=\"_blank\" href=\"%s\">privacy policy</a> site of this site for purposes of follow up to this registration.',$privacy_url);\n\t\t\t$rsvp_options['privacy_confirmation_message'] = $conf_message;\n\t\t\t$message .= '<p>Confirmation message (can be edited in RSVPMaker Settings): '.$conf_message.'</p>';\n\t\t}\n\t\telse\n\t\t\t$message .= printf('<p><a href=\"%s\">%s</a></p>',admin_url('options-privacy.php'),__('Set up your privacy page','rsvpmaker'));\n\t\tupdate_option('RSVPMAKER_Options',$rsvp_options);\n\t}\n\t$message .= '<p>'.__('You can set additional options, including default settings for RSVPMaker events, on the','rsvpmaker').' <a href=\"'.admin_url('options-general.php?page=rsvpmaker-admin.php').'\">'.__('RSVPMaker settings page','rsvpmaker').'</a>.</p>';\n\techo '<div class=\"notice notice-success is-dismissible\">'.$message.'</div>';\n}\n\nfunction rsvpmaker_corrupted_dates_check() {\nglobal $wpdb;\n$fixed = $corrupt = '';\n\nif(isset($_POST['fixrsvpyear']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\nforeach($_POST['fixrsvpyear'] as $post_id => $year)\n{\n\t$year = (int) $year;\n\t$month = (int) $_POST['fixrsvpmonth'][$post_id];\n\t$day = (int) $_POST['fixrsvpday'][$post_id];\n\t$hour = (int) $_POST['fixrsvphour'][$post_id];\n\t$minutes = (int) $_POST['fixrsvpminutes'][$post_id];\n\tif($month < 10)\n\t\t$month = '0'.$month;\n\tif($day < 10)\n\t\t$day = '0'.$day;\n\tif($hour < 10)\n\t\t$hour = '0'.$hour;\n\tif($minutes < 10)\n\t\t$minutes = '0'.$minutes;\n\t$datestring = $year.'-'.$month.'-'.$day.' '.$hour.':'.$minutes.':00';\n\t$fixed .= '<div>Fixed date: '.$datestring.' for '.get_the_title($post_id).'</div>';\n\tupdate_post_meta($post_id,'_rsvp_dates',$datestring);\n}\n\necho '<div class=\"notice notice-info\">'.$fixed.'</div>';\n\n}\n\n//first try to clean up errors automatically \n\t$manualcheck = false;\n\t$sql = \"SELECT ID, post_title, meta_value\n\tFROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id\n\twhere meta_key='_rsvp_dates' AND post_status='publish' AND meta_value NOT REGEXP '[0-9]{4}-[0-9]{2}-[0-9]{2} {1,2}[0-9]{2}:[0-9]{2}:[0-9]{2}'\n\tAND meta_value > CURDATE()\n\tORDER BY post_title, meta_value\";\n\t$results1 = $wpdb->get_results($sql);\n\tif($results1)\n\t{\n\t\tforeach($results1 as $row) {\n\t\t$dateparts = preg_split('/[-: ]/',$row->meta_value);\n\t\tif(empty($dateparts[3]) || empty($dateparts[4]))\n\t\t\t{\n\t\t\t\t//if not a complete date\n\t\t\t\t$manualcheck = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t$year = $dateparts[0];\n\t\t$month = str_pad($dateparts[1],2,'0',STR_PAD_LEFT);\n\t\t$day = str_pad($dateparts[2],2,'0',STR_PAD_LEFT);\n\t\t$hour = str_pad($dateparts[3],2,'0',STR_PAD_LEFT);\n\t\t$minutes = empty($dateparts[4]) ? '00' : str_pad($dateparts[4],2,'0',STR_PAD_LEFT);\n\t\t$newdate = sprintf('%s-%s-%s %s:%s:00',$year,$month,$day,$hour,$minutes);\n\t\tupdate_post_meta($row->ID,'_rsvp_dates',$newdate);\n\t\t}\n\t}\t\nif($manualcheck) {\n\t$sql = \"SELECT ID, post_title, meta_value\n\tFROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id\n\twhere meta_key='_rsvp_dates' AND post_status='publish' AND meta_value NOT REGEXP '[0-9]{4}-[0-9]{2}-[0-9]{2} {1,2}[0-9]{2}:[0-9]{2}:[0-9]{2}' \n\tAND meta_value > CURDATE()\n\tORDER BY post_title, meta_value\";\n\t$results = $wpdb->get_results($sql);\n\tif($results)\n\t{\n\t\tforeach($results as $row) {\n\t\t$dateparts = preg_split('/[-: ]/',$row->meta_value);\n\t\t$corrupt .= sprintf('<div><label style=\"display: inline-block; width: 200px;\">%s</label> <input type=\"text\" name=\"fixrsvpyear[%d]\" value=\"%s\" size=\"4\" >-<input type=\"text\" name=\"fixrsvpmonth[%d]\" value=\"%s\" size=\"2\" >-<input type=\"text\" name=\"fixrsvpday[%d]\" value=\"%s\" size=\"2\" > <input type=\"text\" name=\"fixrsvphour[%d]\" value=\"%s\"  size=\"2\" >:<input type=\"text\" name=\"fixrsvpminutes[%d]\" value=\"%s\" size=\"2\" >:00 %s</div>',$row->post_title, $row->ID, $dateparts[0], $row->ID,  (empty($dateparts[1])) ? '' : $dateparts[1], $row->ID,  (empty($dateparts[2])) ? '' : $dateparts[2], $row->ID,  (empty($dateparts[3])) ? '' : $dateparts[3], $row->ID, (empty($dateparts[4])) ? '' : $dateparts[4], $row->meta_value);\n\t\t}\n\tprintf('<div class=\"notice notice-error\"><h3>%s</h3><p>%s</p><form method=\"post\" action=\"%s\">%s<p><button>Repair</button></p>%s</form></div>',__('Date Variables Corrupted','rsvpmaker'),__('A correct date would be in the format YEAR-MONTH-DAY HOUR:MINUTES:SECONDS or 2030-01-01 19:30:00 for January 1, 2030 at 7:30 pm','rsvpmaker'),admin_url(),$corrupt,rsvpmaker_nonce('return') );\n\t}\t\n}\n\n}\n\nfunction rsvpmaker_admin_notice() {\n\nif(isset($_GET['action']) && ($_GET['action'] == 'edit'))\n\treturn; //don't clutter edit page with admin notices. Gutenberg hides them anyway.\nif(isset($_GET['post_type']) && ($_GET['post_type'] == 'rsvpmaker') && !isset($_GET['page']))\n\treturn; //don't clutter post listing page with admin notices\nif(isset($_POST[\"rsvpmaker_essentials\"]))\n\trsvpmaker_essentials();\n\nif(isset($_GET['payment_key_test'])) {\n\techo '<div class=\"notice notice-info\"><p><div>Checking payment API connections</div>';\n\t$paypal_rest_keys = get_option('rsvpmaker_paypal_rest_keys');\n\tif(!empty($paypal_rest_keys['client_secret']) && !empty($paypal_rest_keys['client_id']))\n\t\techo '<div>PayPal production key: '.rsvpmaker_paypal_test_connection().'</div>';\n\tif(!empty($paypal_rest_keys['sandbox_client_secret']) && !empty($paypal_rest_keys['sandbox_client_id']) )\n\t\techo '<div>PayPal sandbox key: '.rsvpmaker_paypal_test_connection('sandbox').'</div>';\n\t$stripe_keys = get_option('rsvpmaker_stripe_keys');\n\tif(!empty($stripe_keys['pk']) && !empty($stripe_keys['sk']))\n\t\techo '<div>Stripe production key :'.rsvpmaker_stripe_validate($stripe_keys['pk'],$stripe_keys['sk']).'</div>';\n\tif(!empty($stripe_keys['sandbox_sk']) && !empty($stripe_keys['sandbox_pk']) )\n\t\techo '<div>Stripe sandbox key: '.rsvpmaker_stripe_validate($stripe_keys['sandbox_pk'],$stripe_keys['sandbox_sk']).'</div>';\n\t$chosen_gateway = get_rsvpmaker_payment_gateway ();\n\tif($chosen_gateway)\n\t\tprintf('<p>Payment gateway defaults to: %s</p>',$chosen_gateway);\n\techo '</p></div>';\n}\n\nglobal $wpdb;\nglobal $rsvp_options;\nglobal $current_user;\nglobal $post;\n$timezone_string = get_option('timezone_string');\n$cleared = get_option('cleared_rsvpmaker_notices');\n$cleared = is_array($cleared) ? $cleared : array();\n$basic_options = '';\n\nrsvpmaker_corrupted_dates_check();\n\nif( empty($rsvp_options[\"eventpage\"]) && !get_option('noeventpageok') && !is_plugin_active('rsvpmaker-for-toastmasters/rsvpmaker-for-toastmasters.php') )\n\t{\n\t$sql = \"SELECT ID from $wpdb->posts WHERE post_type='page' AND post_status='publish' AND post_content LIKE '%rsvpmaker_upcoming%' \";\n\t$front = get_option('page_on_front');\n\tif($front)\n\t\t$sql .= \" AND ID != $front \";\n\tif($id =$wpdb->get_var($sql))\n\t\t{\n\t\t$rsvp_options[\"eventpage\"] = get_permalink($id);\n\t\tupdate_option('RSVPMAKER_Options',$rsvp_options);\n\t\t}\n\telse {\n\t\t$message = __('RSVPMaker can add a calendar or events listing page to your site automatically, which you can then add to your website menu.','rsvpmaker');\n\t\t$message2 = __('Create page','rsvpmaker');\n\t\t$message3 = __('Turn off this warning','rsvpmaker');\n\t\t$basic_options = sprintf('<p>%s</p>\n\t\t<p><input type=\"checkbox\" id=\"create_calendar\" name=\"create_calendar_page\" value=\"1\" checked=\"checked\"> %s</p>\n\t\t<p id=\"create_calendar_clear\"><input type=\"checkbox\" name=\"clear_calendar_page_notice\" value=\"1\" checked=\"checked\"> %s<p>',$message,$message2,$message3);\n\t\t$basic_options .= \"<script>\n\t\tjQuery(document).ready(function( $ ) {\n\t\t$('#create_calendar_clear').hide();\n\t\t$('#create_calendar').click(function(event) {\n\t\t\t$('#create_calendar_clear').show();\n\t\t});\t\t\n\t});\n\t\t</script>\";\n\t\t}\t\n}\n\nif((empty($timezone_string) || isset($_GET['timezone'])) && !isset($_POST['timezone_string']) ) {\n$choices = wp_timezone_choice('');\n$choices = str_replace('selected=\"selected\"','',$choices);\n$message = sprintf('<p>%s %s. %s</p>',__('RSVPMaker needs you to','rsvpmaker'),__('set the timezone for your website','rsvpmaker'), __('Confirm if the choice below is correct or make another choice by region/city.','rsvpmaker') );\n$basic_options .= sprintf('<p>%s</p>\n<p>\n<select id=\"timezone_string\" name=\"timezone_string\">\n<script>'.\"\nvar tz = jstz.determine();\nvar tzstring = tz.name();\ndocument.write('<option selected=\\\"selected\\\" value=\\\"' + tzstring + '\\\">' + tzstring + '</option>');\n</script>\n%s\n</select>\n\",$message,$choices);\n}\n\nif(!isset($rsvp_options[\"privacy_confirmation\"]) || isset($_GET['test']) )\n\t{\n\t\t$privacy_page = rsvpmaker_check_privacy_page();\n\t\tif($privacy_page)\n\t\t\t{\n\t\t\t\t$message = __('Please decide whether your RSVPMaker forms should include a privacy policy confirmation checkbox. This may be important if some of your website visitors may be covered by the European Union\\'s GDPR privacy regulation','rsvpmaker').' <a href=\"'.admin_url('options-general.php?page=rsvpmaker-admin.php#privacy_consent').'\">('.__('more details','rsvpmaker').')</a>';\n\t\t\t\t$basic_options .= sprintf('<p>%s</p><input type=\"radio\" name=\"privacy_confirmation\" value=\"1\" checked=\"checked\" /> %s <input type=\"radio\" name=\"privacy_confirmation\" value=\"no\" /> %s - %s</p>',$message,__('Yes','rsvpmaker'),__('No','rsvpmaker'),__('Add checkbox?','rsvpmaker'));\n\t\t\t}\n\t\telse\n\t\t\t$basic_options .= '<p>'.__('You may want for your RSVPMaker forms to include a privacy policy confirmation checkbox, particularly if any site visitors are covered by the European Union\\'s GDPR or similar privacy regulations.','rsvpmaker').' '.__('First, you must register a privacy page with WordPress','rsvpmaker').': <a href=\"'.admin_url('options-privacy.php').'\">'.admin_url('options-privacy.php').'</a></p>';\n\t}\n\nif(!empty($basic_options)) {\n\t$message = sprintf('<h3>%s</h3><form method=\"post\" action=\"%s\">\n\t%s\n\t<p><input type=\"submit\" name=\"submit\" id=\"submit\" class=\"button button-primary\" value=\"%s\"></p>\n\t<input type=\"hidden\" name=\"rsvpmaker_essentials\" value=\"1\">\n\t%s</form>',__('RSVPMaker Essential Settings','rsvpmaker'),site_url(sanitize_text_field($_SERVER['REQUEST_URI'])),$basic_options,__('Save Changes','rsvpmaker'),rsvpmaker_nonce('return'));\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'rsvp_timezone', $cleared, $type='warning');\n}\n\n$ver = phpversion();\nif (version_compare($ver, '7.1', '<') && (!isset($_GET['page']) || ($_GET['page'] != 'rsvpmaker_email_template') ) ){\n\t$message = sprintf('<p>The Emogrifier CSS inliner library, which is included to improve formatting of HTML email, relies on PHP features introduced in version 7.1 -- and is disabled because your site is on %s</p>',$ver);\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'Emogrifier', $cleared, $type='warning');\n}\n\nif(isset($_GET['update_messages']) && isset($_GET['t']))\n{\necho get_post_meta((int) $_GET['t'],'update_messages',true);\ndelete_post_meta((int) $_GET['t'],'update_messages');\n}\n\nif(isset($post->post_type) && ($post->post_type == 'rsvpmaker') ) {\nif($landing = get_post_meta($post->ID,'_webinar_landing_page_id',true))\n\t{\n\t$message = '<div class=\"notice notice-info\"><p>'.__('Edit the','rsvpmaker').' <a href=\"'.admin_url('post.php?action=edit&post='.$landing).'\">'.__(\"webinar landing page\",'rsvpmaker').'</a> '.__('associated with this event').'.</p>';\n\t$message .= '<p>';\n\t$message .= __('Related messages:','rsvpmaker');\n\t$message .= sprintf(' <a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=').$post->ID,__('Confirmation','rsvpmaker'));\n\t$message .= rsvpmaker_reminders_list($post->ID);\n\t$message .=  '</p></div>';\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'Landing page', $cleared, $type='notice');\n\t}\nif($event = get_post_meta($post->ID,'_webinar_event_id',true))\n\t{\n\t$message = '<div class=\"notice notice-info\"><p>'.__('Edit the','rsvpmaker').' <a href=\"'.admin_url('post.php?action=edit&post='.$event).'\">'.__(\"webinar event post\",'rsvpmaker').'</a> '.__('associated with this landing page').'.</p>';\n\t$message .=  '<p>';\n\t$message .=  __('Related messages:','rsvpmaker');\n\t$message .=  sprintf(' <a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=').$event,__('Confirmation','rsvpmaker'));\t\n\t$message .=  rsvpmaker_reminders_list($event);\n\t$message .=  '</p></div>';\n\t$notice[] = rsvpmaker_admin_notice_format($message, 'Webinar event', $cleared, $type='notice');\n\t}\n}\n\t\n\tif(isset($_GET[\"smtptest\"]))\n\t\t{\n\t\t$mail[\"to\"] = $rsvp_options[\"rsvp_to\"];\n\t$mail[\"from\"] = \"david@carrcommunications.com\";\n\t$mail[\"fromname\"] = \"RSVPMaker\";\n\t$mail[\"subject\"] = __(\"Testing SMTP email notification\",'rsvpmaker');\n\t$mail[\"html\"] = '<p>'. __('Test from RSVPMaker.','rsvpmaker').'</p>';\n\t$result = rsvpmailer($mail);\n\techo '<div class=\"updated\" style=\"background-color:#fee;\">'.\"<strong>\".__('Sending test email','rsvpmaker').' '.$result .'</strong> <a href=\"'.admin_url('index.php?smtptest=1&debug=1').'\">(debug)</a></div>';\n\t\t}\n\n\tif(!empty($_GET[\"rsvp_form_reset\"]))\n\t\t{\n\t\t$target = (int) $_GET[\"rsvp_form_reset\"];\n\t\tupgrade_rsvpform (true, $target);\n\t\techo '<div class=\"updated\" ><p>'.\"<strong>\".__('RSVP Form Updated (default and future events)','rsvpmaker').'</strong></p></div>';\n\t\t}\n\tif(!empty($notice))\n\t{\n\t\tif(isset($_GET['show_rsvpmaker_notices']))\n\t\t\techo implode(\"\\n\",$notice);\n\t\telse {\n\t\t\t$size = sizeof($notice);\n\t\t\t$message = __('RSVPMaker notices for administrator','rsvpmaker').': '.$size;\n\t\t\t$message .= sprintf(' - <a href=\"%s\">%s</a>',admin_url('?show_rsvpmaker_notices=1'),__('Display','rsvpmaker'));\n\t\t\techo rsvpmaker_admin_notice_format($message, 'RSVPMaker', $cleared, $type='info');\t\n\t\t}\n\t}\n?>\n<script>\njQuery(document).ready(function( $ ) {\n$( document ).on( 'click', '.rsvpmaker-notice .notice-dismiss', function () {\n\t// Read the \"data-notice\" information to track which notice\n\t// is being dismissed and send it via AJAX\n\tvar type = $( this ).closest( '.rsvpmaker-notice' ).data( 'notice' );\n\t$.ajax( rsvpmaker_rest.ajaxurl,\n\t  {\n\t\ttype: 'POST',\n\t\tdata: {\n\t\t  action: 'rsvpmaker_dismissed_notice_handler',\n\t\t  type: type,\n\t\t}\n\t  } );\n  } );\n});\n</script>\n<?php\n\n}\n\nfunction set_rsvpmaker_order_in_admin( $wp_query ) {\nif(!is_admin() || empty($_GET['post_type']) || ($_GET['post_type'] != 'rsvpmaker') ) // don't mess with front end or other post types\n\treturn $wp_query;\n\nglobal $current_user;\n\nif(isset($_GET[\"rsvpsort\"])) {\n\t$sort = sanitize_text_field($_GET[\"rsvpsort\"]);\nupdate_user_meta($current_user->ID,'rsvpsort',$sort);\n}\nelseif(isset($_GET['all_posts']) || isset($_GET['post_status'])) {\n\t$sort = 'all';\n\tupdate_user_meta($current_user->ID,'rsvpsort',$sort);\n}\nelse\n\t$sort = get_user_meta($current_user->ID,'rsvpsort',true);\nif(empty($sort))\n\t$sort = 'future';\nif(isset($_GET['s']))\n\treturn;\nif($sort == 'all')\n\treturn;\n\nif(($sort == \"past\") || ($sort == \"future\")) {\n\tadd_filter('posts_join', 'rsvpmaker_join',99 );\n\tadd_filter('posts_groupby', 'rsvpmaker_groupby',99 );\n\t}\nif($sort == 'past')\n\t{\n\tadd_filter('posts_where', 'rsvpmaker_where_past',99 );\n\tadd_filter('posts_orderby', 'rsvpmaker_orderby_past',99 );\n\t}\nelseif($sort == 'templates')\n\t{\n\tadd_filter('posts_join', 'rsvpmaker_join_template',99 );\n\tadd_filter('posts_where', function($content) {return \" AND post_type='rsvpmaker'\";}, 9999 );\n\tadd_filter('posts_orderby', function($content) {return ' ID DESC ';}, 99  );\n\t}\nelseif($sort == 'special')\n\t{\n\tadd_filter('posts_join', 'rsvpmaker_join_special',99 );\n\tadd_filter('posts_where', function($content) {return '';}, 99 );\n\tadd_filter('posts_orderby', function($content) {return ' ID DESC ';}, 99  );\n\t}\nelseif($sort == 'all')\n\t{\n\tadd_filter('posts_where', function($content) {return \" AND post_type='rsvpmaker' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'future' OR wp_posts.post_status = 'draft' OR wp_posts.post_status = 'pending' OR wp_posts.post_status = 'private')\";}, 99 );\n\tadd_filter('posts_orderby', function($content) {return ' ID DESC ';}, 99  );\n\t}\nelse\n\t{\n\tadd_filter('posts_where', 'rsvpmaker_where',99 );\n\tadd_filter('posts_orderby', 'rsvpmaker_orderby',99 );\n\t}\n}\nadd_filter('pre_get_posts', 'set_rsvpmaker_order_in_admin',1 );\n\nfunction rsvpmaker_admin_months_dropdown($bool, $post_type) {\nreturn ($post_type == 'rsvpmaker');\n}\n\nadd_filter( 'disable_months_dropdown', 'rsvpmaker_admin_months_dropdown',10,2 );\n\nfunction rsvpmaker_join_template($join) {\n  global $wpdb;\n    return $join.\" JOIN \".$wpdb->postmeta.\" rsvpdates ON rsvpdates.post_id = $wpdb->posts.ID AND (BINARY rsvpdates.meta_key REGEXP '_sked_[A-Z].+')\"; //  AND rsvpdates.meta_value\n}\nfunction rsvpmaker_join_special($join) {\n  global $wpdb;\nreturn $join.\" JOIN \".$wpdb->postmeta.\" rsvpdates ON rsvpdates.post_id = $wpdb->posts.ID AND rsvpdates.meta_key='_rsvpmaker_special'\";\n}\n\nfunction rsvpmaker_sort_message() {\n\tif((basename($_SERVER['SCRIPT_NAME']) == 'edit.php') && isset($_GET[\"post_type\"]) &&  ($_GET[\"post_type\"]==\"rsvpmaker\") && !isset($_GET[\"page\"]))\n\t{\n\tglobal $current_user;\n\t$sort = get_user_meta($current_user->ID,'rsvpsort',true);\n\tif(empty($sort))\n\t\t$sort = 'future';\n\t\t$current_sort = $o = $opt = '';\n\t\t$sortoptions = array('future' => __('Future Events','rsvpmaker'),'past' => __('Past Events','rsvpmaker'),'all' => __('All RSVPMaker Posts','rsvpamker'),'templates' => __('Event Templates','rsvpmaker'),'special' => __('Special','rsvpmaker'));\n\t\tforeach($sortoptions as $key => $option)\n\t\t{\n\t\t\tif(isset($_GET['s']))\n\t\t\t{\n\t\t\t\t$current_sort = __('Showing','rsvpmaker').': '.__('Search Results','rsvpmaker');\n\t\t\t}\n\t\t\tif($key == $sort)\n\t\t\t{\n\t\t\t\t$opt .= sprintf('<option value=\"%s\" selected=\"selected\">%s</option>',$key,$option);\n\t\t\t\t$current_sort = __('Showing','rsvpmaker').': '.$sortoptions[$key];\n\t\t\t}\n\t\t\telse\n\t\t\t{\t\n\t\t\t\t$opt .= sprintf('<option value=\"%s\">%s</option>',$key,$option);\n\t\t\t\t$o .= '<a class=\"add-new-h2\" href=\"'.admin_url('edit.php?post_type=rsvpmaker&rsvpsort='.$key).'\">'.$option.'</a> ';\n\t\t\t}\n\t\t}\n\t\t$opt = '<div class=\"alignleft actions rsvpsortwrap\" style=\"margin-top: -10px;\" ><select name=\"rsvpsort\" class=\"rsvpsort\">'.$opt.'</select> </div>';\n\t\techo '<div style=\"padding: 10px; \">'.$opt;//.$current_sort.$o;\n\t\techo '</div>';\n\t}\n}\n\nfunction rsvpmaker_projected_datestring($dow,$week,$template,$t = 0) {\n\tif(!$t) \n\t\t$t = time();\n\t$weektext = rsvpmaker_week($week);\n\tif($week == '0')\n\t\treturn rsvpmaker_date('Y-m',$t).'-01 '.$template['hour'].':'.$template['minutes'].':00';\n\telseif($week == '6')\n\t\treturn rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.rsvpmaker_date('Y-m',$t).' '.$template['hour'].':'.$template['minutes'].':00';\n\telse\n\treturn $weektext.' '.rsvpmaker_day($dow,'rsvpmaker_strtotime').' of '.rsvpmaker_date('F',$t).' '.rsvpmaker_date('Y',$t).' '.$template['hour'].':'.$template['minutes'].':00';\n}\n\nfunction rsvpmaker_get_projected($template) {\n\nif(!isset($template[\"week\"]))\n\treturn;\n\n//backward compatability\nif(is_array($template[\"week\"]))\n\t{\n\t\t$weeks = $template[\"week\"];\n\t\t$dows = (empty($template[\"dayofweek\"])) ? 0 : $template[\"dayofweek\"];\n\t}\nelse\n\t{\n\t\t$weeks[0] = $template[\"week\"];\n\t\t$dows[0] = isset($template[\"dayofweek\"]) ? $template[\"dayofweek\"] : 0;\n\t}\n\nif(empty($template['hour']))\n\t$template['hour'] = '00';\nif(empty($template['minutes']))\n\t$template['minutes'] = '00';\n\n$th = (int) $template['hour'];\n\n$cy = date(\"Y\");\n$cm = date(\"m\");\n\nif(!empty(trim($template[\"stop\"])))\n\t{\n\t$stopdate = rsvpmaker_strtotime($template[\"stop\"].' 23:59:59');\n\t}\n\nif(empty($dows))\n\t$dows = array(0 => 0);\nforeach($weeks as $week)\nforeach($dows as $dow) {\n$i = 0;\n$startdaytxt = rsvpmaker_projected_datestring($dow,$week,$template);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n$ts = rsvpmaker_strtotime($startdaytxt);\nif(!$ts) {\n\techo 'Error parsing '.$startdaytxt;\n\treturn;\n}\nif($week == 6)\n\t{\n\t$i = 0;\n\tif(empty($stopdate))\n\t\t$stopdate = rsvpmaker_strtotime('+6 months');\n\telse\n\t\techo 'stopdate set';\n\tif(isset($_GET[\"start\"]))\n\t\t$ts = rsvpmaker_strtotime($_GET[\"start\"]);\n\twhile($ts < $stopdate)\n\t\t{\n\t\t$projected[$ts] = $ts; // add numeric value for 1 week\n\t\t$ts = $ts + WEEK_IN_SECONDS;\n\t\t$i++;\n\t\tif($i > 52)\n\t\t\tbreak;\n\t\t}\n\t}\nelse {\n\tif(isset($_GET[\"start\"]))\n\t\t$ts = rsvpmaker_strtotime($_GET[\"start\"]);\n\tif(empty($stopdate))\n\t\t$stopdate = rsvpmaker_strtotime('+12 months');\n\tif($week == 0) {\n\t\t$i = 0;\n\t\t$firstdaytxt = rsvpmaker_projected_datestring($dow,0,$template);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n\t\t$tcount = rsvpmaker_strtotime($firstdaytxt);\n\t\tfor($tcount; $tcount < $stopdate; $tcount+= MONTH_IN_SECONDS )\n\t\t{\n\t\t$firstdaytxt = rsvpmaker_projected_datestring($dow,0,$template,$tcount);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n\t\t$ts = rsvpmaker_strtotime($firstdaytxt);\n\t\t$projected[$ts] = $ts;\n\t\t$i++;\n\t\tif($i > 10)\n\t\t\tbreak;\n\t\t}\t\n\t}\n\telse\n\t\t{\n\t\t\t$i = 0;\n\t\t\t$ts = time();\n\t\t\t$startmonth = rsvpmaker_date('F Y',$ts);\n\t\t\tfor($i = 0; $i < 50; $i++) //($ts; $ts < $stopdate; $ts+= MONTH_IN_SECONDS )\n\t\t\t{\n\t\t\t\t$ts = strtotime($startmonth.\" + $i month\");\n\t\t\t\t$datetext = rsvpmaker_projected_datestring($dow,$week,$template,$ts);//rsvpmaker_day($dow,'rsvpmaker_strtotime').' '.$template['hour'].':'.$template['minutes'];\n\n\t\t\t\t$ts = rsvpmaker_strtotime($datetext);\n\t\t\t\tif(!$ts)\n\t\t\t\t{\n\t\t\t\t\techo 'Error parsing date string '.$datetext;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(isset($stopdate) && $ts > $stopdate) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$projected[$ts] = $ts;\n\t\t\t\t}\n\t\t}\n\t}\n}\n\n//order by timestamp\nif(empty($projected))\n\treturn array();\n//timezone correction\nforeach($projected as $index => $value) {\n\t$checkhour = (int) rsvpmaker_date('G',$value);\n\t$diff =  $th - $checkhour; \n\tif($diff) {\n\t\t$value+= ($diff * HOUR_IN_SECONDS);\n\t\tunset($projected[$index]);\n\t\t$projected[$value] = $value;\n\t}\n}\nksort($projected);\n\nreturn $projected;\n}\n\n// RSVPMaker Replay Follow up\n\nfunction rsvpmaker_replay_cron($post_id, $rsvp_id, $hours) {\n//Convert start time from local time to GMT since WP Cron sends based on GMT\n$start_time_gmt = time();\n$time_difference = $hours * 60 * 60; \n$reminder_time = $start_time_gmt + $time_difference;\n\nwp_clear_scheduled_hook( 'rsvpmaker_replay_email', array( $post_id, $rsvp_id, $hours ) );\n\n//Schedule the reminder\nwp_schedule_single_event( $reminder_time, 'rsvpmaker_replay_email', array( $post_id, $rsvp_id, $hours ) );\n}\n\nfunction rsvpmaker_replay_email ( $post_id, $rsvp_id, $hours ) {\nglobal $wpdb;\nglobal $rsvp_options;\n$wpdb->show_errors();\n\t$confirm_slug = '_rsvp_reminder_msg_'.$hours;\n\t$confirm = get_post_meta($post_id, $confirm_slug, true);\n\t$subject = get_post_meta($post_id, '_rsvp_reminder_subject_'.$hours, true);\n\n\tif(!empty($confirm))\n\t{\n\t$confirm = wpautop($confirm);\t\t\t\t\n\t}\n\n\t$rsvpto = get_post_meta($post_id,'_rsvp_to',true);\t\t\t\n\t\n$sql = \"SELECT email FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=$post_id AND id=\".$rsvp_id;\n\t$notify = $wpdb->get_var($sql);\t\t\t\t\t\t\t\n\t$mail[\"subject\"] = $subject;\n\t$mail[\"html\"] = $confirm;\n\t$mail[\"to\"] = $notify;\n\t$mail[\"from\"] = $rsvp_to;\n\t$mail[\"fromname\"] = get_bloginfo('name');\n\trsvpmaker_tx_email(get_post($post_id), $mail);\n}\n\n// RSVPMaker Reminders\n\nfunction rsvpmaker_reminder_cron($hours, $start_time, $post_id) {\n$hours = (int) $hours;\n$post_id = (int) $post_id;\n//Convert start time from local time to GMT since WP Cron sends based on GMT\nif(is_int($start_time))\n\t$start_time_gmt = $start_time;\nelse\n\t$start_time_gmt = rsvpmaker_strtotime( get_gmt_from_date( $start_time ) . ' GMT' );\n\n$time_difference = $hours * 60 * 60; \n$reminder_time = $start_time_gmt + $time_difference;\n\n//Remove existing cron event for this post if one exists\n//We pass $post_id because cron event arguments are required to remove the scheduled event\nwp_clear_scheduled_hook( 'rsvpmaker_send_reminder_email', array( $post_id, $hours ) );\n\n//Schedule the reminder\nwp_schedule_single_event( $reminder_time, 'rsvpmaker_send_reminder_email', array( $post_id, $hours ) );\n}\n\nfunction rsvpmaker_send_reminder_email ( $post_id, $hours ) {\nglobal $wpdb, $post;\nglobal $rsvp_options;\n$marker = $post_id.':'.$hours;\n$check = get_option('rsvpmaker_last_reminder');\n\nif($check == $marker)\n\treturn; //this already ran\n$success = update_option('rsvpmaker_last_reminder',$marker);\nif(!$success)\n\treturn;\n$wpdb->show_errors();\n\t$post = get_post($post_id);\n\t$reminder = rsvp_get_reminder($post_id,$hours);\n\t$confirm = $reminder->post_content;\n\t$subject = $reminder->post_title;\n\t$include_event = get_post_meta($post_id, '_rsvp_confirmation_include_event', true);\n\t$rsvpto = get_post_meta($post_id,'_rsvp_to',true);\n\t//handle codes like [datetime] and [rsvpdate]\n\t$subject = do_shortcode($subject);\n\tif(!empty($confirm))\n\t{\n\t$confirm = wpautop($confirm);\t\t\t\t\n\t}\n\n\tif($hours < 0)\n\t{\t\n\t$confirm .= \"<p>\".__(\"This is an automated reminder that we have you on the RSVP list for the event shown below. If your plans have changed, you can update your response by clicking on the RSVP button again.\",'rsvpmaker').\"</p>\";\n\t\tif($include_event)\n\t\t{\n\t\t\t$event_content = event_to_embed($post_id);\n\t\t}\n\t\telse\n\t\t\t$event_content = get_rsvp_link($post_id);\n\t}\n\t\t\t\n\t\t\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=$post_id AND yesno=1\";\n\t\t\tif(get_post_meta($post_id,'paid_only_confirmation',true))\n\t\t\t\t$sql .= \" AND amountpaid\";\n\n\t\t\t$rsvps = $wpdb->get_results($sql,ARRAY_A);\n\t\t\tif($rsvps)\n\t\t\tforeach($rsvps as $row)\n\t\t\t\t{\n\t\t\t\t$notify = $row[\"email\"];\n\t\t\t\t$notification = $confirm;\n\t\t\t\t$notification .= '<h3>'.$row[\"first\"].\" \".$row[\"last\"].\" \".$row[\"email\"];\n\t\t\t\tif(!empty($row[\"guestof\"]))\n\t\t\t\t\t$notification .=  \" (\". __('guest of','rsvpmaker').\" \".$row[\"guestof\"].\")\";\n\t\t\t\t$notification .=  \"</h3>\\n\";\n\t\t\t\t$notification .=   \"<p>\";\n\t\t\t\tif(!empty($row[\"details\"]))\n\t\t\t\t\t{\n\t\t\t\t\t$details = unserialize($row[\"details\"]);\n\t\t\t\t\tforeach($details as $name => $value)\n\t\t\t\t\t\tif($value) {\n\t\t\t\t\t\t\t$notification .=  \"$name: $value<br />\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tif(!empty($row[\"note\"]))\n\t\t\t\t\t$notification .= \"note: \" . nl2br($row[\"note\"]).\"<br />\";\n\t\t\t\t$t = rsvpmaker_strtotime($row[\"timestamp\"]);\n\t\t\t\t$notification .= 'posted: '.rsvpmaker_date($rsvp_options[\"short_date\"],$t);\n\t\t\t\t$notification .=  \"</p>\";\n\t\t\t\t$notification .=  \"<h3>Event Details</h3>\\n\".str_replace('#rsvpnow\">','#rsvpnow\">'.__('Update','rsvptoast').' ',str_replace('*|EMAIL|*',$notify, $event_content));\n\t\t\t\t\n\t\t\t\techo \"Notification for $notify<br />$notification\";\n\n\t\t\t//if this is a follow up, we don't need all the RSVP data\n\t\t\tif($hours > 0)\n\t\t\t\t$notification = $confirm;\n\n\t\t\t\t$mail[\"subject\"] = $subject;\n\t\t\t\t$mail[\"html\"] = $notification;\n\t\t\t\t$mail[\"to\"] = $notify;\n\t\t\t\t$mail[\"from\"] = $rsvpto;\n\t\t\t\t$mail[\"fromname\"] = get_bloginfo('name');\n\n\t\t\t\trsvpmaker_tx_email(get_post($post_id), $mail);\n\t\t\t\t}\n}\n\nfunction rsvp_reminder_options($hours = -2) {\n$ho = array(-1,-2,-3,-4,-5,-6,-7,-8,-12,-16,-20,-24,-48,-72,1,2,3,4,5,6,7,8,12,16,20,24,28,32,36,40,44,48,72);\n$o = \"\";\nforeach($ho as $h)\n\t{\n\t$s = ($h == $hours) ? ' selected=\"selected\" ' : '';\n\tif($h < 0)\n\t\t$o .= sprintf('<option value=\"%s\" %s>%s ',$h,$s, abs($h) ).__('hours before','rsvpmaker').'</option>';\n\telse\n\t\t$o .= sprintf('<option value=\"%s\" %s>%s ',$h,$s,$h).__('hours after event starts','rsvpmaker').'</option>';\n\t}\n\treturn $o;\n}\n\nfunction rsvpmaker_youtube_live($post_id, $ylive, $show = false) {\nglobal $rsvp_options;\nglobal $current_user;\n\t\t\n\t\t$event = get_post($post_id);\n\t\t$start_time = $date = get_rsvp_date($post_id);\n\t\t$date = utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options['time_format'],rsvpmaker_strtotime($date)));\n\t\t$landing[\"post_type\"] = 'rsvpmaker';\n\t\t$landing[\"post_title\"] = __('Live','rsvpmaker').': '.$event->post_title;\n\t\t$landing[\"post_content\"] = __('The event starts','rsvpmaker').' '.$date.\"\\n\\n\".$ylive;\n\t\tif(!empty($ylive))\n\t\t\t$landing[\"post_content\"] .= \"\\n\\n[ylchat note=\\\"During the program, please post questions and comments in the chat box below.\\\"]\";\n\t\t$landing[\"post_author\"] = $current_user->ID;\n\t\t$landing[\"post_status\"] = 'publish';\n\t\t$landing_id = get_post_meta($post_id,'_webinar_landing_page_id',true);\n\t\tif($landing_id)\n\t\t\t{\n\t\t\t$landing[\"ID\"] = $landing_id;\n\t\t\twp_update_post( $landing );\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t$landing_id = wp_insert_post( $landing );\n\t\t\t}\n\t\tupdate_post_meta($post_id,'_webinar_landing_page_id',$landing_id);\n\t\t$landing_permalink = get_permalink($landing_id);\n\t\t$landing_permalink .= (strpos($landing_permalink,'?')) ? '&webinar=' : '?webinar=';\n\t\t$landing_permalink .= $passcode = wp_generate_password(14, false); // 14 characters, no special characters\n\t\tupdate_post_meta($landing_id,'_rsvpmaker_special','Landing Page');\n\t\tupdate_post_meta($landing_id,'_webinar_event_id',$post_id);\n\t\tupdate_post_meta($landing_id,'_webinar_passcode',$passcode);\n\t\tif(isset($_REQUEST[\"youtube_require_passcode\"]))\n\t\t\tupdate_post_meta($landing_id,'_require_webinar_passcode',$passcode);\n\t$subject = 'Reminder: '.$event->post_title;\n\t$message = __('Thanks for registering for','rsvpmaker').' '.$event->post_title.\"\\n\\n\".__('The event will start at','rsvpmaker').' '.$date.\"\\n\\n\".__('Tune in here','rsvpmaker').\":\\n\".'<a href=\"'.$landing_permalink.'\">'.$landing_permalink.\"</a>\\n\\n\".__('You will be able to post questions or comments to the live chat on the event page').'.';\n\t$hours = -2;\n\tupdate_post_meta($post_id, '_rsvp_confirm',$message);\n\tupdate_post_meta($post_id, '_rsvp_reminder_msg_'.$hours,$message);\n\tupdate_post_meta($post_id, '_rsvp_reminder_subject_'.$hours,$subject);\n\trsvpmaker_reminder_cron($hours, $start_time, $post_id);\n\n\t$hours = 2;\n\t$subject = 'Follow up: '.$event->post_title;\n\t$message = __('Thanks for your interest in ','rsvpmaker').' '.$event->post_title.\"\\n\\n\".__('If you missed all or part of the program, a replay is waiting for you here','rsvpmaker').\":\\n\".'<a href=\"'.$landing_permalink.'\">'.$landing_permalink.\"</a>\\n\\n\";\n\tupdate_post_meta($post_id, '_rsvp_reminder_msg_'.$hours,$message);\n\tupdate_post_meta($post_id, '_rsvp_reminder_subject_'.$hours,$subject);\n\trsvpmaker_reminder_cron($hours, $start_time, $post_id);\n\n\tif($show)\n\t\tprintf('<p>%s <a href=\"%s\">%s</a> (<a href=\"%s\">%s</a>)</p>',__('YouTube Live landing page created at'),$landing_permalink,$landing_permalink, admin_url('post.php?action=edit&post='.$landing_id), __('Edit','rsvpmaker'));\n\t\n}\n\nfunction no_mce_plugins( $p ) { return array(); }\n\nfunction rsvpmaker_template_reminder_add($hours,$post_id) {\n\t$cron = get_post_meta($post_id,'rsvpmaker_template_reminder',true);\n\tif(!is_array($cron))\n\t\t$cron = array();\n\tif(!in_array($hours,$cron))\n\t\t$cron[] = $hours;\n\tupdate_post_meta($post_id, 'rsvpmaker_template_reminder', $cron);\n}\n\nfunction rsvp_get_confirm($post_id, $return_post = false) {\n\tglobal $rsvp_options, $post, $wpdb, $wp_styles;\n\t$content = get_post_meta($post_id,'_rsvp_confirm',true);\n\tif(empty($content))\n\t\t$content = $rsvp_options['rsvp_confirm'];\n\tif(is_numeric($content))\n\t{\n\t\t$id = $content;\n\t\t$conf_post=get_post($id);\n\t\tif(empty($conf_post))\n\t\t{\n\t\t\t//maybe got deleted or something?\n\t\t\tif(is_numeric($rsvp_options['rsvp_confirm']))\n\t\t\t\t$conf_post= get_post($rsvp_options['rsvp_confirm']);\n\t\t}\n\t\tif(empty($conf_post->post_content)) {\n\t\t\t//if the default confirmation post is missing, recreate it\n\t\t\t$conf_array = array('post_title'=>'Confirmation:Default', 'post_content'=>'Thank you!','post_type' => 'rsvpemail','post_status' => 'publish');\n\t\t\t$conf_array['ID'] = $id = wp_insert_post($conf_array);\n\t\t\t$rsvp_options['rsvp_confirm'] = $id;\n\t\t\tupdate_option('RSVPMAKER_Options',$rsvp_options);\n\t\t\t$conf_post = (object) $conf_array;\n\t\t}\t\t\t\n\t\tif(!strpos($conf_post->post_content,'!-- /wp'))//if it's not Gutenberg content\n\t\t\t$conf_post->post_content = wpautop($conf_post->post_content);\n\t\tif(function_exists('do_blocks'))\n\t\t\t$conf_post->post_content = do_blocks($conf_post->post_content);\n\t\t$title = (!empty($post->post_title)) ? $post->post_title : 'not set';\n\t\t$context = (is_admin()) ? 'admin' : 'not admin';\n\t\t$log = sprintf('retrieve conf post ID %s for %s %s',$id,$title,$context);\n\t}\n\telse {\n\t\tif(function_exists('do_blocks'))\n\t\t\t$content = wp_kses_post(rsvpautog($content));\n\t\t$conf_post = array('post_title'=>'Confirmation:'.$post_id, 'post_content'=>$content,'post_type' => 'rsvpemail','post_status' => 'publish','post_parent' => $post_id);\n\t\t$conf_post['ID'] = $id = wp_insert_post($conf_post);\n\t\t$conf_post = (object) $conf_post;\n\t\tupdate_post_meta($post_id,'_rsvp_confirm',$id);\n\t\t$title = (!empty($post->post_title)) ? $post->post_title : 'not set';\n\t\t$context = (is_admin()) ? 'admin' : 'not admin';\n\t\t$log = sprintf('adding conf post ID %s for %s %s',$id,$title,$context);\n\t}\n\tif($return_post)\n\t\treturn $conf_post;\n\treturn $conf_post->post_content;\n}\n\nfunction rsvp_list_reminders_all_events() {\n\tglobal $wpdb;\n\t$events = get_future_events();\n\tif(empty($events))\n\t\treturn;\n\t$output = '';\n\tforeach($events as $event) {\n\t\t$sql = \"SELECT * FROM $wpdb->postmeta WHERE meta_key LIKE '_rsvp_reminder_msg_%' AND post_id=\".$event->ID.\" ORDER BY meta_key \";\n\t\t$results = $wpdb->get_results($sql);\n\t\tforeach($results as $row) {\n\t\t\t$time = str_replace('_rsvp_reminder_msg_','',$row->meta_key);\n\t\t\t$output .= sprintf('<p><input type=\"checkbox\" name=\"delete_reminder[]\" value=\"%d:%s\"> <a href=\"%s\">Edit Reminders</a> %s %s %s hours</p>',$event->ID, $row->meta_key, admin_url('edit.php?page=rsvp_reminders&post_type=rsvpmaker&post_id='.$event->ID),$event->post_title,$event->datetime,$time);\n\t\t}\n\t}\n\tif(!empty($output))\n\t\treturn \tsprintf('<form method=\"post\" action=\"%s\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders')).$output.'<p><button>Delete Checked</button>'.rsvpmaker_nonce('return').'</p></form>';\n}\n\nfunction rsvp_get_reminder($post_id,$hours) {\n\tglobal $rsvp_options, $wpdb;\n\t$key = '_rsvp_reminder_msg_'.$hours;\n\t$reminder_id = get_post_meta($post_id, $key,true);\n\tif(empty($reminder_id) && ($t = rsvpmaker_has_template($post_id)) &&!isset($_GET['was']) )\n\t\t$reminder_id = get_post_meta($t, $key,true);\n\tif(empty($reminder_id) || !is_numeric($reminder_id))\n\t\treturn;\n\t$conf_post = get_post($reminder_id);\n\tif(empty($conf_post))\n\t\treturn;\n\tif(function_exists('do_blocks'))\n\t\t$conf_post->post_content = do_blocks($conf_post->post_content);\n\treturn $conf_post;\n}\n\nfunction rsvp_reminders () {\nglobal $wpdb;\nglobal $rsvp_options;\nglobal $current_user;\n$existing = $options = '';\n$templates = rsvpmaker_get_templates();\n$post_id = (isset($_REQUEST[\"post_id\"])) ? (int) $_REQUEST[\"post_id\"] : false;\n\nif(isset($_POST['defaults']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\tforeach($_POST['defaults'] as $index => $value) {\n\t\tif($index == 'confirmation') {\n\t\t\tdelete_post_meta($post_id,'_rsvp_confirm');\n\t\t}\n\t\tif($index == 'payment_confirmation') {\n\t\t\tdelete_post_meta($post_id,'payment_confirmation_message');\n\t\t}\n\t\tif($index == 'reminders')\n\t\t{\n\t\t\t$sql = \"DELETE FROM $wpdb->postmeta WHERE post_id=$post_id AND meta_key LIKE '_rsvp_reminder_msg_%'\";\n\t\t\t$wpdb->query($sql);\n\t\t}\n\t}\n}\n\n$documents = get_related_documents();\n?>\n<style>\n<?php \n$styles = rsvpmaker_included_styles();\necho $styles; ?>\n</style>\n<div class=\"wrap\"> \n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n<h1><?php echo __('Confirmation / Reminder Messages','rsvpmaker').': '.get_the_title($post_id); ?></h1> \n<?php\n\nif($post_id)\n\t$start_time = get_rsvp_date($post_id);\n\n$hours = (isset($_REQUEST[\"hours\"])) ? (int) $_REQUEST[\"hours\"] : false;\n\nif(isset($_GET[\"webinar\"]))\n\t{\n\t\t$post_id = (int) $_GET[\"post_id\"];\n\t\t$ylive = sanitize_text_field($_GET[\"youtube_live\"]);\t\n\t\trsvpmaker_youtube_live($post_id, $ylive, true);\n\t}\t\n\t\nif(isset($_GET['delete']))\n{\n\t$key = '_rsvp_reminder_msg_'. (int) $_GET['delete'];\n\tprintf('<p>Deleting %s</p>',$key);\n\tdelete_post_meta($post_id,$key);\n}\n\nif(isset($_POST['delete_reminder']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\tforeach($_POST['delete_reminder'] as $delete_reminder) {\n\t\t$delete_reminder = sanitize_text_field($delete_reminder);\n\t\t$p = explode(':',$delete_reminder);\n\t\tdelete_post_meta($p[0],$p[1]);\n\t}\n}\n\nif(isset($_GET['paid_only_confirmation'])) {\n\t$reminder_id = (int) $_GET['reminder_post_id'];\n\tupdate_post_meta($reminder_id, 'paid_only_confirmation', (int) $_GET['paid_only_confirmation']);\n\tprintf('<div class=\"notice notice-success\"><p>%s, post_id: %d</p></div>',__('Reminder updated','rsvpmaker'),$reminder_id);\n}\n\nif($post_id && $hours)\n{\n\t$reminder = rsvp_get_reminder($post_id,$hours);\n\tif(!empty($reminder))\n\t{\n\t\tprintf('<p>%s %s %s</p><h2>%s</h2>%s<p><a href=\"%s\">%s</a></p>',__('Added reminder ','rsvpmaker'), (int) $_GET['hours'],__('hours','rsvpmaker'),esc_html($reminder->post_title),wp_kses_post($reminder->post_content),admin_url('post.php?action=edit&post='.intval($reminder->ID)),__('Edit','rsvpmaker'));\t\n\tif(rsvpmaker_is_template($post_id))\n\t{\n\t\techo 'This is a template';\n\t\trsvpmaker_template_reminder_add($hours,$post_id);\n\t\trsvpautorenew_test (); // will add to the next scheduled event associated with template\n\t}\n\telse\n\t{\n\t\t$start_time = get_rsvp_event_time($post_id);\n\t\trsvpmaker_reminder_cron($hours, $start_time, $post_id);\n\t}\n\t\t\n\t}\n\telse '<h2>Error Adding Reminder</h2>';\n}\n\nif($post_id)\n{\nif(rsvpmaker_is_template($post_id))\n\tprintf('<p><em>%s</em></p>',__('This is an event template: The confirmation and reminder messages you set here will become the defaults for future events based on this template. The [datetime] placeholder in subject lines will be replaced with the specific event date.','rsvpmaker'));\n\n//$confirm = rsvp_get_confirm($post_id, true);\nprintf('<form action=\"%s\" method=\"post\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=').$post_id);\nrsvpmaker_nonce();\necho get_confirmation_options($post_id, $documents);\necho '<button>Save</button></form>';\n\n$reminder_copy = sprintf('<option value=\"%d\">%s</option>',get_post_meta($post_id,'_rsvp_confirm',true),__('Confirmation Message'));\n\nprintf('<h3>%s</h3>',__('Payment Confirmation','rsvpmaker'));\n$payment_confirmation = (int) get_post_meta($post_id,'payment_confirmation_message',true);\nif($payment_confirmation)\n{\n\t$pconf = get_post($payment_confirmation);\n\techo (empty($pconf->post_content)) ? '<p>[not set]</p>' : $pconf->post_content;\n}\n\nforeach($documents as $d) {\n\t$id = $d['id'];\n\tif(($id == 'edit_payment_confirmation') || ($id == 'edit_payment_confirmation_custom'))\n\tprintf('<p><a href=\"%s\">Edit: %s</a></p>',$d['href'],$d['title']);\n}\n\nif(!empty($pconf->post_content))\n\t$reminder_copy .= sprintf('<option value=\"%d\">%s</option>',$pconf->ID,__('Payment Confirmation','rsvpmaker'));\n\necho '<div style=\"border: thin solid #555; padding: 10px;\"><h2>Reminders</h2>';\n\n$sql = \"SELECT * FROM $wpdb->postmeta WHERE post_id=$post_id AND meta_key LIKE '_rsvp_reminder_msg_%' ORDER BY meta_key\";\n\n$results = $wpdb->get_results($sql);\n$delete_reminder_options = '';\nif(!$results)\n\techo '<p>No reminders active</p>';\nelse {\n\tforeach($results as $row)\n\t{\n\t\t$hours = str_replace('_rsvp_reminder_msg_','',$row->meta_key);\n\t\t$type = ($hours > 0) ? 'FOLLOW UP' : 'REMINDER';\n\t\t$reminder = rsvp_get_reminder($post_id,$hours);\n\t\t$reminder_copy .= sprintf('<option value=\"%d\">%s %s</option>',$reminder->ID,$type,$hours);\n\t\t$delete_reminder_options .= sprintf('<option value=\"%s\">%s %s</option>',esc_attr($post_id.':'.$row->meta_key),esc_html($type),esc_html($hours));\n\t\tprintf('<h2>%s (%s hours)</h2><h3>%s</h3>%s',esc_html($type),esc_html($hours),esc_html($reminder->post_title),wp_kses_post($reminder->post_content));\n\t\t$parent = $reminder->post_parent;\n\t\tif($parent != $post_id)\n\t\t\tprintf('<p>%s<br /><a href=\"%s\">%s</a></p>',__('This is the standard reminder from the event template','rsvpmaker'), admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&post_id='.$post_id.'&hours='.$hours.'&was='. $reminder->ID),__('Customize for this event','rsvpmaker'));\n\t\tforeach($documents as $d) {\n\t\t\t$id = $d['id'];\n\t\t\tif(($id == 'reminder'.$hours) || ($id == 'reminder'.$hours.'custom'))\n\t\t\tprintf('<p><a href=\"%s\">Edit: %s</a></p>',esc_attr($d['href']),esc_html($d['title']));\n\t\t}\n\t\t$paid_only = get_post_meta($reminder->ID,'paid_only_confirmation',true);\n\t\tif($paid_only)\n\t\t\t$radio = sprintf('<input type=\"radio\" name=\"paid_only_confirmation\" value=\"1\" checked=\"checked\" /> Yes <input type=\"radio\" name=\"paid_only_confirmation\" value=\"0\" /> No ');\n\t\telse\n\t\t\t$radio = sprintf('<input type=\"radio\" name=\"paid_only_confirmation\" value=\"1\" /> Yes <input type=\"radio\" name=\"paid_only_confirmation\" value=\"0\"  checked=\"checked\"  /> No ');\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" />\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvp_reminders\" />\n\t\t<input type=\"hidden\" name=\"message_type\" value=\"confirmation\" />\n\t\t<input type=\"hidden\" name=\"post_id\" value=\"%d\" />\n\t\t<input type=\"hidden\" name=\"reminder_post_id\" value=\"%d\" />\n\t\t<p>%s %s %s\n\t\t<button>Update</button></p>\n\t\t</form>',admin_url('edit.php'),esc_attr($post_id),esc_attr($reminder->ID),__('Send only after payment','rsvpmaker'),$radio,rsvpmaker_nonce('return'));\n\t}\nprintf('<h3>Delete Reminder</h3><form method=\"post\" action=\"%s\"><select name=\"delete_reminder[]\">%s</select><br /><button>Delete</button>%s</form>',admin_url('edit.php?page=rsvp_reminders&post_type=rsvpmaker&post_id='.$post_id),$delete_reminder_options,rsvpmaker_nonce('return'));\n}\n\n$reminder_copy .= '<option value=\"\">'.__('Blank message','rsvpmaker').'</option>';\n\n$hour_options = rsvp_reminder_options();\nprintf('<h3>Add Reminders and Follow Up Messages</h3>\n<form method=\"post\" action=\"%s\"><input type=\"hidden\" name=\"create_reminder_for\" value=\"%s\">\n<p><select name=\"hours\">%s</select>\n%s\n<select name=\"copy_from\">%s</select></p>\n<p><input type=\"checkbox\" name=\"paid_only\" value=\"1\"> Send for PAID registrations only</p>\n<p><button>Submit</button></p>%s</form>',admin_url('edit.php'),esc_attr($post_id),$hour_options,__('Based on','rsvpmaker'),$reminder_copy,rsvpmaker_nonce('return'));\n\necho '</div>';//end reminders section\n\nprintf('<h3>Reset to Defaults</h3>\n<form method=\"post\" action=\"%s\">\n<p><input type=\"checkbox\" name=\"defaults[confirmation]\" value=\"1\" /> Confirmation</p>\n<p><input type=\"checkbox\" name=\"defaults[payment_confirmation]\" value=\"1\"> Payment Confirmation</p>\n<p><input type=\"checkbox\" name=\"defaults[reminders]\" value=\"1\"> Remove Reminders</p>\n<p><button>Submit</button></p>%s</form>',admin_url('edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id='.$post_id),rsvpmaker_nonce('return'));\n\n?>\n<h3><?php esc_html_e('Webinar Setup','rsvpmaker'); ?></h3>\n<form method=\"get\" action = \"<?php echo admin_url('edit.php'); ?>\">\n<p><?php esc_html_e('This utility sets up a landing page and suggested confirmation and reminder messages, linked to that page. RSVPMaker explicitly supports webinars based on YouTube Live, but you can also embed the coding required for another webinar of your choice.','rsvpmaker'); ?></p>\n<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" >\n<input type=\"hidden\" name=\"page\" value=\"rsvp_reminders\" >\n<input type=\"hidden\" name=\"webinar\" value=\"1\" >\n<input type=\"hidden\" name=\"post_id\" value=\"<?php echo esc_attr($post_id); ?>\">\n<p>YouTube Live url: <input type=\"text\" name=\"youtube_live\" value=\"\"> <input type=\"checkbox\" name=\"youtube_require_passcode\" value=\"1\" /> <?php esc_html_e('Require passcode to view','rsvpmaker');?></p>\n<?php rsvpmaker_nonce(); ?>\n<p><button><?php esc_html_e('Create','rsvpmaker');?></button></p>\n</form>\n<?php\n\n}\nelse {\n\t$o = '<option value=\"\">Select Event or Event Template</option>';\n\t$templates = rsvpmaker_get_templates();\n\tif($templates)\n\tforeach($templates as $event)\n\t{\n\t\tif(current_user_can('edit_post',$event->ID))\n\t\t$o .= sprintf('<option value=\"%s\">TEMPLATE: %s</option>',esc_attr($event->ID),esc_html($event->post_title));\n\t}\n\t$future = get_future_events();\n\tif($future)\n\tforeach($future as $event)\n\t{\n\t\tif(current_user_can('edit_post',$event->ID))\n\t\t$o .= sprintf('<option value=\"%s\">%s - %s</option>',esc_attr($event->ID),esc_html($event->post_title),esc_html($event->date));\n\t}\t\n\tprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"page\" value=\"rsvp_reminders\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\"><select name=\"post_id\">%s</select><button>Get</button>%s</form>',admin_url('edit.php'),$o,rsvpmaker_nonce('return'));\n}\n\nrsvpmaker_reminders_nudge ();\n\n$list = rsvp_list_reminders_all_events();\nif($list)\n\techo '<h2>Reminders for All Upcoming Events</h2>'.$list;\n\n?>\n<h3><?php esc_html_e('A Note on More Reliable Scheduling','rsvpmaker');?></h3>\n<p><?php esc_html_e('RSVPMaker takes advantage of WP Cron, a standard WordPress scheduling mechanism. Because it only checks for scheduled tasks to be run when someone visits your website, WP Cron can be imprecise -- which could be a problem if you want to make sure a reminder will go out an hour before your event, if that happens to be a low traffic site. Caching plugins can also get in the way of regular WP Cron execution. Consider following <a href=\"http://code.tutsplus.com/articles/insights-into-wp-cron-an-introduction-to-scheduling-tasks-in-wordpress--wp-23119\">these directions</a> to make sure your server checks for scheduled tasks to run on a more regular schedule, like once every 5 or 15 minutes.','rsvpmaker');?></p>\n\n<p><?php esc_html_e('Using Unix cron, the command you would set to execute would be','rsvpmaker');?>:</p>\n<code>\ncurl <?php echo site_url('/wp-cron.php?doing_wp_cron=1');?> > /dev/null 2>&1\n</code>\n<p><?php esc_html_e('If curl does not work, you can also try this variation (seems to work better on some systems)','rsvpmaker');?>:</p>\n<code>\nwget -qO- <?php echo site_url('/wp-cron.php?doing_wp_cron=1');?>  &> /dev/null\n</code>\n</div>\n<?php\n\n}\n\nfunction rsvpmaker_placeholder_image () {\n$impath = dirname( __FILE__ ).DIRECTORY_SEPARATOR.'placeholder.png';\n$im = imagecreatefrompng($impath);\nif(!$im)\n{\n$im = imagecreate(800, 50);\nimagefilledrectangle($im,5,5,790,45, imagecolorallocate($im, 50, 50, 255));\n}\n\n$bg = imagecolorallocate($im, 200, 200, 255);\n$border = imagecolorallocate($im, 0, 0, 0);\n$textcolor = imagecolorallocate($im, 255, 255, 255);\n\n$text = (isset($_GET['post_id'])) ? __('Event','rsvpmaker').': ' : __('Events','rsvpmaker').': ';\n$tip = '('.__('double-click for popup editor','rsvpmaker').')';\n\nforeach ($_GET as $name => $value)\n\t{\n\tif($name == 'rsvpmaker_placeholder')\n\t\tcontinue;\n\tif(empty($value))\n\t\tcontinue;\n\t$text .= $name.'='.$value.' '; \n\t}\n\n// Write the string at the top left\nimagestring($im, 5, 10, 10, $text, $textcolor);\nimagestring($im, 5, 10, 25, $tip, $textcolor);\n\n// Output the image\nheader('Content-type: image/png');\n\nimagepng($im);\nimagedestroy($im);\nexit();\n}\n\nfunction rsvp_mce_buttons( $buttons ) {\n\tglobal $post;\n\tif(empty($post)) return $buttons;\n\tif(($post->post_type=='rsvpmaker') || (isset($_GET[\"post_type\"]) && ($_GET[\"post_type\"] == 'rsvpmaker')) )\n\t\treturn $buttons;\n    array_push( $buttons, 'rsvpmaker_upcoming' );\n    array_push( $buttons, 'rsvpmaker_one' );\n    return $buttons;\n}\nadd_filter( 'mce_buttons', 'rsvp_mce_buttons' ); //, 10000 priority for Beaver Builder\n\nfunction rsvp_mce_plugins ( $plugin_array ) {\n\tglobal $post;\n\tif(empty($post)) return $plugin_array;\n\tif(($post->post_type=='rsvpmaker') || (isset($_GET[\"post_type\"]) && ($_GET[\"post_type\"] == 'rsvpmaker')) )\n\t\treturn $plugin_array;\n\t\n    $plugin_array['rsvpmaker_upcoming'] = plugins_url( 'mce.js?v=2.2' , __FILE__ );\n    $plugin_array['rsvpmaker_one'] = plugins_url( 'mce-single-event.js?v=2.4' , __FILE__ );\n    return $plugin_array;\n}\nadd_filter( 'mce_external_plugins', 'rsvp_mce_plugins', 10000);\n\nfunction rsvpmaker_upcoming_admin_js() {\nif(function_exists('do_blocks'))\n\treturn; //don't need this on Gutenberg-enabled sites\n\n    global $current_screen;\n\tglobal $post;\n\tglobal $wp_query;\n\tglobal $wpdb;\n\tglobal $showbutton;\n\tglobal $startday;\n\tglobal $rsvp_options;\n\t\n\t$showbutton = true;\n\t\n\t$backup = $wp_query;\n\n    $type = $current_screen->post_type;\n\n    if (is_admin() && $type != 'rsvpmaker') {\n     \n\t \t$sql = \"SELECT *, $wpdb->postmeta.meta_value as datetime, $wpdb->posts.ID as postID, 1 as current\nFROM `\".$wpdb->postmeta.\"`\nJOIN $wpdb->posts ON \".$wpdb->postmeta.\".post_id = $wpdb->posts.ID AND meta_key='_rsvp_dates'\nWHERE  meta_value >= '\".get_sql_now().\"' AND $wpdb->posts.post_status = 'publish'\nORDER BY meta_value\";\n\t $results = $wpdb->get_results($sql);\n\t $row[] = \"{text: 'Pick One?', value: '0'}\";\n\t$row[] = \"{text: 'Next Event', value: 'next'}\";\n\t$row[] = \"{text: 'Next Event - RSVP On', value: 'nextrsvp'}\";\n\tif($results)\n\tforeach ($results as $r)\n\t \t$row[] = sprintf(\"{text: '%s', value: '%d'}\",addslashes($r->post_title).' '.rsvpmaker_date('r',rsvpmaker_strtotime($r->datetime)),$r->ID);   \n\n$terms = get_terms('rsvpmaker-type', array('hide_empty' => false));\n$t[] = \"{text: 'Any', value: ''}\";\nif ( ! empty( $terms ) && ! is_wp_error( $terms ) ){\n     foreach ( $terms as $term ) {\n       $t[] = sprintf(\"{text: '%s', value: '%s'}\",$term->name,$term->slug);\n     }\n}\n\t?>\n        <script type=\"text/javascript\">\n        var upcoming = [<?php echo implode(\",\\n\",$row); ?>];\n\t\tvar rsvpmaker_types = [<?php echo implode(\",\\n\",$t); ?>];\n        </script>\n        <?php\n    }\n}\n\nfunction rsvpmaker_clone_title($title) {\n\tif(isset($_GET[\"clone\"]))\n\t\t{\n\t\t\t$id = (int) $_GET[\"clone\"];\n\t\t\t$clone = get_post($id);\n\t\t\t$title = $clone->post_title;\n\t\t}\n\treturn $title;\n}\nadd_filter('default_title','rsvpmaker_clone_title');\n\nfunction rsvpmaker_clone_content ($content) {\n\tif(isset($_GET[\"clone\"]))\n\t\t{\n\t\t\t$id = (int) $_GET[\"clone\"];\n\t\t\t$clone = get_post($id);\n\t\t\t$content = $clone->post_content;\n\t\t}\n\treturn $content;\n}\nadd_filter('default_content','rsvpmaker_clone_content');\n\nfunction export_rsvpmaker () {\n//pack data from custom tables into wordpress metadata\nglobal $wpdb;\n$results = $wpdb->get_results('SELECT * FROM '.$wpdb->prefix.'rsvpmaker ORDER BY event',ARRAY_A);\nif($results)\n\t{\n\tforeach($results as $row)\n\t\t{\n\t\t\tarray_shift($row); // id becomes irrelevant\n\t\t\t$events[$row['event']][] = $row; \t\t\n\t\t}\n\tif($events && is_array($events))\n\tforeach($events as $event => $meta)\n\t\tupdate_post_meta($event,'_export_rsvpmaker',$meta);\n\t}\n$results = $wpdb->get_results('SELECT * FROM '.$wpdb->prefix.'rsvp_volunteer_time ORDER BY event',ARRAY_A);\nif($results)\n\t{\n\tforeach($results as $row)\n\t\t{\n\t\t\tarray_shift($row); // id becomes irrelevant\n\t\t\t$v[$row['event']][] = $row; \t\t\n\t\t}\n\tforeach($v as $event => $meta)\n\t\tupdate_post_meta($event,'_export_rsvp_volunteer_time',$meta);\n\t}\n\n}\n\nfunction import_rsvpmaker() {\nglobal $wpdb;\n// import routine (transfer from another site)\n\nglobal $wpdb;\n$wpdb->show_errors();\n\n$results = $wpdb->get_results(\"SELECT * FROM $wpdb->postmeta WHERE meta_key='_export_rsvpmaker' \");\nif($results)\n{\nforeach($results as $row)\n\t{\n\t$data = unserialize($row->meta_value);\n\tif(is_array($data))\n\tforeach($data as $newrow)\n\t{\n\t$sql = \"INSERT INTO \".$wpdb->prefix.'rsvpmaker SET ';\n\t$count = 0;\n\tforeach($newrow as $key => $value)\n\t\t{\n\t\tif($count)\n\t\t\t$sql .= ', ';\n\t\t$sql .= $wpdb->prepare(\"`$key` = %s\",$value);\n\t\t$count++;\n\t\t}\n\t$wpdb->query($sql);\n\t}\n\t\n\t}\n$wpdb->query(\"DELETE FROM $wpdb->postmeta WHERE meta_key='_export_rsvpmaker' \");\n}\n\n$results = $wpdb->get_results(\"SELECT * FROM $wpdb->postmeta WHERE meta_key='_export_rsvp_volunteer_time' \");\nif($results)\n{\nforeach($results as $row)\n\t{\n\t$data = unserialize($row->meta_value);\n\tforeach($data as $newrow)\n\t{\n\t$sql = \"INSERT INTO \".$wpdb->prefix.'rsvp_volunteer_time SET ';\n\t$count = 0;\n\tforeach($newrow as $key => $value)\n\t\t{\n\t\tif($count)\n\t\t\t$sql .= ', ';\n\t\t$sql .= $wpdb->prepare(\"`$key` = %s\",$value);\n\t\t$count++;\n\t\t}\n\t$wpdb->query($sql);\n\t}\n\t\n\t}\n$wpdb->query(\"DELETE FROM $wpdb->postmeta WHERE meta_key='_export_rsvp_volunteer_time' \");\n}\n\n}\n\nfunction rsvpmaker_paypal_config_ajax () {\n$filename = rsvpmaker_paypal_config_write(sanitize_text_field($_POST[\"user\"]),sanitize_text_field($_POST[\"password\"]),sanitize_text_field($_POST[\"signature\"]));\ndie($filename);\n}\n\nfunction rsvpmaker_paypal_config_write($user,$password,$signature) {\n$up = wp_upload_dir();\n$filename = trailingslashit($up['path']);\n$characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $charactersLength = strlen($characters);\n    for ($i = 0; $i < 20; $i++) {\n        $filename .= $characters[rand(0, $charactersLength - 1)];\n    }\n$filename .= '.php';\n\n$paypal_config_template = sprintf(\"<?php\nif( !defined( 'ABSPATH' ) )\n\tdie( 'Fatal error: Call to undefined function paypal_setup() in %s on line 5' );\ndefine('API_USERNAME', '%s');\ndefine('API_PASSWORD', '%s');\ndefine('API_SIGNATURE', '%s');\ndefine('API_ENDPOINT', 'https://api-3t.paypal.com/nvp');\ndefine('USE_PROXY',FALSE);\ndefine('PROXY_HOST', '127.0.0.1');\ndefine('PROXY_PORT', '808');\ndefine('PAYPAL_URL', 'https://www.paypal.com/webscr&cmd=_express-checkout&useraction=commit&token=');\ndefine('VERSION', '3.0');\n?>\",$filename,$user,$password,$signature);\n$myfile = fopen($filename, \"w\") or die(\"Unable to open file!\");\nfwrite($myfile, $paypal_config_template);\nfclose($myfile);\nupdate_option('paypal_config',$filename);\nreturn $filename;\n}\n\nfunction future_rsvpmakers_by_template($template_id) {\n\t$ids = array();\n\t$sched_result = get_events_by_template($template_id);\n\tif($sched_result)\n\tforeach($sched_result as $row)\n\t\t$ids[] = $row->ID;\n\treturn $ids;\n}\n\nfunction rsvptimes ($time,$fieldname) {\nif(empty($time))\n\t$time = '01:00:00';\nprintf('%s <input type=\"time\" name=\"%s\" value=\"%s\">',__('Time'),$fieldname,$time);\n}\n\nfunction rsvpmaker_add_one () {\n\nif(!empty($_POST[\"rsvpmaker_add_one\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\nglobal $wpdb;\nglobal $current_user;\n\n$t = (int) $_POST[\"template\"];\n$post = get_post($t);\n$template = get_template_sked($t);\n\n$hour = (isset($template[\"hour\"]) ) ? (int) $template[\"hour\"] : 17;\n$minutes = isset($template[\"minutes\"]) ? $template[\"minutes\"] : '00';\n\n\t$my_post['post_title'] = $post->post_title;\n\t$my_post['post_content'] = $post->post_content;\n\t$my_post['post_status'] = 'draft';\n\t$my_post['post_author'] = $current_user->ID;\n\t$my_post['post_type'] = 'rsvpmaker';\n\tforeach($_POST[\"recur_check\"] as $index => $on)\n\t\t{\n\t\t\tif(!empty($_POST[\"recur_title\"][$index]))\n\t\t\t\t$my_post['post_title'] = sanitize_text_field($_POST[\"recur_title\"][$index]);\n\t\t\t$year = sanitize_text_field($_POST[\"recur_year\"][$index]);\n\t\t\t$cddate = format_cddate($year, sanitize_text_field($_POST[\"recur_month\"][$index]), sanitize_text_field($_POST[\"recur_day\"][$index]), $hour, $minutes);\n\t\t\t$dpart = explode(':',$template[\"duration\"]);\n\t\t\t\n\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t{\n\t\t\t\t$dtext = $cddate.' +'.$dpart[0].' hours';\n\t\t\t\tif(!empty($dpart[1]))\n\t\t\t\t\t$dtext .= ' +'.$dpart[1].' minutes';\n\t\t\t\t$dt = rsvpmaker_strtotime($dtext);\n\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$dt);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t$duration = $template[\"duration\"];\n\t\t\t$y = (int) $_POST[\"recur_year\"][$index];\n\t\t\t$m = (int) $_POST[\"recur_month\"][$index];\n\t\t\tif($m < 10) $m = '0'.$m;\n\t\t\t$d = (int) $_POST[\"recur_day\"][$index];\n\t\t\tif($d < 10) $d = '0'.$d;\n\t\t\t$date = $y.'-'.$m.'-'.$d;\n\n\t\t\t$my_post['post_name'] = sanitize_text_field($my_post['post_title'] . '-' .$date );\n\t\t\t$singular = __('Event','rsvpmaker');\n// Insert the post into the database\n  \t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\tadd_rsvpmaker_date($post_id,$cddate,$duration);\t\t\t\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\t$ts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$post_id);\n\t\t\t\tupdate_post_meta($post_id,\"_updated_from_template\",$ts);\n\n\t\t\t\twp_set_object_terms( $post_id, $rsvptypes, 'rsvpmaker-type', true );\n\n\t\t\t\t$results = $wpdb->get_results(\"SELECT * FROM $wpdb->postmeta WHERE meta_key LIKE '_rsvp%' AND post_id=\".$t);\n\t\t\t\tif($results)\n\t\t\t\tforeach($results as $row)\n\t\t\t\t\t{\n\t\t\t\t\tif($row->meta_key == '_rsvp_reminder')\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t$wpdb->query($wpdb->prepare(\"INSERT INTO $wpdb->postmeta SET meta_key=%s,meta_value=%s,post_id=%d\",$row->meta_key,$row->meta_value,$post_id));\n\t\t\t\t\t}\n\t\t\t\t//copy rsvp options\n\t\t\t\t$editurl = admin_url('post.php?action=edit&post='.$post_id);\n\t\t\t\twp_redirect($editurl);\n\t\t\t\texit;\n\t\t\t\t}\t\t\n\t\tbreak;\n\t\t}\n\t}\n}//end rsvpmaker_add_one\n\nfunction rsvpmaker_admin_page_top($headline) {\n\n/*\n$hook = rsvpmaker_admin_page_top(__('Headline','rsvpmaker'));\nrsvpmaker_admin_page_bottom($hook);\n*/\n$hook = '';\nif(is_admin()) { // if not full screen view\n\t$screen = get_current_screen();\n\t$hook = $screen->id;\n}\n\n$print = (isset($_GET[\"page\"]) && !isset($_GET[\"rsvp_print\"])) ? '<div style=\"width: 200px; text-align: right; float: right;\"><a target=\"_blank\" href=\"'.admin_url(str_replace('/wp-admin/','',sanitize_text_field($_SERVER['REQUEST_URI']))).'&rsvp_print=1\">Print</a></div>' : '';\nprintf('<div id=\"wrap\" class=\"%s toastmasters\">%s<h1>%s</h1>',$hook,$print,$headline);\nreturn $hook;\n}\n\nfunction rsvpmaker_admin_page_bottom($hook = '') {\nif(is_admin() && empty($hook))\n\t{\n\t$screen = get_current_screen();\n\t$hook = $screen->id;\n\t}\nprintf(\"\\n\".'<hr /><p><small>%s</small></p></div>',$hook);\n}\n\nfunction rsvpmaker_editors() {\nif(isset($_GET['page']) && ($_GET['page'] == 'rsvp_reminders'))\n\twp_enqueue_editor();\n}\n\nfunction rsvpmaker_admin_notice_format($message, $slug, $cleared, $type='info')\n{\nif(in_array($slug,$cleared))\n\treturn;\nreturn sprintf('<div class=\"notice notice-%s rsvpmaker-notice is-dismissible\" data-notice=\"%s\">\n<p>%s</p>\n</div>',esc_attr($type),esc_attr($slug),$message);\n}\n\n/**\n * AJAX handler to store the state of dismissible notices.\n */\nfunction rsvpmaker_ajax_notice_handler() {\n$cleared = get_option('cleared_rsvpmaker_notices');\n$cleared = is_array($cleared) ? $cleared : array();\n    // Pick up the notice \"type\" - passed via jQuery (the \"data-notice\" attribute on the notice)\n    $cleared[] = sanitize_text_field($_REQUEST['type']);\n    update_option('cleared_rsvpmaker_notices',$cleared);\n}\n\nfunction rsvpmaker_debug_log($msg, $label = '', $filename_base = '') {\n\tglobal $rsvp_options;\n\t\tif(empty($rsvp_options[\"debug\"]))\n\t\t\treturn;\n\t\tif(empty($filename_base))\n\t\t\t$filename_base = 'rsvpmaker';\n\t\t\t\n\tif(!is_string($msg))\n\t\t$msg = var_export($msg,true);\n\tif(!empty($label))\n\t\t$msg = $label.\":\\n\".$msg;\n\t$upload_dir   = wp_upload_dir();\n\t \n\tif ( ! empty( $upload_dir['basedir'] ) ) {\n\t\t$fname = $upload_dir['basedir'].'/'.$filename_base.'_log_'.date('Y-m-d').'.txt';\n\t\tfile_put_contents($fname, date('r').\"\\n\".$msg.\"\\n\\n\", FILE_APPEND);\n\t\t//clean old logs\n\t\t$oldlog = $upload_dir['basedir'].'/'.$filename_base.'_log_'.date('Y-m-d',time() - 172800).'.txt';\n\t\tif (file_exists($oldlog)) {\n\t\t\tunlink($oldlog);\n\t\t}\n\t}\n}\n\t\n\nfunction rsvpmaker_map_meta_cap( $caps, $cap, $user_id, $args ) {\n    if (!empty($args[0]) && ( 'edit_post' == $cap || strpos($cap,'rsvpmaker') ) )\n    {\n        global $wpdb;\n\t\t$post_id = $args[0];\n\t\t$author = $wpdb->get_var(\"SELECT post_author FROM $wpdb->posts WHERE ID=\".intval($post_id));\n\t\t$eds = get_additional_editors($post_id);\n\t\tif(!current_user_can($cap[0]) && ($author != $user_id) && in_array($user_id, $eds) )\n        {\n            /* Set an empty array for the caps. */\n            $caps = array(); \n            $caps[] = 'edit_rsvpmakers';\n\t\t\tif(isset($_GET['action']) && ($_GET['action'] == 'edit'))\n\t\t\t{\n\t\t\t//if the current author is not already on the editors list, add them\n\t\t\tif(!$wpdb->get_var(\"SELECT meta_id FROM $wpdb->postmeta WHERE post_id=$post_id AND meta_key='_additional_editors' AND meta_value=$author\"))\n\t\t\t\tadd_post_meta($post_id, '_additional_editors',$author);\t\t\t\t\n\t\t\twp_update_post(array('ID' => $post_id, 'post_author' => $user_id));\n\t\t\t}\n        }\n    }\n    /* Return the capabilities required by the user. */\n    return $caps;\n}\n\nfunction auto_renew_project ($template_id, $notify = true) {\nglobal $rsvp_options;\n\n$sofar = get_events_by_template($template_id);\n$fts = 0;\nif(!empty($sofar))\n{\n\t$farthest = array_pop($sofar);\n\t$fts = rsvpmaker_strtotime($farthest->datetime);\n}\nif($fts > (time() + (2 * MONTH_IN_SECONDS)) )\n\treturn; // cancel if more than 2 months worth of events in system\n$sked = get_template_sked($template_id);\n$hour = str_pad($sked['hour'],2,'0',STR_PAD_LEFT);\n$minutes = str_pad($sked['minutes'],2,'0',STR_PAD_LEFT);\n\t\n//printf('<pre>%s</pre>',var_export($sked,true));\nif(!isset($sked[\"week\"]))\n\treturn;\n$added = ($fts) ? sprintf('<p>In addition to previously published dates ending %s</p>',rsvpmaker_date($rsvp_options['long_date'],$fts)).\"\\n\" : '';\n$projected = rsvpmaker_get_projected($sked);\nif($projected)\nforeach($projected as $i => $ts)\n{\nif(($ts < current_time('timestamp')))\n\tcontinue; // omit dates past\nif(isset($fts) && $ts <= $fts)\n\tcontinue;\n$post = get_post($template_id);\n$date = rsvpmaker_date('Y-m-d',$ts).' '.$hour.':'.$minutes.':00';\n$added .= add_rsvpmaker_from_template($post, $sked, $date, $ts);\n} // end for loop\n\nif($notify && !empty($added))\n\t{\n\t\t$admin = get_option('admin_email');\n\t\t$mail['subject'] = __('Dates added for '.$post->post_title,'rsvpmaker');\n\t\t$mail['html'] = \"<p>Dates added according to recurring event schedule.</p>\\n\".$added;\n\t\t$mail['to'] = $admin;\n\t\t$mail['from'] = $admin;\n\t\t$mail['fromname'] = get_bloginfo('name');\n\t\trsvpmailer($mail);\n\t}\n}\n\nfunction add_rsvpmaker_from_template($post, $template, $date, $ts) {\n\tglobal $wpdb, $rsvp_options;\n\tif($post->post_status != 'publish')\n\t\treturn;\n\t$t = $post->ID;\n\t$my_post['post_title'] = $post->post_title;\n\t$my_post['post_content'] = $post->post_content;\n\t$my_post['post_status'] = 'publish';\n\t$my_post['post_author'] = $post->post_author;\n\t$my_post['post_type'] = 'rsvpmaker';\n\t\t\tif(empty($template[\"duration\"]))\n\t\t\t\t$template[\"duration\"] = '';\t\t\t\n\t\t\t$dpart = explode(':',$template[\"duration\"]);\n\t\t\t\n\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t{\n\t\t\t\t$dtext = $cddate.' +'.$dpart[0].' hours';\n\t\t\t\tif(!empty($dpart[1]))\n\t\t\t\t\t$dtext .= ' +'.$dpart[1].' minutes';\n\t\t\t\t$dt = rsvpmaker_strtotime($dtext);\n\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$dt);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t$duration = (isset($template[\"duration\"])) ? $template[\"duration\"] : '';\n\t\t\t$my_post['post_name'] = sanitize_title($my_post['post_title'] . '-' .$date );\n  \t\t\t$added = '';\n\t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\t$prettydate = rsvpmaker_date($rsvp_options['long_date'],$ts);\n\t\t\t\t$added = sprintf('<p>%s <a href=\"%s\">%s</a> / <a href=\"%s\">%s</a> / <a href=\"%s\">%s</a> </p>',$prettydate,get_permalink($post_id),__('View','rsvpmaker'),admin_url(\"post.php?post=$post_id&action=edit\"),__('Edit','rsvpmaker'),admin_url(\"edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=$post_id&trash=1\"),__('Trash','rsvpmaker'));\n\t\t\t\tadd_rsvpmaker_date($post_id,$date,$duration);\t\t\t\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\t$upts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$post_id);\n\t\t\t\tupdate_post_meta($post_id,\"_updated_from_template\",$upts);\n\t\t\t\trsvpmaker_copy_metadata($t, $post_id);\n\t\t\t\trsvpmaker_update_event_row($post_id);\n\t\t\t}\n\treturn $added;\n}\n\nfunction rsvpautorenew_test () {\nglobal $rsvp_options;\n\t\n\tglobal $wpdb;\n\t$wpdb->show_errors();\n\n\t$sql = \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE meta_key='rsvpautorenew' AND meta_value=1 AND $wpdb->posts.post_status='publish' \";\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $row)\n\t{\n\t\tauto_renew_project ($row->ID);\n\t}\n\t$sql = \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE meta_key='rsvpmaker_template_reminder' \";\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $row)\n\t{\t\t\n\t\t$thours = unserialize($row->meta_value);\n\t\t$next = rsvpmaker_next_by_template($row->ID);\n\t\tif(empty($next))\n\t\t\treturn;\n\t\t$message = get_post_meta($next->ID, '_rsvp_reminder_msg_'.$thours[0], true);\n\t\tif(!empty($message))\n\t\t\tcontinue; // already set\n\t\t$start_time = rsvpmaker_strtotime($next->datetime);\n\t\t$prettydate = rsvpmaker_date('l F jS g:i A T',rsvpmaker_strtotime($next->datetime));\n\t\t$include_event = get_post_meta($row->ID, '_rsvp_confirmation_include_event', true);\n\t\tupdate_post_meta($next->ID, '_rsvp_confirmation_include_event',$include_event);\n\t\tforeach($thours as $hours) {\n\t\t\t$message = get_post_meta($row->ID, '_rsvp_reminder_msg_'.$hours, true);\n\t\t\t$subject = get_post_meta($row->ID, '_rsvp_reminder_subject_'.$hours, true);\n\t\t\t$subject = str_replace('[datetime]',$prettydate,$subject);\n\t\t\tupdate_post_meta($next->ID, '_rsvp_reminder_msg_'.$hours,$message);\n\t\t\tupdate_post_meta($next->ID, '_rsvp_reminder_subject_'.$hours,$subject);\n\t\t\trsvpmaker_reminder_cron($hours, $start_time, $next->ID);\n\t\t}\n\t}\n}\n\nfunction rsvpmaker_template_checkbox_post () {\n\nif(empty($_POST) || empty($_REQUEST['t']) || empty($_REQUEST['page']) || ($_REQUEST['page'] != 'rsvpmaker_template_list'))\n\treturn;\nglobal $wpdb, $current_user;\n$t = (int) $_REQUEST['t'];\n$post = get_post($t);\n$template = $sked = get_template_sked($t);\n$template['hour'] = (int) $template['hour'];\nif($template['hour'] < 10)\n\t$template['hour'] = $sked['hour'] = '0'.$template['hour']; // make sure of zero padding\n$hour = $sked['hour'];\n$minutes = $sked['minutes'];\n$update_messages = '';\n\t\nif(!empty($_POST['trash_template']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\tforeach($_POST['trash_template'] as $id)\n\t\twp_trash_post((int) $id);\n\t$count = sizeof($_POST['trash_template']);\n\t$update_messages = '<div class=\"updated\">'.$count.' '.__('event posts moved to trash','rsvpmaker').'</div>';\n}\n\nif(isset($_POST[\"timechange\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\tforeach($_POST[\"timechange\"] as $id => $time)\n\t\t\tupdate_post_meta($id,'_rsvp_dates',sanitize_text_field($time));\n\t\tdelete_transient('rsvpmakerdates');\n\t}\n\nif(isset($_POST[\"update_from_template\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\tforeach($_POST[\"update_from_template\"] as $target_id)\n\t\t\t{\n\t\t\t\t$target_id = (int) $target_id;\n\t\t\t\tif(!current_user_can('publish_rsvpmakers'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$update_messages .= '<div class=\"updated\">Error</div>';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t$update_post['ID'] = $target_id;\n\t\t\t\t$update_post['post_title'] = $post->post_title;\n\t\t\t\t$update_post['post_content'] = $post->post_content;\n\t\t\t\twp_update_post($update_post);\n\t\t\t\trsvpmaker_copy_metadata($t, $target_id);\n\t\t\t\t$ts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$target_id);\n\t\t\t\tupdate_post_meta($target_id,\"_updated_from_template\",$ts);\n\t\t\t\t$duration = (empty($template[\"duration\"])) ? '' : $template[\"duration\"];\n\t\t\t\t$end_time = (empty($template['end'])) ? '' : $template['end'];\n\t\t\t\t$cddate = get_rsvpmaker_meta($target_id,'_rsvp_dates',true);\n\t\t\t\tif(!empty($cddate))\n\t\t\t\t\t{\n\t\t\t\t\t$parts = explode(' ',$cddate);\n\t\t\t\t\t$cddate = $parts[0].' '.$template['hour'].':'.$template['minutes'].':00';\t\t\n\t\t\t\t\tupdate_rsvpmaker_date($target_id,$cddate,$duration,$end_time);\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\tif(isset($rsvptypes))\n\t\t\t\t\twp_set_object_terms( $target_id, $rsvptypes, 'rsvpmaker-type', true );\n\n\t\t\t\t$update_messages .= '<div class=\"updated\">Updated: event #'.$target_id.' <a href=\"post.php?action=edit&post='.$target_id.'\">Edit</a> / <a href=\"'.get_post_permalink($target_id).'\">View</a></div>';\t\n\t\t\t}\n\t}\n\nif(isset($_POST[\"detach_from_template\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\tif(!current_user_can('publish_rsvpmakers'))\n\t{\n\t\t$update_messages .= '<div class=\"updated\">Error</div>';\n\t}\n\telse\n\tforeach($_POST[\"detach_from_template\"] as $target_id)\n\t\t{\n\t\t\t$target_id = (int) $target_id;\n\t\t\t$sql = $wpdb->prepare(\"UPDATE $wpdb->postmeta SET meta_key='_detached_from_template' WHERE meta_key='_meet_recur' AND post_id=%d\", $target_id);\n\t\t\t$result = $wpdb->query($sql);\n\t\t\t$update_messages .= '<div class=\"updated\">Detached from Template: event #'.$target_id.' <a href=\"post.php?action=edit&post='.$target_id.'\">Edit</a> / <a href=\"'.get_post_permalink($target_id).'\">View</a></div>';\t\n\t\t}\n}\n\n\nif(isset($_POST[\"recur_check\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\n\t$my_post['post_title'] = $post->post_title;\n\t$my_post['post_content'] = $post->post_content;\n\t$my_post['post_status'] = (($_POST['newstatus'] == 'publish') && current_user_can('publish_rsvpmakers')) ? 'publish' : 'draft';\n\t$my_post['post_author'] = $current_user->ID;\n\t$my_post['post_type'] = 'rsvpmaker';\n\n\tforeach($_POST[\"recur_check\"] as $index => $on)\n\t\t{\n\t\t\t$year = $y = (int) $_POST[\"recur_year\"][$index];\n\t\t\t$cddate = format_cddate($year, sanitize_text_field($_POST[\"recur_month\"][$index]), sanitize_text_field($_POST[\"recur_day\"][$index]), $hour, $minutes);\n\t\t\t$m = (int) $_POST[\"recur_month\"][$index];\n\t\t\t$d = (int) $_POST[\"recur_day\"][$index];\n\t\t\tif($m < 10) $m = '0'.$m;\n\t\t\t$d = (int) $_POST[\"recur_day\"][$index];\n\t\t\tif($d < 10) $d = '0'.$d;\n\t\t\t$date = $y.'-'.$m.'-'.$d;\n\t\t\tif(empty($template[\"duration\"]))\n\t\t\t\t$template[\"duration\"] = '';\t\t\t\n\t\t\t$dpart = explode(':',$template[\"duration\"]);\n\t\t\t\n\t\t\tif( is_numeric($dpart[0]) )\n\t\t\t\t{\n\t\t\t\t$dtext = $cddate.' +'.$dpart[0].' hours';\n\t\t\t\tif(!empty($dpart[1]))\n\t\t\t\t\t$dtext .= ' +'.$dpart[1].' minutes';\n\t\t\t\t$dt = rsvpmaker_strtotime($dtext);\n\t\t\t\t$duration = rsvpmaker_date('Y-m-d H:i:s',$dt);\n\t\t\t\t}\n\t\t\telse{\n\t\t\t\t$duration = (isset($template[\"duration\"])) ? $template[\"duration\"] : '';\n\t\t\t}\n\t\t\t\n\t\t\tif(!empty($_POST[\"recur_title\"][$index])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t\t\t$my_post['post_title'] = sanitize_text_field($_POST[\"recur_title\"][$index]);\n\n\t\t\t$my_post['post_name'] = $my_post['post_title'] . '-' .$date;\n\t\t\t$singular = __('Event','rsvpmaker');\n// Insert the post into the database\n  \t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\t$end_time = (empty($template['end'])) ? '' : $template['end'];\t\n\t\t\t\tupdate_rsvpmaker_date($post_id,$cddate,$duration,$end_time);\n\t\t\t\t$timezone = rsvpmaker_get_timezone_string($t);\n\t\t\t\trsvpmaker_add_event_row ($post_id, $cddate, $end_time, $duration,$timezone,$my_post['post_title']);\n\t\t\t\tif($my_post[\"post_status\"] == 'publish')\n\t\t\t\t\t$update_messages .=  '<div class=\"updated\">Posted: event for '.$cddate.' <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($post_id).'\">View</a></div>';\n\t\t\t\telse\n\t\t\t\t\t$update_messages .= '<div class=\"updated\">Draft for '.$cddate.' <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($post_id).'\">Preview</a></div>';\n\t\t\t\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\t$ts = $wpdb->get_var(\"SELECT post_modified from $wpdb->posts WHERE ID=\".$post_id);\n\t\t\t\tupdate_post_meta($post_id,\"_updated_from_template\",$ts);\n\t\t\t\trsvpmaker_copy_metadata($t, $post_id);\n\t\t\t\trsvpmaker_update_event_row($post_id);\n\t\t\t\t}\n\t\t\n\t\t}\n}\n\nif(isset($_POST[\"nomeeting\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  )\n{\n\t$my_post['post_title'] = __('No Meeting','rsvpmaker').': '.$post->post_title;\n\t$my_post['post_content'] = sanitize_textarea_field($_POST[\"nomeeting_note\"]);\n\t$my_post['post_status'] = current_user_can('publish_rsvpmakers') ? 'publish' : 'draft';\n\t$my_post['post_author'] = $current_user->ID;\n\t$my_post['post_type'] = 'rsvpmaker';\n\t\n\tif(!strpos($_POST[\"nomeeting\"],'-'))\n\t\t{ //update vs new post\n\t\t\t$id = (int) $_POST[\"nomeeting\"];\n\t\t\t$sql = $wpdb->prepare(\"UPDATE $wpdb->posts SET post_title=%s, post_content=%s WHERE ID=%d\",$my_post['post_title'],$my_post['post_content'],$id);\n\t\t\t$wpdb->show_errors();\n\t\t\t$return = $wpdb->query($sql);\n\t\t\tif($return == false)\n\t\t\t\t$update_messages .= '<div class=\"updated\">'.\"Error: $sql.</div>\\n\";\n\t\t\telse\n\t\t\t\t$update_messages .=  '<div class=\"updated\">Updated: no meeting <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($id).'\">View</a></div>';\t\n\t\t}\n\telse\n\t\t{\n\t\t\t$cddate = sanitize_text_field($_POST[\"nomeeting\"]).' 00:00:00';\n\t\t\t$my_post['post_name'] = $my_post['post_title'] . '-' .$cddate;\n\n// Insert the post into the database\n  \t\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t\t{\n\t\t\t\tadd_rsvpmaker_date($post_id,$cddate,'allday');\n\t\t\t\t$update_messages .=  '<div class=\"updated\">Posted: event for '.$cddate.' <a href=\"post.php?action=edit&post='.$post_id.'\">Edit</a> / <a href=\"'.get_post_permalink($post_id).'\">View</a></div>';\t\n\t\t\t\tadd_post_meta($post_id,'_meet_recur',$t,true);\n\t\t\t\trsvpmaker_update_event_row($post_id);\n\t\t\t\t}\n\t\t}\t\t\n}\n\tupdate_post_meta($t,'update_messages',$update_messages);\n\theader('Location: ' . admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&update_messages=1&t='.$t));\n\tdie();\n}\n\nfunction rsvpmaker_copy_metadata($source_id, $target_id) {\nglobal $wpdb;\n$log = '';\n//copy metadata\n$meta_keys = array();\n$post_meta_infos = $wpdb->get_results(\"SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$source_id\");\n$post_meta_infos = apply_filters('rsvpmaker_meta_update_from_template',$post_meta_infos);\n\n\t\tif (count($post_meta_infos)!=0) {\n\t\t\tforeach ($post_meta_infos as $meta_info) {\n\t\t\t\t$meta_key = $meta_info->meta_key;\n\t\t\t\tif(in_array($meta_key,$meta_keys))\n\t\t\t\t\tcontinue;\n\t\t\t\t$meta_keys[] = $meta_key;\n\t\t\t\t$meta_protect = array('_rsvp_reminder', '_sked', '_edit_lock','_additional_editors','rsvpautorenew','_meet_recur','_rsvp_dates');\n\t\t\t\tif(in_array($meta_key, $meta_protect) || strpos($meta_key,'sked') )\n\t\t\t\t{\n\t\t\t\t\t$log .= 'Skip '.$meta_key.'<br />';\n\t\t\t\t\tcontinue;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telseif(strpos($meta_key,'_note') || preg_match('/^_[A-Z]/',$meta_key) ) //agenda note or any other note\n\t\t\t\t\t{\n\t\t\t\t\t\t$log .= 'Skip '.$meta_key.'<br />';\n\t\t\t\t\t\tcontinue;\t\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$log .= 'Copy '.$meta_key.': '.$meta_info->meta_value.'<br />';\t\t\t\n\t\t\t\t}\n\t\t\t\tif(is_serialized($meta_info->meta_value))\n\t\t\t\t\tupdate_post_meta($target_id,$meta_key,unserialize($meta_info->meta_value));\n\t\t\t\telse\n\t\t\t\t\tupdate_post_meta($target_id,$meta_key,$meta_info->meta_value);\n\t\t\t\tif($meta_key == '_rsvp_deadline_daysbefore')\n\t\t\t\t\t$deadlinedays = $meta_info->meta_value;\t\t\n\t\t\t\tif($meta_key == '_rsvp_deadline_hours')\n\t\t\t\t\t$deadlinehours = $meta_info->meta_value;\t\t\n\t\t\t\tif($meta_key == '_rsvp_reg_daysbefore')\n\t\t\t\t\t$regdays = $meta_info->meta_value;\t\t\n\t\t\t\tif($meta_key == '_rsvp_reg_hours')\n\t\t\t\t\t$reghours = $meta_info->meta_value;\t\t\n\t\t\t}\n\t\t}\n\nif(!empty($deadlinedays) || !empty($deadlinehours))\n\trsvpmaker_deadline_from_template($target_id,$deadlinedays,$deadlinehours);\nif(!empty($regdays) || !empty($reghours))\n\trsvpmaker_reg_from_template($target_id,$regdays,$reghours);\n\n$terms = get_the_terms( $source_id, 'rsvpmaker-type' );\t\t\t\t\t\t\nif ( $terms && ! is_wp_error( $terms ) ) { \n\t$rsvptypes = array();\n\n\tforeach ( $terms as $term ) {\n\t\t$rsvptypes[] = $term->term_id;\n\t}\nwp_set_object_terms( $target_id, $rsvptypes, 'rsvpmaker-type', true );\n\n\t} // if terms\n\n}\n\nfunction rsvpmaker_deadline_from_template($target_id,$deadlinedays,$deadlinehours) {\n\t$t = get_rsvpmaker_timestamp($target_id);\n\tif(!empty($deadlinedays))\n\t\t$t -= ($deadlinedays * 60 * 60 * 24);\n\tif(!empty($deadlinehours))\n\t\t$t -= ($deadlinehours * 60 * 60);\n\tupdate_post_meta($target_id,'_rsvp_deadline',$t);\n}\nfunction rsvpmaker_reg_from_template($target_id,$days,$hours) {\n\t$t = get_rsvpmaker_timestamp($target_id);\n\tif(!empty($days))\n\t\t$t -= ($days * 60 * 60 * 24);\n\tif(!empty($hours))\n\t\t$t -= ($hours * 60 * 60);\n\tupdate_post_meta($target_id,'_rsvp_start',$t);\n}\n\nfunction rsvp_time_options ($post_id) {\nglobal $rsvp_options;\n$forms = rsvpmaker_get_forms();\nif(empty($post_id))\n{\n\t$icons = $rsvp_options[\"calendar_icons\"];\n\t$add_timezone = $rsvp_options[\"add_timezone\"];\n\t$convert_timezone = $rsvp_options[\"convert_timezone\"];\n\t$rsvp_timezone = '';\n}\nelse {\n\t$icons = get_rsvpmaker_meta($post_id,\"_calendar_icons\",true);\n\t$add_timezone = get_rsvpmaker_meta($post_id,\"_add_timezone\",true);\n\t$convert_timezone = get_rsvpmaker_meta($post_id,\"_convert_timezone\",true);\n\t$rsvp_timezone = get_rsvpmaker_meta($post_id,\"_rsvp_timezone_string\",true);\t\n}\nif(isset($_GET['page']) && ( ($_GET['page'] == 'rsvpmaker_details') ) )\n{\n?>\n<input type=\"checkbox\" name=\"calendar_icons\" value=\"1\" <?php if($icons) echo ' checked=\"checked\" ';?> /> <?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?> \n<br />\n<p id=\"timezone_options\">\n<?php\nif(!strpos($rsvp_options[\"time_format\"],'T') )\n{\n?>\n<input type=\"checkbox\" name=\"add_timezone\" value=\"1\" <?php if($add_timezone) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); echo ' '; ?>\n<?php\n}\n?>\n<input type=\"checkbox\" name=\"convert_timezone\" value=\"1\" <?php if($convert_timezone) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?>\n</p>\n<p>Timezone <select id=\"timezone_string\" name=\"setrsvp[timezone_string]\">\n\t<option value=\"<?php echo esc_attr($rsvp_timezone);?>\"><?php echo (empty($rsvp_timezone)) ? __('Default','rsvpmaker') : $rsvp_timezone?></option>\n<optgroup label=\"U.S. Mainland\">\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n</optgroup>\n<optgroup label=\"Africa\">\n<option value=\"Africa/Abidjan\">Abidjan</option>\n<option value=\"Africa/Accra\">Accra</option>\n<option value=\"Africa/Addis_Ababa\">Addis Ababa</option>\n<option value=\"Africa/Algiers\">Algiers</option>\n<option value=\"Africa/Asmara\">Asmara</option>\n<option value=\"Africa/Bamako\">Bamako</option>\n<option value=\"Africa/Bangui\">Bangui</option>\n<option value=\"Africa/Banjul\">Banjul</option>\n<option value=\"Africa/Bissau\">Bissau</option>\n<option value=\"Africa/Blantyre\">Blantyre</option>\n<option value=\"Africa/Brazzaville\">Brazzaville</option>\n<option value=\"Africa/Bujumbura\">Bujumbura</option>\n<option value=\"Africa/Cairo\">Cairo</option>\n<option value=\"Africa/Casablanca\">Casablanca</option>\n<option value=\"Africa/Ceuta\">Ceuta</option>\n<option value=\"Africa/Conakry\">Conakry</option>\n<option value=\"Africa/Dakar\">Dakar</option>\n<option value=\"Africa/Dar_es_Salaam\">Dar es Salaam</option>\n<option value=\"Africa/Djibouti\">Djibouti</option>\n<option value=\"Africa/Douala\">Douala</option>\n<option value=\"Africa/El_Aaiun\">El Aaiun</option>\n<option value=\"Africa/Freetown\">Freetown</option>\n<option value=\"Africa/Gaborone\">Gaborone</option>\n<option value=\"Africa/Harare\">Harare</option>\n<option value=\"Africa/Johannesburg\">Johannesburg</option>\n<option value=\"Africa/Juba\">Juba</option>\n<option value=\"Africa/Kampala\">Kampala</option>\n<option value=\"Africa/Khartoum\">Khartoum</option>\n<option value=\"Africa/Kigali\">Kigali</option>\n<option value=\"Africa/Kinshasa\">Kinshasa</option>\n<option value=\"Africa/Lagos\">Lagos</option>\n<option value=\"Africa/Libreville\">Libreville</option>\n<option value=\"Africa/Lome\">Lome</option>\n<option value=\"Africa/Luanda\">Luanda</option>\n<option value=\"Africa/Lubumbashi\">Lubumbashi</option>\n<option value=\"Africa/Lusaka\">Lusaka</option>\n<option value=\"Africa/Malabo\">Malabo</option>\n<option value=\"Africa/Maputo\">Maputo</option>\n<option value=\"Africa/Maseru\">Maseru</option>\n<option value=\"Africa/Mbabane\">Mbabane</option>\n<option value=\"Africa/Mogadishu\">Mogadishu</option>\n<option value=\"Africa/Monrovia\">Monrovia</option>\n<option value=\"Africa/Nairobi\">Nairobi</option>\n<option value=\"Africa/Ndjamena\">Ndjamena</option>\n<option value=\"Africa/Niamey\">Niamey</option>\n<option value=\"Africa/Nouakchott\">Nouakchott</option>\n<option value=\"Africa/Ouagadougou\">Ouagadougou</option>\n<option value=\"Africa/Porto-Novo\">Porto-Novo</option>\n<option value=\"Africa/Sao_Tome\">Sao Tome</option>\n<option value=\"Africa/Tripoli\">Tripoli</option>\n<option value=\"Africa/Tunis\">Tunis</option>\n<option value=\"Africa/Windhoek\">Windhoek</option>\n</optgroup>\n<optgroup label=\"America\">\n<option value=\"America/Adak\">Adak</option>\n<option value=\"America/Anchorage\">Anchorage</option>\n<option value=\"America/Anguilla\">Anguilla</option>\n<option value=\"America/Antigua\">Antigua</option>\n<option value=\"America/Araguaina\">Araguaina</option>\n<option value=\"America/Argentina/Buenos_Aires\">Argentina - Buenos Aires</option>\n<option value=\"America/Argentina/Catamarca\">Argentina - Catamarca</option>\n<option value=\"America/Argentina/Cordoba\">Argentina - Cordoba</option>\n<option value=\"America/Argentina/Jujuy\">Argentina - Jujuy</option>\n<option value=\"America/Argentina/La_Rioja\">Argentina - La Rioja</option>\n<option value=\"America/Argentina/Mendoza\">Argentina - Mendoza</option>\n<option value=\"America/Argentina/Rio_Gallegos\">Argentina - Rio Gallegos</option>\n<option value=\"America/Argentina/Salta\">Argentina - Salta</option>\n<option value=\"America/Argentina/San_Juan\">Argentina - San Juan</option>\n<option value=\"America/Argentina/San_Luis\">Argentina - San Luis</option>\n<option value=\"America/Argentina/Tucuman\">Argentina - Tucuman</option>\n<option value=\"America/Argentina/Ushuaia\">Argentina - Ushuaia</option>\n<option value=\"America/Aruba\">Aruba</option>\n<option value=\"America/Asuncion\">Asuncion</option>\n<option value=\"America/Atikokan\">Atikokan</option>\n<option value=\"America/Bahia\">Bahia</option>\n<option value=\"America/Bahia_Banderas\">Bahia Banderas</option>\n<option value=\"America/Barbados\">Barbados</option>\n<option value=\"America/Belem\">Belem</option>\n<option value=\"America/Belize\">Belize</option>\n<option value=\"America/Blanc-Sablon\">Blanc-Sablon</option>\n<option value=\"America/Boa_Vista\">Boa Vista</option>\n<option value=\"America/Bogota\">Bogota</option>\n<option value=\"America/Boise\">Boise</option>\n<option value=\"America/Cambridge_Bay\">Cambridge Bay</option>\n<option value=\"America/Campo_Grande\">Campo Grande</option>\n<option value=\"America/Cancun\">Cancun</option>\n<option value=\"America/Caracas\">Caracas</option>\n<option value=\"America/Cayenne\">Cayenne</option>\n<option value=\"America/Cayman\">Cayman</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Chihuahua\">Chihuahua</option>\n<option value=\"America/Costa_Rica\">Costa Rica</option>\n<option value=\"America/Creston\">Creston</option>\n<option value=\"America/Cuiaba\">Cuiaba</option>\n<option value=\"America/Curacao\">Curacao</option>\n<option value=\"America/Danmarkshavn\">Danmarkshavn</option>\n<option value=\"America/Dawson\">Dawson</option>\n<option value=\"America/Dawson_Creek\">Dawson Creek</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Detroit\">Detroit</option>\n<option value=\"America/Dominica\">Dominica</option>\n<option value=\"America/Edmonton\">Edmonton</option>\n<option value=\"America/Eirunepe\">Eirunepe</option>\n<option value=\"America/El_Salvador\">El Salvador</option>\n<option value=\"America/Fortaleza\">Fortaleza</option>\n<option value=\"America/Glace_Bay\">Glace Bay</option>\n<option value=\"America/Godthab\">Godthab</option>\n<option value=\"America/Goose_Bay\">Goose Bay</option>\n<option value=\"America/Grand_Turk\">Grand Turk</option>\n<option value=\"America/Grenada\">Grenada</option>\n<option value=\"America/Guadeloupe\">Guadeloupe</option>\n<option value=\"America/Guatemala\">Guatemala</option>\n<option value=\"America/Guayaquil\">Guayaquil</option>\n<option value=\"America/Guyana\">Guyana</option>\n<option value=\"America/Halifax\">Halifax</option>\n<option value=\"America/Havana\">Havana</option>\n<option value=\"America/Hermosillo\">Hermosillo</option>\n<option value=\"America/Indiana/Indianapolis\">Indiana - Indianapolis</option>\n<option value=\"America/Indiana/Knox\">Indiana - Knox</option>\n<option value=\"America/Indiana/Marengo\">Indiana - Marengo</option>\n<option value=\"America/Indiana/Petersburg\">Indiana - Petersburg</option>\n<option value=\"America/Indiana/Tell_City\">Indiana - Tell City</option>\n<option value=\"America/Indiana/Vevay\">Indiana - Vevay</option>\n<option value=\"America/Indiana/Vincennes\">Indiana - Vincennes</option>\n<option value=\"America/Indiana/Winamac\">Indiana - Winamac</option>\n<option value=\"America/Inuvik\">Inuvik</option>\n<option value=\"America/Iqaluit\">Iqaluit</option>\n<option value=\"America/Jamaica\">Jamaica</option>\n<option value=\"America/Juneau\">Juneau</option>\n<option value=\"America/Kentucky/Louisville\">Kentucky - Louisville</option>\n<option value=\"America/Kentucky/Monticello\">Kentucky - Monticello</option>\n<option value=\"America/Kralendijk\">Kralendijk</option>\n<option value=\"America/La_Paz\">La Paz</option>\n<option value=\"America/Lima\">Lima</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n<option value=\"America/Lower_Princes\">Lower Princes</option>\n<option value=\"America/Maceio\">Maceio</option>\n<option value=\"America/Managua\">Managua</option>\n<option value=\"America/Manaus\">Manaus</option>\n<option value=\"America/Marigot\">Marigot</option>\n<option value=\"America/Martinique\">Martinique</option>\n<option value=\"America/Matamoros\">Matamoros</option>\n<option value=\"America/Mazatlan\">Mazatlan</option>\n<option value=\"America/Menominee\">Menominee</option>\n<option value=\"America/Merida\">Merida</option>\n<option value=\"America/Metlakatla\">Metlakatla</option>\n<option value=\"America/Mexico_City\">Mexico City</option>\n<option value=\"America/Miquelon\">Miquelon</option>\n<option value=\"America/Moncton\">Moncton</option>\n<option value=\"America/Monterrey\">Monterrey</option>\n<option value=\"America/Montevideo\">Montevideo</option>\n<option value=\"America/Montserrat\">Montserrat</option>\n<option value=\"America/Nassau\">Nassau</option>\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Nipigon\">Nipigon</option>\n<option value=\"America/Nome\">Nome</option>\n<option value=\"America/Noronha\">Noronha</option>\n<option value=\"America/North_Dakota/Beulah\">North Dakota - Beulah</option>\n<option value=\"America/North_Dakota/Center\">North Dakota - Center</option>\n<option value=\"America/North_Dakota/New_Salem\">North Dakota - New Salem</option>\n<option value=\"America/Ojinaga\">Ojinaga</option>\n<option value=\"America/Panama\">Panama</option>\n<option value=\"America/Pangnirtung\">Pangnirtung</option>\n<option value=\"America/Paramaribo\">Paramaribo</option>\n<option value=\"America/Phoenix\">Phoenix</option>\n<option value=\"America/Port-au-Prince\">Port-au-Prince</option>\n<option value=\"America/Port_of_Spain\">Port of Spain</option>\n<option value=\"America/Porto_Velho\">Porto Velho</option>\n<option value=\"America/Puerto_Rico\">Puerto Rico</option>\n<option value=\"America/Rainy_River\">Rainy River</option>\n<option value=\"America/Rankin_Inlet\">Rankin Inlet</option>\n<option value=\"America/Recife\">Recife</option>\n<option value=\"America/Regina\">Regina</option>\n<option value=\"America/Resolute\">Resolute</option>\n<option value=\"America/Rio_Branco\">Rio Branco</option>\n<option value=\"America/Santa_Isabel\">Santa Isabel</option>\n<option value=\"America/Santarem\">Santarem</option>\n<option value=\"America/Santiago\">Santiago</option>\n<option value=\"America/Santo_Domingo\">Santo Domingo</option>\n<option value=\"America/Sao_Paulo\">Sao Paulo</option>\n<option value=\"America/Scoresbysund\">Scoresbysund</option>\n<option value=\"America/Sitka\">Sitka</option>\n<option value=\"America/St_Barthelemy\">St Barthelemy</option>\n<option value=\"America/St_Johns\">St Johns</option>\n<option value=\"America/St_Kitts\">St Kitts</option>\n<option value=\"America/St_Lucia\">St Lucia</option>\n<option value=\"America/St_Thomas\">St Thomas</option>\n<option value=\"America/St_Vincent\">St Vincent</option>\n<option value=\"America/Swift_Current\">Swift Current</option>\n<option value=\"America/Tegucigalpa\">Tegucigalpa</option>\n<option value=\"America/Thule\">Thule</option>\n<option value=\"America/Thunder_Bay\">Thunder Bay</option>\n<option value=\"America/Tijuana\">Tijuana</option>\n<option value=\"America/Toronto\">Toronto</option>\n<option value=\"America/Tortola\">Tortola</option>\n<option value=\"America/Vancouver\">Vancouver</option>\n<option value=\"America/Whitehorse\">Whitehorse</option>\n<option value=\"America/Winnipeg\">Winnipeg</option>\n<option value=\"America/Yakutat\">Yakutat</option>\n<option value=\"America/Yellowknife\">Yellowknife</option>\n</optgroup>\n<optgroup label=\"Antarctica\">\n<option value=\"Antarctica/Casey\">Casey</option>\n<option value=\"Antarctica/Davis\">Davis</option>\n<option value=\"Antarctica/DumontDUrville\">DumontDUrville</option>\n<option value=\"Antarctica/Macquarie\">Macquarie</option>\n<option value=\"Antarctica/Mawson\">Mawson</option>\n<option value=\"Antarctica/McMurdo\">McMurdo</option>\n<option value=\"Antarctica/Palmer\">Palmer</option>\n<option value=\"Antarctica/Rothera\">Rothera</option>\n<option value=\"Antarctica/Syowa\">Syowa</option>\n<option value=\"Antarctica/Troll\">Troll</option>\n<option value=\"Antarctica/Vostok\">Vostok</option>\n</optgroup>\n<optgroup label=\"Arctic\">\n<option value=\"Arctic/Longyearbyen\">Longyearbyen</option>\n</optgroup>\n<optgroup label=\"Asia\">\n<option value=\"Asia/Aden\">Aden</option>\n<option value=\"Asia/Almaty\">Almaty</option>\n<option value=\"Asia/Amman\">Amman</option>\n<option value=\"Asia/Anadyr\">Anadyr</option>\n<option value=\"Asia/Aqtau\">Aqtau</option>\n<option value=\"Asia/Aqtobe\">Aqtobe</option>\n<option value=\"Asia/Ashgabat\">Ashgabat</option>\n<option value=\"Asia/Baghdad\">Baghdad</option>\n<option value=\"Asia/Bahrain\">Bahrain</option>\n<option value=\"Asia/Baku\">Baku</option>\n<option value=\"Asia/Bangkok\">Bangkok</option>\n<option value=\"Asia/Beirut\">Beirut</option>\n<option value=\"Asia/Bishkek\">Bishkek</option>\n<option value=\"Asia/Brunei\">Brunei</option>\n<option value=\"Asia/Chita\">Chita</option>\n<option value=\"Asia/Choibalsan\">Choibalsan</option>\n<option value=\"Asia/Colombo\">Colombo</option>\n<option value=\"Asia/Damascus\">Damascus</option>\n<option value=\"Asia/Dhaka\">Dhaka</option>\n<option value=\"Asia/Dili\">Dili</option>\n<option value=\"Asia/Dubai\">Dubai</option>\n<option value=\"Asia/Dushanbe\">Dushanbe</option>\n<option value=\"Asia/Gaza\">Gaza</option>\n<option value=\"Asia/Hebron\">Hebron</option>\n<option value=\"Asia/Ho_Chi_Minh\">Ho Chi Minh</option>\n<option value=\"Asia/Hong_Kong\">Hong Kong</option>\n<option value=\"Asia/Hovd\">Hovd</option>\n<option value=\"Asia/Irkutsk\">Irkutsk</option>\n<option value=\"Asia/Jakarta\">Jakarta</option>\n<option value=\"Asia/Jayapura\">Jayapura</option>\n<option value=\"Asia/Jerusalem\">Jerusalem</option>\n<option value=\"Asia/Kabul\">Kabul</option>\n<option value=\"Asia/Kamchatka\">Kamchatka</option>\n<option value=\"Asia/Karachi\">Karachi</option>\n<option value=\"Asia/Kathmandu\">Kathmandu</option>\n<option value=\"Asia/Khandyga\">Khandyga</option>\n<option value=\"Asia/Kolkata\">Kolkata</option>\n<option value=\"Asia/Krasnoyarsk\">Krasnoyarsk</option>\n<option value=\"Asia/Kuala_Lumpur\">Kuala Lumpur</option>\n<option value=\"Asia/Kuching\">Kuching</option>\n<option value=\"Asia/Kuwait\">Kuwait</option>\n<option value=\"Asia/Macau\">Macau</option>\n<option value=\"Asia/Magadan\">Magadan</option>\n<option value=\"Asia/Makassar\">Makassar</option>\n<option value=\"Asia/Manila\">Manila</option>\n<option value=\"Asia/Muscat\">Muscat</option>\n<option value=\"Asia/Nicosia\">Nicosia</option>\n<option value=\"Asia/Novokuznetsk\">Novokuznetsk</option>\n<option value=\"Asia/Novosibirsk\">Novosibirsk</option>\n<option value=\"Asia/Omsk\">Omsk</option>\n<option value=\"Asia/Oral\">Oral</option>\n<option value=\"Asia/Phnom_Penh\">Phnom Penh</option>\n<option value=\"Asia/Pontianak\">Pontianak</option>\n<option value=\"Asia/Pyongyang\">Pyongyang</option>\n<option value=\"Asia/Qatar\">Qatar</option>\n<option value=\"Asia/Qyzylorda\">Qyzylorda</option>\n<option value=\"Asia/Rangoon\">Rangoon</option>\n<option value=\"Asia/Riyadh\">Riyadh</option>\n<option value=\"Asia/Sakhalin\">Sakhalin</option>\n<option value=\"Asia/Samarkand\">Samarkand</option>\n<option value=\"Asia/Seoul\">Seoul</option>\n<option value=\"Asia/Shanghai\">Shanghai</option>\n<option value=\"Asia/Singapore\">Singapore</option>\n<option value=\"Asia/Srednekolymsk\">Srednekolymsk</option>\n<option value=\"Asia/Taipei\">Taipei</option>\n<option value=\"Asia/Tashkent\">Tashkent</option>\n<option value=\"Asia/Tbilisi\">Tbilisi</option>\n<option value=\"Asia/Tehran\">Tehran</option>\n<option value=\"Asia/Thimphu\">Thimphu</option>\n<option value=\"Asia/Tokyo\">Tokyo</option>\n<option value=\"Asia/Ulaanbaatar\">Ulaanbaatar</option>\n<option value=\"Asia/Urumqi\">Urumqi</option>\n<option value=\"Asia/Ust-Nera\">Ust-Nera</option>\n<option value=\"Asia/Vientiane\">Vientiane</option>\n<option value=\"Asia/Vladivostok\">Vladivostok</option>\n<option value=\"Asia/Yakutsk\">Yakutsk</option>\n<option value=\"Asia/Yekaterinburg\">Yekaterinburg</option>\n<option value=\"Asia/Yerevan\">Yerevan</option>\n</optgroup>\n<optgroup label=\"Atlantic\">\n<option value=\"Atlantic/Azores\">Azores</option>\n<option value=\"Atlantic/Bermuda\">Bermuda</option>\n<option value=\"Atlantic/Canary\">Canary</option>\n<option value=\"Atlantic/Cape_Verde\">Cape Verde</option>\n<option value=\"Atlantic/Faroe\">Faroe</option>\n<option value=\"Atlantic/Madeira\">Madeira</option>\n<option value=\"Atlantic/Reykjavik\">Reykjavik</option>\n<option value=\"Atlantic/South_Georgia\">South Georgia</option>\n<option value=\"Atlantic/Stanley\">Stanley</option>\n<option value=\"Atlantic/St_Helena\">St Helena</option>\n</optgroup>\n<optgroup label=\"Australia\">\n<option value=\"Australia/Adelaide\">Adelaide</option>\n<option value=\"Australia/Brisbane\">Brisbane</option>\n<option value=\"Australia/Broken_Hill\">Broken Hill</option>\n<option value=\"Australia/Currie\">Currie</option>\n<option value=\"Australia/Darwin\">Darwin</option>\n<option value=\"Australia/Eucla\">Eucla</option>\n<option value=\"Australia/Hobart\">Hobart</option>\n<option value=\"Australia/Lindeman\">Lindeman</option>\n<option value=\"Australia/Lord_Howe\">Lord Howe</option>\n<option value=\"Australia/Melbourne\">Melbourne</option>\n<option value=\"Australia/Perth\">Perth</option>\n<option value=\"Australia/Sydney\">Sydney</option>\n</optgroup>\n<optgroup label=\"Europe\">\n<option value=\"Europe/Amsterdam\">Amsterdam</option>\n<option value=\"Europe/Andorra\">Andorra</option>\n<option value=\"Europe/Athens\">Athens</option>\n<option value=\"Europe/Belgrade\">Belgrade</option>\n<option value=\"Europe/Berlin\">Berlin</option>\n<option value=\"Europe/Bratislava\">Bratislava</option>\n<option value=\"Europe/Brussels\">Brussels</option>\n<option value=\"Europe/Bucharest\">Bucharest</option>\n<option value=\"Europe/Budapest\">Budapest</option>\n<option value=\"Europe/Busingen\">Busingen</option>\n<option value=\"Europe/Chisinau\">Chisinau</option>\n<option value=\"Europe/Copenhagen\">Copenhagen</option>\n<option value=\"Europe/Dublin\">Dublin</option>\n<option value=\"Europe/Gibraltar\">Gibraltar</option>\n<option value=\"Europe/Guernsey\">Guernsey</option>\n<option value=\"Europe/Helsinki\">Helsinki</option>\n<option value=\"Europe/Isle_of_Man\">Isle of Man</option>\n<option value=\"Europe/Istanbul\">Istanbul</option>\n<option value=\"Europe/Jersey\">Jersey</option>\n<option value=\"Europe/Kaliningrad\">Kaliningrad</option>\n<option value=\"Europe/Kiev\">Kiev</option>\n<option value=\"Europe/Lisbon\">Lisbon</option>\n<option value=\"Europe/Ljubljana\">Ljubljana</option>\n<option value=\"Europe/London\">London</option>\n<option value=\"Europe/Luxembourg\">Luxembourg</option>\n<option value=\"Europe/Madrid\">Madrid</option>\n<option value=\"Europe/Malta\">Malta</option>\n<option value=\"Europe/Mariehamn\">Mariehamn</option>\n<option value=\"Europe/Minsk\">Minsk</option>\n<option value=\"Europe/Monaco\">Monaco</option>\n<option value=\"Europe/Moscow\">Moscow</option>\n<option value=\"Europe/Oslo\">Oslo</option>\n<option value=\"Europe/Paris\">Paris</option>\n<option value=\"Europe/Podgorica\">Podgorica</option>\n<option value=\"Europe/Prague\">Prague</option>\n<option value=\"Europe/Riga\">Riga</option>\n<option value=\"Europe/Rome\">Rome</option>\n<option value=\"Europe/Samara\">Samara</option>\n<option value=\"Europe/San_Marino\">San Marino</option>\n<option value=\"Europe/Sarajevo\">Sarajevo</option>\n<option value=\"Europe/Simferopol\">Simferopol</option>\n<option value=\"Europe/Skopje\">Skopje</option>\n<option value=\"Europe/Sofia\">Sofia</option>\n<option value=\"Europe/Stockholm\">Stockholm</option>\n<option value=\"Europe/Tallinn\">Tallinn</option>\n<option value=\"Europe/Tirane\">Tirane</option>\n<option value=\"Europe/Uzhgorod\">Uzhgorod</option>\n<option value=\"Europe/Vaduz\">Vaduz</option>\n<option value=\"Europe/Vatican\">Vatican</option>\n<option value=\"Europe/Vienna\">Vienna</option>\n<option value=\"Europe/Vilnius\">Vilnius</option>\n<option value=\"Europe/Volgograd\">Volgograd</option>\n<option value=\"Europe/Warsaw\">Warsaw</option>\n<option value=\"Europe/Zagreb\">Zagreb</option>\n<option value=\"Europe/Zaporozhye\">Zaporozhye</option>\n<option value=\"Europe/Zurich\">Zurich</option>\n</optgroup>\n<optgroup label=\"Indian\">\n<option value=\"Indian/Antananarivo\">Antananarivo</option>\n<option value=\"Indian/Chagos\">Chagos</option>\n<option value=\"Indian/Christmas\">Christmas</option>\n<option value=\"Indian/Cocos\">Cocos</option>\n<option value=\"Indian/Comoro\">Comoro</option>\n<option value=\"Indian/Kerguelen\">Kerguelen</option>\n<option value=\"Indian/Mahe\">Mahe</option>\n<option value=\"Indian/Maldives\">Maldives</option>\n<option value=\"Indian/Mauritius\">Mauritius</option>\n<option value=\"Indian/Mayotte\">Mayotte</option>\n<option value=\"Indian/Reunion\">Reunion</option>\n</optgroup>\n<optgroup label=\"Pacific\">\n<option value=\"Pacific/Apia\">Apia</option>\n<option value=\"Pacific/Auckland\">Auckland</option>\n<option value=\"Pacific/Chatham\">Chatham</option>\n<option value=\"Pacific/Chuuk\">Chuuk</option>\n<option value=\"Pacific/Easter\">Easter</option>\n<option value=\"Pacific/Efate\">Efate</option>\n<option value=\"Pacific/Enderbury\">Enderbury</option>\n<option value=\"Pacific/Fakaofo\">Fakaofo</option>\n<option value=\"Pacific/Fiji\">Fiji</option>\n<option value=\"Pacific/Funafuti\">Funafuti</option>\n<option value=\"Pacific/Galapagos\">Galapagos</option>\n<option value=\"Pacific/Gambier\">Gambier</option>\n<option value=\"Pacific/Guadalcanal\">Guadalcanal</option>\n<option value=\"Pacific/Guam\">Guam</option>\n<option value=\"Pacific/Honolulu\">Honolulu</option>\n<option value=\"Pacific/Johnston\">Johnston</option>\n<option value=\"Pacific/Kiritimati\">Kiritimati</option>\n<option value=\"Pacific/Kosrae\">Kosrae</option>\n<option value=\"Pacific/Kwajalein\">Kwajalein</option>\n<option value=\"Pacific/Majuro\">Majuro</option>\n<option value=\"Pacific/Marquesas\">Marquesas</option>\n<option value=\"Pacific/Midway\">Midway</option>\n<option value=\"Pacific/Nauru\">Nauru</option>\n<option value=\"Pacific/Niue\">Niue</option>\n<option value=\"Pacific/Norfolk\">Norfolk</option>\n<option value=\"Pacific/Noumea\">Noumea</option>\n<option value=\"Pacific/Pago_Pago\">Pago Pago</option>\n<option value=\"Pacific/Palau\">Palau</option>\n<option value=\"Pacific/Pitcairn\">Pitcairn</option>\n<option value=\"Pacific/Pohnpei\">Pohnpei</option>\n<option value=\"Pacific/Port_Moresby\">Port Moresby</option>\n<option value=\"Pacific/Rarotonga\">Rarotonga</option>\n<option value=\"Pacific/Saipan\">Saipan</option>\n<option value=\"Pacific/Tahiti\">Tahiti</option>\n<option value=\"Pacific/Tarawa\">Tarawa</option>\n<option value=\"Pacific/Tongatapu\">Tongatapu</option>\n<option value=\"Pacific/Wake\">Wake</option>\n<option value=\"Pacific/Wallis\">Wallis</option>\n</optgroup>\n<optgroup label=\"UTC\">\n<option value=\"UTC\">UTC</option>\n</optgroup>\n<optgroup label=\"Manual Offsets\">\n<option value=\"UTC-12\">UTC-12</option>\n<option value=\"UTC-11.5\">UTC-11:30</option>\n<option value=\"UTC-11\">UTC-11</option>\n<option value=\"UTC-10.5\">UTC-10:30</option>\n<option value=\"UTC-10\">UTC-10</option>\n<option value=\"UTC-9.5\">UTC-9:30</option>\n<option value=\"UTC-9\">UTC-9</option>\n<option value=\"UTC-8.5\">UTC-8:30</option>\n<option value=\"UTC-8\">UTC-8</option>\n<option value=\"UTC-7.5\">UTC-7:30</option>\n<option value=\"UTC-7\">UTC-7</option>\n<option value=\"UTC-6.5\">UTC-6:30</option>\n<option value=\"UTC-6\">UTC-6</option>\n<option value=\"UTC-5.5\">UTC-5:30</option>\n<option value=\"UTC-5\">UTC-5</option>\n<option value=\"UTC-4.5\">UTC-4:30</option>\n<option value=\"UTC-4\">UTC-4</option>\n<option value=\"UTC-3.5\">UTC-3:30</option>\n<option value=\"UTC-3\">UTC-3</option>\n<option value=\"UTC-2.5\">UTC-2:30</option>\n<option value=\"UTC-2\">UTC-2</option>\n<option value=\"UTC-1.5\">UTC-1:30</option>\n<option value=\"UTC-1\">UTC-1</option>\n<option value=\"UTC-0.5\">UTC-0:30</option>\n<option value=\"UTC+0\">UTC+0</option>\n<option value=\"UTC+0.5\">UTC+0:30</option>\n<option value=\"UTC+1\">UTC+1</option>\n<option value=\"UTC+1.5\">UTC+1:30</option>\n<option value=\"UTC+2\">UTC+2</option>\n<option value=\"UTC+2.5\">UTC+2:30</option>\n<option value=\"UTC+3\">UTC+3</option>\n<option value=\"UTC+3.5\">UTC+3:30</option>\n<option value=\"UTC+4\">UTC+4</option>\n<option value=\"UTC+4.5\">UTC+4:30</option>\n<option value=\"UTC+5\">UTC+5</option>\n<option value=\"UTC+5.5\">UTC+5:30</option>\n<option value=\"UTC+5.75\">UTC+5:45</option>\n<option value=\"UTC+6\">UTC+6</option>\n<option value=\"UTC+6.5\">UTC+6:30</option>\n<option value=\"UTC+7\">UTC+7</option>\n<option value=\"UTC+7.5\">UTC+7:30</option>\n<option value=\"UTC+8\">UTC+8</option>\n<option value=\"UTC+8.5\">UTC+8:30</option>\n<option value=\"UTC+8.75\">UTC+8:45</option>\n<option value=\"UTC+9\">UTC+9</option>\n<option value=\"UTC+9.5\">UTC+9:30</option>\n<option value=\"UTC+10\">UTC+10</option>\n<option value=\"UTC+10.5\">UTC+10:30</option>\n<option value=\"UTC+11\">UTC+11</option>\n<option value=\"UTC+11.5\">UTC+11:30</option>\n<option value=\"UTC+12\">UTC+12</option>\n<option value=\"UTC+12.75\">UTC+12:45</option>\n<option value=\"UTC+13\">UTC+13</option>\n<option value=\"UTC+13.75\">UTC+13:45</option>\n<option value=\"UTC+14\">UTC+14</option>\n</optgroup></select>\n<?php\n\tprintf('<a href=\"%s\" >%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id='.$post_id),__('More Event Options','rsvpmaker')); \n}//end content not displayed on initial setup page\t\n?>\n\n</p>\n<?php\n}\n\nfunction rsvpmaker_details_post() {\n\t$output = '';\n\tif(isset($_POST['publish_draft']) && isset($_REQUEST['post_id'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\twp_publish_post((int) $_REQUEST['post_id']);\n\t\nif(isset($_REQUEST['post_id']))\n\t$post = get_post((int) $_REQUEST['post_id']);\n\nif(isset($_GET['template_to_event']))\n\t{\n\tdelete_post_meta($post->ID,'_sked');\n\tdelete_post_meta($post->ID,'_sked_Varies');\n\tupdate_post_meta($post->ID,'_rsvp_dates',date('Y-m-d H:').'00:00',rsvpmaker_strtotime('+2 hours') );\n\t}\n\nif(isset($post->post_status) && ($post->post_status != 'publish') )\n\t$output .= sprintf('<h2>Post not published, status = <span style=\"color:red\">%s</span></h2>',$post->post_status);\nif(isset($_POST[\"_require_webinar_passcode\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\tupdate_post_meta($post->ID,'_require_webinar_passcode',sanitize_text_field($_POST[\"_require_webinar_passcode\"]));\n\t}\nif(isset($_POST['post_id'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\t$template_prompt = (isset($_POST['sked'])) ? sprintf(' - <a href=\"%s\">%s</a> %s',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=') . $post->ID, __('Create/update events','rsvpmaker'),__('based on this template','rsvpmaker') ) : '';\n\t$output .= sprintf('<div class=\"notice notice-info\"><p>%s%s</p></div>',__('Saved RSVP Options','rsvpmaker'),$template_prompt);\n\trsvpmaker_save_calendar_data($post->ID);\n\tcache_rsvp_dates(50);\n\tif(isset($_POST['setrsvp']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\tsave_rsvp_meta($post->ID);\t\t\n\t}\n\telse\n\t\tdo_action('save_post',$post->ID);\n\t$output .= sprintf('<p><a href=\"%s\">View event post</a></p>',get_permalink($post->ID));\n}\nreturn $output;\n}\n\nfunction rsvpmaker_details() {\n\tglobal $post;\n\tglobal $custom_fields;\n\tglobal $rsvp_options;\n\n?>\n<style>\n<?php \n$styles = rsvpmaker_included_styles();\necho $styles; ?>\n</style>\n<div class=\"wrap\" style=\"margin-right: 200px;\"> \n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n<h1 id=\"headline\"><?php esc_html_e('RSVP / Event Options','rsvpmaker'); ?></h1>\n<div id=\"rsvpmaker_details_status\"></div>\n<?php\n\nif(isset($_GET['trash']) && isset($_GET['post_id'])) {\n\twp_trash_post(intval($_GET['post_id']));\n\techo '<div class=\"notice notice-info\"><p>'.__('Event post moved to','rsvpmaker').' <a href=\"'.admin_url('edit.php?post_status=trash&post_type=rsvpmaker').'\">Trash</a></p></div>';\n}\n\necho rsvpmaker_details_post();\n\nif(empty($post->ID))\n{\nglobal $wpdb;\n$sql = \"SELECT DISTINCT $wpdb->posts.ID as post_id, $wpdb->posts.*, date_format(a1.meta_value,'%M %e, %Y') as date\n\t FROM \".$wpdb->posts.\"\n\t JOIN \".$wpdb->postmeta.\" a1 ON \".$wpdb->posts.\".ID =a1.post_id AND a1.meta_key='_rsvp_dates'\n\t WHERE a1.meta_value > '\".get_sql_now().\"' ORDER BY a1.meta_value\";\n\n$results = $wpdb->get_results($sql);\n$options = '<optgroup label=\"'.__('Future Events','rsvpmaker').'\">';\nif(!empty($results))\nforeach($results as $row)\n\t{\n\t\t$s = '';\n\t\tif(isset($_REQUEST[\"post_id\"]) && ($row->ID == $_REQUEST[\"post_id\"]))\n\t\t\t$s = ' selected=\"selected\" ';\n\t\t$options .= sprintf('<option value=\"%d\" %s>%s %s</option>',$row->ID,$s,$row->post_title,$row->date);\n\t}\n$options .= '</optgroup><optgroup label=\"'.__('Event Templates','rsvpmaker').'\">';\n$results = rsvpmaker_get_templates();\nif(!empty($results))\nforeach($results as $row)\n\t{\n\t\tif(!rsvpmaker_is_template($row->ID))\n\t\t\tcontinue;\n\t\t$s = '';\n\t\tif(isset($_REQUEST[\"post_id\"]) && ($row->ID == $_REQUEST[\"post_id\"]))\n\t\t\t$s = ' selected=\"selected\" ';\n\t\t$options .= sprintf('<option value=\"%d\" %s>%s</option>',$row->ID,$s,$row->post_title);\n\t}\n$options .= '</optgroup>';\n\t\nprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_details\" /><select name=\"post_id\">%s</select> <button>Get</button>%s</form>',admin_url('edit.php'),$options,rsvpmaker_nonce('return'));\n\n}\nelse\n{\n\t?>\n<p><?php esc_html_e('Use this form for additional RSVPMaker settings.','rsvpmaker')?> <?php printf('<a href=\"%s\">%s</a>',admin_url('post.php?post='.intval($post->ID).'&action=edit'),__('Return to editor','rsvpmaker'))?></p>\t\n\t<?php\nprintf('<form method=\"post\" action=\"%s\" id=\"rsvpmaker_details\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id='.intval($post->ID)));\n$date = get_rsvp_date($post->ID);\n\t$datef = (empty($date)) ? '' : rsvpmaker_date('F j, Y',rsvpmaker_strtotime($date));\n\t$custom_fields = get_rsvpmaker_custom($post->ID);\n\t\n\t$t = rsvpmaker_strtotime($date);\n\tprintf('<h3>%s<br />%s</h3>',$post->post_title,$datef);\n\t$drawresult = draw_eventdates();\n\tif($drawresult != 'special')\n\t{\n\tGetRSVPAdminForm($post->ID);\n\tif(isset($rsvp_options[\"additional_editors\"]) && $rsvp_options[\"additional_editors\"])\n\t\tadditional_editors();\t\t\n\t}\n\necho '<div style=\"position: fixed; top: 50px; right: 30px; width: 100px;\">';\nif($post->post_status == 'draft')\n\tprintf('<div><input type=\"checkbox\" name=\"publish_draft\" value=\"1\" />%s</div>',__('Publish','rsvpmaker'));\nsubmit_button();\necho '</div>';\nrsvpmaker_nonce();\nprintf('<input type=\"hidden\" name=\"post_id\" value=\"%d\" /></form>',$post->ID);\n?>\n<script>\njQuery(document).ready(function( $ ) {\nvar unsaved = false;\n$(\":input\").change(function(){ //triggers change in all input fields including text type\n    unsaved = true;\n});\n\n$('#rsvpmaker_details').submit(function() {\n    unsaved = false;\n});\n\nfunction unloadPage(){ \n    if(unsaved){\n        return \"Changes you made may not be saved.\";\n    }\n}\nwindow.onbeforeunload = unloadPage;\n\t\n});\n\n</script>\n<?php\n}\n\n?>\n</div>\n<?php\n}\n\nfunction ajax_rsvpmaker_date_handler() {\n\t$post_id = (int) $_REQUEST['post_id'];\n\tif(!$post_id)\n\t\twp_die();\n\tif(isset($_REQUEST['date']))\n\t{\n\t$t = rsvpmaker_strtotime($_REQUEST['date']);\n\t$date = rsvpmaker_date(\"Y-m-d H:i:s\",$t);\n\t$current_date = get_rsvp_date($post_id);\n\tupdate_post_meta($post_id,'_rsvp_dates',$date,$current_date);\n\tdelete_transient('rsvpmakerdates');\n\t}\n    wp_die();\n}\n\nfunction rsvp_customize_form_url($post_id) {\n\tglobal $rsvp_options;\n\t$current_form = get_post_meta($post_id,'_rsvp_form',true);\n\tif(empty($current_form))\n\t\t$current_form = $rsvp_options['rsvp_form'];\n\tif(!is_numeric($current_form))\n\t\treturn;\n\treturn admin_url('?post_id='.$post_id.'&customize_form='.$current_form); // customize url \n}\n\nfunction rsvp_form_url($post_id) {\n\tglobal $rsvp_options;\n\t$current_form = get_post_meta($post_id,'_rsvp_form',true);\n\tif(empty($current_form))\n\t\t$current_form = $rsvp_options['rsvp_form'];\n\tif(!is_numeric($current_form))\n\t\treturn;\n\t$form_post = get_post($current_form);\n\tif(empty($form_post->post_parent) ||($form_post->post_parent != $post_id))\n\t\treturn admin_url('?post_id='.$post_id.'&customize_form='.$current_form); // customize url \n\telse\n\t\treturn admin_url('post.php?action=edit&post=').$current_form; // edit url\n}\n\nfunction rsvp_confirm_url($post_id) {\n\tglobal $rsvp_options;\n\t$current = get_post_meta($post_id,'_rsvp_confirm',true);\n\tif(empty($current))\n\t\t$current = $rsvp_options['rsvp_confirm'];\n\tif(!is_numeric($current))\n\t\treturn;\n\t$confirm = get_post($current);\n\tif(empty($confirm->post_parent) || ($confirm->post_parent != $post_id))\n\t\treturn admin_url('?post_id='.$post_id.'&customize_rsvpconfirm='.$current); // customize url \n\telse\n\t\treturn admin_url('post.php?action=edit&post=').$current; // edit url\n}\n\nfunction rsvpmaker_templates_dropdown ($select = 'template') {\n\t$templates = rsvpmaker_get_templates();\n\t$o = '';\n\tif(is_array($templates))\n\tforeach($templates as $template)\n\t{\n\t\t$o .= sprintf('<option value=\"%d\">%s</option>',$template->ID,$template->post_title);\n\t}\nreturn sprintf('<select name=\"%s\">%s</select>',$select,$o);\n}\n\nfunction toolbar_rsvpmaker( $wp_admin_bar ) {\nglobal $post;\n$args = array(\n\t'parent'    => 'new-rsvpmaker',\n\t'id' => 'rsvpmaker_setup_template',\n\t'title' => 'New Event Template',\n\t'href'  => admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&new_template=1'),\n\t'meta'  => array( 'class' => 'rsvpmaker_setup')\n);\n$wp_admin_bar->add_node( $args );\n$templates = rsvpmaker_get_templates();\nforeach($templates as $template) {\n\t$args = array(\n\t\t'parent'    => 'new-rsvpmaker',\n\t\t'id' => 'template'.$template->ID,\n\t\t'title' => 'Create/Update: '.$template->post_title,\n\t\t'href'  => admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t='.$template->ID),\n\t\t'meta'  => array( 'class' => 'new_from_template')\n\t);\n\t$wp_admin_bar->add_node( $args );\n}\n\nif(!empty($post->post_type) && ($post->post_type != 'rsvpemail'))\n{\n\tif($post->post_type == 'rsvpmaker') {\n\t\t$args = array(\n\t\t\t'parent'    => 'new-rsvpemail',\n\t\t\t'id' => 'embed_to_email',\n\t\t\t'title' => __('Embed Event in Email','rsvpmaker'),\n\t\t\t'href'  => admin_url('edit.php?post_type=rsvpemail&rsvpevent_to_email='.intval($post->ID)),\n\t\t\t'meta'  => array( 'class' => 'rsvpmaker_embed')\n\t\t);\t\n\t\t$wp_admin_bar->add_node( $args );\n\t}\n\t$args = array(\n\t\t'parent'    => 'new-rsvpemail',\n\t\t'id' => 'post_to_email',\n\t\t'title' => __('Copy to Email','rsvpmaker'),\n\t\t'href'  => admin_url('edit.php?post_type=rsvpemail&post_to_email='.intval($post->ID)),\n\t\t'meta'  => array( 'class' => 'rsvpmaker')\n\t);\n\t$wp_admin_bar->add_node( $args );\n\tif($post->post_type != 'rsvmpaker')\n\t{\n\t\t$args = array(\n\t\t\t'parent'    => 'new-rsvpemail',\n\t\t\t'id' => 'excerpt_to_email',\n\t\t\t'title' => __('Excerpt to Email','rsvpmaker'),\n\t\t\t'href'  => admin_url('edit.php?post_type=rsvpemail&excerpt=1&post_to_email='.intval($post->ID)),\n\t\t\t'meta'  => array( 'class' => 'rsvpmaker')\n\t\t);\n\t\t$wp_admin_bar->add_node( $args );\t\n\t}\n}\n\n$noview = true;\n$argarg = get_related_documents ();\nif(empty($argarg))\nreturn;\n\tforeach($argarg as $args) {\n\t\t$wp_admin_bar->add_node($args);\n\t\tif($args['id'] == 'view-event')\n\t\t$wp_admin_bar->remove_node( 'view' );\n\t}\n}\n\nfunction rsvpmaker_quick_post() {\n\tglobal $current_user;\n\tif( ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\treturn;\n\t$_POST = stripslashes_deep($_POST);\n\tif(!empty($_POST['type']))\n\t\t$types[] = (int) $_POST['type'];\n\tif(!empty($_POST['type2']))\n\t\t$types[] = (int) $_POST['type2'];\n\tif(!empty($_POST['newtype']))\n\t{\n\t\t$result = wp_insert_term(sanitize_text_field($_POST['newtype']),'rsvpmaker-type');\n\t\tif(is_array($result) && !empty($result[\"term_id\"]))\n\t\t\t$types[] = $result[\"term_id\"];\n\t}\n\n\tforeach($_POST[\"quicktitle\"] as $index => $title) {\n\t\tif(!empty($title)) {\n\t\t$datetime = trim(sanitize_text_field($_POST[\"quick_rsvp_date\"][$index].' '.$_POST[\"quick_rsvp_time\"][$index]));\n\t\tif(!preg_match('/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$/',$datetime)) {\n\t\t\techo 'invalid time'.$datetime;\n\t\t\tcontinue;\n\t\t}\n\t\t$title = sanitize_text_field($title);\n\t\t$content = (empty($_POST[\"quickcontent\"][$index])) ? '' : wp_kses_post( rsvpautog($_POST[\"quickcontent\"][$index]));\n\t\t$post_id = wp_insert_post(array('post_type' => 'rsvpmaker', 'post_title' => $title, 'post_content' => $content, 'post_author' => $current_user->ID, 'post_status' => sanitize_text_field($_POST['status'])));\n\t\tadd_post_meta($post_id,'_rsvp_dates',$datetime);\n\t\t$end_type = sanitize_text_field($_POST[\"quick_end_time_type\"][$index]);\n\t\t$end_time = sanitize_text_field($_POST[\"quick_rsvp_time_end\"][$index]);\n\t\tif(empty($end_time)) {\n\t\t\t$t = strtotime($datetime.\" +1 hour\");\n\t\t\t$end_time = date('H:i',$t);\n\t\t}\n\t\tadd_post_meta($post_id,'_firsttime',$end_type);\n\t\tadd_post_meta($post_id,'_endfirsttime',$end_time);\n\t\trsvpmaker_add_event_row($post_id,$datetime,$end_time,$end_type);\n\t\tif(!empty($types)) {\n\t\t\twp_set_object_terms( $post_id, $types, 'rsvpmaker-type' );\n\t\t}\n\t\tif(!empty($_POST['rsvp_on']))\n\t\t\tadd_post_meta($post_id,'_rsvp_on',1);\n\t\tif(!empty($_POST['calendar_icons']))\n\t\t\tadd_post_meta($post_id,'_calendar_icons',1);\n\t\tif(!empty($_POST['add_timezone']))\n\t\t\tadd_post_meta($post_id,'_add_timezone',1);\n\t\tif(!empty($_POST['convert_timezone']))\n\t\t\tadd_post_meta($post_id,'_convert_timezone',1);\n\t\t\n\t\tif(empty($confirmation)) {\n\t\t\t$confirmation = sprintf('<h3>%s</h3>',__('Event Posts Created','rsvpmaker'));\n\t\t\techo wp_kses_post($confirmation);\n\t\t}\n\t\tprintf('<p><a href=\"%s\">View</a> <a href=\"%s\">Edit</a> %s %s</p>',get_permalink($post_id),admin_url(\"post.php?post=$post_id&action=edit\"),$title,$datetime);\n\t\t}\t\t\n\t}\n}\n\nfunction print_quick_date_entry($i,$date_text_default,$datedefault) {\n\techo '<div class=\"quickentry\">';\n\techo '<div id=\"event_date'.$i.'\" >\n\t<p><label>Date</label>\n\t<input name=\"quick_rsvp_date[]\" type=\"date\" class=\"quick-rsvp-date\" id=\"quick-rsvp-date-'.$i.'\" count=\"'.$i.'\"> <span id=\"date-weekday-'.$i.'\"></span>\n\t</p>\n\t<p><label>Time</label> \n\t<input name=\"quick_rsvp_time[]\" type=\"time\" class=\"quick-rsvp-time\" id=\"quick-rsvp-time-'.$i.'\" count=\"'.$i.'\" value=\"12:00:00\"> <span id=\"date-weekday-'.$i.'\"></span>\n\t</p>\n\t<p><label>End Time</label> <input type=\"hidden\" id=\"end_time_type-'.$i.'\" name=\"quick_end_time_type[]\" class=\"end_time_type\" value=\"set\" >\n\t<input name=\"quick_rsvp_time_end[]\" type=\"time\" class=\"quick-rsvp-time-end\" id=\"quick-rsvp-time-end-'.$i.'\" size=\"5\" count=\"'.$i.'\" value=\"13:00:00\">\n\t</p></div>';\n\tprintf('<div class=\"quickfield\"><label>%s</label><input type=\"text\" id=\"quicktitle-'.$i.'\" class=\"quicktitle\" name=\"quicktitle[]\"></div>',__('Title','rsvpmaker'));\n\tprintf('<div class=\"quickfield\"><label>%s</label><br /><textarea name=\"quickcontent[]\" rows=\"2\" cols=\"100\"></textarea></div>',__('Starter Text','rsvpmaker'));\n\techo '<div id=\"quickmessage-'.$i.'\"></div>';\n\techo '</div>';\n}\n\nfunction rsvpmaker_quick_ui() {\n\tglobal $rsvp_options;\n\t$t = strtotime('tomorrow noon');\n\t$datedefault = rsvpmaker_date('Y-m-d H:i:s',$t);\n\t$date_text_default = rsvpmaker_date('F j, Y '.$rsvp_options['time_format'],$t);\n\t$limit = (int) $_GET['quick'];\n\tif(!$limit)\n\t\t$limit = 5;\n\tprintf('<h3>%s</h3>',__('Quickly Setup Multiple Event Posts','rsvpmaker'));\n\tprintf('<p>%s</p>',__('Enter start time and title for each event to be created. Optionally, you can include post body text. Can include multiple paragraphs, separated by a blank line. Events can be published immediately or saved as drafts for further editing.','rsvpmaker'));\n\tprintf('<p>%s</p>',__('You must enter at least a title for the event to be recorded.','rsvpmaker'));\n\tprintf('<p>%s</p>',__('Setting the date changes the default date for all the events that follow, which is useful for example for setting up a conference program or other series of events on the same day or subsequent days.','rsvpmaker'));\n\tprintf('<form method=\"post\" action=\"%s\">',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup'));\n\tfor($i = 0; $i < 50; $i++) {\n\t\tif($i >= $limit)\n\t\t\techo '<div class=\"quick-extra-blank\" id=\"quick-extra-blank-'.$i.'\">';\n\t\techo '<div>Entry '.($i+1).'</div>';\n\t\tprint_quick_date_entry($i,$date_text_default,$datedefault);\n\t\tif($i >= $limit)\n\t\t\techo '</div>';\n\t}\n\techo '<div class=\"quick-extra-blank\" id=\"quick-extra-blank-'.$i.'\"><em>Maximum Entries Reached</em></div>';\n\techo '<div><button id=\"add-quick-blank\" start=\"'.$limit.'\">+ Show more entries</button></div>';\n\t//echo '<div id=\"quick_entry_more\"></div><p><button id=\"quick_entry_add\">Add More</button></p><div id=\"quick_entry_hidden\">';\n\t//print_quick_date_entry('x',$date_text_default,$datedefault);\n\t//echo '</div>';\n\techo '<div>';\n\twp_dropdown_categories( array(\n\t\t'taxonomy'      => 'rsvpmaker-type',\n\t\t'hide_empty'    => 0,\n\t\t'orderby'       => 'name',\n\t\t'order'         => 'ASC',\n\t\t'name'          => 'type',\n\t\t'show_option_none' => __('Event Type (optional)','rsvpmaker'),\n\t\t'option_none_value' => 0\n\t) );\n\twp_dropdown_categories( array(\n\t\t'taxonomy'      => 'rsvpmaker-type',\n\t\t'hide_empty'    => 0,\n\t\t'orderby'       => 'name',\n\t\t'order'         => 'ASC',\n\t\t'name'          => 'type2',\n\t\t'show_option_none' => __('Event Type (optional)','rsvpmaker'),\n\t\t'option_none_value' => 0\n\t) );\n\techo '<label>New Event Type </label> <input type=\"text\" name=\"newtype\"> <div>';\n\t?>\n\t<p>\n\t<?php esc_html_e('Collect RSVPs','rsvpmaker');?>\n\t  <input type=\"radio\" name=\"rsvp_on\" id=\"setrsvpon\" value=\"1\" <?php if( !empty($rsvp_options['rsvp_on']) ) echo 'checked=\"checked\" ';?> />\n\t<?php esc_html_e('YES','rsvpmaker');?> <input type=\"radio\" name=\"rsvp_on\" id=\"setrsvpon\" value=\"0\" <?php if( empty($rsvp_options['rsvp_on']) ) echo 'checked=\"checked\" ';?> />\n\t<?php esc_html_e('NO','rsvpmaker');?> </p>\n\t<p><input type=\"checkbox\" name=\"calendar_icons\" value=\"1\" <?php if($rsvp_options[\"calendar_icons\"]) echo ' checked=\"checked\" ';?> /> <?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?> \n\t<br />\n\t<p id=\"timezone_options\">\n\t<?php\n\tif(!strpos($rsvp_options[\"time_format\"],'T') )\n\t{\n\t?>\n\t<input type=\"checkbox\" name=\"add_timezone\" value=\"1\" <?php if($rsvp_options[\"add_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); echo ' '; ?>\n\t<?php\n\t}\n\t?>\n\t<input type=\"checkbox\" name=\"convert_timezone\" value=\"1\" <?php if($rsvp_options[\"convert_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?>\n\t</p>\n\t<?php\n\trsvpmaker_nonce();\n\techo '<div><input type=\"radio\" name=\"status\" value=\"draft\" checked=\"checked\"> Draft <input type=\"radio\" name=\"status\" value=\"publish\"> Publish </div><p><button>Submit</button></p></form>';\n}\n\nfunction rsvpmaker_setup () {\n\nglobal $rsvp_options, $current_user;\n\n?>\n<style>\nselect {\n\tmax-width: 228px;\n}\n.quickentry label {\n\tdisplay: inline-block;\n\twidth: 100px;\n\tfont-weight: bold;\n}\n</style>\n<div class=\"wrap\">\n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div> \n<h2><?php esc_html_e('Event Setup','rsvpmaker'); ?></h2> \n<?php\nif(isset($_POST[\"quicktitle\"]))\n\trsvpmaker_quick_post();\nelseif(isset($_GET[\"quick\"])) {\n\trsvpmaker_quick_ui();\n\techo '</div>';\n\treturn;\n}\n\n$title = '';\n$template = 0;\nif(isset($_GET['t']))\n{\n\t$post = get_post((int) $_GET['t']);\n\t$title = htmlentities($post->post_title);\n\t$template = $post->ID;\n\t$future = get_events_by_template($template);\n\t$shortlist = $morelist = '';\n\tif($future) {\n\t\tforeach($future as $index => $event) {\n\t\t\t$temp = sprintf('<p><a href=\"%s\">Edit event</a>: %s %s</p>',admin_url('post.php?action=edit&post='.$event->ID),esc_html($event->post_title),esc_html($event->date));\n\t\t\tif($index < 5)\n\t\t\t\t$shortlist .= $temp;\n\t\t\telse\n\t\t\t\t$morelist .= $temp;\n\t\t}\n\tif(!empty($morelist))\n\t\t$morelist = '<p id=\"morelink\"><a onclick=\"document.getElementById'.\"('moreprojected').style.display='block'\".';document.getElementById'.\"('morelink').style.display='none'\".'\" >Show More</a></p><div id=\"moreprojected\" style=\"display: none;\">'.$morelist.'</div>';\n\techo '<div style=\"border: medium solid #999; padding: 15px;\"><h2>'.__('Previously Scheduled','rsvpmaker').'</h2>'.$shortlist.$morelist.'</div>';\n\t\n\techo '<p><em>'.__('To create a new event based on this template, use the form below.','rsvpmaker').'</em><p>';\n\t}\n}\n\n?>\n<h2><?php esc_html_e('Set Event Title and Schedule','rsvpmaker'); ?></h2> \n<?php\nprintf('<p><em>%s</em></p>',__('Start by entering an event title and date or schedule details. A draft event post will be created and loaded into the editor.'));\nprintf('<form id=\"rsvpmaker_setup\" action=\"%s\" method=\"post\"><input type=\"hidden\" name=\"template\" value=\"%d\">', admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup'),$template);\necho '<h1 style=\"font-size: 20px;\">Title: <input type=\"text\" name=\"rsvpmaker_new_post\" style=\"font-size: 20px; width: 60%\" value=\"'.$title.'\" /></h1>';\ndraw_eventdates();\nif(isset($_GET['t']))\n\techo '<p><em>'.__('Event will inherit defaults from template for RSVPs, date format options.','rsvpmaker').'</em></p>';\nelse\n{\n$rsvp_on = $rsvp_options['rsvp_on'];\n?>\n<p>\n<?php esc_html_e('Collect RSVPs','rsvpmaker');?>\n  <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"1\" <?php if( $rsvp_on ) echo 'checked=\"checked\" ';?> />\n<?php esc_html_e('YES','rsvpmaker');?> <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"0\" <?php if( !$rsvp_on ) echo 'checked=\"checked\" ';?> />\n<?php esc_html_e('NO','rsvpmaker');?> </p>\n<p><input type=\"checkbox\" name=\"calendar_icons\" value=\"1\" <?php if($rsvp_options[\"calendar_icons\"]) echo ' checked=\"checked\" ';?> /> <?php esc_html_e('Show Add to Google / Download to Outlook (iCal) icons','rsvpmaker'); ?> \n<br />\n<p id=\"timezone_options\">\n<?php\nif(!strpos($rsvp_options[\"time_format\"],'T') )\n{\n?>\n<input type=\"checkbox\" name=\"add_timezone\" value=\"1\" <?php if($rsvp_options[\"add_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Display timezone code as part of date/time','rsvpmaker'); echo ' '; ?>\n<?php\n}\n?>\n<input type=\"checkbox\" name=\"convert_timezone\" value=\"1\" <?php if($rsvp_options[\"convert_timezone\"]) echo ' checked=\"checked\" '; ?> /><?php esc_html_e('Show timezone conversion button next to calendar icons','rsvpmaker'); ?>\n</p>\n<div><label>Timezone</label> \n<select id=\"timezone_string\" name=\"timezone_string\">\n<script>\nvar tz = jstz.determine();\nvar tzstring = tz.name();\ndocument.write('<option selected=\"selected\" value=\"' + tzstring + '\">' + tzstring + '</option>');\n</script>\n<option value=\"\"><?php esc_html_e('Default','rsvpmaker'); ?></option>\n<optgroup label=\"U.S. (Common Choices)\">\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n</optgroup>\n<?php $choices = wp_timezone_choice('');\necho str_replace('<option selected=\"selected\" value=\"\">Select a city</option>','',$choices);\n?>\n</select> <br /><em><?php esc_html_e('Choose a city in the same timezone as you','rsvpmaker'); ?>.</em>\n\n<?php\n$o = sprintf('<option value=\"%d\">%s</option>',esc_attr($rsvp_options['rsvp_form']),__('Default','rsvpmaker'));\n$forms = rsvpmaker_get_forms();\nforeach($forms as $label => $form_id)\n{\n$o .= sprintf('<option value=\"%d\">%s</option>',esc_attr($form_id),esc_html($label));\n}\nprintf('<p class=\"rsvp_form_select\"><label>%s</label> <select name=\"rsvp_form\">%s</select></p>',__('RSVP Form','rsvpmaker'),$o);\n\n}\nrsvpmaker_nonce();\nsubmit_button();\necho '</form></div>';\n\t\n\tif(isset($_GET['t']))\n\t\treturn;\n\nif(!isset($_GET['new_template']) && !isset($_GET['t'])){\n\techo '<div style=\"background-color: #fff; padding: 10px; border: thin dotted #555; width: 90%;\">';\n\tprintf('%s %s<br /><a href=\"%s\">%s</a>',__('For recurring events','rsvpmaker'),__('create a' ,'rsvpmaker'),admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&new_template=1'),__('New Template','rsvpmaker'));\n\tprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><br />%s <select name=\"page\"><option value=\"rsvpmaker_setup\">%s</option><option value=\"rsvpmaker_template_list\">%s</option></select> %s %s<br >%s</form>',admin_url('edit.php'),__('Or add','rsvpmaker'),__('One event','rsvpmaker'),__('Multiple events','rsvpmaker'),__('based on','rsvpmaker'),rsvpmaker_templates_dropdown('t'),get_submit_button('Submit'));\n\tdo_action('rsvpmaker_setup_template_prompt');\n\tprintf('<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_setup\">%s <select name=\"quick\"><option value=\"5\">5</option><option value=\"10\">10</option><option value=\"15\">15</option><option value=\"20\">20</option><option value=\"30\">30</option><option value=\"40\">40</option><option value=\"50\">50</option></select> %s %s</form>',admin_url('edit.php'),__('Or quickly create up to','rsvpmaker'),__('events without a template','rsvpmaker'),get_submit_button('Show Form'));\n\techo '</div>';\n}\t\t\t\t\n\n\t$myevents = get_events_by_author($current_user->ID);\n\tif($myevents)\n\t{\n\t\tprintf('<h3>%s</h3>',__('Your Event Posts','rsvpmaker'));\n\t\tforeach($myevents as $event){\n\t\t\t$draft = ($event->post_status == 'draft') ? ' <strong>(draft)</strong>' : '';\n\t\t\tprintf('<p><a href=\"%s\">Edit event</a>: %s %s %s</p>',admin_url('post.php?action=edit&post='. $event->ID),esc_html($event->post_title),esc_html($event->date),esc_html($draft));\n\t\t}\n\t}\n\t$templates = rsvpmaker_get_templates();\n\t$tedit = $list = '';\n\tif(is_array($templates))\n\tforeach($templates as $template)\n\t{\n\t$eds = get_additional_editors($template->ID);\n\tif(($current_user->ID == $template->post_author) || (!empty($eds) && in_array($current_user->ID,$eds) ) )\n\t{\n\t\t$tedit .= sprintf('<option value=\"%s\">%s</option>',esc_attr($template->ID),esc_html($template->post_title));\n\t\t$list .= '<p><strong>'.$template->post_title.'</strong></p>';\n\t\t$event = rsvpmaker_next_by_template($template->ID);\n\t\tif($event)\n\t\t{\n\t\t$draft = ($event->post_status == 'draft') ? ' <strong>(draft)</strong>' : '';\n\t\t$list .= sprintf('<p><a href=\"%s\">Edit next event</a>: %s %s %s</p>',admin_url('post.php?action=edit&post='.$event->ID),esc_html($event->post_title),esc_html($event->date), esc_html($draft));\t\t\t\n\t\t}\n\t\t$list .= sprintf('<p><a href=\"%s\">Add event</a> based on template: %s</p>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&t='.$template->ID),esc_html($template->post_title));\t\t\t\n\t\t$list .= sprintf('<p><a href=\"%s\">Create / Update</a> multiple events based on: %s</p>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t='.$template->ID),esc_html($template->post_title));\n\t\t$list .= sprintf('<p><a href=\"%s\">Edit template</a> %s</p>',admin_url('post.php?action=edit&post='.$template->ID),esc_html($template->post_title));\t\t\n\t}\n\n\t}\n\n\tif(!empty($tedit))\n\t{\n\t\tprintf('<h3>%s</h3><p>%s</p>',__('Your Templates','rsvpmaker'),__('Your templates and any others you have editing rights to are listed here. Templates allow you to generate multiple events based on a recurring schedule and common details for events in the series.','rsvpmaker'));\n\t\techo $list;\n\n\t\tprintf('<form action=\"%s\" method=\"get\"><p><input type=\"hidden\" name=\"action\" value=\"edit\"><select name=\"post\">%s</select>%s</p></form>',admin_url('post.php'),$tedit,get_submit_button(__('Edit Template','rsvpmaker')));\n\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvpmaker_template_list\">\n\t\t<p><select name=\"t\">%s</select>%s</p></form>',admin_url('edit.php'),$tedit,get_submit_button(__('Create/Update','rsvpmaker')));\n\t}\n\trsvpmaker_debug_log(memory_get_peak_usage(),'peak memory used');\n}\n\nfunction rsvpmaker_setup_post ($ajax = false) {\nif(!empty($_POST[\"rsvpmaker_new_post\"])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\t$t = 0;\n\t\t$slug = $title = sanitize_text_field(stripslashes($_POST[\"rsvpmaker_new_post\"]));\n\t\t$content = array('post_title' => $title,'post_name' => $slug, 'post_type' => 'rsvpmaker','post_status' => 'draft','post_content' => '');\n\t\tif(!empty($_POST['template']))\n\t\t{\t\n\t\t\t$t = (int) $_POST['template'];\n\t\t\t$template = get_post($t);\n\t\t\t$content['post_content'] = $template->post_content;\n\t\t}\n\t\t$post_id = wp_insert_post($content);\n\t\tif($post_id)\n\t\t{\t\t\n\t\tif($t) {\n\t\t\tadd_post_meta($post_id,'_meet_recur',$t);\n\t\t\trsvpmaker_copy_metadata($t, $post_id);\n\t\t}\n\t\telse {\n\t\t\tsave_rsvp_meta($post_id, true);\n\t\t}\n\t\tif(!empty($_POST['rsvp_form']))\n\t\t\tupdate_post_meta($post_id,'_rsvp_form', (int) $_POST['rsvp_form']);\n\t\tif(!empty($_POST['timezone_string']))\n\t\t\tupdate_post_meta($post_id,'_rsvp_timezone_string', sanitize_text_field($_POST['timezone_string']));\n\t\t\n\t\trsvpmaker_save_calendar_data($post_id);\n\t\t$date = sanitize_text_field($_POST['newrsvpdate'].' '.$_POST['newrsvptime']);\n\t\t$end = sanitize_text_field($_POST['rsvpendtime']);\n\t\t$display_type = sanitize_text_field($_POST['end_time_type']);\n\t\t$timezone = sanitize_text_field($_POST['timezone_string']);\n\t\trsvpmaker_add_event_row($post_id,$date,$end,$display_type,$timezone);\n\t\t$editurl = admin_url('post.php?action=edit&post='.$post_id);\n\t\tif($ajax)\n\t\t\treturn $editurl;\n\t\twp_redirect($editurl);\n\t\tdie();\t\t\t\n\t\t}\n\t}\n\t\n\t//post-new.php?post_type=rsvpmaker\n\tif(strpos(sanitize_text_field($_SERVER['REQUEST_URI']),'post-new.php?post_type=rsvpmaker'))\n\t{\n\t\twp_redirect(admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_setup'));\n\t\tdie();\n\t}\n}\n\nfunction rsvpmaker_import_cleanup () {\n\tglobal $wpdb;\n\t$sql = \"SELECT ID, post_title from $wpdb->posts WHERE post_type='rsvpmaker' AND post_title LIKE '%rsvpid%' \";\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $post)\n\t{\n\t$title = preg_replace('/rsvpid.+/','',$post->post_title);\n\t$sql = $wpdb->prepare(\"UPDATE $wpdb->posts SET post_title=%s WHERE ID=%d\",$title,$post->ID);\n\t$wpdb->query($sql);\n\t}\n}\n\nfunction rsvpmaker_export_screen () {\n\tglobal $wpdb, $rsvp_options;\n?>\n\t<h1>Import/Export RSVPMaker Events</h1>\n\t<?php\n\t?>\n\t<p>RSVPMaker posts are excluded from the standard WordPress export function because event posts require special handling, particularly those that have the same title but different dates (which by default WordPress rejects as duplicate posts).</p>\n\t<h3>Export Events</h3>\n<?php\nif(isset($_GET['resetrsvpcode'])) {\n\t$jt = strtotime('+ 24 hour');\n\t$export_code = rand().':'.$jt;\n\tupdate_option('rsvptm_export_lock',$export_code);\n}\nelse {\n\t$export_code = get_option('rsvptm_export_lock');\n\t$parts = explode(':',$export_code);\n\t$jt = (empty($parts[1])) ? 0 : (int) $parts[1]; \t\n}\nif(empty($export_code) || ($jt < time())) {\n\tprintf('<p>Coded url is expired or has not been set. To enable importing of event records from this site into another site, (<a href=\"%s\">set code</a>)</p>',admin_url('tools.php?page=rsvpmaker_export_screen&resetrsvpcode=1'));\n}\nelse {\n\t$url = rest_url('/rsvpmaker/v1/import/'.$export_code);\n\tprintf('<p>To move your club\\'s event records to another website that also uses this software, copy this web address:</p>\n\t<pre>%s</pre>\n\t<p>This link will expire at %s. (<a href=\"%s\">reset</a>)</p>',$url,rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'].' T',$jt),admin_url('tools.php?page=rsvpmaker_export_screen&resetrsvpcode=1'));\t\n}\n?>\n<h3>Import Events</h3>\n<p>Copy the link from the site you are <em>exporting from</em> and enter it here on the site you are <em>importing events into</em>.</p>\n<form method=\"post\" id=\"importform\" action=\"<?php echo admin_url('tools.php?page=rsvpmaker_export_screen'); ?>\">\n<div><input type=\"text\" name=\"importrsvp\" id=\"importrsvp\" value=\"<?php if(isset($_POST['importurl'])) echo sanitize_text_field($_POST['importrsvp']); ?>\" /></div>\n<input type=\"hidden\" id=\"importnowurl\" value=\"<?php echo rest_url('/rsvpmaker/v1/importnow'); ?>\" />\n<div><button id=\"import-button\">Import</button></div>\n</form>\n<div id=\"import-result\"></div>\n<p><em>Note: This function does not automatically import images or correct links that may point to the old website.</em></p>\n<?php\nrsvpmaker_jquery_inline('import');\t\t\t\t\t\t\t\t\t \n}\n\nfunction rsvpmaker_override () {\n\tglobal $post, $current_user;\n\tif(isset($_POST['rsvp_tx_template'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\tupdate_post_meta((int) $_POST['rsvp_tx_post_id'],'rsvp_tx_template',sanitize_text_field($_POST['rsvp_tx_template']));\n\tif(!empty($_GET['post']) && !empty($_GET['action']) && ($_GET['action'] == 'edit') )\n\t{\n\t\t$post_id = (int) $_GET['post'];\n\t\tif(current_user_can('edit_post',$post_id))\n\t\t\treturn; // don't mess with it\n\t\tif(empty($post))\n\t\t$post = get_post($post_id);\n\t\tif(isset($post->post_author) && ($post->post_author != $current_user->ID)) {\n\t\t\t$eds = get_additional_editors($post_id);\n\t\t\tif(in_array($current_user->ID,$eds))\n\t\t\t{\n\t\t\tif(!in_array($post->post_author,$eds))\n\t\t\t{\n\t\t\tadd_post_meta($post_id, '_additional_editors',$post->post_author);\n\t\t\t}\n\t\t\twp_update_post(array('ID' => $post_id, 'post_author' => $current_user->ID));\n\t\t\t}\n\t\t}\n\t}\n}\n\n//add_action('admin_init','rsvpmaker_override',1);\n\nfunction rsvpmaker_share() {\n?>\t\n\t<h1>Share Templates</h1>\n\t<p>When you create an event template, you have the option of designating other users who will have the same authoring / editing rights to that template (and all the events based on it) as you do. This is helpful for organizations where more than one person needs to be able to post and update events.</p>\n\t<p>Be careful to only grant this permission to trusted collaborators.</p>\n<?php\t\n\tglobal $current_user;\n\tif(isset($_REQUEST['t']))\n\t\t{\n\t\t\t$t = (int) $_REQUEST['t'];\n\t\t\t$post = get_post($t);\n\t\t}\n\t\n\tif(!empty($_POST['editor_email']) && !empty($t)  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$email = sanitize_text_field($_POST['editor_email']);\n\t\tif(!is_email($email))\n\t\t{\n\t\t\techo '<p>Invalid email</p>';\n\t\t}\n\t\telse {\n\t\t\t$user = get_user_by('email',$email);\n\t\t\tif($user) {\n\t\t\t\tadd_post_meta($t,'_additional_editors',$user->ID);\n\t\t\t\techo '<p>Adding '.$email.'</p>';\n\t\t\t}\n\t\t\telse {\n\t\t\t$user[\"user_login\"] = $email;\n\t\t\t$user[\"user_email\"] = $email;\n\t\t\t$user[\"display_name\"] = 'Editor added by '.$current_user->user_email;\n\t\t\t$user[\"user_pass\"] = wp_generate_password();\n\t\t\t$user['role'] = 'author';\n\t\t\t$id = wp_insert_user($user);\n\t\t\tif($id)\n\t\t\t{\n\t\t\tadd_post_meta($t,'_additional_editors',$id);\n$lostpassword = site_url('wp-login.php?action=lostpassword');\n?>\n<h3>Editor account created</h3>\n<p>Email and username are both set to <?php echo esc_html($email); ?></p>\n<p><strong>IMPORTANT</strong>: Please contact the person you have added and let them know to set their password so they will be able to assist you. Send them this link:</p>\n<p><a href=\"<?php echo esc_attr($lostpassword); ?>\"><?php echo esc_html($lostpassword); ?></a></p>\n<?php\n\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(isset($_POST['remove_editor']) && is_array($_POST['remove_editor']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\tforeach($_POST['remove_editor'] as $ed)\n\t\tdelete_post_meta($t,'_additional_editors',(int) $ed);\n\t\n\tif(!empty($t))\n\t{\n\t$template = get_post($t);\n\t$editors = '';\n\t$eds = get_additional_editors($template->ID);\n\tif(!is_array($eds))\n\t\t$eds = array();\n\tif(current_user_can('edit_rsvpmaker',$template->ID) || (!empty($eds) && in_array($current_user->ID,$eds) ) )\n\t{\n\t\tif(!in_array($template->post_author,$eds))\n\t\t{\n\t\t\t$eds[] = $template->post_author;\n\t\t}\n\t\tforeach($eds as $ed) {\n\t\t\t$user = get_userdata($ed);\n\t\t\t$remove = (isset($_GET['remove'])) ? sprintf('<input type=\"checkbox\" name=\"remove_editor[]\" value=\"%s\" /> Remove ',$ed) : '';\n\t\t\t$editors .= '<div>'.$remove.$user->user_email.' '.$user->display_name.'</div>';\n\t\t}\n\t}\n\t\n\tif(!empty($editors))\n\t{\n\t\t$editors = '<h3>Current Editors</h3>'.$editors;\n\t}\n\t\tprintf('<h2>Update Editors List: %s</h2><form action=\"%s\" method=\"post\">%s\n\t\t<p><input type=\"hidden\" name=\"t\" value=\"%s\" />\n\t\tAdd by Email: <input type=\"email\" name=\"editor_email\" />\n\t\t%s</p>%s</form>',esc_html($post->post_title), admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_share'), $editors,$t,get_submit_button(__('Save','rsvpmaker')),rsvpmaker_nonce('return'));\n\t}\n\t\n\t$templates = rsvpmaker_get_templates();\n\t$tedit = $list = '';\n\tif(is_array($templates))\n\tforeach($templates as $template)\n\t{\n\t$eds = get_additional_editors($template->ID);\n\tif(current_user_can('edit_rsvpmaker',$template->ID) || (!empty($eds) && in_array($current_user->ID,$eds) ) )\n\t{\n\t\t$s = (!empty($t) && ($t == $template->ID)) ? ' selected=\"selected\" ' : '';\n\t\t$tedit .= sprintf('<option value=\"%s\" %s>%s</option>',$template->ID,$s,esc_html($template->post_title));\n\t}\n\n\t}\nif(empty($tedit))\n\techo \"<p>You don't have any templates</p>\";\nelse\n{\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvpmaker_share\">\n\t\t<p><select name=\"t\">%s</select>%s</p>%s</form>',admin_url('edit.php'),$tedit,get_submit_button(__('Choose Template','rsvpmaker')),rsvpmaker_nonce('return'));\n\t\n\t\tprintf('<form action=\"%s\" method=\"get\">\n\t\t<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rsvpmaker_share\">\n\t\t<input type=\"hidden\" name=\"remove\" value=\"1\">\n\t\t<p><select name=\"t\">%s</select>%s</p>%s</form>',admin_url('edit.php'),$tedit,get_submit_button(__('Remove Editors','rsvpmaker')),rsvpmaker_nonce('return'));\n}\n\t\n}\n\nfunction rsvpmaker_submission ($atts) {\nglobal $rsvp_options;\n$defaultto = isset($rsvp_options['submissions_to']) ? $rsvp_options['submissions_to'] : $rsvp_options['rsvp_to'];\n$to = (isset($atts['to'])) ? $atts['to'] : $defaultto;\nob_start();\n?>\n<style>#rsvpmaker_submission label {\n\tdisplay: inline-block;\n\twidth: 100px;\n}\n</style>\n<script>\ntinymce.init({\nselector:\"textarea\",plugins: \"link\",\nblock_formats: 'Paragraph=p',\nmenu: {\nformat: { title: 'Format', items: 'bold italic | removeformat' },\nstyle_formats: [\n{ title: 'Inline', items: [\n\t{ title: 'Bold', format: 'bold' },\n\t{ title: 'Italic', format: 'italic' },\n]},]},\ntoolbar: 'bold italic link',\nrelative_urls: false,\nremove_script_host : false,\ndocument_base_url : \"'.site_url().'/\",\n});\t\n</script>\n<?php\nprintf('<form method=\"post\" action=\"%s\" id=\"rsvpmaker_submission\">',get_permalink());\nrsvpmaker_nonce();\nif(isset($_GET['submission_error']))\n{\n\techo '<h2 id=\"results\">Error</h2>';\n\tprintf('<p>%s</p>',esc_html($_GET['submission_error']));\n}\n\nif(isset($_GET['success']))\n{\necho '<h2 id=\"results\">Event Submitted for Review</h2>';\n$post_id = (int) $_GET['success'];\n$post = get_post($post_id);\n$expired = rsvpmaker_strtotime('-5 minutes');\n$submitted_at = rsvpmaker_strtotime($post->post_modified);\nif($submitted_at < $expired)\n{\n\techo '<p>Preview expired</p>';\n}\nelse {\n\techo '<p>Preview</p><div style=\"border: thin dotted #111; padding: 10px; margin: 10px;\">';\n\t$t = get_rsvpmaker_timestamp($post_id);\n\t$date = rsvpmaker_date($rsvp_options['long_date'].' '.$rsvp_options['time_format'],$t);\n\tprintf('<h3>%s</h3><h3>%s</h3>%s',esc_html($post->post_title),esc_html($date),wp_kses_post($post->post_content));\t\n\techo '</div>';\n}\n}\n\t$month = (int) date('m');\n\t$year = (int) date('Y');\n\t$day = (int) date('j');\n\t$hour = 12;\n\t$endhour = 13;\n\t$minutes = 0;\n\t$months = array('January','February','March','April','May','June','July','August','September','October','November','December');\nprintf('<input type=\"hidden\" name=\"pagelink\" value=\"%s\">',get_permalink());\nrsvphoney_ui();\n?>\t\n<h2>Event Title: <input name=\"event_title\"></h2>\n\t<div id=\"date\"><label><?php echo __('Date','rsvpmaker');?></label> <input type=\"date\" name=\"date\">\n\t</div> \n\t<div><label><?php echo __('Time','rsvpmaker');?></label> <input id=\"time\" type=\"time\" name=\"time\" value=\"12:00\"> to <input id=\"endtime\" type=\"time\" name=\"endtime\" value=\"13:00\">\n<?php\nif(!empty($atts['timezone']))\n{\n?>\n<div><label>Timezone</label> \n<select id=\"timezone_string\" name=\"timezone_string\">\n<script>\nvar tz = jstz.determine();\nvar tzstring = tz.name();\ndocument.write('<option selected=\"selected\" value=\"' + tzstring + '\">' + tzstring + '</option>');\n</script>\n<optgroup label=\"U.S. (Common Choices)\">\n<option value=\"America/New_York\">New York</option>\n<option value=\"America/Chicago\">Chicago</option>\n<option value=\"America/Denver\">Denver</option>\n<option value=\"America/Los_Angeles\">Los Angeles</option>\n</optgroup>\n<?php $choices = wp_timezone_choice('');\necho str_replace('<option selected=\"selected\" value=\"\">Select a city</option>','',$choices);\n?>\n</select> <br /><em>Choose a city in the same timezone as you.</em>\n</div>\n<?php\n}//end display timezone\n?>\n<div><label>Your Name</label><input name=\"rsvpmaker_submission_contact\" id=\"rsvpmaker_submission_contact\" /></div>\n<div><label>Email</label><input name=\"rsvpmaker_submission_email\" id=\"rsvpmaker_submission_email\" /></div>\n<div><em>If you want your contact information to be published as part of the event listing, also include it in the description below.</em></div>\n<p>Event Details<br /><textarea id=\"rsvpmaker_submission_description\" name=\"rsvpmaker_submission_description\" rows=\"5\" cols=\"100\"></textarea></p>\n<input type=\"hidden\" name=\"to\" value=\"<?php echo esc_attr($to); ?>\" /> \n<input type=\"hidden\" name=\"rsvpmaker_submission_post\" value=\"<?php echo get_permalink(); ?>\" />\n<?php rsvpmaker_recaptcha_output(); ?>\n\t<p><button>Submit</button></p></form>\n<script>\njQuery(document).ready(function( $ ) {\n\nvar addhour = 1;\n\n$('#time').change(function() {\n\tvar time = $( this ).val();\n\tvar date = new Date('2000-01-01T'+time);\n\tdate.setTime(date.getTime()+(60*60*1000));\n\t$('#endtime').val(date.toLocaleTimeString('en-GB'));\n});\n\n});\n</script>\n\t<?php\n\treturn ob_get_clean();\n}\n\nfunction rsvpmaker_submission_post() {\n\tglobal $rsvp_options, $post;\n\n\tif(isset($_POST['rsvpmaker_submission_post']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\t$permalink = sanitize_text_field($_POST['rsvpmaker_submission_post']);\n\t\t$author = isset($rsvp_options['submission_author']) ? $rsvp_options['submission_author'] : 1;\n\t\t$title = sanitize_text_field(stripslashes($_POST['event_title']));\n\t\t$datetime = sanitize_text_field($_POST['date']) .' '.sanitize_text_field($_POST['time']);\n\t\t$t = rsvpmaker_strtotime($datetime);\n\t\t$endtime = sanitize_text_field($_POST['endtime']);\n\t\t$contact = sanitize_text_field(stripslashes($_POST['rsvpmaker_submission_contact']));\n\t\t$email = sanitize_text_field($_POST['rsvpmaker_submission_email']);\n\t\t$description = sanitize_textarea_field(stripslashes($_POST['rsvpmaker_submission_description']));\n\t\t$description = strip_tags($description,'<strong><em><a><b><i>');\n\t\t$description = wp_kses_post(rsvpautog($description));\n\t\tif($t < time()) {\n\t\t\treturn; //ignore dates from the past. common spam pattern. no error message to give them cues\t\n\t\t}\n\n\t\tif(!is_admin() && !empty($rsvp_options[\"rsvp_recaptcha_site_key\"]) && !empty($rsvp_options[\"rsvp_recaptcha_secret\"]))\n\t\t{\n\t\tif(!rsvpmaker_recaptcha_check ($rsvp_options[\"rsvp_recaptcha_site_key\"],$rsvp_options[\"rsvp_recaptcha_secret\"]))\t{\n\t\t\t$r = add_query_arg('submission_error','Failed security check',$permalink).'#results';\n\t\t\twp_redirect($r);\n\t\t\texit();\n\t\t\t}\t\n\t\t}\n\n\t\t$to = sanitize_text_field($_POST['to']);\n\t\tif(!is_email($to))\n\t\t\t$to = $rsvp_options['rsvp_to'];\n\t\tif(empty($title))\n\t\t\t$missing[] = 'event title';\n\t\tif(empty($datetime))\n\t\t\t$missing[] = 'date of event';\n\t\tif(empty($description))\n\t\t\t$missing[] = 'description';\n\t\tif(empty($contact))\n\t\t\t$missing[] = 'contact name';\n\t\tif(empty($email))\n\t\t\t$missing[] = 'contact email';\n\t\tif(!empty($missing))\n\t\t{\n\t\t\t$r = add_query_arg('submission_error',sprintf('missing data %s',implode(\"\\n\",$missing)),$permalink).'#results';\n\t\t\twp_redirect($r);\n\t\t\texit();\n\t\t}\n\t\tif(!is_email($email))\n\t\t{\n\t\t\t$r = add_query_arg('submission_error','invalid email address',$permalink).'#results';\n\t\t\twp_redirect($r);\n\t\t\texit();\n\t\t}\n\t\t\n\t\t$data['post_title'] = $title;\n\t\t$data['post_content'] = $description.'<!-- wp:rsvpmaker/placeholder {\"text\":\"Submitted by '.$contact.' '.$email.'\"} /-->';\n\t\t$data['post_author'] = $author;\n\t\t$data['post_status'] = 'draft';\n\t\t$data['post_type'] = 'rsvpmaker';\n\t\t$post_id = wp_insert_post($data);\n\n\t\tadd_rsvpmaker_date($post_id,$datetime,'set',$endtime );\n\t\tif(!empty($_POST['timezone_string']) )\n\t\t{\n\t\t\tadd_post_meta($post_id,\"_add_timezone\",true);\n\t\t\tadd_post_meta($post_id,\"_convert_timezone\",true);\n\t\t\tadd_post_meta($post_id,\"_rsvp_timezone_string\",sanitize_text_field($_POST['timezone_string']));\t\t\n\t\t}\n\t\tadd_post_meta($post_id,'_rsvpmaker_submission',date('Y-m-d H:i:s'));\n\t\n\t\t$mail['subject'] = \"Event submission: \".$title.' '.$cddate;\n\t\t$mail['html'] = $description.sprintf('<hr />\n\t\t<p><a href=\"%s\">Edit / Approve</a></p>\n\t\t<p>Submitted by %s %s / <a href=\"%s\">submission page</a></p>',admin_url('post.php?action=edit&post='.$post_id),esc_html($contact),esc_html($email),esc_url_raw($_POST['pagelink']));\n\t\t$mail['fromname'] = $contact;\n\t\t$mail['from'] = $email;\n\t\t$mail['to'] = $to;\n\t\trsvpmailer($mail);\n\t\t$r = add_query_arg('success',$post_id,$permalink).'#results';\n\t\twp_redirect($r);\n\t\texit();\n\t}\n}\n\nadd_shortcode('rsvpmaker_submission','rsvpmaker_submission');\n\n/*\n * New columns\n */\nadd_filter('manage_rsvpmaker_posts_columns', 'rsvpmaker_edit_columns');\n// the above hook will add columns only for default 'post' post type, for CPT:\n// manage_{POST TYPE NAME}_posts_columns\nfunction rsvpmaker_edit_columns( $column_array ) {\n\tunset($column_array[\"tags\"]);\n\t$column_array['event_dates'] = __('Event Dates','rsvpmaker');\n\t$column_array['rsvpmaker_end'] = __('End Time','rsvpmaker');\n\t$column_array['rsvpmaker_display'] = __('Display','rsvpmaker');\n\treturn $column_array;\n}\n\n/*\n * quick_edit_custom_box allows to add HTML in Quick Edit\n * Please note: it files for EACH column, so it is similar to manage_posts_custom_column\n */\n\nfunction rsvpmaker_quick_edit_fields( $column_name, $post_type ) {\nglobal $post;\nif(!get_rsvp_date($post->ID))\n\treturn; // only for dated events, not templates etc\n\t// you can check post type as well but is seems not required because your columns are added for specific CPT anyway\n\nswitch( $column_name ) :\n\t\tcase 'event_dates': {\n\n\t\t\t// you can also print Nonce here, do not do it ouside the switch() because it will be printed many times\n\t\t\trsvpmaker_nonce();\n\n\t\t\t// please not the fieldset classes could be:\n\t\t\t// inline-edit-col-left, inline-edit-col-center, inline-edit-col-right\n\t\t\t// each class for each column, all columns are float:left,\n\t\t\t// so, if you want a left column, use clear:both element before\n\t\t\t// the best way to use classes here is to look in browser \"inspect element\" at the other fields\n\n\t\t\t// for the FIRST columns only, it opens <fieldset> element, all our fields will be there\n\t\t\techo '<fieldset class=\"inline-edit-col-right\"><div class=\"inline-edit-col\"><div class=\"inline-edit-group wp-clearfix\">';\n\n\t\t\techo '<label class=\"alignleft\">\n\t\t\t\t\t<span class=\"title\">Datetime</span>\n\t\t\t\t\t<span class=\"input-text-wrap\"><input type=\"text\" class=\"quick_event_date\" id=\"quick_event_date-'.$post->ID.'\" post_id=\"'.$post->ID.'\" name=\"event_dates\" value=\"\"></span>\n\t\t\t\t\t<span id=\"quick_event_date_text-'.$post->ID.'\"></span>\n\t\t\t\t</label>';\n\n\t\t\tbreak;\n\n\t\t}\n\t\tcase 'rsvpmaker_end': {\n\t\t\t$end_type = get_rsvpmaker_meta($post->ID,'_firsttime',true);\n\t\t\t$end = get_rsvpmaker_meta($post->ID,'_endfirsttime',true);\n\t\t\techo '<label class=\"alignleft\">\n\t\t\t<span class=\"title\">End Time</span>\n\t\t\t<span class=\"input-text-wrap\"><input type=\"time\" class=\"quick_end_time\" id=\"quick_end_time-'.$post->ID.'\" post_id=\"'.$post->ID.'\" name=\"end_time\" value=\"\"></span>\n\t\t\t<span id=\"quick_end_time_text-'.$post->ID.'\"></span>\n</label>';\n\n\t\t\tbreak;\n\n\t\t}\n\t\tcase 'rsvpmaker_display': {\n\t\t\t$end_type = get_rsvpmaker_meta($post->ID,'_firsttime',true);\n\t\t\t$end = get_rsvpmaker_meta($post->ID,'_endfirsttime',true);\n\t\t\t//if(!empty($end_type) && (strpos($end,':') > 0))\n\t\t\t$options = array('set' => 'Show End Time','allday' => 'All Day/Times Not Shown','multi|2' => '2 Days','multi|3' => '3 Days','multi|4' => '4 Days','multi|5' => '5 Days','multi|6' => '6 Days','multi|7' => '7 Days');\n\t\t\techo '<label class=\"alignleft\">\n\t\t\t<span class=\"title\">Time Display</span>\n\t\t\t<select name=\"quick_time_display\" class=\"quick_time_display\">\n\t\t\t<option value=\"\">End Time Not Shown</option>';\n\t\t\tforeach($options as $key => $option)\n\t\t\t\tprintf('<option value=\"%s\">%s</option>',$key,$option);\n\t\t\techo '</select>\n</label>';\n\n\t\t\t// for the LAST column only - closing the fieldset element\n\t\t\techo '</div></div></fieldset>';\n\n\t\t\tbreak;\n\n\t\t}\n\n\tendswitch;\n}\n\n/*\n * Quick Edit Save\n */\n\nfunction rsvpmaker_quick_edit_save( $post_id ){\n\tif(empty($_POST['event_dates']))\n\t\treturn;\n\t// check user capabilities\n\tif ( !current_user_can( 'edit_post', $post_id ) ) {\n\t\treturn;\n\t}\n\n\t// check nonce\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\treturn;\n\n\tif ( isset( $_POST['event_dates'] ) ) {\n\t\tif(preg_match('/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/',$_POST['event_dates'])) {\n\t\t\t$date = sanitize_text_field($_POST['event_dates']);\n\t\t\tupdate_post_meta( $post_id, '_rsvp_dates', $date );\n\t\t}\n\t\telse\n\t\t\treturn;\n\t}\n\tif ( isset( $_POST['end_time'] ) ) {\n\t\tif(preg_match('/^\\d{2}:\\d{2}$/',$_POST['end_time'])) {\n\t\t $end = sanitize_text_field($_POST['end_time']);\n\t\t update_post_meta( $post_id, '_endfirsttime', $end );\n\t\t} \n\t}\n\t if ( isset( $_POST['quick_time_display'] ) ) {\n\t\tupdate_post_meta( $post_id, '_firsttime', sanitize_text_field($_POST['quick_time_display']) );\n\t\t$display_type = sanitize_text_field($_POST['quick_time_display']);\n\t\t$enddatetime = rsvpmaker_make_end_date ($date,$display_type,$end);\n\t\tupdate_post_meta($post_id,'_rsvp_end_date',$enddatetime);\n   \t}\n}\n", "<?php\n\n/*\nRSVPMaker API Endpoints\n*/\n\nclass RSVPMaker_Listing_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'future';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$events = get_future_events();\n\n\t\tif ( empty( $events ) ) {\n\n\t\t\treturn new WP_Error( 'empty_category', 'no future events listed', array( 'status' => 404 ) );\n\n\t\t}\n\n\t\treturn new WP_REST_Response( $events, 200 );\n\n\t}\n\n\n\n}\n\nclass RSVPMaker_Types_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'types';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\tpublic function get_items( $request ) {\n\n\t\t$types = get_terms( array('taxonomy' =>'rsvpmaker-type','hide_empty' => false) );\n\n\t\treturn new WP_REST_Response( $types, 200 );\n\n\t}\n\n\n\n\t// other functions to override\n\n\t// create_item(), update_item(), delete_item() and get_item()\n\n\n\n}\n\n\n\nclass RSVPMaker_Authors_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'authors';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$authors = get_rsvpmaker_authors();\n\n\t\treturn new WP_REST_Response( $authors, 200 );\n\n\t}\n\n\n\n}\n\n\n\nclass RSVPMaker_By_Type_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'type/(?P<type>[A-Z0-9a-z_\\-]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$wp_query = rsvpmaker_upcoming_query();\n\t\t$posts    = $wp_query->get_posts();\n\t\tif ( empty( $posts ) ) {\n\t\t\treturn new WP_Error( 'empty_category', 'there is no post in this category ' . $querystring, array( 'status' => 404 ) );\n\t\t}\n\t\treturn new WP_REST_Response( $posts, 200 );\n\t}\n\n\n\n\t// other functions to override\n\n\t// create_item(), update_item(), delete_item() and get_item()\n\n\n\n}\n\nclass RSVPMaker_GuestList_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'guestlist/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\tglobal $rsvp_options;\n\n\t\t$meta = get_post_meta( $request['post_id'], '_rsvp_show_attendees', true );\n\n\t\tif ( $meta ) {\n\n\t\t\treturn true;\n\n\t\t} elseif ( ( $meta == '' ) && $rsvp_options['show_attendees'] ) {\n\n\t\t\treturn true; // if not explicitly set for event, default is positive value\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$event = $request['post_id'];\n\n\t\t$sql = 'SELECT first,last,note FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$event AND yesno=1 ORDER BY id DESC\";\n\n\t\t$attendees = $wpdb->get_results( $sql );\n\n\t\treturn new WP_REST_Response( $attendees, 200 );\n\n\t}\n\n}\n\n\n\nclass RSVPMaker_ClearDateCache extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'clearcache/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tdelete_transient( 'rsvpmakerdates' );\n\n\t\treturn new WP_REST_Response( (object) 'deleted rsvpmakerdates transient', 200 );\n\n\t}\n\n}\n\n\n\nclass RSVPMaker_Sked_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'sked/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\t$sked = get_template_sked( intval($request['post_id']) );\n\n\t\treturn new WP_REST_Response( $sked, 200 );\n\n\t}\n\n}\n\nclass RSVPMaker_StripeSuccess_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'stripesuccess/(?P<txkey>.+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$base = get_option( $request['txkey'] );\n\n\t\t$key = 'conf:' . time();\n\n\t\tforeach ( $_POST as $name => $value ) {\n\n\t\t\t$vars[ $name ] = sanitize_text_field( $value );\n\t\t}\n\n\t\tif ( is_array( $base ) ) {\n\n\t\t\tforeach ( $base as $name => $value ) {\n\n\t\t\t\tif ( empty( $vars[ $name ] ) ) {\n\n\t\t\t\t\t$vars[ $name ] = $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// $vars['charge_id'] = $charge->id;\n\n\t\tif ( ! empty( $vars['rsvp_id'] ) ) {\n\n\t\t\t$rsvp_id = $vars['rsvp_id'];\n\n\t\t\t$rsvp_post_id = $vars['rsvp_post_id'];\n\n\t\t\t$paid = $vars['amount'];\n\n\t\t\t$invoice_id = get_post_meta( $rsvp_post_id, '_open_invoice_' . $rsvp_id, true );\n\n\t\t\t$charge = get_post_meta( $rsvp_post_id, '_invoice_' . $rsvp_id, true );\n\n\t\t\t$paid_amounts = get_post_meta( $rsvp_post_id, '_paid_' . $rsvp_id );\n\n\t\t\tif ( is_array( $paid_amounts ) ) {\n\n\t\t\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t\t\t$paid += $payment;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\t\t\tadd_post_meta( $rsvp_post_id, '_paid_' . $rsvp_id, $vars['amount'] );\n\n\t\t\t$vars['payment_confirmation_message'] = '';\n\n\t\t\t$message_id = get_post_meta( $rsvp_post_id, 'payment_confirmation_message', true );\n\n\t\t\tif ( $message_id ) {\n\n\t\t\t\t$message_post = get_post( $message_id );\n\n\t\t\t\t$vars['payment_confirmation_message'] = do_blocks( $message_post->post_content );\n\n\t\t\t}\n\n\t\t\tdelete_post_meta( $rsvp_post_id, '_open_invoice_' . $rsvp_id );\n\n\t\t\tdelete_post_meta( $rsvp_post_id, '_invoice_' . $rsvp_id );\n\n\t\t}\n\n\t\trsvpmaker_stripe_payment_log( $vars, $key );\n\n\t\tdelete_option( $request['txkey'] );\n        wp_schedule_single_event( time() + 30, 'rsvpmaker_after_payment',array('stripe'));\n\t\treturn new WP_REST_Response( $vars, 200 );\n\n\t}\n\n}\n\nclass RSVPMaker_PaypalSuccess_Controller extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'paypalsuccess/(?P<post_id>.+)/(?P<tracking>.+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn true;\n\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tif(isset($request['tracking']))\n\t\t\t$vars = get_post_meta_by_id( intval($request['tracking']) );\n\t\tif(empty($vars))\n\t\t\t$vars = array();\n\n\t\t$message_id = get_post_meta( $request['post_id'], 'payment_confirmation_message', true );\n\n\t\tif ( $message_id ) {\n\n\t\t\t$message_post = get_post( $message_id );\n\n\t\t\tif ( empty( $message_post->post_content ) ) {\n\n\t\t\t\t$message_post->post_content = '<p>' . __( 'Thank you for your payment', 'rsvpmaker' ) . '</p>';\n\t\t\t}\n\n\t\t\t$vars['payment_confirmation_message'] = do_blocks( $message_post->post_content );\n\n\t\t\tif(!empty($vars['rsvp_id'])) //rsvp_id\n\t\t\t\trsvp_confirmation_after_payment( $vars['rsvp_id'] );\n\t\t}\n\n\t\treturn new WP_REST_Response( $vars, 200 );\n\n\t}\n}\n\nclass RSVP_Export extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'import/(?P<code>.+)/(?P<start>.+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'handle' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\t$code = get_option( 'rsvptm_export_lock' );\n\n\t\tif ( empty( $code ) ) {\n\n\t\t\treturn $false;\n\t\t}\n\n\t\t$parts = explode( ':', $code );\n\n\t\t$t = (int) $parts[1];\n\n\t\tif ( $t < time() ) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ( $code == $request['code'] );\n\n\t}\n\n\n\n\tpublic function handle( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$start = $request['start'];\n\n\t\t$sql = \"SELECT * FROM $wpdb->posts WHERE ID > $start AND post_type='rsvpmaker' AND post_status='publish' ORDER BY ID LIMIT 0,50\";\n\n\t\t$future = $wpdb->get_results( $sql );\n\n\t\tforeach ( $future as $index => $row ) {\n\n\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $row->ID;\n\n\t\t\t$metaresults = $wpdb->get_results( $sql );\n\n\t\t\tforeach ( $metaresults as $metarow ) {\n\n\t\t\t\t$future[ $index ]->meta[] = $metarow;\n\n\t\t\t}\n\t\t}\n\n\t\treturn new WP_REST_Response( $future, 200 );\n\n\t}\n\n}\n\n\n\nclass RSVP_RunImport extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'importnow';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'handle' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\t// nonce check here\n\n\t\treturn (current_user_can( 'manage_options' )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function handle( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$error = '';\n\n\t\t$imported = 0;\n\n\t\t$top = 0;\n\n\t\tif ( isset( $_POST['importrsvp'] ) ) {\n\n\t\t\t$url  = sanitize_text_field( $_POST['importrsvp'] );\n\t\t\t$url .= '/' . (int) $_POST['start'];\n\n\t\t\tif ( rsvpmaker_is_url_local( $url ) ) {\n\n\t\t\t\t$error = 'You cannot import into the same site you are exporting from';\n\n\t\t\t} else {\n\n\t\t\t\t$remote = wp_remote_get( $url );\n\n\t\t\t\tif ( is_wp_error( $remote ) ) {\n\n\t\t\t\t\t$error = $remote->get_error_message();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$remote_events = $remote['body'];\n\n\t\t\t\t\tif ( strpos( $remote_events, 'rest_forbidden' ) ) {\n\n\t\t\t\t\t\t$error = 'forbidden';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( empty( $error ) ) {\n\n\t\t\t\t$events = json_decode( $remote_events );\n\n\t\t\t\tif ( ! empty( $events ) ) {\n\n\t\t\t\t\tforeach ( $events as $event ) {\n\n\t\t\t\t\t\t  $top = $event->ID;\n\n\t\t\t\t\t\t  $newpost['post_title'] = $event->post_title;\n\n\t\t\t\t\t\t  $newpost['post_content'] = $event->post_content;\n\n\t\t\t\t\t\t  $newpost['post_status'] = 'publish';\n\n\t\t\t\t\t\t  $newpost['post_type'] = 'rsvpmaker';\n\n\t\t\t\t\t\t  $post_id = wp_insert_post( $newpost );\n\n\t\t\t\t\t\tif ( $post_id ) {\n\n\t\t\t\t\t\t\t$imported++;\n\n\t\t\t\t\t\t\tif ( ! empty( $event->meta ) ) {\n\n\t\t\t\t\t\t\t\tforeach ( $event->meta as $metarow ) {\n\n\t\t\t\t\t\t\t\t\t  $sql = $wpdb->prepare( \"INSERT INTO $wpdb->postmeta SET post_id=%s, meta_key=%s, meta_value=%s\", $post_id, $metarow->meta_key, $metarow->meta_value );\n\n\t\t\t\t\t\t\t\t\t  $wpdb->query( $sql );\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}//meta array\n\n\t\t\t\t\t\t}//post_id\n\n\t\t\t\t\t}//end for event loop\n\t\t\t\t}\n\t\t\t} //end empty error\n\t\t}//end post value\n\n\t\treturn new WP_REST_Response(\n\t\t\tarray(\n\t\t\t\t'error'    => $error,\n\t\t\t\t'imported' => $imported,\n\t\t\t\t'top'      => $top,\n\t\t\t),\n\t\t\t200\n\t\t);\n\n\t}//end handle()\n\n}//end class\n\n\n\nclass RSVPMaker_Email_Lookup extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'email_lookup/(?P<nonce>.+)/(?P<event>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn wp_verify_nonce( $request['nonce'], 'rsvp_email_lookup' );\n\n\t}\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$event = $request['event'];\n\n\t\t$email = sanitize_email( $_GET['email_search'] );\n\n\t\t$output = ajax_rsvp_email_lookup( $email, $event );\n\n\t\treturn new WP_REST_Response( $output, 200 );\n\n\t}\n\n}\n\n\n\nclass RSVPMaker_Signed_Up extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'signed_up';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\n\t\treturn wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'));\n\n\t}\n\n\n\n\tpublic function get_items( $request ) {\n\n\t\tglobal $wpdb;\n\n\t\t$event = (int) $_GET['event'];\n\n\t\t$output = signed_up_ajax( $event );\n\n\t\treturn new WP_REST_Response( $output, 200 );\n\n\t}\n\n}\n\nclass RSVPMaker_Shared_Template extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\n\t\t$path = 'shared_template/(?P<post_id>[0-9]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$post_id  = $request['post_id'];\n\t\t$template = get_post( $post_id );\n\t\t$shared   = get_post_meta( $post_id, 'rsvpmaker_shared_template', true );\n\t\tif ( empty( $template ) || empty( $shared ) ) {\n\t\t\treturn new WP_REST_Response( false, 200 );\n\t\t}\n\t\t$export['post_title']   = $template->post_title;\n\t\t$export['post_content'] = $template->post_content;\n\t\treturn new WP_REST_Response( $export, 200 );\n\t}\n}\n\nclass RSVPMaker_Setup extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'setup';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn (current_user_can( 'edit_rsvpmakers' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$editurl = rsvpmaker_setup_post( true );\n\t\treturn new WP_REST_Response( $editurl, 200 );\n\t}\n}\n\nclass RSVPMaker_Email_Templates extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'email_templates';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn (current_user_can( 'edit_others_rsvpemails' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$templates = $_POST['rsvpmaker_email_template']; // array\n\t\t$output    = '<h2>' . __( 'Updated', 'rsvpmaker' ) . '</h2>';\n\t\tforeach ( $templates as $index => $template ) {\n\t\t\t$template['html']    = wp_kses_post(stripslashes( $template['html']) );\n\t\t\t$templates[ $index ] = $template;\n\t\t\t$output             .= sprintf( '<p><a target=\"_blank\" href=\"%s\">Preview %s</a></p>', admin_url( '?preview_broadcast_in_template=' . $index ), $template['slug'] );\n\t\t}\n\t\tupdate_option( 'rsvpmaker_email_template', $templates );\n\t\t$output .= sprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'edit.php?post_type=rsvpemail&page=rsvpmaker_email_template' ), __( 'Edit', 'rsvpmaker' ) );\n\t\treturn new WP_REST_Response( $output, 200 );\n\t}\n}\n\nclass RSVPMaker_Notification_Templates extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'notification_templates';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn rsvpmaker_verify_nonce();\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$output = '<h2>' . __( 'Updated', 'rsvpmaker' ) . '</h2>';\n\t\tif ( isset( $_POST['ntemp'] ) ) {\n\t\t\t$ntemp = $_POST['ntemp'];\n\t\t\tforeach($ntemp as $index => $data) {\n\t\t\t\t$ntemp[$index]['subject'] = sanitize_text_field($ntemp[$index]['subject']);\n\t\t\t\t$ntemp[$index]['body'] = wp_kses_post($ntemp[$index]['body']);\n\t\t\t}\n\t\t\tif ( ! empty( $_POST['newtemplate']['subject'] ) && ! empty( $_POST['newtemplate_label'] ) ) {\n\t\t\t\t$index = sanitize_text_field($_POST['newtemplate_label']);\n\t\t\t\t$ntemp[ $index ]['subject'] = sanitize_text_field( $_POST['newtemplate']['subject'] );\n\t\t\t\t$ntemp[ $index ]['body']    = wp_kses_post( $_POST['newtemplate']['body'] );\n\t\t\t}\n\t\t\tupdate_option( 'rsvpmaker_notification_templates', stripslashes_deep( $ntemp ) );\n\t\t}\n\t\t$output .= sprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'edit.php?post_type=rsvpemail&page=rsvpmaker_notification_templates' ), __( 'Edit', 'rsvpmaker' ) );\n\t\treturn new WP_REST_Response( $output, 200 );\n\t}\n}\n\nclass RSVPMaker_Details extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'rsvpmaker_details';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn (current_user_can( 'edit_rsvpmakers' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) );\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$output = rsvpmaker_details_post();\n\t\treturn new WP_REST_Response( $output, 200 );\n\t}\n}\n\nclass RSVPMaker_Time_And_Zone extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'time_and_zone/(?P<post_id>[0-9a-z]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\t$date = '';\n\t\tif ( $request['post_id'] == 'nextrsvp' ) {\n\t\t\t$event = get_next_rsvp_on();\n\t\t\tif ( $event ) {\n\t\t\t\t$date = $event->datetime;\n\t\t\t}\n\t\t} elseif ( $request['post_id'] == 'next' ) {\n\t\t\t$event = get_next_rsvpmaker();\n\t\t\tif ( $event ) {\n\t\t\t\t$date = $event->datetime;\n\t\t\t}\n\t\t} elseif ( is_numeric( $request['post_id'] ) ) {\n\t\t\t$date = get_rsvp_date( $request['post_id'] );\n\t\t}\n\n\t\tif ( ! empty( $date ) ) {\n\t\t\t$t = rsvpmaker_strtotime( $date ) * 1000;\n\t\t}\n\t\treturn new WP_REST_Response( $t, 200 );\n\t}\n}\n\nclass RSVPMaker_Events_with_Timezone extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'events_with_timezone';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tglobal $default_tz;\n\t\t$last_tz = '';\n\t\t$events  = array();\n\t\t$list    = get_future_events( array( 'limit' => 10 ) );\n\t\tif ( $list ) {\n\t\t\tforeach ( $list as $event ) {\n\t\t\t\t$timezone = rsvpmaker_get_timezone_string( $event->ID );\n\t\t\t\tif ( $timezone != $last_tz ) {\n\t\t\t\t\tdate_default_timezone_set( $timezone );\n\t\t\t\t\t$last_tz = $timezone;\n\t\t\t\t}\n\t\t\t\t$t        = strtotime( $event->datetime );\n\t\t\t\t$end      = strtotime( $event->enddate );\n\t\t\t\t$events[] = array(\n\t\t\t\t\t'ts'              => $t,\n\t\t\t\t\t'end'             => $end,\n\t\t\t\t\t'timezone_string' => $timezone,\n\t\t\t\t\t'site'            => get_option( 'blogname' ),\n\t\t\t\t\t'post_title'      => $event->post_title,\n\t\t\t\t\t'permalink'       => get_permalink( $event->ID ),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn new WP_REST_Response( $events, 200 );\n\t}\n}\n\nclass RSVPMaker_Flux_Capacitor extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'flux_capacitor';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'POST',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tglobal $default_tz, $rsvp_options, $post;\n\t\t$time   = sanitize_text_field( $_POST['time'] );\n\t\t$end    = sanitize_text_field( $_POST['end'] );\n\t\t$tz     = sanitize_text_field( $_POST['tzstring'] );\n\t\t$format = sanitize_text_field( $_POST['format'] );\n\t\t$timezone_abbrev = sanitize_text_field($_POST['timezone_abbrev']);\n\t\t$post   = get_post( $_POST['post_id'] );\n\t\t$time   = rsvpmaker_strtotime( $time );\n\t\t$s3 = rsvpmaker_date( 'T', $time );\n\t\tif($timezone_abbrev == $s3)\n\t\t\t$times ['content'] = ''; // if city code is different but tz code is same\n\t\telse {\n\t\t\tif ( $end ) {\n\t\t\t\t$end = rsvpmaker_strtotime( $end );\n\t\t\t}\n\t\t\tdate_default_timezone_set( $tz );\n\t\t\t// strip off year\n\t\t\t$rsvp_options['long_date'] = str_replace( ', %Y', '', $rsvp_options['long_date'] );\n\t\t\t$times['content']          = 'Or: ';\n\t\t\tif ( $format == 'time' ) {\n\t\t\t\t$times['content'] .= date( $rsvp_option['time_format'], $time );\n\t\t\t\tif ( $end ) {\n\t\t\t\t\t$times['content'] .= ' to ' . date( 'g:i A T', $end );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$times['content'] .= $day1 = date( $rsvp_options['long_date'], $time );\n\t\t\t\t$times['content'] .= ' ' . date( 'g:i A T', $time );\n\t\t\t\tif ( $end ) {\n\t\t\t\t\t$times['content'] .= ' to ';\n\t\t\t\t\t$day2              = date( $rsvp_options['long_date'], $end );\n\t\t\t\t\tif ( $day2 != $day1 ) {\n\t\t\t\t\t\t$times['content'] .= $day2 . ' ';\n\t\t\t\t\t}\n\t\t\t\t\t$times['content'] .= date( 'g:i A T', $end );\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\t$times['tzoptions'] = wp_timezone_choice( $tz );\n\t\treturn new WP_REST_Response( $times, 200 );\n\t}\n}\n\nclass RSVPMaker_Daily extends WP_REST_Controller {\n\n\tpublic function register_routes() {\n\n\t\t$namespace = 'rsvpmaker/v1';\n\t\t$path      = 'daily/(?P<event>[0-9a-z]+)';\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'/' . $path,\n\t\t\tarray(\n\n\t\t\t\tarray(\n\n\t\t\t\t\t'methods'             => 'GET',\n\n\t\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\n\t\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\n\t\t\t\t),\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn true;\n\t}\n\n\tpublic function get_items( $request ) {\n\t\tglobal $wpdb;\n\t\t$sql = $wpdb->prepare(\"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=%d ORDER BY timestamp\",$request['event']);\n\t\t$results = $wpdb->get_results($sql);\n\t\t$daily_count = [];\n\t\t$count = 0;\n\t\t$wasdate = '';\n\t\t$count = 0;\n\t\tforeach($results as $row) {\n\t\t\t$date = rsvpmaker_date('Y-m-d',rsvpmaker_strtotime($row->timestamp));\n\t\t\tif(isset($daily_count[$date]))\n\t\t\t$daily_count[$date]++;\n\t\t\telse\n\t\t\t$daily_count[$date] = 1;\n\t\t}\n\t\t$return_array = [];\n\t\tforeach($daily_count as $date => $count) {\n\t\t\t$return_array[] = array('date' => $date, 'count' => $count);\n\t\t}\n\t\treturn new WP_REST_Response( $return_array, 200 );\n\t}\n}\n\nadd_action(\n\t'rest_api_init',\n\tfunction () {\n\n\t\t$rsvpmaker_sked_controller = new RSVPMaker_Sked_Controller();\n\n\t\t$rsvpmaker_sked_controller->register_routes();\n\n\t\t$rsvpmaker_by_type_controller = new RSVPMaker_By_Type_Controller();\n\n\t\t$rsvpmaker_by_type_controller->register_routes();\n\n\t\t$rsvpmaker_listing_controller = new RSVPMaker_Listing_Controller();\n\n\t\t$rsvpmaker_listing_controller->register_routes();\n\n\t\t$rsvpmaker_types_controller = new RSVPMaker_Types_Controller();\n\n\t\t$rsvpmaker_types_controller->register_routes();\n\n\t\t$rsvpmaker_authors_controller = new RSVPMaker_Authors_Controller();\n\n\t\t$rsvpmaker_authors_controller->register_routes();\n\n\t\t$rsvpmaker_guestlist_controller = new RSVPMaker_GuestList_Controller();\n\n\t\t$rsvpmaker_guestlist_controller->register_routes();\n\n\t\t$rsvpmaker_meta_controller = new RSVPMaker_ClearDateCache();\n\n\t\t$rsvpmaker_meta_controller->register_routes();\n\n\t\t$stripesuccess = new RSVPMaker_StripeSuccess_Controller();\n\n\t\t$stripesuccess->register_routes();\n\n\t\t$ppsuccess = new RSVPMaker_PaypalSuccess_Controller();\n\n\t\t$ppsuccess->register_routes();\n\n\t\t$rsvpexp = new RSVP_Export();\n\n\t\t$rsvpexp->register_routes();\n\n\t\t$rsvpimp = new RSVP_RunImport();\n\n\t\t$rsvpimp->register_routes();\n\n\t\t$signed_up = new RSVPMaker_Signed_Up();\n\n\t\t$signed_up->register_routes();\n\n\t\t$email_lookup = new RSVPMaker_Email_Lookup();\n\n\t\t$email_lookup->register_routes();\n\n\t\t$sharedt = new RSVPMaker_Shared_Template();\n\n\t\t$sharedt->register_routes();\n\t\t$setup = new RSVPMaker_Setup();\n\t\t$setup->register_routes();\n\t\t$et = new RSVPMaker_Email_Templates();\n\t\t$et->register_routes();\n\t\t$nt = new RSVPMaker_Notification_Templates();\n\t\t$nt->register_routes();\n\t\t$deet = new RSVPMaker_Details();\n\t\t$deet->register_routes();\n\t\t$tz = new RSVPMaker_Time_And_Zone();\n\t\t$tz->register_routes();\n\t\t$tzevents = new RSVPMaker_Events_with_Timezone();\n\t\t$tzevents->register_routes();\n\t\t$flux = new RSVPMaker_Flux_Capacitor();\n\t\t$flux->register_routes();\n\t\t$daily = new RSVPMaker_Daily();\n\t\t$daily->register_routes();\n\t}\n);\n", "<?php\nuse RSVPbyDrewM\\MailChimp\\MailChimp as MailChimpRSVP;\n\n$rsvpmaker_message_type = '';\n\nfunction rsvpmailer($mail, $description = '') {\n\tif(defined('RSVPMAILOFF'))\n\t{\n\t\t$log = sprintf('<p style=\"color:red\">RSVPMaker Email Disabled</p><pre>%s</pre>',var_export($mail,true));\n\t\treturn;\n\t}\n\tif(strpos($mail['to'],'@example.com'))\n\t\treturn; // don't try to send to fake addresses\n\tif(empty($mail['skip_check']))\n\t\t$problem = rsvpmail_is_problem($mail['to']);\n\telse\n\t\t$problem = false;\n\tif($problem && ($rsvpmailer_rule != 'permit') ) {\n\t\t$mail['html'] = '[content omitted]';\n\t\trsvpmaker_debug_log($mail,'rsvpmailer blocked sending to unsubscribed email');\n\t\treturn $mail['to'].' not sent - '.$problem;\n\t}\n\n\t$mail['html'] = rsvpmaker_personalize_email($mail['html'],$mail['to'],$description);\n\tif(isset($mail['text']))\n\t\t$mail['text'] = rsvpmaker_personalize_email($mail['text'],$mail['to'],$description);\n\tif(isset($mail['html']) && strpos($mail['html'],'<style'))\n\t\t$mail['html'] = rsvpmaker_inliner( $mail['html'] );\n\n\tif(isset($mail['subject']))\n\t\t$mail['subject'] = do_shortcode($mail['subject']);\n\n\tif(isset($mail['html']))\n\t{\n\t\t$mail['html'] = do_shortcode($mail['html']);\n\t}\n\tglobal $post, $rsvp_options, $rsvpmaker_message_type;\n\tif(isset($mail['message_type']))\n\t\t$rsvpmaker_message_type = $mail['message_type'];\n\n\t$rsvpmailer_rule = apply_filters('rsvpmailer_rule','',$mail['to'], $rsvpmaker_message_type);\n\tif($rsvpmailer_rule == 'deny') {\n\t\t$mail['html'] = '[content omitted]';\n\t\t$message = $mail['to'].' blocks messages of the type: '.$rsvpmaker_message_type;\n\t\treturn $message;\n\t}\n\t\n\tif(empty($rsvp_options[\"from_always\"]) && !empty($rsvp_options[\"smtp_useremail\"]))\n\t\t$rsvp_options[\"from_always\"] = $rsvp_options[\"smtp_useremail\"];\n\t\n\t$site_url = get_site_url();\n\t$p = explode('//',$site_url);\n\t$via = $p[1];\n\tif(empty($mail['fromname']))\n\t\t$mail['fromname'] = get_bloginfo('name');\n\n\tif(!strpos($mail['fromname'],'(via'))\n\t\t$mail['fromname'] = $mail['fromname'] . ' (via '.$via.')';\n\n\tif(!empty($rsvp_options[\"log_email\"]) && isset($post->ID))\n\t\t{\n\t\t\t$mail['timestamp'] = date('Y-m-d H:i');\n\t\t\tadd_post_meta($post->ID, '_rsvpmaker_email_log',$mail);\n\t\t}\n\t$rsvp_options = apply_filters('rsvp_email_options',$rsvp_options);\n\tif(empty($mail['html']))\n\t$mail['html'] = wpautop($mail['text']);\n\tif(empty($mail['text']))\n\t$mail['text'] = strip_tags($mail['html']);\n\n\tif(!strpos($mail['text'],'rsvpmail_unsubscribe'))\n\t\t$mail['text'] .= \"\\n\\nUnsubscribe from email notifications\\n\".site_url('?rsvpmail_unsubscribe='.$mail['to']);\n\n\tif(!strpos($mail['html'],'/html>'))\n\t\t$mail['html'] = \"<html><body>\\n\".$mail['html'].\"\\n</body></html>\";\t\t\n\tif(!strpos($mail['html'],'rsvpmail_unsubscribe'))\n\t\t$mail['html'] = str_replace('</html>',\"\\n<p>\".sprintf('Unsubscribe from email notifications<br /><a href=\"%s\">%s</a></p>',site_url('?rsvpmail_unsubscribe='.$mail['to']),site_url('?rsvpmail_unsubscribe='.$mail['to'])).'</html>',$mail['html']);\n\t\n\tif(function_exists('rsvpmailer_override'))\n\t\treturn rsvpmailer_override($mail);\n\tif(!empty($rsvp_options['from_always']) && ($rsvp_options['from_always'] != $mail['from']))\n\t{\n\t\tif(empty($mail['replyto']))\n\t\t\t$mail['replyto'] = $mail['from'];\n\t\t$mail['from'] = $rsvp_options['from_always'];\n\t}\n\t\t\n\tif(!isset($rsvp_options[\"smtp\"]) || empty($rsvp_options[\"smtp\"]))\n\t\t{\n\t\t$to = $mail[\"to\"];\n\t\t$subject = $mail[\"subject\"];\n\t\tif(!empty($mail[\"html\"]))\n\t\t\t{\n\t\t\t$mail[\"html\"] = str_replace('*|UNSUB|*',site_url('?rsvpmail_unsubscribe='.$to),$mail[\"html\"]);\n\t\t\t\n\t\t\t\t$body = $mail[\"html\"];\n\t\t\t\t\n\t\t\t\tif(function_exists('set_html_content_type') ) // if using sendgrid plugin\n\t\t\t\t\tadd_filter('wp_mail_content_type', 'set_html_content_type');\n\t\t\t\telse\n\t\t\t\t\t$headers[] = 'Content-Type: text/html; charset=UTF-8';\n\t\t\t}\n\t\telse {\n\t\t\t$body = $mail[\"text\"];\t\t\t\n\t\t}\n\t\t$headers[] = 'From: '.$mail[\"fromname\"]. ' <'.$mail[\"from\"].'>'.\"\\r\\n\";\n\t\tif(!empty($mail[\"replyto\"]))\n\t\t\t$headers[] = 'Reply-To: '.$mail[\"replyto\"] .\"\\r\\n\";\n\t\tif(!empty($mail['attachments'])) {\n\t\t\t$attachments = $mail['attachments'];\n\t\t\tprintf('<p>Attachments: %s</p>',var_export($attachments,true));\n\t\t}\n\t\telse\n\t\t\t$attachments = NULL;\n\t\tif(isset($mail[\"ical\"]))\n\t\t\t{\n\t\t\t$temp = tmpfile();\n\t\t\tfwrite($temp, $mail[\"ical\"]);\n\t\t\t$metaDatas = stream_get_meta_data($temp);\n\t\t\t$tmpFilename = $metaDatas['uri'];\n\t\t\t$icalname = $tmpFilename .'.ics';\n\t\t\trename($tmpFilename,$icalname);\n\t\t\t$attachments[] = $icalname;\n\t\t\t}\n\t\t\t\n\t\twp_mail( $to, $subject, $body, $headers, $attachments );\n\t\tif(function_exists('set_html_content_type') )\n\t\t\tremove_filter('wp_mail_content_type', 'set_html_content_type');\n\t\treturn;\n\t}\n\tglobal $wp_version;//once 5.5 is out of beta, delete 2nd test\n\tif(is_wp_version_compatible('5.5')) {\n\trequire_once ABSPATH . WPINC . '/PHPMailer/PHPMailer.php';\n\trequire_once ABSPATH . WPINC . '/PHPMailer/SMTP.php';\n\trequire_once ABSPATH . WPINC . '/PHPMailer/Exception.php';\n\t$rsvpmail = new PHPMailer\\PHPMailer\\PHPMailer();\t\n\t}\n\telse\n\t{\n\t\trequire_once ABSPATH . WPINC . '/class-phpmailer.php';\n\t\trequire_once ABSPATH . WPINC . '/class-smtp.php';\n\t\t$rsvpmail = new PHPMailer();\t\n\t}\n\t\n\tif(!empty($rsvp_options[\"smtp\"]))\n\t{\n\t\t$rsvpmail->IsSMTP(); // telling the class to use SMTP\n\t\n\tif($rsvp_options[\"smtp\"] == \"gmail\") {\n\t\t$rsvpmail->SMTPAuth   = true;                  // enable SMTP authentication\n\t\t$rsvpmail->SMTPSecure = \"tls\";                 // sets the prefix to the servier\n\t\t$rsvpmail->Host       = \"smtp.gmail.com\";      // sets GMAIL as the SMTP server\n\t\t$rsvpmail->Port       = 587;                   // set the SMTP port for the GMAIL server\n\t}\n\telseif($rsvp_options[\"smtp\"] == \"sendgrid\") {\n\t$rsvpmail->SMTPAuth   = true;                  // enable SMTP authentication\n\t$rsvpmail->Host = 'smtp.sendgrid.net';\n\t$rsvpmail->Port = 587; \n\t}\n\telseif(!empty($rsvp_options[\"smtp\"]) ) {\n\t$rsvpmail->Host = $rsvp_options[\"smtp_server\"]; // SMTP server\n\t$rsvpmail->SMTPAuth=true;\n\tif(isset($rsvp_options[\"smtp_prefix\"]) && $rsvp_options[\"smtp_prefix\"] )\n\t\t$rsvpmail->SMTPSecure = $rsvp_options[\"smtp_prefix\"];                 // sets the prefix to the server\n\t$rsvpmail->Port=$rsvp_options[\"smtp_port\"];\n\t}\n \t\n\t}\n\t\n $rsvpmail->Username= (!empty($rsvp_options[\"smtp_username\"]) ) ? $rsvp_options[\"smtp_username\"] : '';\n $rsvpmail->Password= (!empty($rsvp_options[\"smtp_password\"]) ) ? $rsvp_options[\"smtp_password\"] : '';\n $rsvpmail->CharSet = 'UTF-8';\n $rsvpmail->AddAddress($mail[\"to\"]);\n if(isset($mail[\"cc\"]) )\n\t $rsvpmail->AddCC($mail[\"cc\"]);\nif(isset($_GET['debug']))\n{\n\tif(isset($mail['attachments']))\n\t\techo '<p>Attachments set</p>';\n\telse\n\t\techo '<p>Attachments NOT set</p>';\n}\nif(isset($mail['attachments']) && is_array($mail['attachments']))\n\tforeach($mail['attachments'] as $path) {\n\t\t$rsvpmail->AddAttachment($path);\n\t\tif(isset($_GET['debug']))\n\t\t\tprintf('<p>Trying to add %s</p>',$path);\n\t}\n$site_url = get_site_url();\n$p = explode('//',$site_url);\n$via = \"(via \". $p[1].')';\nif(is_admin() && isset($_GET['debug']))\n\t$rsvpmail->SMTPDebug = 4;\nif(!empty($rsvp_options[\"smtp_useremail\"]))\n \t{\n\t $rsvpmail->SetFrom($rsvp_options[\"smtp_useremail\"], $mail[\"fromname\"]. $via);\n\t $rsvpmail->AddReplyTo($mail[\"from\"], $mail[\"fromname\"]);\n\t}\n else\n\t $rsvpmail->SetFrom($mail[\"from\"], $mail[\"fromname\"]. $via); \n $rsvpmail->ClearReplyTos();\n $rsvpmail->AddReplyTo($mail[\"from\"], $mail[\"fromname\"]);\nif(!empty($mail[\"replyto\"]))\n $rsvpmail->AddReplyTo($mail[\"replyto\"]);\n\nif(!empty($mail[\"bcc\"]) && is_array($mail[\"bcc\"]))\n{\n\t foreach($mail[\"bcc\"] as $bcc)\n\t\t $rsvpmail->AddBCC($bcc);\n}\n\n $rsvpmail->Subject = $mail[\"subject\"];\nif($mail[\"html\"])\n\t{\n\t$rsvpmail->isHTML(true);\n\t$rsvpmail->Body = $mail[\"html\"];\t\n\tif(isset($mail[\"text\"]) && !strpos($mail[\"text\"],'</')) // make sure there's no html in our text part\n\t\t$rsvpmail->AltBody = $mail[\"text\"];\n\telse\n\t{\n\t\t$striphead = preg_replace('/<html.+\\/head>/si','',$mail[\"html\"]);\n\t\t$rsvpmail->AltBody = trim(strip_tags($striphead) );\t\t\n\t\t$rsvpmail->WordWrap = 150;\n\t}\n\t}\n\telse\n\t\t{\n\t\t\t$rsvpmail->Body = $mail[\"text\"];\n\t\t\t$rsvpmail->WordWrap = 150;\n\t\t}\n\n\tif(isset($mail[\"ical\"]))\n\t\t$rsvpmail->Ical = $mail[\"ical\"];\n\t\n\ttry {\n\t\t$rsvpmail->Send();\n\t} catch (phpmailerException $e) {\n\t\techo esc_html($e->errorMessage());\n\t} catch (Exception $e) {\n\t\techo esc_html($e->getMessage()); //Boring error messages from anything else!\n\t}\n\treturn $rsvpmail->ErrorInfo;\n}\n\n\n  // Avoid name collisions.\n  if (!class_exists('RSVPMaker_Email_Options'))\n      : class RSVPMaker_Email_Options\n      {\n          // this variable will hold url to the plugin  \n          var $plugin_url;\n          \n          // name for our options in the DB\n          var $db_option = 'chimp';\n          \n          // Initialize the plugin\n          function __construct()\n          {\n              $this->plugin_url = trailingslashit( WP_PLUGIN_URL.'/'. dirname( plugin_basename(__FILE__) ) );\n\n          }\n          \n          // handle plugin options\n          function get_options()\n          {\n              $email = get_option('admin_email');\n\t\t\t  // default values\n              $options = array(\n\t\t\t  'email-from' => $email\n\t\t\t  ,'email-name' => get_bloginfo('name')\n\t\t\t  ,'reply-to' => $email\n\t\t\t  ,'chimp-key' => ''\n\t\t\t  ,'chimp-list' => ''\n\t\t\t  ,'mailing_address' => ''\n\t\t\t  ,'chimp_add_new_users' => ''\n\t\t\t  ,'company' => ''\n\t\t\t  ,\"add_notify\" => $email\n\t\t\t  );\n              \n              // get saved options\n              $saved = get_option($this->db_option);\n              \n              // assign them\n              if (is_array($saved)) {\n                  foreach ($saved as $key => $option)\n                      $options[$key] = $option;\n              }\n              \n              // update the options if necessary\n              if ($saved != $options)\n                  update_option($this->db_option, $options);\n              \n              //return the options  \n              return $options;\n          }\n          \n          // Set up everything\n          function install()\n          {\n              // set default options\n              $this->get_options();\n          }\n          \n          // handle the options page\n          function handle_options()\n          {\n\t\t\tif(!empty($_POST['rsvpelist'])) {\n\t\t\t\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t\t\t\tdie('data error');\n\t\t\t}\n\n              $options = $this->get_options();\n              \n              if (isset($_POST[\"emailsubmitted\"])) {\n                 \t\t\n\t\t\t\t  //$options = array();\n\t\t\t\t  if(is_array($options))\n                  foreach ($options as $name => $value)\n\t\t\t\t  \t{\n\t\t\t\t\tif(isset($_POST[$name]))\n\t\t\t\t\t$options[$name] = sanitize_text_field($_POST[$name]);\n\t\t\t\t  \t}\n\t\t\t\t  if(empty($_POST['chimp_add_new_users']))\n\t\t\t\t\t $options['chimp_add_new_users'] = false;\n                  update_option($this->db_option, $options);\n\n\t\t\t\tif(isset($_POST[\"add_cap\"]))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach($_POST[\"add_cap\"] as $role => $type)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$role = sanitize_text_field($role);\n\t\t\t\t\t\t\t\tif($type == 'publish')\n\t\t\t\t\t\t\t\t\tadd_rsvpemail_caps_role($role, true);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tadd_rsvpemail_caps_role($role);\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\tif(isset($_POST[\"remove_cap\"]))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach($_POST[\"remove_cap\"] as $role => $type)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tremove_rsvpemail_caps_role(sanitize_text_field($role));\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n                  \n                  echo '<div class=\"updated fade\"><p>'.__('Plugin settings saved - mailing list.','rsvpmaker').'</p></div>';\n              }\n              \n              // URL for form submit, equals our current page\n              $action_url = admin_url('options-general.php?page=rsvpmaker-admin.php');\n; ?>\n<div class=\"wrap\" style=\"max-width:950px !important;\">\n\t<h3><?php esc_html_e('RSVPMaker Email List','rsvpmaker');?></h3>\n\t<p><?php esc_html_e(\"These settings are related to integration with the MailChimp broadcast email service, as well as RSVPMaker's own functions for broadcasting email to website members or people who have registered for your events.\",'rsvpmaker');?></p>\t\t\t\n\t<p><?php echo __(\"<strong>New for 2021</strong>: scroll down to see options for MailPoet integration\",'rsvpmaker');?></p>\t\t\t\n\t<div id=\"poststuff\" style=\"margin-top:10px;\">\n\t <div id=\"mainblock\" style=\"width:710px\">\n\t<div class=\"dbx-content\">\n\t\t \t<form name=\"EmailOptions\" action=\"<?php echo esc_attr($action_url); ?>\" method=\"post\">\n\t\t\t <?php rsvpmaker_nonce(); ?>\n<?php\nif(isset($_REQUEST['tab']) && $_REQUEST['tab'] == 'email')\n{\n?>\n<input type=\"hidden\" id=\"activetab\" value=\"email\" />\n<?php\t\n}\n?>\n<input type=\"hidden\" name=\"tab\" value=\"email\">\n\t\t\t\t\t<input type=\"hidden\" name=\"emailsubmitted\" value=\"1\" /> \n\t\t\t\t\t\n                    <p><?php esc_html_e('Email From','rsvpmaker');?>: \n                      <input type=\"text\" name=\"email-from\" id=\"email-from\" value=\"<?php echo esc_attr($options[\"email-from\"]); ?>\" />\n                    </p>\n                    <p><?php esc_html_e('Email Name','rsvpmaker');?>: \n                      <input type=\"text\" name=\"email-name\" id=\"email-name\" value=\"<?php echo esc_attr($options[\"email-name\"]); ?>\" />\n                    </p>\n                    <p><?php esc_html_e('MailChimp API-Key','rsvpmaker');?>: \n                      <input type=\"text\" name=\"chimp-key\" id=\"chimp-key\" value=\"<?php echo esc_attr($options[\"chimp-key\"]); ?>\" />\n                    <br /><a target=\"_blank\" href=\"http://kb.mailchimp.com/integrations/api-integrations/about-api-keys\"><?php esc_html_e('Get an API key for MailChimp','rsvpmaker');?></a>\n                    </p>\n                    <p><?php esc_html_e('Default List','rsvpmaker');?>: \n                      <select name=\"chimp-list\" id=\"chimp-list\" ><?php echo mailchimp_list_dropdown($options[\"chimp-key\"], $options[\"chimp-list\"]); ?></select>\n                    </p>\n                    <p><?php esc_html_e('Attempt to Subscribe New WordPress user emails','rsvpmaker');?>: \n                      <input type=\"checkbox\" name=\"chimp_add_new_users\" id=\"chimp_add_new_users\" value=\"1\" <?php echo ($options[\"chimp_add_new_users\"]) ? ' checked=\"checked\" ' : ''; ?> />\n                    </p>\n                    <p><?php esc_html_e('Email to notify on API listSubscribe success/failure (optional)','rsvpmaker');?>: \n                      <input type=\"text\" name=\"add_notify\" id=\"add_notify\" value=\"<?php echo esc_attr($options[\"add_notify\"]); ?>\" />\n                    </p>\n\n                    <p><?php esc_html_e('Mailing Address','rsvpmaker');?>: \n                      <input type=\"text\" name=\"mailing_address\" id=\"mailing_address\" value=\"<?php echo esc_attr($options[\"mailing_address\"]); ?>\" />\n                    </p>\n                    <p><?php esc_html_e('Company','rsvpmaker');?>: \n                      <input type=\"text\" name=\"company\" id=\"company\" value=\"<?php echo esc_attr($options[\"company\"]); ?>\" />\n                    </p>\n<h3><?php esc_html_e('Who Can Publish and Send Email?','rsvpmaker');?></h3>\n<p><?php esc_html_e('By default, only the administrator has this right, but you can add it to other roles.','rsvpmaker');?></p>\n<?php $allroles = get_editable_roles(  ); \nforeach($allroles as $slug => $properties)\n{\nif($slug == 'administrator')\n\tcontinue;\n\techo esc_html($properties[\"name\"]);\n\tif(isset($properties[\"capabilities\"]['publish_rsvpemails']))\n\t\tprintf(' %s <input type=\"checkbox\" name=\"remove_cap[%s]\" value=\"1\" /> %s <br />',__('can publish and send broadcasts','rsvpmaker'),$slug,__('Remove','rsvpmaker'));\n\telseif(isset($properties[\"capabilities\"]['edit_rsvpemails']))\n\t\tprintf(' %s <input type=\"checkbox\" name=\"remove_cap[%s]\" value=\"1\" /> %s <br />',__('can edit draft emails','rsvpmaker'),$slug,__('Remove','rsvpmaker'));\n\telse\n\t\tprintf(' %s <input type=\"radio\" name=\"add_cap[%s]\" value=\"edit\" /> %s <input type=\"radio\" name=\"add_cap[%s]\" value=\"publish\" /> %s <br />',__('grant right to','rsvpmaker'),$slug,__('Edit','rsvpmaker'),$slug,__('Publish and Send','rsvpmaker'));\n}\n?>\n\n              <div class=\"submit\"><input type=\"submit\" name=\"Submit\" value=\"<?php esc_html_e('Update','rsvpmaker');?>\" /></div>\n\t\t\t</form>\n<p>See also: <a target=\"_blank\" href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_email_template'); ?>\">Email Template</a></p>\n\n\t\t</div>\n\t\t\t\t\n\t </div>\n\n\t</div>\n</div>\n\n<div id=\"mailpoet\">\n<h2>MailPoet Integration</h2>\n<p>MailPoet is a WordPress plugin and web service for sending email newsletters and other mass email, with the permission of the recipients.</p>\n<p>You can add RSVPMaker events or event listings to the content of a MailPoet newsletter using a modified versions of the RSVPMaker Shortcodes (see the <a href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=email_get_content'); ?>\">Content for Email</a> screen and the <a href=\"https://rsvpmaker.com/knowledge-base/shortcodes/\" target=\"_blank\">RSVPMaker Shortcodes Documentation</a>).</p>\n<?php\n\tif (class_exists(\\MailPoet\\API\\API::class)) {\n\t\t$mailpoet_api = \\MailPoet\\API\\API::MP('v1');\n\t\t$lists = $mailpoet_api->getLists();\n\t\tif(isset($_POST['rsvpmaker_mailpoet_list'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t{\n\t\t\t$listok = (int) $_POST['rsvpmaker_mailpoet_list'];\n\t\t\tupdate_option('rsvpmaker_mailpoet_list',$listok);\n\t\t\techo '<div class=\"notice notice-success\"><p>MailPoet List Set</p></div>';\n\t\t}\n\t\telse\n\t\t\t$listok = get_option('rsvpmaker_mailpoet_list');\n\t\t$o = '<option value=\"\">Choose List</option>';\n\t\tforeach($lists as $list) {\n\t\t\t$s = ($list['id'] == $listok) ? ' selected=\"selected\" ' : '';\n\t\t\t$o .= sprintf('<option value=\"%d\" %s>%s</option>',$list['id'], $s, $list['name']);\n\t\t}\n\tprintf('<form method=\"post\" action=\"%s\"><p>List to use with \"Add me to your email list\" checkbox <select name=\"rsvpmaker_mailpoet_list\">%s</select><button>Update</button></p>%s</form>',site_url(sanitize_text_field($_SERVER['REQUEST_URI'])),$o,rsvpmaker_nonce());\n\t}\n\telse\n\t\techo '<p>MailPoet not enabled</p>';\n?>\n<h2>Add to Email Checkbox</h2>\n<p>You can include an \"Add me to your email list\" checkbox on your RSVP forms to enlist people when they sign up for your events. This works with both MailChimp and MailPoet.</p>\n<p><image src=\"<?php echo plugins_url('rsvpmaker/images/add_to_email_block.png'); ?>\" width=\"600\" height=\"348\">\n<br />Adding the Mailing List Checkbox block</p>\n<p><image src=\"<?php echo plugins_url('rsvpmaker/images/add_to_email_checkbox.png'); ?>\" width=\"468\" height=\"578\">\n<br />Checkbox as it appears on the form</p>\n</div>\n\n<?php              \n          }\n      }\n  \n  else\n      : exit(\"Class already declared!\");\n  endif;\n  \n  // create new instance of the class\n  $RSVPMaker_Email_Options = new RSVPMaker_Email_Options();\n  global $RSVPMaker_Email_Options;\n  if (isset($RSVPMaker_Email_Options)) {\n      // register the activation function by passing the reference to our instance\n      register_activation_hook(__FILE__, array(&$RSVPMaker_Email_Options, 'install'));\n  }\n\nfunction RSVPMaker_Chimp_Add($email, $merge_vars, $status = 'pending') {\n$chimp_options = get_option('chimp');\nif(empty($chimp_options) || empty($chimp_options[\"chimp-key\"]))\n\treturn;\n\n$apikey = $chimp_options[\"chimp-key\"];\n$listId = $chimp_options[\"chimp-list\"]; \n\ntry {\n\t$MailChimp = new MailChimpRSVP($apikey);\n} catch (Exception $e) {\n\t\twp_mail($chimp_options[\"add_notify\"],\"RSVPMaker_Chimp_Add error for $email \",$e->getMessage() .' email'.$email.' '.var_export($merge_vars,true));\n    return;\n}\n\n$MailChimp = new MailChimpRSVP($apikey);\n\n$result = $MailChimp->post(\"lists/$listId/members\", array(\n                'email_address' => $email,\n                'merge_fields'        => $merge_vars,\n\t\t\t\t'status' => $status));\n\n\tif(!empty($chimp_options[\"add_notify\"]))\n\t{\n\t\t if($MailChimp->success() ) {\n\t\t\twp_mail($chimp_options[\"add_notify\"],\"RSVPMaker_Chimp_Add invite sent to $email \",var_export($merge_vars, true));\n\t\t}\n\t\telse  {\n\t\t\t// factor out already on list?\n\t\t\twp_mail($chimp_options[\"add_notify\"],\"RSVPMaker_Chimp_Add error for $email \",$MailChimp->getLastError());\n\t\treturn $MailChimp->getLastError();\n\t\t}\n\t}\n}\n\nfunction RSVPMaker_register_chimpmail($user_id) {\n$chimp_options = get_option('chimp');\n//attempt to add people who register with website, if specified on user form\nif(empty($chimp_options[\"chimp_add_new_users\"]))\n\treturn;\n$new_user = get_userdata($user_id);\n$email = $new_user->user_email;\n$merge_vars[\"FNAME\"] = $new_user->first_name;\n$merge_vars[\"LNAME\"] = $new_user->last_name;\nRSVPMaker_Chimp_Add($email, $merge_vars);\n}\n\nadd_filter( 'cron_schedules', 'rsvpmaker_add_weekly_schedule' ); \nfunction rsvpmaker_add_weekly_schedule( $schedules ) {\n  $schedules['weekly'] = array(\n    'interval' => 7 * 24 * 60 * 60, //7 days * 24 hours * 60 minutes * 60 seconds\n    'display' => __( 'Once Weekly', 'rsvpmaker' )\n  );\n  return $schedules;\n}\n\nfunction rsvpmaker_next_scheduled( $post_id, $returnint = false ) {\n\tglobal $rsvp_options;\n\tglobal $rsvpnext_time;\n\tif($returnint && !empty($rsvpnext_time[$post_id]))\n\t\treturn $rsvpnext_time[$post_id];\n\t//\n    $crons = _get_cron_array();\n    if ( empty($crons) )\n        return false;\n\t$msg = '';\n    foreach ( $crons as $timestamp => $cron ) {\n\t\tforeach($cron as $hook => $properties)\n\t\t\t{\n\t\t\tif($hook == 'rsvpmaker_cron_email')\n\t\t\t\tforeach($properties as $key => $property_array)\n\t\t\t\t\t{\n\t\t\t\t\tif(in_array($post_id,$property_array[\"args\"]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t$schedule = (empty($property_array[\"schedule\"])) ? '' : $property_array[\"schedule\"];\n\t\t\t\t\t\t$rsvpnext_time[$post_id] = $timestamp;\n\t\t\t\t\t\tif($returnint)\n\t\t\t\t\t\t\treturn $timestamp;\n\t\t\t\t\t\treturn utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options[\"time_format\"],$timestamp)).' '.$schedule;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n    }\n    return false;\n}\n\nfunction rsvpmaker_scheduled_email_list(  ) {\nglobal $wpdb;\nglobal $rsvp_options;\nglobal $post;\n?>\n<div class=\"wrap\"> \n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n<h2><?php esc_html_e('Scheduled Email','rsvpmaker'); ?>  </h2> \n<p><?php esc_html_e('Use this screen to create or edit a schedule for sending your email at a specific date and time or on a recurring schedule.','rsvpmaker'); ?></p>\n<?php\n\n\tif(isset($_REQUEST['post_id']))\n\t{\n\t\t$post = get_post((int) $_REQUEST['post_id']);\n\t\tprintf('<h3>Email Post: %s</h3><p><a href=\"post.php?action=edit&post=%s\">Edit Post</a> | <a href=\"%s\">View Post</a></p>',esc_html($post->post_title),esc_attr($post->ID),get_permalink($post->ID));\n\t\tprintf('<form action=\"%s\" method=\"post\">',admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&post_id=').$post->ID);\n\t\techo '<input type=\"hidden\" name=\"post_id\" value=\"'.$post->ID.'\" />';\n\t\tRSVPMaker_draw_blastoptions();\n\t\trsvpmaker_nonce();\n\t\techo '<button>Save</button></form>';\n\t}\n\telse {\n?>\n<form method=\"get\" action=\"edit.php\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpemail\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_scheduled_email_list\" /><h3><?php esc_html_e('Choose a RSVP Mailer Post','rsvpmaker'); ?></h3>\n\t<select name=\"post_id\"><?php\n$sql = \"SELECT ID, post_title FROM $wpdb->posts WHERE post_type='rsvpemail' AND (post_status='publish' OR post_status='draft') ORDER BY ID DESC \";\n$results = $wpdb->get_results($sql);\nif(is_array($results))\nforeach($results as $row)\n{\n\tprintf('<option value=\"%d\">%s</option>',esc_attr($row->ID),esc_html($row->post_title));\n}\n\t\t  ?></select>\n<button>Get</button>\n</form>\n<?php\n\t}\n\n\tif(isset($_GET['cancel'])) {\n\t\t$args[] = intval($_GET['cancel']);\n\t\t$args[] = intval($_GET['user_id']);\n\t\t$timestamp = intval($_GET['timestamp']);\n\t\twp_unschedule_event($timestamp,'rsvpmailer_delayed_send',$args);\n\t}\n\t\n    $crons = _get_cron_array();\n    if ( empty($crons) )\n        esc_html_e('None','rsvpmaker');\n\telse\n\t{\n\tprintf('<h3>%s</h3>',__('Scheduled','rsvpmaker'));\n\tprintf('<table  class=\"wp-list-table widefat fixed posts\" cellspacing=\"0\"><thead><tr><th>%s</th><th>%s</th></tr></thead><tbody>',__('Title','rsvpmaker'),__('Schedule','rsvpmaker'));\n    foreach ( $crons as $timestamp => $cron ) {\n\t\tforeach($cron as $hook => $properties)\n\t\t\t{\n\t\t\tif($hook == 'rsvpmaker_cron_email') {\n\t\t\t\tforeach($properties as $key => $property_array)\n\t\t\t\t\t{\n\t\t\t\t\t////print_r($property_array);\n\t\t\t\t\t$post_id = array_shift($property_array[\"args\"]);\n\t\t\t\t\t$post = get_post($post_id);\n\t\t\t\t\tif(!empty($post))\n\t\t\t\t\t\t{\n\t\t\t\t\t\tprintf('<tr><td>%s <br /><a href=\"%s\">%s</a> | <a href=\"%s\">%s</a></td><td>',$post->post_title,admin_url('post.php?post='.$post_id.'&action=edit'),__('Edit Post','rsvpmaker'),admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&post_id='.$post_id),__('Schedule Options','rsvpmaker'));\n\t\t\t\t\t\t$schedule = (empty($property_array[\"schedule\"])) ? '' : $property_array[\"schedule\"];\n\t\t\t\t\t\t\n\t\t\t\t\t\techo utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options[\"time_format\"],$timestamp)).' '.$schedule;\n\t\t\t\t\t\techo '</td></tr>';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($hook == 'rsvpmailer_delayed_send') {\n\t\t\t\t\t//wp_schedule_single_event( $t, 'rsvpmailer_delayed_send', array($post->ID, $current_user->ID));\n\t\t\t\t\tforeach($properties as $key => $property_array)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t////print_r($property_array);\n\t\t\t\t\t\t$post_id = $property_array[\"args\"][0];\n\t\t\t\t\t\t$user_id = $property_array[\"args\"][1];\n\t\t\t\t\t\t$post = get_post($post_id);\n\t\t\t\t\t\tif(!empty($post))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintf('<tr><td>%s (%s)<br /><a href=\"%s\">%s</a> | <a href=\"%s\">%s</a></td><td>',$post->post_title,__('Delayed Send','rsvpmaker'),admin_url('post.php?post='.$post_id.'&action=edit'),__('Edit Post','rsvpmaker'),admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&timestamp='.$timestamp.'&cancel='.$post_id.'&user_id='.$user_id),__('Cancel','rsvpmaker'));\n\t\t\t\t\t\t\t$schedule = (empty($property_array[\"schedule\"])) ? '' : $property_array[\"schedule\"];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\techo utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$rsvp_options[\"time_format\"],$timestamp)).' '.$schedule;\n\t\t\t\t\t\t\techo '</td></tr>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n    } // end cron loop\n\techo '</table>';\n\t}\n?>\n<h3><?php esc_html_e('Shortcodes for Scheduled Email Newsletters','rsvpmaker');?></h3>\n<p><?php esc_html_e('Shortcodes you can include with scheduled email include [rsvpmaker_upcoming] (which should be used without the calendar grid) and these others, intended specifically for newsletter style messages. The attributes are optional and shown with the default values.','rsvpmaker');?></p>\n<p>[rsvpmaker_recent_blog_posts weeks=&quot;1&quot;] (<?php esc_html_e('shows blog posts published within the timeframe, default 1 week','rsvpmaker');?>)</p>\n<p>[rsvpmaker_looking_ahead days=&quot;30&quot; limit=&quot;10&quot;] (<?php esc_html_e('include after rsvpmaker_upcoming for a linked listing of just the headlines and dates of events farther out on the schedule','rsvpmaker');?>)</p>\n<?php\n}\n\nfunction cron_schedule_options() {\nglobal $post, $wpdb, $rsvp_options;\n$event_timestamp = (int) get_post_meta($post->ID,'event_timestamp',true);\n$args = array($post->ID);\n$cron = get_post_meta($post->ID,'rsvpmaker_cron_email',true);\n$notekey = get_rsvp_notekey();\n$chimp_options = get_option('chimp');\n\n$ts = rsvpmaker_next_scheduled($post->ID);\nif(empty($ts))\n\t{\n\techo '<p>Next broadcast: NOT SET</p>';\n\t$timestamp = rsvpmaker_strtotime('+1 hour');\n\t$day = (empty($cron[\"cron_active\"])) ? (int) date('w',$timestamp) : $cron[\"cronday\"];\n\t$hour = (empty($cron[\"cron_active\"])) ? (int) date('G',$timestamp)  : $cron[\"cronhour\"];\n\t}\nelse\n\t{\n\tprintf('<p>Next broadcast: %s</p>',$ts);\n\t$ts = rsvpmaker_next_scheduled($post->ID, true);//get the integer value\n\t$day = date('w',$ts);\n\t$hour = date('G',$ts);\n\t}\n?>\n<p><?php if($chimp_options[\"chimp-key\"]) { ?> <input type=\"checkbox\" name=\"cron_mailchimp\" value=\"1\"  <?php if(!empty($cron[\"cron_mailchimp\"])) echo 'checked=\"checked\"' ?> > <?php echo __('Send to MailChimp List','rsvpmaker'); } ?> <input type=\"checkbox\" name=\"cron_members\" value=\"1\"  <?php if(!empty($cron[\"cron_members\"])) echo 'checked=\"checked\"' ?> > <?php echo __('Send to Website Members','rsvpmaker');?><br />\n<?php echo __('Send to This Address','rsvpmaker');?>: <input type=\"text\" name=\"cron_to\" value=\"<?php if(!empty($cron['cron_to'])) echo esc_attr($cron['cron_to']); ?>\" />\n</p>\n<p><input type=\"radio\" name=\"cron_active\" value=\"1\" <?php if(!empty($cron[\"cron_active\"]) && ($cron['cron_active']) == '1') echo 'checked=\"checked\"' ?> /> <?php echo __('Create schedule relative to this day/time','rsvpmaker');?>: <select name=\"cronday\">\n<?php\n$days = array(__('Sunday','rsvpmaker'),__('Monday','rsvpmaker'),__('Tuesday','rsvpmaker'),__('Wednesday','rsvpmaker'),__('Thursday','rsvpmaker'),__('Friday','rsvpmaker'),__('Saturday','rsvpmaker'));\nforeach($days as $index => $daytext)\n\t{\n\t$selected = ($index == $day) ? ' selected=\"selected\" ' : '';\n\tprintf('<option  value=\"%s\" %s>%s</option>',$index,$selected,$daytext);\n\t}\n?>\n</select>\n <select name=\"cronhour\"> \n<?php\nfor($i=0; $i < 24; $i++)\n\t{\n\t$selected = ($i == $hour) ? ' selected=\"selected\" ' : '';\n\t$padded = ($i < 10) ? '0'.$i : $i;\n\tif($i == 0)\n\t\t$twelvehour = \"12 a.m.\";\n\telseif($i == 12)\n\t\t$twelvehour = \"12 p.m.\";\n\telseif($i > 12)\n\t\t$twelvehour = ($i - 12) .\" p.m.\";\n\telse\t\t\n\t\t$twelvehour = $i.\" a.m.\";\n\n\tprintf('<option  value=\"%s\" %s>%s / %s</option>',$padded,$selected,$twelvehour,$padded);\n\t}\n?>\n</select>\n<?php esc_html_e('Recurrence','rsvpmaker');?> <select name=\"cronrecur\"><option value=\"\"><?php echo __('None','rsvpmaker');?></option>\n<?php\n$sked_meta = (empty($cron[\"cronrecur\"])) ? ''  : $cron[\"cronrecur\"];\n$schedules = array('weekly','daily');\nforeach ($schedules as $sked)\n\t{\n\t$selected = ($sked == $sked_meta) ? ' selected=\"selected\" ' : '';\n\tprintf('<option  value=\"%s\" %s>%s</option>',esc_attr($sked),$selected,esc_html($sked));\n\t}\n?>\n</select>\n</p>\n\n<?php\nif($event_timestamp)\n{\n\t$evopt = '';\n\t$i = 1;\n\t$limit = 24 * 5;\n\t$days = 0;\n\t$dtext = '';\n\twhile($i <= $limit)\n\t{\n\t\tif($i < 13)\n\t\t\t$i++;\n\t\telseif($i == 13)\n\t\t\t{\n\t\t\t\t$i = 24;\n\t\t\t\t$days = 1;\n\t\t\t\t$dtext = ' (1 day before)';\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t\t$i += 24;\n\t\t\t\t$days++;\n\t\t\t\t$dtext = ' ('.$days .' days before)';\n\t\t\t}\n\t\t$deduct = $i * 60 * 60;\n\t\t$reminder = $event_timestamp - $deduct;\n\t\t$s = ($reminder == $ts) ? ' selected=\"selected\" ' : '';\n\t\t\t\n\t\t$evopt .= '<option value=\"'.esc_attr($reminder).'\"'.$s.'>'.rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'],$reminder).$dtext.'</option>';\n\t}\n\t$checked = (!empty($cron[\"cron_active\"]) && ($cron[\"cron_active\"]) == \"relative\") ? 'checked=\"checked\"' : '';\nprintf('<p><input type=\"radio\" name=\"cron_active\" value=\"relative\" '.$checked.' /> Set reminder relative to event %s<br /><select name=\"cron_relative\">%s</select></p>',rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'],$event_timestamp),$evopt);\n}\n$checked = (!empty($cron[\"cron_active\"]) && ($cron[\"cron_active\"]) == \"rsvpmaker_strtotime\") ? 'checked=\"checked\"' : '';\n$timestring = ($ts) ? date('Y-m-d H:i:s',$ts) : date('Y-m-d H:00:00',rsvpmaker_strtotime('+ 1 hour'));\n?>\n<p><input type=\"radio\" name=\"cron_active\" value=\"rsvpmaker_strtotime\" <?php echo $checked; ?> /> Custom date time string <input type=\"text\" name=\"cron_rsvpmaker_strtotime\" value=\"<?php echo esc_attr($timestring); ?>\" /></p>\n<p><input type=\"radio\" name=\"cron_active\" value=\"clear\" /> Clear schedule</p>\n\n<p>\n<?php\n$preview = (!empty($cron[\"cron_preview\"]) ) ? (int) $cron[\"cron_preview\"] : 0;\n$preview_options = '';\nfor($i = 0; $i < 25; $i++)\n\t{\n\t$s = ($i == $preview) ? ' selected=\"selected\"' : '';\n\t$label = ($i) ? $i.' hours before' : 'none';\n\t$preview_options .= sprintf('<option value=\"%d\" %s>%s</option>',$i,$s,$label);\n\t}\n?>\n<?php esc_html_e('Preview','rsvpmaker');?> <select name=\"cron_preview\"><?php echo $preview_options; ?></select>\n</p>\n\n<p>\n<?php\n$condition = (!empty($cron[\"cron_condition\"]) ) ? $cron[\"cron_condition\"] : 'none';\n$blog_options = $condition_options = '';\n$conditions = array('none' => __('none','rsvpmaker'),'events' => __('Future events','rsvpmaker'),'posts' => __('Recent posts','rsvpmaker'),'and' => __('Both events and posts','rsvpmaker'),'or' => __('Either events or posts','rsvpmaker'));\nforeach($conditions as $slug => $text)\n\t{\n\t$s = ($slug == $condition) ? ' selected=\"selected\"' : '';\n\t$condition_options .= sprintf('<option value=\"%s\" %s>%s</option>',$slug,$s,$text);\n\t}\n?>\n<?php esc_html_e('Test for','rsvpmaker');?>: <select name=\"cron_condition\"><?php echo $condition_options; ?></select>\n<br /><em><?php esc_html_e('Broadcast will not be sent if it does not meet this test.','rsvpmaker');?></em>\n</p>\n<?php\n\t\n$chosen = (int) get_post_meta($post->ID,$notekey,true);\n$editorsnote[\"add_to_head\"] = $editorsnote[\"note\"] = '';\n\n$recent = $wpdb->get_results(\"SELECT ID, post_title, post_status FROM $wpdb->posts WHERE post_type='post' AND (post_status='publish' OR post_status='draft') ORDER BY ID DESC LIMIT 0,20\");\nif(is_array($recent))\nforeach($recent as $blog)\n\t{\n\t$s = ($blog->ID == $chosen) ? ' selected=\"selected\"' : '';\n\tif($blog->ID == $chosen)\n\t\t$chosentitle = $blog->post_title;\n\t$title = ($blog->post_status == 'draft') ? $blog->post_title. ' (draft)' : $blog->post_title;\n\t$blog_options .= sprintf('<option value=\"%d\" %s>%s</option>',esc_attr($blog->ID),$s,esc_html($title));\n\t}\n\nif($chosen)\n{\n\t$blog = get_post($chosen);\n\t$chosentitle = $blog->post_title;\n\t$blog_options .= sprintf('<option value=\"%d\" selected=\"selected\">%s</option><option value=\"\">(Clear Selection)</option>',esc_attr($blog->ID),esc_html($blog->post_title));\n\tprintf('<p>The current editor\\'s note is based on the blog post <strong>%s</strong>. <a href=\"%s\">(Edit)</a></p>',esc_html($chosentitle),admin_url('post.php?action=edit&post='.(int)$chosen));\n\techo \"<p>notekey $notekey</p>\";\n}\n?>\n<h3 id=\"editorsnote\"><?php esc_html_e(\"Add Editor's Note for\",'rsvpmaker'); if(empty($stamp)) echo ' Next broadcast'; else echo ' '.$ts;?></h3>\n<input type=\"hidden\" name=\"notekey\" value=\"<?php echo esc_attr($notekey); ?>\">\n\n<p><?php esc_html_e(\"A blog post, either public or draft, can be featured as the editor's note at the top of your next email newsletter broadcast. The content of the post title will be added to the end of the email subject line, and the content of the post (up to the more tag, if included) will be included in the body of your email. There are two ways to add an Editor's Note blog post.\",'rsvpmaker');?></p>\n\n<p><input type=\"radio\" name=\"status\" value=\"\" checked=\"checked\" /> <strong><?php esc_html_e('Pick a blog post to feature','rsvpmaker');?>:</strong> <select name=\"chosen\"><option value=\"\"><?php esc_html_e('Select Blog Post','rsvpmaker');?></option><?php echo $blog_options; ?></select></p>\n\n\t<p><input type=\"radio\" name=\"status\" value=\"draft\" /> <strong>Create a draft</strong> based on the headline and message below <br /><input type=\"radio\" name=\"status\" value=\"publish\" /> <strong>Create and publish</strong> blog based on the headline and message below</strong><br /> <em>(<?php esc_html_e('This post will be used as the editors note at the top of your broadcast. Making it public on the blog is optional.','rsvpmaker');?>)</p>\n\n<p><?php esc_html_e('Title/Subject','rsvpmaker');?>: <input type=\"text\" name=\"notesubject\" value=\"\" /></p>\n<p>Message:<br />\n<textarea cols=\"100\" rows=\"5\" name=\"notebody\"></textarea></p>\n\n<?php\n\n}\n\nfunction RSVPMaker_draw_blastoptions() {\nglobal $post;\n$chimp_options = get_option('chimp');\nif(empty($chimp_options[\"email-from\"]))\n\t{\n\tprintf('<p>%s: <a href=\"%s\">%s</a></p>',__('You must fill in the RSVP Mailer settings before first use','rsvpmaker'),admin_url('options-general.php?page=rsvpmaker-email.php'),__('Settings','rsvpmaker'));\n\treturn;\n\t}\nif(empty($_GET[\"post_id\"]))\n\treturn;\n//$post = get_post($_GET[\"post_id\"]);\n$scheduled_email = get_post_meta($post->ID,'scheduled_email',true);\nif(empty($scheduled_email))\n\t$scheduled_email = array();\nforeach($chimp_options as $label => $value)\n{\n\tif(empty($scheduled_email[$label]))\n\t\t$scheduled_email[$label] = $value;\n}\n\t\nif(empty($scheduled_email['preview_to']))\n\t$scheduled_email['preview_to'] = $scheduled_email['email-from'];\nif(empty($scheduled_email['template']))\n\t$scheduled_email['template'] = '';\n\t\n$permalink = get_permalink($post->ID);\n$template = get_rsvpmaker_email_template();\n?>\n<table>\n<tr><td><?php esc_html_e('From Name','rsvpmaker');?>:</td><td><input type=\"text\"  size=\"80\" name=\"scheduled_email[email-name]\" value=\"<?php echo esc_attr($scheduled_email[\"email-name\"]); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('From Email','rsvpmaker');?>:</td><td><input type=\"text\" size=\"80\"  name=\"scheduled_email[email-from]\" value=\"<?php echo esc_attr($scheduled_email[\"email-from\"]); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('Preview To','rsvpmaker');?>:</td><td><input type=\"text\" size=\"80\" name=\"scheduled_email[preview_to]\" value=\"<?php echo esc_attr($scheduled_email['preview_to']); ?>\" />\n</td></tr>\n</table>\n\n<p><?php esc_html_e('MailChimp List','rsvpmaker');?> <select name=\"scheduled_email[list]\">\n<?php\n$chosen = (isset($scheduled_email[\"list\"])) ? $scheduled_email[\"list\"] : $chimp_options[\"chimp-list\"];\necho mailchimp_list_dropdown($chimp_options[\"chimp-key\"], $chosen);\n?>\n</select></p>\n\n<?php\nif(current_user_can('publish_rsvpemails'))\n\tcron_schedule_options();\n}\n\nfunction RSVPMaker_email_notice () {\nglobal $post;\n?>\n\t<div><h3>Email Editor</h3><p>Use the WordPress editor to compose the body of your message, with the post title as your subject line. <a href=\"<?php echo get_permalink($post->ID); ?>\">View Post</a> will display your content in an email template, with a user interface for addressing options.</p>\n<p>See also <a href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_scheduled_email_list&post_id=').esc_attr($post->ID); ?>\">Scheduled email options</a></p>\n</div><?php\n}\n\nfunction my_rsvpemails_menu() {\nif(!function_exists('do_blocks'))\nadd_meta_box( 'BlastBox', 'RSVPMaker Email Options', 'RSVPMaker_email_notice', 'rsvpemail', 'normal', 'high' );\n}\n\nadd_action('admin_init','save_rsvpemail_data');\n\nfunction save_rsvpemail_data() {\n\nif(empty($_POST) || empty($_REQUEST['post_id']) || empty($_REQUEST['page']) || ($_REQUEST['page'] != 'rsvpmaker_scheduled_email_list'))\n\treturn;\nif( ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\treturn;\n$post_id = (int) $_REQUEST['post_id'];\n\nif(isset($_POST['scheduled_email'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\tif(is_array($_POST['scheduled_email']))\n\t\t$scheduled_email = array_map('sanitize_text_field',$_POST['scheduled_email']);\n\telse\n\t\t$scheduled_email = sanitize_text_field($_POST['scheduled_email']);\n\tupdate_post_meta($post_id,'scheduled_email',$scheduled_email);\n}\n\nif(!empty($_POST[\"email\"][\"from_name\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\tglobal $wpdb;\n\tglobal $current_user;\n\t\t\t\n\t\t$ev = array_map('sanitize_text_field',$_POST[\"email\"]);\n\t\tif(empty($ev[\"headline\"]))\n\t\t\t$ev[\"headline\"] = 0;\n\t\tforeach($ev as $name => $value)\n\t\t\t{\n\t\t\t$value = sanitize_text_field($value);\n\t\t\t$field = '_email_'.$name;\n\t\t\t$single = true;\n\t\t\t$current = get_post_meta($post_id, $field, $single);\n\t\t\t \n\t\t\tif($value && ($current == \"\") )\n\t\t\t\tadd_post_meta($post_id, $field, $value, true);\n\t\t\t\n\t\t\telseif($value != $current)\n\t\t\t\tupdate_post_meta($post_id, $field, $value);\n\t\t\t\n\t\t\telseif($value == \"\")\n\t\t\t\tdelete_post_meta($post_id, $field, $current);\n\t\t\t}\n\t}\n\tif( (isset($_POST[\"cron_active\"]) || !empty($_POST[\"cron_relative\"])) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\tprint_r($_POST);\n\t$chosen = (int) $_POST[\"chosen\"]; \n\tif(empty($_POST['cronday']))\n\t{\n\t\t$cronday = (int) $_POST['cronday'];\n\t\t$days = array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday');\n\t\t$day = $days[$cronday];\n\t}\n\tif(!empty($_POST['notesubject']) || !empty($_POST['notebody']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\tglobal $current_user;\n\t\t$newpost['post_title'] = sanitize_text_field(stripslashes($_POST['notesubject']));\n\t\t$newpost['post_content'] = wp_kses_post(rsvpautog(stripslashes($_POST['notebody'])));\n\t\t$newpost['post_type'] = 'post';\n\t\t$newpost['post_status'] = sanitize_text_field($_POST['status']);\n\t\t$newpost['post_author'] = $current_user->ID;\n\t\t$chosen = wp_insert_post( $newpost );\n\t}\n\t\n\tif(!empty($_POST['notekey']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\t\n\t\tupdate_post_meta($post_id,sanitize_text_field($_POST['notekey']),$chosen);\n\t$args = array('post_id' => $post_id);\n\t$cron_checkboxes = array(\"cron_active\", \"cron_mailchimp\", \"cron_members\", \"cron_preview\");\n\tforeach($cron_checkboxes as $check)\n\t\t{\n\t\t\t$cron[$check] = (isset($_POST[$check])) ? sanitize_text_field($_POST[$check]) : 0;\n\t\t}\n\t$cron['cron_to'] = sanitize_text_field($_POST['cron_to']);\n\t//clear if previously set\n\twp_clear_scheduled_hook( 'rsvpmaker_cron_email', $args );\n\twp_clear_scheduled_hook( 'rsvpmaker_cron_email_preview', $args );\n\tupdate_post_meta($post_id,'rsvpmaker_cron_email',$cron);\n\n\tif($cron[\"cron_active\"] == '1')\n\t\t{\n\t\t\t$cron_fields = array(\"cronday\", \"cronhour\", \"cronrecur\",\"cron_condition\");\n\t\t\tforeach($cron_fields as $field)\n\t\t\t\t$cron[$field] = sanitize_text_field($_POST[$field]);\n\t\t\t$days = array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday');\n\t\t\t$t = rsvpmaker_strtotime($days[$cron[\"cronday\"]] .' '.$cron[\"cronhour\"].':00');\n\t\t\tif($t < time())\n\t\t\t\t$t = rsvpmaker_strtotime('next '. $days[$cron[\"cronday\"]] .' '.$cron[\"cronhour\"].':00');\n\t\t}\n\telseif(($cron[\"cron_active\"] == 'relative') && !empty($_POST[\"cron_relative\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t$t = (int) $_POST[\"cron_relative\"];\n\telseif(($cron[\"cron_active\"] == 'rsvpmaker_strtotime') && !empty($_POST[\"cron_rsvpmaker_strtotime\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t$t = rsvpmaker_strtotime(sanitize_text_field($_POST[\"cron_rsvpmaker_strtotime\"]));\n\t}\n\t\n\t\n\tif(!empty($t))\n\t\t{\n\t\t\tif($cron[\"cron_preview\"])\n\t\t\t\t{\n\t\t\t\t\t$preview = $t - ($cron[\"cron_preview\"] * 3600);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t$preview = 0;\n\t\t\tif(empty($cron[\"cronrecur\"]))\n\t\t\t\t{\n\t\t\t\t\t// single cron\n\t\t\t\t\twp_schedule_single_event( $t, 'rsvpmaker_cron_email', $args );\n\t\t\t\t\tif($preview)\n\t\t\t\t\t\twp_schedule_single_event( $preview, 'rsvpmaker_cron_email_preview', $args );\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twp_schedule_event( $t, $cron[\"cronrecur\"], 'rsvpmaker_cron_email', $args );\n\t\t\t\t\tif($preview)\n\t\t\t\t\t\twp_schedule_event( $preview, $cron[\"cronrecur\"], 'rsvpmaker_cron_email_preview', $args );\n\t\t\t\t}\n\t\t}\n\telse\n\t\t{\n\t\tdelete_post_meta($post_id,'rsvpmaker_cron_email');\n\t\twp_clear_scheduled_hook( 'rsvpmaker_cron_email', $args );\n\t\twp_clear_scheduled_hook( 'rsvpmaker_cron_email_preview', $args );\n\t\t}\n\theader('Location: ' . site_url(sanitize_text_field($_SERVER['REQUEST_URI'])));\n\tdie();\n\t}\n}\n\nfunction rsvpevent_to_email () {\nglobal $current_user, $rsvp_options, $email_context;\n\nif(!current_user_can('edit_posts'))\n\treturn;\n\nif(!empty($_GET[\"rsvpevent_to_email\"]) || !empty($_GET[\"post_to_email\"]))\n\t{\n\t\t$email_context = true;\n\t\tif(!empty($_GET[\"post_to_email\"]))\n\t\t\t{\n\t\t\t\t$id = (int) $_GET[\"post_to_email\"];\n\t\t\t\t$permalink = get_permalink($id);\n\t\t\t\t$post = get_post($id);\n\t\t\t\t$content = '';\n\t\t\t\tif($post->post_type == 'rsvpmaker')\n\t\t\t\t{\n\t\t\t\t\t$content .= sprintf(\"<!-- wp:heading -->\\n<h2>%s</h2>\\n<!-- /wp:heading -->\\n\",$post->post_title);\n\t\t\t\t\t$block = rsvp_date_block($id);\n\t\t\t\t\t$blockgraph = str_replace('</div><div class=\"rsvpcalendar_buttons\">','<br />',$block['dateblock']);\n\t\t\t\t\t$blockgraph = \"<!-- wp:paragraph -->\\n<p><strong>\".strip_tags($blockgraph,'<br><a>').'</strong></p>'.\"\\n<!-- /wp:paragraph -->\";\n\t\t\t\t\t$content .= $blockgraph;\n\t\t\t\t}\n\t\t\t\tif(!empty($_GET['excerpt'])) {\n\t\t\t\t\t$content .= sprintf(\"<!-- wp:heading -->\\n\".'<h2><a href=\"%s\" class=\"article\">%s</a></h2>'.\"\\n<!-- /wp:heading -->\\n\",$permalink,$post->post_title);\n\t\t\t\t\t$graphs = explode(\"<!-- /wp:paragraph -->\",$post->post_content);\n\t\t\t\t\tfor($i = 0; $i < 5; $i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!empty($graphs[$i]))\n\t\t\t\t\t\t$content .= $graphs[$i].\"<!-- /wp:paragraph -->\";\n\t\t\t\t\t}\n\t\t\t\t\t$content .= sprintf('<!-- wp:paragraph -->\n\t\t\t\t\t<p><a href=\"%s\" class=\"readmore\">Read More</a></p>\n\t\t\t\t\t<!-- /wp:paragraph -->',$permalink);\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t$content .= $post->post_content;\n\t\t\t\tif(($post->post_type == 'rsvpmaker') && get_rsvpmaker_meta($post->ID,'_rsvp_on',true))\n\t\t\t\t{\n\t\t\t\t\t$rsvplink = sprintf($rsvp_options['rsvplink'],get_permalink($id).'#rsvpnow');\n\t\t\t\t\t$content .= \"\\n\\n<!-- wp:paragraph -->\\n\".$rsvplink.\"\\n<!-- /wp:paragraph -->\";\n\t\t\t\t}\n\n\t\t\t\t$title = $post->post_title;\n\t\t\t}\n\t\telse\n\t\t{\n\t\t$id = sanitize_text_field($_GET[\"rsvpevent_to_email\"]);\n\t\tif(is_numeric($id))\n\t\t\t{\n\t\t\t\tif(empty($content))\n\t\t\t\t\t$content = '<!-- wp:rsvpmaker/event {\"post_id\":\"'.$id.'\",\"one_format\":\"button\"} /-->';\n\t\t\t\t$title = get_the_title($id);\n\t\t\t\t$date = get_rsvp_date($id);\t\t\n\t\t\t\tif($date) {\n\t\t\t\t\n\t\t\t\t$t = rsvpmaker_strtotime($date);\n\t\t\t\tglobal $rsvp_options;\n\t\t\t\t$title .= ' - '.rsvpmaker_date($rsvp_options[\"short_date\"],$t);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\telseif($id == 'upcoming') {\n\t\t\t$content .= '<!-- wp:rsvpmaker/upcoming {\"posts_per_page\":\"20\",\"hideauthor\":\"true\"} /-->';\n\t\t\t$title = 'Upcoming Events';\n\t\t}\n\t\telse\n\t\t\treturn;\n\t\t}\n\t\t$my_post['post_title'] = $title;\n\t\t$my_post['post_content'] = $content;\n\t\t$my_post['post_type'] = 'rsvpemail';\n\t\t$my_post['post_status'] = 'publish';\n\t\t$my_post['post_author'] = $current_user->ID;\n\t\tif($post_id = wp_insert_post( $my_post ) )\n\t\t\t{\n\t\t\tif(!empty($t))\n\t\t\t\tadd_post_meta($post_id,'event_timestamp',$t);\n\t\t\t$loc = admin_url(\"post.php?action=edit&post=\".$post_id);\n\t\t\twp_redirect($loc);\n\t\t\texit;\n\t\t\t}\n\t}\n}\n\nfunction create_rsvpemail_post_type() {\nglobal $rsvp_options;\n  register_post_type( 'rsvpemail',\n    array(\n      'labels' => array(\n        'name' => __( 'RSVP Mailer','rsvpmaker' ),\n        'add_new_item' => __( 'Add New Email','rsvpmaker' ),\n        'edit_item' => __( 'Edit Email','rsvpmaker' ),\n        'new_item' => __( 'RSVP Emails','rsvpmaker' ),\n        'singular_name' => __( 'RSVP Email','rsvpmaker' )\n      ),\n\t'public' => true,\n\t'exclude_from_search' => true,\n    'publicly_queryable' => true,\n    'show_ui' => true, \n    'query_var' => true,\n    'rewrite' => true,\n    'capabilities' => array(\n        'edit_post' => 'edit_rsvpemail',\n        'edit_posts' => 'edit_rsvpemails',\n        'edit_others_posts' => 'edit_others_rsvpemails',\n        'publish_posts' => 'publish_rsvpemails',\n        'read_post' => 'read_rsvpemail',\n        'read_private_posts' => 'read_private_rsvpemails',\n        'delete_post' => 'delete_rsvpemail'\n    ),\n    'hierarchical' => false,\n    'menu_position' => 20,\n\t'menu_icon' => 'dashicons-email-alt',\n    'supports' => array('title','editor'),\n\t'show_in_rest' => true\n    )\n  );\n}\n\nfunction add_rsvpemail_caps() {\n    // gets the administrator role\n    $admins = get_role( 'administrator' );\n    $admins->add_cap( 'edit_rsvpemail' ); \n    $admins->add_cap( 'edit_rsvpemails' ); \n    $admins->add_cap( 'edit_others_rsvpemails' ); \n    $admins->add_cap( 'publish_rsvpemails' ); \n    $admins->add_cap( 'read_rsvpemail' ); \n    $admins->add_cap( 'read_private_rsvpemails' ); \n    $admins->add_cap( 'delete_rsvpemail' ); \n}\n\nfunction add_rsvpemail_caps_role($role, $publish = false) {\n    // gets the administrator role\n    $emailers= get_role( $role );\n    $emailers->add_cap( 'edit_rsvpemail' ); \n    $emailers->add_cap( 'edit_rsvpemails' );\n    $emailers->add_cap( 'edit_others_rsvpemails' ); \n    $emailers->add_cap( 'read_rsvpemail' ); \n    $emailers->add_cap( 'read_private_rsvpemails' ); \n    $emailers->add_cap( 'delete_rsvpemail' ); \n\tif($publish)\n    \t$emailers->add_cap( 'publish_rsvpemails' ); \n}\n\nfunction remove_rsvpemail_caps_role($role) {\n    // gets the administrator role\n    $emailers= get_role( $role );\n    $emailers->remove_cap( 'edit_rsvpemail' ); \n    $emailers->remove_cap( 'edit_rsvpemails' );\n    $emailers->remove_cap( 'edit_others_rsvpemails' ); \n    $emailers->remove_cap( 'read_rsvpemail' ); \n    $emailers->remove_cap( 'read_private_rsvpemails' ); \n    $emailers->remove_cap( 'delete_rsvpemail' ); \n   \t$emailers->remove_cap( 'publish_rsvpemails' ); \n}\n\n// Template selection\nfunction rsvpemail_template_redirect()\n{\n\nglobal $wp;\nglobal $wp_query;\n\n\tif (isset($wp->query_vars[\"post_type\"]) && ($wp->query_vars[\"post_type\"] == \"rsvpemail\"))\n\t{\n\t\tif (have_posts())\n\t\t{\n\t\t\tinclude(WP_PLUGIN_DIR . '/rsvpmaker/rsvpmaker-email-template.php');\n\t\t\tdie();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$wp_query->is_404 = true;\n\t\t}\n\t}\n}\n\nfunction rsvpmaker_text_version($content, $chimpfooter_text = '')\n{\n//match text links (not link around image, which would start with <)\n$content = preg_replace('/<head.+<\\/head>/s','',$content);\npreg_match_all('/href=\"([^\"]+)[^>]*>([^<]+)/',$content,$matches);\nif(!empty($matches))\n\t{\n\t$content .= \"\\n\\nLinks:\\n\\n\";\n\t\tforeach($matches[1] as $index => $link)\n\t\t\t{\n\t\t\t$content .= $matches[2][$index] .\"\\n\"; //anchor text\t\n\t\t\t$content .= $link .\"\\n\\n\";\n\t\t\t}\n\t}\n$text = trim(strip_tags($content));\n$text = preg_replace(\"/[\\r\\n]{3,}/\",\"\\n\\n\",$text);\n\n$text .= $chimpfooter_text;\nreturn $text;\n}\n\nfunction rsvpmaker_personalize_email($content,$to,$description = '', $post_id = 0) {\n$chimp_options = get_option('chimp');\nif(empty($chimp_options['mailing_address'])) $chimp_options['mailing_address'] = apply_filters('rsvpmaker_mailing_address','[not set in RSVPMaker Mailing List settings]');\nglobal $post;\nif($post_id)\n\t$post = get_post($post_id);\n$content = preg_replace('/\\*.{1,4}EMAIL.{1,4}\\*/',$to,$content);\n$content = preg_replace('/\\*.{1,4}UNSUB.{1,4}\\*/',site_url('?rsvpmail_unsubscribe='.$to),$content);\n$content = preg_replace('/\\*.{1,4}REWARDS.{1,4}\\*/','',$content);\n$content = preg_replace('/\\*.{1,4}LIST:DESCRIPTION.{1,4}\\*/',$description,$content);\n$content = preg_replace('/\\*.{1,4}LIST:ADDRESS.{1,4}\\*/',$chimp_options['mailing_address'],$content);\n$content = preg_replace('/\\*.{1,4}HTML:LIST_ADDRESS_HTML.{1,4}\\*/',$chimp_options['mailing_address'],$content);\n$content = preg_replace('/\\*.{1,4}LIST:COMPANY.{1,4}\\*/',$chimp_options['company'],$content);\n$content = preg_replace('/\\*.{1,4}CURRENT_YEAR.{1,4}\\*/',date('Y'),$content);\nif(isset($post->ID))\n$content = preg_replace('/\\*.{1,4}ARCHIVE.{1,4}\\*/',get_permalink($post->ID),$content);\n$content = preg_replace('/<a .+FORWARD.+/','',$content);\n$content = preg_replace('/\\*.+\\*/','',$content); // not recognized, get rid of it.\nreturn $content;\t\n}\n\nadd_shortcode('rsvpmaker_personalize_email_test','rsvpmaker_personalize_email_test');\n\nfunction rsvpmaker_personalize_email_test () {\n\t$content = '<p>A sorry state of *|EMAIL|* other *%CEMAILxy* stuff *|LIST:DESCRIPTION|*</p>';\n\t$to = 'mew@here.com';\n\t$description = 'This is a test';\n\treturn rsvpmaker_personalize_email($content,$to,$description = '');\n\n}\n\nfunction rsvpmailer_submitted($html,$text,$postvars,$post_id,$user_id) {\n\tglobal $wpdb, $current_user;\n\t$mail['html'] = $html;\n\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\tprintf('<p>from %s</p>',$from);\n\tupdate_post_meta($post_id,'rsvprelay_from',$from);\n\tupdate_post_meta($post_id,'rsvprelay_fromname',$postvars[\"from_name\"]);\n\t$post = get_post($post_id);\n\tif(!empty($postvars[\"preview\"]))\n\t\t{\n\t\t$previewto = trim($postvars[\"previewto\"]);\n\t\tif(is_email($previewto))\n\t\t\t{\n\t\t\techo '<p>Sending preview to '.$previewto.'</p>';\n\t\t\t$mail[\"to\"] = $previewto;\n\t\t\t$mail[\"from\"] = $from;\n\t\t\t$mail[\"fromname\"] = stripslashes($postvars[\"from_name\"]);\n\t\t\t$mail[\"subject\"] = stripslashes($postvars[\"subject\"]);\n\t\t\t$result = rsvpmailer($mail,__('You were sent this message as a preview','rsvpmaker'));\n\t\t\techo esc_html($result);\n\t\t\tif(!strpos($result,'unsubscribe') && !strpos($result,'blocked'))\n\t\t\t\tadd_post_meta($post->ID,'rsvpmail_sent',$mail['to'].' (preview) '.rsvpmaker_date('r'));\n\t\t\telse\n\t\t\t\tadd_post_meta($post->ID,'rsvpmail_blocked',$result);\n\t\t\t}\n\t\telse\n\t\t\techo '<div style=\"color:red;\">Error: '.$previewto.' - '.__('Error, not a single valid email address','rsvpmaker').'</div>';\n\t\t\t\n\t\t}\n\n\tif(!empty($postvars['test'])) {\n\t\techo '<p>queuing test</p>';\n\t\tfor($i=70; $i < 75; $i++)\n\t\t\tadd_post_meta($post_id,'rsvprelay_to','test'.$i.'@rsvpmaker.com');\n\t}\n\t\n\tif(!empty($postvars[\"attendees\"]) && !empty($postvars[\"event\"]) )\n\t{\n\t\n\tif($postvars[\"event\"] == 'any')\n\t{\n\t$sql = \"SELECT DISTINCT email \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker`\";\n\t$title = 'one of our previous events';\t\n\t}\n\telse {\n\t$event = (int) $postvars[\"event\"];\n\t$event_post = get_post($event);\n\t$sql = \"SELECT * \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker` \n\tWHERE  `event` = \".$event.\" ORDER BY  `email` ASC\";\n\t$title = $event_post->post_title;\n\t}\n\t$results = $wpdb->get_results($sql);\n\tif(!empty($results))\n\t{\n\techo '<p>'.__('Sending to','rsvpmaker').' '.sizeof($results).' '. __('event attendees','rsvpmaker').'</p>';\n\tforeach($results as $row)\n\t\t{\n\t\tif($problem = rsvpmail_is_problem($row->email))\n\t\t\t{\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tadd_post_meta($post_id,'rsvprelay_to',$row->email);\n\t\t}\n\t}\n\t\n\t}\n\t\n\tif(!empty($postvars[\"rsvps_since\"]) && !empty($postvars[\"since\"]) )\n\t{\n\t$since = (int) $postvars[\"since\"];\n\t$t = rsvpmaker_strtotime('-'.$since.' days');\n\t\n\t$date = date('Y-m-d',$t);\n\t\n\t$sql = \"SELECT DISTINCT email \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker` WHERE `timestamp` > '$date'\";\n\t$title = 'one of our previous events';\n\t\n\t$results = $wpdb->get_results($sql);\n\tif(!empty($results))\n\t{\n\techo '<p>'.__('Sending to','rsvpmaker').' '.sizeof($results).' '. __('RSVPs within the last ','rsvpmaker').' '.sanitize_text_field($postvars[\"since\"]).' days</p>';\n\tforeach($results as $row)\n\t\t{\n\t\tif($problem = rsvpmail_is_problem($row->email))\n\t\t\t{\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\t$unsubscribed[] = $row->email;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tadd_post_meta($post_id,'rsvprelay_to',$row->email);\n\t\t}\n\t}\n\t\n\t}\t\n\t\n\tif(!empty($postvars['custom_list'])) {\n\t\tpreg_match_all (\"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", sanitize_textarea_field($postvars['custom_list']), $emails);\n\t\tif(!empty($emails[0]))\n\t\t{\n\t\t\tprintf('<p>Sending to %s recipients (custom list)</p>',sizeof($emails[0]));\n\t\t\tupdate_post_meta($post_id,'message_description',__('This message was sent from','rsvpmaker').' '.sanitize_text_field($_SERVER['SERVER_NAME']));\n\t\t\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\t\t\tupdate_post_meta($post_id,'rsvprelay_fromname',stripslashes($postvars[\"from_name\"]));\n\t\t\tforeach($emails[0] as $email)\n\t\t\t\t{\n\t\t\t\tif( $problem = rsvpmail_is_problem($email) )\n\t\t\t\t\t{\n\t\t\t\t\t\t$unsubscribed[] = $email;\n\t\t\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tadd_post_meta($post_id,'rsvprelay_to',$email);\n\t\t\t\t}\t\t\t\t\t\n\t\t}\n\t}\n\n\tif(!empty($postvars[\"members\"]))\n\t{\n\t$users = get_users('blog='.get_current_blog_id());\n\tprintf('<p>Sending to %s website members</p>',sizeof($users));\n\tupdate_post_meta($post_id,'message_description',__('This message was sent to you as a member of','rsvpmaker').' '.sanitize_text_field($_SERVER['SERVER_NAME']));\n\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\tupdate_post_meta($post_id,'rsvprelay_fromname',stripslashes($postvars[\"from_name\"]));\n\tforeach($users as $user)\n\t\t{\n\t\tif( $problem = rsvpmail_is_problem($user->user_email) )\n\t\t\t{\n\t\t\t\t$unsubscribed[] = $user->user_email;\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tadd_post_meta($post_id,'rsvprelay_to',$user->user_email);\n\t\t}\n\t}\n\t\n\tif(!empty($postvars[\"network_members\"]) && user_can('manage_network',$user_id) )\n\t{\n\tupdate_post_meta($post_id,'message_description',__('This message was sent to you as a member of ','rsvpmaker').' '.sanitize_text_field($_SERVER['SERVER_NAME']));\n\t$from = (isset($postvars[\"user_email\"])) ? $current_user->user_email : $postvars[\"from_email\"];\n\tupdate_post_meta($post_id,'rsvprelay_fromname',sanitize_text_field(stripslashes($postvars[\"from_name\"])));\n\t$users = get_users('blog='.get_current_blog_id());\n\tprintf('<p>Sending to %s website members</p>',sizeof($users));\n\tforeach($users as $user)\n\t\t{\n\t\tif($problem = rsvpmail_is_problem($user->user_email))\n\t\t\t{\n\t\t\t\tadd_post_meta($post_id,'rsvpmail_blocked',$problem);\n\t\t\t\t$unsubscribed[] = $user->user_email;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\tupdate_post_meta($post_id,'rsvprelay_to',$user->user_email);\n\t\t}\n\t}\n\t\n\tif(!empty($postvars[\"mailchimp\"]) )\n\t{\n\t$chimp_options = get_option('chimp');\n\t$MailChimp = new MailChimpRSVP($chimp_options[\"chimp-key\"]);\n\t$listID = sanitize_text_field($postvars[\"mailchimp_list\"]);\n\tupdate_post_meta($post_id, \"_email_list\",$listID);\n\t$custom_fields[\"_email_list\"][0] = $listID;\n\t$segment_opts = array();\n\t\n\tif(!empty($postvars[\"mailchimp_exclude_rsvp\"]))\n\t{\n\t$event = (int) $postvars[\"mailchimp_exclude_rsvp\"];\t\n\t$sql = \"SELECT * \n\tFROM  `\".$wpdb->prefix.\"rsvpmaker` \n\tWHERE  `event` = \".$event;\n\t$results = $wpdb->get_results($sql);\n\tif(is_array($results))\n\tforeach($results as $row)\n\t\t$rsvped[] = array('field' => 'EMAIL','condition_type' => 'EmailAddress','op' => 'not','value' => $row->email);\n\tif(!empty($rsvped))\n\t\t$segment_opts = array('match' => 'all','conditions' => $rsvped );\n\t}\n\t\n\t$input = array(\n\t\t\t\t\t'type' => 'regular',\n\t\t\t\t\t'recipients'        => array('list_id' => $listID),\n\t\t\t\t\t'segment_opts'        => $segment_opts,\n\t\t\t\t\t'settings' => array('subject_line' => sanitize_text_field(stripslashes($postvars[\"subject\"])),'from_email' => sanitize_text_field($postvars[\"from_email\"]), 'from_name' => sanitize_text_field($postvars[\"from_name\"]), 'reply_to' => sanitize_text_field($postvars[\"from_email\"]))\n\t);\n\t\n\t$campaign = $MailChimp->post(\"campaigns\", $input);\n\tif(!$MailChimp->success())\n\t\t{\n\t\techo '<div>'.__('MailChimp API error','rsvpmaker').': '.$MailChimp->getLastError().'</div>';\n\t\treturn;\n\t\t}\n\tif(!empty($campaign[\"id\"]))\n\t{\n\t$html = str_replace('<!-- mailchimp -->','<a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a><br>',$html);\n\t$content_result = $MailChimp->put(\"campaigns/\".$campaign[\"id\"].'/content', array(\n\t'html' => $html, 'text' => $text) );\n\tif(!$MailChimp->success())\n\t\t{\n\t\techo '<div>'.__('MailChimp API error','rsvpmaker').': '.$MailChimp->getLastError().'</div>';\n\t\treturn;\n\t\t}\n\tif(empty($postvars[\"chimp_send_now\"]))\n\t\t{\n\t\techo '<div>'.__('View draft on mailchimp.com','rsvpmaker').'</div>';\n\t\t}\n\telse // send now\n\t\t{\n\t$send_result = $MailChimp->post(\"campaigns/\".$campaign[\"id\"].'/actions/send');\n\tif($MailChimp->success())\n\t\techo '<div>'.__('Sent MailChimp campaign','rsvpmaker').': '.$campaign[\"id\"].'</div>';\n\telse\n\t\techo '<div>'.__('MailChimp API error','rsvpmaker').': '.$MailChimp->getLastError().'</div>';\n\t\t}\n\t}\n\t\n\t}\n\t\n\tif(!empty($postvars))\n\t\tdo_action(\"rsvpmaker_email_send_ui_submit\",$postvars, $html, $text);\n\t\n\t// $unsubscribed is global, can be modified by action above\n\tif(!empty($unsubscribed))\n\t\tprintf(__('Skipped %d unsubscribed emails','rsvpmaker'),count($unsubscribed) );\n\t\n\t//if any messages queued, make sure group email schedule is set\n\tif(get_post_meta($post->ID,'rsvprelay_to',true) && !wp_get_schedule('rsvpmaker_relay_init_hook'))\n\t\twp_schedule_event( time(), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n} //end rsvpmailer_submitted\n\nadd_shortcode('rsvpmaker_template_inline_test','rsvpmaker_template_inline_test');\n\nfunction rsvpmaker_template_inline_test($atts) {\n\tif(is_admin())\n\t\treturn;\n\tif(isset($atts['id']))\n\t$html = rsvpmaker_template_inline(intval($atts['id']));\n\t$text = get_post_meta(intval($atts['id']),'_rsvpmail_text',true);\n\treturn $html . '<pre>'.$text.'</pre>';\n}\n\nfunction rsvpmailer_delayed_send($post_id,$user_id) {\n\t$postvars = get_post_meta($post_id,'scheduled_send_vars',true);\n\t$html = get_post_meta($post_id,'_rsvpmail_html',true);\n\t$text = get_post_meta($post_id,'_rsvpmail_text',true);\n\trsvpmailer_submitted($html,$text,$postvars,$post_id,$user_id);\n}\n\nadd_action('rsvpmailer_delayed_send','rsvpmailer_delayed_send',10,2);\n\nfunction rsvpmaker_email_send_ui($html, $text)\n{\nglobal $post;\nglobal $custom_fields;\nglobal $wpdb;\nglobal $current_user;\nglobal $rsvpmaker_cron_context;\nglobal $rsvp_options;\nif(!empty($rsvpmaker_cron_context))\n\treturn;\n$chimp_options = get_option('chimp');\n\nob_start();\n\nif(isset($_POST['preview_text'])  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\tupdate_post_meta($post->ID,'_rsvpmailer_preview',sanitize_text_field(stripslashes($_POST['preview_text'])));\n\nif(!current_user_can('publish_rsvpemails') )\n\treturn;\n\n$chimp_options = get_option('chimp');\n\nif(!empty($_POST[\"subject\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\t\t$subject = sanitize_text_field(stripslashes($_POST[\"subject\"]));\n\t\tif($post->post_title != $subject)\n\t\t{\n\t\t\t$post->post_title = $subject;\n\t\t\t$postarr[\"ID\"] = $post->ID;\n\t\t\t$postarr[\"post_title\"] = $subject;\n\t\t\twp_update_post($postarr);\n\t\t}\n\t}\n\nif(!empty($_POST[\"send_when\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n\t$postvars = $_POST;\n\t$postvars = array_map('sanitize_text_field',$postvars);\n\t$manage_network = current_user_can('manage_network');\n\tif('now' == $_POST[\"send_when\"])\n\t\trsvpmailer_submitted($html,$text,$postvars,$post->ID,$current_user->ID);\n\telseif('schedule' == $_POST[\"send_when\"])\n\t{\n\t\tupdate_post_meta($post->ID,'scheduled_send_vars',$postvars);\n\t\t$t = rsvpmaker_strtotime($_POST['send_date'].' '.$_POST['send_time']);\n\t\twp_schedule_single_event( $t, 'rsvpmailer_delayed_send', array($post->ID, $current_user->ID));\n\t\tprintf('<p><em>Scheduling to send at %s</em></p>',rsvpmaker_date($rsvp_options['short_date'].' '.$rsvp_options['time_format'],$t));\n\t}\n}\n\n$permalink = get_permalink($post->ID);\n$edit_link = get_edit_post_link($post->ID);\n$events_dropdown = get_events_dropdown ();\t\n\n$o = '';\nif($templates && is_array($templates))\nforeach($templates as $index => $template)\n\t{\n\t\t$s = ($index == $t_index) ? ' selected=\"selected\" ' : '';\n\t\t$o .= sprintf('<option value=\"%d\" %s>%s</option>',$index,$s,$template['slug']);\n\t}\n$queued = get_post_meta($post->ID,'rsvprelay_to');\nif($queued) {\n\trsvpmaker_relay_queue();\n\t//make sure this is turned on\n\tupdate_option('rsvpmaker_discussion_active',true);\n\tif(!wp_next_scheduled('rsvpmaker_relay_init_hook'))\n\t\twp_schedule_event( time(), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n\t$queued = get_post_meta($post->ID,'rsvprelay_to');\n\tif($queued) {\n\t\t//if more in queue\n\t\tprintf('<p>%s emails queued to send (<a href=\"%s\">Refresh</a></p>',sizeof($queued),$permalink);\n\t\tif(isset($_GET['show_log']))\n\t\t\tprintf('</p>%s</p>',implode(', ',$queued));\n\t}\n}\n$sent = get_post_meta($post->ID,'rsvpmail_sent');\n$blocked = get_post_meta($post->ID,'rsvpmail_blocked');\nif($sent) {\n\tprintf('<p>%s emails sent, %s blocked (<a href=\"%s\">Refresh</a> | <a href=\"%s\">Show Addresses</a>)</p>',sizeof($sent),sizeof($blocked),$permalink,add_query_arg('show_log',1,$permalink));\n\tif(isset($_GET['show_log'])){\n\t\tprintf('</p>%s</p>',implode('<br>',$sent));\n\t\tprintf('</p>%s</p>',implode('<br>',$blocked));\n\t}\n}\nif(!isset($_POST))\n{\n\t$mailchimp_sent = get_post_meta($post->ID,'rsvp_mailchimp_sent');\n\tif($mailchimp_sent)\n\t\tprintf('</p>%s</p>',implode(', ',$mailchimp_sent));\t\n}\n?>\n<style>\n\t#email-content {\n\t\twidth: 650px;\n\t\tmargin-left:auto;\n\t\tmargin-right: auto;\n\t\tbackground-color: #fff;\n\t\tcolor: #000;\n\t\tpadding: 10px;\n\t}\n</style>\n<p><a href=\"<?php echo esc_attr($edit_link); ?>\"><?php esc_html_e('Edit','rsvpmaker');?></a> - <a href=\"<?php echo admin_url('post-new.php?post_type=rsvpemail'); ?>\">New Email</a> - <a href=\"<?php echo admin_url(); ?>\"><?php esc_html_e('Dashboard','rsvpmaker');?></a> - <a href=\"<?php echo site_url(); ?>\"><?php esc_html_e('Visit Site','rsvpmaker');?></a></p>\n<div style=\"width: 150px; float:right;\"><button onclick=\"hideControls()\">Hide Controls</button></div>\n<form method=\"post\" action=\"<?php echo esc_attr($permalink); ?>\">\n<?php rsvpmaker_nonce(); ?>\n<table>\n<tr><td><?php esc_html_e('Subject','rsvpmaker');?>:</td><td><input type=\"text\"  size=\"50\" name=\"subject\" value=\"<?php echo esc_attr($post->post_title); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('From Name','rsvpmaker');?>:</td><td><input type=\"text\"  size=\"50\" name=\"from_name\" value=\"<?php echo (isset($custom_fields[\"_email_from_name\"][0])) ? esc_attr($custom_fields[\"_email_from_name\"][0]) : esc_attr($chimp_options[\"email-name\"]); ?>\" /></td></tr>\n<tr><td><?php esc_html_e('From Email','rsvpmaker');?>:</td><td><input type=\"text\" size=\"50\"  name=\"from_email\" value=\"<?php echo (isset($custom_fields[\"_email_from_email\"][0])) ? esc_attr($custom_fields[\"_email_from_email\"][0]) : esc_attr($chimp_options[\"email-from\"]); ?>\" />\n</td></tr>\n<tr><td><?php esc_html_e('Preview Text','rsvpmaker');?>:</td><td><input type=\"text\" size=\"50\"  name=\"preview_text\" value=\"<?php echo rsvpmailer_preview(array()); ?>\" />\n</td></tr>\n</table>\n<div><input type=\"checkbox\" name=\"user_email\" value=\"1\" checked=\"checked\" /><?php esc_html_e('Except for MailChimp, use the email of the logged in user as from email.','rsvpmaker'); ?></div>\n<p style=\"clear:both;\"><?php esc_html_e('Send','rsvpmaker');?></p>\n<div><input type=\"checkbox\" name=\"preview\" value=\"1\"> <?php esc_html_e('Preview to','rsvpmaker');?>: <input type=\"text\" name=\"previewto\" value=\"<?php echo (isset($custom_fields[\"_email_preview_to\"][0])) ? $custom_fields[\"_email_preview_to\"][0] : $chimp_options[\"email-from\"]; ?>\" />\n<br><em>Send yourself a test first to check email formatting. Certain WordPress blocks, such as columns, may not translate to email.</em>\n</div>\n<div><input type=\"checkbox\" name=\"members\" value=\"1\" <?php if(isset($_GET['list']) && ($_GET['list'] == 'members') ) echo 'checked=\"checked\"'; ?> > <?php esc_html_e('Website members','rsvpmaker');?></div>\n<div><?php esc_html_e('Custom List','rsvpmaker');?><br /><textarea name=\"custom_list\" rows=\"3\" cols=\"80\"></textarea></div>\n<p><input type=\"checkbox\" name=\"test\" value=\"1\" /> Test</p>\n<?php if(is_multisite() && current_user_can('manage_network') && (get_current_blog_id() == 1)) {\n?>\n<div style=\"border: thin dotted red;\"><strong>Network Administrator Only:</strong><br /> \n<input type=\"checkbox\" name=\"network_members\" value=\"1\"> <?php esc_html_e('All users','rsvpmaker');?>\n</div>\n<?php\n} ?>\n<?php\nif(!empty($chimp_options[\"chimp-key\"]))\n{\n?>\n<input type=\"checkbox\" name=\"mailchimp\" value=\"1\" <?php if(isset($_GET['mailchimp'])) echo ' checked=\"checked\" '; ?> > <?php esc_html_e('MailChimp list','rsvpmaker');?> <select name=\"mailchimp_list\">\n<?php\n$chosen = (isset($custom_fields[\"_email_list\"][0])) ? $custom_fields[\"_email_list\"][0] : $chimp_options[\"chimp-list\"];\necho mailchimp_list_dropdown($chimp_options[\"chimp-key\"], $chosen);\n?>\n</select> <select name=\"chimp_send_now\"><option value=\"1\"><?php esc_html_e('Create and Send','rsvpmaker'); ?></option><option value=\"\" <?php if(isset($_POST[\"mailchimp\"]) && empty($_POST[\"chimp_send_now\"])) echo ' selected=\"selected\" '; ?> ><?php esc_html_e('Save as draft on mailchimp.com','rsvpmaker'); ?></option></select></div>\n<?php if(!empty($rsvp_options['debug']))\n{ //only if debug is on, show this feature.\n?>\n<div style=\"margin-left: 20px;\">\n<?php esc_html_e('Exclude Recipients who RSVPed to','rsvpmaker');?> <select name=\"mailchimp_exclude_rsvp\">\n<option value=\"\">Choose Event</option>\n<?php\necho $events_dropdown;\n?>\n</select>\t\n</div>\n<?php\n} // end if debug\n}\n\n?>\n\t<div><input type=\"checkbox\" name=\"attendees\" value=\"1\"> <?php esc_html_e('Attendees','rsvpmaker');?> <select name=\"event\"><option value=\"\"><?php esc_html_e('Select Event','rsvpmaker');?></option><option value=\"any\"><?php esc_html_e('Any event','rsvpmaker');?></option><?php echo $events_dropdown; ?></select></div>\n\n\t<div><input type=\"checkbox\" name=\"rsvps_since\" value=\"1\"> <?php esc_html_e('RSVPs more recent than ','rsvpmaker');?> <input type=\"text\" name=\"since\" value=\"30\" /> <?php esc_html_e('Days','rsvpmaker');?></div>\n<?php\ndo_action(\"rsvpmaker_email_send_ui_options\");\n?>\n<p><input type=\"submit\" name=\"now\" value=\"<?php esc_html_e('Send','rsvpmaker');?>\" /> <input type=\"radio\" name=\"send_when\" value=\"now\" checked=\"checked\"> Now <input type=\"radio\" name=\"send_when\" value=\"schedule\" > Schedule for <input type=\"date\" name=\"send_date\" value=\"<?php echo rsvpmaker_date('Y-m-d'); ?>\"> <input name=\"send_time\" type=\"time\" value=\"<?php echo rsvpmaker_date('H:i',strtotime('+1 hour')); ?>\"></p>\n</form>\n<script>\nfunction hideControls() {\nvar x = document.getElementById(\"control-wrapper\");\nx.style.display = \"none\";\n}\n</script>\n<?php\n\n$ts = rsvpmaker_next_scheduled($post->ID);\nif($ts)\n\tprintf('<p><a href=\"%s\">Preview scheduled broadcast</a> for %s',add_query_arg('cronemailpreview',$post->ID,$permalink),esc_html($ts));\n\t\nreturn '<div id=\"control-wrapper\" style=\"background-color: #FFFFFF; color: #000000;\">'.ob_get_clean().'</div>';\n}\n\n\nfunction RSVPMaker_extract_email() {\n\nglobal $wpdb;\n$inchimp = '';\nif(isset($_POST[\"emails\"]) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t{\n\n$chimp_options = get_option('chimp');\n\n$apikey = $chimp_options[\"chimp-key\"];\n$listId = $chimp_options[\"chimp-list\"];\n \n\tpreg_match_all (\"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", wp_kses_post($_POST[\"emails\"]), $emails);\n\t$emails = $emails[0];\n\tforeach($emails as $email)\n\t\t{\n\t\t\t$email = strtolower($email);\n\t\t\t$unique[$email] = $email;\n\t\t}\n\tsort($unique);\n\tforeach($unique as $email)\n\t\t{\n\t\t$email = strtolower($email);\n\t\t$hash = md5($email);\n\t\tif(!empty($_POST[\"in_mailchimp\"]))\n\t\t\t{\n\t\t\tif(!isset($MailChimp) && !empty($apikey))\n\t\t\t\t$MailChimp = new MailChimpRSVP($apikey);\n\t\t\t$member = $MailChimp->get(\"/lists/\".$listId.\"/members/\".$hash);\n\t\t\tif(!empty($member[\"id\"]) )\n\t\t\t\t{\n\t\t\t\t$inchimp .= \"\\n<br />$email\";\n\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\techo \"\\n<br />$email\";\n\t\t}\nif($inchimp)\n\techo \"<h3>In MailChimp</h3>$inchimp\";\n\n\t}\n\n; ?>\n<div id=\"icon-options-general\" class=\"icon32\"><br /></div>\n<h2><?php esc_html_e('Extract Emails','rsvpmaker');?></h2>\n<p><?php esc_html_e('You can enter an disorganized list of emails mixed in with other text, and this utility will extract just the email addresses.','rsvpmaker');?></p>\n<form id=\"form1\" name=\"form1\" method=\"post\" action=\"\">\n<?php rsvpmaker_nonce(); ?>\n  <p>\n    <textarea name=\"emails\" id=\"emails\" cols=\"45\" rows=\"5\"></textarea>\n  </p>\n  <p><?php esc_html_e('Filter out emails that','rsvpmaker');?>:</p>\n  <p>\n    <input name=\"in_mailchimp\" type=\"checkbox\" id=\"in_mailchimp\" checked=\"checked\" />\n  <?php esc_html_e('Are Registered in MailChimp','rsvpmaker');?></p>\n  <p>\n    <input type=\"submit\" name=\"button\" id=\"button\" value=\"Submit\" />\n  </p>\n</form>\n<?php\n}\n\nfunction inline_array($text) {\n$lines = explode(\"\\n\",$text);\n$inline_array = array();\nforeach($lines as $line)\n\t{\n\t\t$line = trim($line);\n\t\tif(strpos($line,'='))\n\t\t\t{\t\n\t\t\t$parts = explode('=',$line);\n\t\t\t$inline_array[$parts[0]] = $parts[1];\n\t\t\t}\n\t}\nreturn $inline_array;\n}\t\n\t\nfunction rsvpemail_template () {\n$ver = phpversion();\nif (version_compare($ver, '7.1', '<'))\n\tprintf('<div class=\"notice notice-warning\"><p>The Emogrifier CSS inliner library, which is included to improve formatting of HTML email, relies on PHP features introduced in version 7.1 -- and is disabled because your site is on %s</p></div>',$ver);\n?>\n<div id=\"icon-options-general\" class=\"icon32\"><br /></div>\n<?php\n\nif(isset($_POST['extra_email_styles']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\tupdate_option('extra_email_styles',$_POST['extra_email_styles']);\n\n?>\n<h2><?php esc_html_e('RSVPMaker Email Design Templates','rsvpmaker');?></h2>\n<p>Note: This function is being redesigned.</p>\n<form id=\"email_style\" name=\"email_style\" method=\"post\" action=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_email_template'); ?>\">\n<?php\nrsvpmaker_nonce();\nglobal $rsvp_options;\n$chimp_options = get_option('chimp');\nif(empty($chimp_options['mailing_address']))\n\tprintf('<p><strong>%s</strong></p>',__('A physical mailing address should be entered in in RSVPMaker Mailing List settings.','rsvpmaker'));\n?>\n<p>\n  <?php esc_html_e('Email Styles','rsvpmaker');?> (<?php esc_html_e('applied to all email templates','rsvpmaker');?>)<br />\n    <textarea name=\"extra_email_styles\" cols=\"80\" rows=\"5\"><? echo get_option('extra_email_styles'); ?></textarea>\n\t  <br /><a target=\"_blank\" href=\"<?php echo site_url('?show_rsvpmaker_included_styles=1') ?>\"><?php esc_html_e('View default email styles','rsvpmaker');?></a>\n  </p>\n<p>\n<button><?php esc_html_e('Save','rsvpmaker');?></button>\n</p>\n\n\t<p><a href=\"<?php echo admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_email_template&reset_email_template=1'); ?>\"><?php esc_html_e('Reset to default template','rsvpmaker');?></a></p>\n\n<h3>Key CSS Selectors</h3>\n<p>a.rsvplink {/* your CSS here */} - style the RSVP button</p>\n<p>figcaption, .wp-caption {/* your CSS here */} - captions for images</p>\n<p>#messagefooter {/* your CSS here */} - footer that includes unsubscribe link, info about your site/company</p>\n<p>div.rsvpmaker {/* your CSS here */} - an embedded event listing</p>\n<p>div.rsvpmaker-entry-title {/* your CSS here */} - title of event</p>\n<p>div.dateblock {/* your CSS here */} - date and time</p>\n<p>p.rsvpmeta {/* your CSS here */} - event type (category)</p>\n<p>.wp-block-column {/* your CSS here */} - adjustments to the Gutenberg column block (media queries not reliably supported in email)</p>\n\n</form>\n\n<?php\n\n} // end rsvpemail template form\n\nfunction my_rsvpemail_menu() {\nglobal $rsvp_options;\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Scheduled Email\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"rsvpmaker_scheduled_email_list\";\n$function = \"rsvpmaker_scheduled_email_list\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Email Design Templates\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"rsvpmaker_email_template\";\n$function = \"rsvpemail_template\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Notification Templates\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"rsvpmaker_notification_templates\";\n$function = \"rsvpmaker_notification_templates\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Content for Email\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"email_get_content\";\n$function = \"email_get_content\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Extract Addresses\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"extract\";\n$function = \"RSVPMaker_extract_email\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Unsubscribed List\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"unsubscribed_list\";\n$function = \"unsubscribed_list\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n\nif(!empty($rsvp_options[\"log_email\"]))\n{\n$parent_slug = \"edit.php?post_type=rsvpemail\";\n$page_title = __(\"Email Log\",'rsvpmaker');\n$menu_title = $page_title;\n$capability = 'edit_others_rsvpemails';\n$menu_slug = \"email_log\";\n$function = \"email_log\";\n\nadd_submenu_page( $parent_slug, $page_title, $menu_title, $capability, $menu_slug, $function);\n}\n\n}\n\nfunction rsvpmaker_mailpoet_notice() {\n\t$screen = get_current_screen();\n\tif(strpos($screen->id,'mailpoet-newsletter-editor')) {\n\t\techo '<div class=\"notice notice-info\">';\n\t\techo '<div><p><button id=\"showhide_mailpoet_shortcodes\">Show RSVPMaker Shortcodes for MailPoet</button></p></div>';\n\t\techo '<div id=\"rsvpmaker_mailpoet_shortcodes_notice\">';\n\t\trsvpmaker_mailpoet_shortcodes();\n\t\techo '<div><p><button id=\"showhide_mailpoet_shortcodes2\">Hide RSVPMaker Shortcodes for MailPoet</button></p></div>';\n\t\techo '</div>';\n\t\techo '</div>';\n?>\n<script>\njQuery(document).ready(function( $ ) {\n\nconsole.log('mailpoet shortcodes button');\n\n$('#rsvpmaker_mailpoet_shortcodes_notice').hide();\nvar mailpoetshow = false;\nfunction toggleMailPoetShort()  {\n\t\tif(mailpoetshow)\n\t\t{\n\t\t\t$('#showhide_mailpoet_shortcodes').text('Show RSVPMaker Shortcodes for MailPoet');\n\t\t\t$('#rsvpmaker_mailpoet_shortcodes_notice').hide();\n\t\t\tmailpoetshow = false;\n\t\t}\n\t\telse {\n\t\t\t$('#showhide_mailpoet_shortcodes').text('Hide RSVPMaker Shortcodes for MailPoet');\n\t\t\t$('#rsvpmaker_mailpoet_shortcodes_notice').show();\n\t\t\tmailpoetshow = true;\n\t\t}\n}\n\n$('#showhide_mailpoet_shortcodes').click( function() {\n\ttoggleMailPoetShort();\n}\n);\n\n$('#showhide_mailpoet_shortcodes2').click( function() {\n\ttoggleMailPoetShort();\n}\n);\n\n});\n</script>\n<?php\n\t} \n}\n\nadd_action('admin_notices','rsvpmaker_mailpoet_notice');\n\nfunction rsvpmaker_mailpoet_shortcodes() {\n?>\n\n<p>You can use standard <a href=\"https://rsvpmaker.com/knowledge-base/shortcodes/\" target=\"_blank\">RSVPMaker shortcodes</a> with a custom:prefix. For rsvpmaker_upcoming, rsvpmaker_next, and rsvpmaker_one, you can include a formatting attribtue, such as [custom:rsvpmaker_next format=\"compact\"]<br />\nUseful formatting codes for email (\"excerpt\" works well in most cases):\n<br />format=\"excerpt\" - shows the first few paragraphs, or all the content up to the more tag (if included), plus a link to read more and the RSVP button if active.\n<br />format=\"compact\" - just the headline, date and button (if RSVPs active).\n<br />format=\"button_only\" - embeds just the RSVP button\n<br />format=\"embed_dateblock\" - embeds just the date and time block\n</p>\n<textarea rows=\"10\" style=\"width:80%;\">\n[custom:rsvpmaker_upcoming hideauthor=\"1\" limit=\"5\" days=\"14\"] list upcoming events\n[custom:event_listing show_time=\"1\" title=\"Upcoming Events\"] links with dates and titles of upcoming events\n[custom:rsvpmaker_next format=\"excerpt\"] next event\n[custom:rsvpmaker_next rsvp_on=\"1\" format=\"excerpt\"] next event with RSVPs active\n[custom:rsvpmaker_youtube url=\"YOUTUBE URL\" link=\"LINK IF DIFFERENT\"] display preview image of a youtube video, with to view\n<?php\n\t$events = get_future_events(array('limit' => 20));\n\tforeach($events as $event) {\n\t\tprintf('[custom:rsvpmaker_one post_id=\"%d\" format=\"excerpt\"] %s %s'.\"\\n\",$event->ID,$event->post_title,$event->date);\n\t}\necho '</textarea>';\n}\n\nfunction email_log () {\nglobal $wpdb;\n$sql = \"SELECT * FROM $wpdb->postmeta WHERE meta_key = '_rsvpmaker_email_log' ORDER BY meta_id DESC LIMIT 0, 100\";\n$results = $wpdb->get_results($sql);\nif($results)\nforeach($results as $row)\n\t{\n\t\t$mail = unserialize($row->meta_value);\n\t\tif(is_array($mail))\n\t\tforeach($mail as $index => $value)\n\t\t\tprintf('<p><strong>%s</strong></p><div>%s</div>',$index,$value);\n\t}\n}\n\nfunction unsubscribed_list () {\nglobal $wpdb;\n$table = $wpdb->prefix . \"rsvpmailer_blocked\";\n$action = admin_url('edit.php?post_type=rsvpemail&page=unsubscribed_list');\nif(isset($_POST['remove']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\tforeach($_POST['remove'] as $email) {\n\t\trsvpmail_remove_problem($email);\n\t}\n}\n\nif(isset($_POST['problems']))\n{\n\t$code = sanitize_text_field($_POST['code']);\n\tpreg_match_all (\"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", $_POST['problems'], $emails);\n\t$emails = $emails[0];\n\tforeach($emails as $email)\n\t\t{\n\t\t\trsvpmail_add_problem($email,$code);\n\t\t\t$email = strtolower($email);\n\t\t}\n}\n\nprintf('<h1>%s</h1><p>%s</p>',__('Unsubscribed and Blocked','rsvpmaker'),__('If recipients have clicked unsubscribe on a confirmation message or any other message sent directly from RSVPMaker (as opposed to via MailChimp) they will be listed here. You can also track messages that are being blocked by the recipient\\'s ISP (not currently automated). You can manually remove emails from this list, but should only do so <strong><em>at the request of the recipient</em></strong>.','rsvpmaker'));\n$sql = \"SELECT * FROM $table ORDER BY code, timestamp DESC\";\n$results = $wpdb->get_results($sql);\nif(!empty($results))\n{\nprintf('<form method=\"post\" action=\"%s\"><table><tr><th>Unblock</th><th>Email</th><th>Issue</th></tr>',$action);\nforeach($results as $row)\n{\n\tprintf('<tr><td><input type=\"checkbox\" name=\"remove[]\" value=\"%s\" /></td><td>%s</td><td>%s</td></tr>',$row->email,$row->email,$row->code);\t\n}\necho '</table><p><input type=\"submit\" value=\"Submit\"></p>'.rsvpmaker_nonce('return').'</form>';\n}\n\nprintf('<h2>Add an Email Addresses as Unsubscribed Or Blocked</h2><form method=\"post\" action=\"%s\">\n<p>\n<textarea rows=\"5\" cols=\"60\" name=\"problems\"></textarea>\n<br><em>Separated by spaces of on separate lines</em>\n</p>%s\n<p>\n<input type=\"radio\" name=\"code\" value=\"unsubscribed\" checked=\"checked\"> Unsubscribed\n<input type=\"radio\" name=\"code\" value=\"blocked\"> Blocked\n<button>Add</button></form>',$action,rsvpmaker_nonce('return'));\n\n}\n\n\nfunction RSVPMaker_chimpshort($atts, $content = NULL ) {\n\n$atts = shortcode_atts( array(\n  'query' => 'post_type=post&posts_per_page=5',\n  'format' => '',\n  ), $atts );\n\n\tob_start();\n\tquery_posts($atts[\"query\"]);\n\nif ( have_posts() ) {\nwhile ( have_posts() ) : the_post(); ?>\n<div id=\"post-<?php the_ID(); ?>\" <?php post_class(); ?>>\n<h3 class=\"entry-title\"><a href=\"<?php the_permalink(); ?>\"><?php the_title(); ?></a></h3>\n<?php\nif(isset($atts[\"format\"]) && ($atts[\"format\"] == 'excerpt'))\n\t{\n; ?>\n<div class=\"excerpt-content\">\n\n<?php the_excerpt(); ?>\n\n</div><!-- .excerpt-content -->\n<?php\t\n\t}\nelseif(isset($atts[\"format\"]) && ($atts[\"format\"] == 'full'))\n\t{\n; ?>\n<div class=\"entry-content\">\n\n<?php the_content(); ?>\n\n</div><!-- .entry-content -->\n<?php\n}\n?>\n</div>\n<?php \nendwhile;\nwp_reset_query();\n} \n\t\n\t$content = ob_get_clean();\n\n\treturn $content;\n}\n\nfunction email_get_content () {\nglobal $wpdb;\n;?>\n<div id=\"icon-options-general\" class=\"icon32\"><br /></div>\n<h2>Content for Email</h2>\n\n<?php\n\n$event_options = $options = '<option value=\"\">'.__('None selected','rsvpmaker').'</option>';\n$event_options .= '<option value=\"upcoming\">'.__('Upcoming Events','rsvpmaker').'</option>';\n$posts = '';\n$future = get_future_events();\nif(is_array($future))\nforeach($future as $event)\n\t{\n\t$event_options .= sprintf('<option value=\"%s\">%s - %s</option>'.\"\\n\",$event->ID,$event->post_title,date('F j, Y',rsvpmaker_strtotime($event->datetime)));\n\t}\n\n\n$sql = \"SELECT ID, post_title FROM $wpdb->posts WHERE post_status='publish' AND post_type='post' ORDER BY post_date DESC LIMIT 0, 50\";\n$wpdb->show_errors();\n$results = $wpdb->get_results($sql, ARRAY_A);\nif($results)\n{\nforeach ($results as $row)\n\t{\n\t$posts .= sprintf(\"<option value=\\\"%d\\\">%s</option>\\n\",$row[\"ID\"],substr($row[\"post_title\"],0,80));\n\t}\n$posts = '<optgroup label=\"'.__('Recent Posts','rsvpmaker').'\">'.$posts.\"</optgroup>\\n\";\n}\n\n$po = '';\n$pages = get_pages();\nforeach($pages as $page)\n\t$po .= sprintf(\"<option value=\\\"%d\\\">%s</option>\\n\",$page->ID,substr($page->post_title,0,80));\n?>\n<form action=\"<?php echo admin_url('edit.php?post_type=rsvpemail'); ?>\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<p><?php esc_html_e('Email Based on Event','rsvpmaker');?>: <select name=\"rsvpevent_to_email\"><?php echo $event_options; ?></select>\n</select>\n</p>\n<button><?php esc_html_e('Load Content','rsvpmaker');?></button>\n</form>\t\n<form action=\"<?php echo admin_url('edit.php?post_type=rsvpemail'); ?>\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<p><?php esc_html_e('Email Based on Post','rsvpmaker');?>: <select name=\"post_to_email\"><?php echo $posts; ?></select>\n</select>\n<br /><input type=\"radio\" name=\"excerpt\" value=\"0\" checked=\"checked\"> <?php esc_html_e('Full text','rsvpmaker');?> <input type=\"radio\" name=\"excerpt\" value=\"1\"> <?php esc_html_e('Excerpt','rsvpmaker');?>\n</p>\n<button><?php esc_html_e('Load Content','rsvpmaker');?></button>\n</form>\t\n<form action=\"<?php echo admin_url('edit.php?post_type=rsvpemail'); ?>\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<p><?php esc_html_e('Email Based on Page','rsvpmaker');?>: <select name=\"post_to_email\"><?php echo $po; ?></select>\n</select>\n<br /><input type=\"radio\" name=\"excerpt\" value=\"0\" checked=\"checked\"> <?php esc_html_e('Full text','rsvpmaker');?> <input type=\"radio\" name=\"excerpt\" value=\"1\"> <?php esc_html_e('Excerpt','rsvpmaker');?>\n</p>\n<button><?php esc_html_e('Load Content','rsvpmaker');?></button>\n</form>\t\n\n<h2>Shortcodes for MailPoet</h2>\n<p>If you use the MailPoet integration, you can include a variations on the <a href=\"https://rsvpmaker.com/knowledge-base/shortcodes/\" target=\"_blank\">RSVPMaker Shortcodes</a> that include the custom: prefix.</p>\n\n<?php\n\nrsvpmaker_mailpoet_shortcodes();\n\n} // end chimp get content\n\nfunction rsvpmaker_email_list_okay ($rsvp) {\n\t\t$mergevars[\"FNAME\"] = stripslashes($rsvp[\"first\"]);\n\t\t$mergevars[\"LNAME\"] = stripslashes($rsvp[\"last\"]);\n\t\tRSVPMaker_Chimp_Add($rsvp[\"email\"],$mergevars);\n\t\tmailpoet_email_list_okay($rsvp);\n}\n\nfunction get_rsvpmaker_email_template() {\nglobal $rsvpmail_templates;\n//$templates = get_option('rsvpmaker_email_template');\n\n$templates[0]['slug'] = 'default';\n$templates[0]['html'] = '<html>\n<head>\n<title>*|MC:SUBJECT|*</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<style>\n#background {background-color: #FFFFFF; padding: 10px; margin-top: 0; max-width: 800px;}\n#content {padding: 5px; background-color: #FFFFFF; margin-left: auto; margin-right: auto; margin-top: 10px; margin-bottom: 10px; padding-bottom: 50px;}\n</style>\n</head>\n<body>\n<div style=\"display: none\">[rsvpmailer_preview]</div>\n<div id=\"background\">\n<div id=\"content\">\n\n<div style=\"font-size: small; border: thin dotted #999;\">Email not displaying correctly? <a href=\"*|ARCHIVE|*\" class=\"adminText\">View it in your browser.</a></div>\n\n[rsvpmaker_email_content]\n\n</div><!-- end content area -->\n</div><!-- end background -->\n\n<div id=\"messagefooter\">\n*|LIST:DESCRIPTION|*<br>\n<br>\n<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list | <a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a>\n<br>\n<strong>Our mailing address is:</strong><br>\n*|LIST:ADDRESS|*<br>\n<em>Copyright (C) *|CURRENT_YEAR|* *|LIST:COMPANY|* All rights reserved.</em><br>    \n*|REWARDS|*</div>\n</body>\n</html>';\n$templates[1]['slug'] = 'transactional';\n$templates[1]['html'] = '<html>\n<head>\n<title>*|MC:SUBJECT|*</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n</head>\n<body>\n<div style=\"display: none\">[rsvpmailer_preview]</div>\n<div id=\"tx-background\">\n<div id=\"tx-content\">\n\n[rsvpmaker_email_content]\n\n<div id=\"messagefooter\">\n*|LIST:DESCRIPTION|*<br>\n<br>\n<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list | <a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a>\n<br>\n<strong>Our mailing address is:</strong><br>\n*|LIST:ADDRESS|*<br>\n<em>Copyright (C) *|CURRENT_YEAR|* *|LIST:COMPANY|* All rights reserved.</em><br>    \n*|REWARDS|*</div>\n\n</div><!-- end content area -->\n</div><!-- end background -->\n</body>\n</html>';\n\n$styles = rsvpmaker_included_styles();\nforeach($templates as $index => $template)\n{\n\t$html = $template['html'];\n\t$html = add_style_to_email_html($html);\n\t$templates[$index]['html'] = $html;\n}\n$rsvpmail_templates = $templates;\t\nreturn $templates;\n}\n\nfunction add_style_to_email_html($html) {\n\t$styles = rsvpmaker_included_styles();\n\tif(strpos($html,'<style'))\n\t\t$html = preg_replace('/<styl.+>/','<style type=\"text/css\">'.\"\\n\".$styles.\"\\n\",$html);\n\telse\n\t\t$html = str_replace('</head>',\"<style>\\n\".$styles.\"\\n</style></head>\",$html);\n\treturn $html;\n}\n\nfunction rsvpmaker_tx_email($event_post, $mail) {\n\n//used with rsvpmaker_email_content shortcode in template\nglobal $rsvpmaker_tx_content;\n$rsvpmaker_tx_content = $mail[\"html\"];\n$templates = get_rsvpmaker_email_template();\nif(!empty($event_post->ID))\n$t_index = (int) get_post_meta($event_post->ID,'rsvp_tx_template',true);\nif(empty($t_index))\n\t$t_index = (int) get_option('rsvpmaker_tx_template');\n\n$template = $templates[$t_index][\"html\"];\nif(!strpos($template,'*|UNSUB')) // if not already in template\n$rsvpmaker_tx_content .= '<div id=\"messagefooter\">\n    *|LIST:DESCRIPTION|*<br>\n    <br>\n    <a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list\n</div>';\n\n$rsvpfooter_text = '\n\n==============================================\n*|LIST:DESCRIPTION|*\n\nUnsubscribe *|EMAIL|* from this list:\n*|UNSUB|*\n';\n\n$text = rsvpmaker_text_version($mail[\"html\"], $rsvpfooter_text);\n\n$mail[\"html\"] = do_blocks(do_shortcode($template));\n\n$mail[\"html\"] = preg_replace('/(?<!\")(https:\\/\\/www.youtube.com\\/watch\\?v=|https:\\/\\/youtu.be\\/)([a-zA-Z0-9_\\-]+)/','<p><a href=\"$0\">Watch on YouTube: $0<br /><img src=\"https://img.youtube.com/vi/$2/mqdefault.jpg\" width=\"320\" height=\"180\" /></a></p>',$mail[\"html\"]);\n\n\tif(rsvpmail_is_problem($mail[\"to\"]) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\trsvpmailer($mail,__('<div class=\"rsvpexplain\">This message was sent to you as a follow up to your registration for','rsvpmaker').' '.$event_post->post_title.'</div>' );\n}\n\nfunction rsvpmaker_email_content ($atts, $content) {\nglobal $wp_filter;\nglobal $post;\nglobal $templatefooter;\n$templatefooter = isset($atts[\"templatefooter\"]);\nglobal $rsvpmaker_tx_content;\nif(!empty($rsvpmaker_tx_content))\n\treturn $rsvpmaker_tx_content;\nif(function_exists('bp_set_theme_compat_active'))\nbp_set_theme_compat_active( false );//stop buddypress from causing trouble\n\nob_start();\n$corefilters = array('convert_chars','wpautop','wptexturize','event_content');\nforeach($wp_filter[\"the_content\"] as $priority => $filters)\n\tforeach($filters as $name => $details)\n\t\t{\n\t\t//keep only core text processing or shortcode\n\t\tif(!in_array($name,$corefilters) && !strpos($name,'hortcode'))\n\t\t\t{\n\t\t\tif(isset($_GET[\"debug\"]))\n\t\t\t\techo '<br />Remove '.$name.' '.$priority;\n\t\t\t$r = remove_filter( 'the_content', $name, $priority );\n\t\t\t}\n\t\t}\nif(isset($_GET[\"debug\"])) {\n\techo '<pre>';\n\t//print_r($wp_filter);\n\techo '</pre>';\n}\n\nglobal $rsvp_options;\n\n?>\n<!-- editors note goes here -->\n<div id=\"post-<?php the_ID(); ?>\" <?php post_class(); ?>>\n<?php if(get_post_meta($post->ID,\"_email_headline\",true)) { ; ?>\n<h1 class=\"entry-title\"><?php the_title(); ?></h1>\n<?php } ; ?>\n<div class=\"entry-content\">\n<?php echo wp_kses_post($post->post_content); ?>\n</div><!-- .entry-content -->\n</div><!-- #post-## -->\n<div class=\"footer\"><!-- footer --></div>\n<?php \n$content = ob_get_clean();\nif(function_exists('do_blocks'))\n\t$content = do_blocks($content);\n$content = str_replace('<img ','<img style=\"display: block; max-width: 90%;\" ',$content);\nreturn $content;\n}\n\nfunction mailchimp_list_dropdown($apikey, $chosen = '') {\nif(empty($apikey))\n\treturn '<option value=\"\">none</option>';\ntry {\n    $MailChimp = new MailChimpRSVP($apikey);\n} catch (Exception $e) {\n    return '<option value=\"\">none '.$e->getMessage().'</option>';\n}\n\n$retval = $MailChimp->get('lists');\n\n$options = '';\nif (is_array($retval)){\n\tforeach ($retval[\"lists\"] as $list){\n\t\t$s = ($chosen == $list['id']) ? ' selected=\"selected\" ' : '';\n\t\t$options .=  '<option value= \"'.esc_attr($list['id']).'\"'. \" $s >\".esc_html($list['name']).'</option>';\n\t}\n}\nreturn $options;\n}\n\nfunction event_to_embed($post_id, $event_post = NULL, $context = '') {\n\t\tglobal $email_context;\n\t\tglobal $rsvp_options;\n\t\tglobal $post;\n\t\t$backup = $post;\n\t\t$email_context = true;\n\t\tif(empty($event_post))\n\t\t\t$event_post = get_post($post_id);\n\t\t$event_embed[\"subject\"] = $event_post->post_title;\n\t\t$event_embed[\"content\"] = sprintf('<!-- wp:heading -->\n<h2 class=\"email_event\"><a href=\"%s\">%s</a></h2>\n<!-- /wp:heading -->'.\"\\n\",get_permalink($post_id),apply_filters('the_title',$event_post->post_title));\n\t\tif($event_post->post_type == 'rsvpmaker')\n\t\t{\n\t\t$date_array = rsvp_date_block($post_id);\n\t\t$dateblock = trim(strip_tags($date_array[\"dateblock\"]));\n\t\t$dur = $date_array[\"dur\"];\n\t\t$last_time = $date_array[\"last_time\"];\n\t\t$tmlogin = (strpos($event_post->post_content,'[toastmaster')) ? sprintf('<!-- wp:paragraph -->\n<p><a href=\"%s\">Login</a> to sign up for roles</p>\n<!-- /wp:paragraph -->',wp_login_url( get_post_permalink( $post_id ) ) ) : '';\n\t\t$event_embed[\"content\"] .= sprintf('<!-- wp:paragraph -->\n<p><strong>%s</strong></p>\n<!-- /wp:paragraph -->',$dateblock).$tmlogin;\t\t\t\n\t\t}\n\t\t$event_embed[\"content\"] .= do_blocks(do_shortcode($event_post->post_content));\n\t\tif(get_rsvpmaker_meta($post_id,'_rsvp_on',true))\n\t\t{\n\t\tif(get_post_meta($post_id,'_rsvp_count',true))\n\t\t\t$event_embed[\"content\"] .= rsvpcount($post_id);\n\t\tif($context != 'confirmation')\n\t\t\t{ // add the rsvp button / link except in confirmation messages that include Update RSVP version\n\t\t\t\t$rsvplink = get_rsvp_link($post_id);\n\t\t\t\t$event_embed[\"content\"] .= \"<!-- wp:paragraph -->\\n\".$rsvplink.\"\\n<!-- /wp:paragraph -->\";\t\t\n\t\t\t}\n\t\t}\n\t\t$post = $backup;\n\t\tif(function_exists('do_blocks')){\n\t\t\t$event_embed[\"content\"] = do_blocks($event_embed[\"content\"]);\t\t\t\n\t\t}\n\t\telse \n\t\t$event_embed[\"content\"] = wpautop($event_embed[\"content\"]);\n\t\t$post = $backup;\n\t\treturn $event_embed;\n}\n\nfunction rsvpmaker_upcoming_email($atts) {\n\t$output = '';\n\t$weeks = (empty($atts[\"weeks\"])) ? 4 : $atts[\"weeks\"];\n\t$end = date('Y-m-d',rsvpmaker_strtotime('+'.$weeks.' weeks')). ' 23:59:59';\n\t$upcoming = get_future_events(' a1.meta_value < \"'.$end.'\"');\n\tif(is_array($upcoming))\n\tforeach($upcoming as $embed)\n\t\t{\n\t\t$event = event_to_embed($embed->ID,$embed);\n\t\t$output .= $event[\"content\"].\"\\n\\n\";\n\t\t}\n\tif(isset($atts[\"looking_ahead\"]))\n\t\t{\n\t\t\t$weeksmore = $atts[\"looking_ahead\"];\n\t\t\t$label = (empty($atts[\"looking_ahead_label\"])) ? '<h2>Looking Ahead</h2>' : '<h2 class=\"looking_ahead\">'.$atts[\"looking_ahead_label\"].'</h2>';\n\t\t\t$extra = date('Y-m-d',rsvpmaker_strtotime($end .' +'.$weeksmore.' weeks')). ' 23:59:59';\n\t\t\t$upcoming = get_future_events(' a1.meta_value > \"'.$end .'\" AND  a1.meta_value < \"'.$extra.'\"');\n\t\t\tif(is_array($upcoming))\n\t\t\t\t{\n\t\t\t\t\t$output .= $label.\"\\n\";\n\t\t\t\t\tforeach($upcoming as $ahead)\n\t\t\t\t\t\t$output .= sprintf('<p><a href=\"%s\">%s - %s</a></p>',get_permalink($ahead->ID),$ahead->post_title,date('F j',rsvpmaker_strtotime($ahead->datetime)));\n\t\t\t\t}\n\t\t}\t\n\treturn $output;\n}\n\nfunction is_email_context () {\n\t\tglobal $email_context;\n\t\treturn (isset($email_context) && $email_context);\n}\n\nfunction rsvpmaker_cron_email_send($post_id) {\nglobal $rsvpmaker_cron_context;\nglobal $wp_query;\n$rsvpmaker_cron_context = 2; // 2 means send live\n$wp_query = new WP_Query( array('post_type' => 'rsvpemail','p' => $post_id) );\ninclude plugin_dir_path(__FILE__) . 'rsvpmaker-email-template.php';\n}\n\nfunction rsvpmaker_cron_email_preview($args) {\nglobal $rsvpmaker_cron_context;\nglobal $wp_query;\n$rsvpmaker_cron_context = 1; // 1 means preview\nif(isset($args['post_id']))\n\t$post_id = $args['post_id'];\nelse\n\t$post_id = (int) $args;// single argument comes as single value\n$wp_query = new WP_Query( array('post_type' => 'rsvpemail','p' => $post_id) );\ninclude plugin_dir_path(__FILE__) . 'rsvpmaker-email-template.php';\n}\n\nfunction rsvpmaker_cron_email_preview_now() {\n\tif(isset($_GET['cronemailpreview']))\n\t{\n\t\trsvpmaker_cron_email_preview(sanitize_text_field($_GET['cronemailpreview']));\n\t\tdie('scheduled email preview');\n\t}\n}\n\nadd_filter( 'post_row_actions', 'rsvpmaker_row_actions', 10, 2 );\nfunction rsvpmaker_row_actions( $actions, WP_Post $post ) {\n\tglobal $current_user;\n    if ($post->post_type == 'rsvpemail') {\n        return $actions;\n    }\n\tif(current_user_can('edit_post',$post->ID))\n\t{\n\t\tif($post->post_type == 'rsvpmaker') {\n\t\t\t$actions['rsvpmaker_options'] = sprintf('<a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=').$post->ID,__('Event Options','rsvpmaker'));\n\t\t\t$actions['rsvpmaker_invite2'] = sprintf('<a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpemail&rsvpevent_to_email=').$post->ID,__('Embed in RSVP Email','rsvpmaker'));\t\n\t\t\t}\n\t\t$actions['rsvpmaker_invite'] = sprintf('<a href=\"%s\">%s</a>',admin_url('edit.php?post_type=rsvpemail&post_to_email=').$post->ID,__('Copy to RSVP Email','rsvpmaker'));\n\t}\n\telse {\n\tif($post->post_type == 'rsvpmaker')\n\t{\n\t\t$eds = get_additional_editors($post->ID);\n\t\tif(!empty($eds) && in_array($current_user->ID,$eds))\n\t\t\t$actions['edit_override'] = sprintf('<a href=\"%s\">%s</a>',admin_url('post.php?action=edit&post=').$post->ID,__('Edit','rsvpmaker'));\n\t}\n\t}\nreturn $actions;\n}\n\n//based on Austin Matzko's code from wp-hackers email list\nfunction filter_where_recent($where = '') {\nglobal $blog_weeks_ago;\n\nif(0 == (int) $blog_weeks_ago)\n\t$blog_weeks_ago = 1;\n\t$week_ago_stamp = rsvpmaker_strtotime('-'.$blog_weeks_ago.' week');\n\t$week_ago = date('Y-m-d H:i:s',$week_ago_stamp);\n    $where .= \" AND post_date > '\" . $week_ago . \"'\";\n    return $where;\n}\n\nfunction get_rsvp_notekey() {\n\tglobal $post, $rsvpmaker_cron_context;\n\t\n\tif(!empty($rsvpmaker_cron_context) && $rsvpmaker_cron_context == 2)\n\t{\n\t\t$notekey = 'editnote'.date('YmdH',time()); // live not preview broadcast or editing\n\t}\n\telse {\n\t\t$stamp = rsvpmaker_next_scheduled($post->ID, true);\n\t\t//$stamp = preg_replace('/M [a-z]+$/','M',$stamp);\n\t\t$notekey = 'editnote'.date('YmdH',$stamp);//date('YmdH',rsvpmaker_strtotime($stamp));\n\t}\n\treturn $notekey;\n}\n\nfunction rsvpmaker_recent_blog_posts ($atts) {\nglobal $wp_query;\nglobal $post;\n$backup = $wp_query;\n$was = $post;\nglobal $blog_weeks_ago;\n$blog_weeks_ago = (!empty($atts[\"weeks\"])) ? $atts[\"weeks\"] : 1;\n\n$ts = rsvpmaker_next_scheduled($post->ID);\n$cron = get_post_meta($post->ID,'rsvpmaker_cron_email',true);\n$notekey = get_rsvp_notekey();\n$chosen = (int) get_post_meta($post->ID,$notekey,true);\n\nadd_filter('posts_where', 'filter_where_recent');\nquery_posts('post_type=post');\nif (have_posts()) :\nwhile (have_posts()) : the_post(); \nif($post->ID == $chosen)\n\t{\n\tcontinue;\n\t}\nif($post->comment_count)\n\t$c = sprintf(\" (%d comments)\",$post->comment_count);\nelse\n\t$c = \"\";\n$output .= '<h4><a href=\"'. get_permalink() .'\" rel=\"bookmark\">'. get_the_title() .'</a> By '. get_the_author() . $c . \"</h4>\\n<p>\".get_the_excerpt().\"</p>\\n\";\n endwhile;\nendif;\nremove_filter('posts_where', 'filter_where_recent');\nif(!empty($output))\n\t$output = '<h3>'.__('From the Blog','rsvpmaker').\"</h3>\\n\".$output;\n$wp_query = $backup;\n$post = $was;\nreturn $output;\n}\n\nfunction rsvpmaker_cron_active ($cron_active,$cron){\nif(empty($cron[\"cron_condition\"]) || ($cron[\"cron_condition\"] == 'none'))\n\treturn $cron_active;\nif(! $cron_active)\n\treturn $cron_active;\nif($cron[\"cron_condition\"] == 'events')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn count_future_events();\n\t}\nelseif($cron[\"cron_condition\"] == 'posts')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn count_recent_posts();\n\t}\nelseif($cron[\"cron_condition\"] == 'and')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn (count_recent_posts() && count_future_events()) ? 1 : 0;\n\t}\nelseif($cron[\"cron_condition\"] == 'or')\n\t{\n\tif(!empty($_GET[\"cron_filter_debug\"]))\n\techo \"<p>test:\".$cron[\"cron_condition\"].\"</p>\";\n\treturn (count_recent_posts() || count_future_events()) ? 1 : 0;\n\t}\nreturn $cron_active;\n}\nadd_filter('rsvpmaker_cron_active','rsvpmaker_cron_active',5,2);\n\nfunction rsvpmail_unsubscribe () {\nif(!isset($_REQUEST['rsvpmail_unsubscribe']))\n\treturn;\n?>\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title><?php bloginfo( 'name' ); echo ' - '.__('Email Unsubscribe'); ?></title>\n<style>\nbody {background-color: #000;}\n#main {background-color: #FFF; max-width: 600px; margin-left: auto; margin-right: auto; margin-top: 25px; padding: 25px;}\nh1 {font-size: 20px;}\n</style>\n</head>\n<body>\n<div id=\"main\">\n<h1><?php bloginfo( 'name' ); echo ' - '.__('Email Unsubscribe'); ?></h1>\n<?php\nif(isset($_POST['rsvpmail_unsubscribe']) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n{\n$e = sanitize_text_field(strtolower(trim($_POST['rsvpmail_unsubscribe'])));\nif(!is_email($e))\n\techo 'Error: invalid email address';\nelse\n\t{\n\trsvpmail_add_problem($e,'unsubscribed');\n\techo '<p>'.__('Unsubscribed from website email lists','rsvpmaker').'</p>';\n\t$msg = 'RSVPMaker unsubscribe: '.$e;\n\t$chimp_options = get_option('chimp');\n\tif(!empty($chimp_options) && !empty($chimp_options[\"chimp-key\"]))\n\t{\n\t$apikey = $chimp_options[\"chimp-key\"];\n\t$listId = $chimp_options[\"chimp-list\"];\n\t$MailChimp = new MailChimpRSVP($apikey);\n\t$result = $MailChimp->patch(\"lists/$listId/members/\".md5(strtolower($e)), array(\n\t\t\t\t'status' => 'unsubscribed'));\n\tif($MailChimp->success())\n\t\t{\n\t\techo '<p>'.__('Unsubscribed from MailChimp email list','rsvpmaker').': '.esc_html($listId).'</p>';\n\t\t$msg .= \"\\n\\nRemoved from MailChimp list\";\n\t\t}\n\telse\n\t\t{\n\t\techo '<p>'.__('Error attempting to unsubscribe from MailChimp email list','rsvpmaker').': '.esc_html($listId).'</p>';\t\n\t\t$msg .= \"\\n\\nMailChimp unsubscribe error\";\n\t\t}\n\t}\n\n\twp_mail(get_option('admin_email'), $e.' '.__('unsubscribed','rsvpmaker').': '.get_option('blogname').' (RSVPMaker)',$msg);\n\n\tdo_action('rsvpmail_unsubscribe',$e);\n\t}\n}\nif(isset($_GET['rsvpmail_unsubscribe']))\n{\n$e = sanitize_text_field(trim($_GET['rsvpmail_unsubscribe']));\n?>\n<form method=\"post\" action=\"<?php echo site_url(); ?>\">\n<?php rsvpmaker_nonce(); ?>\n<input type=\"text\" name=\"rsvpmail_unsubscribe\" value=\"<?php echo esc_attr($e); ?>\">\n<button><?php esc_html_e('Unsubscribe','rsvpmaker'); ?></button>\n</form>\n<?php\n}\n\nprintf('<p>%s <a href=\"%s\">%s</a></p>',__('Continue to','rsvpmaker'),site_url(),site_url());\n\n?>\n</div>\n</body>\n</html>\n<?php\nexit();\n}\n\nadd_action('init','rsvpmail_unsubscribe');\n\nfunction rsvpmaker_notification_templates () {\n\n$hook = rsvpmaker_admin_page_top(__('Notification Templates','rsvpmaker'));\necho '<p>'.__('Use this form to customize notification and confirmation messages and the information to be included in them. Template placeholders such as [rsvpdetails] are documented at the bottom of the page.').'</p>';\n\t\n$sample_data = array('rsvpdetails' => \"first: John\\nlast: Smith\\nemail:js@example.com\",'rsvpyesno' => __('YES','rsvpmaker'), 'rsvptitle' => 'Special Event', 'rsvpdate' => 'January 1, 2020','rsvpmessage' => 'Thank you!', 'rsvpupdate' => '<p><a style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\" class=\"rsvplink\" href=\"%s\">'. __('RSVP Update','rsvpmaker').'</a></p>');\n$sample_data = apply_filters('rsvpmaker_notification_sample_data',$sample_data);\n$template_forms = get_rsvpmaker_notification_templates ();\nprintf('<form id=\"rsvpmaker_notification_templates\" action=\"%s\" method=\"post\">',admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_notification_templates'));\nrsvpmaker_nonce();\nforeach($template_forms as $slug => $form)\n\t{\n\tif(!is_array($form))\n\t\tcontinue;\n\techo '<div style=\"border: thin dotted #555; margin-bottom: 5px;\">';\n\tprintf('<h2>%s</h2>',ucfirst(str_replace('_',' ',$slug)));\n\tforeach($form as $field => $value)\n\t\t{\n\t\t\tprintf('<div>%s</div>',ucfirst(str_replace('_',' ',$field)));\n\t\t\tif($field == 'body')\n\t\t\t\techo '<p><textarea name=\"ntemp['.$slug.']['.$field.']\" style=\"width: 90%; height: 100px;\">'.esc_attr($value).'</textarea></p>';\n\t\t\telseif($field == 'sample_data')\n\t\t\t\t$sample_data = $value;\n\t\t\telse\n\t\t\t\techo '<p><input type=\"text\" name=\"ntemp['.$slug.']['.$field.']\" value=\"'.esc_attr($value).'\" style =\"width: 90%\" /></p>';\n\t\t}\n\tif(isset($_GET[$slug]))\n\t{\n\techo '<h3>Example</h3>';\n\t$example = '<p><strong>Subject: </strong>'.$form['subject'].\"</p>\\n\\n\".$form['body'];\n\tforeach($sample_data as $field => $value)\n\t\t$example = str_replace('['.$field.']',$value,$example);\n\t\n\t$example = wpautop($example);\n\techo do_blocks(do_shortcode($example));\n\t}\n\techo '</div>';//end border\n\n\t}\n\tprintf('<h3>%s: <input type=\"text\" name=\"newtemplate_label\"></h3>',__('Custom Label','rsvpmaker-for-toastmasters'));\n\techo '<p>Subject<br /><input type=\"text\" name=\"newtemplate[subject]\" value=\"\" style =\"width: 90%\" /></p>';\n\techo '<p>Body<br /><textarea name=\"newtemplate[body]\" style=\"width: 90%; height: 100px;\"></textarea></p>';\n\necho submit_button().'</form>';\n\nprintf('<p><a href=\"%s\">Reset to defaults</a></p>',admin_url('edit.php?post_type=rsvpemail&page=rsvpmaker_notification_templates&reset=1'));\necho   '<p>'.__(\"RSVPMaker template placeholders:<br />[rsvpyesno] YES/NO<br />[rsvptitle] event post title<br />[rsvpdate] event date<br />[datetime] event date and time<br />[rsvpmessage] the message you supplied when you created/edited the event (default is Thank you!)<br />[rsvpdetails] information supplied by attendee<br />[rsvpupdate] button users can click on to update their RSVP<br />[rsvpcount] number of people registered<br />[event_title_link] a link to the event, with the event title and date/time\",'rsvpmaker').'</p>';\necho '<p>[rsvpmessage] and [rsvpdetails] should only be used in a notification template. Other codes can be used in the body of a confirmation message or the subject line of a reminder.</p>';\ndo_action('rsvpmaker_notification_templates_doc');\nrsvpmaker_admin_page_bottom($hook);\n}\n\nfunction get_rsvpmaker_notification_templates () {\nglobal $email_context;\n$email_context = true;\n$templates = get_option('rsvpmaker_notification_templates');\n//$template_forms represents the defaults\n$template_forms['notification'] = array('subject' => 'RSVP [rsvpyesno] for [rsvptitle] on [rsvpdate]','body' => \"Just signed up:\\n\\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]</div>\");\n$template_forms['confirmation'] = array('subject' => 'Confirming RSVP [rsvpyesno] for [rsvptitle] on [rsvpdate]','body' => \"<div class=\\\"rsvpmessage\\\">[rsvpmessage]</div>\\n\\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]</div>\\n\\nIf you wish to change your registration, you can do so using the button below. [rsvpupdate]\");\n$template_forms['confirmation_after_payment'] = array('subject' => 'Confirming payment for [rsvptitle] on [rsvpdate]','body' => \"<div class=\\\"rsvpmessage\\\">[rsvpmessage]</div>\\n\\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]</div>\\n\\nIf you wish to change your registration, you can do so using the button below. [rsvpupdate]\");\n$template_forms['payment_reminder'] = array('subject' => 'Payment Required: [rsvptitle] on [rsvpdate]','body' => \"We received your registration, but it is not complete without a payment. Please follow the link below to complete your registration and payment.\n\n[rsvpupdate]\n\n<div class=\\\"rsvpdetails\\\">[rsvpdetails]<div>\");\nif(isset($_GET['reset']))\n\t{\n\n\t}\n\n$template_forms = apply_filters('rsvpmaker_notification_template_forms',$template_forms);\nif(empty($templates))\n\treturn $template_forms;\nif(isset($_GET['reset']))\n\t{\n\t\t$templates = $template_forms;\n\t\tupdate_option('rsvpmaker_notification_templates',$templates);\n\t}\nelse {\n\t//fill in the blanks\n\tforeach($template_forms as $slug => $form)\n\t{\n\tforeach($form as $field => $value)\n\t\t{\n\t\t\tif(empty($templates[$slug][$field]))\n\t\t\t\t$templates[$slug][$field] = $template_forms[$slug][$field];\n\t\t}\n\t}\n}\nreturn $templates;\n}\n\nfunction rsvpcount ($atts) {\nglobal $wpdb;\nglobal $post;\nif(isset($atts['post_id']))\n\t$post_id = (int) $atts['post_id'];\nelseif(!empty($atts) && is_numeric($atts))\n\t$post_id = $atts;\nelse\n\t$post_id = $post->ID;\n\t\nif(!$post_id)\n\treturn;\n$sql = \"SELECT count(*) FROM \".$wpdb->prefix.\"rsvpmaker WHERE event=$post_id AND yesno=1 ORDER BY id DESC\";\n$total = (int) $wpdb->get_var($sql);\n$rsvp_max = get_post_meta($post_id,'_rsvp_max',true);\n$output = $total.' '.__('signed up so far.','rsvpmaker');\nif($rsvp_max)\n\t$output .= ' '.__('Limit','rsvpmaker').': '.$rsvp_max;\nreturn '<p class=\"signed_up\">'.$output.'</p>';\n}\n\nfunction rsvp_notifications_via_template ($rsvp,$rsvp_to,$rsvpdata) {\nglobal $post;\nglobal $rsvp_options;\ninclude_once 'rsvpmaker-ical.php';\n\n$templates = get_rsvpmaker_notification_templates();\n\n$notification_subject = $templates['notification']['subject']; \nforeach($rsvpdata as $field => $value)\n\t$notification_subject = str_replace('['.$field.']',$value,$notification_subject);\n\n$notification_body = $templates['notification']['body']; \nforeach($rsvpdata as $field => $value)\n\t$notification_body = str_replace('['.$field.']',$value,$notification_body);\n\t$notification_body = do_blocks(do_shortcode($notification_body));\n\n\t$rsvp_to_array = explode(\",\", $rsvp_to);\n\tforeach($rsvp_to_array as $to)\n\t{\n\t$mail[\"to\"] = $to;\n\t$mail[\"from\"] = $rsvp[\"email\"];\n\t$mail[\"fromname\"] = $rsvp[\"first\"].' '.$rsvp[\"last\"];\n\t$mail[\"subject\"] = $notification_subject;\n\t$mail[\"html\"] = wpautop($notification_body);\n\trsvpmaker_tx_email($post, $mail);\n\t}\n\n$send_confirmation = get_post_meta($post->ID,'_rsvp_rsvpmaker_send_confirmation_email',true);\n$confirm_on_payment = get_post_meta($post->ID,'_rsvp_confirmation_after_payment',true);\n\nif(($send_confirmation ||!is_numeric($send_confirmation)) && $rsvpdata['yesno'] && empty($confirm_on_payment) )//if it hasn't been set to 0, send it\n{\n$confirmation_subject = $templates['confirmation']['subject']; \nforeach($rsvpdata as $field => $value)\n\t$confirmation_subject = str_replace('['.$field.']',$value,$confirmation_subject);\n\n$confirmation_body = $templates['confirmation']['body']; \nforeach($rsvpdata as $field => $value)\n\t$confirmation_body = str_replace('['.$field.']',$value,$confirmation_body);\n\t\n\t$confirmation_body = do_blocks(do_shortcode($confirmation_body));\t\n\t$mail[\"html\"] = wpautop($confirmation_body);\n\tif(isset($post->ID)) // not for replay\n\t$mail[\"ical\"] = rsvpmaker_to_ical_email ($post->ID, $rsvp_to, $rsvp[\"email\"]);\n\t$mail[\"to\"] = $rsvp[\"email\"];\n\t$mail[\"from\"] = $rsvp_to_array[0];\n\t$mail[\"fromname\"] = get_bloginfo('name');\n\t$mail[\"subject\"] = $confirmation_subject;\n\trsvpmaker_tx_email($post, $mail);\t\n}\n\n}\n\nfunction rsvp_payment_reminder ($rsvp_id) {\nglobal $post;\nglobal $rsvp_options;\nglobal $wpdb;\n$sql = \"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE id=$rsvp_id\";\n$rsvp = (array) $wpdb->get_row($sql);\n$post = get_post($rsvp['event']);\n$rsvpdata = unserialize($rsvp['details']);\nif($rsvpdata['total'] <= $rsvp['amountpaid'])\n\treturn;\n\t\n$details = '';\nforeach($rsvpdata as $label => $value)\n\t$details .= sprintf('%s: %s'.\"\\n\",$label,$value);;\n\n$templates = get_rsvpmaker_notification_templates();\n$rsvp_to = get_post_meta($post->ID,'_rsvp_to',true);\n$rsvp_to_array = explode(\",\", $rsvp_to);\n$notification_subject = $templates['payment_reminder']['subject']; \nforeach($rsvpdata as $field => $value)\n\t$notification_subject = str_replace('['.$field.']',$value,$notification_subject);\n\n$notification_body = $templates['payment_reminder']['body']; \nforeach($rsvpdata as $field => $value)\n\t$notification_body = str_replace('['.$field.']',$value,$notification_body);\n$notification_body = str_replace('[rsvpdetails]',$details,$notification_body);\n\n$url = get_permalink($rsvp['event']);\n$url = add_query_arg('rsvp',$rsvp['id'],$url);\n$url = add_query_arg('e',$rsvp['email'],$url);\n\n$notification_body = str_replace('[rsvpupdate]',sprintf('<a href=\"%s\">Complete Registration</a>',$url),$notification_body);\n\t\n$notification_body = do_blocks(do_shortcode($notification_body)).'<p>after shortcode and blocks</p>';\n$mail[\"to\"] = $rsvp['email'];\n$mail[\"from\"] = $rsvp_to_array[0];\n$mail[\"fromname\"] = get_bloginfo('name');\n$mail[\"subject\"] = $notification_subject;\n$mail[\"html\"] = wpautop($notification_body);\nrsvpmaker_tx_email($post, $mail);\n}\n\nfunction rsvp_confirmation_after_payment ($rsvp_id) {\n\tinclude_once 'rsvpmaker-ical.php';\n\tglobal $post;\n\tglobal $rsvp_options;\n\tglobal $wpdb;\n\t$sql = \"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE id=$rsvp_id\";\n\t$rsvp = (array) $wpdb->get_row($sql);\n\t$post = get_post($rsvp['event']);\n\t$rsvpdata = unserialize($rsvp['details']);\n\n\t$guests = $wpdb->get_results(\"SELECT * FROM \".$wpdb->prefix.\"rsvpmaker WHERE master_rsvp=$rsvp_id\");\n\tif($guests) {\n\t\tforeach($guests as $guestrow) {\n\t\t\t$guestarr[] = $guestrow->first.' '.$guestrow->last;\n\t\t}\n\t\t$rsvpdata['guests'] = implode(', ',$guestarr);\n\t}\n\n\t//rsvpmaker_debug_log($rsvpdata,'rsvp_confirmation_after_payment');\n\t\t\n\t$details = '';\n\tforeach($rsvpdata as $label => $value)\n\t\t$details .= sprintf('%s: %s'.\"\\n\",$label,$value);\n\n\t$templates = get_rsvpmaker_notification_templates();\n\t$rsvp_to = get_post_meta($post->ID,'_rsvp_to',true);\n\t$rsvp_to_array = explode(\",\", $rsvp_to);\n\t$rsvpdata['rsvpmessage'] = '';\n\t$message_id = get_post_meta($post->ID,'_rsvp_confirm',true);\n\tif($message_id)\n\t{\n\t  $message_post = get_post($message_id);\n\t  $rsvpdata['rsvpmessage'] .= do_blocks($message_post->post_content).\"\\n\\n\";\n\t}\n\t$message_id = get_post_meta($post->ID,'payment_confirmation_message',true);\n\tif($message_id)\n\t{\n\t  $message_post = get_post($message_id);\n\t  $rsvpdata['rsvpmessage'] .= do_blocks($message_post->post_content);\n\t}\n\n\t$notification_subject = $templates['confirmation_after_payment']['subject'];\n\tforeach($rsvpdata as $field => $value)\n\t\t$notification_subject = str_replace('['.$field.']',$value,$notification_subject);\n\t\n\t$notification_body = $templates['confirmation_after_payment']['body']; \n\tforeach($rsvpdata as $field => $value)\n\t\t$notification_body = str_replace('['.$field.']',$value,$notification_body);\n\t$notification_body = str_replace('[rsvpdetails]',$details,$notification_body);\n\t\n\t$url = get_permalink($rsvp['event']);\n\t$url = add_query_arg('rsvp',$rsvp['id'],$url);\n\t$url = add_query_arg('e',$rsvp['email'],$url);\n\t\n\t$notification_body = str_replace('[rsvpupdate]',sprintf('<a href=\"%s\">Complete Registration</a>',$url),$notification_body);\t\n\t$notification_body = do_blocks(do_shortcode($notification_body));\n\n\t$mail[\"to\"] = $rsvp['email'];\n\t$mail[\"from\"] = $rsvp_to_array[0];\n\t$mail[\"fromname\"] = get_bloginfo('name');\n\t$mail[\"ical\"] = rsvpmaker_to_ical_email ($post->ID, $rsvp_to, $rsvp[\"email\"]);\n\t$mail[\"subject\"] = $notification_subject;\n\t$mail[\"html\"] = $payment_confirmation_message . wpautop($notification_body);\n\trsvpmaker_tx_email($post, $mail);\t\n}\n\nadd_action('init','rsvp_payment_reminder_test');\nfunction rsvp_payment_reminder_test () {\n\tif(!isset($_GET['payrem']))\n\t\treturn;\n\trsvp_payment_reminder(sanitize_text_field($_GET['payrem']));\n}\n\nadd_action('rsvp_payment_reminder','rsvp_payment_reminder',10,1);\n\nfunction rsvpmaker_payment_reminder_cron ($rsvp_id) {\n\t$time = rsvpmaker_strtotime('+30 minutes');\n\twp_clear_scheduled_hook( 'rsvp_payment_reminder',array($rsvp_id) );\n\twp_schedule_single_event($time,'rsvp_payment_reminder',array($rsvp_id));\n}\n\nfunction previewtest () {\n\t\trsvpmaker_cron_email_preview(array('post_id' => (int) $_GET['rsvpmaker_cron_email_preview']));\n\t\tdie('preview end');\n}\n\nfunction check_mailchimp_email ($email) {\n$chimp_options = get_option('chimp');\n$apikey = $chimp_options[\"chimp-key\"];\n$listId = $chimp_options[\"chimp-list\"];\n$email = trim(strtolower($email));\n$MailChimp = new MailChimpRSVP($apikey);\t\n$member = $MailChimp->get(\"/lists/\".$listId.\"/members/\".md5($email));\nif(isset($_GET['debug']))\n{\n\techo '<pre>';\n\t//print_r($member);\n\techo '</pre>';\n}\nif (!empty($member[\"id\"]) && ($member[\"status\"] == 'subscribed'))\n\treturn $member;\nelse\n\treturn false;\n}\n\n//weed out filters that don't belong in email\nfunction email_content_minfilters() {\n\tglobal $wp_filter, $post, $email_context;\n\t$log = '';\n\t\t$corefilters = array('convert_chars','wpautop','wptexturize','event_content','\n\t\twp_make_content_images_responsive');\n\t\tforeach($wp_filter[\"the_content\"] as $priority => $filters)\n\t\t\tforeach($filters as $name => $details)\n\t\t\t\t{\n\t\t\t\tif(!in_array($name,$corefilters) && !strpos($name,'hortcode') && !strpos($name,'lock'))//don't mess with block/shortcode processing\n\t\t\t\t\t{\n\t\t\t\t\t$r = remove_filter( 'the_content', $name, $priority );\n\t\t\t\t\t}\n\t\t\t\t}\t\n}\n\nfunction rsvpmailer_template_preview() {\n\tglobal $wpdb;\n\tif(isset($_GET['preview_broadcast_in_template'])) {\n\t\t$template = (int) $_GET['preview_broadcast_in_template'];\n\t\t$title = 'Demo: Broadcast Email Message';\n\t\t$id = $wpdb->get_var(\"SELECT ID FROM $wpdb->posts WHERE post_title='$title' \");\n\t\tif(!$id) {\n\t\t\t$postarray['post_title'] = $title;\n\t\t\t$postarray['post_status'] = 'publish';\n\t\t\t$postarray['post_type'] = 'rsvpemail';\n\t\t\t$postarray['post_content'] = '<!-- wp:paragraph {\"dropCap\":true,\"fontSize\":\"larger\"} -->\n\t\t\t<p class=\"has-drop-cap has-larger-font-size\">You have a story to tell about your business, its products, and its services. The catch is the story can\\'t be all about you.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Product features and service quality are important, but you are not the hero of the story. Your customers and future customers must be able to see themselves as the heroes. Your nifty product may be the hot rod spaceship that will ensure their victory, but you want them to envision themselves at the controls.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Technology companies often let their marketing get lost in the details. We help them tell stories that matter.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Our storytellers pay attention to the details, of course, and seek a deep understanding of them. But not all details are equally important. Not all details help tell a clear, convincing story.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p><a href=\"https://www.carrcommunications.com/tell-us-your-story/\">Tell us your story</a>, the way you tell it today, or the story you want to take to the market. We will help you tell it better, or suggest a different story that would be more effective.</p>\n\t\t\t<!-- /wp:paragraph -->\n\t\t\t\n\t\t\t<!-- wp:paragraph -->\n\t\t\t<p>Learn how <a href=\"https://carrcommunications.com\">Carr Communications</a> can help you tell a clear, convincing story.</p>\n\t\t\t<!-- /wp:paragraph -->';\n\t\t\t$id = wp_insert_post($postarray);\n\t\t}\n\t\t$permalink = get_permalink($id);\n\t\twp_redirect(add_query_arg('template_preview',1,$permalink));\n\t\texit;\n\t}\n\tif(isset($_GET['preview_confirmation_in_template'])) {\n\t\tglobal $rsvp_options;\n\t\t$template = (int) $_GET['preview_confirmation_in_template'];\n\t\t$title = 'RSVP YES for Demo Event Confirmation on April 1';\n\t\t$id = $wpdb->get_var(\"SELECT ID FROM $wpdb->posts WHERE post_title='$title' \");\n\t\tif(!$id || isset($_GET['reset'])) {\n\t\t\t$postarray['post_title'] = $title;\n\t\t\t$postarray['post_status'] = 'publish';\n\t\t\t$postarray['post_type'] = 'rsvpemail';\n\t\t\t$postarray['post_content'] = '<div class=\"rsvpmessage\">\n\t\t\t<p>Thank you! [your confirmation message here]</p>\n\t\t\t</div>\n\t\t\t<div class=\"rsvpdetails\">First Name: David F.<br>\n\t\t\tLast Name: Carr<br>\n\t\t\tEmail: david@carrcommunications.com<br>\n\t\t\tGuests: Beth Anne Carr, Theresa Carr</div>\n\t\t\t<p><em>If you wish to change your registration, you can do so using the button below. </em></p>\n\t\t\t<p><a class=\"rsvplink\" href=\"https://dev.local/rsvpmaker/gallery-talk-edouard-manet/?e=*EMAIL*#rsvpnow\" style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\">'.$rsvp_options['update_rsvp'].'</a></p>';\n\t\t\tif( isset($_GET['reset']) )\n\t\t\t{\n\t\t\t\t$postarray[\"ID\"] = $id;\n\t\t\t\twp_update_post($postarray);\n\t\t\t}\n\t\t\telse\n\t\t\t\t$id = wp_insert_post($postarray);\n\t\t}\n\t\tupdate_post_meta($id,'_email_template',$template);\n\t\t$permalink = get_permalink($id);\n\t\twp_redirect(add_query_arg('template_preview',1,$permalink));\n\t\texit;\n\t}\n}\n\nfunction event_title_link () {\n\tglobal $post, $rsvp_options;\n\t$time_format = $rsvp_options[\"time_format\"];\n\t$add_timezone = get_rsvpmaker_meta($post->ID,'_add_timezone',true);\t\n\tif(!strpos($time_format,'T') && $add_timezone )\n\t\t{\n\t\t$time_format .= ' T';\n\t\t}\n\t$t = get_rsvpmaker_timestamp($post->ID);\n\t$display_date = utf8_encode(rsvpmaker_date($rsvp_options[\"long_date\"].' '.$time_format,$t));\n\t$permalink = get_permalink($post->ID);\n\treturn sprintf('<p class=\"event-title-link\"><a href=\"%s\">%s - %s</a></p>',$permalink,esc_html($post->post_title),esc_html($display_date));\n}\n\nfunction rsvpmaker_mailchimp_init() {\n$chimp_options = get_option('chimp');\nif(empty($chimp_options[\"chimp-key\"]))\n\treturn;\n$apikey = $chimp_options[\"chimp-key\"];\nreturn new MailChimpRSVP($apikey);\n}\n\nfunction rsvptitle_shortcode($atts) {\n\tglobal $post;\n\treturn esc_html($post->post_title);\n}\n\nfunction rsvpdate_shortcode($atts = array()) {\n\tglobal $post, $rsvp_options;\n\t$format = empty($atts['format']) ? $rsvp_options['long_date'] : $atts['format'];\n\t$daterow = get_rsvpmaker_event($post->ID);\n\t$start_date = preg_replace('/ .+/','',$daterow->date);//date not time\n\t$end_date = preg_replace('/ .+/','',$daterow->enddate);//date not time\n\t$t = (int) $daterow->ts_start;\n\tif($start_date == $end_date){\n\t\treturn rsvpmaker_date($format,$t);\n\t}\n\telse {\n\t\t$endt = (int) $daterow->ts_end;\n\t\treturn rsvpmaker_date($format,$t).' - '.rsvpmaker_date($format,$endt);\n\t}\n}\n\nfunction rsvpdatetime_shortcode($atts) {\n\tglobal $post, $rsvp_options;\n\t$format = empty($atts['format']) ? $rsvp_options['long_date'].' '.$rsvp_options['time_format'] : $atts['format'];\n\t$t = get_rsvpmaker_timestamp($post->ID);\n\treturn rsvpmaker_date($format,$t);\n}\n\nfunction rsvpmaker_cronmail_check_duplicate($content) {\n\t$key = 'cronemail'.md5($content);\n\t$found = get_transient($key);\n\tif($found)\n\t\treturn true;\n\tset_transient($key,time()); // used to set content\n\treturn false;\n}\n\nfunction rsvpmailer_preview($atts = array()) {\nglobal $post, $rsvpmaker_tx_content;\n$preview = get_post_meta($post->ID,'_rsvpmailer_preview',true);\nif(empty($preview)) {\n\nif(!empty($rsvpmaker_tx_content))\n\t$preview = $rsvpmaker_tx_content;\nelse\n\t$preview = trim(strip_tags($post->post_content));\n$preview = trim(strip_tags($preview));\nif(strlen($preview) > 200)\n\t$preview = substr($preview,0,200).' ...';\n}\nreturn $preview;\n}\n\nadd_shortcode('rsvpmailer_preview','rsvpmailer_preview');\n\nfunction rsvpmailer_block_styles() {\n\tglobal $rsvmailer_css;\n\tif(!empty($rsvmailer_css))\n\t\treturn $rsvmailer_css;\n\t$site_url = site_url();\n\t$updir = wp_get_upload_dir()['basedir'];\n\t$home_path = preg_replace('/wp-content.+/','',$updir);\n\t$wp_styles = wp_styles();\n\t$combined = '';\n\tforeach($wp_styles->queue as $handle) {\n\t\t$item = $wp_styles->registered[$handle]->src;\n\t\t$combined .= \"/* url $item */\\n\";\n\t\tif(strpos($item,'ttp') && !strpos($item,$_SERVER['SERVER_NAME']))\n\t\t\tcontinue; // ignore reference to external domains\n\t\t$item = $home_path.str_replace($site_url,'',$item);\n\t\tif(strpos($home_path,'\\\\'))\n\t\t\t$item = str_replace('/','\\\\',$item);\n\t\t$item = str_replace(\"//\",\"/\",$item);\n\t\t$item = str_replace(\"\\\\\\\\\",\"\\\\\",$item);\n\t\t$combined .= \"/* path $item */\\n\";\n\t\t$combined .= file_get_contents($item).\"\\n\";\n\t}\n\t$combined = rsvpmailer_clean_css($combined);\n\treturn $combined;\n}\n\n//remove styles emogrifier chokes on\nfunction rsvpmailer_clean_css($content) {\n\t//nonesuch ignored by inliner 'any-link','first-of-type','last-of-type','nth-last-of-type','only-of-type','optional','required'\n\t$unsupported = array('last-of-type','first-of-type','only-of-type');//\n\tforeach($unsupported as $bad) {\n\t\t$content = str_replace(':'.$bad,'nonesuch',$content); // remove pseudo references emogrifier chokes on\n\t}\n\t//$content = str_replace('*','nonesuch',$content); // remove all wildcard references\n\t$content = str_replace('menu','nonesuch',$content); // remove all menu references\n\t$content = preg_replace('/\\bbody/','nonesuch',$content);\n\treturn $content;\n}\n\nfunction rsvpmaker_included_styles () {\n\tglobal $rsvpemail_styles;\n\tif(!empty($rsvpemail_styles))\n\t\treturn $rsvpemail_styles;\n\t\n\t$rsvpemail_styles = '/* =WordPress Core\n\t-------------------------------------------------------------- */\n\t.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\t.aligncenter,\n\tdiv.aligncenter {\n\t\tdisplay: block;\n\t\tmargin: 5px auto 5px auto;\n\t}\n\t\n\t.alignright {\n\t\tfloat:right;\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t\n\t.alignleft {\n\t\tfloat: left;\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\ta img.alignright {\n\t\tfloat: right;\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t\n\ta img.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\ta img.alignleft {\n\t\tfloat: left;\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\ta img.aligncenter {\n\t\tdisplay: block;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\t\n\t.wp-caption {\n\t\tbackground: #fff;\n\t\tborder: 1px solid #f0f0f0;\n\t\tmax-width: 96%; /* Image does not overflow the content area */\n\t\tpadding: 5px 3px 10px;\n\t\ttext-align: center;\n\t}\n\t\n\t.wp-caption.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\t.wp-caption.alignleft {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t\n\t.wp-caption.alignright {\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t\n\t.wp-caption img {\n\t\tborder: 0 none;\n\t\theight: auto;\n\t\tmargin: 0;\n\t\tmax-width: 98.5%;\n\t\tpadding: 0;\n\t\twidth: auto;\n\t}\n\t\n\t.wp-caption p.wp-caption-text {\n\t\tfont-size: 11px;\n\t\tline-height: 17px;\n\t\tmargin: 0;\n\t\tpadding: 0 4px 5px;\n\t}\n\t#email-content {\n\t\tbackground-color: #fff !important;\n\t\tcolor: #000 !important;\n\t\tmax-width: 600px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tpadding: 10px;\n\t}\n\tbody {\n\t\tbackground-color: #fff;\n\t\tcolor: #000;\n\t\tfont-weight: normal;\n\t\tfont-size: initial;\n\t}\n\t.has-background {\n\t\tpadding: 5px;\n\t}\n\ta {\n\t\tdisplay: inline-block !important;\n\t}\n\t#messagefooter {\n\t\tmargin-top: 20px;\n\t\tpadding: 20px;\n\t\tbackground-color: #eee;\n\t\tcolor: #222;\n\t}\n\timg {\n\t\tmax-width: 95% !important;\n\t}\n\t';\n\t\n\t//add common block styles\n\t$rsvpemail_styles .= rsvpmailer_block_styles();\n\t$extra_email_styles = get_option('extra_email_styles');\n\tif(!empty($extra_email_styles))\n\t\t$rsvpemail_styles .= \"\\n\".$extra_email_styles.\"\\n\";\n\t$dir = get_stylesheet_directory();\n\t$rsvmailer_css = $dir.'/rsvpemail-editor-style.css';\n\tfile_put_contents($rsvmailer_css,$rsvpemail_styles);\n\treturn $rsvpemail_styles;\n\t}\n\t\n\tfunction show_rsvpmaker_included_styles () {\n\t\t\techo '<pre>';\n\t\t\techo rsvpmaker_included_styles();\n\t\t\techo '</pre>';\n\t\t\tdie();\n\t}\n\t\nfunction rsvpmaker_template_inline($query_post_id = 0) {\n\t//email_content_minfilters();\n\t//no javascript\n\t\t\n\t\tglobal $post;\n\t\tglobal $email_styles;\n\t\tglobal $custom_fields;\n\t\tglobal $email_context;\n\t\tglobal $chimp_options;\n\t\tglobal $wp_query;\n\t\tglobal $email_context;\t\n\t\t$email_context = true;\n\t\temail_content_minfilters();\n\t\t$wp_query_backup = $wp_query;\n\t\tif($query_post_id)\n\t\t{\n\t\t\tquery_posts('post_type=rsvpemail&p='.$query_post_id);\n\t\t}\n\t\n\t\tob_start();\n\t\twp_head();\n\t\t$head = ob_get_clean();\n\n\t\tob_start();\n\t\t?>\n\t\t<!doctype html>\n\t\t<html <?php language_attributes(); ?> >\n\t\t<head>\n\t\t<title>*|MC:SUBJECT|*</title>\n\t\t\t<meta charset=\"<?php bloginfo( 'charset' ); ?>\" />\n\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t<style id=\"imported\">\n\t<?php\n\techo rsvpmaker_included_styles ();\n\t?>\n\t</style>\n\t\t</head>\n\t\t<body class=\"rsvpmailer\">\n\t\t<!-- controls go here -->\n\t\t<article>\n\t\t<div class=\"entry-content\">\n\t\t<div id=\"email-content\">\n\t\n\t\t<!-- editors note goes here -->\n\t\n\t\t\t<?php\n\t\t\t//print_r($post);\n\t\t\tthe_post();\n\t\t\tthe_content();\n\t\t\t?>\n\t\n\t<div id=\"messagefooter\">\n\t*|LIST:DESCRIPTION|*<br>\n\t<br>\n\t<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list <span style=\"display: none\">*|UNSUB|*</span>\n\t<br>\n\t<!-- mailchimp -->\n\t<strong>Our mailing address is:</strong><br>\n\t*|LIST:ADDRESS|*<br>\n\t<em>Copyright (C) *|CURRENT_YEAR|* *|LIST:COMPANY|* All rights reserved.</em><br>    \n*|REWARDS|*</div>\n\t\t</div>\n\t\t</div>\n\t\t</article>\n\t\t</body>\n\t\t</html>\n\t\t<?php\n\t\t$content = ob_get_clean();\n\t\t$content = preg_replace('/<style.+<\\/style>/is','',$content);\n\t\tif(preg_match_all('|<iframe.+src=\"https://www.youtube.com/embed/([^\\?]+)|is',$content,$matches)) {\n\t\t\tforeach($matches[1] as $youtube_id) {\n\t\t\t\t$link = 'https://youtu.be/'.$youtube_id;\n\t\t\t\t$img = 'https://img.youtube.com/vi/'.$youtube_id.'/mqdefault.jpg';\n\t\t\t\t$html = '<p><a href=\"'.$link.'\">Watch on YouTube: '.$link.'<br /><img src=\"'.$img.'\" width=\"320\" height=\"180\" /></a></p>';\n\t\t\t\t$content = preg_replace('|<iframe.+'.$youtube_id.'[^<]+</iframe>|',$html,$content);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\t$content = preg_replace( '/(?<!\")(https:\\/\\/www.youtube.com\\/watch\\?v=|https:\\/\\/youtu.be\\/)([a-zA-Z0-9_\\-]+)/', '<p><a href=\"$0\">Watch on YouTube: $0<br /><img src=\"https://img.youtube.com/vi/$2/mqdefault.jpg\" width=\"320\" height=\"180\" /></a></p>', $content );\n\nupdate_post_meta($post->ID,'_rsvpmail_html',$content);\nupdate_post_meta($post->ID,'_rsvpmail_text',rsvpmaker_text_version($content));\n$wp_query = $wp_query_backup;\nreturn $content;\n}\n", "<?php\n\n/*\nGroup Email Functions\n*/\n\nfunction rsvpmaker_relay_active_lists() {\n\n\t$active = get_option( 'rsvpmaker_discussion_active' );\n\n\t$lists = array();\n\n\tif ( ! $active ) {\n\n\t\treturn array();\n\t}\n\n\t$vars = get_option( 'rsvpmaker_discussion_member' );\n\n\tif ( ! empty( $vars['password'] ) ) {\n\n\t\t$lists['member'] = $vars['user'];\n\t}\n\n\t$vars = get_option( 'rsvpmaker_discussion_officer' );\n\n\tif ( ! empty( $vars['password'] ) ) {\n\n\t\t$lists['officer'] = $vars['user'];\n\t}\n\n\treturn $lists;\n\n}\n\n\nfunction rsvpmaker_relay_menu_pages() {\n\n\t$parent_slug = 'edit.php?post_type=rsvpemail';\n\n\tadd_submenu_page(\n\t\t$parent_slug,\n\t\t__( 'Group Email', 'rsvpmaker' ),\n\t\t__( 'Group Email', 'rsvpmaker' ),\n\t\t'manage_options',\n\t\t'rsvpmaker_relay_manual_test',\n\t\t'rsvpmaker_relay_manual_test'\n\t);\n\n\tadd_submenu_page(\n\t\t$parent_slug,\n\t\t__( 'Group Email Log', 'rsvpmaker' ),\n\t\t__( 'Group Email Log', 'rsvpmaker' ),\n\t\t'manage_options',\n\t\t'rsvpmaker_relay_queue_monitor',\n\t\t'rsvpmaker_relay_queue_monitor'\n\t);\n\n}\n\nadd_action( 'admin_menu', 'rsvpmaker_relay_menu_pages' );\n\nfunction rsvpmaker_relay_manual_test() {\n\n\techo '<h1>' . __( 'Manually Trigger Check of Email Lists', 'rsvpmaker' ) . '</h1>';\n\n\t$html = rsvpmaker_relay_init( true );\n\n\tif ( $html ) {\n\n\t\techo wp_kses_post( $html );\n\n\t} else {\n\t\techo '<p>' . __( 'No messages', 'rsvpmaker' ) . '</p>';\n\t}\n\n}\n\nadd_action( 'rsvpmaker_relay_init_hook', 'rsvpmaker_relay_init' );\n\nfunction rsvpmaker_relay_init( $show = false ) {\n\n\t$active = get_option( 'rsvpmaker_discussion_active' );\n\n\t$result = $qresult = '';\n\n\t$qresult = rsvpmaker_relay_queue();\n\n\tif ( ! $active && ! $show ) {\n\n\t\treturn;\n\t}\n\n\tif ( empty( $qresult ) ) {\n\n\t\t$result = rsvpmaker_relay_get_pop( 'member' );\n\n\t\tif ( ! strpos( $result, 'Mail:' ) ) {\n\n\t\t\t$result .= rsvpmaker_relay_get_pop( 'officer' );\n\t\t}\n\n\t\tif ( ! strpos( $result, 'Mail:' ) ) {\n\n\t\t\t$result .= rsvpmaker_relay_get_pop( 'extra' );\n\t\t}\n\n\t\tif ( ! strpos( $result, 'Mail:' ) ) {\n\n\t\t\t$result .= rsvpmaker_relay_get_pop( 'bot' );\n\t\t}\n\t}\n\n\tif ( $show ) {\n\n\t\treturn $qresult . $result;\n\t}\n\n\tif ( ! empty( $qresult ) || strpos( $result, 'Mail:' ) ) {\n\n\t\trsvpmaker_debug_log( $qresult . $result, 'rsvpmaker_relay_result' );\n\n\t}\n\n}\n\nfunction rsvpmaker_relay_queue() {\n\tglobal $wpdb, $post, $page, $pages;\n\n\t$rsvpmaker_message_type = 'email_rule_group_email';\n\t//select a message with pending sends\n\t$sql = \"SELECT ID FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE meta_key='rsvprelay_to' AND (post_status='publish' OR post_status='draft')\";\n\t$epost_id = $wpdb->get_var($sql);\n\tif(empty($epost_id))\n\t\treturn;\n\t$sql = \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id WHERE ID=$epost_id AND meta_key='rsvprelay_to' AND (post_status='publish' OR post_status='draft') \";\n\t$results = $wpdb->get_results( $sql );\n\tif ( empty( $results ) ) {\n\t\treturn;\n\t}\n\t$total_to_send = sizeof($results);\n\t$limit = 10;\n\t$sent = 0;\n\n\t$html = '<p>Results: ' . sizeof( $results ) . '</p>';\n\n\t$mail['message_type'] = 'email_rule_group_email';\n\t$mail['override'] = 1;\n\t$mail['from'] = get_post_meta( $epost_id, 'rsvprelay_from', true );;\n\t$mail['fromname'] = get_post_meta( $epost_id, 'rsvprelay_fromname', true );\n\t$message_description = get_post_meta( $epost_id, 'message_description', true );\n\t$mail['html'] = get_post_meta($epost_id,'_rsvpmail_html',true); //rsvpmail broadcast\n\t//rsvpmaker_debug_log($mail['html'],'_rsvpmail_html_for_'.$epost_id);\n\tif(empty($mail['html']))\n\t{\n\t\t$post = get_post($epost_id);\n\t\t$template = '<html>\n\t\t<head>\n\t\t<title>*|MC:SUBJECT|*</title>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t\t</head>\n\t\t<body>\n\t\t\n\t\t[rsvpmaker_email_content]\n\t\t\n\t\t<div id=\"messagefooter\" style=\"padding: 5px; background-color: #eee; color: #000;\">\n\t\t*|LIST:DESCRIPTION|*<br>\n\t\t<br>\n\t\t<a href=\"*|UNSUB|*\">Unsubscribe</a> *|EMAIL|* from this list | <a href=\"*|FORWARD|*\">Forward to a friend</a> | <a href=\"*|UPDATE_PROFILE|*\">Update your profile</a>\n\t\t</div>\n\t\t\n\t\t</body>\n\t\t</html>';\n\t\t$mail['html'] = do_blocks( do_shortcode( $template ) );\n\t\trsvpmaker_debug_log($mail,'group_email_from_template');\n\t}\n\telse\n\t\trsvpmaker_debug_log($mail,'group_email_from_meta');\n\t$count = 0;\n\tif ( ! empty( $results ) ) {\n\t\tforeach ( $results as $row ) {\n\t\t\tif($count == $limit)\n\t\t\t\tbreak;\n\t\t\t$count++;\n\t\t\tif ( ! isset( $_GET['nodelete'] ) ) {\n\t\t\t\t$sql = \"DELETE FROM $wpdb->postmeta WHERE meta_id=\" . $row->meta_id;\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t}\n\t\t\tif ( rsvpmaker_cronmail_check_duplicate( $row->meta_value . $row->post_content ) ) {\n\t\t\t\t$html .= '<div>skipped duplicate to ' . esc_html( $row->meta_value ) . '</div>';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( empty( $row->post_title ) || empty( $row->post_content ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( ! empty( $attachments ) ) {\n\t\t\t\t$mail['attachments'] = $attachments;\n\t\t\t}\n\t\t\t$mail['subject'] = $row->post_title;\n\t\t\t$mail['to'] = $row->meta_value;\n\t\t\t$html .= sprintf( '<p>%s to %s</p>', $row->post_title, $row->meta_value );\n\t\t\t$post = get_post( $row->ID );\n\t\t\t$post_id = $row->ID;\n\t\t\tif ( isset( $_GET['debug'] ) ) {\n\t\t\t\tprintf( '<pre>%s</pre>', htmlentities( $template ) );\n\t\t\t\tprintf( '<pre>%s</pre>', htmlentities( $mail['html'] ) );\n\t\t\t}\n\t\t\trsvpmailer( $mail, '<div class=\"rsvpexplain\">' . $message_description . '</div>' );\n\t\t\tadd_post_meta( $post->ID, 'rsvpmail_sent', $mail['to'] . ' ' . rsvpmaker_date( 'r' ) );\n\t\t\tsleep(2);\n\t\t}\n\t\t//delete old transients used to prevent duplicate sends\n\t\t$sql = \"DELETE FROM $wpdb->options WHERE option_name LIKE '_transient_cronemail%' AND (option_value < \".(time() - DAY_IN_SECONDS) .\" OR option_value LIKE '%@%' )\";\n\t\t$wpdb->query($sql);\n\t\treturn $html;\n\t}\n}\n\nfunction group_emails_extract( $text ) {\n\tpreg_match_all( \"/\\b[A-z0-9][\\w.-]*@[A-z0-9][\\w\\-\\.]+\\.[A-z0-9]{2,6}\\b/\", $text, $emails );\n\t$emails = $emails[0];\n\t$unique = array();\n\tforeach ( $emails as $email ) {\n\n\t\t$email = strtolower( $email );\n\n\t\t$unique[ $email ] = $email;\n\n\t}\n\n\treturn $unique;\n\n}\n\n\n\nfunction get_mime_type( &$structure ) {\n\n\t$primary_mime_type = array( 'TEXT', 'MULTIPART', 'MESSAGE', 'APPLICATION', 'AUDIO', 'IMAGE', 'VIDEO', 'OTHER' );\n\n\tif ( $structure->subtype ) {\n\n\t\treturn $primary_mime_type[ (int) $structure->type ] . '/' . $structure->subtype;\n\n\t}\n\n\t\treturn 'TEXT/PLAIN';\n\n}\n\n\n\nfunction rsvpmaker_get_part( $stream, $msg_number, $mime_type, $structure = false, $part_number = false ) {\n\n\tif ( ! $structure ) {\n\n\t\t$structure = imap_fetchstructure( $stream, $msg_number );\n\n\t}\n\n\tif ( $structure ) {\n\n\t\tif ( $mime_type == get_mime_type( $structure ) ) {\n\n\t\t\tif ( ! $part_number ) {\n\n\t\t\t\t$part_number = '1';\n\n\t\t\t}\n\n\t\t\t$text = imap_fetchbody( $stream, $msg_number, $part_number );\n\n\t\t\tif ( $structure->encoding == 3 ) {\n\n\t\t\t\treturn imap_base64( $text );\n\n\t\t\t} elseif ( $structure->encoding == 4 ) {\n\n\t\t\t\treturn imap_qprint( $text );\n\n\t\t\t} else {\n\n\t\t\t\treturn $text;\n\n\t\t\t}\n\t\t}\n\n\t\tif ( $structure->type == 1 ) { /* multipart */\n\n\t\t\t// while(list($index, $sub_structure) = each($structure->parts)) {\n\n\t\t\tforeach ( $structure->parts as $index => $sub_structure ) {\n\n\t\t\t\t$prefix = '';\n\n\t\t\t\tif ( $part_number ) {\n\n\t\t\t\t\t$prefix = $part_number . '.';\n\n\t\t\t\t}\n\n\t\t\t\t$data = rsvpmaker_get_part( $stream, $msg_number, $mime_type, $sub_structure, $prefix . ( $index + 1 ) );\n\n\t\t\t\tif ( $data ) {\n\n\t\t\t\t\treturn $data;\n\n\t\t\t\t}\n\t\t\t} // END OF WHILE\n\t\t} // END OF MULTIPART\n\t} // END OF STRUTURE\n\n\t\treturn false;\n\n} // END OF FUNCTION\n\n\n\nfunction rsvpmaker_relay_get_pop( $list_type = '' ) {\n\n\tglobal $wpdb;\n\n\t// $wpdb->show_errors();\n\n\t$server = get_option( 'rsvpmaker_discussion_server' );\n\n\t$recipients = array();\n\n\t$vars = get_option( 'rsvpmaker_discussion_' . $list_type );\n\n\tif ( empty( $vars ) || empty( $vars['password'] ) ) {\n\n\t\treturn '<div>no password set for ' . $list_type . '</div>';\n\t}\n\n\t$user = $vars['user'];\n\n\t$password = $vars['password'];\n\n\t$p = explode( '@', $user );\n\n\t$actionslug = $p[0];\n\n\t$unsubscribed = get_option( 'rsvpmail_unsubscribed' );\n\n\tif ( empty( $unsubscribed ) ) {\n\t\t$unsubscribed = array();\n\t}\n\t// don't want loops, list sending to itself\n\t$unsubscribed[] = $user;\n\n\t$html = '';\n\n\tif ( isset( $_GET['test'] ) ) {\n\n\t\tmail( 'relay@toastmost.org', 'Subject', \"This is a test\\n\\nmultiple lines of text\" );\n\t}\n\n\t// \u00a0Connect\u00a0to\u00a0the\u00a0mail\u00a0server\u00a0and\u00a0grab\u00a0headers\u00a0from\u00a0the\u00a0mailbox\n\n\t$html .= sprintf( '<p>%s, %s, %s</p>', $server, $user, $password );\n\n\t$mail = @imap_open( $server, $user, $password, CL_EXPUNGE );\n\n\tif ( empty( $mail ) ) {\n\n\t\treturn '<div>no mail connection found for ' . $list_type .' ! '. $server .' ! '. $user .' ! '. $password . '</div>';\n\t}\n\n\t$headers = imap_headers( $mail );\n\n\tif ( empty( $headers ) ) {\n\n\t\treturn '<div>no messages found for ' . $list_type . '</div>';\n\t}\n\n\t$html .= '<pre>' . \"Mail:\\n\" . var_export( $mail, true ) . '</pre>';\n\n\t$html .= '<pre>' . \"Headers:\\n\" . var_export( $headers, true ) . '</pre>';\n\n\tif ( $list_type == 'member' ) {\n\n\t\t$members = get_site_members();\n\n\t\tforeach ( $members as $member ) {\n\n\t\t\t$recipients[] = strtolower( $member->user_email );\n\t\t}\n\t} elseif ( $list_type == 'officer' ) {\n\n\t\t// toastmasters integration\n\n\t\t$officers = get_option( 'wp4toastmasters_officer_ids' );\n\n\t\tif ( ! empty( $officers ) && is_array( $officers ) ) {\n\n\t\t\tforeach ( $officers as $id ) {\n\n\t\t\t\t$member = get_userdata( $id );\n\n\t\t\t\tif ( $member ) {\n\n\t\t\t\t\t$recipients[] = strtolower( $member->user_email );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$subject_prefix = empty( $vars['subject_prefix'] ) ? '' : $vars['subject_prefix'];\n\n\t$whitelist = ( empty( $vars['whitelist'] ) ) ? array() : group_emails_extract( $vars['whitelist'] );\n\n\t$blocked = ( empty( $vars['blocked'] ) ) ? array() : group_emails_extract( $vars['blocked'] );\n\n\t$additional_recipients = ( empty( $vars['additional_recipients'] ) ) ? array() : group_emails_extract( $vars['additional_recipients'] );\n\n\tif ( ! empty( $additional_recipients ) ) {\n\n\t\tforeach ( $additional_recipients as $email ) {\n\n\t\t\tif ( ! in_array( $email, $recipients ) ) {\n\n\t\t\t\t$recipients[] = $email;\n\t\t\t}\n\t\t}\n\t}\n\n\t// loop through each email\n\n\tfor ( $n = 1; $n <= count( $headers ); $n++ ) {\n\n\t\t$html .= '<h3>' . $headers[ $n - 1 ] . '</h3><br />';\n\n\t\t$realdata = '';\n\n\t\t$headerinfo = imap_headerinfo( $mail, $n );\n\n\t\tif ( ! empty( $headerinfo->message_id ) && rsvpmaker_relay_duplicate( $headerinfo->message_id ) ) {\n\t\t\techo 'duplicate for ' . $headerinfo->message_id;\n\t\t\tcontinue; // already tried to process this, something is wrong\n\t\t}\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t$html .= '<pre>' . \"Header Info:\\n\" . htmlentities( var_export( $headerinfo, true ) ) . '</pre>';\n\t\t}\n\n\t\t$subject = '';\n\n\t\tif ( ! empty( $headerinfo->subject ) ) {\n\n\t\t\t$subject = $headerinfo->subject;\n\n\t\t} elseif ( ! empty( $headerinfo->Subject ) ) {\n\n\t\t\t$subject = $headerinfo->Subject;\n\t\t}\n\n\t\tif ( ! strpos( $subject, $subject_prefix . ']' ) && ! empty( $subject_prefix ) ) {\n\n\t\t\t$subject = '[' . $subject_prefix . '] ' . $subject;\n\t\t}\n\n\t\t$fromname = $headerinfo->from[0]->personal;\n\n\t\t$from = strtolower( $headerinfo->from[0]->mailbox . '@' . $headerinfo->from[0]->host );\n\n\t\tif ( in_array( $from, $recipients ) ) {\n\n\t\t\t$html .= '<p>' . $from . ' is a member email</p>';\n\n\t\t} else {\n\t\t\t$html .= '<p>' . $from . ' is <strong>NOT</strong> a member email</p>';\n\t\t}\n\n\t\t$html .= var_export( $headerinfo->from, true );\n\n\t\t$html .= '<h3>' . $subject . '<br />' . $fromname . ' ' . $from . '</h3>';\n\n\t\t$mailqtext = rsvpmaker_get_part( $mail, $n, 'TEXT/PLAIN' );\n\n\t\t$mailq = rsvpmaker_get_part( $mail, $n, 'TEXT/HTML' );\n\n\t\t$member_user = get_user_by( 'email', $from );\n\n\t\t$author = ( $member_user && ! empty( $member_user->ID ) ) ? $member_user->ID : 1;\n\n\t\t$qpost = array(\n\t\t\t'post_title'  => $subject,\n\t\t\t'post_type'   => 'rsvpemail',\n\t\t\t'post_status' => 'draft',\n\t\t\t'post_author' => $author,\n\t\t);\n\n\t\tif ( $mailq ) {\n\n\t\t\t$html .= '<p>Capturing HTML email content</p>';\n\n\t\t\t$embedded_images = rsvpmailer_embedded_images( $mailq );\n\n\t\t\t$html .= sprintf( '<p>Embedded images: %s</p>', var_export( $embedded_images, true ) );\n\n\t\t\t$html .= $mailq;\n\n\t\t\t$qpost['post_content'] = preg_replace( \"|<style\\b[^>]*>(.*?)</style>|s\", '', $mailq );\n\n\t\t} else {\n\n\t\t\t$html .= '<p>Capturing TEXT email content</p>';\n\n\t\t\t$temp = wpautop( $mailqtext );\n\n\t\t\t$qpost['post_content'] = $temp;\n\n\t\t\t$html .= $temp;\n\n\t\t}\n\n\t\t$struct = imap_fetchstructure( $mail, $n );\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t$html .= sprintf( '<h1>Structure</h1><pre>%s</pre>', var_export( $struct, true ) );\n\t\t}\n\n\t\t$contentParts = count( $struct->parts );\n\n\t\t$upload_dir = wp_upload_dir();\n\n\t\t$t = time();\n\n\t\t$path = $upload_dir['path'] . '/';\n\n\t\t$urlpath = $upload_dir['url'] . '/';\n\n\t\t$atturls = array();\n\n\t\t$image_types = array( 'jpg', 'jpeg', 'png', 'gif' );\n\n\t\t$imagecount = 0;\n\n\t\tif ( $contentParts >= 2 ) {\n\n\t\t\tfor ( $i = 2;$i <= $contentParts;$i++ ) {\n\n\t\t\t\t$att[ $i - 2 ] = imap_bodystruct( $mail, $n, $i );\n\n\t\t\t}\n\n\t\t\tfor ( $k = 0;$k < sizeof( $att );$k++ ) {\n\n\t\t\t\t$attachment = $att[ $k ];\n\n\t\t\t\t$strFileName = $strFileType = '';\n\n\t\t\t\tif ( ! empty( $att[ $k ]->parameters ) && is_array( $att[ $k ]->parameters ) && ! empty( $att[ $k ]->parameters[0]->value ) ) {\n\n\t\t\t\t\tif ( ( $att[ $k ]->parameters[0]->value == 'us-ascii' ) || ( $att[ $k ]->parameters[0]->value == 'US-ASCII' ) ) {\n\n\t\t\t\t\t\tif ( $att[ $k ]->parameters[1]->value != '' ) {\n\n\t\t\t\t\t\t\t$strFileName = $att[ $k ]->parameters[1]->value;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ( $att[ $k ]->parameters[0]->value != 'iso-8859-1' && $att[ $k ]->parameters[0]->value != 'ISO-8859-1' ) {\n\n\t\t\t\t\t\t\t\t\t$strFileName = $att[ $k ]->parameters[0]->value;\n\n\t\t\t\t\t}\n\t\t\t\t}//end is array\n\n\t\t\t\tif ( strpos( $strFileName, '.' ) ) { // if it's a filename\n\n\t\t\t\t\t$p = explode( '.', $strFileName );\n\n\t\t\t\t\t$strFileType = strtolower( array_pop( $p ) );\n\n\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t$html .= sprintf( '<p>File: %s File type: %s</p>', $strFileName, $strFileType );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( in_array( $strFileType, $image_types ) && ! empty( $embedded_images ) ) {\n\n\t\t\t\t\t\t$html .= '<p>Is an image</p>';\n\n\t\t\t\t\t\t// $key = key($embedded_images);\n\n\t\t\t\t\t\t// printf('<p>key: %s</p>',$key);\n\n\t\t\t\t\t\t$html .= sprintf( '<p>Checking embedded image %s</p>', $imagecount );\n\n\t\t\t\t\t\tif ( ! empty( $embedded_images[ $imagecount ] ) ) {\n\n\t\t\t\t\t\t\t$cid = $embedded_images[ $imagecount ];\n\n\t\t\t\t\t\t\t$html .= 'cid key: ' . $imagecount;\n\n\t\t\t\t\t\t\t$imagecount++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$html .= sprintf( '<p>No CID found for %s or %s</p>', $imagecount, $strFileName );\n\n\t\t\t\t\t\t\t$cid = '';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$addtopath = $t . $k;\n\n\t\t\t\t\t}//if it's an image\n\n\t\t\t\t\telse {\n\n\t\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t\t$html .= '<p>Not an image</p>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$addtopath = '';\n\n\t\t\t\t\t\t$cid = '';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t$html .= sprintf( '<p>Handling attachment %s %s %s %s %s %s</p>', var_export( $attachment, true ), $i, $n, var_export( $mail, true ), $path . $addtopath, $urlpath . $addtopath );\n\t\t\t\t\t}\n\n\t\t\t\t\t $atturl = rsvpmaker_relay_save_attachment( $attachment, $k + 2, $n, $mail, $path . $addtopath, $urlpath . $addtopath, $strFileName, $strFileType );\n\n\t\t\t\t\t $link = sprintf( '<a href=\"%s\" target=\"_blank\">%s</a>', $atturl, $strFileName );\n\n\t\t\t\t\t $atturls[] = $link;\n\n\t\t\t\t\tif ( ! empty( $cid ) ) {\n\n\t\t\t\t\t\t$qpost['post_content'] = str_replace( $cid, $atturl, $qpost['post_content'] );\n\n\t\t\t\t\t\t$html .= printf( '<p>replace %s with %s</p>', $cid, $atturl );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t\t\t\t$html .= sprintf( '<div>Attachment:</div><pre>%s</pre>', var_export( $attachment, true ) );\n\t\t\t\t\t}\n\t\t\t\t}// is filename\n\n\t\t\t}//loop attachments\n\n\t\t}// loop content parts\n\n\t\t// if we weren't able to substitue url for embedded images coding\n\n\t\t$qpost['post_content'] = preg_replace( '/<img.+cid:[^>]+>/', 'IMAGE OMMITTED', $qpost['post_content'] );\n\n\t\tif ( sizeof( $atturls ) > 0 ) {\n\t\t\t$qpost['post_content'] .= '<div style=\"padding: 10px; margin: 5px; background-color: #eee; border: thin solid #555;\"><p><strong>Attachments:</strong> <br />' . implode( '<br />', $atturls ) . '</p></div>';\n\t\t}\n\n\t\tif ( isset( $_GET['nosave'] ) ) {\n\n\t\t\techo '<h1>Version to send (not saved)</h2>' . wp_kses_post( $qpost['post_content'] );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t$log_id = wp_insert_post( $qpost );\n\t\tupdate_post_meta( $log_id, 'headerinfo', $headerinfo );\n\n\t\t// (($list_type == 'extra') && in_array('autoresponder@example.com',$additional_recipients))\n\t\tif ( $list_type == 'bot' ) {\n\t\t\techo \"Action call: 'rsvpmaker_autoreply'\";\n\t\t\tdo_action( 'rsvpmaker_autoreply', $qpost, $user, $from, $headerinfo->toaddress, $fromname, $headerinfo->to );\n\t\t}\n\n\t\tif ( in_array( $from, $blocked ) ) {\n\n\t\t\t$rmail['subject'] = 'BLOCKED ' . $qpost['post_title'];\n\n\t\t\t$rmail['to'] = $from;\n\n\t\t\t$rmail['html'] = '<p>Your message was not delivered to the email list.</p>';\n\n\t\t\t$rmail['from'] = get_option( 'admin_email' );\n\n\t\t\t$rmail['fromname'] = get_option( 'blogname' );\n\n\t\t\tupdate_option( 'rsvpmaker_relay_latest_bounce', var_export( $rmail, true ) );\n\n\t\t\trsvpmailer( $rmail );\n\n\t\t} elseif ( in_array( $from, $recipients ) || in_array( $from, $whitelist ) ) {\n\n\t\t\t$qpost['post_content'] .= \"\\n<p>*****</p>\" . sprintf( '<p>Relayed from the <a href=\"mailto:%s\" target=\"_blank\">%s</a> email list</p><p>Replies will go to SENDER. <a target=\"_blank\" href=\"mailto:%s?subject=Re:%s\">Reply to list instead</a></p>', $user, $user, $user, $subject );\n\t\t\t$post_id                = 0;\n\n\t\t\tif ( ! empty( $qpost['post_content'] ) && ! empty( $from ) ) {\n\n\t\t\t\t$post_id = wp_insert_post( $qpost );\n\t\t\t}\n\n\t\t\t$html .= var_export( $qpost, true );\n\n\t\t\tif ( $post_id ) {\n\t\t\t\tadd_post_meta( $post_id, 'imap_message_id', $headerinfo->message_id );\n\n\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_from', $from );\n\n\t\t\t\t// for debugging\n\n\t\t\t\tadd_post_meta( $post_id, 'imap_body', imap_body( $mail, $n ) );\n\n\t\t\t\tif ( empty( $fromname ) ) {\n\n\t\t\t\t\t$fromname = $from;\n\t\t\t\t}\n\n\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_fromname', $fromname );\n\n\t\t\t\tif ( ! empty( $recipients ) ) {\n\n\t\t\t\t\tforeach ( $recipients as $to ) {\n\n\t\t\t\t\t\t$rsvpmailer_rule = apply_filters( 'rsvpmailer_rule', '', $to, 'email_rule_group_email' );\n\n\t\t\t\t\t\tif ( $rsvpmailer_rule == 'permit' ) {\n\n\t\t\t\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_to', $to );\n\n\t\t\t\t\t\t} elseif ( $rsvpmailer_rule == 'deny' ) {\n\n\t\t\t\t\t\t\trsvpmaker_debug_log( $to, 'group email blocked' );\n\n\t\t\t\t\t\t} elseif ( ! in_array( $to, $unsubscribed ) ) {\n\n\t\t\t\t\t\t\tadd_post_meta( $post_id, 'rsvprelay_to', $to );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif ( $list_type != 'bot' ) {\n\n\t\t\t$rmail['subject'] = 'NOT DELIVERED ' . $qpost['post_title'];\n\n\t\t\t$rmail['to'] = $from;\n\n\t\t\t$rmail['html'] = '<p>Your message was not delivered because it did not come from a recognized member email address.</p><p>Reply if you also use an alternate email address that needs to be added to our whitelist.</p>';\n\n\t\t\t$rmail['from'] = get_option( 'admin_email' );\n\n\t\t\t$rmail['fromname'] = get_option( 'blogname' );\n\n\t\t\tupdate_option( 'rsvpmaker_relay_latest_bounce', var_export( $rmail, true ) );\n\n\t\t\trsvpmailer( $rmail );\n\n\t\t}\n\n\t\tif ( isset( $_GET['nodelete'] ) ) {\n\n\t\t\t$html .= '<p>Not deleting</p>';\n\n\t\t} else {\n\n\t\t\t$html .= sprintf( '<p>Delete %s</p>', $n );\n\n\t\t\timap_delete( $mail, $n );\n\n\t\t}\n\t}\n\n\timap_expunge( $mail );\n\n\t$html .= '<p>Expunge deleted messages</p>';\n\n\treturn $html;\n\n\t// end function rsvpmaker_relay_get_pop() {\n}\n\nfunction rsvpmailer_embedded_images( $mailq ) {\n\n\t// preg_match_all('/<img.+(cid:[^\"\\']+)[^>]+/',$mailq, $matches);\n\n\tpreg_match_all( '/cid:[^\"\\']+/', $mailq, $matches );\n\n\treturn $matches[0];\n\n\tforeach ( $matches[1] as $index => $cid ) {\n\n\t\t\t$img[] = $cid;\n\n\t}\n\n\tif ( empty( $img ) ) {\n\n\t\treturn;\n\t}\n\n\treturn $img;\n\n}\n\n\n\nfunction rsvpmaker_relay_save_attachment( $att, $file, $msgno, $mbox, $path, $urlpath, $strFileName, $strFileType ) {\n\n\t\tprintf( '<p>Check %s %s part number %s</p>', $strFileName, $strFileType, $file );\n\n\t\t$allowed = array( 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'pdf', 'jpg', 'jpeg', 'gif', 'png', 'svg', 'ics', 'ifb', 'txt' );\n\n\tif ( ! in_array( $strFileType, $allowed ) ) {\n\n\t\treturn $strFileName . ' (file type not supported: ' . $strFileType . ')';\n\t}\n\n\t\t$fileSize = $att->bytes;\n\n\t\t$fileContent = imap_fetchbody( $mbox, $msgno, $file );\n\n\t\t$ContentType = 'application/octetstream';\n\n\tif ( $strFileType == 'txt' ) {\n\n\t\t$ContentType = 'text/plain';\n\t}\n\n\tif ( ( $strFileType == 'ics' ) || ( $strFileType == 'ifb' ) ) {\n\n\t\t$ContentType = 'text/calendar';\n\t}\n\n\tif ( isset( $_GET['debug'] ) ) {\n\n\t\tprintf( '<p>File characteristics: %s %s %s</p>', $ContentType, $strFileName, $fileSize );\n\t}\n\n\t$strFileName = preg_replace('/[^\\.a-zA-Z0-9]/','_',$strFileName);\n\n\t$writepath = $path . $strFileName;\n\n\t$url = $urlpath . $strFileName;\n\n\tif ( substr( $ContentType, 0, 4 ) == 'text' ) {\n\n\t\t$content = imap_qprint( $fileContent );\n\n\t} else {\n\n\t\t$content = imap_base64( $fileContent );\n\n\t}\n\n\t file_put_contents( $writepath, $content );\n\n\tif ( isset( $_GET['debug'] ) ) {\n\n\t\tprintf( '<p>Writing to %s <a href=\"%s\" target=\"_blank\">%s</a></p>', $writepath, $url, $url );\n\t}\n\n\t return $url;\n\n}\n\nadd_filter( 'cron_schedules', 'rsvpmaker_relay_interval' );\n\nfunction rsvpmaker_relay_interval( $schedules ) {\n\n\t$schedules['minute'] = array(\n\n\t\t'interval' => 60,\n\n\t\t'display'  => esc_html__( 'Every Minute' ),\n\t);\n\n\t$schedules['doubleminute'] = array(\n\n\t\t'interval' => 120,\n\n\t\t'display'  => esc_html__( 'Every Two Minutes' ),\n\t);\n\n\treturn $schedules;\n\n}\n\nfunction rsvpmaker_relay_duplicate( $message_id ) {\n\tglobal $wpdb;\n\treturn $wpdb->get_var( \"SELECT post_id FROM $wpdb->postmeta WHERE meta_value='$message_id' \" );\n}\n\nfunction rsvpmaker_qemail ($mail, $recipients) {\n\tglobal $current_user;\n\tif(is_multisite()) // send through root blog\n\t\tswitch_to_blog(1);\n\tif(strpos($mail['html'],'<body')) {\n\t\tpreg_match('|<bod[^>]+>(.+)</body>|is',$mail['html'],$match);\n\t\tif(!empty($match[1])) {\n\t\t\t$_html = $mail['html'];\n\t\t\t$mail['html'] = $match[1];\t\n\t\t}\n\t}\n\t$qpost['post_content'] = $mail['html'];\n\t$qpost['post_title'] = $mail['subject'];\n\t$qpost['post_type'] = 'rsvpemail';\n\t$qpost['post_author'] = $current_user->ID;\n\t$qpost['post_status'] = 'draft';\n\t$from = $mail['from'];\n\t$fromname = $mail['fromname'];\n\n\tif(!empty($qpost['post_content']) && !empty($from))  \n\t\t$post_id = wp_insert_post($qpost);\n\n\tif($post_id) {\n\t\t//add_post_meta($post_id,'imap_message_id',$headerinfo->message_id);\n\t\tadd_post_meta($post_id,'rsvprelay_from',$from);\n\t\tforeach($recipients as $email)\n\t\t\tadd_post_meta($post_id,'rsvprelay_to',$email);\n\t\t//for debugging\n\t\t//add_post_meta($post_id,'imap_body',imap_body($mail,$n));\n\t\tif(empty($fromname))\n\t\t\t$fromname = $from;\n\t\tadd_post_meta($post_id,'rsvprelay_fromname',$fromname);\n\t\tif(!empty($_html))\n\t\t\tadd_post_meta($post_id,'_rsvpmail_html',$_html);\n\t\t$mail['html'] = 'hidden';\n\t\trsvpmaker_debug_log($mail,'rsvpmaker_qemail_mail_array');\n\t\trsvpmaker_debug_log($recipients,'rsvpmaker_qemail_recipients_added');\n\t}\n\trsvpmaker_debug_log($post_id,'rsvpmaker_qemail_insert_post_result');\n\tif(is_multisite())\n\t\trestore_current_blog();\n}\n\nfunction rsvpmaker_relay_queue_monitor () {\n\tdo_action('rsvpmaker_relay_queue_monitor');\n\tglobal $wpdb;\n\t$sql = \"SELECT ID, post_title, wpt_postmeta.meta_key, wpt_postmeta.meta_value FROM `wpt_posts` JOIN wpt_postmeta on wpt_posts.ID = wpt_postmeta.post_id WHERE post_type='rsvpemail' AND (post_status='draft' OR post_status='publish') AND meta_key='rsvprelay_to' ORDER BY ID DESC\";\n\t$results = $wpdb->get_results($sql);\n\t$was = 0;\n\techo '<h1>In Queue</h2>';\n\tif(empty($results))\n\t\techo '<p>none</p>';\n\telse\n\tforeach($results as $row)\n\t{\n\t\tif($row->ID != $was)\n\t\t\tprintf('<h2>%s</h2>',$row->post_title);\n\t\tprintf('<p>%s %s</p>',$row->meta_key, $row->meta_value);\n\t\t$was = $row->ID;\n\t}\n\techo '<h1>Sent (200 Latest)</h2>';\n\t$sql = \"SELECT ID, post_title, wpt_postmeta.meta_key, wpt_postmeta.meta_value FROM `wpt_posts` JOIN wpt_postmeta on wpt_posts.ID = wpt_postmeta.post_id WHERE post_type='rsvpemail' AND meta_key='rsvpmail_sent' ORDER BY ID DESC LIMIT 0, 200\";\n\t$results = $wpdb->get_results($sql);\n\t$was = 0;\n\tforeach($results as $row)\n\t{\n\t\tif($row->ID != $was)\n\t\t\tprintf('<h2>%s</h2>',$row->post_title);\n\t\tprintf('<p>%s %s</p>',$row->meta_key, $row->meta_value);\n\t\t$was = $row->ID;\n\t}\n}", "<?php\n\n// start customizable functions, can be overriden by adding a rsvpmaker-custom.php file to the plugins directory (one level up from rsvpmaker directory)\n\nif ( ! function_exists( 'my_events_menu' ) ) {\n\n\tfunction my_events_menu() {\n\n\t\tglobal $rsvp_options;\n\n\t\tif ( function_exists( 'do_blocks' ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tadd_meta_box( 'EventDatesBox', __( 'Event Options', 'rsvpmaker' ), 'draw_eventdates', 'rsvpmaker', 'normal', 'high' );\n\n\t\tif ( isset( $rsvp_options['additional_editors'] ) && $rsvp_options['additional_editors'] ) {\n\n\t\t\tadd_meta_box( 'ExtraEditorsBox', __( 'Additional Editors', 'rsvpmaker' ), 'additional_editors', 'rsvpmaker', 'normal', 'high' );\n\t\t}\n\n\t}\n}\n\nif ( ! function_exists( 'draw_eventdates' ) ) {\n\n\tfunction draw_eventdates() {\n\n\t\tglobal $post;\n\n\t\t$post_id = ( isset( $_GET['post_id'] ) ) ? (int) $_GET['post_id'] : 0;\n\t\t$post    = ( $post_id ) ? get_post( $post_id ) : null;\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $custom_fields;\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\t\t\techo '<pre>';\n\t\t\tprint_r( $post );\n\t\t\techo '</pre>';\n\t\t}\n\n\t\tif ( isset( $_GET['clone'] ) ) {\n\t\t\t$id            = (int) $_GET['clone'];\n\t\t\t$custom_fields = get_rsvpmaker_custom( $id );\n\t\t} elseif ( isset( $post->ID ) ) {\n\n\t\t\t$custom_fields = get_rsvpmaker_custom( $post->ID );\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvpmaker_special'][0] ) ) {\n\n\t\t\t$rsvpmaker_special = $custom_fields['_rsvpmaker_special'][0];\n\n\t\t\tif ( $rsvpmaker_special == 'Landing Page' ) {\n\n\t\t\t\t?>\n\n<p>This is a landing page for an RSVPMaker webinar.</p>\n\n<p><input type=\"radio\" name=\"_require_webinar_passcode\" value=\"<?php echo esc_attr( $custom_fields['_webinar_passcode'][0] ); ?>\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <?php\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( isset( $custom_fields['_require_webinar_passcode'][0] ) && $custom_fields['_require_webinar_passcode'][0] ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo 'checked=\"checked\"';}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?>\n\t > Passcode required to view webinar</p>\n\n<p><input type=\"radio\" name=\"_require_webinar_passcode\" value=\"0\" \n\t\t\t\t<?php\n\t\t\t\tif ( ! isset( $custom_fields['_require_webinar_passcode'][0] ) || ! $custom_fields['_require_webinar_passcode'][0] ) {\n\t\t\t\t\techo 'checked=\"checked\"';}\n\t\t\t\t?>\n\t> No passcode required</p>\n\n\t\t\t\t<?php\n\n\t\t\t} else {\n\t\t\t\tdo_action( 'rsvpmaker_special_metabox', $rsvpmaker_special );\n\t\t\t}\n\n\t\t\treturn 'special';\n\n\t\t} elseif ( ( isset( $post->ID ) && rsvpmaker_is_template( $post->ID ) ) || isset( $_GET['new_template'] ) ) {\n\n\t\t\t?>\n\n<p><em><strong><?php esc_html_e( 'Event Template', 'rsvpmaker' ); ?>:</strong> <?php esc_html_e( 'This form is for entering generic / boilerplate information, not specific details for an event on a specific date. Groups that meet on a monthly basis can post their standard meeting schedule, location, and contact details to make entering the individual events easier. You can also post multiple future meetings using the generic template and update those event listings as needed when the event date grows closer.', 'rsvpmaker' ); ?></em></p>\n\n\t\t\t<?php\n\n\t\t\t$template = get_template_sked( $post_id );\n\n\t\t\ttemplate_schedule( $template );\n\n\t\t\t rsvp_time_options( $post->ID );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( isset( $custom_fields['_meet_recur'][0] ) ) {\n\n\t\t\t$t = (int) $custom_fields['_meet_recur'][0];\n\n\t\t\tif ( $post_id ) {\n\n\t\t\t\tprintf(\n\t\t\t\t\t'<p><a href=\"%s\">%s</a> | <a href=\"%s\">%s</a> | <a href=\"%s\">%s</a> | <a href=\"%s\">%s</a></p>',\n\t\t\t\t\tadmin_url( 'post.php?action=edit&post=' . $t ),\n\t\t\t\t\t__( 'Edit Template Content', 'rsvpmaker' ),\n\t\t\t\t\tadmin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=' . $t ),\n\t\t\t\t\t__( 'Edit Template Options', 'rsvpmaker' ),\n\t\t\t\t\tadmin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $t ),\n\t\t\t\t\t__( 'See Related Events', 'rsvpmaker' ),\n\t\t\t\t\tadmin_url(\n\t\t\t\t\t\t'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&apply_target=' . intval( $post->ID ) . '&apply_current=' . $t . '#applytemplate\n\n'\n\t\t\t\t\t),\n\t\t\t\t\t__( 'Switch Template', 'rsvpmaker' )\n\t\t\t\t);\n\t\t\t}\n\t\t} elseif ( isset( $post->ID ) ) {\n\n\t\t\tprintf(\n\t\t\t\t'<p><a href=\"%s\">%s</a></p>',\n\t\t\t\tadmin_url(\n\t\t\t\t\t'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&apply_target=' . intval( $post->ID ) . '#applytemplate\n\n'\n\t\t\t\t),\n\t\t\t\t__( 'Apply Template', 'rsvpmaker' )\n\t\t\t);\n\t\t}\n\t\t\n\t\tif(isset($post->ID))\n\t\t$event = get_rsvpmaker_event( $post->ID );\n\t\t$start = 0;\n\n\t\tif ( !empty($event) ) {\n\t\t\t$t = intval($event->ts_start);\n\t\t\t$end = intval($event->ts_end);\n\t\t\techo \"\\n<div class=\\\"event_dates\\\"> \\n\";\n\n\t\t\tif ( $rsvp_options['long_date'] ) {\n\t\t\t\techo utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\t\t\t}\n\n\t\t\t$dur = $event->display_type;\n\n\t\t\tif ( ( $dur != 'allday' ) && ! strpos( $dur, '|' ) ) {\n\n\t\t\t\techo rsvpmaker_date( ' ' . $rsvp_options['time_format'], $t );\n\n\t\t\t} elseif ( ( $dur == 'set' ) && $row['end_time'] ) {\n\n\t\t\t\techo ' to ' . rsvpmaker_date( $rsvp_options['time_format'], $end );\n\t\t\t}\n\t\t\trsvpmaker_date_option_event( $t, $end, $dur );\n\n\t\t\techo \"</div>\\n\";\n\t\t\treturn;\n\t\t} else {\n\n\t\t\techo '<p><em>' . __( 'You can enter dates and times in either text format or the numeric/database format.', 'rsvpmaker' ) . '</em> </p>';\n\n\t\t\t$t = time();\n\n\t\t}\n\n\t\tif ( isset( $_GET['t'] ) ) {\n\n\t\t\t$t = (int) $_GET['t'];\n\n\t\t\t$sked = get_template_sked( $t );\n\n\t\t\t$times = rsvpmaker_get_projected( $sked );\n\n\t\t\tforeach ( $times as $ts ) {\n\n\t\t\t\tif ( $ts > time() ) {\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trsvpmaker_date_option( $ts, 0, rsvpmaker_date( 'Y-m-d H:i:s', $ts ), $sked );\n\n\t\t\t$start = 1;\n\n\t\t} elseif ( $start == 0 ) {\n\n\t\t\t$start = 1;\n\n\t\t\t$date = ( isset( $_GET['add_date'] ) ) ? sanitize_text_field($_GET['add_date']) : 'today ' . $rsvp_options['defaulthour'] . ':' . $rsvp_options['defaultmin'] . ':00';\n\n\t\t\trsvpmaker_date_option( $date, 0, rsvpmaker_date( 'Y-m-d H:i:s', $t ) );\n\n\t\t}\n\n\t\tif ( ! isset( $_GET['t'] ) ) { // if this is based on a template, use the template defaults\n\n\t\t\trsvp_time_options( $post_id );\n\t\t}\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\techo '<pre>';\n\n\t\t\t// print_r($custom_fields);\n\n\t\t\techo '</pre>';\n\n\t\t}\n\n\t}\n} // end draw event dates\n\n\nif ( ! function_exists( 'template_schedule' ) ) {\n\n\tfunction template_schedule( $template ) {\n\n\t\tif ( ! is_array( $template ) ) {\n\n\t\t\t$template = unserialize( $template );\n\t\t}\n\n\t\tglobal $post;\n\n\t\tif ( ! isset( $post->ID ) ) {\n\n\t\t\t$post = (object) array( 'ID' => 0 );\n\t\t}\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\t// backward compatability\n\n\t\tif ( isset( $template['week'] ) && is_array( $template['week'] ) ) {\n\n\t\t\t$weeks = $template['week'];\n\n\t\t\t$dows = $template['dayofweek'];\n\n\t\t} else {\n\n\t\t\t$weeks = array();\n\n\t\t\t$dows = array();\n\n\t\t\t$weeks[0] = ( isset( $template['week'] ) ) ? $template['week'] : 0;\n\n\t\t\t$dows[0] = ( isset( $template['dayofweek'] ) ) ? $template['dayofweek'] : 0;\n\n\t\t}\n\n\t\t// default values\n\n\t\tif ( ! isset( $template['hour'] ) ) {\n\n\t\t\t$template['hour'] = 19;\n\n\t\t\t$template['minutes'] = '00';\n\n\t\t}\n\n\t\t$end_time = ( empty( $template['end_time'] ) ) ? '' : $template['end_time'];\n\n\t\tif ( $post->ID ) {\n\n\t\t\tprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . intval( $post->ID ) ), esc_html( __( 'View/add/update events based on this template', 'rsvpmaker' ) ) );\n\t\t}\n\n\t\tglobal $wpdb;\n\n\t\t$dayarray  = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ) );\n\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t\techo '<p>' . esc_html( __( 'Regular Schedule', 'rsvpmaker' ) ) . ':</p><table id=\"skedtable\"><tr><td>';\n\n\t\tif ( $weeks[0] == 0 ) {\n\t\t\t$weeks = array(); // clear out any other values\n\t\t\t$dows  = array();\n\t\t}\n\n\t\tif ( is_array( $weekarray ) ) {\n\n\t\t\tforeach ( $weekarray as $index => $label ) {\n\n\t\t\t\t$class = ( $index > 0 ) ? ' class=\"regular_sked\" ' : '';\n\n\t\t\t\t$checked = ( in_array( $index, $weeks ) || ( ( $index == 0 ) && empty( $weeks ) ) ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\tprintf( '<div><input type=\"checkbox\" name=\"sked[week][]\" value=\"%d\" id=\"wkcheck%d\" %s %s /> %s<div>', $index, $index, $checked, $class, esc_html( $label ) );\n\n\t\t\t}\n\t\t}\n\n\t\techo '</td><td id=\"daycolumn\">';\n\n\t\tif ( is_array( $dayarray ) ) {\n\n\t\t\tforeach ( $dayarray as $index => $label ) {\n\n\t\t\t\t$checked = ( is_array( $dows ) && ( in_array( $index, $dows ) ) ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\tprintf( '<div><input type=\"checkbox\" name=\"sked[dayofweek][]\" value=\"%d\" id=\"daycheck%d\" %s class=\"days\" /> %s<div>', $index, $index, $checked, esc_html( $label ) );\n\n\t\t\t}\n\t\t}\n\n\t\techo '</td><tr></table><div id=\"daymsg\"></div>';\n\n\t\t?>\n\n<script>\n\njQuery(function () {\n\n\tjQuery('#wkcheck0').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#wkcheck1').prop('checked', false);\n\n\t\tjQuery('#wkcheck2').prop('checked', false);\n\n\t\tjQuery('#wkcheck3').prop('checked', false);\n\n\t\tjQuery('#wkcheck4').prop('checked', false);\n\n\t\tjQuery('#wkcheck5').prop('checked', false);\n\n\t\tjQuery('#wkcheck6').prop('checked', false);\n\n\t\tjQuery('#daycheck0').prop('checked', false);\n\n\t\tjQuery('#daycheck1').prop('checked', false);\n\n\t\tjQuery('#daycheck2').prop('checked', false);\n\n\t\tjQuery('#daycheck3').prop('checked', false);\n\n\t\tjQuery('#daycheck4').prop('checked', false);\n\n\t\tjQuery('#daycheck5').prop('checked', false);\n\n\t\tjQuery('#daycheck6').prop('checked', false);\n\n\t\tjQuery('#daycolumn').css('border', 'none');\t\n\n\t\tjQuery('#daymsg').html('');\n\n\t\t}\n\n\t});\n\n\tjQuery('#wkcheck6').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#wkcheck0').prop('checked', false);\n\n\t\tjQuery('#wkcheck1').prop('checked', false);\n\n\t\tjQuery('#wkcheck2').prop('checked', false);\n\n\t\tjQuery('#wkcheck3').prop('checked', false);\n\n\t\tjQuery('#wkcheck4').prop('checked', false);\n\n\t\tjQuery('#wkcheck5').prop('checked', false);\n\n\t\t}\n\n\t});\n\n\tjQuery('.regular_sked').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#wkcheck0').prop('checked', false);\n\n\t\tif(!jQuery('#daycheck0').prop('checked') && !jQuery('#daycheck1').prop('checked') && !jQuery('#daycheck2').prop('checked') && !jQuery('#daycheck3').prop('checked') && !jQuery('#daycheck4').prop('checked') && !jQuery('#daycheck5').prop('checked') && !jQuery('#daycheck6').prop('checked'))\n\n\t\t\t{\n\n\t\t\t\tjQuery('#daycolumn').css('border', 'thin solid red');\t\n\n\t\t\t\tjQuery('#skedtable td').css('padding', '5px');\n\n\t\t\t\tjQuery('#daymsg').html('<em><?php esc_html_e( 'choose one or more days of the week', 'rsvpmaker' ); ?></em>');\n\n\t\t\t}\n\n\t\t}\n\n\t});\n\n\tjQuery('.days').on('click', function () {\n\n\t\tif(this.checked){\n\n\t\tjQuery('#daycolumn').css('border', 'none');\t\n\n\t\tjQuery('#daymsg').html('');\n\n\t\t}\n\n\t});\n\n\n\n});\n\n</script>\n\n\n\n<p><?php esc_html_e( 'Stop date (optional)', 'rsvpmaker' ); ?>: <input type=\"text\" name=\"sked[stop]\" value=\"<?php\n\t\t\t\tif ( isset( $template['stop'] ) ) {\n\t\t\t\t\techo esc_attr($template['stop']);}\n\t\t\t\t?>\" placeholder=\"<?php\n\t\tesc_html_e( 'example', 'rsvpmaker' );\n\t\techo ': ' . date( 'Y' ) . '-12-31';\n\t\t?>\" /> <em>(<?php esc_html_e( 'format', 'rsvpmaker' ); ?>: \"YYYY-mm-dd\" or \"+6 month\" or \"+1 year\")</em></p>\n\t\t<?php\n\t\t$auto = ( ( isset( $_GET['new_template'] ) && ! empty( $rsvp_options['autorenew'] ) ) || get_post_meta( $post->ID, 'rsvpautorenew', true ) );\n\t\t?>\n<p><input type=\"checkbox\" name=\"rsvpautorenew\" id=\"rsvpautorenew\" \n\t\t<?php\n\t\tif ( $auto ) {\n\t\t\techo 'checked=\"checked\"';}\n\t\t?>\n /> <?php esc_html_e( 'Automatically add dates according to this schedule', 'rsvpmaker' ); ?></em></p>\n\n\t\t<?php\n\n\t\t$h = $template['hour'];\n\n\t\t$minutes = $template['minutes'];\n\n\t\t$duration = isset( $template['duration'] ) ? $template['duration'] : '';\n\n\t\t$displayminutes = $displayhour = '';\n\n\t\t?>\n<div><label>Time</label> <input type=\"time\" id=\"sql-time\" name=\"sked[time]\" value=\"<?php echo esc_attr( $h . ':' . $minutes ); ?>\" > </div>\n<div id=\"template-time-error\"></div>\n\t\t<?php\n\n\t\trsvpmaker_duration_select( 'sked[duration]', $template, $h . ':' . $minutes, 0 );\n\n\t}\n} // end template schedule\n\n\nfunction rsvpmaker_sanitize_array_vars($array) {\n\tif(!is_array($array))\n\t\treturn false;\n\tforeach($array as $index => $var) {\n\t\tif(is_array($var))\n\t\t\t$var = array_map('sanitize_text_field',$var);\n\t\telse\n\t\t\t$var = sanitize_text_field($var);\n\t\t$array[$index] = $var;\n\t}\n\treturn $array;\n}\n\nfunction save_rsvp_template_meta( $post_id ) {\n\n\tif ( ! isset( $_POST['sked'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\treturn;\n\t}\n\n\t// we only care about saving template data\n\n\tglobal $wpdb;\n\n\tglobal $post;\n\n\tglobal $current_user;\n\n\tif ( $parent_id = wp_is_post_revision( $post_id ) ) {\n\n\t\t$post_id = $parent_id;\n\n\t}\n\n\t$sked = array_map('rsvpmaker_sanitize_array_vars',$_POST['sked']);\n\n\tif ( $sked['time'] ) {\n\t\t\t$p               = explode( ':', $sked['time'] );\n\t\t\t$sked['hour']    = $p[0];\n\t\t\t$sked['minutes'] = $p[1];\n\t}\n\n\tif ( empty( $sked['dayofweek'] ) ) {\n\t\t$sked['dayofweek'][0] = 9;\n\t}\n\n\t$sked['duration'] = $sked['end_time_type'] = sanitize_text_field( $_POST['end_time_type'] );\n\t$sked['end']      = $sked['rsvp_sql_end'] = sanitize_text_field( $_POST['rsvp_sql_end'] );\n\n\tnew_template_schedule( $post_id, $sked );\n\n\tif ( isset( $_POST['rsvpautorenew'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\tupdate_post_meta( $post_id, 'rsvpautorenew', 1 );\n\t} else {\n\t\tdelete_post_meta( $post_id, 'rsvpautorenew' );\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpmaker_roles' ) ) {\n\n\tfunction rsvpmaker_roles() {\n\n\t\t// by default, capabilities for events are the same as for blog posts\n\n\t\tglobal $wp_roles;\n\n\t\tif ( ! isset( $wp_roles ) ) {\n\n\t\t\t$wp_roles = new WP_Roles();\n\t\t}\n\n\t\t// subscribers should not be able to edit\n\t\t$wp_roles->remove_cap( 'subscriber', 'edit_rsvpmakers' );\n\n\t\t// if roles persist from previous session, return\n\t\tif ( ! empty( $wp_roles->roles['administrator']['capabilities']['edit_rsvpmakers'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_array( $wp_roles->roles ) ) {\n\n\t\t\tforeach ( $wp_roles->roles as $role => $rolearray ) {\n\n\t\t\t\tforeach ( $rolearray['capabilities'] as $cap => $flag ) {\n\n\t\t\t\t\tif ( strpos( $cap, 'post' ) ) {\n\t\t\t\t\t\t$fbcap = str_replace( 'post', 'rsvpmaker', $cap );\n\t\t\t\t\t\t$wp_roles->add_cap( $role, $fbcap );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n\n\nfunction get_confirmation_options( $post_id = 0, $documents = array() ) {\n\n\tglobal $post;\n\n\tif ( isset( $post->ID ) ) {\n\n\t\t$post_id = $post->ID;\n\t}\n\n\t$output = '';\n\n\t$confirm = rsvp_get_confirm( $post_id, true );\n\n\t$output = sprintf( '<h3 id=\"confirmation\">%s</h3>', __( 'Confirmation Message', 'rsvpmaker' ) );\n\n\t$output .= $confirm->post_content;\n\n\tforeach ( $documents as $d ) {\n\n\t\t$id = $d['id'];\n\n\t\tif ( ( $id == 'edit_confirm' ) || ( $id == 'customize_confirmation' ) ) {\n\n\t\t\t$output .= sprintf( '<p><a href=\"%s\">Edit: %s</a></p>', esc_attr( $d['href'] ), esc_html( $d['title'] ) );\n\t\t}\n\t}\n\n\tif ( ( empty( $_GET['page'] ) || $_GET['page'] != 'rsvp_reminders' ) ) {\n\t\t$output              .= sprintf( '<p><a href=\"%s\" target=\"_blank\">Create / Edit Reminders</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp_reminders&message_type=confirmation&post_id=' . $post_id ) );\n\t\t$payment_confirmation = (int) get_post_meta( $post_id, 'payment_confirmation_message', true );\n\t\tif ( empty( $payment_confirmation ) || empty( get_post( $payment_confirmation ) ) ) {\n\t\t\t\t$add_payment_conf = admin_url( 'edit.php?title=Payment%20Confirmation&rsvpcz=payment_confirmation_message&post_id=' . $post_id );\n\t\t\t\t$output          .= sprintf( '<p><a href=\"%s\">%s</a></p>', $add_payment_conf, __( 'Add Payment Confirmation Message' ) );\n\t\t} else {\n\t\t\t$output .= sprintf( '<p><a href=\"%s\">%s</a></p>', admin_url( 'post.php?post=' . $payment_confirmation . '&action=edit' ), __( 'Edit Payment Confirmation Message' ) );\n\t\t}\n\t}\n\n\t$templates = get_rsvpmaker_email_template();\n\n\t$chosen = (int) get_post_meta( $post_id, 'rsvp_tx_template', true );\n\n\tif ( ! $chosen ) {\n\n\t\t$chosen = (int) get_option( 'rsvpmaker_tx_template' );\n\t}\n\n\t$choose_template = '';\n\n\tif ( $templates ) {\n\n\t\tforeach ( $templates as $index => $template ) {\n\n\t\t\tif ( $index == 0 ) {\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$s = ( $index == $chosen ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t$choose_template .= sprintf( '<option value=\"%d\" %s>%s</option>', $index, $s, $template['slug'] );\n\n\t\t}\n\t}\n\n\t$output .= sprintf( '<p>%s: <select name=\"rsvp_tx_template\">%s</select></p><input type=\"hidden\" name=\"rsvp_tx_post_id\" value=\"%d\">', __( 'Confirmation Email Template' ), $choose_template, $post_id );\n\n\t$output = '<div style=\"max-width: 800px\">' . $output . '</div>';\n\n\treturn $output;\n\n}\n\n\n\nif ( ! function_exists( 'GetRSVPAdminForm' ) ) {\n\n\tfunction GetRSVPAdminForm( $post_id ) {\n\t\tglobal $custom_fields;\n\n\t\tglobal $post;\n\n\t\tglobal $rsvp_options;\n\n\t\t$rsvp_on = ( isset( $custom_fields['_rsvp_on'][0] ) && ( ! $custom_fields['_rsvp_on'][0] ) ) ? 0 : 1;\n\n\t\t$include_event = $custom_fields['_rsvp_confirmation_include_event'][0];\n\n\t\t$after_payment = $custom_fields['_rsvp_confirmation_include_event'][0];\n\n\t\t$login_required = $custom_fields['_rsvp_login_required'][0];\n\n\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\n\t\t$rsvp_instructions = $custom_fields['_rsvp_instructions'][0];\n\n\t\t$rsvp_form = $custom_fields['_rsvp_form'][0];\n\n\t\t$rsvp_max = $custom_fields['_rsvp_max'][0];\n\n\t\t$rsvp_count = $custom_fields['_rsvp_count'][0]; // else $rsvp_count = 1;\n\n\t\t$rsvp_show_attendees = $custom_fields['_rsvp_show_attendees'][0];\n\n\t\t$rsvp_captcha = $custom_fields['_rsvp_captcha'][0];\n\n\t\t$rsvp_count_party = $custom_fields['_rsvp_count_party'][0];\n\n\t\t$rsvp_yesno = $custom_fields['_rsvp_yesno'][0];\n\n\t\tif ( isset( $custom_fields['_rsvp_reminder'][0] ) && $custom_fields['_rsvp_reminder'][0] ) {\n\n\t\t\t$t = rsvpmaker_strtotime( $custom_fields['_rsvp_reminder'][0] );\n\n\t\t\t$remindyear = date( 'Y', $t );\n\n\t\t\tif ( $remindyear == 1970 ) {\n\n\t\t\t\t$remindyear = '';\n\n\t\t\t} else {\n\n\t\t\t\t$remindmonth = date( 'm', $t );\n\n\t\t\t\t$remindday = rsvpmaker_date( 'd', $t );\n\n\t\t\t\t$remindtime = rsvpmaker_date( 'H:i:s', $t );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_deadline'][0] ) && $custom_fields['_rsvp_deadline'][0] ) {\n\n\t\t\t$t = (int) $custom_fields['_rsvp_deadline'][0];\n\n\t\t\t$deadyear = date( 'Y', $t );\n\n\t\t\t$deadmonth = rsvpmaker_date( 'm', $t );\n\n\t\t\t$deadday = rsvpmaker_date( 'd', $t );\n\n\t\t\t$deadtime = rsvpmaker_date( 'H:i:00', $t );\n\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_start'][0] ) && $custom_fields['_rsvp_start'][0] ) {\n\n\t\t\t$t = (int) $custom_fields['_rsvp_start'][0];\n\n\t\t\t$startyear = date( 'Y', $t );\n\n\t\t\t$startmonth = rsvpmaker_date( 'm', $t );\n\n\t\t\t$startday = rsvpmaker_date( 'd', $t );\n\n\t\t\t$starttime = rsvpmaker_date( 'H:00:00', $t );\n\n\t\t}\n\n\t\t?>\n\n\t\t<?php\n\n\t\techo '</p>';\n\n\t\tif ( empty( $deadtime ) ) {\n\t\t\t$deadtime = '23:59:59';\n\t\t}\n\n\t\tif ( empty( $starttime ) ) {\n\t\t\t$starttime = '00:00:00';\n\t\t}\n\n\t\tif ( empty( $remindtime ) ) {\n\t\t\t$remindtime = '00:00:00';\n\t\t}\n\n\t\t?>\n\n<p>\n\n\t\t<?php esc_html_e( 'Collect RSVPs', 'rsvpmaker' ); ?>\n\n  <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_on ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php esc_html_e( 'YES', 'rsvpmaker' ); ?> <input type=\"radio\" name=\"setrsvp[on]\" id=\"setrsvpon\" value=\"0\" \n\t\t\t\t  <?php\n\t\t\t\t\tif ( ! $rsvp_on ) {\n\t\t\t\t\t\techo 'checked=\"checked\" ';}\n\t\t\t\t\t?>\n\t\t\t />\n\n\t\t<?php esc_html_e( 'NO', 'rsvpmaker' ); ?> </p>\n\n<div id=\"rsvpdetails\">\n\n  <input type=\"checkbox\" name=\"setrsvp[login_required]\" id=\"setrsvp[login_required]\" value=\"1\" \n\t\t<?php\n\t\tif ( $login_required ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( 'Login required', 'rsvpmaker' ); ?> <?php\n\t\tif ( ! $rsvp_on ) {\n\t\t\techo ' <strong style=\"color: red;\">' . __( 'Check to activate', 'rsvpmaker' ) . '</strong> ';}\n\t\t?>\n\n  <input type=\"checkbox\" name=\"setrsvp[yesno]\" id=\"setrsvp[yesno]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_yesno ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( 'Show Yes/No Radio Buttons', 'rsvpmaker' ); ?> \n\n<br />  <input type=\"radio\" name=\"setrsvp[show_attendees]\" id=\"setrsvp[show_attendees]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_show_attendees == 1 ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t />\n\n\t\t<?php echo __( ' Display attendee names and content of note field publicly', 'rsvpmaker' ); ?>\n\n <input type=\"radio\" name=\"setrsvp[show_attendees]\" id=\"setrsvp[show_attendees]\" value=\"2\" \n\t\t<?php\n\t\tif ( $rsvp_show_attendees == 2 ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( ' Display attendees for logged in users', 'rsvpmaker' ); ?>\n\n <input type=\"radio\" name=\"setrsvp[show_attendees]\" id=\"setrsvp[show_attendees]\" value=\"0\" \n\t\t<?php\n\t\tif ( ! $rsvp_show_attendees ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t\t />\n\n\t\t<?php echo __( ' Do not display', 'rsvpmaker' ); ?>\n\n\t\t\n<br />  <input type=\"checkbox\" name=\"setrsvp[captcha]\" id=\"setrsvp[captcha]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_captcha ) {\n\t\t\techo 'checked=\"checked\" ';}\n\t\t?>\n\t />\n\n\t\t<?php echo __( ' Include CAPTCHA challenge', 'rsvpmaker' ); ?> <?php\n\t\tif ( ! $rsvp_captcha ) {\n\t\t\techo ' <strong style=\"color: red;\">' . __( 'Check to activate', 'rsvpmaker' ) . '</strong> ';}\n\t\t?>\n\n</p>\n\n<div id=\"rsvpoptions\">\n\n\t\t<?php echo __( 'Email Address for Notifications', 'rsvpmaker' ); ?>: <input id=\"setrsvp[to]\" name=\"setrsvp[to]\" type=\"text\" value=\"<?php echo esc_attr( $rsvp_to ); ?>\"><br />\n\n<br /><?php echo __( 'Instructions for User', 'rsvpmaker' ); ?>:<br />\n\n<textarea id=\"setrsvp[instructions]\" name=\"setrsvp[instructions]\" cols=\"80\" style=\"max-width: 95%;\"><?php echo esc_attr( $rsvp_instructions ); ?></textarea>\n\n<br />\n\n  <input type=\"checkbox\" name=\"setrsvp[rsvpmaker_send_confirmation_email]\" id=\"rsvpmaker_send_confirmation_email\" value=\"1\" \n\t\t<?php\n\t\tif ( ! isset( $custom_fields['_rsvp_rsvpmaker_send_confirmation_email'][0] ) || $custom_fields['_rsvp_rsvpmaker_send_confirmation_email'][0] ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > <?php esc_html_e( 'Send confirmation emails', 'rsvpmaker' ); ?>\n\n  <input type=\"checkbox\" name=\"setrsvp[confirmation_after_payment]\" id=\"rsvpmaker_send_confirmation_email\" value=\"1\" \n\t\t<?php\n\t\tif ( ! isset( $custom_fields['_rsvp_confirmation_after_payment'][0] ) || $custom_fields['_rsvp_confirmation_after_payment'][0] ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > <?php esc_html_e( 'Send confirmation AFTER payment', 'rsvpmaker' ); ?>\n\n  <input type=\"checkbox\" name=\"setrsvp[confirmation_include_event]\" id=\"rsvp_confirmation_include_event\"  value=\"1\" \n\t\t<?php\n\t\tif ( $include_event ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > <?php esc_html_e( 'Include event listing with confirmation and reminders', 'rsvpmaker' ); ?>\n\n\t\t<?php\n\t\techo get_confirmation_options( $post->ID, get_related_documents() );\n\n\t\tif ( empty( $custom_fields['_webinar_landing_page_id'][0] ) || isset( $_GET['youtube'] ) ) {\n\n\t\t\techo '<br /><strong>' . __( 'Webinar Setup', 'rsvpmaker' ) . '</strong><br />YouTube Live: <input type=\"text\" name=\"youtube_live\" /> <input type=\"checkbox\" name=\"webinar_other\" value=\"1\" /> ' . __( 'Other webinar', 'rsvpmaker' ) . ' <input type=\"checkbox\" name=\"youtube_require_passcode\" value=\"1\" /> ' . __( 'Require passcode to view', 'rsvpmaker' ) . '<br /><em>' . __( 'If your event is a webinar, entering a YouTube Live url or checking &quot;Other webinar&quot; will create a landing page, plus suggested cofirmation and reminder messages to get you started. For YouTube Live, RSVPMaker adds the codes for the video player and chat.', 'rsvpmaker' ) . '.</em>';\n\t\t}\n\n\t\t?>\n\n<br /><br /><strong><?php echo __( 'Special Options', 'rsvpmaker' ); ?></strong>\n<br /><em><?php esc_html_e( 'By default, RSVP registration opens when the event is published and ends at the start time of the event. The options below allow you to specify when registration shold open and set an earlier deadline for RSVPs to close (or keep RSVPs open after the start of the event).', 'rsvpmaker' ); ?></em>\n\n<table>\n\n\t\t<?php\n\n\t\tif ( rsvpmaker_is_template() ) {\n\n\t\t\t$deadlinedaysbefore = '';\n\n\t\t\tfor ( $i = 0; $i < 31; $i++ ) {\n\n\t\t\t\t$s = ( isset( $custom_fields['_rsvp_deadline_daysbefore'] ) && ( $custom_fields['_rsvp_deadline_daysbefore'][0] == $i ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$deadlinedaysbefore .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'days before', 'rsvpmaker' ) );\n\n\t\t\t}\n\n\t\t\t$regdays = '';\n\n\t\t\tfor ( $i = 0; $i < 181; $i++ ) {\n\n\t\t\t\t$s = ( isset( $custom_fields['_rsvp_reg_daysbefore'] ) && ( $custom_fields['_rsvp_reg_daysbefore'][0] == $i ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$regdays .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'days before', 'rsvpmaker' ) );\n\n\t\t\t}\n\n\t\t\t$deadlinehours    = '';\n\t\t\t$currentdeadhours = ( empty( $custom_fields['_rsvp_deadline_hours'][0] ) ) ? 0 : (int) $custom_fields['_rsvp_deadline_hours'][0];\n\t\t\tfor ( $i = -12; $i < 0; $i++ ) {\n\t\t\t\t$dhour          = abs( $i );\n\t\t\t\t$s              = ( $currentdeadhours == $i ) ? ' selected=\"selected\" ' : '';\n\t\t\t\t$deadlinehours .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'hours after', 'rsvpmaker' ) );\n\t\t\t}\n\n\t\t\tfor ( $i = 0; $i < 24; $i++ ) {\n\t\t\t\t$s              = ( $currentdeadhours == $i ) ? ' selected=\"selected\" ' : '';\n\t\t\t\t$deadlinehours .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'hours before', 'rsvpmaker' ) );\n\t\t\t}\n\n\t\t\t$reghours = '';\n\n\t\t\tfor ( $i = 0; $i < 24; $i++ ) {\n\n\t\t\t\t$s = ( isset( $custom_fields['_rsvp_reg_hours'] ) && ( $custom_fields['_rsvp_reg_hours'][0] == $i ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$reghours .= sprintf( '<option %s value=\"%d\">%d %s</option>', $s, $i, $i, __( 'hours before', 'rsvpmaker' ) );\n\n\t\t\t}\n\n\t\t\tprintf( '<tr><td>%s</td><td> <select name=\"setrsvp[deadline_daysbefore]\">%s</select> <select name=\"setrsvp[deadline_hours]\">%s</select>  </td></tr>', __( 'Deadline (optional)', 'rsvpmaker' ), $deadlinedaysbefore, $deadlinehours );\n\n\t\t\tprintf( '<tr><td>%s</td><td> <select name=\"setrsvp[reg_daysbefore]\">%s</select> <select name=\"setrsvp[reg_hours]\">%s</select></td></tr>', __( 'Registration Starts (optional)', 'rsvpmaker' ), $regdays, $reghours );\n\n\t\t} else {\n\n\t\t\t?>\n\n<tr><td><?php echo __( 'Deadline (optional)', 'rsvpmaker' ) . '</td><td> ' . __( 'Month', 'rsvpmaker' ); ?>: <input type=\"text\" name=\"deadmonth\" id=\"deadmonth\" value=\"<?php \nif ( isset( $deadmonth ) ) {echo esc_attr($deadmonth);}?>\" size=\"2\" /> <?php echo __( 'Day', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"deadday\" id=\"deadday\" value=\"<?php\nif ( isset( $deadday ) ) {\n\techo esc_attr($deadday);}\n?>\" size=\"2\" /> <?php echo __( 'Year', 'rsvpmaker' ); ?>: \n\n<input type=\"text\" name=\"deadyear\" id=\"deadyear\" value=\"<?php\n\t\t\tif ( isset( $deadyear ) ) {\n\t\t\t\techo esc_attr($deadyear);}\n\t\t\t?>\" size=\"4\" /> \n<?php rsvptimes( $deadtime, 'deadtime' ); ?> </td></tr>\n\n<tr><td><?php echo __( 'Registration Starts (optional)', 'rsvpmaker' ) . '</td><td>' . __( 'Month', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"startmonth\" id=\"startmonth\" value=\"<?php\n\t\t\t\t\tif ( isset( $startmonth ) ) {\n\t\t\t\t\t\techo esc_attr($startmonth);}\n\t\t\t\t\t?>\" size=\"2\" /> <?php echo __( 'Day', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"startday\" id=\"startday\" value=\"<?php\nif ( isset( $startday ) ) {\n\techo esc_attr($startday);}\n?>\" size=\"2\" /> <?php echo __( 'Year', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"startyear\" id=\"startyear\" value=\"<?php\n\t\t\tif ( isset( $startyear ) ) {\n\t\t\t\techo esc_attr($startyear);}\n\t\t\t?>\" size=\"4\" /> <?php rsvptimes( $starttime, 'starttime' ); ?></td></tr>\n\n\t\t\t<?php\n\n\t\t}//end not template\n\n\t\tif ( ! empty( $remindday ) ) { // only show if this was previously set\n\n\t\t\t?>\n\n<tr><td><?php echo __( 'Reminder (optional)', 'rsvpmaker' ) . '</td><td>' . __( 'Month', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"remindmonth\" id=\"remindmonth\" value=\"<?php\n\t\t\t\t\tif ( isset( $remindmonth ) ) {\n\t\t\t\t\t\techo esc_attr( $remindmonth );}\n\t\t\t\t\t?>\" size=\"2\" /> <?php echo __( 'Day', 'rsvpmaker' ); ?>: \n<input type=\"text\" name=\"remindday\" id=\"remindday\" value=\"<?php\n\t\t\tif ( isset( $remindday ) ) {\n\t\t\t\techo esc_attr( $remindday );}\n\t\t\t?>\" size=\"2\" /> <?php echo __( 'Year', 'rsvpmaker' ); ?>: \n\n<input type=\"text\" name=\"remindyear\" id=\"remindyear\" value=\"<?php\nif ( isset( $remindyear ) ) {\n\techo esc_attr( $remindyear );}\n?>\" size=\"4\" /> <?php rsvptimes( $remindtime, 'remindtime' ); ?></td></tr>\n\n<?php\n\n\t\t}\n\n\t\t?>\n</table>\n\n<br /><?php echo __( 'Show RSVP Count', 'rsvpmaker' ); ?> \n<input type=\"checkbox\" name=\"setrsvp[count]\" id=\"setrsvp[count]\" value=\"1\" <?php\n\t\t\t\t\tif ( isset( $rsvp_count ) && $rsvp_count ) {\n\t\t\t\t\t\techo ' checked=\"checked\" ';}\n\t\t\t\t\t?>\n\t /> \n\n<br /><?php echo __( 'Maximum participants', 'rsvpmaker' ); ?> \n<input type=\"text\" name=\"setrsvp[max]\" id=\"setrsvp[max]\" value=\"<?php\n\t\t\t\t\tif ( isset( $rsvp_max ) ) {\n\t\t\t\t\t\techo esc_attr( $rsvp_max );}\n\t\t\t\t\t?>\" size=\"4\" /> (<?php echo __( '0 for none specified', 'rsvpmaker' ); ?>)\n\n<br /><?php echo __( 'Time Slots', 'rsvpmaker' ); ?>:\n\n<select name=\"setrsvp[timeslots]\" id=\"setrsvp[timeslots]\">\n\n<option value=\"0\">None</option>\n\n<option value=\"0:30\" \n\t\t<?php\n\t\tif ( isset( $custom_fields['_rsvp_timeslots'][0] ) && ( $custom_fields['_rsvp_timeslots'][0] == '0:30' ) ) {\n\t\t\techo ' selected = \"selected\" ';}\n\t\t?>\n\t >30 minutes</option>\n\n\t\t<?php\n\n\t\t$tslots = (int) $custom_fields['_rsvp_timeslots'][0];\n\n\t\tfor ( $i = 1; $i < 13; $i++ ) {\n\n\t\t\t$selected = ( $i == $tslots ) ? ' selected = \"selected\" ' : '';\n\n\t\t\techo '<option value=\"' . $i . '\" ' . $selected . \">$i-hour slots</option>\";\n\n\t\t};\n\t\t?>\n\n</select>\n\n<br /><em><?php echo __( 'Used for volunteer shift signups. Duration must also be set.', 'rsvpmaker' ); ?></em>\n\n\t\t<?php\n\n\t\tif ( is_numeric( $rsvp_form ) ) {\n\n\t\t\tif ( ! empty( $_POST['reset_form'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t\t\t$rsvp_form = (int) $_POST['reset_form'];\n\t\t\t\tupdate_post_meta( $post->ID, '_rsvp_form', $rsvp_form );\n\t\t\t}\n\n\t\t\t$fpost = get_post( $rsvp_form );\n\n\t\t\t$edit = admin_url( 'post.php?action=edit&post=' . $fpost->ID . '&back=' . $post_id );\n\n\t\t\t$customize = admin_url( '?post_id=' . $post->ID . '&customize_form=' . $fpost->ID );\n\n\t\t\techo '<h3 id=\"rsvpform-section\">' . __( 'RSVP Form', 'rsvpmaker' ) . '</h3>';\n\n\t\t\t$guest = ( strpos( $fpost->post_content, 'rsvpmaker-guests' ) ) ? 'Yes' : 'No';\n\n\t\t\t$note = ( strpos( $fpost->post_content, 'name=\"note\"' ) || strpos( $fpost->post_content, 'formnote' ) ) ? 'Yes' : 'No';\n\n\t\t\tpreg_match_all( '/\\[([A-Za-z0_9_]+)/', $fpost->post_content, $matches );\n\n\t\t\tif ( ! empty( $matches ) ) {\n\n\t\t\t\tforeach ( $matches[1] as $match ) {\n\n\t\t\t\t\t$fields[ $match ] = $match;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpreg_match_all( '/\"slug\":\"([^\"]+)/', $fpost->post_content, $matches );\n\n\t\t\tif ( ! empty( $matches ) ) {\n\n\t\t\t\tforeach ( $matches[1] as $match ) {\n\n\t\t\t\t\t$fields[ $match ] = $match;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$merged_fields = ( empty( $fields ) ) ? '' : implode( ',', $fields );\n\n\t\t\tprintf( '<div>Fields: %s<br />Guests: %s<br />Note field: %s</div>', $merged_fields, $guest, $note );\n\n\t\t\tif ( current_user_can( 'edit_post', $fpost->ID ) ) {\n\n\t\t\t\tif ( $fpost->post_parent == 0 ) {\n\n\t\t\t\t\tprintf( '<div id=\"editconfirmation\"><a href=\"%s\" target=\"_blank\">Edit</a> (default from Settings)</div><div><a href=\"%s\" target=\"_blank\">Customize</a></div>', $edit, $customize );\n\n\t\t\t\t} elseif ( $fpost->post_parent != $post->ID ) {\n\n\t\t\t\t\tprintf( '<div id=\"editconfirmation\"><a href=\"%s\" target=\"_blank\">Edit</a> (inherited from Template)</div><div><a href=\"%s\" target=\"_blank\">Customize</a></div>', $edit, $customize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprintf( '<div id=\"editconfirmation\"><a href=\"%s\" target=\"_blank\">Edit</a></div>', $edit );\n\n\t\t\t\t\tprintf( '<div><input type=\"checkbox\" name=\"reset_form\" value=\"%d\" /> Reset to default form', intval( $rsvp_options['rsvp_form'] ) );\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprintf( '<div><a href=\"%s\" target=\"_blank\">Customize</a></div>', $customize );\n\t\t\t}\n\t\t} else {\n\n\t\t\t?>\n\n<br /><?php echo __( 'RSVP Form', 'rsvpmaker' ); ?> (<a href=\"#\" id=\"enlarge\">Enlarge</a>):<br />\n\n<textarea id=\"rsvpform\" name=\"setrsvp[form]\" cols=\"120\" rows=\"5\" style=\"max-width: 95%;\">\n\t\t\t<?php\n\t\t\tif ( isset( $rsvp_form ) ) {\n\t\t\t\techo htmlentities( $rsvp_form );}\n\t\t\t?>\n\t</textarea>\n\n\t\t\t<?php rsvp_form_setup_form( $rsvp_form ); ?>\n\n<div>\n\n <button id=\"create-form\">Generate form</button>\n\n</div>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\t?>\n\n<h3>Payment Gateway</h3>\n\n\t\t<?php\n\n\t\t$gateway_options = get_rsvpmaker_payment_options();\n\n\t\t$gateway = get_rsvpmaker_payment_gateway();\n\n\t\t$o = '';\n\n\t\tif ( is_array( $gateway_options ) ) {\n\n\t\t\tforeach ( $gateway_options as $gateway_option ) {\n\n\t\t\t\t$s = ( $gateway == $gateway_option ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$o .= sprintf( '<option %s value=\"%s\">%s</option>', $s, $gateway_option, $gateway_option );\n\n\t\t\t}\n\t\t}\n\n\t\tprintf( '<p>Gateway: <select name=\"payment_gateway\">%s</select></p>', $o );\n\n\t\tif ( ( class_exists( 'Stripe_Checkout_Functions' ) || ( ! empty( $rsvp_options['rsvpmaker_stripe_sk'] ) ) ) && empty( $rsvp_options['stripe'] ) && ! empty( $rsvp_options['paypal_config'] ) ) {\n\n\t\t\t$s = ( ! empty( $custom_fields['_rsvp_stripe'][0] ) ) ? 'checked=\"checked\"' : '';\n\n\t\t\techo '<p><input type=\"checkbox\" name=\"setrsvp[stripe]\" value=\"1\" ' . $s . ' /> ' . __( 'use RSVPMakerStripe instead of PayPal', 'rsvpmaker' ) . '</p>';\n\n\t\t}\n\n\t\t?>\n\n<p><strong><?php echo __( 'Pricing', 'rsvpmaker' ); ?></strong></p>\n\n<p><?php echo __( 'You can set a different price for members vs. non-members, adults vs. children, etc.', 'rsvpmaker' ); ?></p>\n\n<p><input type=\"radio\" name=\"setrsvp[count_party]\" value=\"1\" \n\t\t<?php\n\t\tif ( $rsvp_count_party ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > Multiply price times size of party\n\n<br /><input type=\"radio\" name=\"setrsvp[count_party]\" value=\"0\" \n\t\t<?php\n\t\tif ( ! $rsvp_count_party ) {\n\t\t\techo ' checked=\"checked\" ';}\n\t\t?>\n\t > Let user specify number of admissions per category\n\n</p>\n\n\t\t<?php\n\t\techo '<p>' . __( 'Optionally, you can add a time limit on specific prices, if for example you are offering \"early bird\" pricing on registration, after which the price goes up. Enter a full date and time. Example:', 'rsvpmaker' ) . ' ' . date( 'Y-m-d' ) . '  23:59:00 or ' . date( 'F j, Y' ) . ' 11:59 pm ' . __( 'for midnight tonight', 'rsvpmaker' );\n\n\t\tif ( $rsvp_count_party ) {\n\t\t\tprintf( '<p>%s</p>', __( 'You can also specify fields that should not be displayed depending on price selections. Example: <em>The meal options at a conference should be disabled for attendees who choose \"workshop only\" pricing, or the dinner options should be disabled for those who select the lunch only.</em>', 'rsvptoast' ) );\n\t\t}\n\n\t\t$hide = array();\n\n\t\tif ( isset( $custom_fields['_hiddenrsvpfields'][0] ) ) {\n\t\t\t$hide = unserialize( $custom_fields['_hiddenrsvpfields'][0] );\n\t\t}\n\n\t\tif ( isset( $custom_fields['_per'][0] ) ) {\n\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\t\t}\n\n\t\tif ( empty( $per['unit'][0] ) ) {\n\t\t\t$per            = array();\n\t\t\t$per['unit'][0] = __( 'Tickets', 'rsvpmaker' );\n\t\t}\n\n\t\t$defaultfields = array( 'first', 'last', 'email', 'phone', 'phone_type' );\n\n\t\tpreg_match_all( '/(textfield|selectfield|radio|checkbox)=\"([^\"]+)\"/', $rsvp_form, $matches );\n\n\t\t$newfields = array_diff( $matches[2], $defaultfields );\n\n\t\techo '<div id=\"priceper\">';\n\n\t\t$start = 1;\n\n\t\tforeach ( $per['unit'] as $i => $value ) {\n\n\t\t\t$start = $i + 1;\n\n\t\t\t?>\n\n<div class=\"priceblock\" id=\"block_<?php echo esc_attr($i); ?>\">\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Units', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"unit[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['unit'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['unit'][ $i ] );}\n\t\t\t?>\" /></div>\n\n<div class=\"pricelabel\">@ <?php esc_html_e( 'Price', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"price[<?php\nif ( isset( $i ) ) {\n\techo esc_attr($i);}\n?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['price'][ $i ] );}\n\t\t\t?>\" /> \n\t\t\t<?php\n\t\t\tif ( isset( $rsvp_options['paypal_currency'] ) ) {\n\t\t\t\techo esc_html($rsvp_options['paypal_currency']);}\n\t\t\t?>\n\t</div>\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Deadline (optional)', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"price_deadline[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_deadline'][ $i ] ) ) {\n\t\t\t\techo rsvpmaker_date( 'Y-m-d H:i:s', (int) $per['price_deadline'][ $i ] );}\n\t\t\t?>\" placeholder=\"<?php echo date( 'Y-m-d 23:59:00' ); ?>\" /></div>\n\n\t<div class=\"pricelabel\"><?php esc_html_e( 'Multiple Admissions', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\">\n\t<input name=\"price_multiple[<?php\n\t\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_multiple'][ $i ] ) ) {\n\t\t\t\techo (int) $per['price_multiple'][ $i ];\n\t\t\t} else {\n\t\t\t\techo 1;\n\t\t\t}\n\t\t\t?>\" /><br /><em><?php echo __( 'Example: If the price is for a table of 8, enter \"8\"', 'rsvpmaker' ); ?></em></div>\n\n\t\t\t<?php\n\n\t\t\tif ( $rsvp_count_party && ! empty( $newfields ) ) {\n\n\t\t\t\tforeach ( $newfields as $field ) {\n\n\t\t\t\t\tif ( isset( $hide[ $i ] ) && is_array( $hide[ $i ] ) && in_array( $field, $hide[ $i ] ) ) {\n\n\t\t\t\t\t\t\t$showcheck = '';\n\n\t\t\t\t\t\t\t$hidecheck = ' checked=\"checked\" ';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$showcheck = ' checked=\"checked\" ';\n\n\t\t\t\t\t\t\t$hidecheck = '';\n\n\t\t\t\t\t}\n\n\t\t\t\t\t\tprintf( '<div class=\"pricelabel\">%s:</div><div class=\"pricevalue\"><input type=\"radio\" name=\"showhide[%d][%s]\" value=\"0\" %s /> Show <input type=\"radio\" name=\"showhide[%d][%s]\" value=\"1\" %s /> Hide</div>', $field, $i, $field, $showcheck, $i, $field, $hidecheck );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n</div>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\t$pad = ( $start < 3 ) ? 5 : 1;\n\n\t\tfor ( $i = $start; $i < ( $start + $pad ); $i++ ) {\n\n\t\t\t$starterblanks = $i + 1;\n\n\t\t\t?>\n\n<div class=\"priceblock\" id=\"block_<?php echo esc_attr($i); ?>\">\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Units', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"unit[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['unit'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['unit'][ $i ] );}\n\t\t\t?>\" /></div>\n\n<div class=\"pricelabel\">@ <?php esc_html_e( 'Price', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\">\n<input name=\"price[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"\n\t\t\t<?php\n\t\t\tif ( isset( $per['price'][ $i ] ) ) {\n\t\t\t\techo esc_attr( $per['price'][ $i ] );}\n\t\t\t?>\n\t\" /> \n\t\t\t<?php\n\t\t\tif ( isset( $rsvp_options['paypal_currency'] ) ) {\n\t\t\t\techo esc_html($rsvp_options['paypal_currency']);}\n\t\t\t?>\n\t</div>\n\n<div class=\"pricelabel\"><?php esc_html_e( 'Deadline (optional)', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\"><input name=\"price_deadline[<?php\n\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_deadline'][ $i ] ) ) {\n\t\t\t\techo rsvpmaker_date( 'Y-m-d H:i:s', (int) $per['price_deadline'][ $i ] );}\n\t\t\t?>\" placeholder=\"<?php echo date( 'Y-m-d 23:59:00' ); ?>\" /></div>\n\n\t<div class=\"pricelabel\"><?php esc_html_e( 'Multiple Admissions', 'rsvpmaker' ); ?>:</div><div class=\"pricevalue\">\n\t<input name=\"price_multiple[<?php\n\t\t\t\t\t\t\t\t\t\tif ( isset( $i ) ) {\n\t\t\t\t\t\t\t\t\t\t\techo esc_attr($i);}\n\t\t\t\t\t\t\t\t\t\t?>]\" value=\"<?php\n\t\t\tif ( isset( $per['price_multiple'][ $i ] ) ) {\n\t\t\t\techo (int) $per['price_multiple'][ $i ];\n\t\t\t} else {\n\t\t\t\techo 1;\n\t\t\t}\n\t\t\t?>\" /><br /><em><?php echo __( 'Example: If the price is for a table of 8, enter \"8\"', 'rsvpmaker' ); ?></em>\t\n\n\t</div>\n\n\t\t\t<?php\n\n\t\t\tif ( $rsvp_count_party && ! empty( $newfields ) ) {\n\n\t\t\t\tforeach ( $newfields as $field ) {\n\n\t\t\t\t\t\tprintf( '<div class=\"pricelabel\">%s: </div> <div class=\"pricevalue\"> <input type=\"radio\" name=\"showhide[%d][%s]\" value=\"0\" checked=\"checked\" /> Show <input type=\"radio\" name=\"showhide[%d][%s]\" value=\"1\" /> Hide</div>', $field, $i, $field, $i, $field );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n</div>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\techo '</div>';\n\n\t\t?>\n\n<p><a id=\"add_blanks\" href=\"#\">+ <?php esc_html_e( '', 'rsvpmaker' ); ?>More Prices</a></p>\n\n\t\n\n\t<h3><?php esc_html_e( 'Coupon Codes', 'rsvpmaker' ); ?></h3>\n\n\t<p><?php esc_html_e( 'Optional: Set one or more codes for a discounted fee or a percent off the total.', 'rsvpmaker' ); ?></p>\n\n\t\t<?php\n\n\t\t$coupon_codes = get_post_meta( $post->ID, '_rsvp_coupon_code' );\n\n\t\tif ( empty( $coupon_codes ) ) {\n\n\t\t\t$coupon_codes = array();\n\n\t\t\t$coupon_methods = array( 'amount' );\n\n\t\t\t$coupon_discounts = array();\n\n\t\t} else {\n\n\t\t\t$coupon_methods = get_post_meta( $post->ID, '_rsvp_coupon_method' );\n\n\t\t\t$coupon_methods[] = 'amount'; // gives us one blank row\n\n\t\t\t$coupon_discounts = get_post_meta( $post->ID, '_rsvp_coupon_discount' );\n\n\t\t}\n\n\t\tforeach ( $coupon_methods as $index => $coupon_method ) {\n\n\t\t\t$coupon_code = ( isset( $coupon_codes[ $index ] ) ) ? $coupon_codes[ $index ] : '';\n\n\t\t\t$coupon_discount = ( isset( $coupon_discounts[ $index ] ) ) ? $coupon_discounts[ $index ] : '';\n\n\t\t\t?>\n\n\t<p><?php esc_html_e( 'Coupon Code', 'rsvpmaker' ); ?> <input type=\"text\" name=\"coupon_code[]\" value=\"<?php echo esc_attr( $coupon_code ); ?>\" /> <?php esc_html_e( 'Method', 'rsvpmaker' ); ?>: <select name=\"coupon_method[]\"><option value=\"amount\" \n\t\t\t\t <?php\n\t\t\t\t\tif ( $coupon_method == 'amount' ) {\n\t\t\t\t\t\techo 'selected=\"selected\"';}\n\t\t\t\t\t?>\n\t\t >Discounted Fee</option><option value=\"percent\" \n\t\t\t<?php\n\t\t\tif ( $coupon_method == 'percent' ) {\n\t\t\t\t\techo 'selected=\"selected\"';}\n\t\t\t?>\n\t\t >Percent Off</option></select> <?php esc_html_e( 'Discount', 'rsvpmaker' ); ?>: <input type=\"text\" name=\"coupon_discount[]\" value=\"<?php echo esc_attr( $coupon_discount ); ?>\" /> <br /></p>\n\n\t\t\t<?php\n\n\t\t}\n\n\t\t?>\n\n\t<div id=\"morecodes\"></div>\n\n<p><a id=\"add_codes\" href=\"#\">+ <?php esc_html_e( 'More Codes', 'rsvpmaker' ); ?></a></p>\n\n<script type=\"text/javascript\">\t\n\njQuery(document).ready(function($) {\n\nvar blankcount = <?php echo esc_attr( $starterblanks ); ?>;\n\nvar lastblank = blankcount - 1;\n\nvar blank = $('#block_' + lastblank).html();\n\n$('#add_blanks').click(function(event){\n\n\tevent.preventDefault();\n\nvar newblank = '<' + 'div class=\"priceblock\" id=\"blank_'+blankcount+'\">' +\n\n\tblank.replace(/\\[[0-9]+\\]/g,'['+blankcount+']') +\n\n\t'<' + '/div>';\n\nblankcount++;\n\n$('#priceper').append(newblank);\n\n});\n\n\n\n$('#add_codes').click(function(event){\n\n\tevent.preventDefault();\n\nvar newblank = '<p><?php esc_html_e( 'Coupon Code', 'rsvpmaker' ); ?> <input type=\"text\" name=\"coupon_code[]\" value=\"\" /> Method: <select name=\"coupon_method[]\"><option value=\"amount\" selected=\"selected\" >Discounted Fee</option><option value=\"percent\"  >Percent Off</option></select> Discount: <input type=\"text\" name=\"coupon_discount[]\" value=\"\" /> </p>';\n\n$('#morecodes').append(newblank);\n\n});\n\n\n\n\n\n});\n\n</script>\n\n\t\t<?php\n\n\t\tif ( isset( $_GET['debug'] ) ) {\n\n\t\t\t$defaultfields = array( 'first', 'last', 'email', 'phone', 'phone_type' );\n\n\t\t\tpreg_match_all( '/(textfield|selectfield|radio|checkbox)=\"([^\"]+)\"/', $rsvp_form, $matches );\n\n\t\t\t$newfields = array_diff( $matches[2], $defaultfields );\n\n\t\t}\n\n\t\tif ( isset( $_GET['showmeta'] ) ) {\n\n\t\t\techo '<pre>';\n\n\t\t\tprint_r( $custom_fields );\n\n\t\t\techo '</pre>';\n\n\t\t}\n\n\t\t?>\n\n</div><!-- end rsvpdetails -->\n\n</div>\n\n\t\t<?php\n\n\t}\n} // end rsvp admin ui\n\nfunction ajax_rsvp_email_lookup( $email, $event ) {\n\n\t$p = get_permalink( $event );\n\n\tif ( ! is_email( $email ) ) {\n\n\t\treturn;\n\t}\n\n\tglobal $wpdb;\n\n\t$wpdb->show_errors();\n\n\t$sql = $wpdb->prepare( 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE email LIKE %s AND event=%d', $email, $event );\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( $results ) {\n\n\t\t$out = '<div class=\"previous_rsvp_prompt\">' . __( 'Did you RSVP previously?', 'rsvpmaker' ) . '</div>';\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$out .= 'RSVP ';\n\n\t\t\t$out .= ( $row->yesno ) ? __( 'YES', 'rsvpmaker' ) : __( 'NO', 'rsvpmaker' );\n\n\t\t\t$out .= esc_html( ' ' . $row->first . ' ' . $row->last );\n\n\t\t\t$sql = $wpdb->prepare( 'SELECT count(*) FROM ' . $wpdb->prefix . 'rsvpmaker WHERE master_rsvp=%d', intval( $row->id ) );\n\n\t\t\t$guests = $wpdb->get_var( $sql );\n\n\t\t\tif ( $guests ) {\n\n\t\t\t\t$out .= ' + ' . esc_html( $guests ) . ' ' . __( 'guests', 'rsvpmaker' );\n\t\t\t}\n\n\t\t\treturn sprintf(\n\t\t\t\t'<div><a href=\"%s\">%s</a> %s</div>',\n\t\t\t\tadd_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'e'      => $row->email,\n\t\t\t\t\t\t'update' => $row->id,\n\t\t\t\t\t),\n\t\t\t\t\t$p\n\t\t\t\t),\n\t\t\t\t__( 'Update', 'rsvpmaker' ),\n\t\t\t\t$out\n\t\t\t);\n\n\t\t}\n\t} else {\n\t\treturn;\n\t}\n\n}\n\n\n\nfunction rsvp_form_setup_form( $rsvp_form ) {\n\n\t$hidden = ( strpos( $rsvp_form, 'hidden=\"email\"' ) );\n\n\t$email_list_ok = ( strpos( $rsvp_form, 'checkbox=\"email_list_ok\"' ) );\n\n\tpreg_match( '/textfield=\"([^\"]+)\"/', $rsvp_form, $match );\n\n\t$emailfirst = ( $match[1] == 'email' ) ? ' checked=\"checked\" ' : '';\n\n\t?>\n\n<div id=\"rsvp-dialog-form\" title=\"Form setup\">\n\n  <p><?php esc_html_e( 'First Name, Last Name, Email (required)', 'rsvpmaker' ); ?> Display options: <select id=\"name_email_hidden\" name=\"name_email_hidden\">\n\n\t  <option value=\"email_first\" \n\t  <?php\n\t\tif ( $emailfirst ) {\n\t\t\techo 'selected=\"selected\"';}\n\t\t?>\n\t\t\t ><?php esc_html_e( 'email, then name', 'rsvpmaker' ); ?></option>\n\n\t  <option value=\"name_first\" \n\t  <?php\n\t\tif ( ! $emailfirst && ! $hidden ) {\n\t\t\techo 'selected=\"selected\"';}\n\t\t?>\n\t\t\t ><?php esc_html_e( 'name, then email', 'rsvpmaker' ); ?></option>\n\n\t  <option value=\"hidden\" \n\t  <?php\n\t\tif ( $hidden ) {\n\t\t\techo 'selected=\"selected\"';}\n\t\t?>\n\t\t\t ><?php esc_html_e( 'hidden (use with login required)', 'rsvpmaker' ); ?></option>\n\n\t  </select>\n\n<br /><?php esc_html_e( 'For radio buttons or select fields, use the format Label:option 1, option 2', 'rsvpmaker' ); ?> (<em><?php esc_html_e( 'Meal:Steak,Chicken,Vegitarian', 'rsvpmaker' ); ?></em>)</p> \n\n\t<fieldset>\n\n\t<?php\n\n\tpreg_match_all( '/(\\[.+\\])/', $rsvp_form, $matches );\n\n\tpreg_match( '/max_party=\"(\\d+\")/', $rsvp_form, $maxparty );\n\n\t$codes = implode( $matches[1] );\n\n\t$codes .= '[rsvpfield textfield=\"\"][rsvpfield textfield=\"\"][rsvpfield textfield=\"\"]';\n\n\techo do_shortcode( $codes );\n\n\tglobal $extrafield;\n\n\tprintf( '<input type=\"hidden\" id=\"extrafields\" value=\"%s\" />', $extrafield );\n\n\t$mp = ( empty( $maxparty[1] ) ) ? '' : $maxparty[1] - 1;\n\n\t?>\n\n<p><input type=\"checkbox\" name=\"guests\" id=\"guests\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpguests' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t /> <?php esc_html_e( 'Include guest form', 'rsvpmaker' ); ?> - <?php esc_html_e( 'up to', 'rsvpmaker' ); ?> <input type=\"text\" name=\"maxguests\" id=\"maxguests\" value=\"<?php echo esc_attr($mp); ?>\" size=\"2\" /> <?php esc_html_e( ' guests (enter # or leave blank for no limit)', 'rsvpmaker' ); ?><br /> <input type=\"checkbox\" name=\"note\" id=\"note\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpnote' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t> <?php esc_html_e( 'Include notes field', 'rsvpmaker' ); ?> <input type=\"checkbox\" name=\"emailcheckbox\" id=\"emailcheckbox\" value=\"1\" \n\t<?php\n\tif ( $email_list_ok ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t > <?php esc_html_e( 'Include \"Add me to email list\" checkbox', 'rsvpmaker' ); ?></p>\n\n<p><input type=\"checkbox\" name=\"guests\" id=\"guests\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpguests' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t /> <?php esc_html_e( 'Include guest form', 'rsvpmaker' ); ?> - <?php esc_html_e( 'up to', 'rsvpmaker' ); ?> <input type=\"text\" name=\"maxguests\" id=\"maxguests\" value=\"<?php echo esc_attr($mp); ?>\" size=\"2\" /> <?php esc_html_e( ' guests (enter # or leave blank for no limit)', 'rsvpmaker' ); ?><br /> <input type=\"checkbox\" name=\"note\" id=\"note\" value=\"1\" \n\t<?php\n\tif ( strpos( $rsvp_form, 'rsvpnote' ) ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t> <?php esc_html_e( 'Include notes field', 'rsvpmaker' ); ?> <input type=\"checkbox\" name=\"emailcheckbox\" id=\"emailcheckbox\" value=\"1\" \n\t<?php\n\tif ( $email_list_ok ) {\n\t\techo 'checked=\"checked\"';}\n\t?>\n\t > <?php esc_html_e( 'Include \"Add me to email list\" checkbox', 'rsvpmaker' ); ?></p>\n\n\t  <!-- Allow form submission with keyboard without duplicating the dialog button -->\n\n\t  <input type=\"submit\" tabindex=\"-1\" style=\"position:absolute; top:-1000px\">\n\n\t</fieldset>\n\n</div> \n\n\t<?php\n\n}\n\n\n\nif ( ! function_exists( 'capture_email' ) ) {\n\n\tfunction capture_email( $rsvp ) {\n\n\t\t// placeholder function, may be overriden to sign person up for email list\n\n\t\t// or use this action, triggered by email_list_ok parameter in form\n\n\t\tif ( isset( $rsvp['email_list_ok'] ) && $rsvp['email_list_ok'] ) {\n\n\t\t\tdo_action( 'rsvpmaker_email_list_okay', $rsvp );\n\t\t}\n\n\t}\n} // end capture email\n\n\n\nif ( ! function_exists( 'save_replay_rsvp' ) ) {\n\n\tfunction save_replay_rsvp() {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $rsvp_id;\n\n\t\tif ( isset( $_POST['replay_rsvp'] ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\tif ( get_magic_quotes_gpc() ) {\n\n\t\t\t\t$_POST = array_map( 'stripslashes_deep', $_POST );\n\t\t\t}\n\n\t\t\t$req_uri = trim( sanitize_text_field($_POST['replay_rsvp']) );\n\n\t\t\t$req_uri .= ( strpos( $req_uri, '?' ) ) ? '&' : '?';\n\n\t\t\t// sanitize input\n\n\t\t\tforeach ( $_POST['profile'] as $name => $value ) {\n\n\t\t\t\t$rsvp[ $name ] = sanitize_text_field( $value );\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['note'] ) ) {\n\n\t\t\t\t$note = sanitize_text_field( $_POST['note'] );\n\n\t\t\t} else {\n\t\t\t\t$note = '';\n\t\t\t}\n\n\t\t\t$answer = 'YES';\n\n\t\t\t$event = ( ! empty( $_POST['event'] ) ) ? (int) $_POST['event'] : 0;\n\n\t\t\tif ( ! $event ) {\n\n\t\t\t\tdie( 'Event ID not set' );\n\t\t\t}\n\n\t\t\t// page hasn't loaded yet, so retrieve post variables based on event\n\n\t\t\t$post = get_post( $event );\n\n\t\t\t// get rsvp_to\n\n\t\t\t$custom_fields = get_post_custom( $post->ID );\n\n\t\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\t// if permalinks are not turned on, we need to append to query string not add our own ?\n\n\t\t\tif ( ! is_admin() && isset( $custom_fields['_rsvp_captcha'][0] ) && $custom_fields['_rsvp_captcha'][0] ) {\n\n\t\t\t\tif ( ! isset( $_SESSION['captcha_key'] ) ) {\n\n\t\t\t\t\tsession_start();\n\t\t\t\t}\n\n\t\t\t\tif ( $_SESSION['captcha_key'] != md5( $_POST['captcha'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'security code not entered correctly! Please try again.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! is_admin() && ! empty( $rsvp_options['rsvp_recaptcha_site_key'] ) && ! empty( $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\tif ( ! rsvpmaker_recaptcha_check( $rsvp_options['rsvp_recaptcha_site_key'], $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'failed recaptcha test' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['required'] ) || empty( $rsvp['email'] ) ) {\n\n\t\t\t\t$required = explode( ',', $_POST['required'] );\n\n\t\t\t\tif ( ! in_array( 'email', $required ) ) {\n\n\t\t\t\t\t$required[] = 'email';\n\t\t\t\t}\n\n\t\t\t\t$missing = '';\n\n\t\t\t\tforeach ( $required as $r ) {\n\t\t\t\t\t$r = sanitize_text_field($r);\n\t\t\t\t\tif ( empty( $rsvp[ $r ] ) ) {\n\n\t\t\t\t\t\t$missing .= $r . ' ';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( $missing != '' ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'missing required fields: ' . esc_attr( $missing ) ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( preg_match_all( '/http/', $_POST['note'], $matches ) > 2 ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( preg_match( '|//|', implode( ' ', $rsvp ) ) ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( isset( $rsvp['email'] ) ) {\n\n\t\t\t\t// assuming the form includes email, test to make sure it's a valid one\n\n\t\t\t\tif ( ! apply_filters( 'rsvmpmaker_spam_check', $rsvp['email'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid input.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! filter_var( $rsvp['email'], FILTER_VALIDATE_EMAIL ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid email.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['onfile'] ) ) {\n\n\t\t\t\t$sql = $wpdb->prepare( 'SELECT details FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event='$event' AND email LIKE %s AND first LIKE %s AND last LIKE %s  ORDER BY id DESC\", $rsvp['email'], $rsvp['first'], $rsvp['last'] );\n\n\t\t\t\t$details = $wpdb->get_var( $sql );\n\n\t\t\t\tif ( $details ) {\n\n\t\t\t\t\t$contact = unserialize( $details );\n\n\t\t\t\t} else {\n\t\t\t\t\t$contact = rsvpmaker_profile_lookup( $rsvp['email'] );\n\t\t\t\t}\n\n\t\t\t\tif ( $contact ) {\n\n\t\t\t\t\tforeach ( $contact as $name => $value ) {\n\n\t\t\t\t\t\tif ( ! isset( $rsvp[ $name ] ) ) {\n\n\t\t\t\t\t\t\t$rsvp[ $name ] = $value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tglobal $current_user; // if logged in\n\n\t\t\t$future = is_rsvpmaker_future( $event, 1 ); // if start time in the future (or within one hour)\n\n\t\t\t$yesno = ( $future ) ? 1 : 2;// 2 for replay\n\n\t\t\t$rsvp_sql = $wpdb->prepare( ' SET first=%s, last=%s, email=%s, yesno=%d, event=%d, note=%s, details=%s, participants=%d, user_id=%d ', $rsvp['first'], $rsvp['last'], $rsvp['email'], $yesno, $event, $note, serialize( $rsvp ), 1, $current_user->ID );\n\n\t\t\tcapture_email( $rsvp );\n\n\t\t\t$rsvp_id = ( isset( $_POST['rsvp_id'] ) ) ? (int) $_POST['rsvp_id'] : 0;\n\n\t\t\tif ( $rsvp_id ) {\n\n\t\t\t\t$rsvp_sql = 'UPDATE ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql . \" WHERE id=$rsvp_id\";\n\n\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t} else {\n\n\t\t\t\t$rsvp_sql = 'INSERT INTO ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql;\n\n\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t\t$rsvp_id = $wpdb->insert_id;\n\n\t\t\t\t$sql = 'SELECT date FROM ' . $wpdb->prefix . \"rsvpmaker_event WHERE event=$event \";\n\n\t\t\t\tif ( empty( $wpdb->get_var( $sql ) ) ) {\n\t\t\t\t\t$sql = $wpdb->prepare( 'INSERT INTO  ' . $wpdb->prefix . 'rsvpmaker_event SET event=%d, post_title=%s, date=%s', $event, $post->post_title, get_rsvp_date( $event ) );\n\t\t\t\t\t$wpdb->query( $sql );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetcookie( 'rsvp_for_' . $event, $rsvp_id, time() + ( 60 * 60 * 24 * 90 ), '/', sanitize_text_field($_SERVER['SERVER_NAME']) );\n\n\t\t\tif ( $future ) {\n\n\t\t\t\t$cleanmessage = '';\n\n\t\t\t\tforeach ( $rsvp as $name => $value ) {\n\n\t\t\t\t\t$label = get_post_meta( $event, 'rsvpform' . $name, true );\n\n\t\t\t\t\tif ( $label ) {\n\n\t\t\t\t\t\t$name = $label;\n\t\t\t\t\t}\n\n\t\t\t\t\t$cleanmessage .= $name . ': ' . $value . \"\\n\";// labels from form\n\n\t\t\t\t}\n\n\t\t\t\t$subject = __( 'You registered for ', 'rsvpmaker' ) . ' ' . esc_html( $post->post_title );\n\n\t\t\t\tif ( ! empty( $_POST['note'] ) ) {\n\n\t\t\t\t\t$cleanmessage .= 'Note: ' . sanitize_textarea_field( stripslashes( $_POST['note'] ) );\n\t\t\t\t}\n\n\t\t\t\trsvp_notifications( $rsvp, $rsvp_to, $subject, $cleanmessage, $rsvp_confirm );\n\n\t\t\t} else {\n\n\t\t\t\t// cron for follow up messages\n\n\t\t\t\t$sql = \"SELECT * \n\nFROM  `$wpdb->postmeta` \n\nWHERE meta_key REGEXP '_rsvp_reminder_msg_[0-9]{1,2}'\n\nAND  `post_id` = \" . $event;\n\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t\t// $msg = var_export($results,true);\n\n\t\t\t\tif ( $results ) {\n\n\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\t$parts = explode( '_msg_', $row->meta_key );\n\n\t\t\t\t\t\t$hours = $parts[1];\n\n\t\t\t\t\t\trsvpmaker_replay_cron( $event, $rsvp_id, $hours );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$landing_id = (int) $_POST['landing_id'];\n\n\t\t\t$passcode = get_post_meta( $landing_id, '_webinar_passcode', true );\n\n\t\t\t$landing_permalink = $req_uri . '&webinar=' . $passcode . '&e=' . $rsvp['email'];\n\n\t\t\theader( 'Location: ' . $landing_permalink );\n\n\t\t\texit();\n\n\t\t}\n\n\t}\n} // end save replay rsvp\n\n\n\nif ( ! function_exists( 'save_rsvp' ) ) {\n\n\tfunction save_rsvp() {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $post;\n\n\t\tglobal $rsvp_id;\n\n\t\tglobal $rsvpdata;\n\n\t\t$rsvp_id = ( isset( $_POST['rsvp_id'] ) ) ? (int) $_POST['rsvp_id'] : 0;\n\n\t\t$cleanmessage = '';\n\n\t\tif ( isset( $_POST['withdraw'] ) ) {\n\n\t\t\tforeach ( $_POST['withdraw'] as $withdraw_id ) {\n\n\t\t\t\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET yesno=0 WHERE id=\".intval($withdraw_id) );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_POST['yesno'] ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$_POST = stripslashes_deep( $_POST );\n\n\t\t\t// sanitize input\n\n\t\t\tforeach ( $_POST['profile'] as $name => $value ) {\n\n\t\t\t\t$rsvp[ $name ] = sanitize_text_field( $value );\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['note'] ) ) {\n\n\t\t\t\t$note = sanitize_text_field( $_POST['note'] );\n\n\t\t\t} else {\n\t\t\t\t$note = '';\n\t\t\t}\n\n\t\t\t$yesno = (int) $_POST['yesno'];\n\n\t\t\t$answer = ( $yesno ) ? __( 'YES', 'rsvpmaker' ) : __( 'NO', 'rsvpmaker' );\n\n\t\t\t$event = ( ! empty( $_POST['event'] ) ) ? (int) $_POST['event'] : 0;\n\n\t\t\tif ( ! $event ) {\n\n\t\t\t\tdie( 'Event ID not set' );\n\t\t\t}\n\t\t\tif(!get_post_meta($event,'_rsvp_on'))\n\t\t\t\treturn;\n\n\t\t\t// page hasn't loaded yet, so retrieve post variables based on event\n\n\t\t\t$post = get_post( $event );\n\n\t\t\t// get rsvp_to\n\n\t\t\t$custom_fields = get_post_custom( $post->ID );\n\n\t\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\t$rsvp_max = $custom_fields['_rsvp_max'][0];\n\n\t\t\t$count = $wpdb->get_var( 'SELECT count(*) FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$event AND yesno=1\" );\n\n\t\t\t// if permalinks are not turned on, we need to append to query string not add our own ?\n\n\t\t\t$guest_sql = array();\n\n\t\t\t$guest_text = array();\n\n\t\t\tif ( is_admin() ) {\n\n\t\t\t\t$req_uri = admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . $event );\n\n\t\t\t} else {\n\n\t\t\t\t$req_uri = site_url( '?post_type=rsvpmaker&p=' . $event . '&e=' . $rsvp['email'] );\n\n\t\t\t}\n\n\t\t\tif ( ! is_admin() && isset( $custom_fields['_rsvp_captcha'][0] ) && $custom_fields['_rsvp_captcha'][0] ) {\n\n\t\t\t\tif ( ! isset( $_SESSION['captcha_key'] ) ) {\n\n\t\t\t\t\tsession_start();\n\t\t\t\t}\n\n\t\t\t\tif ( $_SESSION['captcha_key'] != md5( $_POST['captcha'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'security code not entered correctly! Please try again.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! is_admin() && ! empty( $rsvp_options['rsvp_recaptcha_site_key'] ) && ! empty( $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\tif ( ! rsvpmaker_recaptcha_check( $rsvp_options['rsvp_recaptcha_site_key'], $rsvp_options['rsvp_recaptcha_secret'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'failed recaptcha test' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['required'] ) || empty( $rsvp['email'] ) ) {\n\n\t\t\t\t$required = explode( ',', $_POST['required'] );\n\n\t\t\t\tif ( ! in_array( 'email', $required ) ) {\n\n\t\t\t\t\t$required[] = 'email';\n\t\t\t\t}\n\n\t\t\t\t$missing = '';\n\n\t\t\t\tforeach ( $required as $r ) {\n\t\t\t\t\t$r = sanitize_text_field($r);\n\t\t\t\t\tif ( empty( $rsvp[ $r ] ) ) {\n\t\t\t\t\t\t$missing .= $r . ' ';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( $missing != '' ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'missing required fields: ' . $missing ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! isset( $rsvp['first'] ) ) {\n\n\t\t\t\t$rsvp['first'] = '';\n\t\t\t}\n\n\t\t\tif ( ! isset( $rsvp['last'] ) ) {\n\n\t\t\t\t$rsvp['last'] = '';\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['note'] ) && preg_match_all( '/http/', $_POST['note'], $matches ) > 2 ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( preg_match( '|//|', implode( ' ', $rsvp ) ) ) {\n\n\t\t\t\theader( 'Location: ' . $req_uri . '&err=Invalid input' );\n\n\t\t\t\texit();\n\n\t\t\t}\n\n\t\t\tif ( isset( $rsvp['email'] ) ) {\n\n\t\t\t\t// assuming the form includes email, test to make sure it's a valid one\n\n\t\t\t\tif ( ! apply_filters( 'rsvmpmaker_spam_check', $rsvp['email'] ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid input.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! filter_var( $rsvp['email'], FILTER_VALIDATE_EMAIL ) ) {\n\n\t\t\t\t\theader( 'Location: ' . $req_uri . '&err=' . urlencode( 'Invalid email.' ) );\n\n\t\t\t\t\texit();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( empty( $rsvp_id ) ) {\n\n\t\t\t\t$duplicate_check = $wpdb->get_var( 'SELECT id FROM ' . $wpdb->prefix . \"rsvpmaker WHERE email='\" . $rsvp['email'] . \"' AND first='\" . $rsvp['first'] . \"' AND last='\" . $rsvp['last'] . \"' AND event=$post->ID \" );\n\n\t\t\t\tif ( $duplicate_check ) {\n\n\t\t\t\t\trsvpmaker_debug_log( $rsvp, 'duplicate check' );\n\n\t\t\t\t\t$rsvp_id = $duplicate_check;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $rsvp_id ) {\n\n\t\t\t\t$sql = 'SELECT details FROM ' . $wpdb->prefix . \"rsvpmaker WHERE email !='' AND id=\" . $rsvp_id;\n\n\t\t\t\t$details = $wpdb->get_var( $sql );\n\n\t\t\t\tif ( $details ) {\n\n\t\t\t\t\t$contact = unserialize( $details );\n\n\t\t\t\t\tif ( is_array( $contact ) ) {\n\n\t\t\t\t\t\tforeach ( $contact as $name => $value ) {\n\n\t\t\t\t\t\t\tif ( ! isset( $rsvp[ $name ] ) ) {\n\n\t\t\t\t\t\t\t\t$rsvp[ $name ] = $value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$rsvp_id = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$rsvp['payingfor'] = '';\n\n\t\t\tif ( isset( $_POST['payingfor'] ) && is_array( $_POST['payingfor'] ) ) {\n\n\t\t\t\t$rsvp['total'] = 0;\n\n\t\t\t\t$participants = 0;\n\n\t\t\t\tforeach ( $_POST['payingfor'] as $index => $value ) {\n\n\t\t\t\t\t$value = (int) $value;\n\n\t\t\t\t\t$unit = sanitize_text_field( $_POST['unit'][ $index ] );\n\n\t\t\t\t\t$price = (float) $_POST['price'][ $index ];\n\n\t\t\t\t\t$price = rsvpmaker_check_coupon_code( $price );\n\n\t\t\t\t\t$cost = $value * $price;\n\n\t\t\t\t\t$rsvp['payingfor'] .= '<div class=\"payingfor\">' . \"$value $unit @ \" . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] . '</div>';\n\n\t\t\t\t\t$rsvp['total'] += $cost;\n\n\t\t\t\t\t$participants += $value;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_POST['timeslot'] ) && is_array( $_POST['timeslot'] ) ) {\n\n\t\t\t\t$participants = $rsvp['participants'] = (int) $_POST['participants'];\n\n\t\t\t\t$rsvp['timeslots'] = ''; // ignore anything retrieved from prev rsvps\n\n\t\t\t\tforeach ( $_POST['timeslot'] as $slot ) {\n\n\t\t\t\t\tif ( ! empty( $rsvp['timeslots'] ) ) {\n\n\t\t\t\t\t\t$rsvp['timeslots'] .= ', ';\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvp['timeslots'] .= rsvpmaker_date( 'g:i A', sanitize_text_field($slot) );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! isset( $participants ) && $yesno ) {\n\n\t\t\t\t// if they didn't specify # of participants (paid tickets or volunteers), count the host plus guests\n\n\t\t\t\t$participants = 1;\n\n\t\t\t\tif ( ! empty( $_POST['guest']['first'] ) ) {\n\n\t\t\t\t\tforeach ( $_POST['guest']['first'] as $first ) {\n\n\t\t\t\t\t\tif ( $first ) {\n\n\t\t\t\t\t\t\t$participants++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $_POST['guestdelete'] ) ) {\n\n\t\t\t\t\t$participants -= sizeof( $_POST['guestdelete'] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! $yesno ) {\n\n\t\t\t\t$participants = 0; // if they said no, they don't count\n\t\t\t}\n\n\t\t\tif ( $participants && isset( $_POST['guest_count_price'] ) ) {\n\n\t\t\t\t$cleanmessage .= '<div>' . __( 'Participants', 'rsvpmaker' ) . \": $participants</div>\\n\";\n\n\t\t\t\t$index = (int) $_POST['guest_count_price'];\n\n\t\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\n\t\t\t\t$price = $per['price'][ $index ];\n\n\t\t\t\t$unit = $per['unit'][ $index ];\n\n\t\t\t\t$multiple = (int) ( isset( $per['price_multiple'][ $index ] ) ) ? $per['price_multiple'][ $index ] : 1;\n\n\t\t\t\tif ( $multiple == 1 ) { // coupon codes not applied to multiple admission \"table\" pricing\n\n\t\t\t\t\t$price = rsvpmaker_check_coupon_code( $price );\n\t\t\t\t}\n\n\t\t\t\tif ( $multiple > 1 ) {\n\n\t\t\t\t\t$rsvp['total'] = $price;\n\n\t\t\t\t\tif ( $participants > $multiple ) {\n\n\t\t\t\t\t\t$multiple_warning = '<div style=\"color:red;\">' . \"Warning: party of $participants exceeds table size\" . '</div>';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$padguests = $multiple - $participants;\n\n\t\t\t\t\t\t$participants = $multiple;\n\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$rsvp['total'] = $price * $participants;\n\t\t\t\t}\n\n\t\t\t\t$rsvp['payingfor'] .= \"$participants $unit @ \" . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] );\n\n\t\t\t\t$rsvp['pricechoice'] = $index;\n\n\t\t\t}\n\n\t\t\tglobal $current_user; // if logged in\n\n\t\t\tglobal $rsvpmaker_coupon_message;\n\n\t\t\tif ( ! empty( $rsvpmaker_coupon_message ) ) {\n\n\t\t\t\t$rsvp['coupon'] = $rsvpmaker_coupon_message;\n\t\t\t}\n\n\t\t\t$rsvp_sql = $wpdb->prepare( ' SET first=%s, last=%s, email=%s, yesno=%d, event=%d, note=%s, details=%s, participants=%d, user_id=%d ', $rsvp['first'], $rsvp['last'], $rsvp['email'], $yesno, $event, $note, serialize( $rsvp ), $participants, $current_user->ID );\n\n\t\t\tcapture_email( $rsvp );\n\n\t\t\tif ( $rsvp_id ) {\n\n\t\t\t\t$rsvp_sql = 'UPDATE ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql . \" WHERE id=$rsvp_id\";\n\n\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t} else {\n\n\t\t\t\t$count++;\n\n\t\t\t\tif ( $rsvp_max && ( $count > $rsvp_max ) ) {\n\n\t\t\t\t\t$cleanmessage .= '<div style=\"color:red;\">' . __( 'Max RSVP count limit reached, entry not added for:', 'rsvpmaker' ) . \"\\n\" . $rsvp['first'] . ' ' . $rsvp['last'] . '</div>';\n\n\t\t\t\t\t$rsvp_id = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$rsvp_sql = 'INSERT INTO ' . $wpdb->prefix . 'rsvpmaker ' . $rsvp_sql;\n\n\t\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t\t$wpdb->query( $rsvp_sql );\n\n\t\t\t\t\t$rsvp_id = $wpdb->insert_id;\n\n\t\t\t\t\t$sql = 'SELECT date FROM ' . $wpdb->prefix . \"rsvpmaker_event WHERE event=$event \";\n\n\t\t\t\t\tif ( empty( $wpdb->get_var( $sql ) ) ) {\n\n\t\t\t\t\t\t$sql = $wpdb->prepare( 'INSERT INTO  ' . $wpdb->prefix . 'rsvpmaker_event SET event=%d, post_title=%s, date=%s', $event, $post->post_title, get_rsvp_date( $event ) );\n\t\t\t\t\t\t//rsvpmaker_debug_log( $sql, 'save_rsvp rsvpmaker_event' );\n\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $rsvp_options['send_payment_reminders'] ) && isset( $price ) && ( $price > 0 ) ) {\n\n\t\t\t\trsvpmaker_payment_reminder_cron( $rsvp_id );\n\t\t\t}\n\n\t\t\tsetcookie( 'rsvp_for_' . $post->ID, $rsvp_id, time() + 60 * 60 * 24 * 90, '/', sanitize_text_field($_SERVER['SERVER_NAME']) );\n\n\t\t\tsetcookie( 'rsvpmaker', $rsvp_id, time() + 60 * 60 * 24 * 90, '/', sanitize_text_field($_SERVER['SERVER_NAME']) );\n\n\t\t\tif ( isset( $_POST['timeslot'] ) ) {\n\n\t\t\t\t$participants = (int) $_POST['participants'];\n\n\t\t\t\t// clear previous response, if any\n\n\t\t\t\t$wpdb->query( 'DELETE FROM ' . $wpdb->prefix . \"rsvp_volunteer_time WHERE rsvp=$rsvp_id\" );\n\n\t\t\t\tforeach ( $_POST['timeslot'] as $slot ) {\n\n\t\t\t\t\t$slot = (int) $slot;\n\n\t\t\t\t\t$sql = $wpdb->prepare( 'INSERT INTO ' . $wpdb->prefix . 'rsvp_volunteer_time SET time=%d, event=%d, rsvp=%d, participants=%d', $slot, $post->ID, $rsvp_id, $participants );\n\n\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// get start date\n\n\t\t\t$rows = get_rsvp_dates( $event );\n\n\t\t\t$row = $rows[0];\n\n\t\t\t$date = rsvpdate_shortcode( array( 'format' => '%b %e' ) );\n\n\t\t\tforeach ( $rsvp as $name => $value ) {\n\n\t\t\t\t$label = get_post_meta( $post->ID, 'rsvpform' . $name, true );\n\n\t\t\t\tif ( $label ) {\n\n\t\t\t\t\t$name = $label;\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $value ) ) {\n\n\t\t\t\t\t$cleanmessage .= $name . ': ' . $value . \"\\n\";// labels from rsvp form\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$guestof = (empty($rsvp['first'])) ? '' : $rsvp['first'] . ' ';\n\t\t\t$guestof .=  (empty($rsvp['last'])) ? '' : $rsvp['last'];\n\n\t\t\tif ( isset( $_POST['guest']['first'] ) ) {\n\n\t\t\t\tforeach ( $_POST['guest']['first'] as $index => $first ) {\n\n\t\t\t\t\t$last = ( empty( $_POST['guest']['last']) || !empty($_POST['guest']['last'][ $index ]) ) ? '' : sanitize_text_field($_POST['guest']['last'][ $index ]);\n\t\t\t\t\tif ( ! empty( $first ) ) {\n\t\t\t\t\t\t$guest_sql[ $index ] = $wpdb->prepare( ' SET event=%d, yesno=%d, `master_rsvp`=%d, `guestof`=%s, `first` = %s, `last` = %s', $event, $yesno, $rsvp_id, $guestof, $first, $last );\n\t\t\t\t\t\t$guest_text[ $index ] = sprintf( \"Guest: %s %s\\n\", $first, $last );\n\t\t\t\t\t\t$guest_list[ $index ] = sprintf( '%s %s', $first, $last );\n\t\t\t\t\t\t$lastguest = $index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $padguests ) ) {\n\n\t\t\t\tfor ( $i = 0; $i < $padguests; $i++ ) {\n\n\t\t\t\t\t$index = $i + 100;\n\n\t\t\t\t\t$tbd = $i + 1;\n\n\t\t\t\t\t$guest_sql[ $index ] = $wpdb->prepare( ' SET event=%d, yesno=%d, `master_rsvp`=%d, `guestof`=%s, `first` = %s, `last` = %s', $event, $yesno, $rsvp_id, $guestof, 'Placeholder', 'Guest TBD ' . $tbd );\n\n\t\t\t\t\t$guest_text[ $index ] = sprintf( \"Guest: %s %s\\n\", 'Placeholder', 'Guest TBD ' . $tbd );\n\n\t\t\t\t\t$guest_list[ $index ] = sprintf( '%s %s', 'Placeholder', 'Guest TBD ' . $tbd );\n\n\t\t\t\t\t$newrow[ $index ]['first'] = 'Placeholder';\n\n\t\t\t\t\t$newrow[ $index ]['last'] = 'Guest TBD ' . $tbd;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sizeof( $guest_sql ) ) {\n\t\t\t\tforeach ( $_POST['guest'] as $field => $column ) {\n\t\t\t\t\tforeach ( $column as $index => $value ) {\n\t\t\t\t\t\tif ( empty( $guest_text[ $index ] ) ) {\n\t\t\t\t\t\t\t$guest_text[ $index ] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( isset( $guest_sql[ $index ] ) ) {\n\t\t\t\t\t\t\t$newrow[ $index ][ $field ] = $value;\n\t\t\t\t\t\t\tif ( ( $field != 'first' ) && ( $field != 'last' ) && ( $field != 'id' ) ) {\n\t\t\t\t\t\t\t\t$guest_text[ $index ] .= sprintf( \"%s: %s\\n\", $field, $value );\n\t\t\t\t\t\t\t\t$guestlast = (empty($_POST['guest']['last'][ $index ])) ? '' : sanitize_text_field($_POST['guest']['last'][ $index ]);\n\t\t\t\t\t\t\t\t$guest_list[ $index ] = sprintf( '%s %s', $first, $guestlast );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( sizeof( $guest_sql ) ) {\n\n\t\t\t\tforeach ( $guest_sql as $index => $sql ) {\n\n\t\t\t\t\t$sql .= $wpdb->prepare( ', `details`=%s ', serialize( $newrow[ $index ] ) );\n\n\t\t\t\t\t$id = ( isset( $_POST['guest']['id'][ $index ] ) ) ? (int) $_POST['guest']['id'][ $index ] : 0;\n\n\t\t\t\t\tif ( isset( $_POST['guestdelete'][ $id ] ) ) {\n\n\t\t\t\t\t\t$gd = (int) $_POST['guestdelete'][ $id ];\n\n\t\t\t\t\t\t$sql = 'DELETE FROM ' . $wpdb->prefix . 'rsvpmaker WHERE id=' . $gd;\n\n\t\t\t\t\t\t$guest_text[ $index ] = __( 'Deleted:', 'rsvpmaker' ) . \"\\n\" . $guest_text[ $index ];\n\n\t\t\t\t\t\t$guest_list[ $index ] = __( 'Deleted:', 'rsvpmaker' ) . ' ' . $guest_list[ $index ];\n\n\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t} elseif ( $id ) {\n\n\t\t\t\t\t\t$sql = 'UPDATE ' . $wpdb->prefix . 'rsvpmaker ' . $sql . ' WHERE id=' . $id;\n\n\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$count++;\n\n\t\t\t\t\t\tif ( $rsvp_max && ( $count > $rsvp_max ) ) {\n\n\t\t\t\t\t\t\t$guest_text[ $index ] = '<div style=\"color:red;\">' . __( 'Max RSVP count limit reached, entry not added for:', 'rsvpmaker' ) . \"\\n\" . $guest_text[ $index ] . '</div>';\n\n\t\t\t\t\t\t\t$guest_list[ $index ] = '<div style=\"color:red;\">' . __( 'Max RSVP count limit reached, entry not added for:', 'rsvpmaker' ) . \"\\n\" . $guest_text[ $index ] . '</div>';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$sql = 'INSERT INTO ' . $wpdb->prefix . 'rsvpmaker ' . $sql;\n\n\t\t\t\t\t\t\t$wpdb->query( $sql );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $guest_list ) ) {\n\n\t\t\t\t$cleanmessage .= __( 'Guests', 'rsvpmaker' ) . ': ' . implode( ', ', $guest_list );\n\t\t\t}\n\n\t\t\tif ( ! empty( $multiple_warning ) ) {\n\n\t\t\t\t$cleanmessage .= $multiple_warning;\n\t\t\t}\n\n\t\t\tif ( ! is_admin() ) {\n\n\t\t\t\tif ( ! empty( $_POST['note'] ) ) {\n\n\t\t\t\t\t$cleanmessage .= 'Note: ' . stripslashes( $_POST['note'] );\n\t\t\t\t}\n\n\t\t\t\t$include_event = get_post_meta( $post->ID, '_rsvp_confirmation_include_event', true );\n\n\t\t\t\tif ( $include_event ) {\n\n\t\t\t\t\t$embed = event_to_embed( $post->ID, $post, 'confirmation' );\n\n\t\t\t\t\t$cleanmessage .= \"\\n\\n\" . $embed['content'];\n\n\t\t\t\t}\n\n\t\t\t\t$rsvpdata['rsvpdetails'] = $cleanmessage;\n\n\t\t\t\t$rsvpdata['rsvpmessage'] = $rsvp_confirm; // confirmation message from editor\n\n\t\t\t\t// $rsvpdata[\"rsvptitle\"] = $post->post_title;\n\n\t\t\t\t$rsvpdata['rsvpyesno'] = $answer;\n\t\t\t\t$rsvpdata['yesno'] = $yesno;\n\t\t\t\t$rsvpdata['rsvpdate'] = $date;\n\n\t\t\t\t$rsvp_options['rsvplink'] = get_rsvp_link( $post->ID );\n\n\t\t\t\t$rsvpdata['rsvpupdate'] = preg_replace( '/#rsvpnow\">[^<]+/', '#rsvpnow\">' . $rsvp_options['update_rsvp'], str_replace( '*|EMAIL|*', $rsvp['email'] . '&update=' . $rsvp_id, $rsvp_options['rsvplink'] ) );\n\t\t\t\t\n\t\t\t\trsvp_notifications_via_template( $rsvp, $rsvp_to, $rsvpdata );\n\n\t\t\t\t// rsvp_notifications ($rsvp,$rsvp_to,$subject,$cleanmessage,$rsvp_confirm);\n\n\t\t\t}\n\n\t\t\tdo_action( 'rsvp_recorded', $rsvp );\n\n\t\t\theader( 'Location: ' . $req_uri . '&rsvp=' . $rsvp_id . '#rsvpmaker_top' );\n\n\t\t\texit();\n\n\t\t}\n\n\t}\n} // end save rsvp\n\n\n\nif ( ! function_exists( 'rsvp_notifications' ) ) {\n\n\tfunction rsvp_notifications( $rsvp, $rsvp_to, $subject, $message, $rsvp_confirm = '' ) {\n\n\t\tinclude_once 'rsvpmaker-ical.php';\n\n\t\tglobal $post;\n\n\t\t$message = wpautop( $message );\n\n\t\t$mail['html'] = $rsvp_confirm . \"\\n\\n\" . $message;\n\n\t\tglobal $rsvp_options;\n\n\t\t$mail['to'] = $rsvp_to;\n\n\t\t$mail['from'] = $rsvp['email'];\n\n\t\t$mail['fromname'] = $rsvp['first'] . ' ' . $rsvp['last'];\n\n\t\t$mail['subject'] = $subject;\n\n\t\trsvpmaker_tx_email( $post, $mail );\n\n\t\tif ( isset( $post->ID ) ) { // not for replay\n\n\t\t\t$mail['ical'] = rsvpmaker_to_ical_email( $post->ID, $rsvp_to, $rsvp['email'] );\n\t\t}\n\n\t\t$mail['to'] = $rsvp['email'];\n\n\t\t$mail['from'] = $rsvp_to;\n\n\t\t$mail['fromname'] = get_bloginfo( 'name' );\n\n\t\t$mail['subject'] = 'Confirming ' . $subject;\n\n\t\trsvpmaker_tx_email( $post, $mail );\n\n\t}\n} // end rsvp notifications\n\n\nif ( ! function_exists( 'admin_payment' ) ) {\n\n\tfunction admin_payment( $rsvp_id, $charge ) {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $current_user;\n\n\t\t$event = (int) $_GET['event'];\n\n\t\t$paid = $charge;\n\n\t\t$paid_amounts = get_post_meta( $event, '_paid_' . $rsvp_id );\n\n\t\tif ( is_array( $paid_amounts ) ) {\n\n\t\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t\t$paid += $payment;\n\t\t\t}\n\t\t}\n\n\t\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\t\tadd_post_meta( $event, '_paid_' . $rsvp_id, $charge );\n\n\t\tdelete_post_meta( $event, '_open_invoice_' . $rsvp_id );\n\n\t\tdelete_post_meta( $event, '_invoice_' . $rsvp_id );\n\n\t\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$rsvp_id \", ARRAY_A );\n\n\t\t$message = sprintf( '<p>%s ' . __( 'payment for', 'rsvpmaker' ) . ' %s %s ' . __( ' manually recorded by', 'rsvpmaker' ) . ' %s<br />' . __( 'Post ID', 'rsvpmaker' ) . ': %s<br />' . __( 'Time', 'rsvpmaker' ) . ': %s</p>', $charge, esc_attr( $row['first'] ), esc_attr( $row['last'] ), $current_user->display_name, $event, date( 'r' ) );\n\n\t\tadd_post_meta( $event, '_paypal_log', $message );\n\n\t\techo wp_kses_post($message);\n\n\t}\n} // end admin payment\n\nfunction rsvpmaker_localdate() {\n\n\tif ( empty( $_REQUEST['action'] ) || $_REQUEST['action'] != 'rsvpmaker_localstring' ) {\n\n\t\treturn;\n\t}\n\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')))\n\t\treturn;\n\n\t$output = '';\n\n\tglobal $rsvp_options;\n\n\tif ( ! empty( $_REQUEST['localstring'] ) ) {\n\n\t\tpreg_match( '/(.+:00 ).+\\(([^)]+)/', sanitize_text_field($_REQUEST['localstring']), $matches );\n\n\t\t$tf = str_replace( 'T', '', $rsvp_options['time_format'] );\n\n\t\t$t = rsvpmaker_strtotime( $matches[1] );\n\n\t\t$output = rsvpmaker_date( $rsvp_options['long_date'], $t ) . ' ' . rsvpmaker_date( $tf, $t ) . ' ' . $matches[2];\n\n\t}\n\n\techo wp_kses_post($output);\n\n\twp_die();\n\n}\n\n\n\nif ( ! function_exists( 'basic_form' ) ) {\n\n\tfunction basic_form( $form = '' ) {\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $post;\n\n\t\tif ( empty( $form ) ) {\n\n\t\t\t$form = get_post_meta( $post->ID, '_rsvp_form', true );\n\t\t}\n\n\t\tif ( empty( $form ) ) {\n\n\t\t\t$form = $rsvp_options['rsvp_form'];\n\t\t}\n\n\t\tif ( is_numeric( $form ) ) {\n\n\t\t\t$fpost = get_post( $form );\n\n\t\t\techo do_blocks( $fpost->post_content );\n\n\t\t} else {\n\t\t\techo do_shortcode( $form );\n\t\t}\n\n\t}\n}\n\n\n\n// global variable for content\n\n$confirmed_content = '';\n\n\n\nif ( ! function_exists( 'event_content' ) ) {\n\n\tfunction event_content( $content, $formonly = false, $form = '' ) {\n\n\t\tif ( is_admin() ) { // || !in_the_loop()\n\n\t\t\treturn $content;\n\t\t}\n\n\t\tglobal $wpdb, $post, $rsvp_options, $profile, $master_rsvp, $showbutton, $blanks_allowed, $email_context, $confirmed_content;\n\t\t// If the post is not an event, leave it alone\n\n\t\tif ( $post->post_type != 'rsvpmaker' ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t$rsvpconfirm = $rsvp_confirm = '';\n\n\t\t$display = array();\n\n\t\tif ( post_password_required( $post ) ) {\n\n\t\t\treturn $content;\n\n\t\t}\n\n\t\tglobal $custom_fields; // make this globally accessible\n\n\t\t$custom_fields = get_rsvpmaker_custom( $post->ID );\n\n\t\t$content = apply_filters( 'rsvpmaker_event_content_top', $content, $custom_fields );\n\n\t\t// if requiring passcode, check code (unless RSVP cookie is set)\n\n\t\tif ( isset( $custom_fields['_require_webinar_passcode'][0] ) && $custom_fields['_require_webinar_passcode'][0] && ! isset( $_COOKIE[ 'rsvp_for_' . $post->ID ] ) ) {\n\n\t\t\t$event_id = $custom_fields['_require_webinar_passcode'][0];\n\n\t\t\tif ( ! isset( $_GET['webinar'] ) ) {\n\n\t\t\t\treturn rsvpmaker_replay_form( $custom_fields['_webinar_event_id'][0] );\n\t\t\t}\n\n\t\t\t$code = sanitize_text_field($_GET['webinar']);\n\n\t\t\t$required = $custom_fields['_require_webinar_passcode'][0];\n\n\t\t\tif ( $required != trim( $code ) ) {\n\n\t\t\t\treturn rsvpmaker_replay_form( $custom_fields['_webinar_event_id'][0] );\n\t\t\t}\n\t\t}\n\n\t\t$permalink = site_url( '?post_type=rsvpmaker&p=' . intval( $post->ID ) );\n\n\t\tif ( isset( $custom_fields['_rsvp_on'][0] ) ) {\n\n\t\t\t$rsvp_on = $custom_fields['_rsvp_on'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_login_required'][0] ) ) {\n\n\t\t\t$login_required = $custom_fields['_rsvp_login_required'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_to'][0] ) ) {\n\n\t\t\t$rsvp_to = $custom_fields['_rsvp_to'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_max'][0] ) ) {\n\n\t\t\t$rsvp_max = $custom_fields['_rsvp_max'][0];\n\t\t}\n\n\t\t$rsvp_count = ( isset( $custom_fields['_rsvp_count'][0] ) && $custom_fields['_rsvp_count'][0] ) ? 1 : 0;\n\n\t\t$rsvp_show_attendees = ( isset( $custom_fields['_rsvp_show_attendees'][0] ) && $custom_fields['_rsvp_show_attendees'][0] ) ? $custom_fields['_rsvp_show_attendees'][0] : 0;\n\n\t\tif ( isset( $custom_fields['_rsvp_deadline'][0] ) && $custom_fields['_rsvp_deadline'][0] ) {\n\n\t\t\t$deadline = (int) $custom_fields['_rsvp_deadline'][0];\n\t\t}\n\n\t\tif ( isset( $custom_fields['_rsvp_start'][0] ) && $custom_fields['_rsvp_start'][0] ) {\n\n\t\t\t$rsvpstart = (int) $custom_fields['_rsvp_start'][0];\n\t\t}\n\n\t\t$rsvp_instructions = ( isset( $custom_fields['_rsvp_instructions'][0] ) ) ? $custom_fields['_rsvp_instructions'][0] : null;\n\n\t\t$rsvp_yesno = ( isset( $custom_fields['_rsvp_yesno'][0] ) ) ? $custom_fields['_rsvp_yesno'][0] : 1;\n\n\t\t$replay = ( isset( $custom_fields['_replay'][0] ) ) ? $custom_fields['_replay'][0] : null;\n\n\t\t$first = ( isset( $_GET['first'] ) ) ? sanitize_text_field($_GET['first']) : null;\n\n\t\t$last = ( isset( $_GET['last'] ) ) ? sanitize_text_field($_GET['last']) : null;\n\n\t\t$rsvprow = null;\n\n\t\t$e = get_rsvp_email();\n\n\t\t$rsvp_id = get_rsvp_id( $e );\n\n\t\t$profile = rsvpmaker_profile_lookup( $e );\n\n\t\tif ( $rsvp_id && $e ) {\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$rsvp_id and email='$e'\";\n\n\t\t\t$rsvprow = $wpdb->get_row( $sql, ARRAY_A );\n\n\t\t}\n\n\t\tif ( $profile ) {\n\n\t\t\t$first = $profile['first'];\n\n\t\t\t$last = $profile['last'];\n\n\t\t}\n\n\t\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\t$rsvp_confirm .= \"\\n\\n\" . wpautop( get_post_meta( $post->ID, '_rsvp_' . $e, true ) );\n\n\t\t\t$rsvpconfirm = '<h3>' . esc_html( __( 'RSVP Recorded', 'rsvpmaker' ) ) . '</h3>\t\n\n' . $rsvp_confirm;\n\n\t\t} elseif ( isset( $_COOKIE[ 'rsvp_for_' . $post->ID ] ) && ! $email_context ) {\n\n\t\t\t$rsvp_confirm = rsvp_get_confirm( $post->ID );\n\n\t\t\tif ( $rsvprow ) {\n\n\t\t\t\t$permalink .= ( strpos( $permalink, '?' ) ) ? '&' : '?';\n\n\t\t\t\t$rsvpconfirm = '\n\n<h4>' . $rsvp_options['update_rsvp'] . '?</h4>\t\n\n<p><a href=\"' . esc_url_raw( $permalink . 'update=' . $rsvp_id . '&e=' . $rsvprow['email'] ) . '#rsvpnow\">' . __( 'Yes', 'rsvpmaker' ) . '</a>, ' . __( 'I want to update this record for ', 'rsvpmaker' ) . esc_html( $rsvprow['first'] . ' ' . $rsvprow['last'] ) . '</p>\n\n';\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ( ( $e && isset( $_GET['rsvp'] ) ) || ( is_user_logged_in() && ! $email_context ) ) ) {\n\n\t\t\tif ( $rsvprow && is_single() ) {\n\n\t\t\t\t$master_rsvp = $rsvprow['id'];\n\n\t\t\t\t$rsvpwithdraw = sprintf( '<div><input type=\"checkbox\" checked=\"checked\" name=\"withdraw[]\" value=\"%d\"> %s %s</div>', esc_attr( $rsvprow['id'] ), esc_html( $rsvprow['first'] ), esc_html( $rsvprow['last'] ) );\n\n\t\t\t\t$answer = ( $rsvprow['yesno'] ) ? __( 'Yes', 'rsvpmaker' ) : __( 'No', 'rsvpmaker' );\n\n\t\t\t\t$rsvpconfirm .= '<div class=\"rsvpdetails\"><p>' . __( 'Your RSVP', 'rsvpmaker' ) . \": $answer</p>\\n\";\n\n\t\t\t\t$profile = $details = rsvp_row_to_profile( $rsvprow );\n\n\t\t\t\tif ( isset( $details['total'] ) && $details['total'] ) {\n\n\t\t\t\t\t$invoice_id = (int) get_post_meta( $post->ID, '_open_invoice_' . $rsvp_id, true );\n\n\t\t\t\t\t$paid = 0;\n\n\t\t\t\t\t$paid_amounts = get_post_meta( $post->ID, '_paid_' . $rsvp_id );\n\n\t\t\t\t\tif ( is_array( $paid_amounts ) ) {\n\n\t\t\t\t\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t\t\t\t\t$paid += $payment;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$charge = $details['total'] - $paid;\n\n\t\t\t\t\t$price_display = ( $charge == $details['total'] ) ? $details['total'] : $details['total'] . ' - ' . $paid . ' = ' . $charge;\n\n\t\t\t\t\tif ( $invoice_id ) {\n\n\t\t\t\t\t\tupdate_post_meta( $post->ID, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$invoice_id = 'rsvp' . add_post_meta( $post->ID, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t\tadd_post_meta( $post->ID, '_open_invoice_' . $rsvp_id, $invoice_id );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . __( 'Pay for ', 'rsvpmaker' ) . ' ' . esc_html( $details['payingfor'] ) . ' = ' . number_format( $details['total'], 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] . ' ' . $rsvp_options['paypal_currency'] ) . '</strong></p>';\n\n\t\t\t\t\tif ( $charge != $details['total'] ) {\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . __( 'Previously Paid', 'rsvpmaker' ) . ' ' . number_format( $paid, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] . '</strong></p>';\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . __( 'Balance Owed', 'rsvpmaker' ) . ' ' . number_format( $charge, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] . '</strong></p>';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $charge > 0 ) {\n\n\t\t\t\t\t\t$gateway = get_rsvpmaker_payment_gateway();\n\n\t\t\t\t\t\tif ( $gateway == 'Stripe' ) {\n\n\t\t\t\t\t\t\t$rsvprow['amount'] = $charge;\n\n\t\t\t\t\t\t\t$rsvprow['rsvp_id'] = $rsvp_id;\n\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_to_stripe( $rsvprow );\n\n\t\t\t\t\t\t} \n\t\t\t\t\t\telseif ( $gateway == 'Both Stripe and PayPal' ) {\n\n\t\t\t\t\t\t\t$rsvprow['amount'] = $charge;\n\t\t\t\t\t\t\t$rsvprow['rsvp_id'] = $rsvp_id;\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_to_stripe( $rsvprow );\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p>'. __('Credit card processing by Stripe','rsvpmaker').'</p>';\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p>'. __('Or pay with PayPal','rsvpmaker').'</p>';\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_paypal_button( $charge, $rsvp_options['paypal_currency'], $post->post_title, array('rsvp'=>$rsvp_id,'event' => $post->ID) );\n\t\t\t\t\t\t} \n\t\t\t\t\t\telseif ( $gateway == 'Stripe via WP Simple Pay' ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p>' . do_shortcode( '[stripe amount=\"' . ( $charge * 100 ) . '\" description=\"' . htmlentities( $post->post_title ) . ' ' . esc_html( $details['payingfor'] ) . '\" ]' ) . '</p>';\n\n\t\t\t\t\t\t} elseif ( $gateway == 'Cash or Custom' ) {\n\n\t\t\t\t\t\t\tob_start();\n\n\t\t\t\t\t\t\tdo_action( 'rsvpmaker_cash_or_custom', $charge, $invoice_id, $rsvp_id, $details, $profile, $post );\n\n\t\t\t\t\t\t\t$rsvpconfirm .= ob_get_clean();\n\n\t\t\t\t\t\t} elseif ( $gateway == 'PayPal REST API' ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= rsvpmaker_paypal_button( $charge, $rsvp_options['paypal_currency'], $post->post_title, array('rsvp'=>$rsvp_id,'event' => $post->ID) );\n\n\t\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! isset( $_GET['rsvp'] ) ) {\n\n\t\t\t\t\t$guestsql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE master_rsvp=' . $rsvprow['id'];\n\n\t\t\t\t\tif ( $results = $wpdb->get_results( $guestsql, ARRAY_A ) ) {\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p>' . __( 'Guests', 'rsvpmaker' ) . ':</p>';\n\n\t\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= $row['first'] . ' ' . $row['last'] . '<br />';\n\n\t\t\t\t\t\t\t$rsvpwithdraw .= sprintf( '<div><input type=\"checkbox\" checked=\"checked\" name=\"withdraw[]\" value=\"%d\"> %s %s</div>', $row['id'], esc_html( $row['first'] ), esc_html( $row['last'] ) );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$rsvpconfirm .= \"</p></div>\\n\";\n\n\t\t\t}\n\t\t} elseif ( $e && isset( $_GET['update'] ) ) {\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE ' . $wpdb->prepare( 'event=%d AND email=%s AND id=%d', $post->ID, $e, intval($_GET['update']) );\n\n\t\t\t$rsvprow = $wpdb->get_row( $sql, ARRAY_A );\n\n\t\t\tif ( $rsvprow ) {\n\n\t\t\t\t$master_rsvp = $rsvprow['id'];\n\n\t\t\t\t$answer = ( $rsvprow['yesno'] ) ? __( 'Yes', 'rsvpmaker' ) : __( 'No', 'rsvpmaker' );\n\n\t\t\t\t$profile = $details = rsvp_row_to_profile( $rsvprow );\n\n\t\t\t}\n\t\t}\n\n\t\t$dateblock = ( strpos( $post->post_content, 'rsvpdateblock]' ) ) ? '' : rsvpmaker_format_event_dates( $post->ID );\n\t\t$event     = get_rsvpmaker_event( $post->ID );\n\t\tif ( $event ) {\n\t\t\t$dur       = $event->display_type;\n\t\t\t$last_time = (int) $event->ts_end;\n\t\t\t$firstrow  = $event->date;\n\t\t} else {\n\t\t\t$dur = $last_time = $firstrow = '';\n\t\t}\n\n\t\tif ( ! empty( $rsvpconfirm ) ) {\n\n\t\t\t$rsvpconfirm = '<div id=\"rsvpconfirm\">' . $rsvpconfirm . '</div>';\n\t\t}\n\n\t\t// $content = '<div>'.$content;\n\n\t\tif ( ! $formonly && ! empty( $dateblock ) ) {\n\n\t\t\t$content = $dateblock . $content;\n\t\t}\n\n\t\tif ( ! empty( $rsvpconfirm ) ) {\n\n\t\t\t$content = $rsvpconfirm . $content;\n\t\t}\n\n\t\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t\t// don't repeat form\n\n\t\t\t$link = get_permalink();\n\n\t\t\t$args = array(\n\t\t\t\t'e'      => $_GET['e'],\n\t\t\t\t'update' => $_GET['rsvp'],\n\t\t\t);\n\n\t\t\t$link = add_query_arg( $args, $link );\n\n\t\t\t$content .= sprintf( '<p><a href=\"%s#rsvpnow\">%s</a>', esc_url_raw( $link ), esc_html( $rsvp_options['update_rsvp'] ) );\n\n\t\t\t$confirmed_content[ $post->ID ] = $content;\n\n\t\t\treturn $content;\n\n\t\t}\n\n\t\t$showbutton = apply_filters( 'rsvpmaker_showbutton', $showbutton );\n\n\t\tif ( isset( $rsvp_on ) && $rsvp_on ) {\n\n\t\t\t// check for responses so far\n\n\t\t\t$sql = 'SELECT first,last,note FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$post->ID AND yesno=1 ORDER BY id DESC\";\n\n\t\t\t$attendees = $wpdb->get_results( $sql );\n\n\t\t\t$total = sizeof( $attendees ); // (int) $wpdb->get_var($sql);\n\n\t\t\tif ( isset( $rsvp_max ) && $rsvp_max ) {\n\n\t\t\t\t$blanks_allowed = ( $total + 1 ) - $rsvp_max;\n\n\t\t\t\tif ( $total >= $rsvp_max ) {\n\n\t\t\t\t\t$too_many = true;\n\t\t\t\t}\n\n\t\t\t\t$blanks_allowed = $rsvp_max - ( $total );\n\n\t\t\t\tif ( ! isset( $answer ) ) {\n\n\t\t\t\t\t$blanks_allowed--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$blanks_allowed = 1000;\n\t\t\t}\n\n\t\t\tif ( $rsvp_count ) {\n\n\t\t\t\t$content .= '<div class=\"signed_up_ajax\" id=\"signed_up_' . esc_attr( $post->ID ) . '\" post=\"' . esc_attr( $post->ID ) . '\"></div>';\n\n\t\t\t}\n\n\t\t\t$now = time();\n\n\t\t\t$rsvplink = get_rsvp_link( $post->ID, true );\n\t\t\tif ( !is_rsvpmaker_deadline_future( $post->ID ) ) {\n\t\t\t\t$content .= '<p class=\"rsvp_status\">' . __( 'RSVP deadline is past', 'rsvpmaker' ) . '</p>';\n\t\t\t} \n\t\t\telseif ( isset( $rsvpstart ) && ( $now < $rsvpstart ) ) {\n\n\t\t\t\t$content .= '<p class=\"rsvp_status\">' . esc_html( __( 'RSVPs accepted starting: ', 'rsvpmaker' ) . utf8_encode( rsvpmaker_date( $rsvp_options['long_date'] ), $rsvpstart ) ) . '</p>';\n\n\t\t\t} elseif ( isset( $too_many ) ) {\n\n\t\t\t\t$content .= '<p class=\"rsvp_status\">' . esc_html( __( 'RSVPs are closed', 'rsvpmaker' ) ) . '</p>';\n\t\t\t\tif ( isset( $rsvpwithdraw ) ) {\n\n\t\t\t\t\t$content .= sprintf( '<h3>%s</h3><form method=\"post\" action=\"%s\">%s<p><button>%s</button></p>%s</form>', esc_html( __( 'To cancel, check the attendee names to be removed', 'rsvpmaker' ) ), esc_url_raw( $rsvplink ), esc_url_raw( $rsvpwithdraw ), __( 'Cancel RSVP', 'rsvpmaker' ), rsvpmaker_nonce('return') );\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telseif ( ( $rsvp_on && is_admin() && isset( $_GET['page'] ) && ( $_GET['page'] != 'rsvp' ) ) || ( $rsvp_on && is_email_context() ) || ( $rsvp_on && isset( $_GET['load'] ) ) ) { // when loaded into editor\n\n\t\t\t\t$content .= sprintf( $rsvp_options['rsvplink'], $rsvplink );\n\n\t\t\t} elseif ( $rsvp_on && $login_required && ! is_user_logged_in() ) { // show button, coded to require login\n\n\t\t\t\t$content .= sprintf( $rsvp_options['rsvplink'], $rsvplink );\n\n\t\t\t} elseif ( $rsvp_on && ! is_admin() && ! $formonly && ( ! is_single() || $showbutton ) ) { // show button\n\n\t\t\t\t$content .= sprintf( $rsvp_options['rsvplink'], $rsvplink );\n\n\t\t\t} elseif ( $rsvp_on && ( is_single() || is_admin() || $formonly ) ) {\n\n\t\t\t\tob_start();\n\t\t\t\techo '<div id=\"rsvpsection\">';\n\t\t\t\t?>\n\n<form id=\"rsvpform\" action=\"<?php echo esc_url_raw( $permalink ); ?>\" method=\"post\">\n\n\n\n<h3 id=\"rsvpnow\"><?php echo esc_html( $rsvp_options['rsvp_form_title'] ); ?></h3> \n\n\t\t\t\t<?php\n\n\t\t\t\tif ( get_post_meta( $post->ID, '_rsvp_form_show_date', true ) ) {\n\t\t\t\t\techo rsvpmaker_format_event_dates( $post->ID );\n\t\t\t\t}\n\n\t\t\t\tif ( $rsvp_instructions ) {\n\t\t\t\t\techo '<p>' . wp_kses_post( nl2br( $rsvp_instructions ) ) . '</p>';\n\t\t\t\t}\n\n\t\t\t\tif ( $rsvp_show_attendees ) {\n\n\t\t\t\t\t  echo '<p class=\"rsvp_status\">' . __( 'Names of attendees will be displayed publicly, along with the contents of the notes field.', 'rsvpmaker' ) . '</p>';\n\n\t\t\t\t\tif ( $rsvp_show_attendees == 2 ) {\n\n\t\t\t\t\t\techo ' (' . __( 'only for logged in users', 'rsvpmaker' ) . ')';\n\t\t\t\t\t}\n\n\t\t\t\t\techo '</p>';\n\n\t\t\t\t}\n\n\t\t\t\tif ( $rsvp_yesno ) {\n\t\t\t\t\techo '<p>' . __( 'Your Answer', 'rsvpmaker' );\n\t\t\t\t\t?>\n\t\t\t\t\t: <input name=\"yesno\" class=\"radio_buttons\" type=\"radio\" value=\"1\" \n\t\t\t\t\t<?php\n\t\t\t\t\tif ( ! isset( $rsvprow ) || $rsvprow['yesno'] ) {\n\t\t\t\t\t\techo 'checked=\"checked\"';\n\t\t\t\t\t}\n\t\t\t\t\t?>\n /> <?php echo __( 'Yes', 'rsvpmaker' ); ?> <input name=\"yesno\" type=\"radio\"  class=\"radio_buttons\" value=\"0\" \n\t\t\t\t\t<?php\n\t\t\t\t\tif ( isset( $rsvprow['yesno'] ) && ( $rsvprow['yesno'] == 0 ) ) {\n\t\t\t\t\t\techo 'checked=\"checked\"';\n\t\t\t\t\t}\n\t\t\t\t\t?>\n /> \n\t\t\t\t\t<?php\n\t\t\t\t\techo __( 'No', 'rsvpmaker' ) . '</p>';\n\t\t\t\t} else {\n\t\t\t\t\techo '<input name=\"yesno\" type=\"hidden\" value=\"1\" />';\n\t\t\t\t}\n\n\t\t\t\trsvphoney_ui();\n\n\t\t\t\tif ( $dur && ( $slotlength = ! empty( $custom_fields['_rsvp_timeslots'][0] ) ) ) {\n\n\t\t\t\t\t?>\n\n<div><?php echo __( 'Number of Participants', 'rsvpmaker' ); ?>: <select name=\"participants\">\n\n\t<option value=\"1\">1</option>\n\n\t<option value=\"2\">2</option>\n\n\t<option value=\"3\">3</option>\n\n\t<option value=\"4\">4</option>\n\n\t<option value=\"5\">5</option>\n\n\t<option value=\"6\">6</option>\n\n\t<option value=\"7\">7</option>\n\n\t<option value=\"8\">8</option>\n\n\t<option value=\"9\">9</option>\n\n\t<option value=\"10\">10</option>\n\n  </select></div>\n\n\n\n<div><?php echo __( 'Choose timeslots', 'rsvpmaker' ); ?></div>\n\n\t\t\t\t\t<?php\n\n\t\t\t\t\t$t = rsvpmaker_strtotime( $firstrow['datetime'] );\n\n\t\t\t\t\t$dur = $firstrow['duration'];\n\n\t\t\t\t\tif ( strpos( $dur, ':' ) ) {\n\n\t\t\t\t\t\t$dur = rsvpmaker_strtotime( $dur );\n\t\t\t\t\t}\n\n\t\t\t\t\t$day = rsvpmaker_date( 'j', $t );\n\n\t\t\t\t\t$month = date( 'n', $t );\n\n\t\t\t\t\t$year = date( 'Y', $t );\n\n\t\t\t\t\t$hour = rsvpmaker_date( 'G', $t );\n\n\t\t\t\t\t$minutes = rsvpmaker_date( 'i', $t );\n\n\t\t\t\t\t$slotlength = explode( ':', $slotlength );\n\n\t\t\t\t\t$min_add = $slotlength[0] * 60;\n\n\t\t\t\t\t$min_add = ( empty( $slotlength[1] ) ) ? $min_add : ( $min_add + $slotlength[1] );\n\n\t\t\t\t\tfor ( $i = 0; ( $slot = rsvpmaker_mktime( $hour, $minutes + ( $i * $min_add ), 0, $month, $day, $year ) ) < $dur; $i++ ) {\n\n\t\t\t\t\t\t$sql = 'SELECT SUM(participants) FROM ' . $wpdb->prefix . \"rsvp_volunteer_time WHERE time=$slot AND event = $post->ID\";\n\n\t\t\t\t\t\t$signups = ( $signups = $wpdb->get_var( $sql ) ) ? $signups : 0;\n\n\t\t\t\t\t\techo '<div><input type=\"checkbox\" name=\"timeslot[]\" value=\"' . $slot . '\" /> ' . rsvpmaker_date( ' ' . $rsvp_options['time_format'], $slot ) . \" $signups participants signed up</div>\";\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $custom_fields['_per'][0] ) && $custom_fields['_per'][0] ) {\n\n\t\t\t\t\t$pf = '';\n\n\t\t\t\t\t$options = '';\n\n\t\t\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\n\t\t\t\t\tforeach ( $per['unit'] as $index => $value ) {\n\n\t\t\t\t\t\tif ( ( $index == 0 ) && empty( $per['price'][ $index ] ) ) { // no price = $0 where no other price is specified\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( empty( $per['price'][ $index ] ) && ( $per['price'][ $index ] != 0 ) ) {\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t$deadstring = '';\n\n\t\t\t\t\t\tif ( ! empty( $per['price_deadline'][ $index ] ) ) {\n\n\t\t\t\t\t\t\t$deadline = (int) $per['price_deadline'][ $index ];\n\n\t\t\t\t\t\t\tif ( time() > $deadline ) {\n\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$deadstring = ' (' . __( 'until', 'rsvpmaker' ) . ' ' . rsvpmaker_date( $rsvp_options['short_date'] . ' ' . $rsvp_options['time_format'], $deadline ) . ')';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$display[ $index ] = $value . ' @ ' . ( ( $rsvp_options['paypal_currency'] == 'USD' ) ? '$' : $rsvp_options['paypal_currency'] ) . ' ' . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . $deadstring;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset( $custom_fields['_rsvp_count_party'][0] ) && $custom_fields['_rsvp_count_party'][0] ) {\n\n\t\t\t\t\t\t$number_prices = sizeof( $display );\n\n\t\t\t\t\t\tif ( $number_prices ) {\n\n\t\t\t\t\t\t\tif ( $number_prices == 1 ) { // don't show options, just one choice\n\n\t\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\t\t\t\t\t\t\t\t\tprintf( '<h3 id=\"guest_count_pricing\"><input type=\"hidden\" name=\"guest_count_price\" value=\"%s\">%s</h3>', $index, esc_html( $value ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t$s = ( isset( $profile['pricechoice'] ) && ( $index == $profile['pricechoice'] ) ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t\t\t\t\t$options .= sprintf( '<option value=\"%d\" %s>%s</option>', $index, $s, esc_html( $value ) );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tprintf( '<div id=\"guest_count_pricing\">' . __( 'Options', 'rsvpmaker' ) . ': <select name=\"guest_count_price\"  id=\"guest_count_price\">%s</select></div>', $options );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( sizeof( $display ) ) {\n\n\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\n\t\t\t\t\t\t\t\tif ( empty( $per['price'][ $index ] ) && ( $per['price'][ $index ] != 0 ) ) {\n\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t\t\t$unit = $per['unit'][ $index ];\n\n\t\t\t\t\t\t\t\t$pf .= '<div class=\"paying_for_tickets\"><select name=\"payingfor[' . $index . ']\" class=\"tickets\"><option value=\"0\">0</option><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option><option value=\"6\">6</option><option value=\"7\">7</option><option value=\"8\">8</option><option value=\"9\">9</option><option value=\"10\">10</option></select><input type=\"hidden\" name=\"unit[' . $index . ']\" value=\"' . esc_attr( $unit ) . '\" />' . esc_html( $value ) . '<input type=\"hidden\" name=\"price[' . $index . ']\" value=\"' . esc_attr( $price ) . '\" /></div>' . \"\\n\";\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! empty( $pf ) ) {\n\n\t\t\t\t\t\t\techo '<h3>' . __( 'Paying For', 'rsvpmaker' ) . '</h3><p>' . $pf . \"</p>\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// coupon code\n\n\t\t\t\t\tif ( ! empty( $custom_fields['_rsvp_coupon_code'][0] ) ) {\n\n\t\t\t\t\t\tprintf( '<p>Coupon Code: <input type=\"text\" name=\"coupon_code\" size=\"10\" /><br /><em>If you have a coupon code, enter it above</em>.</p>' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbasic_form( $form );\n\n\t\t\t\tif ( isset( $custom_fields['_rsvp_captcha'][0] ) && $custom_fields['_rsvp_captcha'][0] ) {\n\n\t\t\t\t\t?>\n\n<p>          <img src=\"<?php echo plugins_url( '/captcha/captcha_ttf.php', __FILE__ ); ?>\" alt=\"CAPTCHA image\">\n\n<br />\n\n\t\t\t\t\t<?php esc_html_e( 'Type the hidden security message', 'rsvpmaker' ); ?>:<br />                    \n\n<input maxlength=\"10\" size=\"10\" name=\"captcha\" type=\"text\" autocomplete=\"off\" />\n\n</p>\n\n\t\t\t\t\t<?php\n\n\t\t\t\t\tdo_action( 'rsvpmaker_after_captcha' );\n\n\t\t\t\t}\n\t\t\t\tglobal $rsvp_required_field;\n\t\t\t\t$rsvp_required_field['email'] = 'email';// at a minimum\t\t\t\n\n\t\t\t\trsvpmaker_recaptcha_output();\n\t\t\t\tif ( isset( $rsvp_options['privacy_confirmation'] ) && ( $rsvp_options['privacy_confirmation'] == '1' ) ) {\n\n\t\t\t\t\techo '<p><input type=\"checkbox\" name=\"profile[privacy_consent]\" id=\"privacy_consent\" value=\"1\" /> ' . wp_kses_post( $rsvp_options['privacy_confirmation_message'] ) . '</p>';\n\n\t\t\t\t\tif ( ! in_array( 'privacy_consent', $rsvp_required_field ) ) {\n\n\t\t\t\t\t\t$rsvp_required_field[] = 'privacy_consent';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $rsvp_required_field ) ) {\n\n\t\t\t\t\techo '<div id=\"jqerror\"></div><input type=\"hidden\" name=\"required\" id=\"required\" value=\"' . esc_attr( implode( ',', $rsvp_required_field ) ) . '\" />';\n\t\t\t\t}\n\n\t\t\t\t?>\n\n\t\t<p> \n\n\t\t  <input type=\"submit\" id=\"rsvpsubmit\" name=\"Submit\" value=\"<?php esc_html_e( 'Submit', 'rsvpmaker' ); ?>\" /> \n\n\t\t</p> \n\n<input type=\"hidden\" name=\"rsvp_id\" id=\"rsvp_id\" value=\"\n\t\t\t\t<?php\n\t\t\t\tif ( isset( $profile['id'] ) ) {\n\t\t\t\t\techo esc_attr( $profile['id'] );}\n\t\t\t\t?>\n\" /><input type=\"hidden\" name=\"event\" id=\"event\" value=\"<?php echo esc_attr( $post->ID ); ?>\" /><?php rsvpmaker_nonce(); ?>\n\n</form>\t\n\n</div>\n\n\t\t\t\t<?php\n\t\t\t\t$content .= ob_get_clean();\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['err'] ) ) {\n\n\t\t\t\t$error = sanitize_text_field($_GET['err']);\n\n\t\t\t\t$content = '<div id=\"rsvpconfirm\" >\n\n<h3 class=\"rsvperror\">' . __( 'Error', 'rsvpmaker' ) . '<br />' . esc_attr( $error ) . '</h3>\n\n<p>' . __( 'Please correct your submission.', 'rsvpmaker' ) . '</p>\n\n</div>\n\n' . $content;\n\n\t\t\t}\n\n\t\t\tif ( ( ( $rsvp_show_attendees == 1 ) || ( ( $rsvp_show_attendees == 2 ) && is_user_logged_in() ) ) && $total && ! isset( $_GET['load'] ) && ! isset( $_POST['profile'] ) ) {\n\n\t\t\t\t// use api\n\n\t\t\t\t$content .= '<p><button class=\"rsvpmaker_show_attendees\" post_id=\"' . esc_attr( $post->ID ) . '\" >' . __( 'Show Attendees', 'rsvpmaker' ) . '</button></p>\n\n<div id=\"attendees-' . esc_attr( $post->ID ) . '\"></div>';\n\n\t\t\t}\n\t\t} // end if($rsvp_on)\n\n\t\t$terms = get_the_term_list( $post->ID, 'rsvpmaker-type', '', ', ', ' ' );\n\n\t\tif ( $terms && is_string( $terms ) ) {\n\n\t\t\t$content .= '<p class=\"rsvpmeta\">' . __( 'Event Types', 'rsvpmaker' ) . ': ' . $terms . '</p>';\n\t\t}\n\n\t\t$content = apply_filters( 'rsvpmaker_event_content_bottom', $content, $custom_fields );\n\n\t\treturn $content;\n\n\t}\n} // end event content\n\nfunction rsvp_report_shortcode( $atts ) {\n\n\tif ( ! isset( $atts['public'] ) || ( $atts['public'] == '0' ) ) {\n\n\t\tif ( ! is_user_logged_in() ) {\n\n\t\t\treturn sprintf( /* translators: login link */    __( 'You must <a href=\"%s\">login</a> to view this.', 'rsvpmaker' ), login_redirect( $_SERVER['REQUEST_URI'] ) );\n\t\t}\n\t}\n\n\tglobal $post;\n\n\t$permalink = get_permalink( $post->ID );\n\n\t$permalink .= ( strpos( $permalink, '?' ) ) ? '&rsvp_print=1&' . rsvpmaker_nonce('query') : '?rsvp_print=1&' . rsvpmaker_nonce('query');\n\n\tob_start();\n\n\trsvp_report();\n\n\t$report = ob_get_clean();\n\n\treturn str_replace( admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp' ), $permalink, $report );\n\n}\n\n\n\nif ( ! function_exists( 'rsvp_report' ) ) {\n\n\tfunction rsvp_report() {\n\n\t\tglobal $wpdb, $post, $rsvp_options;\n\t\t$daily_count = [];\n\n\t\t$wpdb->show_errors();\n\n\t\tif ( isset( $_GET['event'] ) ) {\n\n\t\t\t$post = get_post( (int) $_GET['event'] );\n\t\t}\n\n\t\tif ( isset( $_POST['move_rsvp'] ) && isset( $_POST['move_to'] ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  ) {\n\n\t\t\tif ( empty( $_POST['move_rsvp'] ) ) {\n\n\t\t\t\tprintf( '<div class=\"notice notice-error\"><p>%s</p></option>', __( 'No RSVP entry selected', 'rsvpmaker' ) );\n\n\t\t\t} else {\n\n\t\t\t\t$move_rsvp = (int) $_POST['move_rsvp'];\n\t\t\t\t$move_to   = (int) $_POST['move_to'];\n\t\t\t\t$sql       = 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET event=$move_to WHERE id=$move_rsvp \";\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t\t$sql = 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET event=$move_to WHERE master_id=$move_rsvp \";\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t}\n\t\t}\n\n\t\t$guest_check = '';\n\n\t\t$wpdb->show_errors();\n\n\t\t?>\n\n<div class=\"wrap\"> \n\n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n\n<h2>\n\t\t<?php\n\t\t$param = ( empty( $_GET['limit'] ) ) ? '' : sanitize_text_field($_GET['limit']) . ' ' . sanitize_text_field($_GET['detail']);\n\n\t\tif ( sizeof( $_GET ) > 2 ) {\n\t\t\tprintf( '<a href=\"%s\">%s</a> - %s %s', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp' ), __( 'RSVP Report', 'rsvpmaker' ), __( 'Details', 'rsvpmaker' ), $param );\n\t\t} else {\n\t\t\tesc_html_e( 'RSVP Report', 'rsvpmaker' );\n\t\t}\n\t\t?>\n\t\t</h2> \n\n\t\t<?php\n\n\t\tif ( ! empty( $_GET['fields'] ) ) {\n\n\t\t\trsvp_report_table();\n\n\t\t\techo '</div>';\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( isset( $_POST['deletenow'] ) && current_user_can( 'edit_others_posts' ) && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  ) {\n\n\t\t\tif (  ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t\tdie( 'failed security check' );\n\t\t\t}\n\n\t\t\tforeach ( $_POST['deletenow'] as $d ) {\n\n\t\t\t\t$wpdb->query( 'DELETE FROM ' . $wpdb->prefix . \"rsvpmaker where id=\".intval($d) );\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_GET['delete'] ) && current_user_can( 'edit_others_posts' ) ) {\n\n\t\t\t$delete = intval($_GET['delete']);\n\n\t\t\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$delete\" );\n\n\t\t\t$guests = $wpdb->get_results( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE master_rsvp=$delete\" );\n\n\t\t\tif ( is_array( $guests ) ) {\n\n\t\t\t\tforeach ( $guests as $guest ) {\n\n\t\t\t\t\t$guestcheck .= sprintf( '<input type=\"checkbox\" name=\"deletenow[]\" value=\"%s\" checked=\"checked\" /> Delete guest: %s %s<br />', $guest->id, esc_html( $guest->first ), esc_html( $guest->last ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo sprintf(\n\t\t\t\t'<form action=\"%s\" method=\"post\">\n\n<h2 style=\"color: red;\">' . __( 'Confirm Delete for', 'rsvpmaker' ) . ' %s %s</h2>\n\n<input type=\"hidden\" name=\"deletenow[]\" value=\"%s\"  />\n\n%s\n\n%s\n\n<input type=\"submit\" style=\"color: red;\" value=\"' . __( 'Delete Now', 'rsvpmaker' ) . '\"  />\n\n</form>\n\n',\n\t\t\t\tadmin_url() . 'edit.php?post_type=rsvpmaker&page=rsvp',\n\t\t\t\tesc_html( $row->first ),\n\t\t\t\tesc_html( $row->last ),\n\t\t\t\tesc_attr( $delete ),\n\t\t\t\tesc_attr( $guestcheck ),\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\n\t\t}\n\n\t\tif ( isset( $_GET['event'] ) ) {\n\n\t\t\t$eventid   = (int) $_GET['event'];\n\t\t\t$permalink = get_permalink( $eventid );\n\n\t\t\t$event_row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker_event WHERE event=$eventid\" );\n\n\t\t\t$date = $event_row->date;\n\n\t\t\t$t = rsvpmaker_strtotime( $date );\n\n\t\t\t$title = '<a target=\"_blank\" href=\"' . $permalink . '\">' . esc_html( $event_row->post_title ) . ' ' . rsvpmaker_date( $rsvp_options['long_date'], $t ) . '</a>';\n\n\t\t\techo '<h2>' . __( 'RSVPs for', 'rsvpmaker' ) . ' ' . $title . \"</h2>\\n\";\n\n\t\t\tif ( ! isset( $_GET['rsvp_print'] ) ) {\n\n\t\t\t\techo '<div style=\"float: right; margin-left: 15px; margin-bottom: 15px;\"><a href=\"edit.php?post_type=rsvpmaker&page=rsvp\">' . __( 'Show Events List', 'rsvpmaker' ) . '</a> |\n\n<a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&rsvp_order=alpha\">Alpha Order</a> <a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&rsvp_order=timestamp\">Most Recent First</a> | <a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&rsvp_order=alpha\">Alpha Order</a>\n\n\t\t</div>';\n\n\t\t//printf('<p>%d registered</p>',sizeof($rsvps));\n\n\t\t\t\techo '<p><a href=\"' . sanitize_text_field($_SERVER['REQUEST_URI']) . '&print_rsvp_report=1&rsvp_print=1&' . rsvpmaker_nonce('query') . '\" target=\"_blank\" >Format for printing</a></p>';\n\n\t\t\t\techo '<p><a href=\"edit.php?post_type=rsvpmaker&page=rsvp&event=' . $eventid . '&paypal_log=1\">Show PayPal Log</a></p>';\n\n\t\t\t\tif ( isset( $phpexcel_enabled ) ) {\n\n\t\t\t\t\techo '<p><a href=\"#excel\">Download to Excel</a></p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $_GET['paypal_log'] ) ) {\n\n\t\t\t\t$log = get_post_meta( $eventid, '_paypal_log' );\n\n\t\t\t\tif ( $log ) {\n\n\t\t\t\t\techo '<div style=\"border: thin solid red; padding: 5px;\"><strong>PayPal</strong><br />';\n\n\t\t\t\t\techo implode( '', $log );\n\n\t\t\t\t\techo '</div>';\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $_POST['paymentAmount'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t\t$rsvp_id = (int) $_POST['rsvp_id'];\n\n\t\t\t\t$paid = (float) $_POST['paymentAmount'];\n\n\t\t\t\tadmin_payment( $rsvp_id, $paid );\n\n\t\t\t}\n\n\t\t\tif ( ! empty( $_POST['markpaid'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t\tforeach ( $_POST['markpaid'] as $value ) {\n\t\t\t\t\t$value = sanitize_text_field($value);\n\t\t\t\t\t$parts = explode( ':', $value );\n\t\t\t\t\tadmin_payment( $parts[0], $parts[1] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE ' . $wpdb->prepare( 'id=%d', intval($_GET['rsvp']) );\n\n\t\t\t\t$rsvprow = $wpdb->get_row( $sql, ARRAY_A );\n\n\t\t\t\tif ( $rsvprow ) {\n\n\t\t\t\t\t$master_rsvp = $rsvprow['id'];\n\n\t\t\t\t\t$answer = ( $rsvprow['yesno'] ) ? __( 'Yes', 'rsvpmaker' ) : __( 'No', 'rsvpmaker' );\n\n\t\t\t\t\tif ( empty( $rsvpconfirm ) ) {\n\n\t\t\t\t\t\t$rsvpconfirm = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvpconfirm .= '<div style=\"border: medium solid #555; padding: 10px;\"><p>' . esc_html( $rsvprow['first'] . ' ' . $rsvprow['last'] ) . \": $answer</p>\\n\";\n\n\t\t\t\t\t$profile = $details = rsvp_row_to_profile( $rsvprow );\n\n\t\t\t\t\tif ( isset( $details['total'] ) && $details['total'] ) {\n\n\t\t\t\t\t\t$rsvp_id = (int) $_GET['rsvp'];\n\n\t\t\t\t\t\t$invoice_id = (int) get_post_meta( $eventid, '_open_invoice_' . $rsvp_id, true );\n\n\t\t\t\t\t\t$paid = $rsvprow['amountpaid'];\n\n\t\t\t\t\t\t$charge = $details['total'] - $paid;\n\n\t\t\t\t\t\t$price_display = ( $charge == $details['total'] ) ? $details['total'] : $details['total'] . ' - ' . $paid . ' = ' . $charge;\n\n\t\t\t\t\t\tif ( $invoice_id ) {\n\n\t\t\t\t\t\t\tupdate_post_meta( $eventid, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$invoice_id = 'rsvp' . add_post_meta( $eventid, '_invoice_' . $rsvp_id, $charge );\n\n\t\t\t\t\t\t\tadd_post_meta( $eventid, '_open_invoice_' . $rsvp_id, $invoice_id );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . esc_html( __( 'Record Payment', 'rsvpmaker' ) . ' ' . esc_html( $details['payingfor'] ) . ' = ' . number_format( $details['total'], 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] ) . '</strong></p>';\n\n\t\t\t\t\t\tif ( $charge != $details['total'] ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= '<p><strong>' . esc_html( __( 'Previously Paid', 'rsvpmaker' ) . ' ' . number_format( $paid, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . ' ' . $rsvp_options['paypal_currency'] ) . '</strong></p>';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $charge > 0 ) {\n\n\t\t\t\t\t\t\t$rsvpconfirm .= '<form method=\"post\" name=\"donationform\" id=\"donationform\" action=\"' . admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . $eventid ) . '\">\n\n<p>' . __( 'Amount', 'rsvpmaker' ) . ': ' . $charge . '<input name=\"markpaid[]\" type=\"hidden\" id=\"markpaid_' . $rsvp_id . '\"  value=\"' . $rsvp_id . ':' . $charge . '\"> ' . $rsvp_options['paypal_currency'] . '</p><input name=\"rsvp_id\" type=\"hidden\" id=\"rsvp_id\" value=\"' . $rsvp_id . '\" ><input type=\"submit\" name=\"Submit\" value=\"' . __( 'Mark Paid', 'rsvpmaker' ) . '\"></p>\n'.rsvpmaker_nonce('return').'\n</form>';\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$rsvpconfirm .= '</div>';\n\n\t\t\t\t\techo $rsvpconfirm;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['edit_rsvp'] ) && current_user_can( 'edit_rsvpmakers' ) ) {\n\n\t\t\t\tadmin_edit_rsvp( $_GET['edit_rsvp'], $eventid );\n\t\t\t}\n\n\t\t\t$rsvp_order = ( isset( $_GET['rsvp_order'] ) && ( $_GET['rsvp_order'] == 'alpha' ) ) ? ' ORDER BY yesno DESC, last, first' : ' ORDER BY yesno DESC, timestamp DESC';\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid $rsvp_order\";\n\n\t\t\t$wpdb->show_errors();\n\n\t\t\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t\tformat_rsvp_details( $results );\n\n\t\t} elseif ( isset( $_GET['detail'] ) ) {\n\n\t\t\tif ( ! isset( $_GET['rsvp_print'] ) ) {\n\n\t\t\t\techo '<p><a href=\"' . admin_url( 'edit.php?post_type=rsvpmaker&page=rsvp' ) . '\">' . __( 'Show Events List', 'rsvpmaker' ) . '</a> | <a href=\"' . sanitize_text_field($_SERVER['REQUEST_URI']) . '&print_rsvp_report=1&rsvp_print=1&' . rsvpmaker_nonce('query') . '\" target=\"_blank\" >' . __( 'Format for printing', 'rsvpmaker' ) . '</a></p>';\n\t\t\t}\n\n\t\t\t$limit = (int) $_GET['limit'];\n\n\t\t\tif ( $_GET['detail'] == 'future' ) {\n\n\t\t\t\t$future = get_future_events( '', $limit );\n\n\t\t\t} else {\n\t\t\t\t$future = get_past_events( '', $limit );\n\t\t\t}\n\n\t\t\t$all_emails = array();\n\n\t\t\tif ( is_array( $future ) ) {\n\n\t\t\t\tforeach ( $future as $f ) {\n\n\t\t\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE event=' . $f->ID . ' ORDER BY yesno DESC, timestamp DESC';\n\n\t\t\t\t\t$wpdb->show_errors();\n\n\t\t\t\t\t$rsvps = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t\t\t\tif ( ! empty( $rsvps ) ) {\n\n\t\t\t\t\t\tprintf( '<h1>RSVPs for <a target=\"_blank\" href=\"%s\">%s %s</a></h1>', get_permalink( $f->ID ), esc_html( $f->post_title ), esc_html( $f->date ) );\n\n\t\t\t\t\t\t$emails = format_rsvp_details( $rsvps );\n\n\t\t\t\t\t\tif ( ! empty( $emails ) ) {\n\n\t\t\t\t\t\t\t$all_emails = array_merge( $all_emails, $emails );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $all_emails ) ) {\n\n\t\t\t\t$attendees = implode( ', ', $all_emails );\n\n\t\t\t\t$label = __( 'Email Attendees (all)', 'rsvpmaker' );\n\n\t\t\t\tprintf( '<p><a href=\"mailto:%s\">%s: %s</a>', esc_attr( $attendees ), esc_html( $label ), esc_html( $attendees ) );\n\n\t\t\t}\n\t\t} else { // show events list\n\n\t\t\t$eventlist = '';\n\n\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker_event ';\n\n\t\t\tif ( ! isset( $_GET['show'] ) ) {\n\n\t\t\t\t$sql2 = $sql . ' WHERE date < CURDATE( ) ORDER BY date DESC LIMIT 0,10';\n\n\t\t\t\t$sql .= ' WHERE date > CURDATE( ) ORDER BY date';\n\n\t\t\t\t$eventlist .= '<p>' . __( 'Showing future and recent events', 'rsvpmaker' ) . ' (<a href=\"' . sanitize_text_field($_SERVER['REQUEST_URI']) . '&show=all\">show all</a>)<p>';\n\n\t\t\t\t?>\n\n<form action=\"edit.php\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n\t\t\t\t<?php esc_html_e( 'Show details for', 'rsvpmaker' ); ?>\n\n<input type=\"hidden\" name=\"page\" value=\"rsvp\">\n\n<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\n<select name=\"limit\">\n\n<option value=\"5\">5</option>\n\n<option value=\"10\">10</option>\n\n<option value=\"25\">25</option>\n\n<option value=\"50\">50</option>\n\n<option value=\"100\">100</option>\n\n</select>\n\n<select name=\"detail\">\n\n<option value=\"past\">past</option>\n\n<option value=\"future\">future</option>\n\n</select> events \n\n<button><?php esc_html_e( 'Show', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\t\t\t\t<?php\n\n\t\t\t} else {\n\n\t\t\t\t$eventlist .= '<p>' . esc_html( __( 'Showing past events (for which RSVPs were collected) as well as upcoming events.', 'rsvpmaker' ) ) . '<p>';\n\n\t\t\t\t$sql .= ' ORDER BY date DESC';\n\n\t\t\t}\n\n\t\t\t$wpdb->show_errors();\n\n\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\tif ( $results ) {\n\n\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\tif ( empty( $events[ $row->event ] ) ) {\n\n\t\t\t\t\t\t$events[ $row->event ] = $row->post_title;\n\t\t\t\t\t}\n\n\t\t\t\t\t$t = rsvpmaker_strtotime( $row->date );\n\n\t\t\t\t\t$events[ $row->event ] .= ' ' . rsvpmaker_date( $rsvp_options['long_date'], $t );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $sql2 ) ) {\n\n\t\t\t\t$results = $wpdb->get_results( $sql2 );\n\n\t\t\t\tif ( $results ) {\n\n\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\tif ( empty( $events[ $row->event ] ) ) {\n\n\t\t\t\t\t\t\t$events[ $row->event ] = $row->post_title;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$t = rsvpmaker_strtotime( $row->date );\n\n\t\t\t\t\t\t$events[ $row->event ] .= ' ' . rsvpmaker_date( $rsvp_options['long_date'], $t );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $events ) ) {\n\n\t\t\t\tforeach ( $events as $post_id => $event ) {\n\n\t\t\t\t\t$eventlist .= \"<h3>$event</h3>\";\n\n\t\t\t\t\t$sql = 'SELECT count(*) FROM ' . $wpdb->prefix . 'rsvpmaker WHERE yesno=1 AND event=' . intval( $post_id );\n\n\t\t\t\t\tif ( $rsvpcount = $wpdb->get_var( $sql ) ) {\n\n\t\t\t\t\t\t$eventlist .= '<p><a href=\"' . admin_url() . 'edit.php?post_type=rsvpmaker&page=rsvp&event=' . intval( $post_id ) . '\">' . __( 'RSVP', 'rsvpmaker' ) . ' ' . __( 'Yes', 'rsvpmaker' ) . ': ' . $rsvpcount . '</a></p>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $eventlist && ! isset( $_GET['rsvp_print'] ) ) {\n\t\t\t\techo '<h2>' . esc_html( __( 'Events', 'rsvpmaker' ) ) . \"</h2>\\n\" . $eventlist;\n\t\t\t}\n\t\t}\n\n\t}\n} // end rsvp report\n\n\n\nif ( ! function_exists( 'format_rsvp_details' ) ) {\n\n\tfunction format_rsvp_details( $results, $editor_options = true ) {\n\n\t\tglobal $rsvp_options, $wpdb;\n\t\t$update      = false;\n\t\t\n\t\t$missing = $owed_list = '';\n\n\t\t$members = $nonmembers = 0;\n\n\t\tif ( $results ) {\n\n\t\t\t$fields = array( 'yesno', 'first', 'last', 'email', 'guestof', 'amountpaid' );\n\t\t}\n\n\t\tprintf('<p>%d registered</p>',sizeof($results));\n\n\t\tforeach ( $results as $index => $row ) {\n\n\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\tif ( $row['yesno'] ) {\n\n\t\t\t\t$emails[ $row['email'] ] = $row['email'];\n\t\t\t}\n\n\t\t\tif ( get_user_by( 'email', $row['email'] ) ) {\n\n\t\t\t\t$members++;\n\n\t\t\t} else {\n\t\t\t\t$nonmembers++;\n\t\t\t}\n\n\t\t\techo '<h3>' . esc_html( $row['yesno'] . ' ' . $row['first'] . ' ' . $row['last'] . ' ' . $row['email'] );\n\n\t\t\tif ( $row['guestof'] ) {\n\n\t\t\t\techo esc_html( ' (' . __( 'guest of', 'rsvpmaker' ) . ' ' . $row['guestof'] . ')' );\n\t\t\t}\n\n\t\t\techo '</h3>';\n\n\t\t\tif ( $row['master_rsvp'] ) {\n\n\t\t\t\tif ( isset( $guestcount[ $row['master_rsvp'] ] ) ) {\n\n\t\t\t\t\t$guestcount[ $row['master_rsvp'] ]++;\n\n\t\t\t\t} else {\n\t\t\t\t\t$guestcount[ $row['master_rsvp'] ] = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$master_row[ $row['id'] ] = $row['first'] . ' ' . $row['last'];\n\t\t\t}\n\n\t\t\tif ( $row['details'] ) {\n\t\t\t\t$details = unserialize( $row['details'] );\n\t\t\t}\n\n\t\t\tif ( isset( $details['total'] ) ) {\n\t\t\t\techo '<div style=\"font-weight: bold;\">' . __( 'Total', 'rsvpmaker' ) . ': ' . esc_html( $details['total'] ) . '</div>';\n\t\t\t}\n\n\t\t\tif ( ! empty( $details['payingfor'] ) ) {\n\t\t\t\techo '<div style=\"font-weight: bold;\">' . __( 'Paying For', 'rsvpmaker' ) . ': ' . esc_html( $details['payingfor'] ) . '</div>';\n\t\t\t}\n\n\t\t\tif ( $row['amountpaid'] > 0 ) {\n\t\t\t\techo '<div style=\"color: #006400;font-weight: bold;\">' . __( 'Paid', 'rsvpmaker' ) . ': ' . esc_html( $row['amountpaid'] ) . '</div>';\n\t\t\t}\n\n\t\t\tif ( isset( $details['total'] ) ) {\n\t\t\t\t$owed = $details['total'] - $row['amountpaid'];\n\t\t\t\tif ( $owed ) {\n\t\t\t\t\techo '<div style=\"color: red;font-weight: bold;\">' . __( 'Owed', 'rsvpmaker' ) . ': ' . $owed . '</div>';\n\n\t\t\t\t\tif ( $owed > 0 ) {\n\n\t\t\t\t\t\t$owed_list .= sprintf( '<p><input type=\"checkbox\" name=\"markpaid[]\" value=\"%s:%s\">%s %s %s %s</p>', esc_attr( $row['id'] ), esc_html( $owed ), esc_html( $row['first'] ), esc_html( $row['last'] ), esc_html( $owed ), __( 'Owed', 'rsvpmaker' ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '<p>';\n\n\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t$details    = unserialize( $row['details'] );\n\t\t\t\t$newdetails = array();\n\t\t\t\tif ( is_array( $details ) ) {\n\t\t\t\t\tforeach ( $details as $name => $value ) {\n\n\t\t\t\t\t\tif ( $value ) {\n\t\t\t\t\t\t\tif ( strpos( $name, ' ' ) ) {\n\t\t\t\t\t\t\t\t$update = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$label = get_post_meta( $row['event'], 'rsvpform' . $name, true );\n\t\t\t\t\t\t\tif ( $label ) {\n\t\t\t\t\t\t\t\t$name = $label;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\techo esc_attr($name) . ': ' . esc_attr( $value ) . '<br />';\n\n\t\t\t\t\t\t\t$field                = preg_replace( '/[^a-z0-9_]/', '_', strtolower( $name ) );\n\t\t\t\t\t\t\t$newdetails[ $field ] = $value;\n\t\t\t\t\t\t\tif ( ! in_array( $name, $fields ) ) {\n\t\t\t\t\t\t\t\t$fields[] = $name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $row['note'] ) {\n\n\t\t\t\techo 'note: ' . nl2br( esc_attr( $row['note'] ) ) . '<br />';\n\t\t\t}\n\n\t\t\t$t = rsvpmaker_strtotime( $row['timestamp'] );\n\n\t\t\techo 'posted: ' . rsvpmaker_date( $rsvp_options['short_date'], $t );\n\t\t\t\n\t\t\tif(isset($daily_count[rsvpmaker_date( 'Y-m-d', $t )]))\n\t\t\t\t$daily_count[rsvpmaker_date( 'Y-m-d', $t )]++;\n\t\t\telse\n\t\t\t\t$daily_count[rsvpmaker_date( 'Y-m-d', $t )] = 1;\n\n\t\t\techo '</p>';\n\n\t\t\tif ( $update ) {\n\t\t\t\t$sql = $wpdb->prepare( 'UPDATE ' . $wpdb->prefix . 'rsvpmaker SET details=%s WHERE id=%d', serialize( $newdetails ), $row['id'] );\n\t\t\t\t$wpdb->query( $sql );\n\t\t\t}\n\n\t\t\tif ( ! isset( $_GET['rsvp_print'] ) && current_user_can( 'edit_others_posts' ) && $editor_options ) {\n\n\t\t\t\techo sprintf( '<p><a href=\"%s&delete=%d\">Delete record for: %s %s</a></p>', admin_url() . 'edit.php?post_type=rsvpmaker&page=rsvp', $row['id'], esc_attr( $row['first'] ), esc_attr( $row['last'] ) );\n\t\t\t}\n\n\t\t\t$userrsvps[] = $row['user_id'];\n\n\t\t}\n\n\t\tif ( ! empty( $rsvp_options['missing_members'] ) ) {\n\n\t\t\t$blogusers = get_users( 'blog_id=1&orderby=nicename' );\n\n\t\t\tforeach ( $blogusers as $user ) {\n\n\t\t\t\tif ( in_array( $user->ID, $userrsvps ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$userdata = get_userdata( $user->ID );\n\n\t\t\t\t$missing .= \"<p>$userdata->display_name $userdata->user_email</p>\\n\";\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $missing ) ) {\n\n\t\t\techo '<hr /><h3>' . __( 'Members Who Have Not Responded', 'rsvpmaker' ) . '</h3>' . esc_html( $missing );\n\n\t\t}\n\n\t\tif ( ! empty( $emails ) ) {\n\n\t\t\t$emails = apply_filters( 'rsvp_yes_emails', $emails );\n\t\t}\n\n\t\tif ( isset( $emails ) && is_array( $emails ) ) {\n\n\t\t\t$emails = array_filter( $emails ); // removes empty elements\n\n\t\t\t$attendees = implode( ', ', $emails );\n\n\t\t\t$label = __( 'Email Attendees', 'rsvpmaker' );\n\n\t\t\tprintf( '<p><a href=\"mailto:%s\">%s: %s</a>', esc_attr( $attendees ), esc_html( $label ), esc_html( $attendees ) );\n\n\t\t}\n\n\t\tif ( $members && $nonmembers ) {\n\n\t\t\tprintf( '<p>Responses from %d members with user accounts and %d nonmembers.</p>', $members, $nonmembers );\n\t\t}\n\n\t\tif(!empty($daily_count))\n\t\t{\n\t\t\techo '<h3>RSVPs Per Day</h3>';\n\t\t\tforeach($daily_count as $day => $count) {\n\t\t\t\tprintf('<p>%s: %s</p>',$day, $count);\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $_GET['event'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $phpexcel_enabled; // set if excel extension is active\n\n\t\tif ( isset( $fields ) ) {\n\n\t\t\tif ( $fields && ! isset( $_GET['rsvp_print'] ) && ! isset( $_GET['limit'] ) ) {\n\n\t\t\t\t$fields[] = 'note';\n\n\t\t\t\t$fields[] = 'timestamp';\n\n\t\t\t\tforeach ( $fields as $field ) {\n\n\t\t\t\t\t// no duplicates, please\n\n\t\t\t\t\t$i = preg_replace( '/[^a-z0-9]/', '_', strtolower( $field ) );\n\n\t\t\t\t\tif ( $i == 'first_name' ) {\n\n\t\t\t\t\t\t$i = 'first';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $i == 'last_name' ) {\n\n\t\t\t\t\t\t$i = 'last';\n\t\t\t\t\t}\n\n\t\t\t\t\t$newfields[ $i ] = $i;\n\n\t\t\t\t};\n\t\t\t\t?>\n\n<div id=\"excel\" name=\"excel\" style=\"padding: 10px; border: thin dotted #333; width: 300px;margin-top: 30px;\">\n\n<h3><?php esc_html_e( 'Data Table / Spreadsheet', 'rsvpmaker' ); ?></h3>\n\n<form method=\"get\" action=\"edit.php\" target=\"_blank\">\n\n\t\t\t\t<?php\n\n\t\t\t\tforeach ( $_GET as $name => $value ) {\n\n\t\t\t\t\techo sprintf( '<input type=\"hidden\" name=\"%s\" value=\"%s\" />', esc_attr( $name ), esc_attr( $value ) );\n\t\t\t\t}\n\n\t\t\t\tforeach ( $newfields as $i => $field ) {\n\n\t\t\t\t\techo '<input type=\"checkbox\" name=\"fields[]\" value=\"' . $i . '\" checked=\"checked\" /> ' . $field . \"<br />\\n\";\n\t\t\t\t}\n\n\t\t\t\trsvpmaker_nonce();\n\n\t\t\t\t?>\n\n<p><button name=\"print_rsvp_report\" value=\"1\" ><?php esc_html_e( 'Print Report', 'rsvpmaker' ); ?></button> <button name=\"rsvp_csv\" value=\"1\" ><?php esc_html_e( 'Download CSV', 'rsvpmaker' ); ?></button></p>\n\n\t\t\t\t<?php\n\n\t\t\t\tif ( isset( $phpexcel_enabled ) ) {\n\n\t\t\t\t\t$rsvpexcel = wp_create_nonce( 'rsvpexcel' );\n\n\t\t\t\t\tprintf( '<p><button name=\"rsvpexcel\" value=\"%s\" />%s</button></p>', $rsvpexcel, __( 'Download to Excel', 'rsvpmaker' ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\techo '<br />';\n\n\t\t\t\t\tesc_html_e( 'Additional RSVPMaker Excel plugin required for download to Excel function.', 'rsvpmaker' );\n\n\t\t\t\t\techo '<a href=\"https://wordpress.org/plugins/rsvpmaker-excel/\">https://wordpress.org/plugins/rsvpmaker-excel/</a>';\n\n\t\t\t\t}\n\n\t\t\t\t?>\n\n</form>\n\n</div>\n\n\t\t\t\t<?php\n\n\t\t\t}\n\t\t}\n\n\t\t$options = $name = '';\n\n\t\tif ( is_admin() && ! isset( $_GET['rsvp_print'] ) ) {\n\n\t\t\tif ( ! empty( $master_row ) ) {\n\n\t\t\t\tforeach ( $master_row as $id => $name ) {\n\n\t\t\t\t\tif ( isset( $guestcount[ $id ] ) ) {\n\n\t\t\t\t\t\t$name .= sprintf( ' + %d guests', $guestcount[ $id ] );\n\t\t\t\t\t}\n\n\t\t\t\t\t$options .= sprintf( '<option value=\"%d\">%s</option>', $id, esc_attr( $name ) );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n<h3><?php esc_html_e( 'Edit Entries', 'rsvpmaker' ); ?></h3>\n\n<form action=\"edit.php\" method=\"get\">\n<?php rsvpmaker_nonce(); ?>\n<select name=\"edit_rsvp\"><option value=\"0\">Add New</option><?php echo $options; ?></select>\n\n<input type=\"hidden\" name=\"page\" value=\"rsvp\">\n\n<input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\">\n\n<input type=\"hidden\" name=\"event\" value=\"<?php echo intval($_GET['event']); ?>\">\n\n<button><?php esc_html_e( 'Edit', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\n\n<h3><?php esc_html_e( 'Move Between Events', 'rsvpmaker' ); ?></h3>\n\n<p><?php esc_html_e( 'Transfers the individual who registered and any guests registered as part of the same party to another event. Payment status is also transferred.' ); ?></p>\n\n<form action=\"<?php admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . sanitize_text_field($_GET['event']) ); ?>\" method=\"post\">\n<?php rsvpmaker_nonce(); ?>\n<p><select name=\"move_rsvp\"><option value=\"\"><?php esc_html_e( 'Pick Entry', 'rsvpmaker' ); ?></option><?php echo $options; ?></select>\n\nto <select name=\"move_to\">\n\n\t\t\t<?php\n\n\t\t\t$future = get_future_events( '', 50 );\n\n\t\t\tif ( $future ) {\n\n\t\t\t\tforeach ( $future as $event ) {\n\n\t\t\t\t\tif ( $event->ID != $_GET['event'] ) {\n\n\t\t\t\t\t\tprintf( '<option value=\"%d\">%s - %s</option>', $event->ID, esc_html( $event->post_title ), esc_html( $event->date ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t?>\n\n</select> </p>\n\n<button><?php esc_html_e( 'Move', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\n\n\t\t\t<?php\n\n\t\t\tif ( ! empty( $owed_list ) ) {\n\n\t\t\t\tprintf( '<h3>Record Payments</h3><form action=\"%s\" method=\"post\">%s', admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . intval( $_GET['event'] ) ), rsvpmaker_nonce('return') );\n\n\t\t\t\techo $owed_list;\n\n\t\t\t\t?>\n\n<button><?php esc_html_e( 'Mark Paid', 'rsvpmaker' ); ?></button>\n\n</form>\n\n\t\t\t\t<?php\n\n\t\t\t} // end is admin\n\t\t}\n\n\t\tif ( ! empty( $emails ) ) {\n\n\t\t\treturn $emails;\n\t\t}\n\n\t}\n} // end format_rsvp_details\n\n\n\nfunction admin_edit_rsvp( $id, $event ) {\n\n\tglobal $wpdb;\n\n\tglobal $profile;\n\n\tglobal $master_rsvp;\n\n\tglobal $post;\n\n\tif ( $id == 0 ) {\n\n\t\t$profile = array( 'yesno' => 1 );\n\n\t} else {\n\n\t\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE id=' . $id, ARRAY_A );\n\n\t\t$profile = rsvp_row_to_profile( $row );\n\n\t}\n\n\t$master_rsvp = $id;\n\n\t$custom_fields = get_rsvpmaker_custom( $event );\n\n\tglobal $rsvp_options;\n\n\t$form = $custom_fields['_rsvp_form'][0];\n\n\tprintf( '<form action=\"%s\" method=\"post\">', admin_url( 'edit.php?page=rsvp&post_type=rsvpmaker&event=' . $event ) );\n\trsvpmaker_nonce();\n\techo '<p>';\n\t?>\n\t<input name=\"yesno\" type=\"radio\" value=\"1\" <?php echo ( $profile['yesno'] ) ? 'checked=\"checked\"' : ''; ?> /> <?php echo __( 'Yes', 'rsvpmaker' ); ?> <input name=\"yesno\" type=\"radio\" value=\"0\" <?php echo ( ! $profile['yesno'] ) ? 'checked=\"checked\"' : ''; ?> /> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo __( 'No', 'rsvpmaker' ) . '</p>';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$results = get_rsvp_dates( $event );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $results ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$start = 2;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$firstrow = null;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tglobal $last_time;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$timeblock = '<span class=\"time\">';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! $firstrow ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$firstrow = $row;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$last_time = $t = rsvpmaker_strtotime( $row['datetime'] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= '<div itemprop=\"startDate\" datetime=\"' . date( 'c', $t ) . '\">';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = $row['duration'];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$timeblock .= rsvpmaker_date( ' ' . $rsvp_options['time_format'], $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// dchange\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $dur == 'set' ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = rsvpmaker_strtotime( $row['end_time'] );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( is_numeric( $dur ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$timeblock .= ' <span class=\"end_time\">' . __( 'to', 'rsvpmaker' ) . ' ' . rsvpmaker_date( $rsvp_options['time_format'], $dur ) . '</span>';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ( $dur != 'allday' ) && ! strpos( $dur, '|' ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= $timeblock . '<span>';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dateblock .= \"</div>\\n\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<div class=\"dateblock\">' . $dateblock . \"\\n</div>\\n\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $dur && ( $slotlength = $custom_fields['_rsvp_timeslots'][0] ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?>\n\n<div><?php echo __( 'Number of Participants', 'rsvpmaker' ); ?>: <select name=\"participants\">\n\n\t<option value=\"1\">1</option>\n\n\t<option value=\"2\">2</option>\n\n\t<option value=\"3\">3</option>\n\n\t<option value=\"4\">4</option>\n\n\t<option value=\"5\">5</option>\n\n\t<option value=\"6\">6</option>\n\n\t<option value=\"7\">7</option>\n\n\t<option value=\"8\">8</option>\n\n\t<option value=\"9\">9</option>\n\n\t<option value=\"10\">10</option>\n\n  </select></div>\n\n\n\n<div><?php echo __( 'Choose timeslots', 'rsvpmaker' ); ?></div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$t = rsvpmaker_strtotime( $firstrow['datetime'] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = $firstrow['duration'];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( strpos( $dur, ':' ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$dur = rsvpmaker_strtotime( $dur );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$day = rsvpmaker_date( 'j', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$month = rsvpmaker_date( 'n', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$year = date( 'Y', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$hour = rsvpmaker_date( 'G', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$minutes = rsvpmaker_date( 'i', $t );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$slotlength = explode( ':', $slotlength );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$min_add = $slotlength[0] * 60;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$min_add = $min_add + $slotlength[1];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( $i = 0; ( $slot = rsvpmaker_mktime( $hour, $minutes + ( $i * $min_add ), 0, $month, $day, $year ) ) < $dur; $i++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$sql = 'SELECT SUM(participants) FROM ' . $wpdb->prefix . \"rsvp_volunteer_time WHERE time=$slot AND event = $post->ID\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$signups = ( $signups = $wpdb->get_var( $sql ) ) ? $signups : 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<div><input type=\"checkbox\" name=\"timeslot[]\" value=\"' . $slot . '\" /> ' . rsvpmaker_date( ' ' . $rsvp_options['time_format'], $slot ) . \" $signups participants signed up</div>\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( isset( $custom_fields['_per'][0] ) && $custom_fields['_per'][0] ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pf = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$options = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$per = unserialize( $custom_fields['_per'][0] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( isset( $custom_fields['_rsvp_count_party'][0] ) && $custom_fields['_rsvp_count_party'][0] ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $per['unit'] as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! $price ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$display[] = $value . ' @ ' . ( ( $rsvp_options['paypal_currency'] == 'USD' ) ? '$' : $rsvp_options['paypal_currency'] ) . ' ' . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$number_prices = ( empty( $display ) ) ? 0 : sizeof( $display );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $number_prices ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( $number_prices == 1 ) { // don't show options, just one choice\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf( '<h3 id=\"guest_count_pricing\"><input type=\"hidden\" name=\"guest_count_price\" value=\"%s\">%s ' . __( 'per person', 'rsvpmaker' ) . '</h3>', 0, esc_html( $display[0] ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $display as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$s = ( $index == $profile['pricechoice'] ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$options .= sprintf( '<option value=\"%d\" %s>%s</option>', $index, $s, esc_html( $value ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf( '<div id=\"guest_count_pricing\">' . __( 'Options', 'rsvpmaker' ) . ': <select name=\"guest_count_price\">%s</select></div>', $options );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tforeach ( $per['unit'] as $index => $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$price = (float) $per['price'][ $index ];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! $price ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pf .= '<div><select name=\"payingfor[' . $index . ']\" class=\"tickets\"><option value=\"0\">0</option><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option><option value=\"6\">6</option><option value=\"7\">7</option><option value=\"8\">8</option><option value=\"9\">9</option><option value=\"10\">10</option></select><input type=\"hidden\" name=\"unit[' . $index . ']\" value=\"' . $value . '\" />' . $value . ' @ <input type=\"hidden\" name=\"price[' . $index . ']\" value=\"' . $price . '\" />' . ( ( $rsvp_options['paypal_currency'] == 'USD' ) ? '$' : $rsvp_options['paypal_currency'] ) . ' ' . number_format( $price, 2, $rsvp_options['currency_decimal'], $rsvp_options['currency_thousands'] ) . '</div>' . \"\\n\";\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( ! empty( $pf ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<h3>' . __( 'Paying For', 'rsvpmaker' ) . '</h3><p>' . $pf . \"</p>\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( is_numeric( $form ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$fpost = get_post( $form );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$form = $fpost->post_content;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( function_exists( 'do_blocks' ) ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$form = do_blocks( $form );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo do_blocks( do_shortcode( $form ) );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf( '<input type=\"hidden\" name=\"rsvp_id\" id=\"rsvp_id\" value=\"%d\" /><input type=\"hidden\" id=\"event\" name=\"event\" value=\"%d\" />%s<p><button>Submit</button></p></form>', $id, $event, rsvpmaker_nonce('query') );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo '<p>' . __( 'Tip: If you do not have an email address for someone you registered offline, you can use the format firstnamelastname@example.com (example.com is an Internet domain reserved for examples and testing). You will get an error message if you try to leave it blank' ) . '</p>';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\techo rsvp_form_jquery();\n\n}\n\nif ( ! function_exists( 'rsvp_print' ) ) {\n\n\tfunction rsvp_print() {\n\n\t\tif ( isset( $_GET['rsvp_print'] ) && isset( $_GET['page'] ) && is_admin() ) {\n\n\t\t\tif(!wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) )\n\t\t\t\tdie(\"Security error\");\n\t\t\tif ( 'word' == $_GET['rsvp_print'] ) {\n\t\t\t\tglobal $post;\n\t\t\t\t$fname = (empty($post->post_name)) ? time() : $post->post_name;\n\t\t\t\t$fname = apply_filters('rsvp_print_to_word',$fname);\n\t\t\t\theader( 'Content-Type: application/msword' );\n\t\t\t\theader( 'Content-disposition: attachment; filename=' . $fname . '.doc' );\n\t\t\t}\n\t\t\t\t\n\t\t\t$slug = sanitize_text_field($_GET['page']);\n\n\t\t\t$hookname = get_plugin_page_hookname( $slug, '' );\n\n\t\t\techo '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n\n<head>\n\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n<title>' . get_admin_page_title() . '</title>\n\n</head>\n\n\n\n<body>\n\n';\n\n\t\t\tdo_action( $hookname );\n\n\t\t\techo '</body></html>';\n\n\t\t\texit();\n\n\t\t}\n\n\t}//end rsvp_print()\n}// if exists\n\n\n\nif ( ! function_exists( 'rsvp_csv' ) ) {\n\n\tfunction rsvp_csv() {\n\n\t\tif ( ! isset( $_GET['rsvp_csv'] ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))) { \n\t\t\tdie( 'Security error' );\n\t\t}\n\n\t\tglobal $wpdb;\n\t\t$fields  = array_map('sanitize_text_field',$_GET['fields']);\n\t\t$eventid = (int) $_GET['event'];\n\t\t$post    = get_post( $eventid );\n\n\t\theader( 'Content-Type: text/csv' );\n\n\t\theader( 'Content-Disposition: attachment;filename=\"' . $post->post_name . '-' . date( 'Y-m-d-H-i' ) . '.csv\"' );\n\n\t\theader( 'Cache-Control: max-age=0' );\n\n\t\t$out = fopen( 'php://output', 'w' );\n\n\t\tfputcsv( $out, $fields );\n\n\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid ORDER BY yesno DESC, last, first\";\n\n\t\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t$rows = sizeof( $results );\n\n\t\t$phonecells = $phonecol . '1:' . $phonecol . ( $rows + 1 );\n\n\t\tif ( is_array( $results ) ) {\n\n\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t$index++;\n\n\t\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t\t$details = unserialize( $row['details'] );\n\n\t\t\t\t\t$row = array_merge( $row, $details );\n\n\t\t\t\t}\n\n\t\t\t\t$newrow = array();\n\n\t\t\t\tif ( is_array( $fields ) ) {\n\n\t\t\t\t\tforeach ( $fields as $column => $name ) {\n\n\t\t\t\t\t\tif ( isset( $row[ $name ] ) ) {\n\n\t\t\t\t\t\t\t$newrow[] = $row[ $name ];\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$newrow[] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfputcsv( $out, $newrow );\n\n\t\t\t}\n\t\t}\n\n\t\tfclose( $out );\n\n\t\texit();\n\n\t}\n} // end rsvp_csv\n\n\n\nfunction rsvp_report_table() {\n\n\t?>\n\n<style>\n\ntable#rsvptable {\n\n\tborder-collapse: collapse;\n\n}\n\ntable#rsvptable td, table#rsvptable td {\n\nborder: thin solid #555;\n\npadding: 3px;\n\ntext-align: left;\n\n}\n\n</style>\n\n\t<?php\n\n\tglobal $wpdb;\n\n\t$fields = array_map('sanitize_text_field',$_GET['fields']);\n\n\t$eventid = (int) $_GET['event'];\n\n\t$sql = 'SELECT post_title FROM ' . $wpdb->posts . \" WHERE ID = $eventid\";\n\n\t$title = $wpdb->get_var( $sql );\n\n\techo \"<h2>$title</h2>\\n<table id=\\\"rsvptable\\\"><tr>\\n\";\n\n\t// Create new PHPExcel object\n\n\tif ( is_array( $fields ) ) {\n\n\t\tforeach ( $fields as $column => $name ) {\n\n\t\t\techo \"<th>$name</th>\";\n\n\t\t}\n\t}\n\n\techo '</tr>';\n\n\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid ORDER BY yesno DESC, last, first\";\n\n\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t$rows = sizeof( $results );\n\n\t$phonecells = $phonecol . '1:' . $phonecol . ( $rows + 1 );\n\n\tif ( is_array( $results ) ) {\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$index++;\n\n\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t$details = unserialize( $row['details'] );\n\n\t\t\t\t$row = array_merge( $row, $details );\n\n\t\t\t}\n\n\t\t\techo '<tr>';\n\n\t\t\tif ( is_array( $fields ) ) {\n\n\t\t\t\tforeach ( $fields as $column => $name ) {\n\n\t\t\t\t\tif ( isset( $row[ $name ] ) ) {\n\n\t\t\t\t\t\tprintf( '<td>%s</td>', esc_html( $row[ $name ] ) );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\techo '<td></td>';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\techo '</tr>';\n\n\t\t}\n\t}\n\n\t\techo '</table>';\n\n}\n\n\n\nif ( ! function_exists( 'get_spreadsheet_data' ) ) {\n\n\tfunction get_spreadsheet_data( $eventid ) {\n\n\t\tglobal $wpdb;\n\n\t\t$sql = 'SELECT yesno,first,last,email, details, note, guestof FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$eventid ORDER BY yesno DESC, last, first\";\n\n\t\t$results = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\tforeach ( $results as $index => $row ) {\n\n\t\t\t$srow['answer'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\t$srow['name'] = $row['first'] . ' ' . $row['last'];\n\n\t\t\t$details = unserialize( $srow['details'] );\n\n\t\t\t$srow['address'] = $details['address'] . ' ' . $details['city'] . ' ' . $details['state'] . ' ' . $details['zip'];\n\n\t\t\t$srow['employment'] = $details['occupation'] . ' ' . $details['company'];\n\n\t\t\t$srow['email'] = $row['email'];\n\n\t\t\t$srow['guestof'] = $row['guestof'];\n\n\t\t\t$srow['note'] = $row['note'];\n\n\t\t\t$spreadsheet[] = $srow;\n\n\t\t}\n\n\t\treturn $spreadsheet;\n\n\t}\n} // end get spreadsheet data\n\n\n\nif ( ! function_exists( 'widgetlink' ) ) {\n\n\tfunction widgetlink( $evdates, $plink, $evtitle ) {\n\n\t\treturn sprintf( '<a href=\"%s\">%s</a> %s', esc_attr( $plink ), esc_html( $evtitle ), esc_html( $evdates ) );\n\n\t}\n} // end widgetlink\n\n\nif ( ! function_exists( 'rsvpmaker_profile_lookup' ) ) {\n\n\tfunction rsvpmaker_profile_lookup( $email = '' ) {\n\n\t\tglobal $wpdb;\n\n\t\t$profile = array();\n\n\t\tif ( isset( $_GET['blank'] ) ) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ! empty( $email ) ) {\n\n\t\t\t$sql = 'SELECT details FROM ' . $wpdb->prefix . 'rsvpmaker WHERE email LIKE \"' . $email . '\" ORDER BY id DESC';\n\n\t\t\t$details = $wpdb->get_var( $sql );\n\n\t\t\tif ( ! empty( $details ) ) {\n\n\t\t\t\t$details = unserialize( $details );\n\n\t\t\t\t$profile['email'] = $details['email'];\n\n\t\t\t\t$profile['first'] = $details['first'];\n\n\t\t\t\t$profile['last'] = $details['last'];\n\n\t\t\t\tforeach ( $details as $name => $value ) {\n\n\t\t\t\t\tif ( strpos( $name, 'phone' ) !== false ) {\n\n\t\t\t\t\t\t$profile[ $name ] = $value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// if members are registered and logged in, retrieve basic info for profile\n\n\t\t\tif ( is_user_logged_in() ) {\n\n\t\t\t\tglobal $current_user;\n\n\t\t\t\t$profile['email'] = $current_user->user_email;\n\n\t\t\t\t$profile['first'] = $current_user->first_name;\n\n\t\t\t\t$profile['last'] = $current_user->last_name;\n\n\t\t\t}\n\t\t}\n\n\t\treturn $profile;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'ajax_guest_lookup' ) ) {\n\n\tfunction ajax_guest_lookup() {\n\n\t\t$event = (int) $_GET['ajax_guest_lookup'];\n\n\t\tglobal $wpdb;\n\n\t\t$sql = 'SELECT first,last,note FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$event AND yesno=1 ORDER BY id DESC\";\n\n\t\t$attendees = $wpdb->get_results( $sql );\n\n\t\techo '<div class=\"attendee_list\">';\n\n\t\tif ( is_array( $attendees ) ) {\n\n\t\t\tforeach ( $attendees as $row ) {\n\n\t\t\t\t;\n\t\t\t\t?>\n\n<h3 class=\"attendee\"><?php echo esc_html( $row->first ); ?> <?php echo esc_html( $row->last ); ?></h3>\n\n\t\t\t\t<?php\n\n\t\t\t\tif ( $row->note ) {\n\t\t\t\t}\n\n\t\t\t\techo wpautop( $row->note );\n\n\t\t\t}\n\t\t}\n\n\t\techo '</div>';\n\n\t\texit();\n\n\t}\n}\n\n\n\nfunction rsvp_reminder_activation() {\n\n\tif ( isset( $_GET['autorenew'] ) ) {\n\n\t\trsvpautorenew_test();\n\t}\n\n\tif ( ! wp_next_scheduled( 'rsvp_daily_reminder_event' ) ) {\n\n\t\t$hour = 12 - get_option( 'gmt_offset' );\n\n\t\t$t = rsvpmaker_mktime( $hour, 0, 0, date( 'n' ), date( 'j' ), date( 'Y' ) );\n\n\t\twp_schedule_event( current_time( 'timestamp' ), 'daily', 'rsvp_daily_reminder_event' );\n\n\t}\n\n\t$active = get_option( 'rsvpmaker_discussion_active' );\n\n\t// if stalled, restart email queue process\n\n\tif ( $active && ! wp_next_scheduled( 'rsvpmaker_relay_init_hook' ) ) {\n\n\t\twp_schedule_event( time(), 'doubleminute', 'rsvpmaker_relay_init_hook' );\n\t}\n\n}\n\n\n\nif ( ! function_exists( 'rsvp_daily_reminder' ) ) {\n\n\tfunction rsvp_daily_reminder() {\n\n\t\trsvpautorenew_test(); // also check for templates that autorenew\n\t\tcleanup_rsvpmaker_child_documents(); // delete form and confirmation messages\n\t\trsvpmaker_reminders_nudge(); // make sure events with reminders set are in cron\n\t\trsvpmaker_consistency_check();\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\t$today = rsvpmaker_date( 'Y-m-d' );\n\n\t\t$sql = \"SELECT * FROM `$wpdb->postmeta` WHERE `meta_key` LIKE '_rsvp_reminder' AND `meta_value`='$today'\";\n\n\t\tif ( $reminders = $wpdb->get_results( $sql ) ) {\n\n\t\t\tforeach ( $reminders as $reminder ) {\n\n\t\t\t\t$post_id = $reminder->post_id;\n\n\t\t\t\t$q = \"p=$post_id&post_type=rsvpmaker\";\n\n\t\t\t\techo \"Post $post_id is scheduled for a reminder $q<br />\";\n\n\t\t\t\tglobal $post;\n\n\t\t\t\tquery_posts( $q );\n\n\t\t\t\tglobal $wp_query;\n\n\t\t\t\t// treat as single, display rsvp button, not form\n\n\t\t\t\t$wp_query->is_single = false;\n\n\t\t\t\tthe_post();\n\n\t\t\t\tif ( $post->post_title ) {\n\n\t\t\t\t\t$event_title = $post->post_title;\n\n\t\t\t\t\tob_start();\n\n\t\t\t\t\techo '<h1>';\n\n\t\t\t\t\tthe_title();\n\n\t\t\t\t\techo \"</h1>\\n<div>\\n\";\n\n\t\t\t\t\tthe_content();\n\n\t\t\t\t\techo \"\\n</div>\\n\";\n\n\t\t\t\t\t$event = ob_get_clean();\n\n\t\t\t\t\t$rsvpto = get_post_meta( $post_id, '_rsvp_to', true );\n\n\t\t\t\t\t$sql = 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE event=$post_id AND yesno=1\";\n\n\t\t\t\t\t$rsvps = $wpdb->get_results( $sql, ARRAY_A );\n\n\t\t\t\t\tif ( $rsvps ) {\n\n\t\t\t\t\t\tforeach ( $rsvps as $row ) {\n\n\t\t\t\t\t\t\t$notify = $row['email'];\n\n\t\t\t\t\t\t\t$row['yesno'] = ( $row['yesno'] ) ? 'YES' : 'NO';\n\n\t\t\t\t\t\t\t$notification = '<p>' . __( 'This is an automated reminder that we have you on the RSVP list for the event shown below. If your plans have changed, you can update your response by clicking on the RSVP button again.', 'rsvpmaker' ) . '</p>';\n\n\t\t\t\t\t\t\t$notification .= '<h3>' . esc_html( $row['yesno'] . ' ' . $row['first'] . ' ' . $row['last'] . ' ' . $row['email'] );\n\n\t\t\t\t\t\t\tif ( $row['guestof'] ) {\n\n\t\t\t\t\t\t\t\t$notification .= esc_html( ' (' . __( 'guest of', 'rsvpmaker' ) . ' ' . $row['guestof'] . ')' );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$notification .= \"</h3>\\n\";\n\n\t\t\t\t\t\t\t$notification .= '<p>';\n\n\t\t\t\t\t\t\tif ( $row['details'] ) {\n\n\t\t\t\t\t\t\t\t$details = unserialize( $row['details'] );\n\n\t\t\t\t\t\t\t\tif ( is_array( $details ) ) {\n\n\t\t\t\t\t\t\t\t\tforeach ( $details as $name => $value ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( $value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t$notification .= esc_html( \"$name: $value\" ) . '<br />';\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( $row['note'] ) {\n\n\t\t\t\t\t\t\t\t$notification .= 'note: ' . wp_kses_post( nl2br( $row['note'] ) ) . '<br />';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$t = rsvpmaker_strtotime( $row['timestamp'] );\n\n\t\t\t\t\t\t\t$notification .= 'posted: ' . rsvpmaker_date( $rsvp_options['short_date'], $t );\n\n\t\t\t\t\t\t\t$notification .= '</p>';\n\n\t\t\t\t\t\t\t$notification .= \"<h3>Event Details</h3>\\n\" . str_replace( '*|EMAIL|*', $notify, $event );\n\n\t\t\t\t\t\t\t$notification = wp_kses_post( $notification );\n\n\t\t\t\t\t\t\techo \"Notification for $notify<br />$notification\";\n\n\t\t\t\t\t\t\t$subject = '=?UTF-8?B?' . base64_encode( __( 'Event Reminder for', 'rsvpmaker' ) . ' ' . $event_title ) . '?=';\n\n\t\t\t\t\t\t\tif ( isset( $rsvp_options['smtp'] ) && ! empty( $rsvp_options['smtp'] ) ) {\n\n\t\t\t\t\t\t\t\t$mail['subject'] = __( 'Event Reminder for', 'rsvpmaker' ) . ' ' . $event_title;\n\n\t\t\t\t\t\t\t\t$mail['html'] = $notification;\n\n\t\t\t\t\t\t\t\t$mail['to'] = $notify;\n\n\t\t\t\t\t\t\t\t$mail['from'] = $rsvp_to;\n\n\t\t\t\t\t\t\t\t$mail['fromname'] = get_bloginfo( 'name' );\n\n\t\t\t\t\t\t\t\trsvpmailer( $mail );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t$subject = '=?UTF-8?B?' . base64_encode( __( 'Event Reminder for', 'rsvpmaker' ) . ' ' . $event_title ) . '?=';\n\n\t\t\t\t\t\t\t\tmail( $notify, $subject, $notification, \"From: $rsvpto\\nContent-Type: text/html; charset=UTF-8\" );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\techo 'none found';\n\t\t}\n\n\t}\n}// end\n\n\n\nif ( ! function_exists( 'rsvpguests' ) ) {\n\n\tfunction rsvpguests( $atts ) {\n\n\t\tif ( is_admin() || wp_is_json_request() ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : __( 'Guest', 'rsvpmaker' );\n\n\t\t$addmore = ( isset( $atts['addmore'] ) ) ? $atts['addmore'] : __( 'Add more guests', 'rsvpmaker' );\n\n\t\tglobal $guestextra;\n\n\t\tglobal $wpdb;\n\n\t\tglobal $blanks_allowed;\n\n\t\tglobal $master_rsvp;\n\n\t\t$wpdb->show_errors();\n\n\t\t$output = '';\n\n\t\t$count = 1; // reserve 0 for host\n\n\t\t$max_party = ( isset( $atts['max_party'] ) ) ? (int) $atts['max_party'] : 0;\n\n\t\tif ( isset( $master_rsvp ) && $master_rsvp ) {\n\n\t\t\t$guestsql = 'SELECT * FROM ' . $wpdb->prefix . 'rsvpmaker WHERE master_rsvp=' . $master_rsvp . ' ORDER BY id';\n\n\t\t\tif ( $results = $wpdb->get_results( $guestsql, ARRAY_A ) ) {\n\n\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t$guestprofile = rsvp_row_to_profile( $row );\n\n\t\t\t\t\t$output .= sprintf( '<div class=\"guest_blank\"><p><strong>%s %d</strong></p>', esc_html( $label ), $count ) . \"\\n\";\n\n\t\t\t\t\t$output .= guestfield( array( 'textfield' => 'first' ), $guestprofile, $count );\n\n\t\t\t\t\t$output .= guestfield( array( 'textfield' => 'last' ), $guestprofile, $count );\n\n\t\t\t\t\tif ( is_array( $guestextra ) ) {\n\n\t\t\t\t\t\tforeach ( $guestextra as $atts ) {\n\n\t\t\t\t\t\t\t$output .= guestfield( $atts, $guestprofile, $count );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$output .= sprintf( '<div><input type=\"checkbox\" name=\"guestdelete[%s]\" value=\"%s\" /> ' . __( 'Delete Guest', 'rsvpmaker' ) . ' %d</div><input type=\"hidden\" name=\"guest[id][%s]\" value=\"%s\">', $row['id'], $row['id'], $count, $count, $row['id'] );\n\n\t\t\t\t\t$output .= '</div>' . \"\\n\";\n\n\t\t\t\t\t$count++;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$max_guests = $blanks_allowed + $count;\n\n\t\tif ( $max_party ) {\n\n\t\t\t$max_guests = ( $max_party > $max_guests ) ? $max_guests : $max_party; // use the lower limit\n\t\t}\n\n\t\t// now the blank field\n\n\t\tif ( $blanks_allowed < 1 ) {\n\n\t\t\treturn $output . '<p><em>' . __( 'No room for additional guests', 'rsvpmaker' ) . '</em><p>'; // if event is full, no additional guests\n\n\t\t} elseif ( $count > $max_guests ) {\n\n\t\t\treturn $output . '<p><em>' . __( 'No room for additional guests', 'rsvpmaker' ) . '</em><p>'; // limit by # of guests per person\n\n\t\t} elseif ( $max_guests && ( $count >= $max_guests ) ) {\n\n\t\t\treturn $output . '<p><em>' . __( 'No room for additional guests (max per party)', 'rsvpmaker' ) . '</em><p>'; // limit by # of guests per person\n\t\t}\n\n\t\t\t$output .= '<input type=\"hidden\" id=\"max_guests\" value=\"' . $max_guests . '\" />';\n\n\t\t\t$output .= '<div class=\"guest_blank\" id=\"first_blank\"><p><strong>' . $label . ' ###</strong></p>' . \"\\n\";\n\n\t\t\t$output .= guestfield( array( 'textfield' => 'first' ), array(), '' );\n\n\t\t\t$output .= guestfield( array( 'textfield' => 'last' ), array(), '' );\n\n\t\tif ( is_array( $guestextra ) ) {\n\n\t\t\tforeach ( $guestextra as $atts ) {\n\n\t\t\t\t$output .= guestfield( $atts, array(), '' );\n\t\t\t}\n\t\t}\n\n\t\t\t$output .= '</div>' . \"\\n\";\n\n\t\t$output = '<div id=\"guest_section\" tabindex=\"-1\">' . \"\\n\" . $output . '</div>' . '<!-- end of guest section-->';\n\n\t\tif ( $max_guests > ( $count + 1 ) ) {\n\n\t\t\t$output .= '<p><a href=\"#guest_section\" id=\"add_guests\" name=\"add_guests\">(+) ' . $addmore . \"</a><!-- end of guest section--></p>\\n\";\n\t\t}\n\n\t\t$output .= '<script type=\"text/javascript\"> var guestcount =' . $count . '; </script>';\n\n\t\treturn $output;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpprofiletable' ) ) {\n\n\tfunction rsvpprofiletable( $atts, $content = null ) {\n\n\t\tglobal $profile;\n\n\t\tif ( ! isset( $atts['show_if_empty'] ) || ! ( isset( $profile[ $atts['show_if_empty'] ] ) && $profile[ $atts['show_if_empty'] ] ) ) {\n\n\t\t\treturn do_shortcode( $content );\n\n\t\t} else {\n\n\t\t\t$p = get_post_permalink();\n\n\t\t\t$p .= ( strpos( $p, '?' ) ) ? '&blank=1' : '?blank=1';\n\n\t\t\treturn '\n\n<p id=\"profiledetails\">' . __( 'Profile details on file. To update profile, or RSVP for someone else', 'rsvpmaker' ) . ' <a href=\"' . $p . '\">' . __( 'fetch a blank form', 'rsvpmaker' ) . '</a></p>\n\n<input type=\"hidden\" name=\"onfile\" value=\"1\" />';\n\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpfield' ) ) {\n\n\tfunction rsvpfield( $atts ) {\n\n\t\tglobal $profile;\n\n\t\tglobal $rsvp_required_field;\n\n\t\tglobal $guestextra;\n\n\t\tglobal $current_user;\n\n\t\t// synonyms\n\n\t\tif ( isset( $atts['text'] ) && ! isset( $atts['textfield'] ) ) {\n\t\t\t$atts['textfield'] = $atts['text'];\n\t\t}\n\n\t\tif ( isset( $atts['select'] ) && ! isset( $atts['selectfield'] ) ) {\n\t\t\t$atts['selectfield'] = $atts['select'];\n\t\t}\n\n\t\tif ( is_admin() && ! isset( $_REQUEST['edit_rsvp'] ) ) {\n\n\t\t\t$output = '';\n\n\t\t\t$guestfield = ( isset( $atts['guestfield'] ) ) ? (int) $atts['guestfield'] : 0;\n\n\t\t\t$guestoptions = array( __( 'main form', 'rsvpmaker' ), __( 'main+guest', 'rsvpmaker' ), __( 'guest form only', 'rsvpmaker' ) );\n\n\t\t\t$goptions = '';\n\n\t\t\tforeach ( $guestoptions as $index => $option ) {\n\n\t\t\t\t$s = ( $index == $guestfield ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t$goptions .= '<option value=\"' . $index . '\" ' . $s . '>' . $option . '</option>';\n\n\t\t\t}\n\n\t\t\t$private = ( isset( $atts['private'] ) && $atts['private'] ) ? ' checked=\"checked\" ' : '';\n\n\t\t\tif ( isset( $atts['textfield'] ) ) {\n\n\t\t\t\t$field = $atts['textfield'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'first' ) || ( $field == 'last' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( strpos( $field, 'hone' ) && empty( $atts['private'] ) ) {\n\n\t\t\t\t\t$private = ' checked=\"checked\" ';\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select name=\"type' . $extrafield . '\" id=\"type' . $extrafield . '\"><option value=\"text\" selected=\"selected\">text</option><option value=\"hidden\">hidden</option><option value=\"radio\">radio</option><option value=\"select\">select</option><option value=\"checkbox\">checkbox</option></select> ' . __( 'Show', 'rsvpmaker' ) . ': <select id=\"guest' . $extrafield . '\" name=\"guest' . $extrafield . '\">' . $goptions . '</select>\n\n<input type=\"checkbox\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" value=\"1\" ' . $private . ' /> ' . __( 'private', 'rsvpmaker' ) . '\n\n<br /><input type=\"text\" name=\"extra' . $extrafield . '\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\tif ( isset( $atts['hidden'] ) ) {\n\n\t\t\t\t$field = $atts['hidden'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'email' ) || ( $field == 'email' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select id=\"type' . $extrafield . '\"><option value=\"text\">text</option><option value=\"hidden\" selected=\"selected\">hidden</option><option value=\"radio\">radio</option><option value=\"select\">select</option><option value=\"checkbox\">checkbox</option></select><input type=\"hidden\" id=\"guest' . $extrafield . '\" />\n\n<input type=\"hidden\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" /> \n\n<br /><input type=\"text\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\tif ( isset( $atts['radio'] ) ) {\n\n\t\t\t\t$field = $atts['radio'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'email' ) || ( $field == 'email' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select id=\"type' . $extrafield . '\"><option value=\"text\">text</option><option value=\"hidden\">hidden</option><option value=\"radio\"  selected=\"selected\">radio</option><option value=\"select\">select</option><option value=\"checkbox\">checkbox</option></select> ' . __( 'Show', 'rsvpmaker' ) . ': <select id=\"guest' . $extrafield . '\" name=\"guest' . $extrafield . '\">' . $goptions . '</select>\n\n<input type=\"checkbox\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" value=\"1\" ' . $private . ' /> ' . __( 'private', 'rsvpmaker' ) . '\n\n<br /><input type=\"text\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label ) . ':' . esc_attr( $atts['options'] ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\tif ( isset( $atts['selectfield'] ) ) {\n\n\t\t\t\t$field = $atts['selectfield'];\n\n\t\t\t\tif ( ( $field == 'email' ) || ( $field == 'email' ) || ( $field == 'email' ) ) {\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( strpos( $field, 'hone' ) && empty( $atts['private'] ) ) {\n\n\t\t\t\t\t$private = ' checked=\"checked\" ';\n\t\t\t\t}\n\n\t\t\t\t$label = ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t\tglobal $extrafield;\n\n\t\t\t\t$extrafield++;\n\n\t\t\t\t$output = '<select id=\"type' . $extrafield . '\"><option value=\"text\">text</option><option value=\"hidden\">hidden</option><option value=\"radio\">radio</option><option value=\"select\" selected=\"selected\">select</option><option value=\"checkbox\">checkbox</option></select> \n\n' . __( 'Show', 'rsvpmaker' ) . ': <select id=\"guest' . $extrafield . '\" name=\"guest' . $extrafield . '\">' . $goptions . '</select> <input type=\"checkbox\" id=\"private' . $extrafield . '\" name=\"private' . $extrafield . '\" value=\"1\" ' . $private . ' /> ' . __( 'private', 'rsvpmaker' ) . '\t\t\n\n<br /><input type=\"text\" id=\"extra' . $extrafield . '\" value=\"' . esc_attr( $label . ':' . $atts['options'] ) . '\"  class=\"text ui-widget-content ui-corner-all\" />';\n\n\t\t\t}\n\n\t\t\treturn $output;\n\n\t\t}\n\n\t\t// front end behavior\n\n\t\tif ( isset( $atts['textfield'] ) ) {\n\n\t\t\t$field = str_replace( ' ', '_', $atts['textfield'] );// preg_replace('/[^a-zA-Z0-9_]/','_',$atts[\"textfield\"]);\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! is_admin() && ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\t$output = '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\n\t\t\t} else {\n\n\t\t\t\t$size = ( isset( $atts['size'] ) ) ? ' size=\"' . $atts['size'] . '\" ' : '';\n\n\t\t\t\t$data = ( isset( $profile[ $field ] ) ) ? ' value=\"' . $profile[ $field ] . '\" ' : '';\n\n\t\t\t\t$output = '<input  class=\"' . $field . '\" type=\"text\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" ' . $size . $data . ' />';\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $atts['hidden'] ) ) {\n\n\t\t\t$field = $atts['hidden'];\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\t$size = ( isset( $atts['size'] ) ) ? ' size=\"' . $atts['size'] . '\" ' : '';\n\n\t\t\t$data = ( isset( $profile[ $field ] ) ) ? ' value=\"' . $profile[ $field ] . '\" ' : '';\n\n\t\t\t$output = '<input  class=\"' . $field . '\" type=\"hidden\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" ' . $size . $data . ' />';\n\n\t\t} elseif ( isset( $atts['selectfield'] ) ) {\n\n\t\t\t$field = $atts['selectfield'];\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! is_admin() && ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\treturn '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\t\t\t}\n\n\t\t\t$selected = ( isset( $atts['selected'] ) ) ? trim( $atts['selected'] ) : '';\n\n\t\t\tif ( ! empty( $profile[ $field ] ) ) {\n\n\t\t\t\t$selected = $profile[ $field ];\n\t\t\t}\n\n\t\t\t$output = '<span  class=\"' . $field . '\"><select class=\"' . $field . '\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" >' . \"\\n\";\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$s = ( $selected == $i ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t$output .= '<option value=\"' . $i . '\" ' . $s . '>' . $i . '</option>' . \"\\n\";\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output .= '</select></span>' . \"\\n\";\n\n\t\t} elseif ( isset( $atts['checkbox'] ) ) {\n\n\t\t\t$field = $atts['checkbox'];\n\n\t\t\t$value = $atts['value'];\n\n\t\t\t$ischecked = ( isset( $atts['checked'] ) ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\treturn '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\t\t\t}\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$ischecked = ' checked=\"checked\" ';\n\t\t\t}\n\n\t\t\t$output = '<input class=\"' . $field . '\" type=\"checkbox\" name=\"profile[' . $field . ']\" id=\"' . $field . '\" value=\"' . $value . '\" ' . $ischecked . '/>';\n\n\t\t} elseif ( isset( $atts['radio'] ) ) {\n\n\t\t\t$field = $atts['radio'];\n\n\t\t\t$meta = ( is_user_logged_in() ) ? get_user_meta( $current_user->ID, $field, true ) : '';\n\n\t\t\t$profile[ $field ] = ( isset( $profile[ $field ] ) ) ? $profile[ $field ] : $meta;\n\n\t\t\tif ( ! empty( $profile[ $field ] ) && isset( $atts['private'] ) && $atts['private'] ) {\n\n\t\t\t\treturn '<span  class=\"onfile ' . $field . '\" >' . __( 'private data on file', 'rsvpmaker' ) . '</span>';\n\t\t\t}\n\n\t\t\t$sep = ( isset( $atts['sep'] ) ) ? $atts['sep'] : ' ';\n\n\t\t\t$checked = ( isset( $atts['checked'] ) ) ? trim( $atts['checked'] ) : '';\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$checked = $profile[ $field ];\n\t\t\t}\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\t$radio = array();\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$ischecked = ( $checked == $i ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\t\t$radio[] = '<span  class=\"' . $field . '\"><input class=\"' . $field . '\" type=\"radio\" name=\"profile[' . $field . ']\" id=\"' . $field . $i . '\" class=\"' . $field . '\"  value=\"' . $i . '\"  ' . $ischecked . '/> ' . $i . '</span> ';\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output = implode( $sep, $radio );\n\n\t\t}\n\n\t\tif ( isset( $atts['required'] ) || isset( $atts['require'] ) ) {\n\n\t\t\t$output = '<span class=\"required\">' . $output . '</span>';\n\n\t\t\t$rsvp_required_field[ $field ] = $field;\n\n\t\t}\n\n\t\tif ( isset( $atts['demo'] ) ) {\n\n\t\t\t$demo = \"<div>Shortcode:</div>\\n<p><strong>[</strong>rsvpfield\";\n\n\t\t\tforeach ( $atts as $name => $value ) {\n\n\t\t\t\tif ( $name == 'demo' ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$demo .= ' ' . $name . '=\"' . $value . '\"';\n\n\t\t\t}\n\n\t\t\t$demo .= \"<strong>]</strong></p>\\n\";\n\n\t\t\t$demo .= \"<div>HTML:</div>\\n<pre>\" . htmlentities( $output ) . \"</pre>\\n\";\n\n\t\t\t$demo .= \"<div>Profile:</div>\\n<pre>\" . var_export( $profile, true ) . \"</pre>\\n\";\n\n\t\t\t$demo .= \"<div>Display:</div>\\n<p>\";\n\n\t\t\t$output = $demo . $output . '</p>';\n\n\t\t}\n\n\t\tif ( isset( $atts['guestfield'] ) && $atts['guestfield'] ) {\n\n\t\t\t$guestextra[ $field ] = $atts;\n\n\t\t\tif ( $atts['guestfield'] == 2 ) {\n\n\t\t\t\treturn; // guest only don't display on main form\n\t\t\t}\n\t\t}\n\n\t\tif ( $field == 'email' ) {\n\n\t\t\t$output .= '<div id=\"rsvp_email_lookup\"></div>';\n\t\t}\n\n\t\treturn $output;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'guestfield' ) ) {\n\n\tfunction guestfield( $atts, $profile, $count ) {\n\n\t\tglobal $fieldcount;\n\n\t\tif ( ! $fieldcount ) {\n\n\t\t\t$fieldcount = 1;\n\t\t}\n\n\t\t// synonyms\n\n\t\tif ( isset( $atts['text'] ) && ! isset( $atts['textfield'] ) ) {\n\t\t\t$atts['textfield'] = $atts['text'];\n\t\t}\n\n\t\tif ( isset( $atts['select'] ) && ! isset( $atts['selectfield'] ) ) {\n\t\t\t$atts['selectfield'] = $atts['select'];\n\t\t}\n\n\t\tif ( isset( $atts['textfield'] ) ) {\n\n\t\t\t$field = $atts['textfield'];\n\n\t\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t$firstlabel = __( 'First', 'rsvpmaker' );\n\n\t\t\t$lastlabel = __( 'Last', 'rsvpmaker' );\n\n\t\t\tif ( ( $label == 'First' ) && ( $label != $firstlabel ) ) {\n\n\t\t\t\t$label = str_replace( 'First', $firstlabel, $label );\n\t\t\t}\n\n\t\t\tif ( ( $label == 'Last' ) && ( $label != $lastlabel ) ) {\n\n\t\t\t\t$label = str_replace( 'Last', $lastlabel, $label );\n\t\t\t}\n\n\t\t\t$size = ( isset( $atts['size'] ) ) ? ' size=\"' . $atts['size'] . '\" ' : '';\n\n\t\t\t$data = ( isset( $profile[ $field ] ) ) ? ' value=\"' . $profile[ $field ] . '\" ' : '';\n\n\t\t\t$output = '<div class=\"' . $field . '\"><label>' . $label . ':</label> <input type=\"text\" name=\"guest[' . $field . '][' . $count . ']\" id=\"' . $field . $fieldcount++ . '\" ' . $size . $data . '  class=\"' . $field . '\" /></div>';\n\n\t\t} elseif ( isset( $atts['selectfield'] ) ) {\n\n\t\t\t$field = $atts['selectfield'];\n\n\t\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t$selected = ( isset( $atts['selected'] ) ) ? trim( $atts['selected'] ) : '';\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$selected = $profile[ $field ];\n\t\t\t}\n\n\t\t\t$output = '<div class=\"' . $field . '\"><label>' . $label . ':</label> <select  class=\"' . $field . '\" name=\"guest[' . $field . '][' . $count . ']\" id=\"' . $field . $fieldcount++ . '\" >' . \"\\n\";\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$s = ( $selected == $i ) ? ' selected=\"selected\" ' : '';\n\n\t\t\t\t\t$output .= '<option value=\"' . $i . '\" ' . $s . '>' . $i . '</option>' . \"\\n\";\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output .= '</select></div>' . \"\\n\";\n\n\t\t} elseif ( isset( $atts['radio'] ) ) {\n\n\t\t\t$field = $atts['radio'];\n\n\t\t\t$label = ( isset( $atts['label'] ) ) ? $atts['label'] : ucfirst( str_replace( '_', ' ', $field ) );\n\n\t\t\t$sep = ( isset( $atts['sep'] ) ) ? $atts['sep'] : ' ';\n\n\t\t\t$checked = ( isset( $atts['checked'] ) ) ? trim( $atts['checked'] ) : '';\n\n\t\t\tif ( isset( $profile[ $field ] ) ) {\n\n\t\t\t\t$checked = $profile[ $field ];\n\t\t\t}\n\n\t\t\tif ( isset( $atts['options'] ) ) {\n\n\t\t\t\t$o = explode( ',', $atts['options'] );\n\n\t\t\t\tforeach ( $o as $i ) {\n\n\t\t\t\t\t$i = trim( $i );\n\n\t\t\t\t\t$ischecked = ( $checked == $i ) ? ' checked=\"checked\" ' : '';\n\n\t\t\t\t\t$radio[] = '<input  class=\"' . $field . '\" type=\"radio\" name=\"guest[' . $field . '][' . $count . ']\" id=\"' . $field . $i . $fieldcount++ . '\" class=\"' . $field . '\"  value=\"' . $i . '\"  ' . $ischecked . '/> ' . $i . ' ';\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$output = '<div  class=\"' . $field . '\"><label>' . $label . ':</label> ' . implode( $sep, $radio ) . '</div>';\n\n\t\t}\n\n\t\treturn $output;\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpnote' ) ) {\n\n\tfunction rsvpnote() {\n\n\t\tglobal $rsvp_row;\n\n\t\treturn ( isset( $rsvp_row->note ) ) ? $rsvp_row->note : '';\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'date_title' ) ) {\n\n\tfunction date_title( $title, $sep = '&raquo;', $seplocation = 'left' ) {\n\n\t\tglobal $post;\n\n\t\tglobal $wpdb;\n\n\t\tif ( empty( $post->post_type ) ) {\n\n\t\t\treturn $title;\n\t\t}\n\n\t\tif ( $post->post_type == 'rsvpmaker' ) {\n\n\t\t\t// get first date associated with event\n\n\t\t\t$sql = 'SELECT meta_value FROM ' . $wpdb->postmeta . \" WHERE meta_key='_rsvp_dates' AND post_id = $post->ID ORDER BY meta_value\";\n\n\t\t\t$dt = $wpdb->get_var( $sql );\n\n\t\t\t$title .= rsvpmaker_date( 'F jS', rsvpmaker_strtotime( $dt ) );\n\n\t\t\tif ( $seplocation == 'right' ) {\n\n\t\t\t\t$title .= \" $sep \";\n\n\t\t\t} else {\n\t\t\t\t$title = \" $sep $title \";\n\t\t\t}\n\t\t}\n\n\t\treturn $title;\n\n\t}\n}\n\nadd_filter( 'wp_title', 'date_title', 1, 3 );\n\nif ( ! function_exists( 'rsvpmaker_template_list' ) ) {\n\n\tfunction rsvpmaker_template_list() {\n\n\t\tglobal $rsvp_options, $wpdb, $current_user;\n\n\t\t?>\n\n<div class=\"wrap\"> \n\n\t<div id=\"icon-edit\" class=\"icon32\"><br /></div>\n\n<h2>\n\t\t<?php\n\t\tesc_html_e( 'Event Templates', 'rsvpmaker' );\n\n\t\tprintf( ' <a href=\"%s\"  class=\"add-new-h2\">%s</a>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_setup&new_template=1' ), __( 'New Template', 'rsvpmaker' ) );\n\n\t\t?>\n  </h2> \n\n\t\t<?php\n\n\t\tif ( ! empty( $_POST['import_shared_template'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key'))  ) {\n\t\t\t$url = sanitize_text_field( $_POST['import_shared_template'] );\n\t\t\tprintf( '<p>Importing %s</p>', $url );\n\t\t\t$duplicate = $wpdb->get_var( \"SELECT ID FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id  WHERE meta_key='template_imported_from' AND meta_value='$url' \" );\n\t\t\t$response  = wp_remote_get( $url );\n\n\t\t\tif ( empty( $duplicate ) && is_array( $response ) && ! is_wp_error( $response ) ) {\n\t\t\t\t$headers = $response['headers']; // array of http header lines\n\t\t\t\t$body    = $response['body']; // use the content\n\t\t\t\t$data    = json_decode( $body );\n\t\t\t\t// print_r($data);\n\t\t\t\t$newpost['post_type']    = 'rsvpmaker';\n\t\t\t\t$newpost['post_status']  = 'publish';\n\t\t\t\t$newpost['post_author']  = $current_user->ID;\n\t\t\t\t$newpost['post_title']   = $data->post_title;\n\t\t\t\t$newpost['post_content'] = $data->post_content;\n\t\t\t\t$id                      = wp_insert_post( $newpost );\n\t\t\t\trsvpmaker_set_template_defaults( $id );\n\t\t\t\tupdate_post_meta( $id, 'template_imported_from', $url );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $_POST['share_template'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\t\t\tupdate_post_meta( $_POST['share_template'], 'rsvpmaker_shared_template', true );\n\t\t}\n\n\t\tif ( ! empty( $_POST['override'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$override = (int) $_POST['override'];\n\n\t\t\t$overridden = (int) $_POST['overridden'];\n\n\t\t\t$opost = get_post( $override );\n\n\t\t\t$target = get_post( $overridden );\n\n\t\t\t$sk = get_template_sked( $overridden );\n\n\t\t\tif ( $sk ) {\n\n\t\t\t\twp_update_post(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'ID'         => $override,\n\t\t\t\t\t\t'post_title' => $opost->post_title . ' (backup)',\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$newpost = array(\n\t\t\t\t'ID'           => $overridden,\n\t\t\t\t'post_title'   => $opost->post_title,\n\t\t\t\t'post_content' => $opost->post_content,\n\t\t\t\t'post_name'    => $target->post_name,\n\t\t\t);\n\n\t\t\twp_update_post( $newpost );\n\t\t\t$sql = $wpdb->prepare( \"UPDATE $wpdb->postmeta SET meta_key='_detached_from_template' WHERE meta_key='_meet_recur' AND post_id=%d\", $overridden );\n\t\t\t$wpdb->query( $sql );\n\t\t\tupdate_post_meta( $overridden, '_meet_recur', $override );\n\n\t\t\tprintf( '<div class=\"updated notice notice-success\">Applied \"%s\" template: <a href=\"%s\">View</a> | <a href=\"%s\">Edit</a></div>', $opost->post_title, get_permalink( $overridden ), admin_url( 'post.php?action=edit&post=' . $overridden ) );\n\n\t\t\tif(isset($_POST['copymeta']))\n\t\t\t{\n\t\t\t\tforeach($_POST['copymeta'] as $key)\n\t\t\t\t{\n\t\t\t\t\t$key = sanitize_text_field($key);\n\t\t\t\t\tif(empty($keysql))\n\t\t\t\t\t\t$keysql = '';\n\t\t\t\t\telse\n\t\t\t\t\t\t$keysql .= ' OR ';\n\t\t\t\t\t$keysql .= \"  meta_key LIKE '$key%' \";//match multiple reminder messages\n\t\t\t\t}\n\n\t\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $override .\" AND ($keysql) \";\n\t\t\t\techo $sql;\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\t\n\t\t\t\tif ( is_array( $results ) ) {\n\t\n\t\t\t\t\tforeach ( $results as $row ) {\t\n\t\t\t\t\t\t\tupdate_post_meta( $overridden, $row->meta_key, $row->meta_value );\n\t\t\t\t\t\t\t$copied[] = $row->meta_key;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif ( ! empty( $copied ) ) {\n\n\t\t\t\tprintf( '<p>Settings copied: %s</p>', implode( ', ', $copied ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_GET['override_template'] ) || ( isset( $_GET['t'] ) && isset( $_GET['overconfirm'] ) ) ) {\n\n\t\t\t$t = ( isset( $_GET['override_template'] ) ) ? (int) $_GET['override_template'] : (int) $_GET['t'];\n\n\t\t\t$e = (int) $_GET['event'];\n\n\t\t\t$ts = get_rsvp_date( $e );\n\n\t\t\tif ( isset( $_GET['overconfirm'] ) ) {\n\n\t\t\t\t$event = get_post( $e );\n\n\t\t\t\t$newpost = array(\n\t\t\t\t\t'ID'           => $t,\n\t\t\t\t\t'post_title'   => $event->post_title,\n\t\t\t\t\t'post_content' => $event->post_content,\n\t\t\t\t);\n\n\t\t\t\twp_update_post( $newpost );\n\n\t\t\t\tprintf( '<h1>Template updated based on contents of event for %s</h1>', rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $ts ) ) );\n\n\t\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $e;\n\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t\t$docopy = array( '_add_timezone', '_convert_timezone', '_calendar_icons', 'tm_sidebar', 'sidebar_officers' );\n\n\t\t\t\tif ( is_array( $results ) ) {\n\n\t\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\t\tif ( ( strpos( $row->meta_key, 'rsvp' ) && ( $row->meta_key != '_rsvp_dates' ) ) || ( in_array( $row->meta_key, $docopy ) ) ) {\n\n\t\t\t\t\t\t\tupdate_post_meta( $t, $row->meta_key, $row->meta_value );\n\n\t\t\t\t\t\t\t$copied[] = $row->meta_key;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $copied ) ) {\n\n\t\t\t\t\tprintf( '<p>Settings copied: %s</p>', implode( ', ', $copied ) );\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tprintf( '<h1 style=\"color: red;\">Update Template?</h1><p>Click &quot;Confirm&quot; to override template with the contents of your %s event<p><form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_template_list\" /><input type=\"hidden\" name=\"t\" value=\"%d\" /><input type=\"hidden\" name=\"event\" value=\"%d\" /><input type=\"hidden\" name=\"overconfirm\" value=\"1\" /><button>Confirm</button>%s</form> ', rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $ts ) ), admin_url( 'edit.php' ), $t, $e, rsvpmaker_nonce('return') );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $_POST['event_to_template'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$e = (int) $_POST['event_to_template'];\n\n\t\t\t$ts = get_rsvp_date( $e );\n\n\t\t\t$tsexplode = preg_split( '/[\\s:]/', $ts );\n\n\t\t\t$event = get_post( $e );\n\n\t\t\t$newpost = array(\n\t\t\t\t'post_title'   => $event->post_title,\n\t\t\t\t'post_content' => $event->post_content,\n\t\t\t\t'post_type'    => 'rsvpmaker',\n\t\t\t\t'post_author'  => $current_user->ID,\n\t\t\t\t'post_status'  => 'publish',\n\t\t\t);\n\n\t\t\t$t = wp_insert_post( $newpost );\n\n\t\t\tarray(\n\t\t\t\t'week'      => array( 0 ),\n\t\t\t\t'dayofweek' => array( 0 ),\n\t\t\t\t'hour'      => $tsexplode[1],\n\t\t\t\t'minutes'   => $tsexplode[2],\n\t\t\t);\n\n\t\t\tnew_template_schedule( $t, $template );\n\n\t\t\tprintf( '<h1>Template updated based on contents of event for %s</h1>', rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $ts ) ) );\n\n\t\t\t$sql = \"select * from $wpdb->postmeta WHERE post_id=\" . $e;\n\n\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t$docopy = array( '_add_timezone', '_convert_timezone', '_calendar_icons', 'tm_sidebar', 'sidebar_officers' );\n\n\t\t\tif ( is_array( $results ) ) {\n\n\t\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\t\tif ( ( strpos( $row->meta_key, 'rsvp' ) && ( $row->meta_key != '_rsvp_dates' ) ) || ( in_array( $row->meta_key, $docopy ) ) ) {\n\n\t\t\t\t\t\tupdate_post_meta( $t, $row->meta_key, $row->meta_value );\n\n\t\t\t\t\t\t$copied[] = $row->meta_key;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $copied ) ) {\n\n\t\t\t\tprintf( '<p>Settings copied: %s</p>', implode( ', ', $copied ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $_REQUEST['t'] ) ) {\n\n\t\t\tprintf( '<h3>Add One or More Events Based on a Template</h3><form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" />%s <select name=\"page\"><option value=\"rsvpmaker_setup\">%s</option><option value=\"rsvpmaker_template_list\">%s</option></select><br /><br />%s %s<br >%s %s</form>', admin_url( 'edit.php' ), __( 'Add', 'rsvpmaker' ), __( 'One event', 'rsvpmaker' ), __( 'Multiple events', 'rsvpmaker' ), __( 'based on', 'rsvpmaker' ), rsvpmaker_templates_dropdown( 't' ), get_submit_button( 'Submit' ), rsvpmaker_nonce('return') );\n\t\t}\n\n\t\tdo_action( 'rsvpmaker_template_list_top' );\n\n\t\tif ( isset( $_GET['t'] ) ) {\n\n\t\t\t$t = (int) $_GET['t'];\n\n\t\t\trsvp_template_checkboxes( $t );\n\n\t\t}\n\n\t\t$dayarray = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ) );\n\n\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t\tglobal $wpdb;\n\n\t\t$wpdb->show_errors();\n\n\t\tglobal $current_user;\n\n\t\tglobal $rsvp_options;\n\n\t\t$current_template = $event_options = $template_options = '';\n\n\t\t$template_override = '';\n\n\t\tif ( isset( $_GET['restore'] ) ) {\n\n\t\t\techo '<div class=\"notice notice-info\">';\n\n\t\t\t$r = (int) $_GET['restore'];\n\n\t\t\t$sked['week'] = array( 6 );\n\n\t\t\t$sked['dayofweek'] = array();\n\n\t\t\t$sked['hour'] = $rsvp_options['defaulthour'];\n\n\t\t\t$sked['minutes'] = $rsvp_options['defaultmin'];\n\n\t\t\tif ( $_GET['specimen'] ) {\n\n\t\t\t\t$date = get_rsvp_date( $_GET['specimen'] );\n\n\t\t\t\tif ( $date ) {\n\n\t\t\t\t\t$t = strtotime( $date );\n\n\t\t\t\t\t$sked['dayofweek'] = array( date( 'w', $t ) );\n\n\t\t\t\t\t$sked['hour'] = date( 'h', $t );\n\n\t\t\t\t\t$sked['minutes'] = date( 'i', $t );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$sked['duration'] = '';\n\n\t\t\t$sked['stop'] = '';\n\n\t\t\tnew_template_schedule( $r, $sked );\n\n\t\t\techo '<p>Restoring template. Edit to fix schedule parameters.</p></div>';\n\n\t\t}\n\n\t\t$results = rsvpmaker_get_templates('',true);\n\n\t\tif ( $results ) {\n\n\t\t\tprintf( '<h3>Templates</h3><table  class=\"wp-list-table widefat fixed posts\" cellspacing=\"0\"><thead><tr><th>%s</th><th>%s</th><th>%s</th><th>%s</th></tr></thead><tbody>', __( 'Title', 'rsvpmaker' ), __( 'Schedule', 'rsvpmaker' ), __( 'Projected Dates', 'rsvpmaker' ), __( 'Event', 'rsvpmaker' ) );\n\n\t\t\tforeach ( $results as $post ) {\n\n\t\t\t\tif($post->post_status == 'draft')\n\t\t\t\t\t$post->post_title .= ' (draft)';\n\n\t\t\t\tif ( isset( $_GET['apply_current'] ) && ( $post->ID == $_GET['apply_current'] ) ) {\n\n\t\t\t\t\t$current_template = '<option value=\"' . $post->ID . '\">Current Template: ' . $post->post_title . '</option>';\n\t\t\t\t}\n\n\t\t\t\t$sked = get_template_sked( $post->ID );\n\n\t\t\t\t// backward compatability\n\n\t\t\t\tif ( is_array( $sked['week'] ) ) {\n\n\t\t\t\t\t$weeks = $sked['week'];\n\n\t\t\t\t\t$dows = ( empty( $sked['dayofweek'] ) ) ? 0 : $sked['dayofweek'];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$weeks = array();\n\n\t\t\t\t\t$dows = array();\n\n\t\t\t\t\t$weeks[0] = ( isset( $sked['week'] ) ) ? $sked['week'] : 0;\n\n\t\t\t\t\t$dows[0] = ( isset( $sked['dayofweek'] ) ) ? $sked['dayofweek'] : 0;\n\n\t\t\t\t}\n\n\t\t\t\t$dayarray = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ) );\n\n\t\t\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t\t\t\tif ( empty( $sked['week'] ) || ( (int) $sked['week'][0] == 0 ) ) {\n\n\t\t\t\t\t$s = __( 'Schedule Varies', 'rsvpmaker' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tforeach ( $weeks as $week ) {\n\n\t\t\t\t\t\tif ( empty( $s ) ) {\n\n\t\t\t\t\t\t\t$s = '';\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$s .= '/ ';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$s .= $weekarray[ (int) $week ] . ' ';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! empty( $dows ) && is_array( $dows ) ) {\n\n\t\t\t\t\t\tforeach ( $dows as $dow ) {\n\n\t\t\t\t\t\t\tif ( $dow > -1 ) {\n\n\t\t\t\t\t\t\t\t$s .= $dayarray[ (int) $dow ] . ' ';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( empty( $sked['hour'] ) || empty( $sked['minutes'] ) ) {\n\n\t\t\t\t\t\t$time = '';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$time = rsvpmaker_strtotime( $sked['hour'] . ':' . $sked['minutes'] );\n\n\t\t\t\t\t\t$s .= ' ' . rsvpmaker_date( $rsvp_options['time_format'], $time );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(get_post_meta( $post->ID, 'rsvpautorenew', true ) )\n\t\t\t\t\t$s .= '<br><strong>'.__('Set to automatically add dates','rsvpmaker').'</strong>';\n\n\t\t\t\t$eds = get_additional_editors( $post->ID );\n\n\t\t\t\tif ( ( $post->post_author == $current_user->ID ) || in_array( $current_user->ID, $eds ) || current_user_can( 'edit_post', $post->ID ) ) {\n\n\t\t\t\t\t$template_edit_url = admin_url( 'post.php?action=edit&post=' . intval( $post->ID ) );\n\n\t\t\t\t\t$title = sprintf( '<a href=\"%s\">%s</a>', esc_attr( $template_edit_url ), esc_html( $post->post_title ) );\n\n\t\t\t\t\tif ( strpos( $post->post_content, '[toastmaster' ) && function_exists( 'agenda_setup_url' ) ) { // rsvpmaker for toastmasters\n\n\t\t\t\t\t\t$title .= sprintf( ' (<a href=\"%s\">Toastmasters %s</a>)', agenda_setup_url( $post->ID ), __( 'Agenda Setup', 'rsvptoast' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t$template_options .= sprintf( '<option value=\"%d\">%s</option>', $post->ID, esc_html( $post->post_title ) );\n\n\t\t\t\t\t$template_override .= sprintf( '<option value=\"%d\">APPLY TO TEMPLATE: %s</option>', $post->ID, esc_html( $post->post_title ) );\n\n\t\t\t\t\t$template_recur_url = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . intval( $post->ID ) );\n\n\t\t\t\t\t$schedoptions = sprintf( ' (<a href=\"%s\">Options</a>)', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=' ) . intval( $post->ID ) );\n\n\t\t\t\t\tprintf( '<tr><td>%s</td><td>%s</td><td><a href=\"%s\">' . __( 'Create/Update', 'rsvpmaker' ) . '</a></td><td>%s</td></tr>' . \"\\n\", wp_kses_post( $title ) . wp_kses_post( $schedoptions ), $s, esc_attr( $template_recur_url ), next_or_recent( $post->ID ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$title = $post->post_title;\n\n\t\t\t\t\tprintf( '<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>' . \"\\n\", esc_html( $title ), $s, __( 'Not an editor', 'rsvpmaker' ), next_or_recent( $post->ID ) );\n\n\t\t\t\t}\n\n\t\t\t\t$s = '';\n\n\t\t\t}\n\n\t\t\techo '</tbody></table>';\n\n\t\t\tprintf( '<p><a href=\"%s\">See all templates (including drafts)</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&rsvpsort=templates' ) );\n\n\t\t\tif ( isset( $template_options ) ) {\n\n\t\t\t\techo '<div id=\"applytemplate\"></div><h3>Apply Template to Existing Event</h3>';\n\n\t\t\t\t$target_id = isset( $_GET['apply_target'] ) ? (int) $_GET['apply_target'] : 0;\n\n\t\t\t\tif ( $target_id ) {\n\n\t\t\t\t\t$event = get_rsvp_event( 'ID = ' . $target_id );\n\n\t\t\t\t\tif ( ! empty( $event ) ) {\n\n\t\t\t\t\t\t$event_options .= sprintf( '<option value=\"%d\" selected=\"selected\">%s %s</option>', $event->ID, esc_html( $event->post_title ), esc_html( $event->datetime ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$current_template .= '<option value=\"0\">Choose Template</option>';\n\n\t\t\t\t$sql = \"SELECT *, $wpdb->posts.ID as postID, meta_value as datetime\n\nFROM `\" . $wpdb->postmeta . \"`\n\nJOIN $wpdb->posts ON \" . $wpdb->postmeta . \".post_id = $wpdb->posts.ID AND meta_key='_rsvp_dates'\n\nWHERE meta_value >= '\" . get_sql_curdate() . \"' AND $wpdb->posts.post_status = 'publish'\n\nORDER BY meta_value LIMIT 0,100\";\n\n\t\t\t\t$results = $wpdb->get_results( $sql );\n\n\t\t\t\tif ( is_array( $results ) ) {\n\n\t\t\t\t\tforeach ( $results as $r ) {\n\n\t\t\t\t\t\t$event_options .= sprintf( '<option value=\"%d\">%s %s</option>', $r->postID, esc_html( $r->post_title ), $r->datetime );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' );\n\t\n\t\t\t\tprintf( '<form method=\"post\" action=\"%s\"><p>Apply <select name=\"override\">%s</select> to <select name=\"overridden\">%s</select></p><p>Copy settings:</p>', $action, $current_template . $template_options, $event_options . $template_override );\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_add_timezone\" name=\"copymeta[]\">  %s</div>',__('Show Timezone','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_convert_timezone\" name=\"copymeta[]\">  %s</div>',__('Convert Timezone','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_calendar_icons\" name=\"copymeta[]\">  %s</div>',__('Show Calendar Icons','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_on\" name=\"copymeta[]\">  %s</div>',__('Collect RSVPs on/off','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_instructions\" name=\"copymeta[]\">  %s</div>',__('RSVP Instructions','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_to\" name=\"copymeta[]\">  %s</div>',__('Email for RSVP Notifications','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_rsvpmaker_send_confirmation_email\" name=\"copymeta[]\">  %s</div>',__('Send Confirmation Email on/off','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_confirm\" name=\"copymeta[]\">  %s</div>',__('Confirmation Email Message','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_confirmation_include_event\" name=\"copymeta[]\">  %s</div>',__('Include Event Details in Confirmation','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_confirmation_after_payment\" name=\"copymeta[]\">  %s</div>',__('Send Confirmation After Payment on/off','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_reminder_\" name=\"copymeta[]\">  %s</div>',__('Reminder Email Messages','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_timezone_string\" name=\"copymeta[]\">  %s</div>',__('Timezone','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_count\" name=\"copymeta[]\">  %s</div>',__('Show RSVP Count Publicly','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_show_attendees\" name=\"copymeta[]\">  %s</div>',__('Show Attendees Publicly','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_login_required\" name=\"copymeta[]\">  %s</div>',__('Login Required','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_max\" name=\"copymeta[]\">  %s</div>',__('Maximum Number of Attendees','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_per\" name=\"copymeta[]\">  %s</div>',__('Pricing','rsvpmaker'));\n\t\t\t\tprintf('<div><input type=\"checkbox\" value=\"_rsvp_count_party\" name=\"copymeta[]\">  %s</div>',__('Count Members of Party for Event Pricing','rsvpmaker'));\n\t\t\t\tsubmit_button();\n\t\t\t\trsvpmaker_nonce();\n\t\t\t\techo '</form>';\n\n\t\t\t}\n\t\t}\n\n\t\t$event_options = '';\n\n\t\t$sql = \"SELECT *, $wpdb->posts.ID as postID, meta_value as datetime\n\nFROM `\" . $wpdb->postmeta . \"`\n\nJOIN $wpdb->posts ON \" . $wpdb->postmeta . \".post_id = $wpdb->posts.ID AND meta_key='_rsvp_dates'\n\nWHERE meta_value >= DATE_SUB('\" . get_sql_curdate() . \"',INTERVAL 3 MONTH) AND $wpdb->posts.post_status = 'publish'\n\nORDER BY meta_value LIMIT 0,100\";\n\n\t\t$results = $wpdb->get_results( $sql );\n\n\t\tif ( is_array( $results ) ) {\n\n\t\t\tforeach ( $results as $r ) {\n\n\t\t\t\t$event_options .= sprintf( '<option value=\"%d\">%s %s</option>', $r->postID, esc_html( $r->post_title ), $r->datetime );\n\n\t\t\t}\n\t\t}\n\n\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' );\n\n\t\techo '<h3>Create Template Based on Existing Event</h3>';\n\n\t\tprintf(\n\t\t\t'<form method=\"post\" action=\"%s\"><p>%s <select name=\"event_to_template\">%s</select>\n\n\t\t</p>',\n\t\t\t$action,\n\t\t\t__( 'Copy', 'rsvpmaker' ),\n\t\t\t$event_options\n\t\t);\n\n\t\tsubmit_button( __( 'Copy Event', 'rsvpmaker' ) );\n\t\trsvpmaker_nonce();\n\t\techo '</form>';\n\n\t\tprintf( '<h2>%s</h2><p>%s</p>', __( 'Shared Templates', 'rsvpmaker' ), __( 'RSVPMaker users can share the content of templates between websites', 'rsvpmaker' ) );\n\n\t\t$shared_templates = '';\n\t\t$results          = $wpdb->get_results( \"SELECT * FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID= $wpdb->postmeta.post_id WHERE meta_key='rsvpmaker_shared_template'\" );\n\t\tif ( $results ) {\n\t\t\techo '<h3>My Shared Templates</h3>';\n\t\t\tforeach ( $results as $row ) {\n\t\t\t\tprintf( '<p>%s<br />%s</p>', $row->post_title, rest_url( 'rsvpmaker/v1/shared_template/' . intval( $row->ID ) ) );\n\t\t\t}\n\t\t}\n\n\t\tdo_action( 'import_shared_template_prompt' );\n\n\t\tprintf( '<h3>%s</h3><form action=\"%s\" method=\"post\"><input name=\"import_shared_template\" />', __( 'Import Shared Template', 'rsvpmaker' ), admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' ) );\n\t\tsubmit_button( __( 'Import', 'rsvpmaker' ) );\n\t\trsvpmaker_nonce();\n\t\techo '</form>';\n\n\t\tif ( $template_options ) {\n\t\t\tprintf( '<h3>%s</h3><form action=\"%s\" method=\"post\"><select name=\"share_template\">%s</select>', __( 'Share Template', 'rsvpmaker' ), admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list' ), $template_options );\n\t\t\tsubmit_button( __( 'Share Template', 'rsvpmaker' ) );\n\t\t\trsvpmaker_nonce();\n\t\t\techo '</form>';\n\t\t}\n\n\t\t$restore = '';\n\n\t\t$sql = \"select count(*) as copies, meta_value as t FROM $wpdb->postmeta WHERE `meta_key` = '_meet_recur' group by meta_value\";\n\n\t\t$results = $wpdb->get_results( $sql );\n\n\t\tforeach ( $results as $index => $row ) {\n\n\t\t\tif ( ! rsvpmaker_is_template( $row->t ) ) {\n\n\t\t\t\t$corrupted = get_post( $row->t );\n\n\t\t\t\tif ( $corrupted ) {\n\n\t\t\t\t\t$future = future_rsvpmakers_by_template( $row->t );\n\n\t\t\t\t\t$futurecount = ( $future ) ? sizeof( $future ) : 0;\n\n\t\t\t\t\t$specimen = ( $futurecount ) ? $future[0] : 0;\n\n\t\t\t\t\t$restore .= sprintf( '<p><a href=\"%s\">Restore</a> - This template appears to have been corrupted: <strong>%s</strong> (%d) last modified: %s, used for %d future events.</p>', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&restore=' . intval( $corrupted->ID ) . '&specimen=' . intval( $specimen ) ), esc_html( $corrupted->post_title ), esc_attr( $corrupted->ID ), esc_attr( $corrupted->post_modified ), esc_attr( $futurecount ) );\n\n\t\t\t\t\t// $restore .= var_export($future,true);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $restore ) ) {\n\n\t\t\techo '<h3>Restore Templates</h3>' . $restore;\n\t\t}\n\n\t\t$templates = rsvpmaker_get_templates();\n\t\tforeach ( $templates as $template ) {\n\t\t\t$date = get_rsvp_date( $template->ID );\n\t\t\tif ( $date ) {\n\t\t\t\tprintf( '<p>Template %d also shows date %s</p>', $template->ID, esc_html( $date ) );\n\t\t\t}\n\t\t}\n\t\t?>\n\n\n\n</div>\n\n\t\t<?php\n\n\t}\n}// end if pluggable\n\n\n\nfunction rsvpmaker_week( $index = 0, $context = '' ) {\n\n\tif ( $context == 'rsvpmaker_strtotime' ) {\n\n\t\t$weekarray = array( 'Varies', 'First', 'Second', 'Third', 'Fourth', 'Last', 'Every' );\n\n\t} else {\n\n\t\t$weekarray = array( __( 'Varies', 'rsvpmaker' ), __( 'First', 'rsvpmaker' ), __( 'Second', 'rsvpmaker' ), __( 'Third', 'rsvpmaker' ), __( 'Fourth', 'rsvpmaker' ), __( 'Last', 'rsvpmaker' ), __( 'Every', 'rsvpmaker' ) );\n\n\t}\n\n\treturn $weekarray[ $index ];\n\n}\n\n\n\nfunction rsvpmaker_day( $index = 0, $context = '' ) {\n\n\tif ( $context == 'rsvpmaker_strtotime' ) {\n\n\t\t$dayarray = array( 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' );\n\n\t} else {\n\n\t\t$dayarray = array( __( 'Sunday', 'rsvpmaker' ), __( 'Monday', 'rsvpmaker' ), __( 'Tuesday', 'rsvpmaker' ), __( 'Wednesday', 'rsvpmaker' ), __( 'Thursday', 'rsvpmaker' ), __( 'Friday', 'rsvpmaker' ), __( 'Saturday', 'rsvpmaker' ), '' );\n\n\t}\n\n\treturn $dayarray[ $index ];\n\n}\n\n\n\nif ( ! function_exists( 'rsvp_template_checkboxes' ) ) {\n\n\tfunction rsvp_template_checkboxes( $t ) {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $current_user,$rsvp_options;\n\n\t\t$nomeeting = $editlist = $add_one = $add_date_checkbox = $event_options = $updatelist = '';\n\n\t\t$template = get_template_sked( $t );\n\n\t\t$post = get_post( $t );\n\n\t\t$template_editor = false;\n\n\t\tif ( current_user_can( 'edit_others_rsvpmakers' ) ) {\n\n\t\t\t$template_editor = true;\n\n\t\t} else {\n\n\t\t\t$eds = get_post_meta( $t, '_additional_editors', false );\n\n\t\t\t$eds[] = $wpdb->get_var( \"SELECT post_author FROM $wpdb->posts WHERE ID = $t\" );\n\n\t\t\t$template_editor = in_array( $current_user->ID, $eds );\n\n\t\t}\n\n\t\t$template = get_template_sked( $t );\n\n\t\t$weeks = $template['week'];\n\n\t\t$dows = $template['dayofweek'];\n\n\t\t$hour = ( isset( $template['hour'] ) ) ? (int) $template['hour'] : 17;\n\n\t\t$minutes = isset( $template['minutes'] ) ? $template['minutes'] : '00';\n\n\t\t$terms = get_the_terms( $t, 'rsvpmaker-type' );\n\n\t\tif ( $terms && ! is_wp_error( $terms ) ) {\n\n\t\t\t$rsvptypes = array();\n\n\t\t\tforeach ( $terms as $term ) {\n\n\t\t\t\t$rsvptypes[] = $term->term_id;\n\n\t\t\t}\n\t\t}\n\n\t\t$cy = date( 'Y' );\n\n\t\t$cm = rsvpmaker_date( 'm' );\n\n\t\t$cd = rsvpmaker_date( 'j' );\n\n\t\t$schedule = '';\n\n\t\tif ( $weeks[0] == 0 ) {\n\n\t\t\t$schedule = __( 'Schedule Varies', 'rsvpmaker' );\n\n\t\t} else {\n\n\t\t\tforeach ( $weeks as $week ) {\n\n\t\t\t\t$schedule .= rsvpmaker_week( $week ) . ' ';\n\t\t\t}\n\n\t\t\t$schedule .= ' / ';\n\n\t\t\tif ( ! empty( $dows ) && is_array( $dows ) ) {\n\n\t\t\t\tforeach ( $dows as $dow ) {\n\n\t\t\t\t\t$schedule .= rsvpmaker_day( $dow ) . ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(!empty($template['stop']))\n\t\t{\n\t\t\t$schedule .= ' - stop date set for '.$template['stop'] .' (<a href=\"'.admin_url('edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id='.$t).'\">Options</a>)';\n\t\t}\n\n\t\tprintf( '<p id=\"template_ck\">%s:</p><h2>%s</h2><h3>%s</h3><blockquote><a href=\"%s\">%s</a></blockquote>', __( 'Template', 'rsvpmaker' ), esc_html( $post->post_title ), $schedule, admin_url( 'post.php?action=edit&post=' . $t ), __( 'Edit Template', 'rsvpmaker' ) );\n\n\t\t$hour = (int) $template['hour'];\n\n\t\t$minutes = $template['minutes'];\n\n\t\t$his = ( $hour < 10 ) ? '0' . $hour : $hour;\n\n\t\t$his .= ':' . $minutes . ':00';\n\n\t\t$cy              = date( 'Y' );\n\t\t$template_editor = false;\n\n\t\tif ( current_user_can( 'edit_others_rsvpmakers' ) ) {\n\n\t\t\t$template_editor = true;\n\n\t\t} else {\n\n\t\t\t$eds = get_post_meta( $t, '_additional_editors', false );\n\n\t\t\t$eds[] = $wpdb->get_var( \"SELECT post_author FROM $wpdb->posts WHERE ID = $t\" );\n\n\t\t\t$template_editor = in_array( $current_user->ID, $eds );\n\n\t\t}\n\n\t\t$cm = rsvpmaker_date( 'm' );\n\n\t\t$cd = rsvpmaker_date( 'j' );\n\n\t\tglobal $current_user;\n\n\t\t$sched_result = get_events_by_template( $t );\n\n\t\t$add_date_checkbox = $updatelist = $editlist = $nomeeting = '';\n\n\t\tif ( $sched_result ) {\n\n\t\t\tforeach ( $sched_result as $index => $sched ) {\n\n\t\t\t\t$thistime = rsvpmaker_strtotime( $sched->datetime );\n\n\t\t\t\t$fulldate = rsvpmaker_date( $rsvp_options['long_date'] . ' ' . $rsvp_options['time_format'], $thistime );\n\n\t\t\t\t$a = ( $index % 2 ) ? '' : 'alternate';\n\n\t\t\t\t$tparts = preg_split( '/\\s+/', $sched->datetime );\n\n\t\t\t\tif ( $his != $tparts[1] ) {\n\n\t\t\t\t\t$newtime = str_replace( $tparts[1], $his, $sched->datetime );\n\n\t\t\t\t\t$timechange = sprintf( '<input type=\"hidden\" name=\"timechange[%d]\" value=\"%s\" />', $sched->ID, $newtime );\n\n\t\t\t\t\tif ( empty( $timechangemessage ) ) {\n\n\t\t\t\t\t\t$timechangemessage = '<p>' . __( 'Start time for updated events will be changed to', 'rsvpmaker' ) . ' ' . rsvpmaker_date( $rsvp_options['time_format'], rsvpmaker_strtotime( $newtime ) );\n\t\t\t\t\t\techo wp_kses_post($timechangemessage);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$timechange = '';\n\t\t\t\t}\n\n\t\t\t\t$donotproject[] = rsvpmaker_date( 'Y-m-j', $thistime );\n\n\t\t\t\t$nomeeting .= sprintf( '<option value=\"%s\">%s (%s)</option>', $sched->postID, date( 'F j, Y', $thistime ), __( 'Already Scheduled', 'rsvpmaker' ) );\n\n\t\t\t\t$cy = date( 'Y', $thistime ); // advance starting time\n\n\t\t\t\t$cm = rsvpmaker_date( 'm', $thistime );\n\n\t\t\t\t$cd = rsvpmaker_date( 'j', $thistime );\n\n\t\t\t\tif ( strpos( $sched->post_title, 'o Meeting:' ) ) {\n\n\t\t\t\t\t$sched->post_title = '<span style=\"color:red;\">' . $sched->post_title . '</span>';\n\t\t\t\t}\n\n\t\t\t\tif ( current_user_can( 'delete_post', $sched->postID ) ) {\n\n\t\t\t\t\t$delete_text = __( 'Move to Trash' );\n\n\t\t\t\t\t$d = '<input type=\"checkbox\" name=\"trash_template[]\" value=\"' . $sched->postID . '\" class=\"trash_template\" /> <a class=\"submitdelete deletion\" href=\"' . get_delete_post_link( $sched->postID ) . '\">' . esc_html( $delete_text ) . '</a>';\n\n\t\t\t\t} else {\n\t\t\t\t\t$d = '-';\n\t\t\t\t}\n\n\t\t\t\t$ifdraft = ( $sched->post_status == 'draft' ) ? ' (draft) ' : '';\n\n\t\t\t\t$edit = ( ( $sched->post_author == $current_user->ID ) || $template_editor ) ? sprintf( '<a href=\"%s?post=%d&action=edit\">' . __( 'Edit', 'rsvpmaker' ) . '</a>', admin_url( 'post.php' ), $sched->postID ) : '-';\n\n\t\t\t\t$schedoptions = sprintf( ' (<a href=\"%s\">Options</a>)', admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_details&post_id=' ) . $sched->ID );\n\n\t\t\t\t$editlist .= sprintf( '<tr class=\"%s\"><td><input type=\"checkbox\" name=\"update_from_template[]\" value=\"%s\" class=\"update_from_template\" /> %s </td><td>%s</td><td><input type=\"checkbox\" name=\"detach_from_template[]\" value=\"%d\" /> </td><td>%s</td><td>%s</td><td><a href=\"%s\">%s</a></td></tr>', $a, $sched->postID, $timechange, $edit, $sched->postID, $d, rsvpmaker_date( 'F d, Y', $thistime ), get_post_permalink( $sched->postID ), $sched->post_title . $ifdraft . $schedoptions );\n\n\t\t\t\t$template_update = get_post_meta( $sched->postID, '_updated_from_template', true );\n\n\t\t\t\tif ( ! empty( $template_update ) && ( $template_update != $sched->post_modified ) ) {\n\t\t\t\t\t$mod = ' <span style=\"color:red;\">* ' . __( 'Modified independently of template. Update could overwrite customizations.', 'rsvpmaker' ) . '</span> ' . sprintf( '<input type=\"checkbox\" name=\"detach_from_template[]\" value=\"%d\" /> ', $sched->postID ) . __( 'Detach', 'rsvpmaker' );\n\t\t\t\t} else {\n\t\t\t\t\t$mod = '';\n\t\t\t\t}\n\n\t\t\t\t// $sametime_events\n\t\t\t\t$mod        .= rsvpmaker_sametime( $sched->datetime, $sched->ID );\n\t\t\t\t$updatelist .= sprintf( '<p class=\"%s\"><input type=\"checkbox\" name=\"update_from_template[]\" value=\"%s\"  class=\"update_from_template\" /><em>%s</em> %s <span class=\"updatedate\">%s</span> %s %s</p>', $a, $sched->postID, __( 'Update', 'rsvpmaker' ), $sched->post_title . $ifdraft, $fulldate, $mod, $timechange );\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $updatelist ) ) {\n\n\t\t\t$updatelist = '<p>' . __( 'Already Scheduled' ) . \"</p>\\n\" . '<fieldset>\n\n<div><input type=\"checkbox\" class=\"checkall\"> ' . __( 'Check all', 'rsvpmaker' ) . '</div>' . \"\\n\"\n\n\t\t\t. $updatelist . \"\\n</fieldset>\\n\";\n\t\t}\n\n\t\t// missing template variable\n\n\t\t// problem call\n\n\t\t// print_r($template);\n\n\t\t$projected = rsvpmaker_get_projected( $template );\n\t\tif(isset($_GET['debug']))\n\t\tprint_r($projected);\n\t\tif ( $projected && is_array( $projected ) ) {\n\t\t\tforeach ( $projected as $i => $ts ) {\n\t\t\t\tob_start();\n\n\t\t\t\t$today = rsvpmaker_date( 'd', $ts );\n\n\t\t\t\t$cm = rsvpmaker_date( 'n', $ts );\n\n\t\t\t\t$y = date( 'Y', $ts );\n\n\t\t\t\t$y0 = $y - 1;\n\n\t\t\t\t$y2 = $y + 1;\n\n\t\t\t\tif ( ( $ts < current_time( 'timestamp' ) ) && ! isset( $_GET['start'] ) ) {\n\n\t\t\t\t\tcontinue; // omit dates past\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $donotproject ) && is_array( $donotproject ) && in_array( rsvpmaker_date( 'Y-m-j', $ts ), $donotproject ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( empty( $nomeeting ) ) {\n\t\t\t\t\t$nomeeting = '';\n\t\t\t\t}\n\n\t\t\t\t$nomeeting .= sprintf( '<option value=\"%s\">%s</option>', date( 'Y-m-d', $ts ), date( 'F j, Y', $ts ) );\n\n\t\t\t\t?>\n\n<div style=\"font-family:Courier, monospace\"><input name=\"recur_check[<?php echo esc_attr($i); ?>]\" type=\"checkbox\" class=\"update_from_template\" value=\"1\">\n\n\t\t\t\t<?php esc_html_e( 'Month', 'rsvpmaker' ); ?>: \n\n\t\t\t  <select name=\"recur_month[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t  <option value=\"<?php echo esc_attr($cm); ?>\"><?php echo esc_attr($cm); ?></option> \n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  </select> \n\n\t\t\t\t<?php esc_html_e( 'Day', 'rsvpmaker' ); ?> \n\n\t\t\t<select name=\"recur_day[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t\t<?php\n\n\t\t\t\techo sprintf( '<option value=\"%s\">%s</option>', $today, $today );\n\n\t\t\t\t?>\n\n\t\t\t  <option value=\"\">Not Set</option>\n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  <option value=\"13\">13</option> \n\n\t\t\t  <option value=\"14\">14</option> \n\n\t\t\t  <option value=\"15\">15</option> \n\n\t\t\t  <option value=\"16\">16</option> \n\n\t\t\t  <option value=\"17\">17</option> \n\n\t\t\t  <option value=\"18\">18</option> \n\n\t\t\t  <option value=\"19\">19</option> \n\n\t\t\t  <option value=\"20\">20</option> \n\n\t\t\t  <option value=\"21\">21</option> \n\n\t\t\t  <option value=\"22\">22</option> \n\n\t\t\t  <option value=\"23\">23</option> \n\n\t\t\t  <option value=\"24\">24</option> \n\n\t\t\t  <option value=\"25\">25</option> \n\n\t\t\t  <option value=\"26\">26</option> \n\n\t\t\t  <option value=\"27\">27</option> \n\n\t\t\t  <option value=\"28\">28</option> \n\n\t\t\t  <option value=\"29\">29</option> \n\n\t\t\t  <option value=\"30\">30</option> \n\n\t\t\t  <option value=\"31\">31</option> \n\n\t\t\t</select> \n\n\t\t\t\t<?php esc_html_e( 'Year', 'rsvpmaker' ); ?>\n\n\t\t\t<select name=\"recur_year[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t<option value=\"<?php echo esc_attr($y0); ?>\"><?php echo esc_attr($y0); ?></option> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y); ?>\" selected=\"selected\"><?php echo esc_attr($y); ?></option> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y2); ?>\"><?php echo esc_attr($y2); ?></option> \n\n\t\t\t</select>\n\n\t\t\t<input type=\"text\" name=\"recur_title[<?php echo esc_attr($i); ?>]\" value=\"<?php echo esc_html( $post->post_title ); ?>\" >\n\t\t\t\t<?php echo rsvpmaker_sametime( rsvpmaker_date( 'Y-m-d H:i:s', $ts ) ); ?>\n</div>\n\n\t\t\t\t<?php\n\n\t\t\t\t$add_date_checkbox .= ob_get_clean();\n\n\t\t\t\tif ( empty( $add_one ) ) {\n\n\t\t\t\t\t$add_one = str_replace( 'type=\"checkbox\"', 'type=\"hidden\"', $add_date_checkbox );\n\t\t\t\t}\n\t\t\t} // end for loop\n\t\t}\n\n\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $t );\n\n\t\tif ( empty( $updatelist ) ) {\n\t\t\t$updatelist = '';\n\t\t}\n\n\t\tif ( current_user_can( 'edit_rsvpmakers' ) ) {\n\n\t\t\tprintf(\n\t\t\t\t'<div class=\"group_add_date\"><br />\n\n<form method=\"post\" action=\"%s\">\n\n%s\n\n<div><strong>' . __( 'Projected Dates', 'rsvpmaker' ) . ':</strong></div>\n\n<fieldset>\n\n<div><input type=\"checkbox\" class=\"checkall\"> ' . __( 'Check all', 'rsvpmaker' ) . '</div>\n\n%s\n\n</fieldset>\n\n<br />' . __( 'New Post Status', 'rsvpmaker' ) . ': <input name=\"newstatus\" type=\"radio\" value=\"publish\" checked=\"checked\" /> publish <input name=\"newstatus\" type=\"radio\" value=\"draft\" /> draft<br />\n\n<br /><input type=\"submit\" value=\"' . __( 'Add/Update From Template', 'rsvpmaker' ) . '\" />\n\n<input type=\"hidden\" name=\"template\" value=\"%s\" />\n%s\n</form>\n\n</div><br />',\n\t\t\t\t$action,\n\t\t\t\t$updatelist,\n\t\t\t\t$add_date_checkbox,\n\t\t\t\t$t,\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\t\t}\n\n\t\tif ( isset( $_GET['trashed'] ) ) {\n\n\t\t\t\t$ids = (int) $_GET['ids'];\n\n\t\t\t\t$message = '<a href=\"' . esc_url( wp_nonce_url( \"edit.php?post_type=rsvpmaker&doaction=undo&action=untrash&ids=$ids\", 'bulk-posts' ) ) . '\">' . __( 'Undo' ) . '</a>';\n\n\t\t\t\techo '<div id=\"message\" class=\"updated\"><p>' . __( 'Moved to trash', 'rsvpmaker' ) . ' ' . $message . '</p></div>';\n\n\t\t}\n\n\t\t$projected = rsvpmaker_get_projected( $template );\n\n\t\tif ( $projected && is_array( $projected ) ) {\n\t\t\tforeach ( $projected as $i => $ts ) {\n\n\t\t\t\t$today = rsvpmaker_date( 'd', $ts );\n\n\t\t\t\t$cm = rsvpmaker_date( 'n', $ts );\n\n\t\t\t\t$y = date( 'Y', $ts );\n\n\t\t\t\t$y2 = $y + 1;\n\n\t\t\t\tob_start();\n\n\t\t\t\tif ( ( $ts < current_time( 'timestamp' ) ) && ! isset( $_GET['start'] ) ) {\n\n\t\t\t\t\tcontinue; // omit dates past\n\t\t\t\t}\n\n\t\t\t\tif ( isset( $donotproject ) && is_array( $donotproject ) && in_array( date( 'Y-m-j', $ts ), $donotproject ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$nomeeting .= sprintf( '<option value=\"%s\">%s</option>', date( 'Y-m-d', $ts ), date( 'F j, Y', $ts ) );\n\n\t\t\t\t?>\n\n<div style=\"font-family:Courier, monospace\"><input name=\"recur_check[<?php echo esc_attr($i); ?>]\" type=\"checkbox\" value=\"1\">\n\n\t\t\t\t<?php esc_html_e( 'Month', 'rsvpmaker' ); ?>: \n\n\t\t\t  <select name=\"recur_month[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t  <option value=\"<?php echo esc_attr($cm); ?>\"><?php echo esc_attr($cm); ?></option> \n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  </select> \n\n\t\t\t\t<?php esc_html_e( 'Day', 'rsvpmaker' ); ?> \n\n\t\t\t<select name=\"recur_day[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t\t<?php\n\n\t\t\t\tprintf( '<option value=\"%s\">%s</option>', $today, $today );\n\n\t\t\t\t?>\n\n\t\t\t  <option value=\"\"><?php esc_html_e( 'Not Set', 'rsvpmaker' ); ?></option>\n\n\t\t\t  <option value=\"1\">1</option> \n\n\t\t\t  <option value=\"2\">2</option> \n\n\t\t\t  <option value=\"3\">3</option> \n\n\t\t\t  <option value=\"4\">4</option> \n\n\t\t\t  <option value=\"5\">5</option> \n\n\t\t\t  <option value=\"6\">6</option> \n\n\t\t\t  <option value=\"7\">7</option> \n\n\t\t\t  <option value=\"8\">8</option> \n\n\t\t\t  <option value=\"9\">9</option> \n\n\t\t\t  <option value=\"10\">10</option> \n\n\t\t\t  <option value=\"11\">11</option> \n\n\t\t\t  <option value=\"12\">12</option> \n\n\t\t\t  <option value=\"13\">13</option> \n\n\t\t\t  <option value=\"14\">14</option> \n\n\t\t\t  <option value=\"15\">15</option> \n\n\t\t\t  <option value=\"16\">16</option> \n\n\t\t\t  <option value=\"17\">17</option> \n\n\t\t\t  <option value=\"18\">18</option> \n\n\t\t\t  <option value=\"19\">19</option> \n\n\t\t\t  <option value=\"20\">20</option> \n\n\t\t\t  <option value=\"21\">21</option> \n\n\t\t\t  <option value=\"22\">22</option> \n\n\t\t\t  <option value=\"23\">23</option> \n\n\t\t\t  <option value=\"24\">24</option> \n\n\t\t\t  <option value=\"25\">25</option> \n\n\t\t\t  <option value=\"26\">26</option> \n\n\t\t\t  <option value=\"27\">27</option> \n\n\t\t\t  <option value=\"28\">28</option> \n\n\t\t\t  <option value=\"29\">29</option> \n\n\t\t\t  <option value=\"30\">30</option> \n\n\t\t\t  <option value=\"31\">31</option> \n\n\t\t\t</select> \n\n\t\t\t\t<?php esc_html_e( 'Year', 'rsvpmaker' ); ?>\n\n\t\t\t<select name=\"recur_year[<?php echo esc_attr($i); ?>]\"> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y); ?>\"><?php echo esc_attr($y); ?></option> \n\n\t\t\t  <option value=\"<?php echo esc_attr($y2); ?>\"><?php echo esc_attr($y2); ?></option> \n\n\t\t\t</select>\n\n</div>\n\n\n\n\t\t\t\t<?php\n\n\t\t\t\t$add_date_checkbox .= ob_get_clean();\n\n\t\t\t\tif ( empty( $add_one ) ) {\n\n\t\t\t\t\t$add_one = str_replace( 'type=\"checkbox\"', 'type=\"hidden\"', $add_date_checkbox );\n\t\t\t\t}\n\t\t\t} // end for loop\n\t\t}\n\n\t\t$action = admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $t );\n\n\t\tif ( $editlist ) {\n\n\t\t\tdo_action( 'update_from_template_prompt' );\n\n\t\t\techo '<strong>' . __( 'Already Scheduled', 'rsvpmaker' ) . ':</strong><br /><br /><form method=\"post\" action=\"' . $action . '\">\n\n<fieldset>\n\n<table  class=\"wp-list-table widefat fixed posts\" cellspacing=\"0\">\n\n<thead>\n\n<tr><th class=\"manage-column column-cb check-column\" scope=\"col\" ><input type=\"checkbox\" class=\"checkall\" title=\"Check all\"></th><th>' . __( 'Edit' ) . '</th><th>' . __( 'Detach' ) . '</th><th><input type=\"checkbox\" class=\"trashall\" title=\"Trash all\"> ' . __( 'Move to Trash' ) . '<th>' . __( 'Date' ) . '</th><th>' . __( 'Title' ) . '</th></tr>\n\n</thead>\n\n<tbody>\n\n' . $editlist . '\n\n</tbody></table>\n\n</fieldset>\n\n<input type=\"submit\" value=\"' . __( 'Update Checked', 'rsvpmaker' ) .'\" />'.rsvpmaker_nonce('return').'</form>' . '<p>' . __( 'Update function copies title and content of current template, replacing the existing content of checked posts.', 'rsvpmaker' ) . '</p>';\n\n\t\t}\n\n\t\tif ( current_user_can( 'edit_rsvpmakers' ) && ! empty( $add_one ) ) {\n\n\t\t\tdo_action( 'add_from_template_prompt' );\n\n\t\t\tprintf(\n\t\t\t\t'<div class=\"group_add_date\"><br />\n\n<form method=\"post\" action=\"%s\">\n\n<strong>' . __( 'Add One', 'rsvpmaker' ) . ':</strong><br />\n\n%s\n\n<input type=\"hidden\" name=\"rsvpmaker_add_one\" value=\"1\" />\n\n<input type=\"hidden\" name=\"template\" value=\"%s\" />\n\n<br /><input type=\"submit\" value=\"' . __( 'Add From Template', 'rsvpmaker' ) . '\" />\n%s\n</form>\n\n</div><br />',\n\t\t\t\t$action,\n\t\t\t\t$add_one,\n\t\t\t\t$t,\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\n\t\t}\n\n\t\tif ( current_user_can( 'edit_rsvpmakers' ) ) {\n\n\t\t\tprintf(\n\t\t\t\t'<div class=\"group_add_date\"><br />\n\n<form method=\"post\" action=\"%s\">\n\n<strong>%s:</strong><br />\n\n%s: <select name=\"nomeeting\">%s</select>\n\n<br />%s:<br /><textarea name=\"nomeeting_note\" cols=\"60\" %s></textarea>\n\n<input type=\"hidden\" name=\"template\" value=\"%s\" />\n\n<br /><input type=\"submit\" value=\"%s\" />\n%s\n</form>\n\n</div><br />\n\n',\n\t\t\t\t$action,\n\t\t\t\t__( 'No Meeting', 'rsvpmaker' ),\n\t\t\t\t__( 'Regularly Scheduled Date', 'rsvpmaker' ),\n\t\t\t\t$nomeeting,\n\t\t\t\t__( 'Note (optional)', 'rsvpmaker' ),\n\t\t\t\t'style=\"max-width: 95%;\"',\n\t\t\t\t$t,\n\t\t\t\t__( 'Submit', 'rsvpmaker' ),\n\t\t\t\trsvpmaker_nonce('return')\n\t\t\t);\n\t\t}\n\n\t\techo \"<script>\n\njQuery(function () {\n\n    jQuery('.checkall').on('click', function () {\n\n\tjQuery(this).closest('fieldset').find('.update_from_template:checkbox').prop('checked', this.checked);\n\n    });\n\n    jQuery('.trashall').on('click', function () {\n\n\tjQuery(this).closest('fieldset').find('.trash_template:checkbox').prop('checked', this.checked);\n\n    });\n\n});\n\n</script>\n\n\";\n\n\t}\n} // end function_exists\n\n\n\nif ( ! function_exists( 'rsvpmaker_updated_messages' ) ) {\n\n\tfunction rsvpmaker_updated_messages( $messages ) {\n\n\t\tif ( empty( $messages ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $post;\n\n\t\t$post_ID = $post->ID;\n\n\t\tif ( $post->post_type != 'rsvpmaker' ) {\n\t\t\treturn; // only for RSVPMaker\n\t\t}\n\n\t\t$singular = __( 'Event', 'rsvpmaker' );\n\n\t\t$link = sprintf( ' <a href=\"%s\">%s %s</a>', esc_url( get_post_permalink( $post_ID ) ), __( 'View', 'rsvpmaker' ), $singular );\n\n\t\t$sked = get_template_sked( $post_ID );\n\n\t\tif ( ! empty( $sked ) ) {\n\n\t\t\t$singular = __( 'Event Template', 'rsvpmaker' );\n\n\t\t\t$link = sprintf( ' -> <a class=\"update_from_template\" href=\"%s\">%s</a>', esc_url( admin_url( 'edit.php?post_type=rsvpmaker&page=rsvpmaker_template_list&t=' . $post_ID ) ), __( 'Create/update events from template', 'rsvpmaker' ) );\n\n\t\t}\n\n\t\t$messages['rsvpmaker'] = array(\n\n\t\t\t0  => '', // Unused. Messages start at index 1.\n\n\t\t\t1  => $singular . ' ' . __( 'updated', 'rsvpmaker' ) . $link,\n\n\t\t\t2  => __( 'Custom field updated.' ),\n\n\t\t\t3  => __( 'Custom field deleted.' ),\n\n\t\t\t4  => $singular . ' ' . __( 'updated', 'rsvpmaker' ) . $link,\n\n\t\t\t5  => isset( $_GET['revision'] ) ? sprintf( __( $singular . ' restored to revision from %s' ), wp_post_revision_title( (int) $_GET['revision'], false ) ) : false,\n\n\t\t\t6  => $singular . ' ' . __( 'published', 'rsvpmaker' ) . $link,\n\n\t\t\t7  => __( 'Page saved.' ),\n\n\t\t\t8  => sprintf( __( $singular . ' submitted. <a target=\"_blank\" href=\"%s\">Preview ' . strtolower( $singular ) . '</a>' ), esc_url( add_query_arg( 'preview', 'true', get_post_permalink( $post_ID ) ) ) ),\n\n\t\t\t9  => sprintf( __( $singular . ' scheduled for: <strong>%s</strong>. <a target=\"_blank\" href=\"%s\">Preview ' . strtolower( $singular ) . '</a>' ), date_i18n( __( 'M j, Y @ G:i' ), rsvpmaker_strtotime( $post->post_date ) ), esc_url( get_post_permalink( $post_ID ) ) ),\n\n\t\t\t10 => sprintf( __( $singular . ' draft updated. <a target=\"_blank\" href=\"%s\">Preview ' . strtolower( $singular ) . '</a>' ), esc_url( add_query_arg( 'preview', 'true', get_post_permalink( $post_ID ) ) ) ),\n\n\t\t);\n\n\t\treturn $messages;\n\n\t}\n} // end if function\n\n\n\nif ( ! function_exists( 'rsvpmaker_template_admin_title' ) ) {\n\n\tfunction rsvpmaker_template_admin_title() {\n\n\t\tglobal $title;\n\n\t\tglobal $post;\n\n\t\tglobal $post_new_file;\n\n\t\tif ( ! isset( $post ) || ( $post->post_type != 'rsvpmaker' ) ) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! empty( $_GET['new_template'] ) || get_template_sked( $post->ID ) ) {\n\n\t\t\t$title .= ' ' . __( 'Template', 'rsvpmaker' );\n\n\t\t\tif ( isset( $post_new_file ) ) {\n\n\t\t\t\t$post_new_file = 'post-new.php?post_type=rsvpmaker&new_template=1';\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'next_or_recent' ) ) {\n\n\tfunction next_or_recent( $template_id ) {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\t$event = '';\n\n\t\t$sql = \"SELECT DISTINCT $wpdb->posts.ID as postID, a1.meta_value as datetime, a2.meta_value as template\n\n\t FROM \" . $wpdb->posts . '\n\n\t JOIN ' . $wpdb->postmeta . ' a1 ON ' . $wpdb->posts . '.ID =a1.post_id \n\n\t JOIN ' . $wpdb->postmeta . ' a2 ON ' . $wpdb->posts . \".ID =a2.post_id \n\n\t WHERE a1.meta_key='_rsvp_dates' AND a1.meta_value > '\" . get_sql_curdate() . \"' AND a2.meta_key='_meet_recur' AND a2.meta_value=\" . $template_id . \" AND post_status='publish'\n\n\t ORDER BY a1.meta_value LIMIT 0,1\";\n\n\t\tif ( $row = $wpdb->get_row( $sql ) ) {\n\n\t\t\t$t = rsvpmaker_strtotime( $row->datetime );\n\n\t\t\t$neatdate = utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\n\t\t\t$event = sprintf( '<a href=\"%s\">%s: %s</a>', get_post_permalink( $row->postID ), __( 'Next Event', 'rsvpmaker' ), $neatdate );\n\n\t\t} else {\n\n\t\t\t$sql = \"SELECT DISTINCT $wpdb->posts.ID as postID, a1.meta_value as datetime, a2.meta_value as template\n\n\t FROM \" . $wpdb->posts . '\n\n\t LEFT JOIN ' . $wpdb->postmeta . ' a1 ON ' . $wpdb->posts . '.ID =a1.post_id\n\n\t LEFT JOIN ' . $wpdb->postmeta . ' a2 ON ' . $wpdb->posts . \".ID =a2.post_id \n\n\t WHERE a1.meta_key='_rsvp_dates' AND a1.meta_value < '\" . get_sql_curdate() . \"' AND a2.meta_key='_meet_recur' AND a2.meta_value=\" . $template_id . \" AND post_status='publish'\n\n\t ORDER BY a1.meta_value DESC LIMIT 0,1\";\n\n\t\t\tif ( $row = $wpdb->get_row( $sql ) ) {\n\n\t\t\t\t$t = rsvpmaker_strtotime( $row->datetime );\n\n\t\t\t\t$neatdate = utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], $t ) );\n\n\t\t\t\t$event = sprintf( '<a style=\"color:#333;\" href=\"%s\">%s: %s</a>', get_post_permalink( $row->postID ), __( 'Most Recent', 'rsvpmaker' ), $neatdate );\n\n\t\t\t}\n\t\t}\n\n\t\treturn $event;\n\n\t}\n} // end if funnction\n\n\n\nif ( isset( $_GET['message'] ) ) {\n\tadd_filter( 'post_updated_messages', 'rsvpmaker_updated_messages' );\n}\n\nif ( ! function_exists( 'additional_editors_setup' ) ) {\n\n\tfunction additional_editors_setup() {\n\n\t\tglobal $rsvp_options;\n\n\t\tif ( isset( $rsvp_options['additional_editors'] ) && $rsvp_options['additional_editors'] ) {\n\n\t\t\tadd_action( 'save_post', 'save_additional_editor' );\n\n\t\t\t// add_filter( 'user_has_cap', 'rsvpmaker_cap_filter', 99, 3 );\n\n\t\t\tadd_filter( 'map_meta_cap', 'rsvpmaker_map_meta_cap', 10, 4 );\n\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'rsvpmaker_cap_filter_test' ) ) {\n\n\tfunction rsvpmaker_cap_filter_test( $cap, $post_id ) {\n\n\t\tif ( strpos( $cap, 'rsvpmaker' ) ) {\n\n\t\t\treturn true;\n\n\t\t} elseif ( $post = get_post( $post_id ) ) {\n\n\t\t\tif ( isset( $post->post_type ) && ( $post->post_type == 'rsvpmaker' ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t}\n}\n\n\n\nif ( ! function_exists( 'get_additional_editors' ) ) {\n\n\tfunction get_additional_editors( $post_id ) {\n\n\t\tglobal $wpdb;\n\n\t\t$eds = array();\n\n\t\t$recurid = get_post_meta( $post_id, '_meet_recur', true );\n\n\t\tif ( $recurid ) {\n\n\t\t\t$eds = get_post_meta( $recurid, '_additional_editors', false );\n\n\t\t}\n\n\t\t$post_eds = get_post_meta( $post_id, '_additional_editors', false );\n\n\t\tif ( is_array( $post_eds ) ) {\n\n\t\t\tforeach ( $post_eds as $this_eds ) {\n\n\t\t\t\tif ( ! in_array( $this_eds, $eds ) ) {\n\n\t\t\t\t\t$eds[] = $this_eds;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $eds;\n\n\t}\n}// end if exists\n\n\n\nif ( ! function_exists( 'save_additional_editor' ) ) {\n\n\tfunction save_additional_editor( $post_id ) {\n\n\t\tif ( ! empty( $_POST['additional_editor'] ) || ! empty( $_POST['remove_editor'] ) ) {\n\n\t\t\tif ( $parent_id = wp_is_post_revision( $post_id ) ) {\n\n\t\t\t\t$post_id = $parent_id;\n\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $_POST['additional_editor'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\t$ed = (int) $_POST['additional_editor'];\n\n\t\t\tif ( $ed ) {\n\n\t\t\t\tadd_post_meta( $post_id, '_additional_editors', $ed, false );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $_POST['remove_editor'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t\tforeach ( $_POST['remove_editor'] as $remove ) {\n\n\t\t\t\t$remove = (int) $remove;\n\n\t\t\t\tif ( $remove ) {\n\n\t\t\t\t\tdelete_post_meta( $post_id, '_additional_editors', $remove );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n} // end function exists\n\n\n\nif ( ! function_exists( 'rsvpmaker_editor_dropdown' ) ) {\n\n\tfunction rsvpmaker_editor_dropdown( $eds ) {\n\n\t\tglobal $wpdb;\n\n\t\t$options = '';\n\n\t\t$sql = \"SELECT * FROM $wpdb->users ORDER BY user_login\";\n\n\t\t$results = $wpdb->get_results( $sql );\n\n\t\tif ( is_array( $results ) ) {\n\n\t\t\tforeach ( $results as $row ) {\n\n\t\t\t\tif ( in_array( $row->ID, $eds ) ) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$member = get_userdata( $row->ID );\n\n\t\t\t\t$index = preg_replace( '/[^a-zA-Z]/', '', $member->last_name . $member->first_name . $row->user_login );\n\n\t\t\t\t$sortmember[ $index ] = $member;\n\n\t\t\t}\n\t\t}\n\n\t\tksort( $sortmember );\n\n\t\tforeach ( $sortmember as $index => $member ) {\n\n\t\t\tif ( isset( $member->last_name ) && ! empty( $member->last_name ) ) {\n\n\t\t\t\t$label = $member->first_name . ' ' . $member->last_name;\n\n\t\t\t} else {\n\t\t\t\t$label = $index;\n\t\t\t}\n\n\t\t\t$label = esc_html( $label );\n\n\t\t\tif ( $member->ID == $assigned ) {\n\n\t\t\t\t$s = ' selected=\"selected\" ';\n\n\t\t\t} else {\n\t\t\t\t$s = '';\n\t\t\t}\n\n\t\t\t$options .= sprintf( '<option %s value=\"%d\">%s</option>', $s, $member->ID, esc_html( $label ) );\n\n\t\t}\n\n\t\treturn $options;\n\n\t}\n} // end function exists\n\n\n\nif ( ! function_exists( 'additional_editors' ) ) {\n\n\tfunction additional_editors() {\n\n\t\tglobal $post;\n\n\t\tglobal $custom_fields;\n\n\t\tif ( $post->ID ) {\n\n\t\t\t$eds = get_post_meta( $post->ID, '_additional_editors', false );\n\t\t}\n\n\t\tif ( $eds ) {\n\n\t\t\techo '<strong>' . __( 'Editors', 'rsvpmaker' ) . ':</strong><br />';\n\n\t\t\tforeach ( $eds as $user_id ) {\n\n\t\t\t\t$member = get_userdata( $user_id );\n\n\t\t\t\tif ( isset( $member->last_name ) && ! empty( $member->last_name ) ) {\n\n\t\t\t\t\t$label = $member->first_name . ' ' . $member->last_name;\n\n\t\t\t\t} else {\n\t\t\t\t\t$label = $member->user_login;\n\t\t\t\t}\n\n\t\t\t\t$label .= ' ' . $member->user_email;\n\n\t\t\t\techo esc_html( $label ) . sprintf( ' <strong>( <input type=\"checkbox\" name=\"remove_editor[]\" value=\"%d\"> %s)</strong><br />', $user_id, __( 'Remove', 'rsvpmaker' ) );\n\n\t\t\t}\n\t\t}\n\n\t\t?>\n\n<p><?php esc_html_e( 'Add Editor', 'rsvpmaker' ); ?>: <select name=\"additional_editor\" ><option value=\"\"><?php esc_html_e( 'Select' ); ?></option><?php echo rsvpmaker_editor_dropdown( $eds ); ?></select></p>\n\n\t\t<?php\n\n\t\tif ( isset( $custom_fields['_meet_recur'][0] ) ) {\n\t\t}\n\n\t\t{\n\n\t\techo '<strong>' . __( 'Template', 'rsvpmaker' ) . ' ' . __( 'Editors', 'rsvpmaker' ) . ':</strong><br />';\n\n\t\t$t = isset( $custom_fields['_meet_recur'][0] ) ? $custom_fields['_meet_recur'][0] : 0;\n\n\t\t$eds = get_post_meta( $t, '_additional_editors', false );\n\n\t\tif ( $eds ) {\n\n\t\t\tforeach ( $eds as $user_id ) {\n\n\t\t\t\t$member = get_userdata( $user_id );\n\n\t\t\t\tif ( isset( $member->last_name ) && ! empty( $member->last_name ) ) {\n\n\t\t\t\t\t$label = $member->first_name . ' ' . $member->last_name;\n\n\t\t\t\t} else {\n\t\t\t\t\t$label = $member->user_login;\n\t\t\t\t}\n\n\t\t\t\techo esc_html( $label ) . '<br />';\n\n\t\t\t}\n\t\t} else {\n\t\t\tesc_html_e( 'None', 'rsvpmaker' );\n\t\t}\n\n\t\tprintf( '<p><a href=\"%s\">' . __( 'Edit Template', 'rsvpmaker' ) . '</a></p>', admin_url( 'post.php?action=edit&post=' . $t ) );\n\n\t\t}\n\n\t\tdo_action( 'rsvpmaker_additional_editors' );\n\n\t}\n} // function exists\n\n\n\nif ( ! function_exists( 'rsvpmaker_dashboard_widget_function' ) ) {\n\n\tfunction rsvpmaker_dashboard_widget_function() {\n\n\t\tglobal $wpdb;\n\n\t\tglobal $rsvp_options;\n\n\t\tglobal $current_user;\n\n\t\t// $wpdb->show_errors();\n\n\t\tdo_action( 'rsvpmaker_dashboard_action' );\n\n\t\tif ( isset( $rsvp_options['dashboard_message'] ) && ! empty( $rsvp_options['dashboard_message'] ) ) {\n\n\t\t\techo '<div>' . wp_kses_post( $rsvp_options['dashboard_message'] ) . '</div>';\n\t\t}\n\n\t\techo '<p><strong>' . __( 'My Events', 'rsvpmaker' ) . '</strong><br /></p>';\n\n\t\t$results = get_future_events( 'post_author=' . $current_user->ID );\n\n\t\tif ( $results ) {\n\n\t\t\tforeach ( $results as $index => $row ) {\n\n\t\t\t\t$draft = ( $row->post_status == 'draft' ) ? ' (draft)' : '';\n\n\t\t\t\tprintf( '<p><a href=\"%s\">(' . __( 'Edit', 'rsvpmaker' ) . ')</a> <a href=\"%s\">%s %s%s</a></p>', admin_url( 'post.php?action=edit&post=' . $row->ID ), get_post_permalink( $row->ID ), esc_html( $row->post_title ), utf8_encode( rsvpmaker_date( $rsvp_options['long_date'], rsvpmaker_strtotime( $row->datetime ) ) ), $draft );\n\n\t\t\t\tif ( $index == 10 ) {\n\n\t\t\t\t\tprintf( '<p><a href=\"%s\">&gt; &gt; ' . __( 'More', 'rsvpmaker' ) . '</a></p>', admin_url( 'edit.php?post_type=rsvpmaker&rsvpsort=chronological&author=' . $current_user->ID ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t'<p>' . __( 'None', 'rsvpmaker' ) . '</p>';\n\n\t\t}\n\n\t\tprintf( '<p><a href=\"%s\">' . __( 'Add Event', 'rsvpmaker' ) . '</a></p>', admin_url( 'post-new.php?post_type=rsvpmaker' ) );\n\n\t\t$sql = \"SELECT $wpdb->posts.ID as editid FROM $wpdb->posts JOIN $wpdb->postmeta ON $wpdb->posts.ID = $wpdb->postmeta.post_id \n\nWHERE $wpdb->posts.post_type = 'rsvpmaker' AND $wpdb->postmeta.meta_key = '_additional_editors' AND $wpdb->postmeta.meta_value = $current_user->ID\";\n\n\t\t$wpdb->show_errors();\n\n\t\t$result = $wpdb->get_results( $sql );\n\n\t\t$r2 = rsvpmaker_get_templates( 'AND post_author=$current_user->ID' );// $wpdb->get_results($sql);\n\n\t\tif ( $result && $r2 ) {\n\n\t\t\t$result = array_merge( $r2, $result );\n\n\t\t} elseif ( $r2 ) {\n\n\t\t\t$result = $r2;\n\t\t}\n\n\t\tif ( $result ) {\n\n\t\t\tforeach ( $result as $row ) {\n\n\t\t\t\trsvp_template_checkboxes( $row->editid );\n\n\t\t\t}\n\t\t}\n\n\t}\n} // end function exists\n\n\n\nfunction rsvpmaker_add_dashboard_widgets() {\n\n\tglobal $rsvp_options;\n\n\twp_add_dashboard_widget( 'rsvpmaker_dashboard_widget', __( 'Events', 'rsvpmaker' ), 'rsvpmaker_dashboard_widget_function' );\n\n\tif ( empty( $rsvp_options['dashboard'] ) || ( $rsvp_options['dashboard'] != 'top' ) ) {\n\n\t\treturn;\n\t}\n\n\t// Globalize the metaboxes array, this holds all the widgets for wp-admin\n\n\tglobal $wp_meta_boxes;\n\n\t// Get the regular dashboard widgets array\n\n\t// (which has our new widget already but at the end)\n\n\t$normal_dashboard = $wp_meta_boxes['dashboard']['normal']['core'];\n\n\t// Backup and delete our new dashbaord widget from the end of the array\n\n\t$rsvpmaker_widget_backup = array(\n\t\t'rsvpmaker_dashboard_widget' =>\n\n\t\t\t\t$normal_dashboard['rsvpmaker_dashboard_widget'],\n\t);\n\n\tunset( $normal_dashboard['rsvpmaker_dashboard_widget'] );\n\n\t// Merge the two arrays together so our widget is at the beginning\n\n\t$sorted_dashboard = array_merge( $rsvpmaker_widget_backup, $normal_dashboard );\n\n\t// Save the sorted array back into the original metaboxes\n\n\t$wp_meta_boxes['dashboard']['normal']['core'] = $sorted_dashboard;\n\n}\n\n\n\n// Hook into the 'wp_dashboard_setup' action to register our other functions\n\n\n\nfunction rsvpmaker_check_coupon_code( $price ) {\n\n\tglobal $post;\n\n\tglobal $rsvpmaker_coupon_message;\n\n\t$coupon_message = '';\n\n\t$codes = get_post_meta( $post->ID, '_rsvp_coupon_code' ); // array of codes\n\n\t// printf('<p>Initial price %s %s</p>',$price,$code);\n\n\tif ( ! empty( $codes ) && ! empty( $_POST['coupon_code'] )  && wp_verify_nonce(rsvpmaker_nonce_data('data'),rsvpmaker_nonce_data('key')) ) {\n\n\t\t$user_code = trim( $_POST['coupon_code'] );\n\n\t\tif ( ( in_array( $user_code, $codes ) ) ) {\n\n\t\t\t$index = array_search( $user_code, $codes );\n\n\t\t\t$discounts = get_post_meta( $post->ID, '_rsvp_coupon_discount' );\n\n\t\t\t$methods = get_post_meta( $post->ID, '_rsvp_coupon_method' );\n\n\t\t\t$discount = (float) $discounts[ $index ];\n\n\t\t\t$method = $methods[ $index ];\n\n\t\t\t$rsvpmaker_coupon_message = 'Coupon code applied: ' . $user_code;\n\n\t\t\tif ( $method == 'percent' ) {\n\n\t\t\t\t$price = $price - ( $price * ( $discount / 100 ) );\n\n\t\t\t} else {\n\n\t\t\t\t$price = $discount;\n\n\t\t\t}\n\t\t} else {\n\n\t\t\t$rsvpmaker_coupon_message = 'Coupon code not recognized';\n\n\t\t}\n\t}\n\n\treturn $price;\n\n}\n\n?>\n", "<?php\nfunction rsvpmaker_to_stripe( $rsvp ) {\n\n\tglobal $post;\n\n\t$vars['description'] = $post->post_title;\n\n\t$vars['name'] = $rsvp['first'] . ' ' . $rsvp['last'];\n\n\tif ( isset( $_GET['rsvp'] ) ) {\n\n\t\t$vars['rsvp_id'] = (int) $_GET['rsvp'];\n\n\t} else {\n\t\t$vars['rsvp_id'] = $rsvp['id'];\n\t}\n\n\t$vars['rsvp_post_id'] = $post->ID;\n\n\t$include = array( 'amount', 'rsvp_id', 'email', 'event' );\n\n\tforeach ( $rsvp as $index => $value ) {\n\n\t\tif ( in_array( $index, $include ) ) {\n\n\t\t\t$vars[ $index ] = $value;\n\t\t}\n\t}\n\t// transform\n\n\treturn rsvpmaker_stripe_form( $vars );\n\n}\n\n\n\n// called from Gutenberg init\n\nfunction rsvpmaker_stripecharge( $atts ) {\n\n\tif ( is_admin() || wp_is_json_request() ) {\n\n\t\treturn;\n\t}\n\n\tglobal $current_user, $rsvp_options;\n\n\t$vars['description'] = ( ! empty( $atts['description'] ) ) ? $atts['description'] : __( 'charge from', 'rsvpmaker' ) . ' ' . get_bloginfo( 'name' );\n\n\t$vars['paymentType'] = $paymentType = ( empty( $atts['paymentType'] ) ) ? 'once' : $atts['paymentType'];\n\n\t$vars['paypal'] = (empty($atts['paypal'])) ? 0 : $atts['paypal'];\n\n\t$show = ( ! empty( $atts['showdescription'] ) && ( $atts['showdescription'] == 'yes' ) ) ? true : false;\n\n\tif ( $paymentType == 'schedule' ) {\n\n\t\t$months = array( 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december' );\n\n\t\t$index = date( 'n' ) - 1;\n\n\t\tif ( isset( $_GET['next'] ) ) {\n\n\t\t\tif ( $index == 11 ) {\n\n\t\t\t\t$index = 0;\n\n\t\t\t} else {\n\t\t\t\t$index++;\n\t\t\t}\n\t\t}\n\n\t\t$month = $months[ $index ];\n\n\t\t$vars['amount'] = $atts[ $month ];\n\n\t\t$vars['description'] = $vars['description'] . ': ' . ucfirst( $month );\n\n\t\tif ( ! empty( $current_user->user_email ) ) {\n\n\t\t\t$vars['email'] = $current_user->user_email;\n\t\t}\n\n\t\treturn rsvpmaker_stripe_form( $vars, $show );\n\n\t}\n\n\t$vars['amount'] = ( ! empty( $atts['amount'] ) ) ? $atts['amount'] : '';\n\n\tif ( $paymentType != 'once' ) {\n\n\t\t$vars['description'] .= ' ' . $paymentType;\n\t}\n\n\treturn rsvpmaker_stripe_form( $vars, $show );\n\n\t// return rsvpmaker_stripe_form($vars,$show);\n}\n\n\n$rsvpmaker_stripe_form = '';\n\nfunction rsvpmaker_stripe_form( $vars, $show = false ) {\n\tglobal $rsvp_options;\n\n\trsvpmaker_debug_log( $vars, 'rsvpmaker_stripe_form' );\n\n\tglobal $post, $rsvp_options, $current_user, $button, $rsvpmaker_stripe_form, $wpdb;\n\tif ( ! $show ) {\n\n\t\t$show = ( ! empty( $vars['showdescription'] ) && ( $vars['showdescription'] == 'yes' ) ) ? true : false;\n\t}\n\n\t$currency = ( empty( $rsvp_options['paypal_currency'] ) ) ? 'usd' : strtolower( $rsvp_options['paypal_currency'] );\n\n\t$vars['currency'] = $currency;\n\n\t$rsvpmaker_stripe_checkout_page_id = $wpdb->get_var( \"SELECT ID FROM $wpdb->posts WHERE post_status='publish' AND  post_content LIKE '%[rsvpmaker_stripe_checkout]%' \" );\n\n\tif ( empty( $rsvpmaker_stripe_checkout_page_id ) ) {\n\n\t\trsvpmaker_debug_log( $rsvpmaker_stripe_checkout_page_id, 'attempting rsvpmaker_stripe_checkout_page_id' );\n\n\t\t$postvar['post_content'] = '<!-- wp:shortcode -->\n\n\t[rsvpmaker_stripe_checkout]\n\n\t<!-- /wp:shortcode -->\n\n\t<!-- wp:paragraph -->\n\n<p>Secure payment processing by <a href=\"https://stripe.com/\" target=\"_blank\">Stripe</a>.</p>\n\n<!-- /wp:paragraph -->\n\n';\n\n\t\t$postvar['post_title'] = 'Payment';\n\n\t\t$postvar['post_status'] = 'publish';\n\n\t\t$postvar['post_author'] = 1;\n\n\t\t$postvar['post_type'] = 'rsvpmaker';\n\n\t\t$rsvpmaker_stripe_checkout_page_id = wp_insert_post( $postvar );\n\n\t\tupdate_post_meta( $rsvpmaker_stripe_checkout_page_id, '_rsvpmaker_special', 'Payment checkout page for Stripe' );\n\n\t\trsvpmaker_debug_log( $rsvpmaker_stripe_checkout_page_id, 'new checkout page' );\n\n\t}\n\n\t$currency_symbol = '';\n\n\tif ( isset( $vars['currency'] ) ) {\n\n\t\tif ( $vars['currency'] == 'usd' ) {\n\n\t\t\t$currency_symbol = '$';\n\n\t\t} elseif ( $vars['currency'] == 'eur' ) {\n\n\t\t\t$currency_symbol = '\u20ac';\n\t\t}\n\t}\n\n\t$idempotency_key = 'stripe_' . time() . '_' . rand( 0, 100000000000 );\n\n\tupdate_option( $idempotency_key, $vars );\n\n\t$url = get_permalink( $rsvpmaker_stripe_checkout_page_id );\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif(empty($keys['pk']) && $keys['sandbox_pk'])\n\t\t;//if Stripe not enabled\n\telseif ( isset( $vars['paymentType'] ) && ( $vars['paymentType'] == 'donation' ) ) {\n\t\tif(isset($_GET['amount']))\n\t\t\t$vars['amount'] = sanitize_text_field($_GET['amount']); //needed when both Stripe and PayPal are active\n\t\t$output = sprintf( '<form action=\"%s\" method=\"get\">%s (%s, %s %s): <input type=\"text\" name=\"amount\" value=\"%s\"><br />%s<br /><textarea name=\"stripenote\" cols=\"80\" rows=\"2\"></textarea><br /><input type=\"hidden\" name=\"txid\" value=\"%s\"><button class=\"stripebutton\">%s</button>%s</form>', $url, __( 'Amount', 'rsvpmaker' ), esc_attr( strtoupper( $vars['currency'] ) ), __('minimum','rsvpmaker'), $rsvp_options['payment_minimum'], esc_attr( $vars['amount'] ), __('Note','rsvpmaker'), esc_attr( $idempotency_key ), __( 'Pay with Card' ), rsvpmaker_nonce('return') );\n\t} else {\n\t\t$output = sprintf( '<form action=\"%s\" method=\"get\"><input type=\"hidden\" name=\"txid\" value=\"%s\"><button class=\"stripebutton\">%s</button>%s</form>', $url, esc_attr( $idempotency_key ), __( 'Pay with Card' ), rsvpmaker_nonce('return') );\n\t}\n\n\tif(!empty($vars['paypal'])) {\n\t\t$output .= '<p>'. __('Credit card processing by Stripe','rsvpmaker').'</p>'.rsvpmaker_paypay_button_embed($vars);\n\t}\n\n\tif ( $show ) {\n\t\tif(isset($_GET['amount']))\n\t\t\t$vars['amount'] = sanitize_text_field($_GET['amount']); //needed when both Stripe and PayPal are active\n\t\t$output .= sprintf( '<p>%s%s %s<br />%s</p>', $currency_symbol, esc_html( $vars['amount'] ), esc_html( $rsvp_options['paypal_currency'] ), esc_html( $vars['description'] ) );\n\t}\n\n\treturn $output;\n\n}\n\nfunction rsvpmaker_stripe_validate($public, $secret) {\n\trequire_once 'stripe-php/init.php';\n\ttry {\n\t\t$stripe = new \\Stripe\\StripeClient($secret);\n\t\t$history = $stripe->balanceTransactions->all( array( 'limit' => 10 ) );\n\t} catch (\\Stripe\\Exception\\InvalidRequestException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (\\Stripe\\Exception\\AuthenticationException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (\\Stripe\\Exception\\ApiConnectionException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (\\Stripe\\Exception\\ApiErrorException $e) {\n\t\t$output =  'Status is:' . $e->getHttpStatus() . '\\n';\n\t\t$output .= 'Type is:' . $e->getError()->type . '\\n';\n\t\t$output .= 'Code is:' . $e->getError()->code . '\\n';\n\t\t// param is '' in this case\n\t\t$output .=  'Param is:' . $e->getError()->param . '\\n';\n\t\t$output .=   'Message is:' . $e->getError()->message . '\\n';\n\t\trsvpmaker_debug_log($output,'stripe error details');\n\t\treturn '<span style=\"color:red\">'.$e->getError()->message.'</span>';\n\t  } catch (Exception $e) {\n\t\treturn '<span style=\"color:red\">Error'.var_export($e,true).'</span>';// Something else happened, completely unrelated to Stripe\n\t  }\n\t  //nothing blew up!\n\t  return ' <span style=\"color: green; font-weight: bold;\">'.__('Connected','rsvpmaker').'</span>';\n}\n\nfunction rsvpmaker_stripe_checkout() {\n\n\trsvpmaker_debug_log( 'rsvpmaker_stripe_checkout' );\n\n\tglobal $post, $rsvp_options, $current_user;\n\n\t$keys = get_rsvpmaker_stripe_keys();\n\n\tif ( empty( $_GET['txid'] ) ) {\n\n\t\treturn;\n\t}\n\n\tob_start();\n\n\t$varkey = $idempotency_key = sanitize_text_field( $_GET['txid'] );\n\n\t$vars = get_option( $idempotency_key );\n\n\tif ( empty( $vars ) ) {\n\n\t\treturn '<p>' . __( 'No pending payment found for', 'rsvpmaker' ) . ' ' . esc_html( $idempotency_key ) . '</p>';\n\t}\n\n\tif ( $vars['paymentType'] == 'donation' ) {\n\n\t\tif ( empty( $_GET['amount'] ) ) {\n\n\t\t\treturn '<p>No amount given</p>';\n\t\t}\n\n\t\t$vars['amount'] = sanitize_text_field( $_GET['amount'] );\n\n\t}\n\n\tif($vars['amount'] < $rsvp_options['payment_minimum']) {\n\t\tdo_action('rsvpmaker_possible_card_testing',$vars);\n\t\treturn '<p>Transactions of less than '.$rsvp_options['payment_minimum'].' not accepted.</p>';\n\t}\n\n\tif(!empty($_GET['stripenote']))\n\t\t$vars['note'] = sanitize_text_field($_GET['stripenote']);\n\n\tupdate_option( $idempotency_key, $vars );\n\t\n\trequire_once 'stripe-php/init.php';\n\n\tif ( ! empty( $vars['email'] ) ) {\n\n\t\t$email = sanitize_email( $vars['email'] );\n\n\t\t$name = ( empty( $vars['name'] ) ) ? '' : sanitize_text_field( $vars['name'] );\n\n\t} else {\n\n\t\t$email = ( empty( $current_user->user_email ) ) ? '' : $current_user->user_email;\n\n\t\t$wpname = '';\n\t\tif ( ! empty( $current_user->ID ) ) {\n\t\t\t$userdata = get_userdata( $current_user->ID );\n\t\t\tif ( $userdata->first_name ) {\n\t\t\t\t$wpname = $userdata->first_name . ' ' . $userdata->last_name;\n\t\t\t} else {\n\t\t\t\t$wpname = $userdata->display_name;\n\t\t\t}\n\t\t}\n\t\t$name = ( empty( $wpname ) ) ? '' : $wpname;\n\t}\n\n\t$public = $keys['pk'];\n\n\t$secret = $keys['sk'];\n\n\tif ( strpos( $public, 'test' ) ) {\n\n\t\t$vars['test'] = 'TEST TRANSACTION';\n\t}\n\n\t$currency_symbol = '';\n\n\tif ( $vars['currency'] == 'usd' ) {\n\n\t\t$currency_symbol = '$';\n\n\t} elseif ( $vars['currency'] == 'eur' ) {\n\n\t\t$currency_symbol = '\u20ac';\n\t}\n\n\t$paylabel = __( 'Pay', 'rsvpmaker' ) . ' ' . $currency_symbol . esc_attr( $vars['amount'] ) . ' ' . esc_attr( strtoupper( $vars['currency'] ) );\n\n\t\\Stripe\\Stripe::setApiKey( $secret );\n\n\t\\Stripe\\Stripe::setAppInfo(\n\t\t'WordPress RSVPMaker events management plugin',\n\t\tget_rsvpversion(),\n\t\t'https://rsvpmaker.com'\n\t);\n\n\trsvpmaker_debug_log( 'call to PaymentIntent' );\n\n\t$intent = \\Stripe\\PaymentIntent::create(\n\t\tarray(\n\n\t\t\t'amount'               => $vars['amount'] * 100,\n\n\t\t\t'currency'             => $vars['currency'],\n\n\t\t\t'description'          => $vars['description'],\n\n\t\t\t'payment_method_types' => array( 'card' ),\n\n\t\t\t'statement_descriptor' => substr( 'Paid on ' . sanitize_text_field($_SERVER['SERVER_NAME']), 0, 21 ),\n\n\t\t),\n\t\tarray( 'idempotency_key' => $idempotency_key )\n\t);\n\n\tupdate_post_meta( $post->ID, $varkey, $vars );\n\n\t$price = $vars['amount'] * 100;\n\n\t?>\n\n<!-- Stripe library must be loaded stripe.com per https://stripe.com/docs/js/including -->\n\n<script src=\"https://js.stripe.com/v3/\"></script>\n\n<!-- We'll put the success / error messages in this element -->\n\n<div id=\"card-result\" role=\"alert\"></div>\n\n<div id=\"stripe-checkout-form\">\n\n<form id=\"payee-form\">\n\n<div><input id=\"stripe-checkout-name\" name=\"name\" placeholder=\"<?php esc_html_e( 'Your Name Here', 'rsvpmaker' ); ?>\" value=\"<?php echo esc_attr( $name ); ?>\"></div>\n\n<div><input id=\"stripe-checkout-email\" name=\"email\" placeholder=\"email@example.com\" value=\"<?php echo esc_attr( $email ); ?>\"></div>\n\n<div id=\"card-element\">\n\n  <!-- Elements will create input elements here -->\n\n</div>\n\n\n\n<p><button id=\"card-button\" class=\"stripebutton\" data-secret=\"<?php echo esc_attr( $intent->client_secret ); ?>\">\n\n\t<?php echo esc_html( $paylabel ); ?>\n\n</button></p>\n\n</form>\n\n\t<?php\n\n\tif ( strpos( $public, 'test' ) && ! isset( $_GET['hidetest'] ) ) {\n\n\t\tprintf( '<p>%s</p>', __( 'Stripe is in TEST mode. To simulate a transaction, use:<br />Credit card 4111 1111 1111 1111<br />Any future date<br />Any three digit CVC code<br />Any 5-digit postal code', 'rsvpmaker' ) );\n\t}\n\n\t?>\n\n</div>\n\n<script>\n\nvar stripe = Stripe('<?php echo esc_attr($public); ?>');\n\nvar elements = stripe.elements();\n\nvar style = {\n\n  base: {\n\n\ticonColor: '#111111',\n\n\tcolor: \"#111111\",\n\n\tfontWeight: 400,\n\n\tfontSize: '16px',\n\n\t'::placeholder': {\n\n\tcolor: '#333333',\n\n\t},\n\n\t'::-ms-clear': {\n\n\tbackgroundColor: '#fff',\n\n\t},\n\n\t  },\n\n\tempty: {\n\n\tbackgroundColor: '#fff',\n\n\t  },\n\n\tcompleted: {\n\n\tbackgroundColor: '#eee',\n\n\t  },\n\n};\n\n\n\nvar card = elements.create(\"card\", { style: style });\n\ncard.mount(\"#card-element\");\n\n\n\ncard.addEventListener('change', ({error}) => {\n\n  const displayError = document.getElementById('card-result');\n\n  if (error) {\n\n\tdisplayError.textContent = error.message;\n\n  } else {\n\n\tdisplayError.textContent = '';\n\n  }\n\n});\n\nvar cardFields = document.getElementById('stripe-checkout-form');\n\nvar submitButton = document.getElementById('card-button');\n\nvar cardResult = document.getElementById('card-result');\n\nvar clientSecret = document.getElementById('card-button').getAttribute('data-secret');\n\nsubmitButton.addEventListener('click', function(ev) {\nev.preventDefault();\nvar name = document.getElementById('stripe-checkout-name').value;\nvar email = document.getElementById('stripe-checkout-email').value;\nvar successurl = '<?php echo site_url( '/wp-json/rsvpmaker/v1/stripesuccess/' . $idempotency_key ); ?>';\nif((name == '') || (email == '')){\n\tcardResult.innerHTML = 'Name and email are both required';\n\treturn;\n}\ncardResult.innerHTML = '<?php esc_html_e( 'Please wait', 'rsvpmaker' ); ?>';\ncardResult.style.cssText = 'background-color: #fff; padding: 10px;';\n\n  stripe.confirmCardPayment(clientSecret, {\n\tpayment_method: {\n\t  card: card,\n\t  billing_details: {\n\t\tname: name,\n\t\temail: email,\n\t  }\n\t}\n  }).then(function(result) {\n\tif (result.error) {\n\t\tcardResult.innerHTML = result.error.message;\n\t  console.log(result.error.message);\n\t  console.log(result);\n\t} else {\n\tsubmitButton.style = 'display: none';\n\tcardFields.style = 'display: none';\n\t  if (result.paymentIntent.status === 'succeeded') {\n\t\t  console.log(result);\n\t\tcardResult.innerHTML = '<?php esc_html_e( 'Recording payment', 'rsvpmaker' ); ?> ...';\n\t\tconst form = new FormData(document.getElementById('payee-form'));\n\t\tfetch(successurl, {\n  method: 'POST',\n\n  body: form,\n\n})\n\n\t\t.then((response) => {\n\n\t\t\treturn response.json();\n\n\t\t})\n\n\t\t.then((myJson) => {\n\n\t\t\tconsole.log(myJson);\n\n\t\t\tif(!myJson.name)\t\t\t\n\n\t\t\t\tcardResult.innerHTML = '<?php esc_html_e( 'Payment processed, but may not have been recorded correctly', 'rsvpmaker' ); ?>';\n\n\t\t\telse\n\n\t\t\t\tcardResult.innerHTML = '<?php esc_html_e( 'Payment processed for', 'rsvpmaker' ); ?> '+myJson.name+', '+myJson.description+' <?php echo esc_attr($currency_symbol); ?>'+myJson.amount+' '+myJson.currency.toUpperCase();\n\n\t\t});\n\n\t  }\n\n\t}\n\n  });\n\n});\n\n</script>\n\n\t<?php\n\n\treturn ob_get_clean();\n\n}\n\n\n\nfunction stripe_log_by_email( $email, $months = 0 ) {\n\n\tglobal $wpdb;\n\n\tif ( empty( $email ) ) {\n\n\t\treturn '';\n\t}\n\n\t$log = '';\n\n\t$sql = \"SELECT * FROM $wpdb->postmeta WHERE meta_key='rsvpmaker_stripe_payment' AND meta_value LIKE '%\" . $email . \"%' ORDER BY meta_id DESC\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( empty( $results ) ) {\n\n\t\treturn '';\n\t}\n\n\tif ( $months ) {\n\n\t\t$start = strtotime( '-' . $months . ' months' );\n\t}\n\n\tforeach ( $results as $row ) {\n\n\t\t$vars = unserialize( $row->meta_value );\n\n\t\t$timestamp = strtotime( $vars['timestamp'] );\n\n\t\tif ( $months && ( $timestamp < $start ) ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tforeach ( $vars as $name => $value ) {\n\n\t\t\t\t$log .= $name . ': ' . $value . \"\\n\";\n\n\t\t}\n\n\t\t\t$log .= \"\\n\";\n\n\t}\n\n\treturn wpautop( $log );\n\n}\n\nfunction rsvpmaker_stripe_payment_log( $vars, $confkey ) {\n\tglobal $post, $current_user, $wpdb;\n\t$vars['timestamp'] = rsvpmaker_date( 'r' );\n\tif ( ! empty( $vars['email'] ) ) {\n\t\trsvpmaker_stripe_notify( $vars );\n\t}\n\t$rsvpmaker_stripe_checkout_page_id = get_option( 'rsvpmaker_stripe_checkout_page_id' );\n\t$meta_id = add_post_meta( $rsvpmaker_stripe_checkout_page_id, 'rsvpmaker_stripe_payment', $vars );\n\tdo_action( 'rsvpmaker_stripe_payment', $vars );\n\twp_schedule_single_event( time() + 300, 'stripe_balance_history_cron' ); // update stripe history table in 5 minutes\n}\n\nfunction rsvpmaker_stripe_notify( $vars ) {\n\n\t// $receipt = get_option('rsvpmaker_stripe_receipt');\n\t$receipt = true;\n\n\tif ( ! empty( $vars['rsvp_id'] ) ) {\n\t\trsvp_confirmation_after_payment( $vars['rsvp_id'] );\n\n\t\treturn;\n\n\t}\n\n\t$keys = get_rsvpmaker_stripe_keys();\n\n\t$public = $keys['pk'];\n\n\t$secret = $keys['sk'];\n\n\t$to = $keys['notify'];\n\n\tif ( empty( $to ) ) {\n\n\t\treturn;\n\t}\n\n\t$mail['to'] = $to;\n\n\t$mail['from'] = get_option( 'admin_email' );\n\n\t$mail['fromname'] = get_option( 'blogname' );\n\n\t$mail['html'] = '';\n\n\tforeach ( $vars as $index => $value ) {\n\n\t\t$mail['html'] .= sprintf( '<div>%s: %s</div>', $index, esc_html( $value ) );\n\n\t}\n\n\t$mail['subject'] = 'Stripe payment from ' . $vars['name'];\n\n\trsvpmailer( $mail );\n\tif ( $receipt ) {\n\t\t$mail['to']      = $vars['email'];\n\t\t$mail['subject'] = __( 'Confirming your payment', 'rsvpmaker' ) . ': ' . $vars['description'];\n\t\trsvpmailer( $mail );\n\t}\n\n}\n\nfunction rsvpmaker_stripe_report() {\n\n\tglobal $wpdb;\n\n\techo '<h1>Stripe and PayPal Charges</h1>';\n\n\tif ( isset( $_GET['history'] ) ) {\n\t\tstripe_balance_history( (int) $_GET['history'] );\n\t}\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( !empty( $keys ) && isset( $keys['pk'] ) ) {\n\t\tprintf(\n\t\t\t'<div style=\"padding: 5px; border: thin dotted #000;\"><h3>Retrieve Transactions from Stripe Service</h3>\n\t\n\t\t<p>Includes fees, refunds, and payouts</p>\n\t\n\t\t<form method=\"get\" action=\"%s\"><input type=\"hidden\" name=\"post_type\" value=\"rsvpmaker\" /><input type=\"hidden\" name=\"page\" value=\"rsvpmaker_stripe_report\" />\n\t\n\t\tUp to <select name=\"history\">\n\t\n\t\t<option value=\"10\">10</option>\n\t\n\t\t<option value=\"20\" selected=\"selected\">20</option>\n\t\n\t\t<option value=\"50\">50</option> \n\t\n\t\t<option value=\"100\">100</option> \n\t\n\t\t</select>transactions<br />starting <input type=\"text\" name=\"date\" placeholder=\"YYYY-mm-dd\"> (optional) <br /><input type=\"checkbox\" name=\"payouts\" value=\"1\"> Show payouts to bank<br />\n\t\t%s\n\t\t<button>Get</button></form></div>',\n\t\t\tadmin_url( 'edit.php' ),\n\t\t\trsvpmaker_nonce('return')\n\t\t);\n\t}\n\n\t$tx = rsvpmaker_stripe_transactions( 100 );\n\techo wp_kses_post( $tx['content'] );\n\techo '<h3>Export Format</h3>\n\t<p>Formatted for copy-paste into Excel or other spreadsheet program\n\t<br />\n\t<textarea rows=\"20\" style=\"width: 100%\">' . $tx['export'] . '</textarea></p>';\n\n}\n\nfunction stripe_latest_logged() {\n\tglobal $wpdb;\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( empty( $keys ) || empty( $keys['pk'] ) ) {\n\t\treturn;\n\t}\n\t$stripetable = rsvpmaker_money_table();\n\tif ( ! $wpdb->get_results( \"show tables like '$stripetable' \" ) ) {\n\t\tstripe_balance_history( 200, false );\n\t}\n\treturn $wpdb->get_var( \"SELECT date FROM $stripetable ORDER BY date DESC\" );\n}\n\nfunction rsvpmaker_stripe_transactions_list( $limit = 50, $where = '' ) {\n\tglobal $wpdb;\n\t$stripetable = rsvpmaker_money_table();\n\treturn $wpdb->get_results( \"SELECT name,email,description,date,status,transaction_id,amount,fee, format((amount - fee),2) as yield FROM $stripetable $where ORDER BY date DESC LIMIT 0, $limit \" );\n}\n\nfunction rsvpmaker_stripe_transactions_no_user( $limit = 50, $recent = true ) {\n\tglobal $wpdb;\n\t$stripetable = rsvpmaker_money_table();\n\t$where       = ( $recent ) ? ' AND date > DATE_SUB(CURDATE(), INTERVAL 3 MONTH) ' : '';\n\treturn $wpdb->get_results( \"SELECT * FROM $stripetable WHERE user_id=0 $where ORDER BY date DESC\" );\n}\n\nfunction rsvpmaker_stripe_latest_transaction_by_user( $user_id, $start_date = '' ) {\n\tglobal $wpdb;\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( empty( $keys ) || empty( $keys['pk'] ) ) {\n\t\treturn;\n\t}\n\t$where       = ( $start_date ) ? \" AND date > '$start_date' \" : '';\n\t$stripetable  = rsvpmaker_money_table();\n\t$sql         = \"SELECT * FROM $stripetable WHERE user_id=$user_id $where ORDER BY date DESC\";\n\treturn $wpdb->get_row( $sql );\n}\n\nadd_action( 'stripe_balance_history_cron', 'stripe_balance_history_cron' );\n\nfunction stripe_balance_history_cron() {\n\tstripe_balance_history( 20, false );\n}\n\nfunction stripe_balance_history( $limit = 20, $output = true ) {\n\tglobal $wpdb;\n\t$keys = get_rsvpmaker_stripe_keys();\n\tif ( empty( $keys ) || empty( $keys['pk'] ) ) {\n\t\treturn;\n\t}\n\t$public = $keys['pk'];\n\t$secret = $keys['sk'];\n\n\t$stripetable = rsvpmaker_money_table();\n\n\trsvpmaker_debug_log( 'call to stripe_balance_history' );\n\n\trequire_once 'stripe-php/init.php';\n\t\\Stripe\\Stripe::setApiKey( $secret );\n\n\t\\Stripe\\Stripe::setAppInfo(\n\t\t'WordPress RSVPMaker events management plugin',\n\t\tget_rsvpversion(),\n\t\t'https://rsvpmaker.com'\n\t);\n\n\t$stripe = new \\Stripe\\StripeClient( $secret );\n\n\t$history = $stripe->balanceTransactions->all( array( 'limit' => $limit ) );\n\n\t$charges = $stripe->charges->all( array( 'limit' => $limit * 5 ) );\n\n\tforeach ( $charges->data as $charge ) {\n\t\t$names[ $charge->balance_transaction ]        = $charge->billing_details->name;\n\t\t$emails[ $charge->balance_transaction ]       = $charge->billing_details->email;\n\t\t$descriptions[ $charge->balance_transaction ] = $charge->description;\n\t}\n\n\tif ( isset( $_GET['date'] ) ) {\n\n\t\t$startdate = strtotime( $_GET['date'] );\n\t}\n\n\t$table = '';\n\n\tforeach ( $history->data as $index => $data ) {\n\n\t\tif ( ( $data->reporting_category == 'payout' ) && empty( $_GET['payouts'] ) ) {\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( isset( $startdate ) && ( $data->created < $startdate ) ) {\n\n\t\t\tcontinue;\n\t\t}\n\n\t\t$amount = number_format( ( $data->amount / 100 ), 2 );\n\n\t\t$fee = number_format( ( $data->fee / 100 ), 2 );\n\n\t\t$yield = $amount - $fee;\n\n\t\t$date                          = date( 'Y-m-d H:i', $data->created );\n\t\t$name                          = ( empty( $names[ $data->id ] ) ) ? '' : $names[ $data->id ];\n\t\t$email                         = ( empty( $emails[ $data->id ] ) ) ? '' : $emails[ $data->id ];\n\t\t$description                   = ( empty( $descriptions[ $data->id ] ) ) ? '' : $descriptions[ $data->id ];\n\t\t$user                          = get_user_by( 'email', $email );\n\t\t$user_id                       = ( empty( $user->ID ) ) ? 0 : $user->ID;\n\t\t$tablerow[ $date . $data->id ] = \"$date,$name,$email,$description,$amount,$fee,$yield\\n\";\n\t\t$sql                           = \"select transaction_id FROM $stripetable WHERE transaction_id='$data->id'\";\n\t\t$check                         = $wpdb->get_var( $sql );\n\t\t// echo '<div>check: '.$sql.'<br />'.$check.'</div>';\n\t\tif ( ! $check ) {\n\t\t\t$sql = $wpdb->prepare(\n\t\t\t\t\"INSERT INTO $stripetable SET name=%s,email=%s,description=%s,amount=%s,fee=%s,date=%s,status='Stripe',transaction_id=%s, user_id=%d\",\n\t\t\t\t$name,\n\t\t\t\t$email,\n\t\t\t\t$description,\n\t\t\t\t$amount,\n\t\t\t\t$fee,\n\t\t\t\t$date,\n\t\t\t\t$data->id,\n\t\t\t\t$user_id\n\t\t\t);\n\t\t\t// echo '<div>'.$sql.'</div>';\n\t\t\t$wpdb->query( $sql );\n\t\t}\n\t\tif ( $data->fee ) {\n\n\t\t\t$fees[ $data->id ] = $fee;\n\t\t}\n\n\t\tif ( $data->reporting_category == 'refund' ) {\n\n\t\t\t$refunds[ $data->id ] = array(\n\t\t\t\t'amount' => $amount,\n\t\t\t\t'date'   => $date,\n\t\t\t);\n\t\t}\n\t\tif ( $output ) {\n\t\t\tprintf( '<p>%s %s<br />%s<br />Fee: %s %s<br />%s</p>', esc_html( $name ), esc_html( $date ), number_format( ( $data->amount / 100 ), 2 ), number_format( ( $data->fee / 100 ), 2 ), esc_html( $data->reporting_category ), esc_html( $data->id ) );\n\t\t}\n\t}\n\n\tif ( ! $output ) {\n\t\treturn;\n\t}\n\n\tif ( ! empty( $tablerow ) ) {\n\t\tksort( $tablerow );\n\t\t$table = implode( '', $tablerow );\n\t\techo '<h3>Export Format</h3><pre>Date,Name,Amount,Fee,Yield' . \"\\n\" . wp_kses_post( $table ) . '</pre>';\n\t}\n\n\tif ( ! empty( $fees ) ) {\n\t\techo '<h2>Fees</h2>';\n\n\t\t$feetotal = 0;\n\n\t\tforeach ( $fees as $index => $fee ) {\n\t\t\t$feetotal += $fee;\n\t\t\tprintf( '<p>%s %s</p>', esc_html( $index ), esc_html( $fee ) );\n\t\t}\n\n\t\tprintf( '<p>Total Fees: %s</p>', esc_html( $feetotal ) );\n\t}\n\n\tif ( ! empty( $refunds ) ) {\n\t\techo '<h2>Refunds</h2>';\n\t\t$rtotal = 0;\n\t\tforeach ( $refunds as $index => $refund ) {\n\t\t\t$rtotal += $refund['amount'];\n\t\t\tprintf( '<p>%s %s %s</p>', esc_html( $index ), esc_html( $refund['amount'] ), esc_html( $refund['date'] ) );\n\t\t}\n\t\tprintf( '<p>Total Refunds: %s</p>', esc_html( $rtotal ) );\n\t}\n\n}\n\nfunction rsvpmaker_stripe_transactions() {\n\t$transactions = rsvpmaker_stripe_transactions_list();\n\tif ( $transactions ) {\n\t\t$transaction = (array) $transactions[0];\n\t\t$th                   = '<tr>';\n\t\t$td                   = '';\n\t\tforeach ( $transaction as $column => $value ) {\n\t\t\t$th       .= '<th>' . $column . '</th>';\n\t\t\t$columns[] = $column;\n\t\t}\n\t\t$th    .= '</tr>';\n\t\t$export = implode( ',', $columns ) . \"\\n\";\n\t\tfputcsv( $temp_memory, $columns );\n\t\tforeach ( $transactions as $index => $transaction ) {\n\t\t\t$row         = array();\n\t\t\t$line        = '';\n\t\t\t$td         .= '<tr>';\n\t\t\t$transaction = (array) $transaction;\n\t\t\t/*\n\t\t\tfor future use\n\t\t\tif(!empty($transaction['metadata']) ) {\n\t\t\t//could be used for paid to toastmasters amount\n\t\t\t$metadata = unserialize($transaction['metadata']);\n\t\t\t$transaction['metadata'] = var_export($metadata,true);\n\t\t\t}\n\t\t\t*/\n\t\t\tforeach ( $transaction as $column => $value ) {\n\t\t\t\t$td .= '<td>' . esc_html( $value ) . '</td>';\n\t\t\t\tif ( strpos( $value, '\"' ) ) {\n\t\t\t\t\t$value = str_replace( '\"', '\\\"', $value );\n\t\t\t\t}\n\t\t\t\tif ( ! is_numeric( $value ) ) {\n\t\t\t\t\t$value = '\"' . $value . '\"';\n\t\t\t\t}\n\t\t\t\t$row[ $column ] = $value;\n\t\t\t}\n\t\t\t$lines[] = implode( ',', $row );\n\t\t\t$td     .= \"<td>$yield</td></tr>\\n\";\n\t\t}\n\t\tkrsort( $lines );\n\t\t$export .= implode( \"\\n\", $lines );\n\t\treturn array(\n\t\t\t'content' => '<h3>50 Most Recent Payments</h3><table>' . $th . $td . '</table>',\n\t\t\t'export'  => $export,\n\t\t);\n\t}\n}\n", "<?php\n/*\nPlugin Name: RSVPMaker\nPlugin URI: http://www.rsvpmaker.com\nDescription: Schedule events, send invitations to your mailing list and track RSVPs. You get all your familiar WordPress editing tools with extra options for setting dates and RSVP options. Online payments with PayPal or Stripe can be added with a little extra configuration. Email invitations can be sent through MailChimp or to members of your website community who have user accounts. Recurring events can be tracked according to a schedule such as \"First Monday\" or \"Every Friday\" at a specified time, and the software will calculate future dates according to that schedule and let you track them together. <a href=\"options-general.php?page=rsvpmaker-admin.php\">Options</a>\nAuthor: David F. Carr\nAuthor URI: http://www.carrcommunications.com\nText Domain: rsvpmaker\nDomain Path: /translations\nVersion: 9.2.6\n*/\n\nfunction get_rsvpversion() {\n\treturn '9.2.6';\n}\nglobal $wp_version;\nglobal $default_tz;\n\n$default_tz = date_default_timezone_get();\n\nif ( version_compare( $wp_version, '3.0', '<' ) ) {\n\texit( __( 'RSVPmaker plugin requires WordPress 3.0 or greater', 'rsvpmaker' ) );\n}\n\nfunction rsvpmaker_load_plugin_textdomain() {\n\tload_plugin_textdomain( 'rsvpmaker', false, basename( dirname( __FILE__ ) ) . '/translations/' );\n}\n\nglobal $rsvp_options;\n\n$rsvp_options = get_option( 'RSVPMAKER_Options' );\n\n$locale = get_locale();\n\nfunction rsvp_options_defaults() {\n\n\tglobal $rsvp_options;\n\n\tif ( empty( $rsvp_options ) ) {\n\t\t$rsvp_options = array();\n\t}\n\n\t// defaults\n\n\t$rsvp_defaults = array(\n\t\t'menu_security'                     => 'manage_options',\n\n\t\t'rsvpmaker_template'                => 'publish_rsvpmakers',\n\n\t\t'recurring_event'                   => 'publish_rsvpmakers',\n\n\t\t'multiple_events'                   => 'publish_rsvpmakers',\n\n\t\t'documentation'                     => 'edit_rsvpmakers',\n\n\t\t'calendar_icons'                    => 1,\n\n\t\t'social_title_date'                 => 1,\n\n\t\t'default_content'                   => '',\n\n\t\t'rsvp_to'                           => get_bloginfo( 'admin_email' ),\n\n\t\t'confirmation_include_event'        => 0,\n\n\t\t'rsvpmaker_send_confirmation_email' => 1,\n\n\t\t'rsvp_instructions'                 => '',\n\n\t\t'rsvp_count'                        => 1,\n\n\t\t'rsvp_count_party'                  => 1,\n\n\t\t'rsvp_yesno'                        => 1,\n\n\t\t'send_payment_reminders'            => 1,\n\n\t\t'rsvp_on'                           => 0,\n\n\t\t'rsvp_max'                          => 0,\n\n\t\t'login_required'                    => 0,\n\n\t\t'rsvp_captcha'                      => 0,\n\n\t\t'show_attendees'                    => 0,\n\n\t\t'convert_timezone'                  => 0,\n\n\t\t'add_timezone'                      => 0,\n\n\t\t'rsvplink'                          => '<p><a style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\" class=\"rsvplink\" href=\"%s\">' . __( 'RSVP Now!', 'rsvpmaker' ) . '</a></p>',\n\n\t\t'rsvp_form_title'                   => __( 'RSVP Now!', 'rsvpmaker' ),\n\n\t\t'defaulthour'                       => 19,\n\n\t\t'defaultmin'                        => 0,\n\n\t\t'long_date'                         => '%A %B %e, %Y',\n\n\t\t'short_date'                        => '%B %e',\n\n\t\t'time_format'                       => '%l:%M %p',\n\n\t\t'smtp'                              => '',\n\n\t\t'paypal_currency'                   => 'USD',\n\n\t\t'currency_decimal'                  => '.',\n\n\t\t'currency_thousands'                => ',',\n\n\t\t'payment_minimum'                   => '5.00',\n\n\t\t'paypal_invoiceno'                  => 1,\n\n\t\t'stripe'                            => 0,\n\n\t\t'show_screen_recurring'             => 0,\n\n\t\t'show_screen_multiple'              => 0,\n\n\t\t'dashboard_message'                 => '',\n\n\t\t'update_rsvp'                       => __( 'Update RSVP', 'rsvpmaker' ),\n\n\t);\n\n\t$rsvp_defaults = apply_filters( 'rsvpmaker_defaults', $rsvp_defaults );\n\n\tforeach ( $rsvp_defaults as $index => $value ) {\n\t\tif ( ! isset( $rsvp_options[ $index ] ) ) {\n\t\t\t$rsvp_options[ $index ] = $rsvp_defaults[ $index ];\n\t\t}\n\t}\n\n\tif ( empty( $rsvp_options['long_date'] ) || ( strpos( $rsvp_options['long_date'], '%' ) !== false ) ) {\n\n\t\t$rsvp_options['long_date'] = 'l F j, Y';\n\n\t\t$rsvp_options['short_date'] = 'M j';\n\n\t\t$rsvp_options['time_format'] = 'g:i A';\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\t}\n\n\tif ( isset( $rsvp_options['rsvp_to_current'] ) && $rsvp_options['rsvp_to_current'] && is_user_logged_in() ) {\n\n\t\tglobal $current_user;\n\n\t\t$rsvp_options['rsvp_to'] = $current_user->user_email;\n\n\t}\n\n\tif ( empty( $rsvp_options['rsvp_form'] ) || isset( $_GET['reset_form'] ) ) {\n\n\t\tif ( function_exists( 'do_blocks' ) && ! class_exists( 'Classic_Editor' ) ) {\n\n\t\t\t$form = '<!-- wp:rsvpmaker/formfield {\"label\":\"First Name\",\"slug\":\"first\",\"guestform\":true,\"sluglocked\":true,\"required\":\"required\"} /-->\n\n<!-- wp:rsvpmaker/formfield {\"label\":\"Last Name\",\"slug\":\"last\",\"guestform\":true,\"sluglocked\":true,\"required\":\"required\"} /-->\n\n<!-- wp:rsvpmaker/formfield {\"label\":\"Email\",\"slug\":\"email\",\"sluglocked\":true,\"required\":\"required\"} /-->\n\n<!-- wp:rsvpmaker/formfield {\"label\":\"Phone\",\"slug\":\"phone\"} /-->\n\n<!-- wp:rsvpmaker/formselect {\"label\":\"Phone Type\",\"slug\":\"phone_type\",\"choicearray\":[\"Mobile Phone\",\"Home Phone\",\"Work Phone\"]} /-->\n\n<!-- wp:rsvpmaker/guests -->\n\n<div class=\"wp-block-rsvpmaker-guests\"><!-- wp:paragraph -->\n\n<p></p>\n\n<!-- /wp:paragraph --></div>\n\n<!-- /wp:rsvpmaker/guests -->\n\n<!-- wp:rsvpmaker/formnote /-->';\n\n\t\t} else {\n\n\t\t\t$form = '<p><label>' . __( 'Email', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"email\" required=\"1\"]</p>\n\n\t\t<p><label>' . __( 'First Name', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"first\" required=\"1\"]</p>\n\n\t\t<p><label>' . __( 'Last Name', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"last\" required=\"1\"]</p>\n\n\t\t[rsvpprofiletable show_if_empty=\"phone\"]\n\n\t\t<p><label>' . __( 'Phone', 'rsvpmaker' ) . ':</label> [rsvpfield textfield=\"phone\" size=\"20\"]</p>\n\n\t\t<p><label>' . __( 'Phone Type', 'rsvpmaker' ) . ':</label> [rsvpfield selectfield=\"phone_type\" options=\"Work Phone,Mobile Phone,Home Phone\"]</p>\n\n\t\t[/rsvpprofiletable]\n\n\t\t[rsvpguests]\n\n\t\t<p>' . __( 'Note', 'rsvpmaker' ) . ':<br />\n\n\t\t<textarea name=\"note\" cols=\"60\" rows=\"2\" id=\"note\">[rsvpnote]</textarea></p>';\n\n\t\t}\n\n\t\t$data['post_title'] = 'Form:Default';\n\n\t\t$data['post_content'] = $form;\n\n\t\t$data['post_status'] = 'publish';\n\n\t\t$data['post_author'] = 1;\n\n\t\t$data['post_type'] = 'rsvpmaker';\n\n\t\t$rsvp_options['rsvp_form'] = wp_insert_post( $data );\n\n\t\tupdate_post_meta( $rsvp_options['rsvp_form'], '_rsvpmaker_special', 'RSVP Form' );\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t} elseif ( ! is_numeric( $rsvp_options['rsvp_form'] ) ) {\n\n\t\t$data['post_title'] = 'Form:Default';\n\n\t\t$data['post_content'] = $rsvp_options['rsvp_form'];\n\n\t\t$data['post_status'] = 'publish';\n\n\t\t$data['post_type'] = 'rsvpmaker';\n\n\t\t$data['post_author'] = 1;\n\n\t\t$rsvp_options['rsvp_form'] = wp_insert_post( $data );\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n\t$rsvp_defaults['rsvp_form'] = $rsvp_options['rsvp_form'];\n\n\tif ( strpos( $rsvp_options['rsvplink'], '*|EMAIL|*' ) ) {\n\n\t\t$rsvp_options['rsvplink'] = str_replace( '?e=*|EMAIL|*#rsvpnow', '', $rsvp_options['rsvplink'] );\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n\t// if html removed (recover from error with sanitization on settings screen)\n\n\tif ( ! strpos( $rsvp_options['rsvplink'], '</a>' ) ) {\n\n\t\t$rsvp_options['rsvplink'] = '<p><a style=\"width: 8em; display: block; border: medium inset #FF0000; text-align: center; padding: 3px; background-color: #0000FF; color: #FFFFFF; font-weight: bolder; text-decoration: none;\" class=\"rsvplink\" href=\"%s\">' . __( 'RSVP Now!', 'rsvpmaker' ) . '</a></p>';\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n\tif ( empty( $rsvp_options['rsvp_confirm'] ) ) {\n\n\t\t$message = '<!-- wp:paragraph -->\n\n<p>' . __( 'Thank you!', 'rsvpmaker' ) . '</p>\n\n<!-- /wp:paragraph -->';\n\n\t\t$rsvp_options['rsvp_confirm'] = wp_insert_post(\n\t\t\tarray(\n\t\t\t\t'post_title'   => 'Confirmation:Default',\n\t\t\t\t'post_content' => $message,\n\t\t\t\t'post_status'  => 'publish',\n\t\t\t\t'post_type'    => 'rsvpemail',\n\t\t\t\t'post_parent'  => 0,\n\t\t\t)\n\t\t);\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t} elseif ( ! is_numeric( $rsvp_options['rsvp_confirm'] ) ) {\n\n\t\t$rsvp_options['rsvp_confirm'] = wp_insert_post(\n\t\t\tarray(\n\t\t\t\t'post_title'   => 'Confirmation:Default',\n\n\t\t\t\t'post_content' => rsvpautog( $rsvp_options['rsvp_confirm'] ),\n\n\t\t\t\t'post_status'  => 'publish',\n\t\t\t\t'post_type'    => 'rsvpemail',\n\t\t\t\t'post_parent'  => 0,\n\t\t\t)\n\t\t);\n\n\t\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t}\n\n}\n\nfunction rsvpmaker_defaults_for_post( $post_id ) {\n\n\tglobal $rsvp_options;\n\n\t$defaults = array(\n\n\t\t'calendar_icons'                    => '_calendar_icons',\n\n\t\t'rsvp_to'                           => '_rsvp_to',\n\n\t\t'rsvp_confirm'                      => '_rsvp_confirm',\n\n\t\t'rsvpmaker_send_confirmation_email' => '_rsvp_rsvpmaker_send_confirmation_email',\n\n\t\t'confirmation_include_event'        => '_rsvp_confirmation_include_event',\n\n\t\t'rsvp_instructions'                 => '_rsvp_instructions',\n\n\t\t'rsvp_count'                        => '_rsvp_count',\n\n\t\t'rsvp_count_party'                  => '_rsvp_count_party',\n\n\t\t'rsvp_yesno'                        => '_rsvp_yesno',\n\n\t\t'rsvp_max'                          => '_rsvp_max',\n\n\t\t'login_required'                    => '_rsvp_login_required',\n\n\t\t'rsvp_captcha'                      => '_rsvp_captcha',\n\n\t\t'show_attendees'                    => '_rsvp_show_attendees',\n\n\t\t'convert_timezone'                  => '_convert_timezone',\n\n\t\t'add_timezone'                      => '_add_timezone',\n\n\t\t'rsvp_form'                         => '_rsvp_form',\n\n\t);\n\n\tforeach ( $defaults as $index => $label ) {\n\n\t\tupdate_post_meta( $post_id, $label, $rsvp_options[ $index ] );\n\t}\n\n}\n\n\n\nfunction get_rsvpmaker_custom( $post_id ) {\n\n\tglobal $rsvp_options;\n\n\t$defaults = array(\n\n\t\t'calendar_icons'                    => '_calendar_icons',\n\n\t\t'rsvp_to'                           => '_rsvp_to',\n\n\t\t'rsvp_confirm'                      => '_rsvp_confirm',\n\n\t\t'rsvpmaker_send_confirmation_email' => '_rsvp_rsvpmaker_send_confirmation_email',\n\n\t\t'confirmation_include_event'        => '_rsvp_confirmation_include_event',\n\n\t\t'rsvp_instructions'                 => '_rsvp_instructions',\n\n\t\t'rsvp_count'                        => '_rsvp_count',\n\n\t\t'rsvp_count_party'                  => '_rsvp_count_party',\n\n\t\t'rsvp_yesno'                        => '_rsvp_yesno',\n\n\t\t'rsvp_max'                          => '_rsvp_max',\n\n\t\t'login_required'                    => '_rsvp_login_required',\n\n\t\t'rsvp_captcha'                      => '_rsvp_captcha',\n\n\t\t'show_attendees'                    => '_rsvp_show_attendees',\n\n\t\t'convert_timezone'                  => '_convert_timezone',\n\n\t\t'add_timezone'                      => '_add_timezone',\n\n\t\t'rsvp_form'                         => '_rsvp_form',\n\n\t);\n\n\tif ( strpos( $_SERVER['REQUEST_URI'], 'post-new.php' ) && ! isset( $_GET['clone'] ) ) {\n\n\t\t$custom['_rsvp_on'][0] = $rsvp_options['rsvp_on'];\n\n\t\tforeach ( $defaults as $default_key => $custom_key ) {\n\n\t\t\t$custom[ $custom_key ][0] = $rsvp_options[ $default_key ];\n\t\t}\n\n\t\treturn $custom;\n\n\t} else {\n\n\t\t$custom = get_post_custom( $post_id );\n\n\t\t$custom['_rsvp_on'][0] = ( isset( $custom['_rsvp_on'][0] ) && $custom['_rsvp_on'][0] ) ? 1 : 0;\n\n\t\tforeach ( $defaults as $default_key => $custom_key ) {\n\n\t\t\tif ( ! isset( $custom[ $custom_key ][0] ) ) {\n\n\t\t\t\t$custom[ $custom_key ][0] = $rsvp_options[ $default_key ];\n\t\t\t}\n\t\t}\n\n\t\treturn $custom;\n\n\t}\n\n}\n\nrsvpmaker_includes();\nfunction rsvpmaker_includes() {\n\t$plugins_dir   = plugin_dir_path( __DIR__ );\n\t$rsvpmaker_dir = trailingslashit(plugin_dir_path( __FILE__ ));\n\n\tif ( file_exists( $plugins_dir . 'rsvpmaker-custom.php' ) ) {\n\t\tinclude_once $plugins_dir . 'rsvpmaker-custom.php';\n\t}\n\n\tinclude $rsvpmaker_dir . 'rsvpmaker-util.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-admin.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-api-endpoints.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-display.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-plugabble.php';\n\tinclude $rsvpmaker_dir . 'mailchimp-api-master/src/MailChimp.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-email.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-privacy.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-actions.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-form.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-widgets.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-group-email.php';\n\tinclude $rsvpmaker_dir . 'script.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-money.php';\n\tinclude $rsvpmaker_dir . 'rsvpmaker-ical.php';\n}\n$gateways = get_rsvpmaker_payment_options();\nif ( in_array( 'Stripe', $gateways ) ) {\n\n\trequire WP_PLUGIN_DIR . '/rsvpmaker/rsvpmaker-stripe.php';\n}\n\nif ( in_array( 'PayPal REST API', $gateways ) ) {\n\n\trequire WP_PLUGIN_DIR . '/rsvpmaker/paypal-rest/paypal-rest.php';\n}\t\n\nfunction rsvpmaker_gutenberg_check() {\n\n\tglobal $carr_gut_test;\n\n\tif ( function_exists( 'register_block_type' ) && ! isset( $carr_gut_test ) ) {\n\n\t\trequire_once plugin_dir_path( __FILE__ ) . 'gutenberg/src/init.php';\n\t}\n\n}\n\n\n\nif ( version_compare( PHP_VERSION, '5.3.0' ) >= 0 ) {\n\n\tinclude WP_PLUGIN_DIR . '/rsvpmaker/rsvpmaker-recaptcha.php';\n\n}\n\n\n\nfunction rsvpmaker_create_post_type() {\n\n\tglobal $rsvp_options;\n\n\t$menu_label = ( isset( $rsvp_options['menu_label'] ) ) ? $rsvp_options['menu_label'] : __( 'RSVP Events', 'rsvpmaker' );\n\n\t$supports = array( 'title', 'editor', 'author', 'excerpt', 'custom-fields', 'thumbnail', 'revisions' );\n\n\tregister_post_type(\n\t\t'rsvpmaker',\n\t\tarray(\n\n\t\t\t'labels'             => array(\n\n\t\t\t\t'name'          => $menu_label,\n\n\t\t\t\t'add_new_item'  => __( 'Add New RSVP Event', 'rsvpmaker' ),\n\n\t\t\t\t'edit_item'     => __( 'Edit RSVP Event', 'rsvpmaker' ),\n\n\t\t\t\t'new_item'      => __( 'RSVP Events', 'rsvpmaker' ),\n\n\t\t\t\t'singular_name' => __( 'RSVP Event', 'rsvpmaker' ),\n\n\t\t\t),\n\n\t\t\t'menu_icon'          => 'dashicons-calendar-alt',\n\n\t\t\t'public'             => true,\n\n\t\t\t'can_export'         => false,\n\n\t\t\t'publicly_queryable' => true,\n\n\t\t\t'show_ui'            => true,\n\n\t\t\t'query_var'          => true,\n\n\t\t\t'rewrite'            => array(\n\t\t\t\t'slug'       => 'rsvpmaker',\n\t\t\t\t'with_front' => false,\n\t\t\t),\n\n\t\t\t'capability_type'    => 'rsvpmaker',\n\n\t\t\t'map_meta_cap'       => true,\n\n\t\t\t'has_archive'        => true,\n\n\t\t\t'hierarchical'       => false,\n\n\t\t\t'menu_position'      => 5,\n\n\t\t\t'supports'           => $supports,\n\n\t\t\t'show_in_rest'       => true,\n\n\t\t\t'taxonomies'         => array( 'rsvpmaker-type', 'post_tag' ),\n\n\t\t)\n\t);\n\n\t// Add new taxonomy, make it hierarchical (like categories)\n\n\t$labels = array(\n\n\t\t'name'              => _x( 'Event Types', 'taxonomy general name', 'rsvpmaker' ),\n\n\t\t'singular_name'     => _x( 'Event Type', 'taxonomy singular name', 'rsvpmaker' ),\n\n\t\t'search_items'      => __( 'Search Event Types', 'rsvpmaker' ),\n\n\t\t'all_items'         => __( 'All Event Types', 'rsvpmaker' ),\n\n\t\t'parent_item'       => __( 'Parent Event Type', 'rsvpmaker' ),\n\n\t\t'parent_item_colon' => __( 'Parent Event Type:', 'rsvpmaker' ),\n\n\t\t'edit_item'         => __( 'Edit Event Type', 'rsvpmaker' ),\n\n\t\t'update_item'       => __( 'Update Event Type', 'rsvpmaker' ),\n\n\t\t'add_new_item'      => __( 'Add New Event Type', 'rsvpmaker' ),\n\n\t\t'new_item_name'     => __( 'New Event Type', 'rsvpmaker' ),\n\n\t\t'menu_name'         => __( 'Event Type', 'rsvpmaker' ),\n\n\t);\n\n\tregister_taxonomy(\n\t\t'rsvpmaker-type',\n\t\tarray( 'rsvpmaker' ),\n\t\tarray(\n\n\t\t\t'hierarchical' => true,\n\n\t\t\t'labels'       => $labels,\n\n\t\t\t'show_ui'      => true,\n\n\t\t\t'show_in_rest' => true,\n\n\t\t\t'query_var'    => true,\n\n\t\t)\n\t);\n\n\t/*     'rewrite' => array( 'slug' => 'rsvpmaker-type' ), */\n\n\t// tweak for users who report \"page not found\" errors - flush rules on every init\n\n\tglobal $rsvp_options;\n\n\tif ( isset( $rsvp_options['flush'] ) && $rsvp_options['flush'] ) {\n\n\t\tflush_rewrite_rules();\n\t}\n\n\t// if there is a logged in user, set editing roles\n\n\tglobal $current_user;\n\n\tif ( isset( $current_user ) ) {\n\n\t\trsvpmaker_roles();\n\t}\n\n}\n\n// make sure new rules will be generated for custom post type - flush for admin but not for regular site visitors\nfunction cpevent_activate() {\n\n\trsvpmaker_single_block_template(); // if this is a block template, add RSVPMaker Single\n\n\tglobal $wpdb;\n\n\tglobal $rsvp_options;\n\n\trequire_once ABSPATH . 'wp-admin/includes/upgrade.php';\n\n\t$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvpmaker` (\n  `id` int(11) NOT NULL auto_increment,\n  `email` varchar(255)   CHARACTER SET utf8 COLLATE utf8_general_ci  default NULL,\n  `yesno` tinyint(4) NOT NULL default '0',\n  `first` varchar(255)  CHARACTER SET utf8 COLLATE utf8_general_ci  NOT NULL default '',\n  `last` varchar(255)  CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default '',\n  `details` text  CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `event` int(11) NOT NULL default '0',\n  `owed` float(6,2) NOT NULL default '0.00',\n  `amountpaid` float(6,2) NOT NULL default '0.00',\n  `master_rsvp` int(11) NOT NULL default '0',\n  `guestof` varchar(255)   CHARACTER SET utf8 COLLATE utf8_general_ci  default NULL,\n  `note` text   CHARACTER SET  utf8 COLLATE utf8_general_ci NOT NULL,\n  `participants` INT NOT NULL DEFAULT '0',\n  `user_id` INT NOT NULL DEFAULT '0',\n  `timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,\n  PRIMARY KEY  (`id`)\n) ENGINE=MyISAM  DEFAULT CHARSET=utf8;\";\n\n\tdbDelta( $sql );\n\n\t$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvpmaker_event` (\n\n  `event` int(11) NOT NULL default '0',\n\n  `post_title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci default NULL,\n\n  `display_type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci default NULL,\n\n  `date` datetime,\n\n  `enddate` datetime,\n\n  `ts_start` int(11) NOT NULL default '0',\n\n  `ts_end` int(11) NOT NULL default '0',\n\n  `timezone` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci default NULL,\n\n  PRIMARY KEY  (`event`)\n\n) ENGINE=MyISAM DEFAULT CHARSET=utf8;\";\n\n\tdbDelta( $sql );\n\n\t$sql = 'SELECT post_title, event, meta_value FROM `' . $wpdb->prefix . \"rsvpmaker` join $wpdb->posts ON \" . $wpdb->prefix . \"rsvpmaker.event=wp_posts.ID join $wpdb->postmeta ON $wpdb->posts.ID = wp_postmeta.post_id WHERE meta_key='_rsvp_dates' group by event\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( $results ) {\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$sql = $wpdb->prepare( 'REPLACE INTO `' . $wpdb->prefix . 'rsvpmaker_event` SET event=%d, post_title=%s, date=%s ', $row->event, $row->post_title, $row->meta_value );\n\n\t\t\t$wpdb->query( $sql );\n\n\t\t}\n\t}\n\n\t$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvp_volunteer_time` (\n\n  `id` int(11) NOT NULL auto_increment,\n\n  `event` int(11) NOT NULL default '0',\n\n  `rsvp` int(11) NOT NULL default '0',\n\n  `time` int(11) default '0',\n\n  `participants` int(11) NOT NULL default '0',\n\n  PRIMARY KEY  (`id`)\n\n) ENGINE=MyISAM  DEFAULT CHARSET=utf8;\";\n\n\tdbDelta( $sql );\n\n$sql = 'CREATE TABLE `' . $wpdb->prefix . \"rsvpmailer_blocked` (\n`ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n`email` varchar(100) NOT NULL DEFAULT '',\n`code` varchar(50) NOT NULL DEFAULT '',\n`timestamp` timestamp NOT NULL ON UPDATE CURRENT_TIMESTAMP,\nPRIMARY KEY (`ID`),\nKEY `email` (`email`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n\ndbDelta( $sql );\n\nrsvpmail_problem_init();\n\n\t$sql = 'SELECT slug FROM ' . $wpdb->prefix . 'terms JOIN `' . $wpdb->prefix . 'term_taxonomy` on ' . $wpdb->prefix . 'term_taxonomy.term_id= ' . $wpdb->prefix . \"terms.term_id WHERE taxonomy='rsvpmaker-type' AND slug='featured'\";\n\n\tif ( ! $wpdb->get_var( $sql ) ) {\n\n\t\twp_insert_term(\n\t\t\t'Featured', // the term\n\t\t\t'rsvpmaker-type', // the taxonomy\n\t\t\tarray(\n\n\t\t\t\t'description' => 'Featured event. Can be used to put selected events in a listing, for example on the home page',\n\n\t\t\t\t'slug'        => 'featured',\n\n\t\t\t)\n\t\t);\n\n\t}\n\n\t$sql = \"UPDATE $wpdb->posts SET post_type='rsvpemail' WHERE post_type='rsvpmaker' AND post_parent != 0 \";\n\n\t$wpdb->query( $sql );\n\n\t$rsvp_options['dbversion'] = 19;\n\n\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n}\n\nregister_activation_hook( __FILE__, 'cpevent_activate' );\n\n// upgrade database if necessary\nif ( isset( $rsvp_options['dbversion'] ) && ( $rsvp_options['dbversion'] < 19 ) ) {\n\tcpevent_activate();\n}\n\nfunction rsvpmaker_deactivate() {\n\n\t// Unregister the post type, so the rules are no longer in memory.\n\n\tunregister_post_type( 'rsvpmaker' );\n\n\tunregister_post_type( 'rsvpemail' );\n\n\t// Clear the permalinks to remove our post type's rules from the database.\n\n\tflush_rewrite_rules();\n\n\twp_unschedule_hook( 'rsvp_cleanup_hook' );\n\n\twp_unschedule_hook( 'rsvpmaker_relay_init_hook' );\n\n\twp_unschedule_hook( 'rsvpmaker_cron_email' );\n\n\twp_unschedule_hook( 'rsvpmaker_cron_email_preview' );\n\n\twp_unschedule_hook( 'rsvp_daily_reminder_event' );\n\n}\n\nregister_deactivation_hook( __FILE__, 'rsvpmaker_deactivate' );\n\n\n\nadd_action( 'init', 'rsvp_firsttime', 1 );\n\nfunction rsvp_firsttime() {\n\n\tglobal $rsvp_options;\n\n\tif ( $rsvp_options['dbversion'] > 12 ) {\n\n\t\treturn;\n\t}\n\n\t$rsvp_options['dbversion'] = 13;\n\n\tupdate_option( 'RSVPMAKER_Options', $rsvp_options );\n\n\t$future = get_future_events();\n\n\tif ( is_array( $future ) ) {\n\n\t\tforeach ( $future as $event ) {\n\n\t\t\t$post_id = $event->ID;\n\n\t\t\t$datetime = get_rsvp_date( $post_id );\n\n\t\t\t$end = get_post_meta( $post_id, '_end' . $datetime, true );\n\n\t\t\tif ( empty( $end ) ) {\n\n\t\t\t\t$t = rsvpmaker_strtotime( $datetime . ' +1 hour' );\n\n\t\t\t\t$end = rsvpmaker_date( 'H:i', $t );\n\n\t\t\t}\n\n\t\t\t$duration = get_post_meta( $post_id, '_' . $datetime, true );\n\n\t\t\tupdate_post_meta( $post_id, '_firsttime', $duration );\n\n\t\t\tupdate_post_meta( $post_id, '_endfirsttime', $end );\n\n\t\t}\n\t}\n\n}\n\n\n\nfunction convert_date_meta() {\n\n\tglobal $wpdb;\n\n\t$date_table = $wpdb->prefix . rsvp_dates;\n\n\t$sql = \"SELECT * FROM $date_table\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( ! $results ) {\n\n\t\treturn;\n\t}\n\n\tforeach ( $results as $row ) {\n\n\t\tadd_post_meta( $row->postID, '_rsvp_dates', $row->datetime );\n\n\t\tif ( $row->duration ) {\n\n\t\t\tadd_post_meta( $row->postID, '_' . $row->datetime, $row->duration );\n\t\t}\n\t}\n\n\t// fix for duplicate dates\n\n\t// rsvpmaker_duplicate_dates();\n}\n\nadd_filter('single_template_hierarchy','rsvpmaker_single_template_hierarchy');\nfunction rsvpmaker_single_template_hierarchy($templates) {\n\tglobal $post;\n\tif(isset($post->post_type) && ($post->post_type == 'rsvpmaker'))\n\t{\n\t\t$index = array_search('single.php',$templates);\n\t\tif($index) {\n\t\t\t// prefer the page template, doesn't emphasize date posted as much in most themes\n\t\t\t$templates[$index] = 'page.php';\n\t\t\t$templates[] = 'single.php';\n\t\t}\n\t}\n\treturn $templates;\n}\n\nfunction log_paypal( $message ) {\n\n\tglobal $post;\n\n\t$ts = rsvpmaker_date( 'r' );\n\n\t$invoice = sanitize_text_field($_SESSION['invoice']);\n\n\t$message .= \"\\n<br /><br />Post ID: \" . $post->ID;\n\n\t$message .= \"\\n<br /><br />Invoice: \" . $invoice;\n\n\t$message .= \"\\n<br />Email: \" . sanitize_text_field($_SESSION['payer_email']);\n\n\t$message .= \"\\n<br />Time: \" . $ts;\n\n\tadd_post_meta( $post->ID, '_paypal_log', $message );\n\n}\n\nif ( ! function_exists( 'rsvpmaker_permalink_query' ) ) {\n\n\tfunction rsvpmaker_permalink_query( $id, $query = '' ) {\n\n\t\t$key = 'pquery_' . $id;\n\n\t\t$p = wp_cache_get( $key );\n\n\t\tif ( ! $p ) {\n\n\t\t\t$p = get_permalink( $id );\n\n\t\t\t$p .= strpos( $p, '?' ) ? '&' : '?';\n\n\t\t\twp_cache_set( $key, $p );\n\n\t\t}\n\n\t\tif ( is_array( $query ) ) {\n\n\t\t\tforeach ( $query as $name => $value ) {\n\n\t\t\t\t$qstring .= $name . '=' . $value . '&';\n\t\t\t}\n\t\t} else {\n\n\t\t\t$qstring = $query;\n\n\t\t}\n\n\t\treturn $p . $qstring;\n\n\t}\n} // end function exists\n\n\n\nfunction format_cddate( $year, $month, $day, $hours, $minutes ) {\n\n\t$month = (int) $month;\n\n\tif ( $month < 10 ) {\n\n\t\t$month = '0' . $month;\n\t}\n\n\t$day = (int) $day;\n\n\tif ( $day < 10 ) {\n\n\t\t$day = '0' . $day;\n\t}\n\n\treturn $year . '-' . $month . '-' . $day . ' ' . $hours . ':' . $minutes . ':00';\n\n}\n\n\n\nfunction update_rsvpmaker_dates( $post_id, $dates_array, $durations_array, $end_array = array() ) {\n\n\t$current_dates = get_rsvpmaker_meta( $post_id, '_rsvp_dates', false );\n\n\tforeach ( $dates_array as $index => $cddate ) {\n\n\t\t$duration = $durations_array[ $index ];\n\n\t\t$end_time = ( empty( $end_array[ $index ] ) ) ? '' : $end_array[ $index ];\n\n\t\tif ( empty( $current_dates ) ) {\n\n\t\t\t add_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\n\t\t} elseif ( is_array( $current_dates ) ) {\n\n\t\t\tif ( empty( $current_dates[ $index ] ) ) {\n\n\t\t\t\t\tadd_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\n\t\t\t\t\t// rsvpmaker_debug_log(\"$post_id,$cddate,$duration,$end_time\",'add date parameters');\n\n\t\t\t} else {\n\n\t\t\t\tupdate_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\n\t\t\t\t// rsvpmaker_debug_log(\"$post_id,$cddate,$duration,$end_time,$index\".$current_dates[$index],'update date parameters');\n\n\t\t\t}\n\t\t} else {\n\t\t\t add_rsvpmaker_date( $post_id, $cddate, $duration, $end_time, $index );\n\t\t}\n\n\t\t$current_dates[] = $cddate;\n\n\t}\n\n\t$missing = array_diff( $current_dates, $dates_array );\n\n\tif ( ! empty( $missing ) ) {\n\n\t\tforeach ( $missing as $cddate ) {\n\n\t\t\tdelete_rsvpmaker_date( $post_id, $cddate );\n\t\t}\n\t}\n\n}\n\n\n\nfunction delete_rsvpmaker_date( $post_id, $cddate ) {\n\n\tdelete_post_meta( $post_id, '_rsvp_dates', $cddate );\n\n\tdelete_post_meta( $post_id, '_' . $cddate );\n\n\tdelete_transient( 'rsvpmakerdates' );\n\n}\n\n\n\nfunction add_rsvpmaker_date( $post_id, $cddate, $duration = '', $end_time = '', $index = 0 ) {\n\n\t$slug = ( $index == 0 ) ? 'firsttime' : $cddate;\n\n\tadd_post_meta( $post_id, '_rsvp_dates', $cddate );\n\n\tadd_post_meta( $post_id, '_' . $slug, $duration );\n\n\tif ( empty( $end_time ) ) {\n\n\t\t$et = rsvpmaker_strtotime( $cddate . ' +1 hour' );\n\n\t\t$end_time = rsvpmaker_date( 'H:i', $et );\n\n\t}\n\n\tadd_post_meta( $post_id, '_end' . $slug, $end_time );\n\n}\n\n\n\nfunction update_rsvpmaker_date( $post_id, $cddate, $duration = '', $end_time = '', $index = 0 ) {\n\n\t$slug = ( $index == 0 ) ? 'firsttime' : $cddate;\n\n\tupdate_post_meta( $post_id, '_rsvp_dates', $cddate );\n\n\tupdate_post_meta( $post_id, '_' . $slug, $duration );\n\n\tif ( ! empty( $end_time ) ) {\n\n\t\tupdate_post_meta( $post_id, '_end' . $slug, $end_time );\n\t}\n\n\tdelete_transient( 'rsvpmakerdates' );\n\n}\n\n\n\nfunction rsvpmaker_upcoming_data( $atts ) {\n\tglobal $post;\n\n\tglobal $dataloop;\n\n\t$waspost = $post;\n\n\t$dataloop = true; // prevent ui output of More Events link\n\n\t$rsvp_query = rsvpmaker_upcoming_query( $atts );\n\n\t$events = array();\n\n\tif ( $rsvp_query->have_posts() ) {\n\n\t\twhile ( $rsvp_query->have_posts() ) :\n\t\t\t$rsvp_query->the_post();\n\n\t\t\t$events[] = $post;\n\n\t\tendwhile;\n\n\t}\n\n\twp_reset_postdata();\n\n\t$post = $waspost;\n\n\treturn $events;\n\n}\n\n\n\nfunction rsvpmaker_duplicate_dates() {\n\n\tglobal $wpdb;\n\n\t$sql = \"SELECT $wpdb->posts.ID as postID, $wpdb->posts.*, a1.meta_value as datetime, meta_id\n\n\t FROM \" . $wpdb->posts . '\n\n\t JOIN ' . $wpdb->postmeta . ' a1 ON ' . $wpdb->posts . \".ID =a1.post_id AND a1.meta_key='_rsvp_dates'\n\n\t ORDER BY postID, a1.meta_value\";\n\n\t$results = $wpdb->get_results( $sql );\n\n\tif ( $results ) {\n\n\t\tforeach ( $results as $row ) {\n\n\t\t\t$slug = $row->datetime . $row->postID;\n\n\t\t\t$dup = ( empty( $count[ $slug ] ) ) ? false : true;\n\n\t\t\tif ( $dup ) {\n\n\t\t\t\t$wpdb->query( \"DELETE FROM $wpdb->postmeta WHERE meta_id=\" . $row->meta_id );\n\n\t\t\t}\n\n\t\t\tif ( isset( $_GET['clean_duplicate_dates'] ) && isset( $_GET['debug'] ) ) {\n\n\t\t\t\tprintf( '<p>%s<br />%s %s</p>', $row->post_title, $row->datetime, $row->meta_id );\n\t\t\t}\n\n\t\t\t$count[ $slug ]++;\n\n\t\t}\n\t}\n\n\texit();\n\n}\n\n\n\nfunction rsvpmaker_menu_order( $menu_ord ) {\n\n\tif ( ! $menu_ord || ! is_array( $menu_ord ) ) {\n\t\treturn true;\n\t}\n\n\tforeach ( $menu_ord as $menu_item ) {\n\n\t\tif ( $menu_item == 'edit.php?post_type=page' ) {\n\n\t\t\t$neworder[] = 'edit.php?post_type=page';\n\n\t\t\t$neworder[] = 'edit.php?post_type=rsvpmaker';\n\n\t\t\t$neworder[] = 'edit.php?post_type=rsvpemail';\n\n\t\t} elseif ( ( $menu_item == 'edit.php?post_type=rsvpmaker' ) || ( $menu_item == 'edit.php?post_type=rsvpemail' ) ) {\n\n\t\t} else {\n\t\t\t\t$neworder[] = $menu_item;\n\t\t}\n\t}\n\n\treturn $neworder;\n\n}\n\nadd_filter( 'custom_menu_order', 'rsvpmaker_menu_order' ); // Activate custom_menu_order\nadd_filter( 'menu_order', 'rsvpmaker_menu_order' );\n\nfunction rsvpmaker_sc_after_charge( $charge_response ) {\n\n\tglobal $post;\n\n\tif ( $post->post_type != 'rsvpmaker' ) {\n\n\t\treturn;\n\t}\n\n\t$tx_id = $charge_response->id;\n\n\t$charge = $paid = $charge_response->amount / 100;\n\n\tif ( ! isset( $_COOKIE[ 'rsvp_for_' . $post->ID ] ) ) {\n\n\t\techo '<p style=\"color:red;\">Error logging payment to RSVP record</p>';\n\n\t}\n\n\t$rsvp_id = intval($_COOKIE[ 'rsvp_for_' . $post->ID ]);\n\n\tglobal $wpdb;\n\n\tglobal $post;\n\n\t$event = $post->ID;\n\n\tif ( get_post_meta( $event, '_stripe_' . $tx_id, true ) ) {\n\n\t\techo '<p style=\"color:red;\">Payment already recorded</p>';\n\n\t\treturn; // if transaction ID recorded, do not duplicate payment\n\n\t}\n\n\t$paid_amounts = get_post_meta( $event, '_paid_' . $rsvp_id );\n\n\tif ( ! empty( $paid_amounts ) ) {\n\n\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t$paid += $payment;\n\t\t}\n\t}\n\n\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\tadd_post_meta( $event, '_stripe_' . $tx_id, $charge );\n\n\tadd_post_meta( $event, '_paid_' . $rsvp_id, $charge );\n\n\tdelete_post_meta( $event, '_open_invoice_' . $rsvp_id );\n\n\tdelete_post_meta( $event, '_invoice_' . $rsvp_id );\n\n\t$row = $wpdb->get_row( 'SELECT * FROM ' . $wpdb->prefix . \"rsvpmaker WHERE id=$rsvp_id \", ARRAY_A );\n\n\t$message = sprintf( '<p>%s ' . __( 'payment for', 'rsvpmaker' ) . ' %s %s ' . __( ' c/o Stripe transaction', 'rsvpmaker' ) . ' %s<br />' . __( 'Post ID', 'rsvpmaker' ) . ': %s<br />' . __( 'Time', 'rsvpmaker' ) . ': %s</p>', esc_html( $charge ), esc_html( $row['first'] ), esc_html( $row['last'] ), esc_html( $tx_id ), esc_html( $event ), date( 'r' ) );\n\n\tadd_post_meta( $event, '_paypal_log', $message );\n\n}\n\nfunction rsvpmaker_custom_payment( $method, $paid, $rsvp_id, $event, $tx_id = 0 ) {\n\n\tglobal $wpdb;\n\n\t$charge = $paid;\n\n\t$paid_amounts = get_post_meta( $event, '_paid_' . $rsvp_id );\n\n\tif ( ! empty( $paid_amounts ) ) {\n\n\t\tforeach ( $paid_amounts as $payment ) {\n\n\t\t\t$paid += $payment;\n\t\t}\n\t}\n\n\t$wpdb->query( 'UPDATE ' . $wpdb->prefix . \"rsvpmaker SET amountpaid='$paid' WHERE id=$rsvp_id \" );\n\n\tadd_post_meta( $event, '_' . $method . '_' . $tx_id, $charge );\n\n\tadd_post_meta( $event, '_paid_' . $rsvp_id, $charge );\n\n\tdelete_post_meta( $event, '_open_invoice_' . $rsvp_id );\n\n\tdelete_post_meta( $event, '_invoice_' . $rsvp_id );\n\n\t$log = sprintf( '%s amount: %s rsvp_id: %s event: %s, tx: %s', $method, $paid, $rsvp_id, $event, $tx_id = 0 );\n\n\trsvpmaker_debug_log( $log );\n\n}\n\nfunction rsvpmaker_before_post_display_action() {\n\n\tglobal $post;\n\n\tif ( isset( $post->post_type ) && ( $post->post_type == 'rsvpmaker' ) ) {\n\n\t\tdo_action( 'rsvpmaker_before_display' );\n\t}\n\n}\n\nfunction add_rsvpmaker_roles() {\n\n\t$rsvpmakereditor = get_role( 'rsvpmakereditor' );\n\n\tif ( ! $rsvpmakereditor ) {\n\n\t\tadd_role(\n\t\t\t'rsvpmakereditor',\n\t\t\t'RSVPMaker Editor',\n\t\t\tarray(\n\n\t\t\t\t'read'                      => true,\n\n\t\t\t\t'upload_files'              => true,\n\n\t\t\t\t'delete_posts'              => true,\n\n\t\t\t\t'delete_private_posts'      => true,\n\n\t\t\t\t'delete_published_posts'    => true,\n\n\t\t\t\t'edit_posts'                => true,\n\n\t\t\t\t'edit_private_posts'        => true,\n\n\t\t\t\t'edit_published_posts'      => true,\n\n\t\t\t\t'publish_posts'             => true,\n\n\t\t\t\t'delete_others_rsvpmakers'  => true,\n\n\t\t\t\t'delete_rsvpmakers'         => true,\n\n\t\t\t\t'edit_rsvpmakers'           => true,\n\n\t\t\t\t'edit_others_rsvpmakers'    => true,\n\n\t\t\t\t'edit_published_rsvpmakers' => true,\n\n\t\t\t\t'publish_rsvpmakers'        => true,\n\n\t\t\t\t'read_private_rsvpmakers'   => true,\n\n\t\t\t)\n\t\t);\n\t}\n\n}\n\n\nfunction rsvpmaker_wp_editor( $content, $editor_id, $settings = array() ) {\n\tif ( function_exists( 'do_blocks' ) ) { // gutenberg world\n\n\t\tprintf( '<p><textarea rows=\"10\" cols=\"80\" id=\"%s\" name=%s>%s</textarea></p>', esc_attr( $editor_id ), esc_attr( $editor_id ), wp_kses_post( $content ) );\n\n\t} else {\n\t\twp_editor( $content, $editor_id, $settings );\n\t}\n\n}\n\nfunction rsvpmaker_dequeue_script() {\n\n\twp_dequeue_script( 'tiny_mce' );\n\n}\n\n\n\nfunction rsvpautog( $content ) {\n\n\tif ( strpos( $content, '<!-- /wp:paragraph -->' ) ) {\n\n\t\treturn $content; // already coded for gutenberg\n\t}\n\n\t$content = wpautop( $content );\n\n\t$content = str_replace( '</p>', \"</p>\\n<!-- /wp:paragraph -->\\n\", $content );\n\n\t$content = str_replace( '<p>', \"<!-- wp:paragraph -->\\n<p>\", $content );\n\n\treturn $content;\n\n}\n\nfunction rsvpmaker_server_block_render() {\n\n\tif ( wp_is_json_request() ) {\n\n\t\treturn;\n\t}\n\n\tregister_block_type( 'rsvpmaker/event', array( 'render_callback' => 'rsvpmaker_one' ) );\n\n\tregister_block_type( 'rsvpmaker/upcoming', array( 'render_callback' => 'rsvpmaker_upcoming' ) );\n\n\tregister_block_type( 'rsvpmaker/stripecharge', array( 'render_callback' => 'rsvpmaker_stripecharge' ) );\n\n\tregister_block_type( 'rsvpmaker/paypal', array( 'render_callback' => 'rsvpmaker_paypay_button_embed' ) );\n\n\tregister_block_type( 'rsvpmaker/limited', array( 'render_callback' => 'rsvpmaker_limited_time' ) );\n\n\tregister_block_type( 'rsvpmaker/formfield', array( 'render_callback' => 'rsvp_form_text' ) );\n\n\tregister_block_type( 'rsvpmaker/formtextarea', array( 'render_callback' => 'rsvp_form_textarea' ) );\n\n\tregister_block_type( 'rsvpmaker/formselect', array( 'render_callback' => 'rsvp_form_select' ) );\n\n\tregister_block_type( 'rsvpmaker/formradio', array( 'render_callback' => 'rsvp_form_radio' ) );\n\n\tregister_block_type( 'rsvpmaker/formnote', array( 'render_callback' => 'rsvp_form_note' ) );\n\n\tregister_block_type( 'rsvpmaker/guests', array( 'render_callback' => 'rsvp_form_guests' ) );\n\n\tregister_block_type( 'rsvpmaker/stripe-form-wrapper', array( 'render_callback' => 'stripe_form_wrapper' ) );\n\n\tregister_block_type( 'rsvpmaker/eventlisting', array( 'render_callback' => 'rsvpmaker_event_listing' ) );\n\n\tregister_block_type( 'rsvpmaker/rsvpdateblock', array( 'render_callback' => 'rsvpdateblock' ) );\n\n\tregister_block_type( 'rsvpmaker/upcoming-by-json', array( 'render_callback' => 'rsvpjsonlisting' ) );\n\n\tregister_block_type( 'rsvpmaker/embedform', array( 'render_callback' => 'rsvpmaker_form' ) );\n\n\tregister_block_type( 'rsvpmaker/schedule', array( 'render_callback' => 'rsvpmaker_daily_schedule' ) );\n\n\tregister_block_type( 'rsvpmaker/future-rsvp-links', array( 'render_callback' => 'future_rsvp_links' ) );\n\n\tregister_block_type( 'rsvpmaker/submission', array( 'render_callback' => 'rsvpmaker_submission' ) );\n\n\tregister_block_type( 'rsvpmaker/formchimp', array( 'render_callback' => 'rsvpmaker_formchimp' ) );\n\tregister_block_type( 'rsvpmaker/next-events', array( 'render_callback' => 'rsvpmaker_next_rsvps' ) );\n\n}\n"], "filenames": ["README.txt", "rsvpmaker-admin.php", "rsvpmaker-api-endpoints.php", "rsvpmaker-email.php", "rsvpmaker-group-email.php", "rsvpmaker-plugabble.php", "rsvpmaker-stripe.php", "rsvpmaker.php"], "buggy_code_start_loc": [10, 1027, 388, 2793, 48, 2576, 46, 10], "buggy_code_end_loc": [12, 5123, 389, 2794, 946, 2583, 286, 112], "fixing_code_start_loc": [10, 1028, 388, 2793, 49, 2576, 46, 10], "fixing_code_end_loc": [12, 5131, 389, 2794, 968, 2583, 291, 115], "type": "CWE-89", "message": "The RSVPMaker plugin for WordPress is vulnerable to unauthenticated SQL Injection due to missing SQL escaping and parameterization on user supplied data passed to a SQL query in the rsvpmaker-util.php file. This makes it possible for unauthenticated attackers to steal sensitive information from the database in versions up to and including 9.2.5.", "other": {"cve": {"id": "CVE-2022-1453", "sourceIdentifier": "security@wordfence.com", "published": "2022-05-10T20:15:08.533", "lastModified": "2022-05-18T14:47:17.463", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The RSVPMaker plugin for WordPress is vulnerable to unauthenticated SQL Injection due to missing SQL escaping and parameterization on user supplied data passed to a SQL query in the rsvpmaker-util.php file. This makes it possible for unauthenticated attackers to steal sensitive information from the database in versions up to and including 9.2.5."}, {"lang": "es", "value": "El plugin RSVPMaker para WordPress es vulnerable a una inyecci\u00f3n SQL no autenticada debido a una falta de escape SQL y parametrizaci\u00f3n de los datos suministrados por el usuario pasados a una consulta SQL en el archivo rsvpmaker-util.php. Esto hace posible a atacantes no autenticados robar informaci\u00f3n confidencial de la base de datos en versiones hasta la 9.2.5 incluy\u00e9ndola"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security@wordfence.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:rsvpmaker_project:rsvpmaker:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "9.2.5", "matchCriteriaId": "E4C830C2-E760-4EA4-96D9-6016345AC211"}]}]}], "references": [{"url": "https://github.com/davidfcarr/rsvpmaker/commit/bfb189f49af7ab0d34499a2da772e3266f72167d", "source": "security@wordfence.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=2714389%40rsvpmaker&new=2714389%40rsvpmaker&sfp_email=&sfph_mail=", "source": "security@wordfence.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.wordfence.com/vulnerability-advisories/#CVE-2022-1453", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/davidfcarr/rsvpmaker/commit/bfb189f49af7ab0d34499a2da772e3266f72167d"}}