{"buggy_code": ["C Fix\\sa\\sgramfuzz\\sfind.\\s\\sIf\\sa\\spartial\\sindex\\sthat\\sdoes\\snot\\sreference\\sany\\scolumn\\nof\\sits\\stable\\sis\\sused\\sby\\san\\sUPDATE\\sstatement\\sin\\sone-pass\\smode,\\sthen\\savoid\\sthe\\nuse\\sof\\sOP_DeferredSeek\\ssince\\sthe\\sseek\\smight\\snot\\sbe\\sresolved\\sprior\\sto\\sthe\\nOP_Delete\\sand\\sOP_Insert\\sthat\\simplement\\sthe\\sUPDATE.\nD 2019-12-09T14:34:37.171\nF .fossil-settings/empty-dirs dbb81e8fc0401ac46a1491ab34a7f2c7c0452f2f06b54ebb845d024ca8283ef1\nF .fossil-settings/ignore-glob 35175cdfcf539b2318cb04a9901442804be81cd677d8b889fcc9149c21f239ea\nF LICENSE.md df5091916dbb40e6e9686186587125e1b2ff51f022cc334e886c19a0e9982724\nF Makefile.in d3a862c9742f5a08230a3b295c0a47fd3067f19356dc39935280135f90474b04\nF Makefile.linux-gcc f609543700659711fbd230eced1f01353117621dccae7b9fb70daa64236c5241\nF Makefile.msc 0b0acbf34bb238170bdf1fd343a1fd37bc81c042ce029c1cc53fe15b5d4ed07b\nF README.md 1514a365ffca3c138e00c5cc839906108a01011a6b082bad19b09781e3aa498a\nF VERSION 081500f0aeaadc989d85aafbc717af45512018aebc73d89e5c2368fe62a600ff\nF aclocal.m4 a5c22d164aff7ed549d53a90fa56d56955281f50\nF art/sqlite370.eps aa97a671332b432a54e1d74ff5e8775be34200c2\nF art/sqlite370.ico af56c1d00fee7cd4753e8631ed60703ed0fc6e90\nF art/sqlite370.jpg d512473dae7e378a67e28ff96a34da7cb331def2\nF autoconf/INSTALL 83e4a25da9fd053c7b3665eaaaf7919707915903\nF autoconf/Makefile.am e14b629addaa1ce372b72043f28f40de2e32b7e211b6e0fc18dbb87989197e40\nF autoconf/Makefile.fallback 22fe523eb36dfce31e0f6349f782eb084e86a5620b2b0b4f84a2d6133f53f5ac\nF autoconf/Makefile.msc 492ea431c411378094593a5225b9a02645455a5d87a26d018b5461b723e52125\nF autoconf/README.first 6c4f34fe115ff55d4e8dbfa3cecf04a0188292f7\nF autoconf/README.txt 4f04b0819303aabaa35fff5f7b257fb0c1ef95f1\nF autoconf/configure.ac 308de24343e76ecfbe9a67f8fcd4c5216b790d230c5d9ce10210b7d5965d6192\nF autoconf/tea/Makefile.in b438a7020446c8a8156e8d97c8914a04833da6fd\nF autoconf/tea/README 3e9a3c060f29a44344ab50aec506f4db903fb873\nF autoconf/tea/aclocal.m4 52c47aac44ce0ddb1f918b6993e8beb8eee88f43\nF autoconf/tea/configure.ac 8aa16e3f0a5ca7959d4af198f46934ec187d395f\nF autoconf/tea/doc/sqlite3.n e1fe45d4f5286ee3d0ccc877aca2a0def488e9bb\nF autoconf/tea/license.terms 13bd403c9610fd2b76ece0ab50c4c5eda933d523\nF autoconf/tea/pkgIndex.tcl.in 3ef61715cf1c7bdcff56947ffadb26bc991ca39d\nF autoconf/tea/tclconfig/install-sh bdd5e293591621ae60d9824d86a4b1c5f22c3d00\nF autoconf/tea/tclconfig/tcl.m4 66ddf0a5d5e4b1d29bff472c0985fd7fa89d0fb5\nF autoconf/tea/win/makefile.vc f89d0184d0eee5f7e356ea407964dcd139939928\nF autoconf/tea/win/nmakehlp.c 247538ad8e8c508f33c03ec1fbd67d3a07ef6291\nF autoconf/tea/win/rules.vc c511f222b80064096b705dbeb97060ee1d6b6d63\nF config.guess 883205ddf25b46f10c181818bf42c09da9888884af96f79e1719264345053bd6\nF config.h.in 6376abec766e9a0785178b1823b5a587e9f1ccbc\nF config.sub c2d0260f17f3e4bc0b6808fccf1b291cb5e9126c14fc5890efc77b9fd0175559\nF configure fdc9f8d53360170679349d8f72fb2e5c79f511424891b7bb8a2f48de41c7a6ef x\nF configure.ac 3552d3aecade98a9d4b64bceb48ffb7726cbc85902efde956812942f060fbd0a\nF contrib/sqlitecon.tcl 210a913ad63f9f991070821e599d600bd913e0ad\nF doc/F2FS.txt c1d4a0ae9711cfe0e1d8b019d154f1c29e0d3abfe820787ba1e9ed7691160fcd\nF doc/lemon.html 24956ab2995e55fe171e55bdd04f22b553957dc8bb43501dbb9311e30187e0d3\nF doc/pager-invariants.txt 27fed9a70ddad2088750c4a2b493b63853da2710\nF doc/vfs-shm.txt e101f27ea02a8387ce46a05be2b1a902a021d37a\nF ext/README.md fd5f78013b0a2bc6f0067afb19e6ad040e89a10179b4f6f03eee58fac5f169bd\nF ext/async/README.txt e12275968f6fde133a80e04387d0e839b0c51f91\nF ext/async/sqlite3async.c 0f3070cc3f5ede78f2b9361fb3b629ce200d7d74\nF ext/async/sqlite3async.h f489b080af7e72aec0e1ee6f1d98ab6cf2e4dcef\nF ext/expert/README.md b321c2762bb93c18ea102d5a5f7753a4b8bac646cb392b3b437f633caf2020c3\nF ext/expert/expert.c d548d603a4cc9e61f446cc179c120c6713511c413f82a4a32b1e1e69d3f086a4\nF ext/expert/expert1.test e2afc53a27610e8251e44c7f961806607a5490ff204b3db342740d558e052662\nF ext/expert/sqlite3expert.c 3da865f2286433588260f41e796422c611bceaca3a0bbf9139a619cf7d062c19\nF ext/expert/sqlite3expert.h ca81efc2679a92373a13a3e76a6138d0310e32be53d6c3bfaedabd158ea8969b\nF ext/expert/test_expert.c d56c194b769bdc90cf829a14c9ecbc1edca9c850b837a4d0b13be14095c32a72\nF ext/fts1/README.txt 20ac73b006a70bcfd80069bdaf59214b6cf1db5e\nF ext/fts1/ft_hash.c 3927bd880e65329bdc6f506555b228b28924921b\nF ext/fts1/ft_hash.h 06df7bba40dadd19597aa400a875dbc2fed705ea\nF ext/fts1/fts1.c a39f7d21c2994d27c959ef9c3505c81542c81432\nF ext/fts1/fts1.h 6060b8f62c1d925ea8356cb1a6598073eb9159a6\nF ext/fts1/fts1_hash.c 3196cee866edbebb1c0521e21672e6d599965114\nF ext/fts1/fts1_hash.h e7f0d761353996a8175eda351104acfde23afcb0\nF ext/fts1/fts1_porter.c b1c7304b8988ba3f764a147cdd32043b4913ea7b\nF ext/fts1/fts1_tokenizer.h fdea722c38a9f82ed921642981234f666e47919c\nF ext/fts1/fts1_tokenizer1.c fd00d1fe4dc30dfc5c64cba695ce34f4af20d2fa\nF ext/fts1/fulltext.c 37698e1909584f6d8ea67d1485e3ad39dbf42d19\nF ext/fts1/fulltext.h 08525a47852d1d62a0be81d3fc3fe2d23b094efd\nF ext/fts1/simple_tokenizer.c bbfa4e3b2a26ef17d4edc6d98cd4a3f5396d998a\nF ext/fts1/tokenizer.h 0c53421b832366d20d720d21ea3e1f6e66a36ef9\nF ext/fts2/README.tokenizers 21e3684ea5a095b55d70f6878b4ce6af5932dfb7\nF ext/fts2/README.txt 8c18f41574404623b76917b9da66fcb0ab38328d\nF ext/fts2/fts2.c 72c816a9ae448049fbbe8f18a85698765fc7956c\nF ext/fts2/fts2.h da5f76c65163301d1068a971fd32f4119e3c95fa\nF ext/fts2/fts2_hash.c 011a1d32de45bb1b519a1fd0048e857d6a843558\nF ext/fts2/fts2_hash.h 1824b99dfd8d0225facbdb26a2c87289b2e7dcf8\nF ext/fts2/fts2_icu.c 51c5cd3c04954badd329fa738c95fcdb717b5188\nF ext/fts2/fts2_porter.c 2cd4a507bf3c3085fe66f59b0f2a325f65aaacf5\nF ext/fts2/fts2_tokenizer.c b529493d55e55497213c37e1f31680a77746be26\nF ext/fts2/fts2_tokenizer.h 27a1a99ca2d615cf7e142839b8d79e8751b4529e\nF ext/fts2/fts2_tokenizer1.c 07e223eecb483d448313b5f1553a4f299a7fb7a1\nF ext/fts2/mkfts2amal.tcl 974d5d438cb3f7c4a652639262f82418c1e4cff0\nF ext/fts3/README.content fdc666a70d5257a64fee209f97cf89e0e6e32b51\nF ext/fts3/README.syntax a19711dc5458c20734b8e485e75fb1981ec2427a\nF ext/fts3/README.tokenizers b92bdeb8b46503f0dd301d364efc5ef59ef9fa8e2758b8e742f39fa93a2e422d\nF ext/fts3/README.txt 8c18f41574404623b76917b9da66fcb0ab38328d\nF ext/fts3/fts3.c 9a69143c94195d9342dd4a704021009fb9e45dff9bff775dae024d47e363bab8\nF ext/fts3/fts3.h 3a10a0af180d502cecc50df77b1b22df142817fe\nF ext/fts3/fts3Int.h ba4e5445a0daf4a251345d4704259268fd98a3e0282fedfcaedb9fc6da9f250c\nF ext/fts3/fts3_aux.c 96708c8b3a7d9b8ca1b68ea2b7e503e283f20e95f145becadedfad096dbd0f34\nF ext/fts3/fts3_expr.c b132af223e90e35b9f9efa9fe63d6ae737d34153a3b6066736086df8abc78a1f\nF ext/fts3/fts3_hash.c 8b6e31bfb0844c27dc6092c2620bdb1fca17ed613072db057d96952c6bdb48b7\nF ext/fts3/fts3_hash.h 39cf6874dc239d6b4e30479b1975fe5b22a3caaf\nF ext/fts3/fts3_icu.c 305ce7fb6036484085b5556a9c8e62acdc7763f0f4cdf5fd538212a9f3720116\nF ext/fts3/fts3_porter.c 3565faf04b626cddf85f03825e86056a4562c009\nF ext/fts3/fts3_snippet.c d62e40baa6a200586c3a425478109418f44926b1c318c870b59a4286afbe2795\nF ext/fts3/fts3_term.c f45a1e7c6ef464abb1231245d123dae12266b69e05cc56e14045b76591ae92d1\nF ext/fts3/fts3_test.c 73b16e229e517c1b1f0fb8e1046182a4e5dbc8dbe6eea8a5d4353fcce7dbbf39\nF ext/fts3/fts3_tokenize_vtab.c 1de9a61acfa2a0445ed989310c31839c57f6b6086dd9d5c97177ae734a17fd8b\nF ext/fts3/fts3_tokenizer.c a1ca0ab7c9c688ccb1d605645809f74f5df2bf4ca568e4bb37fb51113fd78e45\nF ext/fts3/fts3_tokenizer.h 64c6ef6c5272c51ebe60fc607a896e84288fcbc3\nF ext/fts3/fts3_tokenizer1.c 5c98225a53705e5ee34824087478cf477bdb7004\nF ext/fts3/fts3_unicode.c 4b9af6151c29b35ed09574937083cece7c31e911f69615e168a39677569b684d\nF ext/fts3/fts3_unicode2.c 416eb7e1e81142703520d284b768ca2751d40e31fa912cae24ba74860532bf0f\nF ext/fts3/fts3_write.c fa971df91b7c9c317ccb76e73de425de372f854cbed16be2d98f42f61be6c0fb\nF ext/fts3/fts3speed.tcl b54caf6a18d38174f1a6e84219950d85e98bb1e9\nF ext/fts3/mkfts3amal.tcl 252ecb7fe6467854f2aa237bf2c390b74e71f100\nF ext/fts3/tool/fts3cov.sh c331d006359456cf6f8f953e37f2b9c7d568f3863f00bb5f7eb87fea4ac01b73\nF ext/fts3/tool/fts3view.c 202801a2056995b763864d60c2dee744d46f1677\nF ext/fts3/unicode/CaseFolding.txt 8c678ca52ecc95e16bc7afc2dbf6fc9ffa05db8c\nF ext/fts3/unicode/UnicodeData.txt cd07314edb62d49fde34debdaf92fa2aa69011e7\nF ext/fts3/unicode/mkunicode.tcl bf7fcaa6d68e6d38223467983785d054f1cff4d9e3905dd51f6ed8801bb590d5\nF ext/fts3/unicode/parseunicode.tcl a981bd6466d12dd17967515801c3ff23f74a281be1a03cf1e6f52a6959fc77eb\nF ext/fts5/extract_api_docs.tcl a36e54ec777172ddd3f9a88daf593b00848368e0\nF ext/fts5/fts5.h c132a9323f22a972c4c93a8d5a3d901113a6e612faf30ca8e695788438c5ca2a\nF ext/fts5/fts5Int.h d7cbc214ee167496f70905667e18f73ea0402f7ef09236ce305e117e0efc866a\nF ext/fts5/fts5_aux.c dcc627d8b6e3fc773db528ff67b39955dab7b51628f9dba8e15849e5bedfd7fa\nF ext/fts5/fts5_buffer.c 5a5fe0159752c0fb0a5a93c722e9db2662822709490769d482b76a6dc8aaca70\nF ext/fts5/fts5_config.c aab6117f8f85933e051c66f227414fdcaf7f2313688e16276b895f9d42d28e5c\nF ext/fts5/fts5_expr.c 2be456484786333d559dc2987a00f2750981fab91d52db8452a8046278c5f22e\nF ext/fts5/fts5_hash.c 1cc0095646f5f3b46721aa112fb4f9bf29ae175cb5338f89dcec66ed97acfe75\nF ext/fts5/fts5_index.c 99b77ae1f503978ca76985bcfff7345c822aed8bbaa8edb3747f804f614685b5\nF ext/fts5/fts5_main.c 9db1f173d299466aeff89bd949fb1eb0a181265726fb56f11e07ea292dcc9a73\nF ext/fts5/fts5_storage.c 167e3d8f8052a71032d498e32a2f2ed5ffe489e5d4d47e298adfa02ed55c7882\nF ext/fts5/fts5_tcl.c 39bcbae507f594aad778172fa914cad0f585bf92fd3b078c686e249282db0d95\nF ext/fts5/fts5_test_mi.c 08c11ec968148d4cb4119d96d819f8c1f329812c568bac3684f5464be177d3ee\nF ext/fts5/fts5_test_tok.c f96c6e193c466711d6d7828d5f190407fe7ab897062d371426dd3036f01258e7\nF ext/fts5/fts5_tokenize.c 2e508c6a3bd8ee56c48e98a38052e1a650e49b32a484cce9b189984114bc3b88\nF ext/fts5/fts5_unicode2.c 8bd0cd07396b74c1a05590e4070d635bccfc849812c305619f109e6c0485e250\nF ext/fts5/fts5_varint.c e64d2113f6e1bfee0032972cffc1207b77af63319746951bf1d09885d1dadf80\nF ext/fts5/fts5_vocab.c c3f12188570abb423303cd193b16dd19ba54e21c2e930e9b748d743de3b385f5\nF ext/fts5/fts5parse.y eb526940f892ade5693f22ffd6c4f2702543a9059942772526eac1fde256bb05\nF ext/fts5/mkportersteps.tcl 5acf962d2e0074f701620bb5308155fa1e4a63ba\nF ext/fts5/test/fts5_common.tcl b01c584144b5064f30e6c648145a2dd6bc440841\nF ext/fts5/test/fts5aa.test 5bd43427b7d08ce2e19c488a26534be450538b9232d4d5305049e8de236e9aa9\nF ext/fts5/test/fts5ab.test 9205c839332c908aaad2b01ab8670ece8b161e8f2ec8a9fabf18ca9385880bb7\nF ext/fts5/test/fts5ac.test a7aa7e1fefc6e1918aa4d3111d5c44a09177168e962c5fd2cca9620de8a7ed6d\nF ext/fts5/test/fts5ad.test e8cf959dfcd57c8e46d6f5f25665686f3b6627130a9a981371dafdf6482790de\nF ext/fts5/test/fts5ae.test 1142d16d9cc193894dc13cc8f9c7a8a21411ac61b5567a878514df6f9f0d7bb7\nF ext/fts5/test/fts5af.test 724247405b13f8f06cc6ce464dc4f152dc5dd4e86b12c2099685d8f19747bf7b\nF ext/fts5/test/fts5ag.test 7816f25a0707578f08145ab539fc0ca025f8951e788b28a6a18a06b2099469dd\nF ext/fts5/test/fts5ah.test 27b5a33bfd0363ca8a4dc659e6e2a5df3dea1c3c5b04bc51ca6aeb1277bd9b21\nF ext/fts5/test/fts5ai.test bc97e4758cc93e06bf851d61c98fdf4e8b8f8315ee28a84fb15f916360856414\nF ext/fts5/test/fts5aj.test 745020852d85f5dd49d11cb7ad11d3cc6dafc4fe6d6d24bc0875ac8f43ee4149\nF ext/fts5/test/fts5ak.test fc3595f8e6873bb86d70c9bd4b67d0413ce577bd4793c39a2b60a7b8825b60a6\nF ext/fts5/test/fts5al.test 00c4c1c6a1366b73aa48ce2068c634520867c3cf7f5d1676ebbb775ee1f35734\nF ext/fts5/test/fts5alter.test 5565f7e4605512b69171ac18ca84398603f9f6456dbe377beeca97e83cc242cd\nF ext/fts5/test/fts5auto.test 78989e6527ce69c9eddbef7392fea5c10b0010cd2b2ae68eec7bc869c471e691\nF ext/fts5/test/fts5aux.test ebf6f2ff7cb556e83f66991b7f12bff016d3c83d4eab36704b649dd6b1437318\nF ext/fts5/test/fts5auxdata.test eacc97ff04892f1a5f3d4df5a73f8bcbc3955ea1d12c9f24137eb1fc079e7611\nF ext/fts5/test/fts5bigpl.test 6466c89b38439f0aba26ac09e232a6b963f29b1cbe1304f6a664fe1e7a8f5fd3\nF ext/fts5/test/fts5bigtok.test 541119e616c637caea925a8c028c37c2c29e94383e00aa2f9198d530724b6e36\nF ext/fts5/test/fts5cat.test daba0b80659460b0cb60bd1f40b402478a761fe7ea414c3c94c2be25568cc33a\nF ext/fts5/test/fts5circref.test f880dfd0d99f6fb73b88ccacb0927d18e833672fd906cc47d6b4e529419eaa62\nF ext/fts5/test/fts5colset.test a30473451321bbf0b6218af62e96b4ae5fa99931cfdb210b5ecc804623b30f75\nF ext/fts5/test/fts5columnsize.test 45459ce4dd9fd853b6044cdc9674921bff89e3d840f348ca8c1630f9edbf5482\nF ext/fts5/test/fts5config.test 60094712debc59286c59aef0e6cf511c37d866802776a825ce437d26afe0817f\nF ext/fts5/test/fts5conflict.test 655925678e630d3cdf145d18725a558971806416f453ac8410ca8c04d934238d\nF ext/fts5/test/fts5connect.test 08030168fc96fc278fa81f28654fb7e90566f33aff269c073e19b3ae9126b2f4\nF ext/fts5/test/fts5content.test 213506436fb2c87567b8e31f6d43ab30aab99354cec74ed679f22aad0cdbf283\nF ext/fts5/test/fts5corrupt.test 77ae6f41a7eba10620efb921cf7dbe218b0ef232b04519deb43581cb17a57ebe\nF ext/fts5/test/fts5corrupt2.test 7453752ba12ce91690c469a6449d412561cc604b1dec994e16ab132952e7805f\nF ext/fts5/test/fts5corrupt3.test 5aaa2f8b44a85246a2ea76db1695bde38a75802979f3961702afa8f322d331c8\nF ext/fts5/test/fts5corrupt4.test ea805c4d7c68b5f185b9db5d2060a7ae5875339738dd48203c92162f41e7ca91\nF ext/fts5/test/fts5delete.test cbf87e3b8867c4d5cfcaed975c7475fd3f99d072bce2075fcedf43d1f82af775\nF ext/fts5/test/fts5detail.test 31b240dbf6d44ac3507e2f8b65f29fdc12465ffd531212378c7ce1066766f54e\nF ext/fts5/test/fts5determin.test 1b77879b2ae818b5b71c859e534ee334dac088b7cf3ff3bf76a2c82b1c788d11\nF ext/fts5/test/fts5dlidx.test b90852c55881b29dbac6380b274de27beae623ac4b6d567c6c8fb9cdc315a86e\nF ext/fts5/test/fts5doclist.test e39a6001495f1dc68e20323586ac965787986c2bf6f515b9b0285627b089d9e6\nF ext/fts5/test/fts5ea.test b01e3a18cdfabbff8104a96a5242a06a68a998a0\nF ext/fts5/test/fts5eb.test af1cd2d2cdff343bd40fd8ad9278e9161bfca81ad629e5aaa8c60a868b16044f\nF ext/fts5/test/fts5fault1.test d28a65caee75db6897c3cf1358c5230d3bb2a3bf7fb31062c19c7e5382b3d2bd\nF ext/fts5/test/fts5fault2.test 69c8fdbef830cd0d450908d4504d5bb86609e255af99c421c20a0756251fe344\nF ext/fts5/test/fts5fault3.test da2f9e3e56ff5740d68ebdd6877c97089e7ed28ddff28a0da87a6afea27e5522\nF ext/fts5/test/fts5fault4.test 1c1db5fcfe59401e7833146100f1d8de284a0a686fac31ddac9fb56c459f725b\nF ext/fts5/test/fts5fault5.test a336e4e11847de24c9497f80cce18e00bb3fab7fb11f97d04eb9af898900a762\nF ext/fts5/test/fts5fault6.test a0fc0a8f99e4b16500c31dfc7e38e1defe0f1693ac47650517ac7b723b1956f8\nF ext/fts5/test/fts5fault7.test 0acbec416edb24b8881f154e99c31e9ccf73f539cfcd164090be139e9e97ed4c\nF ext/fts5/test/fts5fault8.test 318238659d35f82ad215ecb57ca4c87486ea85d45dbeedaee42f148ff5105ee2\nF ext/fts5/test/fts5fault9.test 098e6b894bbdf9b2192f994a30f4043673fb3f338b6b8ab1624c704422f39119\nF ext/fts5/test/fts5faultA.test be4487576bff8c22cee6597d1893b312f306504a8c6ccd3c53ca85af12290c8c\nF ext/fts5/test/fts5faultB.test d606bdb8e81aaeb6f41de3fc9fc7ae315733f0903fbff05cf54f5b045b729ab5\nF ext/fts5/test/fts5faultD.test cc5d1225556e356615e719c612e845d41bff7d5a\nF ext/fts5/test/fts5first.test 3fcf2365c00a15fc9704233674789a3b95131d12de18a9b996159f6909dc8079\nF ext/fts5/test/fts5full.test e1701a112354e0ff9a1fdffb0c940c576530c33732ee20ac5e8361777070d717\nF ext/fts5/test/fts5fuzz1.test 238d8c45f3b81342aa384de3e581ff2fa330bf922a7b69e484bbc06051a1080e\nF ext/fts5/test/fts5hash.test a4cf51acad99bfc43c16fb74f9d22495dc221ae0701fc5e908ca963a9b26a02b\nF ext/fts5/test/fts5integrity.test 4317561cd25eca7df16aa1f7d1a700ee958059fa639785f94aba0a84df9ab17b\nF ext/fts5/test/fts5interrupt.test 09613247b273a99889808ef852898177e671406fe71fdde7ea00e78ea283d227\nF ext/fts5/test/fts5lastrowid.test be98fe3e03235296585b72daad7aed5717ba0062bae5e5c18dd6e04e194c6b28\nF ext/fts5/test/fts5leftjoin.test c0b4cafb9661379e576dc4405c0891d8fcc2782680740513c4d1fc114b43d4ad\nF ext/fts5/test/fts5matchinfo.test 50d86da66ec5b27603dcd90ba0227f5d9deb10351cbc52974a88e24f6fc9b076\nF ext/fts5/test/fts5merge.test e92a8db28b45931e7a9c7b1bbd36101692759d00274df74d83fd29d25d53b3a6\nF ext/fts5/test/fts5merge2.test 3ebad1a59d6ad3fb66eff6523a09e95dc6367cbefb3cd73196801dea0425c8e2\nF ext/fts5/test/fts5misc.test a5b53328b5b79275915de8f67ae85905eb2133d8dbcc808411f67c094b1bd347\nF ext/fts5/test/fts5multi.test a15bc91cdb717492e6e1b66fec1c356cb57386b980c7ba5af1915f97fe878581\nF ext/fts5/test/fts5multiclient.test 5ff811c028d6108045ffef737f1e9f05028af2458e456c0937c1d1b8dea56d45\nF ext/fts5/test/fts5near.test 211477940142d733ac04fad97cb24095513ab2507073a99c2765c3ddd2ef58bd\nF ext/fts5/test/fts5onepass.test f9b7d9b2c334900c6542a869760290e2ab5382af8fbd618834bf1fcc3e7b84da\nF ext/fts5/test/fts5optimize.test 36a752d24c818792032e4ff502936fc9cc5ef938721696396fdc79214b2717f1\nF ext/fts5/test/fts5phrase.test 13e5d8e9083077b3d9c74315b3c92ec723cc6eb37c8155e0bfe1bba00559f07b\nF ext/fts5/test/fts5plan.test 771b999d161e24fd803ce0290adb7c6e7c9b9cc2c6a0adb344813fb89473aa32\nF ext/fts5/test/fts5porter.test 8d08010c28527db66bc3feebd2b8767504aaeb9b101a986342fa7833d49d0d15\nF ext/fts5/test/fts5porter2.test 0d251a673f02fa13ca7f011654873b3add20745f7402f108600a23e52d8c7457\nF ext/fts5/test/fts5prefix.test a0fa67b06650f2deaa7bf27745899d94e0fb547ad9ecbd08bfad98c04912c056\nF ext/fts5/test/fts5query.test ac363b17a442620bb0780e93c24f16a5f963dfe2f23dc85647b869efcfada728\nF ext/fts5/test/fts5rank.test c9fd4a1e36b4fa92d572ec13d846469b97da249d1c2f7fd3ee7e017ce46f2416\nF ext/fts5/test/fts5rebuild.test 55d6f17715cddbf825680dd6551efbc72ed916d8cf1cde40a46fc5d785b451e7\nF ext/fts5/test/fts5restart.test 835ecc8f449e3919f72509ab58056d0cedca40d1fe04108ccf8ac4c2ba41f415\nF ext/fts5/test/fts5rowid.test b8790ec170a8dc1942a15aef3db926a5f3061b1ff171013003d8297203a20ad6\nF ext/fts5/test/fts5simple.test a298670508c1458b88ce6030440f26a30673931884eb5f4094ac1773b3ba217b\nF ext/fts5/test/fts5simple2.test 258a1b0c590409bfa5271e872c79572b319d2a56554d0585f68f146a0da603f0\nF ext/fts5/test/fts5simple3.test d5c74a9d3ca71bd5dd5cacb7c55b86ea12cdddfc8b1910e3de2995206898380f\nF ext/fts5/test/fts5synonym.test 1651815b8008de170e8e600dcacc17521d765482ea8f074ae82cfa870d8bb7fb\nF ext/fts5/test/fts5synonym2.test b54cce5c34ec08ed616f646635538ae82e34a0e28f947ec60b6fadbc4b3fb17a\nF ext/fts5/test/fts5tok1.test ce6551e41ff56f30b69963577324624733bed0d1753589f06120d664d9cd45c9\nF ext/fts5/test/fts5tok2.test dcacb32d4a2a3f0dd3215d4a3987f78ae4be21a2\nF ext/fts5/test/fts5tokenizer.test ac3c9112b263a639fb0508ae73a3ee886bf4866d2153771a8e8a20c721305a43\nF ext/fts5/test/fts5umlaut.test a42fe2fe6387c40c49ab27ccbd070e1ae38e07f38d05926482cc0bccac9ad602\nF ext/fts5/test/fts5unicode.test 17056f4efe6b0a5d4f41fdf7a7dc9af2873004562eaa899d40633b93dc95f5a9\nF ext/fts5/test/fts5unicode2.test 9b3df486de05fb4bde4aa7ee8de2e6dae1df6eb90e3f2e242c9383b95d314e3e\nF ext/fts5/test/fts5unicode3.test 590c72e18195bda2446133f9d82d04a4e89d094bba58c75ae10f4afc6faa0744\nF ext/fts5/test/fts5unicode4.test 6463301d669f963c83988017aa354108be0b947d325aef58d3abddf27147b687\nF ext/fts5/test/fts5unindexed.test 9021af86a0fb9fc616f7a69a996db0116e7936d0db63892db6bafabbec21af4d\nF ext/fts5/test/fts5update.test b8affd796e45c94a4d19ad5c26606ea06065a0f162a9562d9f005b5a80ccf0bc\nF ext/fts5/test/fts5version.test c8f2cc105f0abf0224965f93e584633dee3e06c91478bc67e468f7cfdf97fd6a\nF ext/fts5/test/fts5vocab.test 648fb2fe86b55e08295e34504704718d92fba3e2cf3e1f5d72fa3682df4cd0f0\nF ext/fts5/test/fts5vocab2.test e0fdc3a3095f6eda68ac9bf9a443ff929a124d46f00af19933604085712e9d47\nF ext/fts5/tool/fts5speed.tcl b0056f91a55b2d1a3684ec05729de92b042e2f85\nF ext/fts5/tool/fts5txt2db.tcl 526a9979c963f1c54fd50976a05a502e533a4c59\nF ext/fts5/tool/loadfts5.tcl 95b03429ee6b138645703c6ca192c3ac96eaf093\nF ext/fts5/tool/mkfts5c.tcl d1c2a9ab8e0ec690a52316f33dd9b1d379942f45\nF ext/fts5/tool/showfts5.tcl d54da0e067306663e2d5d523965ca487698e722c\nF ext/icu/README.txt a295e91db742b153e8dce8f7efd31d28ad1eea4df31ef4daa3eedc85be2f5138\nF ext/icu/icu.c c2c7592574c08cd1270d909b8fb8797f6ea1f49e931e71dbcc25506b9b224580\nF ext/icu/sqliteicu.h 728867a802baa5a96de7495e9689a8e01715ef37\nF ext/lsm1/Makefile a553b728bba6c11201b795188c5708915cc4290f02b7df6ba7e8c4c943fd5cd9\nF ext/lsm1/Makefile.msc f8c878b467232226de288da320e1ac71c131f5ec91e08b21f502303347260013\nF ext/lsm1/lsm-test/README 87ea529d2abe615e856d4714bfe8bb185e6c2771b8612aa6298588b7b43e6f86\nF ext/lsm1/lsm-test/lsmtest.h cf58528ffe0cfe535e91b44584e2ec5fb1caacdabecef0d8dcf83bf83168bf28\nF ext/lsm1/lsm-test/lsmtest1.c ae6ba48a0851b39be69a7d0eb220bfb9521a526e926223d5014bd385df10abb3\nF ext/lsm1/lsm-test/lsmtest2.c 188b09aec776516aeedcfd13b9c6faf85ba16b3671a0897a2c740ee00a5dc4f8\nF ext/lsm1/lsm-test/lsmtest3.c 9ab87528a36dbf4a61d7c8ad954f5ee368c0878c127b84b942b2e2abe522de26\nF ext/lsm1/lsm-test/lsmtest4.c d258d6a245db5d8eaede096e2368d23f859c5e92c80ab9122463f708514fe10c\nF ext/lsm1/lsm-test/lsmtest5.c 8d5242a0f870d65eeada191c8945781fed9cb8ece3886573790ebd373b62dac5\nF ext/lsm1/lsm-test/lsmtest6.c 869cb4a172cd07d1a75b3aeaecd61d0a477787b3b8668bad0d3ff0f43b642b7c\nF ext/lsm1/lsm-test/lsmtest7.c 7a917455a0f956a8ed3f44f5c9387ec0ea6627714874464cc3fa5c5a9cabb2f2\nF ext/lsm1/lsm-test/lsmtest8.c 589b68c44531a0f04d5e879bb1e211be5f7100f48eed7e8631e07ed5cbd68f94\nF ext/lsm1/lsm-test/lsmtest9.c dd1a0ebf41134933a744d1e00e60429a2a21fc50d587ae7dd6bdb6e96d805bdc\nF ext/lsm1/lsm-test/lsmtest_bt.c d70d9a9be5eef9360af1251dd083948d74fd30137a08f61bef995f7ac04e037f\nF ext/lsm1/lsm-test/lsmtest_datasource.c 5d770be191d0ca51315926723009b2c25c0b4b8136840494ef710ac324aa916c\nF ext/lsm1/lsm-test/lsmtest_func.c 159aa401bc8032bfa3d8cf2977bd687abebab880255895a5eb45770d626fa38d\nF ext/lsm1/lsm-test/lsmtest_io.c cf11b27b129c6bd5818fa1d440176502dc27229f0db892b4479118d61993ea20\nF ext/lsm1/lsm-test/lsmtest_main.c a9bc647738c0dcaebf205d6d194b3ce4a6ef3925801cd2d919f0a4ea33a15aeb\nF ext/lsm1/lsm-test/lsmtest_mem.c 4e63c764345ab1df59d4f13a77980c6f3643798210b10d6cdbd785b4b888fda5\nF ext/lsm1/lsm-test/lsmtest_tdb.c 618a8619183fda4f5540fcde15f9068293c5e3180e1a246e34409b0c148758b3\nF ext/lsm1/lsm-test/lsmtest_tdb.h 8733eee249b12956a9df8322994b43d19bd8c02ad2e8b0bb5164db4d6ccc1735\nF ext/lsm1/lsm-test/lsmtest_tdb2.cc 99ea7f2dd9c7536c8fb9bdd329e4cfeb76899f3ddf6f48bdd3926e016922b715\nF ext/lsm1/lsm-test/lsmtest_tdb3.c 7a7ccae189f5bb25bcd1ec3bbd740529706eded7f6729a5a0a9eeaeb57785320\nF ext/lsm1/lsm-test/lsmtest_tdb4.c 47e8bb5eba266472d690fb8264f1855ebdba0ae5a0e541e35fcda61ebf1d277f\nF ext/lsm1/lsm-test/lsmtest_util.c 241622db5a332a09c8e6e7606b617d288a37b557f7d3bce0bb97809f67cc2806\nF ext/lsm1/lsm-test/lsmtest_win32.c 0e0a224674c4d3170631c41b026b56c7e1672b151f5261e1b4cc19068641da2d\nF ext/lsm1/lsm.h 0f6f64ff071471cb87bf98beb8386566f30ea001\nF ext/lsm1/lsmInt.h 5983690e05e83653cc01ba9d8fbf8455e534ddf8349ed9adedbf46a7549760b0\nF ext/lsm1/lsm_ckpt.c 0eabfaf812ddb4ea43add38f05e430694cd054eb622c3e35af4c43118a2d5321\nF ext/lsm1/lsm_file.c 3c51841d5b3e7da162693cbac9a9f47eeedf6bcbbe2969a4d25e30c428c9fe36\nF ext/lsm1/lsm_log.c a8bf334532109bba05b09a504ee45fc393828b0d034ca61ab45e3940709d9a7c\nF ext/lsm1/lsm_main.c b5703f8042e71d3a2d65e671f6832e077e79e89e9975818f67f969922618db63\nF ext/lsm1/lsm_mem.c 4c51ea9fa285ee6e35301b33491642d071740a0a\nF ext/lsm1/lsm_mutex.c 378edf0a2b142b4f7640ee982df06d50b98788ea\nF ext/lsm1/lsm_shared.c 76adfc1ed9ffebaf92746dde4b370ccc48143ca8b05b563816eadd2aadf1c525\nF ext/lsm1/lsm_sorted.c 6f7d8cf7a7d3d3f1ab5d9ba6347e8f39f3d73c00ec48afcd0c4bcbefd806f9b8\nF ext/lsm1/lsm_str.c 65e361b488c87b10bf3e5c0070b14ffc602cf84f094880bece77bbf6678bca82\nF ext/lsm1/lsm_tree.c 682679d7ef2b8b6f2fe77aeb532c8d29695bca671c220b0abac77069de5fb9fb\nF ext/lsm1/lsm_unix.c 57361bcf5b1a1a028f5d66571ee490e9064d2cfb145a2cc9e5ddade467bb551b\nF ext/lsm1/lsm_varint.c 43f954af668a66c7928b81597c14d6ad4be9fedbc276bbd80f52fa28a02fdb62\nF ext/lsm1/lsm_vtab.c 169bfe7ef8e6c9de9c77e17c4c50c9ae55fb0167d80be3d1be82c991184b6f35\nF ext/lsm1/lsm_win32.c 0a4acbd7e8d136dd3a5753f0a9e7a9802263a9d96cef3278cf120bcaa724db7c\nF ext/lsm1/test/lsm1_common.tcl 5ed4bab07c93be2e4f300ebe46007ecf4b3e20bc5fbe1dedaf04a8774a6d8d82\nF ext/lsm1/test/lsm1_simple.test a04d08e8661ae6fc53786c67f0bd102c6692f003e859dde03ed9ac3f12e066e5\nF ext/lsm1/tool/mklsm1c.tcl f31561bbee5349f0a554d1ad7236ac1991fc09176626f529f6078e07335398b0\nF ext/misc/README.md d6dd0fe1d8af77040216798a6a2b0c46c73054d2f0ea544fbbcdccf6f238c240\nF ext/misc/amatch.c 50a9ef2d38dabfa371f8c1904097d493271e63d58ccb0e9b79a4fa4a94e66660\nF ext/misc/anycollseq.c 5ffdfde9829eeac52219136ad6aa7cd9a4edb3b15f4f2532de52f4a22525eddb\nF ext/misc/appendvfs.c 3777f22ec1057dc4e5fd89f2fbddcc7a29fbeef1ad038c736c54411bb1967af7\nF ext/misc/blobio.c a867c4c4617f6ec223a307ebfe0eabb45e0992f74dd47722b96f3e631c0edb2a\nF ext/misc/btreeinfo.c 4f0ebf278f46e68e6306c667917766cebc5550fd35d5de17847988e22892d4d2\nF ext/misc/carray.c 91e9a7f512fda934894bed30464552fffa7d3073b5be04189ae0bd0c59f26bfd\nF ext/misc/closure.c dbfd8543b2a017ae6b1a5843986b22ddf99ff126ec9634a2f4047cd14c85c243\nF ext/misc/completion.c cec672d40604075bb341a7f11ac48393efdcd90a979269b8fe7977ea62d0547f\nF ext/misc/compress.c dd4f8a6d0baccff3c694757db5b430f3bbd821d8686d1fc24df55cf9f035b189\nF ext/misc/csv.c 7f047aeb68f5802e7ce6639292095d622a488bb43526ed04810e0649faa71ceb\nF ext/misc/dbdata.c e316fba936571584e55abd5b974a32a191727a6b746053a0c9d439bd2cf93940\nF ext/misc/dbdump.c baf6e37447c9d6968417b1cd34cbedb0b0ab3f91b5329501d8a8d5be3287c336\nF ext/misc/eval.c 4b4757592d00fd32e44c7a067e6a0e4839c81a4d57abc4131ee7806d1be3104e\nF ext/misc/explain.c d5c12962d79913ef774b297006872af1fccda388f61a11d37758f9179a09551f\nF ext/misc/fileio.c 288e7230e0fe464d71b0694e2d8bdd3a353118ac2e31da3964b95f460f09915f\nF ext/misc/fossildelta.c 7708651072eb5620ab21bbfb518d184f27b2c29c0131b09b9a2d8852a8016430\nF ext/misc/fuzzer.c c4e27daf41433a64cad5265cd27dbcb891147e9994d0422200ce81ce9a54b625\nF ext/misc/ieee754.c f190d0cc5182529acb15babd177781be1ac1718c\nF ext/misc/json1.c 760107d0b97ab422952591b0d7519327dcb482954a7706ee387a54c135f8aabf\nF ext/misc/memstat.c 3017a0832c645c0f8c773435620d663855f04690172316bd127270d1a7523d4d\nF ext/misc/memtrace.c 7c0d115d2ef716ad0ba632c91e05bd119cb16c1aedf3bec9f06196ead2d5537b\nF ext/misc/memvfs.c ab36f49e02ebcdf85a1e08dc4d8599ea8f343e073ac9e0bca18a98b7e1ec9567\nF ext/misc/mmapwarm.c 8c5fe90d807a23e44a8b93e96e8b812b19b300d5fd8c1d40a4fd1d8224e33f46\nF ext/misc/nextchar.c 279f80fe8ef5ba413242e2704e246503ac601f005eefb180d19e6c920338a0ba\nF ext/misc/normalize.c b4290464f542bae7a97b43f15bd197949b833ffd668b7c313631bd5d4610212c\nF ext/misc/percentile.c 148dd07286b16e50f232bb638a47850085ad37d51f270429905bd865e595d1ca\nF ext/misc/prefixes.c 7be86d17525cfae6ed462fc3c519efc44488ac329890f77491c8f82871f57e17\nF ext/misc/regexp.c 653b6ab5e89bcb5d45f9ebe0747d7f8f3f5706cac963fcbc9a3ddbe5fdc1efa2\nF ext/misc/remember.c add730f0f7e7436cd15ea3fd6a90fd83c3f706ab44169f7f048438b7d6baa69c\nF ext/misc/rot13.c 540a169cb0d74f15522a8930b0cccdcb37a4fd071d219a5a083a319fc6e8db77\nF ext/misc/scrub.c db9fff56fed322ca587d73727c6021b11ae79ce3f31b389e1d82891d144f22ad\nF ext/misc/series.c 0c97f63378fddc9f425e82ba139b9aaf902211f24ced115c2b6ae12b425f7334\nF ext/misc/sha1.c d8125a88ee9023bc17d6f87ea8850db33f906d5701b30d4fd9bddb57f231e60a\nF ext/misc/shathree.c 22ba7ca84a433d6466a7d05dcc876910b435a715da8cc462517db9351412b8c8\nF ext/misc/showauth.c 732578f0fe4ce42d577e1c86dc89dd14a006ab52\nF ext/misc/spellfix.c f88ecb2c0294453ce8b7704b211f5350c41b085b38c8e056852e3a08b0f5e484\nF ext/misc/sqlar.c 57d5bc45cd5492208e451f697404be88f8612527d64c9d42f96b325b64983d74\nF ext/misc/stmt.c 8a8dc4675042e4551e4afe99b8d0cc7a4a2fc1a8dacc0a9ce1b1bbff145da93d\nF ext/misc/templatevtab.c 8a16a91a5ceaccfcbd6aaaa56d46828806e460dd194965b3f77bf38f14b942c4\nF ext/misc/totype.c 5b6b1eafaa993e29f8df843319b3292b029f1b5cbbbf11c8a88e05d3f714159f\nF ext/misc/unionvtab.c 36237f0607ca954ac13a4a0e2d2ac40c33bc6e032a5f55f431713061ef1625f9\nF ext/misc/uuid.c db4db81e8c6a92ad6176ebd9f81dcb6870e331e1a286d0452f4319e3ba3df812\nF ext/misc/vfslog.c 3b25c2f56ba60788db247287be6ab024b53c4afffd412b4876db563389be0d35\nF ext/misc/vfsstat.c 77b5b4235c9f7f11eddf82487c0a422944ac2f132dafd5af3be7a68a057b1cdb\nF ext/misc/vtablog.c 5538acd0c8ddaae372331bee11608d76973436b77d6a91e8635cfc9432fba5ae\nF ext/misc/vtshim.c 1976e6dd68dd0d64508c91a6dfab8e75f8aaf6cd\nF ext/misc/wholenumber.c 784b12543d60702ebdd47da936e278aa03076212\nF ext/misc/zipfile.c 7ad29133e304e40c8fe239bea10e101580ed56bc68c16d992af514cce19572d0\nF ext/misc/zorder.c b0ff58fa643afa1d846786d51ea8d5c4b6b35aa0254ab5a82617db92f3adda64\nF ext/rbu/rbu.c 8681f6157db6adc82c34af24b14ea8a3be0146ad2a3b6c1d5da6cb8a5796c8ce\nF ext/rbu/rbu1.test 221d9c18a5e600ac9ac6b1810d99d9f99163a7909ba61597876ab6e4d4beb3d6\nF ext/rbu/rbu10.test 0a201c32202143f23c81c0144503da339786fc20acb7a2fda11601b65659f314\nF ext/rbu/rbu11.test 5c834cf491086b45e071eabf71f708febc143e86a384a92de69e0b1a4cace144\nF ext/rbu/rbu12.test 29f8b2118f6c96fac3755bd6d2b55c2db24f878b1f11fbfbe294f3a230a3dcdc\nF ext/rbu/rbu13.test 1285298e3360ec74511764841b3c174dcfe21da2f618c22febf1a20abd0365c2\nF ext/rbu/rbu14.test 4a7bf0b3a4516d3ab0bc0ba4ceb53eb7e3324147ccda152e561060f659dbba31\nF ext/rbu/rbu3.test d6c6cc7a1326e8e23b9820f30bd3054f22092e503fadfd2a660ae006653f6d80\nF ext/rbu/rbu5.test 724b38ea5f722e3d22dc76343860bd998bb676c3f78c4bc8175df5c5d7720e23\nF ext/rbu/rbu6.test 401064236d3cf86b7edc01c586d7c5554f48553946fbfa1a3af35d7e47dce9e3\nF ext/rbu/rbu7.test ae25f47b56f178197fc1098537a35a39176cc73d1629b03dc9d795929fc36ec2\nF ext/rbu/rbu8.test b98a6fc58ead84a0e6ddee775b9702cd981f318d5d4fd1d4df0fa0c40db7251b\nF ext/rbu/rbu9.test 0e4d985e25620d61920597e8ea69c871c9e8c1f5a0be2ae9fa70bb641d74378c\nF ext/rbu/rbuA.test b34a90cb495682c25b5fc03a9d5e7a4fc99541c29256f25e2e2a4f6542b4f5b3\nF ext/rbu/rbuB.test 52b07158824c6927b7e25554ace92a695cdebfc296ae3d308ac386984aded9bc\nF ext/rbu/rbuC.test 80f1cc2fb74f44b1128fd0ed8eedab3a76fefeb72a947860e2869ef76fc8dc6b\nF ext/rbu/rbu_common.tcl 60d904133ff843fe72cc0514e9dd2486707181e6e0fbab20979da28c48d21de9\nF ext/rbu/rbucollate.test cac528a9a46318cba42e61258bb42660bbbf4fdb9a8c863de5a54ad0c658d197\nF ext/rbu/rbucrash.test 000981a1fe8a6e4d9a684232f6a129e66a3ef595f5ed74655e2f9c68ffa613b4\nF ext/rbu/rbucrash2.test efa143cc94228eb0266d3f1abfbee60a5838a84cef7cc3fcb8c145b74d96fd41\nF ext/rbu/rbudiff.test 156957851136b63c143478518dc1bda6c832103cdbe8ac1d7cdd47edb3cbe0a3\nF ext/rbu/rbudor.test e3e8623926012f43eebe51fedf06a102df2640750d971596b052495f2536db20\nF ext/rbu/rbuexpr.test 10d0420537c3bc7666e576d72adeffe7e86cfbb00dcc30aa9ce096c042415190\nF ext/rbu/rbufault.test 2d7f567b79d558f6e093c58808cab4354f8a174e3802f69e7790a9689b3c09f8\nF ext/rbu/rbufault2.test c81327a3ac2c385b9b954db3644d4e0df93eeebfc3de9f1f29975a1e73fd3d0c\nF ext/rbu/rbufault3.test b2fcc9db5c982b869f67d1d4688d8cb515d5b92f58011fff95665f2e62cec179\nF ext/rbu/rbufault4.test 03d2849c3df7d7bd14a622e789ff049e5080edd34a79cd432e01204db2a5930a\nF ext/rbu/rbufts.test 0ae8d1da191c75bd776b86e24456db0fb6e97b7c944259fae5407ea55d23c31d\nF ext/rbu/rbumisc.test 329986cf5dd51890c4eb906c2f960ebb773a79a64bed90f506b7c417825b37eb\nF ext/rbu/rbumulti.test 5fb139058f37ddc5a113c5b93238de915b769b7792de41b44c983bc7c18cf5b9\nF ext/rbu/rbupartial.test f25df014b8dbe3c5345851fba6e66f79ab237f57dc201b2d5f0dbae658ae5a4c\nF ext/rbu/rbuprogress.test 857cf1f8166c83ef977edb9ef4fc42d80f71fbd798652b46ae2f3a7031870f8d\nF ext/rbu/rburesume.test dbdc4ca504e9c76375a69e5f0d91205db967dcc509a5166ca80231f8fda49eb1\nF ext/rbu/rbusave.test f4190a1a86fccf84f723af5c93813365ae33feda35845ba107b59683d1cdd926\nF ext/rbu/rbusplit.test b37e7b40b38760881dc9c854bd40b4744c6b6cd74990754eca3bda0f407051e8\nF ext/rbu/rbutemplimit.test 05ceefa90a2e26a99f40dd48282ed63a00df5e59c1f2bfd479c143e201a1b0ba\nF ext/rbu/rbuvacuum.test 55e101e90168c2b31df6c9638fe73dc7f7cc666b6142266d1563697d79f73534\nF ext/rbu/rbuvacuum2.test b8e5b51dc8b2c0153373d024c0936be3f66f9234acbd6d0baab0869d56b14e6b\nF ext/rbu/rbuvacuum3.test 8addd82e4b83b4c93fa47428eae4fd0dbf410f8512c186f38e348feb49ba03dc\nF ext/rbu/rbuvacuum4.test a78898e438a44803eb2bc897ba3323373c9f277418e2d6d76e90f2f1dbccfd10\nF ext/rbu/sqlite3rbu.c f3a3e09f575157052813be667d6ab3b54f47fb02e6e1c9f767ad7bb8f1fb90b3\nF ext/rbu/sqlite3rbu.h 1dc88ab7bd32d0f15890ea08d23476c4198d3da3056985403991f8c9cd389812\nF ext/rbu/test_rbu.c 03f6f177096a5f822d68d8e4069ad8907fe572c62ff2d19b141f59742821828a\nF ext/repair/README.md 92f5e8aae749a4dae14f02eea8e1bb42d4db2b6ce5e83dbcdd6b1446997e0c15\nF ext/repair/checkfreelist.c 0dbae18c1b552f58d64f8969e4fb1e7f11930c60a8c2a9a8d50b7f15bdfd54bd\nF ext/repair/checkindex.c 7d28c01a2e012ac64257d230fc452b2cafb78311a91a343633d01d95220f66f3\nF ext/repair/sqlite3_checker.c.in 4a5a3af3f450fe503e5a2985e98516dc2a6b9ad247449e284c1cf140fc91720f\nF ext/repair/sqlite3_checker.tcl a9a2caa9660567257c177a91124d8c0dccdfa341e25c51e6da7f1fd9e601eafa\nF ext/repair/test/README.md 34b2f542cf5be7bffe479242b33ee3492cea30711e447cc4a1a86cb5915f419e\nF ext/repair/test/checkfreelist01.test 3e8aa6aeb4007680c94a8d07b41c339aa635cc78249442da72ff3f8297398a69\nF ext/repair/test/checkindex01.test b530f141413b587c9eb78ff734de6bb79bc3515c335096108c12c01bddbadcec\nF ext/repair/test/test.tcl 686d76d888dffd021f64260abf29a55c57b2cedfa7fc69150b42b1d6119aac3c\nF ext/rtree/README 6315c0d73ebf0ec40dedb5aa0e942bc8b54e3761\nF ext/rtree/geopoly.c c591164125808f8bba9659e92665b78412cd263e654b6f05294f3a8da7cdd9fb\nF ext/rtree/rtree.c 26fcb3f7a92fda9afcf5eee684cc3188b7367da69bc9c374492d844fb8ed4e25\nF ext/rtree/rtree.h 4a690463901cb5e6127cf05eb8e642f127012fd5003830dbc974eca5802d9412\nF ext/rtree/rtree1.test 4092a8bd2b5eafc4fafe4fe9024249c12b13e4bab23c2c3eaff57412fdf805fa\nF ext/rtree/rtree2.test 9d9deddbb16fd0c30c36e6b4fdc3ee3132d765567f0f9432ee71e1303d32603d\nF ext/rtree/rtree3.test 4ee5d7df86040efe3d8d84f141f2962a7745452200a7cba1db06f86d97050499\nF ext/rtree/rtree4.test 304de65d484540111b896827e4261815e5dca4ce28eeecd58be648cd73452c4b\nF ext/rtree/rtree5.test 49c9041d713d54560b315c2c7ef7207ee287eba1b20f8266968a06f2e55d3142\nF ext/rtree/rtree6.test 1252a0439da01d2f1f5cbbdeeb80455a2d68b9bae2a9787937b167a5e3957828\nF ext/rtree/rtree7.test c8fb2e555b128dd0f0bdb520c61380014f497f8a23c40f2e820acc9f9e4fdce5\nF ext/rtree/rtree8.test 2d99006a1386663978c9e1df167554671e4f711c419175b39f332719deb1ce0e\nF ext/rtree/rtree9.test c646f12c8c1c68ef015c6c043d86a0c42488e2e68ed1bb1b0771a7ca246cbabf\nF ext/rtree/rtreeA.test ed2f1be9c06dde0b1ab93a95dd9e87eeaa02db2d30bcb4b9179b69ee3dc3319b\nF ext/rtree/rtreeB.test 4cec297f8e5c588654bbf3c6ed0903f10612be8a2878055dd25faf8c71758bc9\nF ext/rtree/rtreeC.test 6aa87eba4d9a3003b941a1ba77db259c5cabc3fd92fc5a6360f5369520eb9a4d\nF ext/rtree/rtreeD.test fe46aa7f012e137bd58294409b16c0d43976c3bb92c8f710481e577c4a1100dc\nF ext/rtree/rtreeE.test e65d3fc625da1800b412fc8785817327d43ccfec5f5973912d8c9e471928caa9\nF ext/rtree/rtreeF.test 81ffa7ef51c4e4618d497a57328c265bf576990c7070633b623b23cd450ed331\nF ext/rtree/rtreeG.test 1b9ca6e3effb48f4161edaa463ddeaa8fca4b2526d084f9cbf5dbe4e0184939c\nF ext/rtree/rtreeH.test 0885151ee8429242625600ae47142cca935332c70a06737f35af53a7bd7aaf90\nF ext/rtree/rtreeI.test 608e77f7fde9be5a12eae316baef640fffaafcfa90a3d67443e78123e19c4ca4\nF ext/rtree/rtree_perf.tcl 6c18c1f23cd48e0f948930c98dfdd37dfccb5195\nF ext/rtree/rtree_util.tcl db734b4c5e75fed6acc56d9701f2235345acfdec750b5fc7b587936f5f6bceed\nF ext/rtree/rtreecheck.test d67d5b3e9e45bfa8cd90734e8e9302144ac415b8e9176c6f02d4f92892ee8a35\nF ext/rtree/rtreecirc.test aec664eb21ae943aeb344191407afff5d392d3ae9d12b9a112ced0d9c5de298e\nF ext/rtree/rtreeconnect.test 225ad3fcb483d36cbee423a25052a6bbae762c9576ae9268332360c68c170d3d\nF ext/rtree/rtreefuzz001.test eef1ed593bb15886cd5d5367a2f2492f81e315848896cdf7afb6e21454978827\nF ext/rtree/sqlite3rtree.h 03c8db3261e435fbddcfc961471795cbf12b24e03001d0015b2636b0f3881373\nF ext/rtree/tkt3363.test 142ab96eded44a3615ec79fba98c7bde7d0f96de\nF ext/rtree/util/randomshape.tcl 54ee03d0d4a1c621806f7f44d5b78d2db8fac26e0e8687c36c4bd0203b27dbff\nF ext/rtree/viewrtree.tcl eea6224b3553599ae665b239bd827e182b466024\nF ext/rtree/visual01.txt e9c2564083bcd30ec51b07f881bffbf0e12b50a3f6fced0c222c5c1d2f94ac66\nF ext/session/changeset.c 7a1e6a14c7e92d36ca177e92e88b5281acd709f3b726298dc34ec0fb58869cb5\nF ext/session/changesetfuzz.c 227076ab0ae4447d742c01ee88a564da6478bbf26b65108bf8fac9cd8b0b24aa\nF ext/session/changesetfuzz1.test 2e1b90d888fbf0eea5e1bd2f1e527a48cc85f8e0ff75df1ec4e320b21f580b3a\nF ext/session/session1.test 0b2f88995832ea040ae8e83a1ad4afa99c00b85c779d213da73a95ea4113233e\nF ext/session/session2.test 284de45abae4cc1082bc52012ee81521d5ac58e0\nF ext/session/session3.test ce9ce3dfa489473987f899e9f6a0f2db9bde3479\nF ext/session/session4.test 6778997065b44d99c51ff9cece047ff9244a32856b328735ae27ddef68979c40\nF ext/session/session5.test 716bc6fafd625ce60dfa62ae128971628c1a1169\nF ext/session/session6.test 443789bc2fca12e4f7075cf692c60b8a2bea1a26\nF ext/session/session8.test 8e194b3f655d861ca36de5d4de53f702751bab3b\nF ext/session/session9.test 5409d90d8141881d08285ed1c2c0d8d10fb92069\nF ext/session/sessionA.test 1feeab0b8e03527f08f2f1defb442da25480138f\nF ext/session/sessionB.test c4fb7f8a688787111606e123a555f18ee04f65bb9f2a4bb2aa71d55ce4e6d02c\nF ext/session/sessionC.test f8a5508bc059ae646e5ec9bdbca66ad24bc92fe99fda5790ac57e1f59fce2fdf\nF ext/session/sessionD.test 4f91d0ca8afc4c3969c72c9f0b5ea9527e21de29039937d0d973f821e8470724\nF ext/session/sessionE.test b2010949c9d7415306f64e3c2072ddabc4b8250c98478d3c0c4d064bce83111d\nF ext/session/sessionF.test d37ed800881e742c208df443537bf29aa49fd56eac520d0f0c6df3e6320f3401\nF ext/session/sessionG.test 3828b944cd1285f4379340fd36f8b64c464fc84df6ff3ccbc95578fd87140b9c\nF ext/session/sessionH.test a417559f29a7e775950fc5fc82b3d01256a7cbe793ddf1180df234df823d56e2\nF ext/session/session_common.tcl 29ec9910aca1e996ca1c8531b8cecabf96eb576aa53de65a8ff03d848b9a2a8b\nF ext/session/session_speed_test.c dcf0ef58d76b70c8fbd9eab3be77cf9deb8bc1638fed8be518b62d6cbdef88b3\nF ext/session/sessionat.test efe88965e74ff1bc2af9c310b28358c02d420c1fb2705cc7a28f0c1cc142c3ec\nF ext/session/sessiondiff.test ad13dd65664bae26744e1f18eb3cbd5588349b7e9118851d8f9364248d67bcec\nF ext/session/sessionfault.test da273f2712b6411e85e71465a1733b8501dbf6f7\nF ext/session/sessionfault2.test dd593f80b6b4786f7adfe83c5939620bc505559770cc181332da26f29cddd7bb\nF ext/session/sessioninvert.test ae1a003a9ab1f8d64227dbb5c3a4c97e65b561b01e7b2953cf48683fb2724169\nF ext/session/sessionrebase.test ccfa716b23bd1d3b03217ee58cfd90c78d4b99f53e6a9a2f05e82363b9142810\nF ext/session/sessionstat1.test 218d351cf9fcd6648f125a26b607b140310160184723c2666091b54450a68fb5\nF ext/session/sessionwor.test 67b5ab91d4f93ce65ff1f58240ac5ddf73f8670facc1ffa49cef56293d52818d\nF ext/session/sqlite3session.c a4dfb372f270df93422b0dc7666fd46849e6979b62a152f11287c21eed4ac21b\nF ext/session/sqlite3session.h a2db5b72b938d12c727b4b4ec632254ca493670a9c0de597af3271a7f774fc57\nF ext/session/test_session.c 98797aba475a799376c9a42214f2d1debf2d0c3cb657d9c8bbf4f70bf3fb4aec\nF ext/userauth/sqlite3userauth.h 7f3ea8c4686db8e40b0a0e7a8e0b00fac13aa7a3\nF ext/userauth/user-auth.txt e6641021a9210364665fe625d067617d03f27b04\nF ext/userauth/userauth.c f81aa5a3ecacf406f170c62a144405858f6f6de51dbdc0920134e629edbe2648\nF install-sh 9d4de14ab9fb0facae2f48780b874848cbf2f895 x\nF ltmain.sh 3ff0879076df340d2e23ae905484d8c15d5fdea8\nF magic.txt 8273bf49ba3b0c8559cb2774495390c31fd61c60\nF main.mk 7ce055f3df31a4f7d21e38f493f907c21db1f673863a573e231f55e2ab005023\nF mkso.sh fd21c06b063bb16a5d25deea1752c2da6ac3ed83\nF mptest/config01.test 3c6adcbc50b991866855f1977ff172eb6d901271\nF mptest/config02.test 4415dfe36c48785f751e16e32c20b077c28ae504\nF mptest/crash01.test 61e61469e257df0850df4293d7d4d6c2af301421\nF mptest/crash02.subtest f4ef05adcd15d60e5d2bd654204f2c008b519df8\nF mptest/mptest.c aa41ace6dbc5050d76b02548d3521e6bbccae4f0\nF mptest/multiwrite01.test dab5c5f8f9534971efce679152c5146da265222d\nF spec.template 86a4a43b99ebb3e75e6b9a735d5fd293a24e90ca\nF sqlite.pc.in 42b7bf0d02e08b9e77734a47798d1a55a9e0716b\nF sqlite3.1 fc7ad8990fc8409983309bb80de8c811a7506786\nF sqlite3.pc.in 48fed132e7cb71ab676105d2a4dc77127d8c1f3a\nF src/alter.c ef3519bcc3da6e1d8c0bda63233fb315c99f08e8cd74fe3afb9eeaa2b424bfd4\nF src/analyze.c b3ceec3fc052df8a96ca8a8c858d455dc5029ba681b4be98bb5c5a9162cfa58c\nF src/attach.c b30c44333d55a68c0a12920b5b9d40b254cbd3d4509bda77417209eeed8b3d80\nF src/auth.c a3d5bfdba83d25abed1013a8c7a5f204e2e29b0c25242a56bc02bb0c07bf1e06\nF src/backup.c f70077d40c08b7787bfe934e4d1da8030cb0cc57d46b345fba2294b7d1be23ab\nF src/bitvec.c 17ea48eff8ba979f1f5b04cc484c7bb2be632f33\nF src/btmutex.c 8acc2f464ee76324bf13310df5692a262b801808984c1b79defb2503bbafadb6\nF src/btree.c d22498af716953400e314d2d98d1dac3ea5c3b01e0fd243ef9e9b132c74114ec\nF src/btree.h f27a33c49280209a93385e218306c4ee5f46ba8d7649d2f81a7166b282232484\nF src/btreeInt.h 91806f01fd1145a9a86ba3042f25c38d8faf6002701bf5e780742cf88bcff437\nF src/build.c 7c277ccc24c249b84f29ba829b0ed377e78487c93d17d999798641be0c20fad5\nF src/callback.c 88615dfc0a82167b65b452b4b305dbf86be77200b3343c6ffc6d03e92a01d181\nF src/complete.c a3634ab1e687055cd002e11b8f43eb75c17da23e\nF src/ctime.c 1b0724e66f95f33b160b1af85caaf9cceb325d22abf39bd24df4f54a73982251\nF src/date.c e1d8ac7102f3f283e63e13867acb0efa33861cf34f0faf4cdbaf9fa7a1eb7041\nF src/dbpage.c 135eb3b5e74f9ef74bde5cec2571192c90c86984fa534c88bf4a055076fa19b7\nF src/dbstat.c 6c407e549406c10fde9ac3987f6d734459205239ad370369bc5fcd683084a4fa\nF src/delete.c a5c59b9c0251cf7682bc52af0d64f09b1aefc6781a63592c8f1136f7b73c66e4\nF src/expr.c 947911a1826673add2311e8650aeaf9c2809706dfaa45fc2445a5ff32f70693d\nF src/fault.c 460f3e55994363812d9d60844b2a6de88826e007\nF src/fkey.c 92a248ec0fa4ed8ab60c98d9b188ce173aaf218f32e7737ba77deb2a684f9847\nF src/func.c ed33e38cd642058182a31a3f518f2e34f4bbe53aa483335705c153c4d3e50b12\nF src/global.c a1a8d698762ddd9a1543aac26c1e0029b20fcc3fcb56bfa41ec8cea2368f2798\nF src/hash.c 8d7dda241d0ebdafb6ffdeda3149a412d7df75102cecfc1021c98d6219823b19\nF src/hash.h 9d56a9079d523b648774c1784b74b89bd93fac7b365210157482e4319a468f38\nF src/hwtime.h cb1d7e3e1ed94b7aa6fde95ae2c2daccc3df826be26fc9ed7fd90d1750ae6144\nF src/in-operator.md 10cd8f4bcd225a32518407c2fb2484089112fd71\nF src/insert.c 730455b1530552212ef67bf51dde86090d3995c432fb5806cd1addc58f2919b7\nF src/legacy.c d7874bc885906868cd51e6c2156698f2754f02d9eee1bae2d687323c3ca8e5aa\nF src/loadext.c d74f5e7bd51f3c9d283442473eb65aef359664efd6513591c03f01881c4ae2da\nF src/main.c 868ae7db7a54fe859bf2ca8b7a4f24e9fa03a6134abfb7c9801d08411ef5dacb\nF src/malloc.c 550021fcae36f0ffe9f8563d83e6385f9df307a854d55d7d0abb7241ee8dbcc6\nF src/mem0.c 6a55ebe57c46ca1a7d98da93aaa07f99f1059645\nF src/mem1.c c12a42539b1ba105e3707d0e628ad70e611040d8f5e38cf942cee30c867083de\nF src/mem2.c f1940d9e91948dd6a908fbb9ce3835c36b5d83c3\nF src/mem3.c 8768ac94694f31ffaf8b4d0ea5dc08af7010a35a\nF src/mem5.c 9bf955937b07f8c32541c8a9991f33ce3173d944\nF src/memdb.c 02a5fcec19b9d40dd449ca802dc1b2e8f93f255fbf2a886277a3c3800d8d35db\nF src/memjournal.c 7561c01c90958f3ba9bc6cb2d857123d932bdfa5539ea34427a0957b2e35154d\nF src/msvc.h 3a15918220367a8876be3fa4f2abe423a861491e84b864fb2b7426bf022a28f8\nF src/mutex.c bae36f8af32c22ad80bbf0ccebec63c252b6a2b86e4d3e42672ff287ebf4a604\nF src/mutex.h a7b2293c48db5f27007c3bdb21d438873637d12658f5a0bf8ad025bb96803c4a\nF src/mutex_noop.c 9d4309c075ba9cc7249e19412d3d62f7f94839c4\nF src/mutex_unix.c aaf9ebc3f89df28483c52208497a99a02cc3650011422fc9d4c57e4392f7fe58\nF src/mutex_w32.c 7670d770c94bbfe8289bec9d7f1394c5a00a57c37f892aab6b6612d085255235\nF src/notify.c 9711a7575036f0d3040ba61bc6e217f13a9888e7\nF src/os.c 669cc3839cc35d20f81faf0be1ab6d4581cea35e9d8f3a9d48a98d6571f7c285\nF src/os.h 48388821692e87da174ea198bf96b1b2d9d83be5dfc908f673ee21fafbe0d432\nF src/os_common.h b2f4707a603e36811d9b1a13278bffd757857b85\nF src/os_setup.h 0dbaea40a7d36bf311613d31342e0b99e2536586\nF src/os_unix.c 3e0e519f27683083a465e948e056759a8340728c222b5c394a135e0c57c220bc\nF src/os_win.c 035a813cbd17f355bdcad7ab894af214a9c13a1db8aeac902365350b98cd45a7\nF src/os_win.h 7b073010f1451abe501be30d12f6bc599824944a\nF src/pager.c 30f20d2263d3717f41a0d9a40f7a3d0f48ce1cfab461b875c6187ead9d6ad1c7\nF src/pager.h 217921e81eb5fe455caa5cda96061959706bcdd29ddb57166198645ef7822ac3\nF src/parse.y 17c1ae265e1b92cb1f3f1661b020e3eb31f2d8b9588322d2b6f2b22f25b674c9\nF src/pcache.c 385ff064bca69789d199a98e2169445dc16e4291fa807babd61d4890c3b34177\nF src/pcache.h 4f87acd914cef5016fae3030343540d75f5b85a1877eed1a2a19b9f284248586\nF src/pcache1.c 62714cbd1b7299a6e6a27a587b66b4fd3a836a84e1181e7f96f5c34a50917848\nF src/pragma.c 36c367a62a9d3415fd3d15523e794cccc2cb74e6d806662b0185b8c686f06acb\nF src/pragma.h ec3b31eac9b1df040f1cc8cb3d89bc06605c3b4cb3d76f833de8d6d6c3f77f04\nF src/prepare.c 6049beb71385f017af6fc320d2c75a4e50b75e280c54232442b785fbb83df057\nF src/printf.c 9be6945837c839ba57837b4bc3af349eba630920fa5532aa518816defe42a7d4\nF src/random.c 80f5d666f23feb3e6665a6ce04c7197212a88384\nF src/resolve.c 618bf4f57fa0617cd5295117fea5f25955b76d278303405a8551c4204593011e\nF src/rowset.c d977b011993aaea002cab3e0bb2ce50cf346000dff94e944d547b989f4b1fe93\nF src/select.c 0fe10579de20eb8dc04ec9ed29659fa782bee2bcc85a35734637f3e2cabc2762\nF src/shell.c.in 4a3a9e1c11847b1904f2b01d087af1c052f660902755abab457cab1756817ded\nF src/sqlite.h.in 2a23e8161775253d9cf383c2c6aa559005dc787d350dcb0be67a6c4cc3bd1d19\nF src/sqlite3.rc 5121c9e10c3964d5755191c80dd1180c122fc3a8\nF src/sqlite3ext.h 72af51aa4e912e14cd495fb6e7fac65f0940db80ed950d90911aff292cc47ce2\nF src/sqliteInt.h 1ac4dfde728b9d5812d1223d668d5e1f43c6fe4f469d6a7a482f298a10a03210\nF src/sqliteLimit.h 1513bfb7b20378aa0041e7022d04acb73525de35b80b252f1b83fedb4de6a76b\nF src/status.c 46e7aec11f79dad50965a5ca5fa9de009f7d6bde08be2156f1538a0a296d4d0e\nF src/table.c b46ad567748f24a326d9de40e5b9659f96ffff34\nF src/tclsqlite.c 8cd2600e8de23dff6cdf84d39f46ca57139b061b28f6f80b166bace17d52ab1c\nF src/test1.c c654981c1d86ebc90dd23fcc0969e6c85e28112f0acc2e2224a97a2a33e7c42f\nF src/test2.c 3efb99ab7f1fc8d154933e02ae1378bac9637da5\nF src/test3.c 61798bb0d38b915067a8c8e03f5a534b431181f802659a6616f9b4ff7d872644\nF src/test4.c 405834f6a93ec395cc4c9bb8ecebf7c3d8079e7ca16ae65e82d01afd229694bb\nF src/test5.c 328aae2c010c57a9829d255dc099d6899311672d\nF src/test6.c e8d839fbc552ce044bec8234561a2d5b8819b48e29548ad0ba400471697946a8\nF src/test7.c 5612e9aecf934d6df7bba6ce861fdf5ba5456010\nF src/test8.c 3f7d0cc4e12e06832ba3db4455cb16867ccadafa602eb6ff5fcf097bffce56ed\nF src/test9.c 12e5ba554d2d1cbe0158f6ab3f7ffcd7a86ee4e5\nF src/test_async.c 195ab49da082053fdb0f949c114b806a49ca770a\nF src/test_autoext.c 915d245e736652a219a907909bb6710f0d587871\nF src/test_backup.c bf5da90c9926df0a4b941f2d92825a01bbe090a0\nF src/test_bestindex.c 78809f11026f18a93fcfd798d9479cba37e1201c830260bf1edc674b2fa9b857\nF src/test_blob.c ae4a0620b478548afb67963095a7417cd06a4ec0a56adb453542203bfdcb31ce\nF src/test_btree.c 8b2dc8b8848cf3a4db93f11578f075e82252a274\nF src/test_config.c e25826d693039cdd45963de378cbf39e3af0e8aa7a8a6fc159876f4e7b5a4f8c\nF src/test_delete.c e2fe07646dff6300b48d49b2fee2fe192ed389e834dd635e3b3bac0ce0bf9f8f\nF src/test_demovfs.c 86142ba864d4297d54c5b2e972e74f3141ae4b30f05b3a95824184ed2d3d7f91\nF src/test_devsym.c 6109b45c3db3ef7b002320947ed448c027356ab8b885156ff535fd8684d4a571\nF src/test_fs.c ba1e1dc18fd3159fdba0b9c4256f14032159785320dfbd6776eb9973cb75d480\nF src/test_func.c 181f992e5495644434c4f0e3cc72362a78c295eb2cf3ff4d02498b8bde7aa276\nF src/test_hexio.c d170d0e1a6431afdeac086a250d2595078288c2257615d37949355361399bcaa\nF src/test_init.c 4413c211a94b62157ca4c145b3f27c497f03c664\nF src/test_intarray.c 39b4181662a0f33a427748d87218e7578d913e683dc27eab7098bb41617cac71\nF src/test_intarray.h d57ae92f420cda25e22790dac474d60961bd0c500cbaa3338a05152d4a669ef7\nF src/test_journal.c a0b9709b2f12b1ec819eea8a1176f283bca6d688a6d4a502bd6fd79786f4e287\nF src/test_loadext.c 337056bae59f80b9eb00ba82088b39d0f4fe6dfd\nF src/test_malloc.c dec0aa821b230773aeb3dd11d652c1193f7cedb18a20b25659bc672288115242\nF src/test_md5.c 7268e1e8c399d4a5e181b64ac20e1e6f3bc4dd9fc87abac02db145a3d951fa8c\nF src/test_multiplex.c e054459f7633f3ff8ce1245da724f9a8be189e4e\nF src/test_multiplex.h 5436d03f2d0501d04f3ed50a75819e190495b635\nF src/test_mutex.c 7f4337ba23ee6b1d2ec81c189653608cb069926a\nF src/test_onefile.c f31e52e891c5fef6709b9fcef54ce660648a34172423a9cbdf4cbce3ba0049f4\nF src/test_osinst.c 98ef31ff03d55497829ca0f6c74a9f4e1aa48690\nF src/test_pcache.c a5cd24730cb43c5b18629043314548c9169abb00\nF src/test_quota.c 6cb9297115b551f433a9ad1741817a9831abed99\nF src/test_quota.h 2a8ad1952d1d2ca9af0ce0465e56e6c023b5e15d\nF src/test_rtree.c 671f3fae50ff116ef2e32a3bf1fe21b5615b4b7b\nF src/test_schema.c f575932cb6274d12147a77e13ea4b49d52408513\nF src/test_server.c a2615049954cbb9cfb4a62e18e2f0616e4dc38fe\nF src/test_sqllog.c 11e6ce7575f489155c604ac4b439f2ac1d3d5aef\nF src/test_superlock.c 4839644b9201da822f181c5bc406c0b2385f672e\nF src/test_syscall.c 1073306ba2e9bfc886771871a13d3de281ed3939\nF src/test_tclsh.c eeafce33ad2136d57e5dec10f1e9a4347447eb72ffd504a1c7b9c6bfe2e71578\nF src/test_tclvar.c 33ff42149494a39c5fbb0df3d25d6fafb2f668888e41c0688d07273dcb268dfc\nF src/test_thread.c 911d15fb14e19c0c542bdc8aabf981c2f10a4858\nF src/test_vdbecov.c f60c6f135ec42c0de013a1d5136777aa328a776d33277f92abac648930453d43\nF src/test_vfs.c 36822d696789535bdd0260f07d2c9a46546082fea8bb1d0a7354c7f9366e37ea\nF src/test_vfstrace.c bab9594adc976cbe696ff3970728830b4c5ed698\nF src/test_windirent.c a895e2c068a06644eef91a7f0a32182445a893b9a0f33d0cdb4283dca2486ac1\nF src/test_windirent.h 90dfbe95442c9762357fe128dc7ae3dc199d006de93eb33ba3972e0a90484215\nF src/test_window.c cdae419fdcea5bad6dcd9368c685abdad6deb59e9fc8b84b153de513d394ba3f\nF src/test_wsd.c 41cadfd9d97fe8e3e4e44f61a4a8ccd6f7ca8fe9\nF src/threads.c 4ae07fa022a3dc7c5beb373cf744a85d3c5c6c3c\nF src/tokenize.c 7b17f6e2f20f6cbcb0b215025a86b7457c38451fc7622f705e553d7a488c572d\nF src/treeview.c 41d928f04d65931b15f629b4938e9f2c7dc259f02eef34cb2cc6e293f5af813f\nF src/trigger.c 681ccdb910a87243940d63f99b26190d9c5d2534c2ded3c0825b7c0e315a342e\nF src/update.c 07a50767f7d3e26d4c887c31cd66448d700d3215caea6023acf7269336097df7\nF src/upsert.c b445315c8958d8f17ec3297d06842e61dacaad0633ccaec1e4e160de7e562212\nF src/utf.c 2f0fac345c7660d5c5bd3df9e9d8d33d4c27f366bcfb09e07443064d751a0507\nF src/util.c 66b22af7b359ce6493c34fef28c87d5c2d1765f212d6e4cd5e08d99ac30b89bb\nF src/vacuum.c 82dcec9e7b1afa980288718ad11bc499651c722d7b9f32933c4d694d91cb6ebf\nF src/vdbe.c b67d6af853e03c3dd6d1116351567f62d8a2c10d3bd6db5f7f366e75d11c6653\nF src/vdbe.h fdbc0a11e5768a702b46ce63286f60e22e71351a29bd98b3666405e1fccc7802\nF src/vdbeInt.h bd589b8b7273286858950717e0e1ec5c88b18af45079a3366dc1371865cea704\nF src/vdbeapi.c 1252d80c548711e47a6d84dae88ed4e95d3fbb4e7bd0eaa1347299af7efddf02\nF src/vdbeaux.c 0bbbdc70c573d5112b74a3d555dd51c76ee3f8b6d43cf07e5105ced6a3ec0d10\nF src/vdbeblob.c 253ed82894924c362a7fa3079551d3554cd1cdace39aa833da77d3bc67e7c1b1\nF src/vdbemem.c 2eb00a4d1a7d2c97510a4d1ccaf4e12c9143f2ced1c6b96b5eddc372183c9121\nF src/vdbesort.c a3be032cc3fee0e3af31773af4a7a6f931b7230a34f53282ccf1d9a2a72343be\nF src/vdbetrace.c fa3bf238002f0bbbdfb66cc8afb0cea284ff9f148d6439bc1f6f2b4c3b7143f0\nF src/vtab.c 108f79166d4a232a8bfb9d46e2fbec191f83a87fe97f7b93fc4de976c3fa3434\nF src/vxworks.h d2988f4e5a61a4dfe82c6524dd3d6e4f2ce3cdb9\nF src/wal.c 15a2845769f51ba132f9cf0b2c7a6887a91fc8437892dbcce9fcdc68b66d60a1\nF src/wal.h 606292549f5a7be50b6227bd685fa76e3a4affad71bb8ac5ce4cb5c79f6a176a\nF src/walker.c a137468bf36c92e64d2275caa80c83902e3a0fc59273591b96c6416d3253d05d\nF src/where.c bb2d3c08de9ae57f6ff17459cefd9e38e82d3e7aaa544bc49503b6fdaaf2c800\nF src/whereInt.h 4a296fd4fa79fdcbc2b5e8c1b898901617655811223e1082b899c23ecb092217\nF src/wherecode.c 7efa97f4dc2f95548611deba68f0210ab357725899a9bae5391a525e48271875\nF src/whereexpr.c 39b6a538804c6e1248c22b33e09d00f89ae6a099c849c4d841ce3995562287b4\nF src/window.c a77f12078dd4b10e655d4ba5a73ca32dbe00e0206018305185c7e86445d3f429\nF test/8_3_names.test ebbb5cd36741350040fd28b432ceadf495be25b2\nF test/affinity2.test ce1aafc86e110685b324e9a763eab4f2a73f737842ec3b687bd965867de90627\nF test/affinity3.test 6a101af2fc945ce2912f6fe54dd646018551710d\nF test/aggerror.test a867e273ef9e3d7919f03ef4f0e8c0d2767944f2\nF test/aggnested.test 12106f0748e8e9bfc1a8e6840e203e051eae06a26ed13fc9fd5db108a8d6db54\nF test/alias.test 4529fbc152f190268a15f9384a5651bbbabc9d87\nF test/all.test 2ecb8bbd52416642e41c9081182a8df05d42c75637afd4488aace78cc4b69e13\nF test/alter.test 16ed8d2470193f34bc711e51506ff1211ebfab8025ca3b9510ff2aef139874cb\nF test/alter2.test a966ccfcddf9ce0a4e0e6ff1aca9e6e7948e0e242cd7e43fc091948521807687\nF test/alter3.test 9351a9f0c59ff9dddecccaaa2f777ffee5369870c63d30d3a74add815254ec0f\nF test/alter4.test 74b22251c5e9c48093cfc4921ed9c11b59df84634aeeb00e501773320beb8424\nF test/alterauth.test 63442ba61ceb0c1eeb63aac1f4f5cebfa509d352276059d27106ae256bafc959\nF test/alterauth2.test c0a1ddf5b93d93cb0d15ba7acaf0c5c6fb515bbe861ede75b2d3fabad33b6499\nF test/altercol.test 54374d2ba18af25bb24e23acf18a60270d4ec120b7ec0558078b59d5aa1a31ad\nF test/alterlegacy.test 82022721ce0de29cedc9a7af63bc9fcc078b0ee000f8283b4b6ea9c3eab2f44b\nF test/altermalloc.test 167a47de41b5c638f5f5c6efb59784002b196fff70f98d9b4ed3cd74a3fb80c9\nF test/altermalloc2.test fa7b1c1139ea39b8dec407cf1feb032ca8e0076bd429574969b619175ad0174b\nF test/altertab.test 4d8b79b0b88b62b90b710390df14fe99e0a3578345526886eaa550e28e3065dc\nF test/altertab2.test 8883693952f6d7fb5f754dbf1d694ed780aa883027bef04cb1fb99a3b88c9272\nF test/altertab3.test 3faf56b3f5af0dd2c12d954db4746521fc96543222da5b6e2633ed417640ce83\nF test/amatch1.test b5ae7065f042b7f4c1c922933f4700add50cdb9f\nF test/analyze.test 547bb700f903107b38611b014ca645d6b5bb819f5210d7bf39c40802aafeb7d7\nF test/analyze3.test 01f0b122e3e54ad2544f14f7cc7dcb4c2cb8753cad5e88c6b8d49615b3fd6a2b\nF test/analyze4.test cdf88f3f72b0f0643a1ff6c730fc5af1e42464d47478d9fbac84c333f72c014e\nF test/analyze5.test fa5131952303ac4146aba101b116b9c8cb89e2637531c334a6df7f7d19dddc0d\nF test/analyze6.test 6c3f7df2996cb6872f355a6ac1eb6d5de00a5a9288214bad7ef25c97d9cc72dc\nF test/analyze7.test 6ef0b12369f61ddeadc7d8a705c40e6b52cb29f63de3a4c56581b510b46b5783\nF test/analyze8.test 36ce54947710bd44e4f9484e1ad07e725ef01a9d7078b417c1bc884356febe4d\nF test/analyze9.test 9fbf0e0101eef4f5dc149769aa14e10b76ee06e7c28598264b32173cd1999a54\nF test/analyzeC.test 489fe2ea3be3f17548e8dd895f1b41c9669b52de1b0861f5bffe6eec46eac710\nF test/analyzeD.test e50cd0b3e6063216cc0c88a1776e8645dc0bd65a6bb275769cbee33b7fd8d90c\nF test/analyzeE.test 8684e8ac5722fb97c251887ad97e5d496a98af1d\nF test/analyzeF.test 9e1a0537949eb5483642b1140a5c39e5b4025939024b935398471fa552f4dabb\nF test/analyzer1.test 459fa02c445ddbf0101a3bad47b34290a35f2e49\nF test/async.test 1d0e056ba1bb9729283a0f22718d3a25e82c277b\nF test/async2.test c0a9bd20816d7d6a2ceca7b8c03d3d69c28ffb8b\nF test/async3.test d73a062002376d7edc1fe3edff493edbec1fc2f7\nF test/async4.test 1787e3952128aa10238bf39945126de7ca23685a\nF test/async5.test 383ab533fdb9f7ad228cc99ee66e1acb34cc0dc0\nF test/atof1.test ff0b0156fd705b67c506e1f2bfe9e26102bea9bd\nF test/atomic.test 065a453dde33c77ff586d91ccaa6ed419829d492dbb1a5694b8a09f3f9d7d061\nF test/atomic2.test b6863b4aa552543874f80b42fb3063f1c8c2e3d8e56b6562f00a3cc347b5c1da\nF test/atrc.c ec92d56d8fbed9eb3e11aaf1ab98cf7dd59e69dae31f128013f1d97e54e7dfed\nF test/attach.test 21bce8681f780a8d631a5ec7ecd0d849bfe84611257b038ae4ffeccc609d8a4e\nF test/attach2.test 256bd240da1835fb8408dd59fb7ef71f8358c7a756c46662434d11d07ba3a0ce\nF test/attach3.test c59d92791070c59272e00183b7353eeb94915976\nF test/attach4.test aa05b1d8218b24eba5a7cccf4f224f514ba57ba705c9267f09d2bb63fed0eea1\nF test/attachmalloc.test 12c4f028e570acf9e0a4b0b7fe6f536e21f3d5ebddcece423603d0569beaf438\nF test/auth.test 2154625c05bc79f0e0ea72cb2358395a8041243caa0fd7ce7617d50da4331794\nF test/auth2.test 9eb7fce9f34bf1f50d3f366fb3e606be5a2000a1\nF test/auth3.test db21405b95257c24d29273b6b31d0efc59e1d337e3d5804ba2d1fd4897b1ae49\nF test/autoanalyze1.test b9cc3f32a990fa56669b668d237c6d53e983554ae80c0604992e18869a0b2dec\nF test/autoinc.test 997d6f185f138229dc4251583a1d04816423dddc2fc034871a01aeb1d728cb39\nF test/autoindex1.test 96185415f5faacd5b8d7a7f505efddd5abb1f111d58338e9c0b1dc40b87cd3cc\nF test/autoindex2.test 12ef578928102baaa0dc23ad397601a2f4ecb0df\nF test/autoindex3.test 2dd997d6590438b53e4f715f9278aa91c9299cf3f81246a0915269c35beb790e\nF test/autoindex4.test 49d3cd791a9baa16fb461d7ea3de80d019a819cf\nF test/autoindex5.test a5d72fe8c217cc0ea356dc6fa06a282a8a3fc53aa807709d79dba07a8f248102\nF test/autovacuum.test 0831cd34e14695d297187f7f6519265e3121c5b0a1720e548e86829e796129e9\nF test/autovacuum_ioerr2.test 8a367b224183ad801e0e24dcb7d1501f45f244b4\nF test/avtrans.test b7dc25459ecbd86c6fa9c606ee3068f59d81e225118617dcf2bbb6ded2ade89e\nF test/backcompat.test 3e64cedda754c778ef6bbe417b6e7a295e662a4d\nF test/backup.test dd4a5ff756e3df3931dacb1791db0584d4bad989\nF test/backup2.test 1fd1ad8c5b3d2d5b9c0cce4143a4fc610d51ddc6ae16a7a122973d43e6b50bbd\nF test/backup4.test 8f6fd48e0dfde77b9a3bb26dc471ede3e101df32\nF test/backup5.test ee5da6d7fe5082f5b9b0bbfa31d016f52412a2e4\nF test/backup_ioerr.test 4c3c7147cee85b024ecf6e150e090c32fdbb5135\nF test/backup_malloc.test 0c9abdf74c51e7bedb66d504cd684f28d4bd4027\nF test/badutf.test d5360fc31f643d37a973ab0d8b4fb85799c3169f\nF test/badutf2.test f310fd3b24a491b6b77bccdf14923b85d6ebcce751068c180d93a6b8ff854399\nF test/bc_common.tcl b5e42d80305be95697e6370e015af571e5333a1c\nF test/bestindex1.test 705b57d7f51d53ee5fd043dd9666236e1fc18f4d59abf51da0ea5ea1b4804947\nF test/bestindex2.test 9a0ccd320b6525eec3a706aae6cdab7e1b7b5abca75027e39f39f755e76e5928\nF test/bestindex3.test 7622e792ff2da16d262d3cea6ad914591ac4806d57ed128e6c940b7920b47b84\nF test/bestindex4.test 038e3d0789332f3f1d61474f9bbc9c6d08c6bd1783a978f31f38ad82688de601\nF test/bestindex5.test 67c1166131bb59f9e47c00118f7d432ca5491e6cae6ca3f87ca9db20103a78f9\nF test/bestindex6.test d856a9bb63d927493575823eed44053bc36251e241aa364e54d0f2a2d302e1d4\nF test/between.test 68137a6e941c221417c15b6fe2d55f27bb1b6ab48bdf9e2aa51efdd85bc53802\nF test/bigfile.test aa74f4e5db51c8e54a1d9de9fa65d01d1eb20b59\nF test/bigfile2.test 1b489a3a39ae90c7f027b79110d6b4e1dbc71bfc\nF test/bigmmap.test 31dad31573638bd32de866cdefd11843f75685be4ba6aec1a47918f098f1899b\nF test/bigrow.test f0aeb7573dcb8caaafea76454be3ade29b7fc747\nF test/bigsort.test 8299fa9298f4f1e02fc7d2712e8b77d6cd60e5a2\nF test/bind.test 1e136709b306f7ed3192d349c2930d89df6ab621654ad6f1a72381d3fe76f483\nF test/bindxfer.test efecd12c580c14df5f4ad3b3e83c667744a4f7e0\nF test/bitvec.test 75894a880520164d73b1305c1c3f96882615e142\nF test/blob.test e7ac6c7d3a985cc4678c64f325292529a69ae252\nF test/boundary1.tcl 6421b2d920d8b09539503a8673339d32f7609eb1\nF test/boundary1.test 66d7f4706ccdb42d58eafdb081de07b0eb42d77b\nF test/boundary2.tcl e34ef4e930cf1083150d4d2c603e146bd3b76bcb\nF test/boundary2.test 9ae758d7dab7e882c8b6cc4a6a10278385bff8fa\nF test/boundary3.tcl 23361e108a125dca9c4080c2feb884fe54d69243\nF test/boundary3.test 56ef82096b4329aca2be74fa1e2b0f762ea0eb45\nF test/boundary4.tcl 0bb4b1a94f4fc5ae59b79b9a2b7a140c405e2983\nF test/boundary4.test 89e02fa66397b8a325d5eb102b5806f961f8ec4b\nF test/btree01.test e08b3613540145b353f20c81cb18ead54ff12e0f\nF test/btree02.test 7555a5440453d900410160a52554fe6478af4faf53098f7235f1f443d5a1d6cc\nF test/btreefault.test c2bcb542685eea44621275cfedbd8a13f65201e3\nF test/busy.test 510dc6daaad18bcbbc085bcc6217d6dc418def5e73f72ce1475eea0cb7834727\nF test/cache.test 13bc046b26210471ca6f2889aceb1ea52dc717de\nF test/cacheflush.test af25bb1509df04c1da10e38d8f322d66eceedf61\nF test/cachespill.test 895997f84a25b323b166aecb69baab2d6380ea98f9e0bcc688c4493c535cfab9\nF test/capi2.test 34a1a9a96d543a2ec2c209696b11b164444f57253b1f2cba1c2e53fadede6c7b\nF test/capi3.test 3910a73c38ac76d69778dd9eb481ab7cd6ed59117fc047b4f6056a5c72529de1\nF test/capi3b.test efb2b9cfd127efa84433cd7a2d72ce0454ae0dc4\nF test/capi3c.test 54e2dc0c8fd7c34ad1590d1be6864397da2438c95a9f5aee2f8fbc60c112e44b\nF test/capi3d.test aba917805573a03deed961a21f07a5a84505ad0a616f7e3fc1508844a15bccc4\nF test/capi3e.test 3d49c01ef2a1a55f41d73cba2b23b5059ec460fe\nF test/cast.test 3619f0c58c2e4b2a94aa86e75607e497d34ef40ab74418e71aef7b4ca5155895\nF test/cffault.test 9d6b20606afe712374952eec4f8fd74b1a8097ef\nF test/check.test 25c6035302c846c7ff8e681cf8284473f6f01be94d327de60a688ad84ab01f8b\nF test/checkfault.test da6cb3d50247169efcb20bdf57863a3ccfa1d27d9e55cd324f0680096970f014\nF test/chunksize.test 427d87791743486cbf0c3b8c625002f3255cb3a89c6eba655a98923b1387b760\nF test/close.test eccbad8ecd611d974cbf47278c3d4e5874faf02d811338d5d348af42d56d647c\nF test/closure01.test 9905883f1b171a4638f98fc764879f154e214a306d3d8daf412a15e7f3a9b1e0\nF test/coalesce.test cee0dccb9fbd2d494b77234bccf9dc6c6786eb91\nF test/collate1.test 4178fda6f4cd757b7a278e6b83805868fb1eb46edafb6e3d4bcc2419f8d93202\nF test/collate2.test 9aaa410a00734e48bcb27f3872617d6f69b2a621\nF test/collate3.test 89defc49983ddfbf0a0555aca8c0521a676f56a5\nF test/collate4.test c953715fb498b87163e3e73dd94356bff1f317bd\nF test/collate5.test 65d928034d30d2d263a80f6359f7549ee1598ec6\nF test/collate6.test 8be65a182abaac8011a622131486dafb8076e907\nF test/collate7.test 8ec29d98f3ee4ccebce6e16ce3863fb6b8c7b868\nF test/collate8.test cd9b3d3f999b8520ffaa7cc1647061fc5bab1334\nF test/collate9.test 3adcc799229545940df2f25308dd1ad65869145a\nF test/collateA.test b8218ab90d1fa5c59dcf156efabb1b2599c580d6\nF test/collateB.test 1e68906951b846570f29f20102ed91d29e634854ee47454d725f2151ecac0b95\nF test/colmeta.test 2c765ea61ee37bc43bbe6d6047f89004e6508eb1\nF test/colname.test 87ad5458bb8709312dac0d6755fd30e8e4ca83298d0a9ef6e5c24277a3c3390e\nF test/conflict.test c7cc007e2af151516ddf38f7412fe10d473a694f55e3df437e2c7b31c2590e8d\nF test/conflict2.test bb0b94cf7196c64a3cbd815c66d3ee98c2fecd9c\nF test/conflict3.test f62a2d0cad9162a60e6458fc913dff3a2208feca924120c21737cfee65a6a74a\nF test/contrib01.test 2a1cbc0f2f48955d7d073f725765da6fbceda6b4\nF test/corrupt.test d7cb0300e4a297147b6a05e92a1684bc8973635c3bcaa3d66e983c9cbdbf47a3\nF test/corrupt2.test bb50042cf9a1f1023d73af325d47eb02a6bb11e3c52f8812644b220c5d4bca35\nF test/corrupt3.test f95d7bf78109e0b84eb285a787ce91a3fd6a2dd7d0cb55882abff3bdc081a57e\nF test/corrupt4.test 8d1d86b850fcc43e417450454f2044e52d55778a\nF test/corrupt5.test 387be3250795e2a86e6234745558b80efb248a357d0cd8e53bce75c7463f545d\nF test/corrupt6.test fc6a891716139665dae0073b6945e3670bf92568\nF test/corrupt7.test b036f94bda4b0b23a2919bf717046ce9ecca4543\nF test/corrupt8.test 2399dfe40d2c0c63af86706e30f3e6302a8d0516\nF test/corrupt9.test 730a3db08d4ab9aa43392ea30d9c2b4879cbff85\nF test/corruptA.test 112f4b2ae0b95ebf3ea63718642fb969a93acea557ace3a307234d19c245989b\nF test/corruptB.test 73a8d6c0b9833697ecf16b63e3c5c05c945b5dec\nF test/corruptC.test 74d4498fd25759618b393f1e9cde111de828b88c1848ab320f6c179fd52b5a60\nF test/corruptD.test 33a37ce3ed56a20093ceee778cd2d7109c7085a59f3213d2baede11d952e8e50\nF test/corruptE.test 4143791f2dfb443aec5b7fabfa5821e6063eccc3b49b06f212c2f014715fd476\nF test/corruptF.test be9fde98e4c93648f1ba52b74e5318edc8f59fe4\nF test/corruptG.test adf79b669cbfd19e28c8191a610d083ae53a6d51\nF test/corruptH.test 79801d97ec5c2f9f3c87739aa1ec2eb786f96454\nF test/corruptI.test a17bbf54fdde78d43cf3cc34b0057719fd4a173a3d824285b67dc5257c064c7b\nF test/corruptJ.test 4d5ccc4bf959464229a836d60142831ef76a5aa4\nF test/corruptK.test 5b4212fe346699831c5ad559a62c54e11c0611bdde1ea8423a091f9c01aa32af\nF test/corruptL.test a22a7bbf8da7603960f0bfcc62a68d1c3c41963786bd832ff804ba5e2458fb9c\nF test/corruptM.test 7d574320e08c1b36caa3e47262061f186367d593a7e305d35f15289cc2c3e067\nF test/cost.test 51f4fcaae6e78ad5a57096831259ed6c760e2ac6876836e91c00030fad385b34\nF test/count.test cb2e0f934c6eb33670044520748d2ecccd46259c\nF test/countofview.test e17d6e6688cf74f22783c9ec6e788c0790ee4fbbaee713affd00b1ac0bb39b86\nF test/coveridxscan.test 5ec98719a2e2914e8908dc75f7247d9b54a26df04625f846ac7900d5483f7296\nF test/crash.test fb9dc4a02dcba30d4aa5c2c226f98b220b2b959f\nF test/crash2.test 5b14d4eb58b880e231361d3b609b216acda86651\nF test/crash3.test 8f5de9d32ab9ab95475a9efe7f47a940aa889418\nF test/crash4.test fe2821baf37168dc59dd733dcf7dba2a401487bc\nF test/crash5.test f14ff37eddc41991be4eb63568f86caa306fd9962a0ae3750db8836777bb7aae\nF test/crash6.test 4c56f1e40d0291e1110790a99807aa875b1647ba\nF test/crash7.test 1a194c4900a255258cf94b7fcbfd29536db572df\nF test/crash8.test 64366e459c28dd62edfb7ad87253a409c7533b92d16fcc479a6a8131bdcc3100\nF test/crashM.test d95f59046fa749b0d0822edf18a717788c8f318d\nF test/crashtest1.c 09c1c7d728ccf4feb9e481671e29dda5669bbcc2\nF test/createtab.test 85cdfdae5c3de331cd888d6c66e1aba575b47c2e3c3cc4a1d6f54140699f5165\nF test/cse.test 277350a26264495e86b1785f34d2d0c8600e021c\nF test/csv01.test c9c3af0d58c34e9ac970c5875a77939edb958762c8aafb95409e19a3f088b6cd\nF test/ctime.test 78749e6c9a5f0010d67985be80788f841e3cd2da18114e2ed6010399a7d807f3\nF test/cursorhint.test 7bc346788390475e77a345da2b92270d04d35856\nF test/cursorhint2.test 6f3aa9cb19e7418967a10ec6905209bcbb5968054da855fc36c8beee9ae9c42f\nF test/dataversion1.test 6e5e86ac681f0782e766ebcb56c019ae001522d114e0e111e5ebf68ccf2a7bb8\nF test/date.test 9b73bbeb1b82d9c1f44dec5cf563bf7da58d2373\nF test/date2.test 5ef8265c71460cda6b1698bf18f4bb0ffb40ac08c5092f6afe84d398c2feb5be\nF test/dbdata.test 042f49acff3438f940eeba5868d3af080ae64ddf26ae78f80c92bec3ca7d8603\nF test/dbfuzz.c 73047c920d6210e5912c87cdffd9a1c281d4252e\nF test/dbfuzz001.test 42aad1dcef6219fbee86a9b7d08832c9bbb2e41508f6f128ae91745927276292\nF test/dbfuzz2-seed1.db e6225c6f3d7b63f9c5b6867146a5f329d997ab105bee64644dc2b3a2f2aebaee\nF test/dbfuzz2.c c2c9cb40082a77b7e95ffb8b2da1e93322efadfb1c8c1e0001c95a0af1e156c2\nF test/dbpage.test 650234ba683b9d82b899c6c51439819787e7609f17a0cc40e0080a7b6443bc38\nF test/dbstatus.test 4a4221a883025ffd39696b3d1b3910b928fb097d77e671351acb35f3aed42759\nF test/dbstatus2.test f5fe0afed3fa45e57cfa70d1147606c20d2ba23feac78e9a172f2fe8ab5b78ef\nF test/default.test 3e46c421eebefd2787c2f96673efabf792d360f3a1d5073918cbe450ce672a62\nF test/delete.test 31832b0c45ecb51a54348c68db173be462985901e6ed7f403d6d7a8f70ab4ef0\nF test/delete2.test 3a03f2cca1f9a67ec469915cb8babd6485db43fa\nF test/delete3.test 555e84a00a99230b7d049d477a324a631126a6ab\nF test/delete4.test 6aa279f459f4aa792cc251435c3809415c1ecaf9f27dce91675e26f05b503db3\nF test/delete_db.test 096d828493c7907f9ea11a7098ea6a0f73edba89406487d5d6cc2228dc4ab8b0\nF test/descidx1.test edc8adee58d491b06c7157c50364eaf1c3605c9c19f8093cb1ea2b6184f3ac13\nF test/descidx2.test a0ba347037ff3b811f4c6ceca5fd0f9d5d72e74e59f2d9de346a9d2f6ad78298\nF test/descidx3.test 953c831df7ea219c73826dfbf2f6ee02d95040725aa88ccb4fa43d1a1999b926\nF test/diskfull.test 106391384780753ea6896b7b4f005d10e9866b6e\nF test/distinct.test a1783b960ad8c15a77cd9f207be072898db1026c\nF test/distinct2.test 11b0594c932098e969d084ba45ab81d5040f4d4e766db65d49146705a305ed98\nF test/distinctagg.test 1a6ef9c87a58669438fc771450d7a72577417376\nF test/e_blobbytes.test 439a945953b35cb6948a552edaec4dc31fd70a05\nF test/e_blobclose.test 4b3c8c60c2171164d472059c73e9f3c1844bb66d\nF test/e_blobopen.test e95e1d40f995056f6f322cd5e1a1b83a27e1a145\nF test/e_blobwrite.test f87ff598b67af5b3ec002a8d83e804dc8d23808e88cf0080c176612fc9ffce14\nF test/e_changes.test fd66105385153dbf21fdb35eb8ef6c3e1eade579\nF test/e_createtable.test 1c602347e73ab80b11b9fa083f47155861aaafcff8054aac9e0b76d0df33b0a7\nF test/e_delete.test ab39084f26ae1f033c940b70ebdbbd523dc4962e\nF test/e_droptrigger.test 3cd080807622c13e5bbb61fc9a57bd7754da2412\nF test/e_dropview.test 21ce09c361227ddbc9819a5608ee2700c276bdd5\nF test/e_expr.test 328d2d7c84f8e53e942a13eac771b337bcdfcf4c3569324001868b5639f3c857\nF test/e_fkey.test 2febb2084aef9b0186782421c07bc9d377abf067c9cb4efd49d9647ae31f5afe\nF test/e_fts3.test 17ba7c373aba4d4f5696ba147ee23fd1a1ef70782af050e03e262ca187c5ee07\nF test/e_insert.test f02f7f17852b2163732c6611d193f84fc67bc641fb4882c77a464076e5eba80e\nF test/e_reindex.test 2b0e29344497d9a8a999453a003cb476b6b1d2eef2d6c120f83c2d3a429f3164\nF test/e_resolve.test a61751c368b109db73df0f20fc75fb47e166b1d8\nF test/e_select.test f9474205669a7736ef725b29cc7ae9e8601919a3d0ffc0ab30745a028f2a4b61\nF test/e_select2.test aceb80ab927d46fba5ce7586ebabf23e2bb0604f\nF test/e_totalchanges.test b12ee5809d3e63aeb83238dd501a7bca7fd72c10\nF test/e_update.test f46c2554d915c9197548681e8d8c33a267e84528\nF test/e_uri.test 47eeb2960e74613f0f8722b2f13aef08fde69daa16e5380ac93df84dac8b1f72\nF test/e_vacuum.test 0d8832a2ce92350db0d0cff47b419465fd9772562e1f77ff7d9478c07a4980d2\nF test/e_wal.test ae9a593207a77d711443ee69ffe081fda9243625\nF test/e_walauto.test 248af31e73c98df23476a22bdb815524c9dc3ba8\nF test/e_walckpt.test 28c371a6bb5e5fe7f31679c1df1763a19d19e8a0\nF test/e_walhook.test 01b494287ba9e60b70f6ebf3c6c62e0ffe01788e344a4846b08e5de0b344cb66\nF test/emptytable.test a38110becbdfa6325cd65cb588dca658cd885f62\nF test/enc.test e54531cd6bf941ee6760be041dff19a104c7acea\nF test/enc2.test 83437a79ba1545a55fb549309175c683fb334473\nF test/enc3.test 6807f7a7740a00361ca8d0ccd66bc60c8dc5f2b6\nF test/enc4.test c8f1ce3618508fd0909945beb8b8831feef2c020\nF test/eqp.test 84879b63e3110552bf8ce648a3507dc3ceb72109ecec83c2aef0db37a27f6382\nF test/errmsg.test eae9f091eb39ce7e20305de45d8e5d115b68fa856fba4ea6757b6ca3705ff7f9\nF test/eval.test a64c9105d6ff163df7cf09d6ac29cdad5922078c\nF test/exclusive.test 1206b87e192497d78c7f35552e86a9d05421498da300fb1cce5ca5351ccde3c3\nF test/exclusive2.test 984090e8e9d1b331d2e8111daf6e5d61dda0bef7\nF test/exec.test e949714dc127eaa5ecc7d723efec1ec27118fdd7\nF test/exists.test 79a75323c78f02bbe9c251ea502a092f9ef63dac\nF test/expr.test 7cb55e80aeb41d65fec968c08212505123063fea60bdc355d764d747670e9eea\nF test/expr2.test c27327ae9c017a7ff6280123f67aff496f912da74d78c888926d68b46ec75fd8\nF test/extension01.test 00d13cec817f331a687a243e0e5a2d87b0e358c9\nF test/extraquick.test cb254400bd42bfb777ff675356aabf3287978f79\nF test/fallocate.test 37a62e396a68eeede8f8d2ecf23573a80faceb630788d314d0a073d862616717\nF test/filectrl.test 6e871c2d35dead1d9a88e176e8d2ca094fec6bb3\nF test/filefmt.test f393e80c4b8d493b7a7f8f3809a8425bbf4292af1f5140f01cb1427798a2bbd4\nF test/filter1.test fe7fcfeff48ca399fbc9577f55b60c8be8ccfdffc5e3b4ace21dc3c3e59f0f6a\nF test/filter2.tcl 44e525497ce07382915f01bd29ffd0fa49dab3adb87253b5e5103ba8f93393e8\nF test/filter2.test 485cf95d1f6d6ceee5632201ca52a71868599836f430cdee42e5f7f14666e30a\nF test/filterfault.test c08fb491d698e8df6c122c98f7db1c65ffcfcad2c1ab0e07fa8a5be1b34eaa8b\nF test/fkey1.test d11dbb8a93ead9b5c46ae5d02da016d61245d47662fb2d844c99214f6163f768\nF test/fkey2.test d35d1c81e7569bdd2b872e91750f7098117d2e8291369f70b7e3d50a0e523dc2\nF test/fkey3.test 76d475c80b84ee7a5d062e56ccb6ea68882e2b49\nF test/fkey4.test 86446017011273aad8f9a99c1a65019e7bd9ca9d\nF test/fkey5.test 24dd28eb3d9f1b5a174f47e9899ace5facb08373a4223593c8c631e6cf9f7d5a\nF test/fkey6.test d078a1e323a740062bed38df32b8a736fd320dc0\nF test/fkey7.test 64fb28da03da5dfe3cdef5967aa7e832c2507bf7fb8f0780cacbca1f2338d031\nF test/fkey8.test 48ef829d63f5f7b37aabd4df9363ac05f65539d1da8c4a44251631769d920579\nF test/fkey_malloc.test 594a7ea1fbab553c036c70813cd8bd9407d63749\nF test/fordelete.test eb93a2f34137bb87bdab88fcab06c0bd92719aff\nF test/format4.test eeae341953db8b6bda7f549044797c3278a6cc345d11ada81471671b654f8ef4\nF test/fts-9fd058691.test 78b887e30ae6816df0e1fed6259de4b5a64ad33c\nF test/fts1a.test 46090311f85da51bb33bd5ce84f7948359c6d8d7\nF test/fts1b.test 5d8a01aefbecc8b7442b36c94c05eb7a845462d5\nF test/fts1c.test 85a525ce7428907469b4cce13d5563ce542ce64c\nF test/fts1d.test a73deace5c18df4a549b12908bade4f05dcf1a2f\nF test/fts1e.test 77244843e925560b5a0b70069c3e7ab62f181ed2\nF test/fts1f.test 2d6cb10d8b7a4e6edc321bbdb3982f1f48774714\nF test/fts1i.test 6bfe08cdfdced063a39a50c8601da65e6274d879\nF test/fts1j.test e3797475796043a161e348c46a309664cac83f7f\nF test/fts1k.test 65d3b41487b9f738d11b0f00eca375c0ca6bd970\nF test/fts1l.test 15c119ed2362b2b28d5300c0540a6a43eab66c36\nF test/fts1m.test 2d9ca67b095d49f037a914087cc0a61e89da4f0c\nF test/fts1n.test a2317dcd27b1d087ee3878b30e0a59c593c98b7a\nF test/fts1o.test d1554caede42bba2c82fe613bcc921856c196b752449ead0470fac52a20fd3b8\nF test/fts1porter.test d86e9c3e0c7f8ff95add6582b4b585fb4e02b96d\nF test/fts2.test e3fb95f96a650411574efc136f3fb10eef479ed7\nF test/fts2a.test 473a5c8b473a4e21a8e3fddaed1e59666e0c6ab7\nF test/fts2b.test 964abc0236c849c07ca1ae496bb25c268ae94816\nF test/fts2c.test ffb5a35230ac72c4354535c547965ce6824537c0\nF test/fts2d.test b7eaa671ca9a16997f3e5b158ee777ae21052b0b\nF test/fts2e.test 2da13dbc2d009105f42196845c1e1ce136c03d38\nF test/fts2f.test cf84096235991709c1e61caa389632aa0a4f976d\nF test/fts2g.test 3d26fe171bda6133ebf5a380731d70eaa2ef2f6f73d79769cf8946e622b6d597\nF test/fts2h.test 223af921323b409d4b5b18ff4e51619541b174bb\nF test/fts2i.test 1b22451d1f13f7c509baec620dc3a4a754885dd6\nF test/fts2j.test 298fa1670aa21cd445b282d139b70c72e7ade12b\nF test/fts2k.test c7ebf4a4937594aa07459e3e1bca1251c1be8659\nF test/fts2l.test 3333336621524cf7d60bb62d6ef6ab69647866ed\nF test/fts2m.test 4b30142ead6f3ed076e880a2a464064c5ad58c51\nF test/fts2n.test 12b9c5352128cebd1c6b8395e43788d4b09087c2\nF test/fts2o.test 4054ac7433eb5440f1b1d200cfa449342dc4aabd991759139813e17c73e5bf9a\nF test/fts2p.test 4b48c35c91e6a7dbf5ac8d1e5691823cc999aafb\nF test/fts2q.test b2fbbe038b7a31a52a6079b215e71226d8c6a682\nF test/fts2r.test b154c30b63061d8725e320fba1a39e2201cadd5e\nF test/fts2token.test d8070b241a15ff13592a9ae4a8b7c171af6f445a\nF test/fts3.test 672a040ea57036fb4b6fdc09027c18d7d24ab654\nF test/fts3_common.tcl dffad248f9ce090800e272017d2898005c28ee6314fc1dd5550643a02666907a\nF test/fts3aa.test 814d60a1ba30b4a71d8f9306a6564bc7b636dd6efacd2ad80306f9b23ef3ebee\nF test/fts3ab.test 7f6cf260ae80dda064023df8e8e503e9a412b91f\nF test/fts3ac.test 636ed7486043055d4f126a0e385f2d5a82ebbf63\nF test/fts3ad.test e40570cb6f74f059129ad48bcef3d7cbc20dda49\nF test/fts3ae.test ce32a13b34b0260928e4213b4481acf801533bda\nF test/fts3af.test d394978c534eabf22dd0837e718b913fd66b499c\nF test/fts3ag.test c003672a215124df7fc6000036d896f498b26b53\nF test/fts3ah.test dc9f66c32c296f1bc8bcc4535126bddfeca62894\nF test/fts3ai.test 24058fdc6e9e5102c1fd8459591b114b6a85d285\nF test/fts3aj.test 0ed71e1dd9b03b843a857dc3eb9b15630e0104fc\nF test/fts3ak.test bd14deafe9d1586e8e9bf032411026ac4f8c925d\nF test/fts3al.test 07d64326e79bbdbab20ee87fc3328fbf01641c9f\nF test/fts3am.test 218aa6ba0dfc50c7c16b2022aac5c6be593d08d8\nF test/fts3an.test a49ccadc07a2f7d646ec1b81bc09da2d85a85b18\nF test/fts3ao.test 266989148fec6d9f1bb6c5382f7aa3dcea0e9cd444576e28dd2b9287ac7dd220\nF test/fts3atoken.test bef8a163490098a6b8a6ec5f5407269a3a15b9902c0fcf5e962825a81675b3a0\nF test/fts3auto.test bfe0857bd0b69d68dd685a931b58486411a69f5794a7f6d6fe808bfa31a99614\nF test/fts3aux1.test 7a170e172afdbceb67f5baa05941fd4fbf56af42f61daa3d140f4b4bf4cb68f6\nF test/fts3aux2.test 2459e7fa3e22734aed237d1e2ae192f5541c4d8b218956ad2d90754977bf907f\nF test/fts3b.test c15c4a9d04e210d0be67e54ce6a87b927168fbf9c1e3faec8c1a732c366fd491\nF test/fts3c.test fc723a9cf10b397fdfc2b32e73c53c8b1ec02958\nF test/fts3comp1.test a0f5b16a2df44dd0b15751787130af2183167c0c\nF test/fts3conf.test c84bbaec81281c1788aa545ac6e78a6bd6cde2bdbbce2da261690e3659f5a76b\nF test/fts3corrupt.test ce7f7b5eaeee5f1804584d061b978d85e64abf2af9adaa7577589fac6f7eae01\nF test/fts3corrupt2.test bf55c3fa0b0dc8ea1c0fe5543623bd27714585da6a129038fd6999fe3b0d25f3\nF test/fts3corrupt3.test 0d5b69a0998b4adf868cc301fc78f3d0707745f1d984ce044c205cdb764b491f\nF test/fts3corrupt4.test bc90c0f6ee73df4c6bd20f1b32fefdfc00b44cc577d67ebca43b157fc3efd422\nF test/fts3corrupt5.test 0549f85ec4bd22e992f645f13c59b99d652f2f5e643dac75568bfd23a6db7ed5\nF test/fts3cov.test 7eacdbefd756cfa4dc2241974e3db2834e9b372ca215880e00032222f32194cf\nF test/fts3d.test 2bd8c97bcb9975f2334147173b4872505b6a41359a4f9068960a36afe07a679f\nF test/fts3defer.test f4c20e4c7153d20a98ee49ee5f3faef624fefc9a067f8d8d629db380c4d9f1de\nF test/fts3defer2.test 3da52ca2114e300e9971eee2f0cc1a2e5f27e6a9ee67957d49e63e41fdfcc0e7\nF test/fts3defer3.test dd53fc13223c6d8264a98244e9b19abd35ed71cd\nF test/fts3drop.test 1b906e293d6773812587b3dc458cb9e8f3f0c297\nF test/fts3e.test 1f6c6ac9cc8b772ca256e6b22aaeed50c9350851\nF test/fts3expr.test ebae205a7a89446c32583bcd492dcb817b9f6b31819bb4dde2583bb99c77e526\nF test/fts3expr2.test 18da930352e5693eaa163a3eacf96233b7290d1a\nF test/fts3expr3.test c4d4a7d6327418428c96e0a3a1137c251b8dfbf8\nF test/fts3expr4.test f5b2832549f01b1f7f73389fa21d4b875499bc95bf7c8b36271844888c6a0938\nF test/fts3expr5.test a5b9a053becbdb8e973fbf4d6d3abaabeb42d511d1848bd57931f3e0a1cf983e\nF test/fts3fault.test 798e45af84be7978ca33d5bdc94246eb44724db24174b5d8e9b1ac46c57fb08d\nF test/fts3fault2.test 6a17a11d8034b1c4eca9f3091649273d56c49ff049e2173df8060f94341e9da0\nF test/fts3first.test dbdedd20914c8d539aa3206c9b34a23775644641\nF test/fts3fuzz001.test e3c7b0ce9b04cc02281dcc96812a277f02df03cd7dc082055d87e11eb18aaf56\nF test/fts3join.test 949b4f5ae3ae9cc2423cb865d711e32476bdb205ab2be923fdf48246e4a44166\nF test/fts3malloc.test b0e4c133b8d61d4f6d112d8110f8320e9e453ef6\nF test/fts3matchinfo.test aa66cc50615578b30f6df9984819ae5b702511cf8a94251ec7c594096a703a4a\nF test/fts3misc.test c47d2c1ea1351c51c32c688545b02c8180a3f22156d1aedc206a8c09b9d95905\nF test/fts3near.test 7e3354d46f155a822b59c0e957fd2a70c1d7e905\nF test/fts3offsets.test b85fd382abdc78ebce721d8117bd552dfb75094c\nF test/fts3prefix.test fa794eaab0bdae466494947b0b153d7844478ab2\nF test/fts3prefix2.test e1f0a822ca661dced7f12ce392e14eaf65609dce\nF test/fts3query.test ca033ff2ebcc22c69d89032fb0bc1850997d31e7e60ecd26440796ba1654e78f\nF test/fts3rank.test cd99bc83a3c923c8d52afd90d86979cf05fc41849f892faeac3988055ef37b99\nF test/fts3rnd.test 1320d8826a845e38a96e769562bf83d7a92a15d0\nF test/fts3shared.test 57e26a801f21027b7530da77db54286a6fe4997e\nF test/fts3snippet.test 430bb5ace2b31ccd99de4d71775d956da832c114c4b3e39589748f114458647c\nF test/fts3sort.test ed34c716a11cc2009a35210e84ad5f9c102362ca\nF test/fts3tok1.test a663f4cac22a9505400bc22aacb818d7055240409c28729669ea7d4cc2120d15\nF test/fts3tok_err.test 52273cd193b9036282f7bacb43da78c6be87418d\nF test/fts3varint.test 0b84a3fd4eba8a39f3687523804d18f3b322e6d4539a55bf342079c3614f2ada\nF test/fts4aa.test 4338ea7a67f7e19269bf6e6fb4a291352aa32296e7daed87f9823d57016a1ef7\nF test/fts4check.test 6259f856604445d7b684c9b306b2efb6346834c3f50e8fc4a59a2ca6d5319ad0\nF test/fts4content.test 73bbb123420d2c46ef2fb3b24761e9acdb78b0877179d3a5d7d57aada08066f6\nF test/fts4docid.test e33c383cfbdff0284685604d256f347a18fdbf01\nF test/fts4growth.test 289833c34ad45a5e6e6133b53b6a71647231fb89d36ddcb8d9c87211b6721d7f\nF test/fts4growth2.test 13ad4e76451af6e6906c95cdc725d01b00044269\nF test/fts4incr.test 4e353a0bd886ea984e56fce9e77724fc923b8d0d\nF test/fts4langid.test 2168ba330af34f8a1c8832de0aab4c4b6fa195a16419c9c0c8aad59ceb6ff714\nF test/fts4lastrowid.test 185835895948d5325c7710649824042373b2203149abe8024a9319d25234dfd7\nF test/fts4merge.test e2b2ec21e287d54ec09824ccfb41e66896eeca568fc818ba0e0eb2efd94c35d2\nF test/fts4merge2.test 5faa558d1b672f82b847d2a337465fa745e46891\nF test/fts4merge3.test 8d9ccb4a3d41c4c617a149d6c4b13ad02de797d0\nF test/fts4merge4.test d895b1057a7798b67e03455d0fa50e9ea836c47b\nF test/fts4merge5.test 69932d85cda8a1c4dcfb742865900ed8fbda51724b8cf9a45bbe226dfd06c596\nF test/fts4noti.test 5553d7bb2e20bf4a06b23e849352efc022ce6309\nF test/fts4onepass.test d69ddc4ee3415e40b0c5d1d0408488a87614d4f63ba9c44f3e52db541d6b7cc7\nF test/fts4opt.test 0fd0cc84000743ff2a883b9b84b4a5be07249f0ba790c8848a757164cdd46b2a\nF test/fts4record.test a48508f69a84c9287c8019d3a1ae712f5730d8335ffaf8e2101e691d078950bb\nF test/fts4rename.test 15fd9985c2bce6dea20da2245b22029ec89bd4710ed317c4c53abbe3cfd0c880\nF test/fts4umlaut.test fcaca4471de7e78c9d1f7e8976e3e8704d7d8ad979d57a739d00f3f757380429\nF test/fts4unicode.test ceca76422abc251818cb25dabe33d3c3970da5f7c90e1540f190824e6b3a7c95\nF test/full.test 6b3c8fb43c6beab6b95438c1675374b95fab245d\nF test/func.test 7d425f9a6eaa2c50baa751bef6b0c6c6af1751e0e0e1eb4863d426bb4c886788\nF test/func2.test 772d66227e4e6684b86053302e2d74a2500e1e0f\nF test/func3.test 2bb0f31ab7baaed690b962a88544d7be6b34fa389364bc36a44e441ed3e3f1e6\nF test/func4.test 6beacdfcb0e18c358e6c2dcacf1b65d1fa80955f\nF test/func5.test cdd224400bc3e48d891827cc913a57051a426fa4\nF test/func6.test 90e42b64c4f9fb6f04f44cb8a1da586c8542502e926b19c76504fe74ff2a9b7c\nF test/fuzz-oss1.test e58330d01cbbd8215ee636b17a03fe220b37dbfa\nF test/fuzz.test 96083052bf5765e4518c1ba686ce2bab785670d1\nF test/fuzz2.test 76dc35b32b6d6f965259508508abce75a6c4d7e1\nF test/fuzz3.test 9c813e6613b837cb7a277b0383cd66bfa07042b4cf0317157c35852f30043c31\nF test/fuzz4.test c229bcdb45518a89e1d208a21343e061503460ac69fae1539320a89f572eb634\nF test/fuzz_common.tcl a87dfbb88c2a6b08a38e9a070dabd129e617b45b\nF test/fuzz_malloc.test f348276e732e814802e39f042b1f6da6362a610af73a528d8f76898fde6b22f2\nF test/fuzzcheck.c e8cf694f71a1ee39a59f7c2a38c0f8660db0656ce47c8a334b6e9a11f1e66c6d\nF test/fuzzdata1.db d36e88741b4f23bcbaaf55b006290669d03c6c891cf13c7b3a53bc1b097b693f\nF test/fuzzdata2.db 128b3feeb78918d075c9b14b48610145a0dd4c8d6f1ca7c2870c7e425f5bf31f\nF test/fuzzdata3.db c6586d3e3cef0fbc18108f9bb649aa77bfc38aba\nF test/fuzzdata4.db b502c7d5498261715812dd8b3c2005bad08b3a26e6489414bd13926cd3e42ed2\nF test/fuzzdata5.db e35f64af17ec48926481cfaf3b3855e436bd40d1cfe2d59a9474cb4b748a52a5\nF test/fuzzdata6.db 92a80e4afc172c24f662a10a612d188fb272de4a9bd19e017927c95f737de6d7\nF test/fuzzdata7.db e7a86fd83dda151d160445d542e32e5c6019c541b3a74c2a525b6ac640639711\nF test/fuzzdata8.db b45368bbe9f86d40d30603e8f780ac29807cbcc951a18d7a7fd9d0c0e904706e\nF test/fuzzer1.test 3d4c4b7e547aba5e5511a2991e3e3d07166cfbb8\nF test/fuzzer2.test a85ef814ce071293bce1ad8dffa217cbbaad4c14\nF test/fuzzerfault.test 8792cd77fd5bce765b05d0c8e01b9edcf8af8536\nF test/gcfault.test dd28c228a38976d6336a3fc42d7e5f1ad060cb8c\nF test/gencol1.test 037c5c26dddd984ba7ea11bd16996377f72523a4126804b1bbecafc833fccb47\nF test/genesis.tcl 1e2e2e8e5cc4058549a154ff1892fe5c9de19f98\nF test/having.test e4098a4b8962f9596035c3b87a8928a10648acc509f1bb8d6f96413bbf79a1b3\nF test/hexlit.test 4a6a5f46e3c65c4bf1fa06f5dd5a9507a5627751\nF test/hidden.test 23c1393a79e846d68fd902d72c85d5e5dcf98711\nF test/hook.test 1604b3b2f5931430087540404555c1b6be3618600b81558657c66b533ed70b13\nF test/hook2.test b9ff3b8c6519fb67f33192f1afe86e7782ee4ac8\nF test/icu.test 41aa8847745a879b897a7febea0f8f9efc8e67fe8bf680589b6e07c7b0a1569a\nF test/ieee754.test 806fc0ce7f305f57e3331eaceeddcfec9339e607\nF test/imposter1.test c3f1db2d3db2c24611a6596a3fc0ffc14f1466c8\nF test/in.test 3e9bd58597a444123a40a9ac94cae0fec8897e17e9f519b02fc370bcf5ba5175\nF test/in2.test 5d4c61d17493c832f7d2d32bef785119e87bde75\nF test/in3.test 3cbf58c87f4052cee3a58b37b6389777505aa0c0\nF test/in4.test 0f77b0ff371549e6a119d0356be10bdba72258162e9701e83527a560482f5e98\nF test/in5.test b32ce7f4a93f44c5dee94af16886d922cc16ebe33c8e1765c73d4049d0f4b40f\nF test/in6.test 62d943a02f722948f4410ee0b53c3cb39acd7c41afb083df8d7004238fe90a20\nF test/incrblob.test c9b96afc292aeff43d6687bcb09b0280aa599822\nF test/incrblob2.test a494c9e848560039a23974b9119cfc2cf3ad3bd15cc2694ee6367ae537ef8f1f\nF test/incrblob3.test d8d036fde015d4a159cd3cbae9d29003b37227a4\nF test/incrblob4.test 21a52a6843a56cdcce968c6a86b72a7066d0e6ba\nF test/incrblob_err.test 89372a28f1d98254f03fed705f9efcd34ef61a674df16d2dbb4726944a2de5e9\nF test/incrblobfault.test 74dd8ac108304cea0b4a0df6df63a1567e558758\nF test/incrcorrupt.test 6c567fbf870aa9e91866fe52ce6f200cd548939a\nF test/incrvacuum.test 2aaee202b1f230e55779f70d155f6ba67bbdff8481d650214d256ab0f97d4a2b\nF test/incrvacuum2.test 7d26cfda66c7e55898d196de54ac4ec7d86a4e3d\nF test/incrvacuum3.test 75256fb1377e7c39ef2de62bfc42bbff67be295a\nF test/incrvacuum_ioerr.test 6ae2f783424e47a0033304808fe27789cf93e635\nF test/index.test a2e948ed949e575487b5c1d521767d4584ac42d352f2dcd8e48004638e7bc7dc\nF test/index2.test f835d5e13ca163bd78c4459ca15fd2e4ed487407\nF test/index3.test 51685f39345462b84fcf77eb8537af847fdf438cc96b05c45d6aaca4e473ade0\nF test/index4.test ab92e736d5946840236cd61ac3191f91a7856bf6\nF test/index5.test 8621491915800ec274609e42e02a97d67e9b13e7\nF test/index6.test f172653b35b20233e59200e8b92a76db61bf7285437bf777b93b306ba26a47e7\nF test/index7.test 1d764c0cca45f5a76150b08e127ccc8d52492cfa788b5fafed4be784a351b020\nF test/index8.test bc2e3db70e8e62459aaa1bd7e4a9b39664f8f9d7\nF test/index9.test 0aa3e509dddf81f93380396e40e9bb386904c1054924ba8fa9bcdfe85a8e7721\nF test/indexedby.test a52c8c6abfae4fbfb51d99440de4ca1840dbacc606b05e29328a2a8ba7cd914e\nF test/indexexpr1.test 284e119999d132cc8bf37735a928c9859b28e8e295d02b7a6a4f93977c7f9ba5\nF test/indexexpr2.test dba11dbb0a58fcba4cd694f46b4004976123b81b0501f525d43c9be59f0207b1\nF test/indexfault.test 98d78a8ff1f5335628b62f886a1cb7c7dac1ef6d48fa39c51ec871c87dce9811\nF test/init.test 15c823093fdabbf7b531fe22cf037134d09587a7\nF test/insert.test 4e3f0de67aac3c5be1f4aaedbcea11638f1b5cdc9a3115be14d19aa9db7623c6\nF test/insert2.test 4d14b8f1b810a41995f6286b64a6943215d52208\nF test/insert3.test 1b7db95a03ad9c5013fdf7d6722b6cd66ee55e30\nF test/insert4.test fb9e0f752c75f453555990250b449f6d123ae6a3ebf054d14e4470de4498dce3\nF test/insert5.test 394f96728d1258f406fe5f5aeb0aaf29487c39a6\nF test/insertfault.test ac63d14ea3b49c573673a572f4014b9117383a03e497c58f308b5c776e4a7f74\nF test/instr.test 107df2b9b74a4b59315916b575590a08f2a714de0754abe541f10a0971d0a2a4\nF test/instrfault.test 0f870b218ea17cd477bb19ed330eecdb460dd53a\nF test/intarray.test bb976b0b3df0ebb6a2eddfb61768280440e672beba5460ed49679ea984ccf440\nF test/interrupt.test 16ea879ec728cb76414c148c5f24afd5d1f91054\nF test/interrupt2.test e4408ca770a6feafbadb0801e54a0dcd1a8d108d\nF test/intpkey.test ac71107a49a06492b69b82aafaf225400598d3c8\nF test/intreal.test 2a87e85a5949bd55e41ef04c58f5800587c5380bdbc559ff1c79b614b0e6a533\nF test/io.test f95bca1783b01ea7761671560d023360d2dfa4cc\nF test/ioerr.test 470fcc78e9cd352d162baf782fe301ea807d764241f58a48fc58109c2dfcdb6b\nF test/ioerr2.test 2593563599e2cc6b6b4fcf5878b177bdd5d8df26\nF test/ioerr3.test d3cec5e1a11ad6d27527d0d38573fbff14c71bdd\nF test/ioerr4.test f130fe9e71008577b342b8874d52984bd04ede2c\nF test/ioerr5.test 2edfa4fb0f896f733071303b42224df8bedd9da4\nF test/ioerr6.test a395a6ab144b26a9e3e21059a1ab6a7149cca65b\nF test/istrue.test 75327829744e65cc8700e69340b8e6c192e10e39dfae7ccb0e970d3c4f49090a\nF test/join.test f787ee2716efe5beeb9888d10630f917b112c32b6b3e612e48a17ea8aed3a8eb\nF test/join2.test 10f7047e723ebd68b2f47189be8eed20451a6f665d8bf46f1774c640d1062417\nF test/join3.test 6f0c774ff1ba0489e6c88a3e77b9d3528fb4fda0\nF test/join4.test 1a352e4e267114444c29266ce79e941af5885916\nF test/join5.test 3a96dc62f0b45402d7207e22d1993fe0c2fce1c57644a11439891dd62b990eb7\nF test/join6.test cfe6503791ceb0cbb509966740286ec423cbf10b\nF test/journal1.test c7b768041b7f494471531e17abc2f4f5ebf9e5096984f43ed17c4eb80ba34497\nF test/journal2.test 9dac6b4ba0ca79c3b21446bbae993a462c2397c4\nF test/journal3.test 7c3cf23ffc77db06601c1fcfc9743de8441cb77db9d1aa931863d94f5ffa140e\nF test/jrnlmode.test 9b5bc01dac22223cb60ec2d5f97acf568d73820794386de5634dcadbea9e1946\nF test/jrnlmode2.test 8759a1d4657c064637f8b079592651530db738419e1d649c6df7048cd724363d\nF test/jrnlmode3.test 556b447a05be0e0963f4311e95ab1632b11c9eaa\nF test/json101.test bb71538005f2d9e18620bdd3b76839a93ca0be61903eb8d751a64e78cf99b8fb\nF test/json102.test eeb54efa221e50b74a2d6fb9259963b48d7414dca3ce2fdfdeed45cb28487bc1\nF test/json103.test aff6b7a4c17d5a20b487a7bc1a274bfdc63b829413bdfb83bedac42ec7f67e3b\nF test/json104.test 317f4ec4b2d87afbba4d2460cf5be297aea76f2285eb618d276dbcd40a50950f\nF test/json105.test 45f7d6a9a54c85f8a9589b68d3e7a1f42d02f2359911a8cdbad1f9988f571173\nF test/keyword1.test 37ef6bba5d2ed5b07ecdd6810571de2956599dff\nF test/kvtest.c 94da54bb66aae7a54e47cf7e4ea4acecc0f217560f79ad3abfcc0361d6d557ba\nF test/lastinsert.test 42e948fd6442f07d60acbd15d33fb86473e0ef63\nF test/laststmtchanges.test ae613f53819206b3222771828d024154d51db200\nF test/lemon-test01.y 58b764610fd934e189ffbb0bbfa33d171b9cb06019b55bdc04d090d6767e11d7\nF test/like.test 3d702d79bf871fa32985b1ce334294c587e3948d3ab972001e811a58577e8b3c\nF test/like2.test 3b2ee13149ba4a8a60b59756f4e5d345573852da\nF test/like3.test 4f940ad275c006319950054a7a65661f476772171b82b6fdf795e4dda36f246f\nF test/limit.test 0c99a27a87b14c646a9d583c7c89fd06c352663e\nF test/limit2.test 9409b033284642a859fafc95f29a5a6a557bd57c1f0d7c3f554bd64ed69df77e\nF test/loadext.test faa4f6eed07a5aac35d57fdd7bc07f8fc82464cfd327567c10cf0ba3c86cde04\nF test/loadext2.test 0408380b57adca04004247179837a18e866a74f7\nF test/lock.test be4fe08118fb988fed741f429b7dd5d65e1c90db\nF test/lock2.test 5242d8ac4e2d59c403aebff606af449b455aceff\nF test/lock3.test f271375930711ae044080f4fe6d6eda930870d00\nF test/lock4.test 27143363eda1622f03c133efc8db808fc331afd973486cb571ea71cd717d37b8\nF test/lock5.test c6c5e0ebcb21c61a572870cc86c0cb9f14cede38\nF test/lock6.test ad5b387a3a8096afd3c68a55b9535056431b0cf5\nF test/lock7.test 49f1eaff1cdc491cc5dee3669f3c671d9f172431\nF test/lock_common.tcl 2f3f7f2e9637f93ccf609df48ef5b27a50278b6b1cd752b445d52262e5841413\nF test/lookaside.test 5a828e7256f1ee4da8e1bdaa03373a3ccdb0f1ff98dfa82e9b76cb41a45b1083\nF test/main.test 6bbb3999fd461eb8fb335cbab97409a3d7f91bbb8da60635e8be3e4a04a77772\nF test/make-where7.tcl 05c16b5d4f5d6512881dfec560cb793915932ef9\nF test/malloc.test 18dd1c4188c81ca79cf123527c71b19ee0c31feb9947fdffb0dc6ceb1436816a\nF test/malloc3.test 6e88bae6312854a4adb4ecc2a6a5ea8c59b4db778b724ba718e1c43fc8c3c136\nF test/malloc4.test 957337613002b7058a85116493a262f679f3a261\nF test/malloc5.test 2e4ad7684a13389a44a840499cd47173a8d05f22f082d7d083eece433a7a64eb\nF test/malloc6.test 2f039d9821927eacae43e1831f815e157659a151\nF test/malloc7.test 7c68a32942858bc715284856c5507446bba88c3a\nF test/malloc8.test 9b7a3f8cb9cf0b12fff566e80a980b1767bd961d\nF test/malloc9.test 2307c6ee3703b0a21391f3ea92388b4b73f9105e\nF test/mallocA.test aea76f2dd8bcc2d19748f6b911e876cefda74a563753bf26af046e9d34bb97e6\nF test/mallocAll.test 98f1be74bc9f49a858bc4f361fc58e26486798be\nF test/mallocB.test bc475ab850cda896142ab935bbfbc74c24e51ed6\nF test/mallocC.test 3dffe16532f109293ce1ccecd0c31dca55ef08c4\nF test/mallocD.test f78c295e8e18ea3029e65ca08278690e00c22100\nF test/mallocE.test db1ed69d7eded1b080952e2a7c37f364ad241b08\nF test/mallocF.test 2d5c590ebc2fc7f0dcebdf5aa8498b9aed69107e\nF test/mallocG.test 0ff91b65c50bdaba680fb75d87fe4ad35bb7934f\nF test/mallocH.test 79b65aed612c9b3ed2dcdaa727c85895fd1bfbdb\nF test/mallocI.test 6c23a71df077fa5d387be90e7e669c5b368ca38a\nF test/mallocJ.test b5d1839da331d96223e5f458856f8ffe1366f62e\nF test/mallocK.test 1f4b5efbf61715ab79b20b38739ff4b3d110ceb53f54e5db6da1f01c083707ab\nF test/mallocL.test fb311ff80afddf3b1a75e52289081f4754d901dc\nF test/mallocM.test 78bbe9d3da84a5c679123cdb40d7b2010b18fc46e13897e4f253c6ba6fbff134\nF test/malloc_common.tcl aac62499b76be719fac31e7a3e54a7fd53272e7f\nF test/malloctraceviewer.tcl b7a54595270c1d201abf1c3f3d461f27eaf24cdef623ad08a0fe5e411264c8a9\nF test/manydb.test 28385ae2087967aa05c38624cec7d96ec74feb3e\nF test/mem5.test c6460fba403c5703141348cd90de1c294188c68f\nF test/memdb.test c1f2a343ad14398d5d6debda6ea33e80d0dafcc7\nF test/memdb1.test 58d92c2bf622cc5f0f41461e1b35cf64f3f787199544c2c1dada37d88753f9d4\nF test/memleak.test 10b9c6c57e19fc68c32941495e9ba1c50123f6e2\nF test/memsubsys1.test 9e7555a22173b8f1c96c281ce289b338fcba2abe8b157f8798ca195bbf1d347e\nF test/memsubsys2.test 3e4a8d0c05fd3e5fa92017c64666730a520c7e08\nF test/minmax.test 6751e87b409fe11b02e70a306d846fa544e25a41\nF test/minmax2.test 1edf66901ddfab26ae1e04165e8da834c8d3284e2b20aefb26b80ef217962eab\nF test/minmax3.test cc1e8b010136db0d01a6f2a29ba5a9f321034354\nF test/minmax4.test 272ca395257f05937dc96441c9dde4bc9fbf116a8d4fa02baeb0d13d50e36c87\nF test/misc1.test 7ce84b25df9872e7d7878613a96815d2ba5bc974ac4e15a50118dde8f3917599\nF test/misc2.test 00d7de54eda90e237fc9a38b9e5ccc769ebf6d4d\nF test/misc3.test cf3dda47d5dda3e53fc5804a100d3c82be736c9d\nF test/misc4.test 10cd6addb2fa9093df4751a1b92b50440175dd5468a6ec84d0386e78f087db0e\nF test/misc5.test c4aeaa0fa28faa08f2485309c38db4719e6cd1364215d5687a5b96d340a3fa58\nF test/misc6.test 953cc693924d88e6117aeba16f46f0bf5abede91\nF test/misc7.test 4f21954012e4eb0a923c54a311f38c81bf6798ccdd7b51584db46d4007f63daa\nF test/misc8.test 8fb0f31d7a8aed484d759773ab8ad12ec746a477f4a67394a4af0e677494c3ca\nF test/misuse.test 9e7f78402005e833af71dcab32d048003869eca5abcaccc985d4f8dc1d86bcc7\nF test/mjournal.test 28a08d5cb5fb5b5702a46e19176e45e964e0800d1f894677169e79f34030e152\nF test/mmap1.test fb04e0c10492455007624ade884ca0c8852ff3e4e11d95408f9709ca2ef7f626\nF test/mmap2.test 9d6dd9ddb4ad2379f29cc78f38ce1e63ed418022\nF test/mmap3.test b3c297e78e6a8520aafcc1a8f140535594c9086e\nF test/mmap4.test 2e2b4e32555b58da15176e6fe750f17c9dcf7f93\nF test/mmapfault.test d4c9eff9cd8c2dc14bc43e71e042f175b0a26fe3\nF test/mmapwarm.test 2272005969cd17a910077bd5082f70bc1fefad9a875afec7fc9af483898ecaf3\nF test/multiplex.test dc0d67b66f84b484a83cb8bbdf3f0a7f49562ccd\nF test/multiplex2.test 580ca5817c7edbe4cc68fa150609c9473393003a\nF test/multiplex3.test d228f59eac91839a977eac19f21d053f03e4d101\nF test/multiplex4.test e8ae4c4bd70606a5727743241f13b5701990abe4\nF test/mutex1.test ea2cc74d97f077b9e74c84cbd024f14d79a8126f\nF test/mutex2.test bfeaeac2e73095b2ac32285d2756e3a65e681660\nF test/nan.test 437d40e6d0778b050d7750726c0cbd2c9936b81962926e8f8c48ca698f00f4d1\nF test/nockpt.test 8c43b25af63b0bd620cf1b003529e37b6f1dc53bd22690e96a1bd73f78dde53a\nF test/nolock.test f196cf8b8fbea4e2ca345140a2b3f3b0da45c76e\nF test/normalize.test f23b6c5926c59548635fcf39678ac613e726121e073dd902a3062fbb83903b72\nF test/notify1.test 669b2b743618efdc18ca4b02f45423d5d2304abf\nF test/notify2.test 2ecabaa1305083856b7c39cf32816b612740c161\nF test/notify3.test 10ff25cde502e72a92053a2f215d64bece4ef934\nF test/notnull.test a37b663d5bb728d66fc182016613fb8e4a0a4bbf3d75b8876a7527f7d4ed3f18\nF test/null.test 0dcce4f04284ec66108c503327ad6d224c0752b3\nF test/nulls1.test a325e2f2148fb5c82cd5f734e7b60f5fa28f9394c318edf3140f36f57d39930a\nF test/numcast.test 5d126f7f581432e86a90d1e35cac625164aec4a1\nF test/numindex1.test 20a5450d4b056e48cd5db30e659f13347a099823\nF test/offset1.test f06b83657bcf26f9ce805e67450e189e282143b2\nF test/openv2.test 0d3040974bf402e19b7df4b783e447289d7ab394\nF test/optfuzz-db01.c a0c256905c8ac79f9a5de2f374a3d9f757bef0dca2a238dc7c10cc8a38031834\nF test/optfuzz-db01.txt 21f6bdeadc701cf11528276e2a55c70bfcb846ba42df327f979bd9e7b6ce7041\nF test/optfuzz.c 50e330304eb1992e15ddd11f3daaad9bcc0d9aaad09cb2bcc77f9515df2e88b1\nF test/orderby1.test e4501f54721f804ca56922e253403ac6775f88e9f07569994ce99212b3ca5b10\nF test/orderby2.test bc11009f7cd99d96b1b11e57b199b00633eb5b04\nF test/orderby3.test 8619d06a3debdcd80a27c0fdea5c40b468854b99\nF test/orderby4.test 4d39bfbaaa3ae64d026ca2ff166353d2edca4ba4\nF test/orderby5.test 5f4d6cb93cc2f6d3f4228354310a2ce1fbd95d5bbffcba8c6482eeb62a466407\nF test/orderby6.test 8b38138ab0972588240b3fca0985d2e400432859\nF test/orderby7.test 3d1383d52ade5b9eb3a173b3147fdd296f0202da\nF test/orderby8.test 23ef1a5d72bd3adcc2f65561c654295d1b8047bd\nF test/orderby9.test 87fb9548debcc2cd141c5299002dd94672fa76a3\nF test/orderbyA.test df608e59efc2ef50c1eddf1a773b272de3252e9401bfec86d04b52fd973866d5\nF test/oserror.test 1fc9746b83d778e70d115049747ba19c7fba154afce7cc165b09feb6ca6abbc5\nF test/ossfuzz.c 9636dad2092a05a32110df0ca06713038dd0c43dd89a77dabe4b8b0d71096715\nF test/ossshell.c f125c5bd16e537a2549aa579b328dd1c59905e7ab1338dfc210e755bb7b69f17\nF test/ovfl.test 199c482696defceacee8c8e0e0ef36da62726b2f\nF test/pager1.test 1e9ee778bdeaf4f7f09997d029cdaca6a42dfc2092edafe4f5e590acbf1eab13\nF test/pager2.test 67b8f40ae98112bcdba1f2b2d03ea83266418c71\nF test/pager3.test 4e9a83d6ca0838d7c602c9eb93d1357562d9059c1e02ffb138a8271020838370\nF test/pager4.test a122e9e6925d5b23b31e3dfef8c6a44bbf19590e\nF test/pagerfault.test 63c5da625562c66345ab4528790327ca63db2f6f9cbae2aba8cb7c51de3d1628\nF test/pagerfault2.test caf4c7facb914fd3b03a17b31ae2b180c8d6ca1f\nF test/pagerfault3.test 1003fcda009bf48a8e22a516e193b6ef0dd1bbd8\nF test/pageropt.test 84e4cc5cbca285357f7906e99b21be4f2bf5abc0\nF test/pagesize.test 5769fc62d8c890a83a503f67d47508dfdc543305\nF test/parser1.test 6ccdf5e459a5dc4673d3273dc311a7e9742ca952dd0551a6a6320d27035ce4b3\nF test/pcache.test c8acbedd3b6fd0f9a7ca887a83b11d24a007972b\nF test/pcache2.test af7f3deb1a819f77a6d0d81534e97d1cf62cd442\nF test/percentile.test 4243af26b8f3f4555abe166f723715a1f74c77ff\nF test/permutations.test 8587800fe1a0eb01456a3f4500b821e54e3347e78acf11dbf05f4990530f6cee\nF test/pg_common.tcl 222a1bad1c41c308fa366313cd7b51b3be7e9b21c8736a421b974ac941693b54\nF test/pragma.test 59becdfd720b80d463ab750f69f7118fde10dfd556aa5d554f3bf6b7e5ea7533\nF test/pragma2.test e5d5c176360c321344249354c0c16aec46214c9f\nF test/pragma3.test 8300aa9c63cff1027006ca34bf413a148abbd6dcd471fa9a1ded322fe18c0df9\nF test/pragma4.test 10c624e45a83c0096a82a7579a5ff658542391d3b77355192da6572c8c17c00b\nF test/pragma5.test 2be6a44c91e8585ccb4c71c5f221ccebe0692a49557215a912916ed391188959\nF test/pragmafault.test 275edaf3161771d37de60e5c2b412627ac94cef11739236bec12ed1258b240f8\nF test/prefixes.test b524a1c44bffec225b9aec98bd728480352aa8532ac4c15771fb85e8beef65d9\nF test/printf.test 0300699733e53101b2ce48800518427249edd4053bb50fa0621c6607482f0fdb\nF test/printf2.test 30b5dd0b4b992dc5626496846ecce17ff592cacbcb11c3e589f3ac4d7e129dae\nF test/progress.test ebab27f670bd0d4eb9d20d49cef96e68141d92fb\nF test/ptrchng.test ef1aa72d6cf35a2bbd0869a649b744e9d84977fc\nF test/pushdown.test 5e72c51c5e33253ed639ccee1e01ce62d62b6eee5ca893cd82334e4ee7b1d7fc\nF test/queryonly.test 5f653159e0f552f0552d43259890c1089391dcca\nF test/quick.test 1681febc928d686362d50057c642f77a02c62e57\nF test/quota-glob.test 32901e9eed6705d68ca3faee2a06b73b57cb3c26\nF test/quota.test bfb269ce81ea52f593f9648316cd5013d766dd2a\nF test/quota2.test 7dc12e08b11cbc4c16c9ba2aa2e040ea8d8ab4b8\nF test/quote.test 626149eda89ee64d81a3790de370f9f0211921b11568a49c28c861f394330508\nF test/randexpr1.tcl 40dec52119ed3a2b8b2a773bce24b63a3a746459\nF test/randexpr1.test eda062a97e60f9c38ae8d806b03b0ddf23d796df\nF test/rbu.test 168573d353cd0fd10196b87b0caa322c144ef736\nF test/rdonly.test 64e2696c322e3538df0b1ed624e21f9a23ed9ff8\nF test/recover.test ccb8c2623902a92ebb76770edd075cb4f75a4760bb7afde38026572c6e79070d\nF test/regexp1.test 497ea812f264d12b6198d6e50a76be4a1973a9d8\nF test/regexp2.test 40e894223b3d6672655481493f1be12012f2b33c\nF test/reindex.test cd9d6021729910ece82267b4f5e1b5ac2911a7566c43b43c176a6a4732e2118d\nF test/releasetest.tcl fb76d8fcc95ac29d6356cd9e52b726ab9e43a24082897618dfbcb7c2b0049153 x\nF test/releasetest_data.tcl 9919fc6ac5bc92f8878fecfd1840db15999f660a6c9f609240b41aa62b885c88\nF test/resetdb.test 8062cf10a09d8c048f8de7711e94571c38b38168db0e5877ba7561789e5eeb2b\nF test/resolver01.test f4022acafda7f4d40eca94dbf16bc5fc4ac30ceb\nF test/rollback.test 06680159bc6746d0f26276e339e3ae2f951c64812468308838e0a3362d911eaa\nF test/rollback2.test bc868d57899dc6972e2b4483faae0e03365a0556941474eec487ae21d8d38bb6\nF test/rollbackfault.test 0e646aeab8840c399cfbfa43daab46fd609cf04a\nF test/round1.test 768018b04522ca420b1aba8a24bd76091d269f3bce3902af3ec6ebcee41ab21e\nF test/rowallock.test 3f88ec6819489d0b2341c7a7528ae17c053ab7cc\nF test/rowhash.test 0bc1d31415e4575d10cacf31e1a66b5cc0f8be81\nF test/rowid.test bfbd7b97d9267660be3c8f28507c4ed7f205196b8877c0db42df347c2e8845e3\nF test/rowvalue.test c39cc0be5e33f5294fc9224216198d6709d713ea948fdf8f42d89568e97912c9\nF test/rowvalue2.test 060d238b7e5639a7c5630cb5e63e311b44efef2b\nF test/rowvalue3.test 3068f508753af69884b12125995f023da0dbb256\nF test/rowvalue4.test 02e35f7762371c2f57ebd856aa056eac56cb27ef7715a0bb31eac1895a745356\nF test/rowvalue5.test c81c7d8cf36711ab37675ad7376084ae2a359cb6\nF test/rowvalue6.test d19b54feb604d5601f8614b15e214e0774c01087\nF test/rowvalue7.test c1cbdbf407029db01f87764097c6ac02a1c5a37efd2776eff32a9cdfdf6f2dba\nF test/rowvalue8.test 5900eddad9e2c3c2e26f1a95f74aafc1232ee5e0\nF test/rowvalue9.test d8dd2c6ecac432dadaa79e41dc2434f007be1b6b\nF test/rowvaluefault.test 7cd9ccc6c2fbdd881672984087aad0491bb75504\nF test/rowvaluevtab.test d166df5b666662de1ebf40d6f3849f8a76b34e17183a6cc7f81b420c462ce447\nF test/rtree.test 0c8d9dd458d6824e59683c19ab2ffa9ef946f798\nF test/run-wordcount.sh 891e89c4c2d16e629cd45951d4ed899ad12afc09\nF test/savepoint.test 1f8a6b1aea9a0d05837adc463d4bf47bd9d0f1c842f1c2a9caccd639baf34bf9\nF test/savepoint2.test 9b8543940572a2f01a18298c3135ad0c9f4f67d7\nF test/savepoint4.test c8f8159ade6d2acd9128be61e1230f1c1edc6cc0\nF test/savepoint5.test 0735db177e0ebbaedc39812c8d065075d563c4fd\nF test/savepoint6.test f41279c5e137139fa5c21485773332c7adb98cd7\nF test/savepoint7.test cde525ea3075283eb950cdcdefe23ead4f700daa\nF test/savepointfault.test f044eac64b59f09746c7020ee261734de82bf9b2\nF test/scanstatus.test 874e35011779b07725a47dbf1dd6282b0ca04af7e028fb0b534ee544b571be42\nF test/schema.test 5dd11c96ba64744de955315d2e4f8992e447533690153b93377dffb2a5ef5431\nF test/schema2.test 906408621ea881fdb496d878b1822572a34e32c5\nF test/schema3.test 1bc1008e1f8cb5654b248c55f27249366eb7ed38\nF test/schema4.test 3b26c9fa916abb6dadf894137adcf41b7796f7b9\nF test/schema5.test 29699b4421f183c8f0e88bd28ce7d75d13ea653e\nF test/schema6.test e4bd1f23d368695eb9e7b51ef6e02ca0642ea2ab4a52579959826b5e7dce1f9b\nF test/schemafault.test 1936bceca55ac82c5efbcc9fc91a1933e45c8d1e1d106b9a7e56c972a5a2a51e\nF test/securedel.test 2f70b2449186a1921bd01ec9da407fbfa98c3a7a5521854c300c194b2ff09384\nF test/securedel2.test 2d54c28e46eb1fd6902089958b20b1b056c6f1c5\nF test/select1.test 703154cbf66d0a9fbbd5b771dc3d2c4d3700121d133d695958d4a9c5a33251e8\nF test/select2.test 352480e0e9c66eda9c3044e412abdf5be0215b56\nF test/select3.test 3905450067c28766bc83ee397f6d87342de868baa60f2bcfd00f286dfbd62cb9\nF test/select4.test 5389d9895968d1196c457d59b3ee6515d771d328\nF test/select5.test df9ec0d218cedceb4fe7b63262025b547b50a55e59148c6f40b60ca25f1d4546\nF test/select6.test 319d45e414cdd321bf17cfacedaf19e3935ad64dac357c53f1492338c6e9b801\nF test/select7.test f659f231489349e8c5734e610803d7654207318f\nF test/select8.test 8c8f5ae43894c891efc5755ed905467d1d67ad5d\nF test/select9.test aebc2bb0c3bc44606125033cbcaac2c8d1f33a95\nF test/selectA.test b8a590f6493cad5b0bb4dfe1709bf7dcda0b6c40bb4caf32d1e36a89eebc8fc5\nF test/selectB.test 954e4e49cf1f896d61794e440669e03a27ceea25\nF test/selectC.test e25243f8ca503e06f252eb0218976d07cfeceac3\nF test/selectD.test fc20452847a01775710090383cfb4423275d2f745fed61f34fbf37573ac0d214\nF test/selectE.test a8730ca330fcf40ace158f134f4fe0eb00c7edbf\nF test/selectF.test 21c94e6438f76537b72532fa9fd4710cdd455fc3\nF test/selectG.test 089f7d3d7e6db91566f00b036cb353107a2cca6220eb1cb264085a836dae8840\nF test/server1.test c2b00864514a68a0e6fd518659dc95d0050307a357a08969872bef027d785dc4\nF test/session.test 78fa2365e93d3663a6e933f86e7afc395adf18be\nF test/sessionfuzz-data1.db 1f8d5def831f19b1c74571037f0d53a588ea49a6c4ca2a028fc0c27ef896dbcb\nF test/sessionfuzz.c be9c4d4afd359ce80024d8b541b9b8a880510aef5cf263df56fc0e9b947727f1\nF test/shared.test 1826673eb5eb745fb91a3bdac99a7737057742ae38dcb0fe076a384d6727578b\nF test/shared2.test 03eb4a8d372e290107d34b6ce1809919a698e879\nF test/shared3.test ab693f9b6e156b8bfb2a0ad94f29fe69602a5d38\nF test/shared4.test c75f476804e76e26bf6fa0e7b421fb0ca7d07558\nF test/shared6.test 866bb4982c45ce216c61ded5e8fde4e7e2f3ffa9\nF test/shared7.test a81e99f83e6c51b02ac99c96fb3a2a7b5978c956\nF test/shared8.test 933ed7d71f598bb6c7a8c192a3cd30f2562fdccf514df383798599c34ffa672f\nF test/shared9.test 5f2a8f79b4d6c7d107a01ffa1ed05ae7e6333e21\nF test/sharedA.test 49d87ec54ab640fbbc3786ee3c01de94aaa482a3a9f834ad3fe92770eb69e281\nF test/sharedB.test 16cc7178e20965d75278f410943109b77b2e645e\nF test/shared_err.test 32634e404a3317eeb94abc7a099c556a346fdb8fb3858dbe222a4cbb8926a939\nF test/sharedlock.test 5ede3c37439067c43b0198f580fd374ebf15d304\nF test/shell1.test 3c9707dce15e8fdca529503378660f099777d3ddcedccf801a37589a405c5942\nF test/shell2.test e242a9912f44f4c23c3d1d802a83e934e84c853b\nF test/shell3.test ac8c2b744014c3e9a0e26bfd829ab65f00923dc1a91ffd044863e9423cc91494\nF test/shell4.test 1c6aef11daaa2d6830acaba3ac9cbec93fbc1c3d5530743a637f39b3987d08ce\nF test/shell5.test 23939a4c51f0421330ea61dbd3c74f9c215f5f8d3d1a94846da6ffc777a35458\nF test/shell6.test 1ceb51b2678c472ba6cf1e5da96679ce8347889fe2c3bf93a0e0fa73f00b00d3\nF test/shell7.test 115132f66d0463417f408562cc2cf534f6bbc6d83a6d50f0072a9eb171bae97f\nF test/shell8.test 96be02ea0c21f05b24c1883d7b711a1fa8525a68ab7b636aacf6057876941013\nF test/shmlock.test 3dbf017d34ab0c60abe6a44e447d3552154bd0c87b41eaf5ceacd408dd13fda5\nF test/shortread1.test bb591ef20f0fd9ed26d0d12e80eee6d7ac8897a3\nF test/show_speedtest1_rtree.tcl 32e6c5f073d7426148a6936a0408f4b5b169aba5\nF test/shrink.test 1b4330b1fd9e818c04726d45cb28db73087535ce\nF test/sidedelete.test f0ad71abe6233e3b153100f3b8d679b19a488329\nF test/skipscan1.test 2a64ca7b3e6246bb86b47c9051bfd324603b1b60675fe606513535267713e080\nF test/skipscan2.test 3eb703ce794f139e7b83567911046298bcde29606116727f9b700ce34f559d2d\nF test/skipscan3.test ec5bab3f81c7038b43450e7b3062e04a198bdbb5\nF test/skipscan5.test 67817a4b6857c47e0e33ba3e506da6f23ef68de2\nF test/skipscan6.test 0b4cd1b4ac9f84d91454df513c99a4932fa07e8f27b8049bea605068b3e34ac7\nF test/snapshot.test a504f2e7009f512ef66c719f0ea1c55a556bdaf1e1312c80a04d46fc1a3e9632\nF test/snapshot2.test 8d6ff5dd9cc503f6e12d408a30409c3f9c653507b24408d9cd7195931c89bc54\nF test/snapshot3.test 8744313270c55f6e18574283553d3c5c5fe4c5970585663613a0e75c151e599b\nF test/snapshot4.test d4e9347ef2fcabc491fc893506c7bbaf334da3be111d6eb4f3a97cc623b78322\nF test/snapshot_fault.test f6c5ef7cb93bf92fbb4e864ecc5c87df7d3a250064838822db5b4d3a5563ede4\nF test/snapshot_up.test a0a29c4cf33475fcef07c3f8e64af795e24ab91b4cc68295863402a393cdd41c\nF test/soak.test 18944cf21b94a7fe0df02016a6ee1e9632bc4e8d095a0cb49d95e15d5cca2d5c\nF test/softheap1.test 843cd84db9891b2d01b9ab64cef3e9020f98d087\nF test/sort.test c2adc635c2564241fefec0b3a68391ef6868fd3b\nF test/sort2.test cc23b7c19d684657559e8a55b02f7fcee03851d0\nF test/sort3.test 1480ed7c4c157682542224e05e3b75faf4a149e5\nF test/sort4.test 5c34d9623a4ae5921d956dfa2b70e77ed0fc6e5c\nF test/sort5.test 6b43ae0e2169b5ceed441844492e55ba7f1ae0790528395ddf7888ab3094525d\nF test/sorterref.test a13ed207a0eea3c7898f308f979bfb518f68c598ec737d2c494dfd3deaa83506\nF test/sortfault.test d4ccf606a0c77498e2beb542764fd9394acb4d66\nF test/speed1.test f2974a91d79f58507ada01864c0e323093065452\nF test/speed1p.explain d841e650a04728b39e6740296b852dccdca9b2cb\nF test/speed1p.test b180e98609c7677382cf618c0ec9b69f789033a8\nF test/speed2.test 53177056baf6556dcbdcf032bbdfc41c1aa74ded\nF test/speed3.test 694affeb9100526007436334cf7d08f3d74b85ef\nF test/speed4.test abc0ad3399dcf9703abed2fff8705e4f8e416715\nF test/speed4p.explain 6b5f104ebeb34a038b2f714150f51d01143e59aa\nF test/speed4p.test 377a0c48e5a92e0b11c1c5ebb1bc9d83a7312c922bc0cb05970ef5d6a96d1f0c\nF test/speedtest1.c f3bfe3c6a87cbd88e4c4e38005d972bcc1019d1b2fe9569425f86629b11f6c31\nF test/spellfix.test 951a6405d49d1a23d6b78027d3877b4a33eeb8221dcab5704b499755bb4f552e\nF test/spellfix2.test dfc8f519a3fc204cb2dfa8b4f29821ae90f6f8c3\nF test/spellfix3.test 0f9efaaa502a0e0a09848028518a6fb096c8ad33\nF test/spellfix4.test 51c7c26514ade169855c66bcf130bd5acfb4d7fd090cc624645ab275ae6a41fb\nF test/sqldiff1.test 28cd737cf1b0078b1ec1bbf425e674c47785835e\nF test/sqllimits1.test 264f4b0f941800ba139d25e33ee919c5d95fea06dfbe8ac291d6811a30984ca5\nF test/sqllog.test 6af6cb0b09f4e44e1917e06ce85be7670302517a\nF test/stat.test 05669008edc5ed950e817c24e8c4b66840fda64d8c76bae27e5fc1bd23d95675\nF test/statfault.test f525a7bf633e50afd027700e9a486090684b1ac1\nF test/stmt.test 54ed2cc0764bf3e48a058331813c3dbd19fc1d0827c3d8369914a5d8f564ec75\nF test/stmtvtab1.test 6873dfb24f8e79cbb5b799b95c2e4349060eb7a3b811982749a84b359468e2d5\nF test/subjournal.test 8d4e2572c0ee9a15549f0d8e40863161295107e52f07a3e8012a2e1fdd093c49\nF test/subquery.test d7268d193dd33d5505df965399d3a594e76ae13f\nF test/subquery2.test 90cf944b9de8204569cf656028391e4af1ccc8c0cc02d4ef38ee3be8de1ffb12\nF test/subselect.test 0966aa8e720224dbd6a5e769a3ec2a723e332303\nF test/substr.test 18f57c4ca8a598805c4d64e304c418734d843c1a\nF test/subtype1.test 7fe09496352f97053af1437150751be2d0a0cae8\nF test/superlock.test ec94f0556b6488d97f71c79f9061ae08d9ab8f12\nF test/swarmvtab.test 9a3fd5ab3e9b3c976ad1b3d7646aab725114f2ac26b59395d0778b33bab6cdaf\nF test/swarmvtab2.test c948cb2fdfc5b01d85e8f6d6504854202dc1a0782ab2a0ed61538f27cbd0aa5c\nF test/swarmvtab3.test 247aa38b6ebd2b99db2075847ae47e789ac34f1c2ab5c720dfcffd990004c544\nF test/swarmvtabfault.test 8a67a9f27c61073a47990829e92bc0c64420a807cb642b15a25f6c788210ed95\nF test/symlink.test 72b22238d4405ba34df8e60b335d290a3b1129fd5c260835c944c1e4e77288a9\nF test/symlink2.test 9531f475a53d8781c4f81373f87faf2e2aff4f5fb2102ec6386e0c827916a670\nF test/sync.test 89539f4973c010eda5638407e71ca7fddbcd8e0594f4c9980229f804d4333092\nF test/sync2.test 8f9f7d4f6d5be8ca8941a8dadcc4299e558cb6a1ff653a9469146c7a76ef2039\nF test/syscall.test a39d9a36f852ae6e4800f861bc2f2e83f68bbc2112d9399931ecfadeabd2d69d\nF test/sysfault.test c9f2b0d8d677558f74de750c75e12a5454719d04\nF test/tabfunc01.test 5ca6d004157a3e886a55a9387b960cc0db41acd88753eb597ff409ec6cfb1be0\nF test/table.test eb3463b7add9f16a5bb836badf118cf391b809d09fdccd1f79684600d07ec132\nF test/tableapi.test ecbcc29c4ab62c1912c3717c48ea5c5e59f7d64e4a91034e6148bd2b82f177f4\nF test/tableopts.test dba698ba97251017b7c80d738c198d39ab747930\nF test/tclsqlite.test c4a5f5af3672fbe28a0aa322b88d9d1ce2225b6b1284ea11ede2e6d38e7c812c\nF test/tempdb.test 4cdaa23ddd8acb4d79cbb1b68ccdfd09b0537aaba909ca69a876157c2a2cbd08\nF test/tempdb2.test 353864e96fd3ae2f70773d0ffbf8b1fe48589b02c2ec05013b540879410c3440\nF test/tempfault.test 0c0d349c9a99bf5f374655742577f8712c647900\nF test/temptable.test d2c9b87a54147161bcd1822e30c1d1cd891e5b30\nF test/temptable2.test d2940417496e2b9548e01d09990763fbe88c316504033256d51493e1f1a5ce6a\nF test/temptable3.test d11a0974e52b347e45ee54ef1923c91ed91e4637\nF test/temptrigger.test 38f0ca479b1822d3117069e014daabcaacefffcc\nF test/tester.tcl abba168acd7f01dbfa3ffdbf402d151eb97e8a824d9208e845ab34c194441483\nF test/thread001.test b61a29dd87cf669f5f6ac96124a7c97d71b0c80d9012746072055877055cf9ef\nF test/thread002.test e630504f8a06c00bf8bbe68528774dd96aeb2e58\nF test/thread003.test ee4c9efc3b86a6a2767516a37bd64251272560a7\nF test/thread004.test f51dfc3936184aaf73ee85f315224baad272a87f\nF test/thread005.test 50d10b5684399676174bd96c94ad4250b1a2c8b6\nF test/thread1.test df115faa10a4ba1d456e9d4d9ec165016903eae4\nF test/thread2.test f35d2106452b77523b3a2b7d1dcde2e5ee8f9e46\nF test/thread_common.tcl 334639cadcb9f912bf82aa73f49efd5282e6cadd\nF test/threadtest1.c 6029d9c5567db28e6dc908a0c63099c3ba6c383b\nF test/threadtest2.c a70a8e94bef23339d34226eb9521015ef99f4df8\nF test/threadtest3.c 38a612ea62854349ed66372f330a40d73c5cf956\nF test/threadtest4.c c1e67136ceb6c7ec8184e56ac61db28f96bd2925\nF test/time-wordcount.sh 8e0b0f8109367827ad5d58f5cc849705731e4b90\nF test/tkt-02a8e81d44.test 6c80d9c7514e2a42d4918bf87bf6bc54f379110c\nF test/tkt-18458b1a.test 6a62cb1ee50fa3c620da59e3a6f531eb38fceaf7e2166203816b724524e6f1d6\nF test/tkt-26ff0c2d1e.test c15bec890c4d226c0da2f35ff30f9e84c169cfef90e73a8cb5cec11d723dfa96\nF test/tkt-2a5629202f.test 0521bd25658428baa26665aa53ffed9367d33af2\nF test/tkt-2d1a5c67d.test be1326f3061caec85085f4c9ee4490561ca037c0\nF test/tkt-2ea2425d34.test 1cf13e6f75d149b3209a0cb32927a82d3d79fb28\nF test/tkt-31338dca7e.test 6fb8807851964da0d24e942f2e19c7c705b9fb58\nF test/tkt-313723c356.test 4b306ad45c736cedf2f5221f6155b92143244b6d\nF test/tkt-385a5b56b9.test 5204a7cba0e28c99df0acbf95af5e1af4d32965a7a14de6eccebf949607618b1\nF test/tkt-38cb5df375.test f3cc8671f1eb604d4ae9cf886ed4366bec656678\nF test/tkt-3998683a16.test 6d1d04d551ed1704eb3396ca87bb9ccc8c5c1eb7\nF test/tkt-3a77c9714e.test 90e3e8455ee945a4076d4c44062b8845708af24a880355328fe7008f2047c9f0\nF test/tkt-3fe897352e.test 27e26eb0f1811aeba4d65aba43a4c52e99da5e70\nF test/tkt-4a03edc4c8.test 91c0e135888cdc3d4eea82406a44b05c8c1648d0\nF test/tkt-4c86b126f2.test cbcc611becd0396890169ab23102dd70048bbc9a\nF test/tkt-4dd95f6943.test 3d0ce415d2ee15d3d564121960016b9c7be79407\nF test/tkt-4ef7e3cfca.test 3965ae11cc9cf6e334f9d7d3c1e20bf8d56254b1\nF test/tkt-54844eea3f.test a12b851128f46a695e4e378cca67409b9b8f5894\nF test/tkt-5d863f876e.test 726e76d725f6fe0eb2fc8a522b721b79807380ee\nF test/tkt-5e10420e8d.test 904d1687b3c06d43e5b3555bbcf6802e7c0ffd84\nF test/tkt-5ee23731f.test 9db6e1d7209dc0794948b260d6f82b2b1de83a9f\nF test/tkt-6bfb98dfc0.test 24780633627b5cfc0635a5500c2389ebfb563336\nF test/tkt-752e1646fc.test ea78d88d14fe9866bdd991c634483334639e13bf\nF test/tkt-78e04e52ea.test cb44d0f5e7940223be740a39913a1b9b9b30d7e4a17ed3349141f893bae1b8f2\nF test/tkt-7a31705a7e6.test 9e9c057b6a9497c8f7ba7b16871029414ccf6550e7345d9085d6d71c9a56bb6f\nF test/tkt-7bbfb7d442.test 7b2cd79c7a17ae6750e75ec1a7846712a69c9d18\nF test/tkt-80ba201079.test 105a721e6aad0ae3c5946d7615d1e4d03f6145b8\nF test/tkt-80e031a00f.test 9ee36348b761bf7c14261e002b75a4c0d5a04d4c\nF test/tkt-8454a207b9.test c583a9f814a82a2b5ba95207f55001c9f0cd816c\nF test/tkt-868145d012.test a5f941107ece6a64410ca4755c6329b7eb57a356\nF test/tkt-8c63ff0ec.test 258b7fc8d7e4e1cb5362c7d65c143528b9c4cbed\nF test/tkt-91e2e8ba6f.test 08c4f94ae07696b05c9b822da0b4e5337a2f54c5\nF test/tkt-94c04eaadb.test f738c57c7f68ab8be1c054415af7774617cb6223\nF test/tkt-9a8b09f8e6.test b2ef151d0984b2ebf237760dbeaa50724e5a0667\nF test/tkt-9d68c883.test 16f7cb96781ba579bc2e19bb14b4ad609d9774b6\nF test/tkt-9f2eb3abac.test cb6123ac695a08b4454c3792fbe85108f67fabf8\nF test/tkt-a7b7803e.test 159ef554234fa1f9fb318c751b284bd1cf858da4\nF test/tkt-a7debbe0.test e295fa83cd4416a8ca37b354eb5fadefc5e81fb55253db538d35261fe9c95067\nF test/tkt-a8a0d2996a.test 002e1cde8fc30c39611b52cf981c88200b858765748556822da72e0d32fac73e\nF test/tkt-b1d3a2e531.test 8f7576e41ca179289ee1a8fee28386fd8e4b0550\nF test/tkt-b351d95f9.test d14a503c414c5c58fdde3e80f9a3cfef986498c0\nF test/tkt-b72787b1.test a95e8cdad0b98af1853ac7f0afd4ab27b77bf5f3\nF test/tkt-b75a9ca6b0.test ade89229d853a67a21bbd5e6e1e787a8f9d21f19908d1b7fca6bf3d4d5aa0767\nF test/tkt-ba7cbfaedc.test b4c0deccc12aeb55cfdb57935b16b5d67c5a9877\nF test/tkt-bd484a090c.test 60460bf946f79a79712b71f202eda501ca99b898\nF test/tkt-bdc6bbbb38.test fc38bb09bdd440e3513a1f5f98fc60a075182d7d\nF test/tkt-c48d99d690.test ba61977d62ab612fc515b3c488a6fbd6464a2447\nF test/tkt-c694113d5.test 82c461924ada5c14866c47e85535b0b0923ba16a2e907e370061a5ca77f65d77\nF test/tkt-cbd054fa6b.test 708475ef4d730a6853512c8ce363bcbd3becf0e26826e1f4cd46e2f52ff38edf\nF test/tkt-d11f09d36e.test d999b548fef885d1d1afa49a0e8544ecf436869d\nF test/tkt-d635236375.test 9d37e988b47d87505bc9445be0ca447002df5d09\nF test/tkt-d82e3f3721.test bcc0dfba658d15bab30fd4a9320c9e35d214ce30\nF test/tkt-f3e5abed55.test d5a0126118142d13e27f6ce9f4c47096e9321c00\nF test/tkt-f67b41381a.test a23bc124c981662db712167bacd0ed8ad11abac9\nF test/tkt-f777251dc7a.test d1a8fc3eefb7a9e64d19ff24d5c8c94c34a632fb\nF test/tkt-f7b4edec.test d998a08ff2b18b7f62edce8e3044317c45efe6c7\nF test/tkt-f973c7ac31.test 28ef85c7f015477916795246d8286aeda39d4ead\nF test/tkt-fa7bf5ec.test 9102dfea58aa371d78969da735f9392c57e2e035\nF test/tkt-fc62af4523.test 72825d3febdedcd5593a27989fc05accdbfc2bb4\nF test/tkt-fc7bd6358f.test 634bb4af7d661e82d6b61b80c86727bad698e08f\nF test/tkt1435.test f8c52c41de6e5ca02f1845f3a46e18e25cadac00\nF test/tkt1443.test bacc311da5c96a227bf8c167e77a30c99f8e8368\nF test/tkt1444.test a9d72f9e942708bd82dde6c707da61c489e213e9\nF test/tkt1449.test 93584a449752d52b07d2cfc280a69842b6e16ed5\nF test/tkt1473.test 9d000af3e11a4450d4c596f5e58b4b0d24eb0f8b\nF test/tkt1501.test 2064f98e00871848af4b2f517e46c1a7fb2e32db\nF test/tkt1512.test a1df1f66caf0b9122d6220c15dcee230298c2c2f\nF test/tkt1514.test ddef38e34fea72eb1ab935ded9f17a3fb71dd9df\nF test/tkt1536.test 83ff7a7b6e248016f8d682d4f7a4ae114070d466\nF test/tkt1537.test e3a14332de9770be8ff14bd15c19a49cbec10808\nF test/tkt1567.test 52f329386ac77e59260d4af1c58490d61377db20\nF test/tkt1644.test 80b6a2bb17885f3cf1cb886d97cdad13232bb869\nF test/tkt1667.test 4700d931ed19ea3983e8e703becb28079250b460\nF test/tkt1873.test 0e1b8c023050a430c2525179ed4022ddc7c31264\nF test/tkt2141.test f543d96f50d5a5dc0bc744f7db74ea166720ce46\nF test/tkt2192.test ff40157e5f42e65f844255d220fc6b290470942f\nF test/tkt2213.test a9702175601a57b61aba095a233b001d6f362474\nF test/tkt2251.test 5aab8c7898cd2df2a68fe19289cc29e8f5cf8c82\nF test/tkt2285.test cca17be61cf600b397188e77e7143844d2b977e9\nF test/tkt2332.test fc955609b958ca86dfa102832243370a0cc84070\nF test/tkt2339.test 73bd17818924cd2ac442e5fd9916b58565739450\nF test/tkt2391.test ab7a11be7402da8b51a5be603425367aa0684567\nF test/tkt2409.test be0d60e7d283f639dccea4b0b5e1cd3a4851fb5b\nF test/tkt2450.test 77ed94863f2049c1420288ddfea2d41e5e0971d6\nF test/tkt2565.test 8be666e927cb207aae88188f31c331870878b650\nF test/tkt2640.test 28134f5d1e05658ef182520cf0b680fa3de5211b\nF test/tkt2643.test 3f3ebb743da00d4fed4fcf6daed92a0e18e57813\nF test/tkt2686.test 6ee01c9b9e9c48f6d3a1fdd553b1cc4258f903d6\nF test/tkt2767.test 569000d842678f9cf2db7e0d1b27cbc9011381b0\nF test/tkt2817.test f31839e01f4243cff7399ef654d3af3558cb8d8d\nF test/tkt2820.test 39940276b3436d125deb7d8ebeee053e4cf13213\nF test/tkt2822.test f391776423a7c0d0949edfce375708bfb0f3141e\nF test/tkt2832.test a9b0b74a02dca166a04d9e37739c414b10929caa\nF test/tkt2854.test e432965db29e27e16f539b2ba7f502eb2ccc49af\nF test/tkt2920.test a8737380e4ae6424e00c0273dc12775704efbebf\nF test/tkt2927.test 4752868b9eeeb07a217f7f19f4cbaac98d6d086d\nF test/tkt2942.test c5c87d179799ca6d1fbe83c815510b87cd5ec7ce\nF test/tkt3080.test 1bca7579260920a66b4dd7e196e807c0f25ff804\nF test/tkt3093.test fbdbc5b4969244ad11f540759003e361fcaf391f\nF test/tkt3121.test 536df66a02838c26a12fe98639354ca1290ca68b\nF test/tkt3201.test f1500ccecc0d578dc4cde7d3242008297c4d59b3\nF test/tkt3292.test 7bad4423cf5eb075dbb58511d66d46fe816744754c9f0050ae60157f71a4fca7\nF test/tkt3298.test 20fd8773b825cb602e033aa04f8602e1ebdcd93c\nF test/tkt3334.test 9756631e3c4aa3c416362c279e3c0953a83b7ca8274cb81a13264bb56296d8b0\nF test/tkt3346.test 6f67c3ed7db94dfc5df4f5f0b63809a1f611e01a\nF test/tkt3357.test 77c37c6482b526fe89941ce951c22d011f5922ed\nF test/tkt3419.test 1bbf36d7ea03b638c15804251287c2391f5c1f6b\nF test/tkt3424.test 61f831bd2b071bd128fa5d00fbda57e656ca5812\nF test/tkt3442.test a1fc47c669e651d16494de3ff349bcb53281456f2ca02c8bc14220b6044bbfe8\nF test/tkt3457.test 5651e2cbb94645b677ec663160b9e192b87b7d365aecdfb24e19f749575a6fc2\nF test/tkt3461.test 228ea328a5a21e8663f80ee3d212a6ad92549a19\nF test/tkt3493.test 1686cbde85f8721fc1bdc0ee72f2ef2f63139218\nF test/tkt3508.test d75704db9501625c7f7deec119fcaf1696aefb7d\nF test/tkt3522.test 22ce2ebbcb04a6be56c0977d405c207967318fd6\nF test/tkt3527.test 1a6a48441b560bdc53aec581a868eb576234874d\nF test/tkt3541.test 5dc257bde9bc833ab9cc6844bf170b998dbb950a\nF test/tkt3554.test f599967f279077bace39220cbe76085c7b423725\nF test/tkt3581.test 1966b7193f1e3f14951cce8c66907ae69454e9a3\nF test/tkt35xx.test f38c1b03713179d414969187c941466e44945b35\nF test/tkt3630.test 9a934c58c259f89a0ae6bb6bb846c56285a6fd0f\nF test/tkt3718.test 3b59dcb5c4e7754dacd91e7fd353a61492cc402a\nF test/tkt3731.test 0c5f4cbffe102d43c3b2188af91a9e36348f974b\nF test/tkt3757.test 10cd679a88675c880533083fc79ac04324525595\nF test/tkt3761.test b95ea9c98f21cf91325f18a984887e62caceab33\nF test/tkt3762.test 4d439ff7abdc8d9323150269d182c37c2d514576\nF test/tkt3773.test 7bca904d2a647a6a4a291bd86d7fd7c73855b789\nF test/tkt3791.test a6624b9a80b216a26cf473607f42f3e51898c267\nF test/tkt3793.test d90ffd75c52413908d15e1c44fc2ea9c80fcc449\nF test/tkt3810.test 09608d81c63a6ff3aaf7bc70717909c51f5f4048\nF test/tkt3824.test 150aa00bb6220672e5f0eb14dc8eaa36750425f0\nF test/tkt3832.test 2300d10d57562b89875b72148338ac3e14f8847d\nF test/tkt3838.test 292e72489101cd1320d7278dc111c173ebf334d4\nF test/tkt3841.test 4659845bc53f809a5932c61c6ce8c5bb9d6b947f\nF test/tkt3871.test d921703d07c68f4fd5312073215a17fa34b0401d\nF test/tkt3879.test 2ad5bef2c87e9991ce941e054c31abe26ef7fb90\nF test/tkt3911.test 74cd324f3ba653040cc6d94cc4857b290d12d633\nF test/tkt3918.test ea78bf164e4d55cbde0d83c671ef6fbe930a0032\nF test/tkt3922.test f26be40ab4fe6c00795629bd2006d96e270d9b1a\nF test/tkt3929.test cdf67acf5aa936ec4ffead81db87f8a71fe40e59\nF test/tkt3935.test e15261fedb9e30a4305a311da614a5d8e693c767\nF test/tkt3992.test f3e7d548ac26f763b47bc0f750da3d03c81071da\nF test/tkt3997.test a335fa41ca3985660a139df7b734a26ef53284bd\nF test/tkt4018.test 18dbc6617f7a4b90e938d1bd6d26ad18daafaf08\nF test/tokenize.test ce430a7aed48fc98301611429595883fdfcab5d7\nF test/tpch01.test 7c4eb8cdd79c568f46d344b3e789c9fdb8a766d112871352704861f3fca32a2a\nF test/trace.test a659a9862957f4789e37a92b3bf6d2caf5c86b02cdeefc41e850ae53acf6992a\nF test/trace2.test f5cb67ad3bc09e0c58e8cca78dfd0b5639259983\nF test/trace3.test 1dff966888773ff1bfea01c080caf15417892b3f998408fe920c4791f7337144\nF test/trans.test 6e1b4c6a42dba31bd65f8fa5e61a2708e08ddde6\nF test/trans2.test 62bd045bfc7a1c14c5ba83ba64d21ade31583f76\nF test/trans3.test 91a100e5412b488e22a655fe423a14c26403ab94\nF test/transitive1.test 293300f46916569f08875cdb2fe2134be2c27677\nF test/trigger1.test 746dc327e2a0817a22bfc6f5a5e423483d3e77b3733ac20a8fe939e6541b5e53\nF test/trigger2.test d15da46f7012832faf3e0c536b47024409d5fb1722d2bb77e29c06d96d704bb1\nF test/trigger3.test aa640bb2bbb03edd5ff69c055117ea088f121945\nF test/trigger4.test 74700b76ebf3947b2f7a92405141eb2cf2a5d359\nF test/trigger5.test 619391a3e9fc194081d22cefd830d811e7badf83\nF test/trigger6.test 0e411654f122552da6590f0b4e6f781048a4a9b9\nF test/trigger7.test e7ce54bfda67a88d778aea42544e151c465547a7e617127b6914c2221a6d53c1\nF test/trigger8.test 30cb0530bd7c4728055420e3f739aa00412eafa4\nF test/trigger9.test 2226ec795a33b0460ab5cf8891e9054cc7edef41\nF test/triggerA.test 837be862d8721f903dba3f3ceff05b32e0bee5214cf6ea3da5fadf12d3650e9d\nF test/triggerB.test 56780c031b454abac2340dbb3b71ac5c56c3d7fe\nF test/triggerC.test 29f5a28d0fe39e6e2c01f6e1f53f08c0955170ae10a63ad023e33cb0a1682a51\nF test/triggerD.test 8e7f3921a92a5797d472732108109e44575fa650\nF test/triggerE.test ede2e4bce4ba802337bd69d39447fa04a938e06d84a8bfc53c76850fc36ed86d\nF test/triggerF.test 5d76f0a8c428ff87a4d5ed52da06f6096a2c787a1e21b846111dfac4123de3ad\nF test/triggerG.test d5caeef6144ede2426dd13211fd72248241ff2ebc68e12a4c0bf30f5faa21499\nF test/tt3_checkpoint.c 9e75cf7c1c364f52e1c47fd0f14c4340a9db0fe1\nF test/tt3_index.c 39eec10a35f57672225be4d182862152896dee4a\nF test/tt3_lookaside1.c 0377e202c3c2a50d688cb65ba203afeda6fafeb9\nF test/tt3_stress.c c57d804716165811d979d4a719e05baccd79277f\nF test/tt3_vacuum.c 1753f45917699c9c1f66b64c717a717c9379f776\nF test/types.test bf816ce73c7dfcfe26b700c19f97ef4050d194ff\nF test/types2.test 1aeb81976841a91eef292723649b5c4fe3bc3cac\nF test/types3.test 99e009491a54f4dc02c06bdbc0c5eea56ae3e25a\nF test/unionvtab.test e1704ab1b4c1bb3ffc9da4681f8e85a0b909fd80b937984fc94b27415ac8e5a4\nF test/unionvtabfault.test e8759f3d14fb938ce9657e2342db34aeac0fb9bc1692b0d1ebb0069630151d06\nF test/unique.test 93f8b2ef5ea51b9495f8d6493429b1fd0f465264\nF test/unique2.test 3674e9f2a3f1fbbfd4772ac74b7a97090d0f77d2\nF test/unixexcl.test d936ba2b06794018e136418addd59a2354eeae97\nF test/unordered.test ffeea7747d5ba962a8009a20b7e53d68cbae05b063604c68702c5998eb50c981\nF test/update.test 6a1193fbcb4546b4467d24635b1504b8e746b41d3b66dc6ace07581a62ce58fb\nF test/update2.test 67455bc61fcbcf96923c45b3bc4f87bc72be7d67575ad35f134906148c7b06d3\nF test/upsert1.test 0b740c8488fd2f5a06ac317c9913f7ef1eda8282f2db58b544b89480c51efab3\nF test/upsert2.test 9c3cdbb1a890227f6504ce4b0e3de68f4cdfa16bb21d8641208a9239896c5a09\nF test/upsert3.test 88d7d590a1948a9cb6eac1b54b0642f67a9f35a1fc0f19b200e97d5d39e3179c\nF test/upsert4.test 25d2a1da92f149331ae0c51ca6e3eee78189577585eab92de149900d62994fa5\nF test/upsertfault.test f21ca47740841fdb4d61acfa7b17646d773e67724fe8c185b71c018db8a94b35\nF test/uri.test 3481026f00ade6dfe8adb7acb6e1e47b04369568\nF test/uri2.test 9d3ba7a53ee167572d53a298ee4a5d38ec4a8fb7\nF test/userauth01.test e740a2697a7b40d7c5003a7d7edaee16acd349a9\nF test/utf16align.test 54cd35a27c005a9b6e7815d887718780b6a462ae\nF test/vacuum-into.test 48f4cec354fb6f27c98ef58d2fe49a11b71ff131af0cd9140efacc9858b9f670\nF test/vacuum.test ce91c39f7f91a4273bf620efad21086b5aa6ef1d\nF test/vacuum2.test aa048abee196c16c9ba308465494009057b79f9b\nF test/vacuum3.test 77ecdd54592b45a0bcb133339f99f1ae0ae94d0d\nF test/vacuum4.test 7ea76b769fffeb41f925303b04cbcf5a5bbeabe55e4c60ae754ff24eeeb7c010\nF test/vacuum5.test 263b144d537e92ad8e9ca8a73cc6e1583f41cfd0dda9432b87f7806174a2f48c\nF test/vacuummem.test 7b42abb3208bd82dd23a7536588396f295a314f2\nF test/varint.test bbce22cda8fc4d135bcc2b589574be8410614e62\nF test/veryquick.test 57ab846bacf7b90cf4e9a672721ea5c5b669b661\nF test/view.test 10ea54300a097d7c0337fd104abffe4a4786d1598b94017a37efe0e0d3e04dd5\nF test/vtab1.test c5d9e90ed02bcacd776dcbb7360199d290f7f53c26b484ddece543060c54319f\nF test/vtab2.test 14d4ab26cee13ba6cf5c5601b158e4f57552d3b055cdd9406cf7f711e9c84082\nF test/vtab3.test b45f47d20f225ccc9c28dc915d92740c2dee311e\nF test/vtab4.test 8e73ed268f3d596bc3590f45fc948fb40f28e9c3\nF test/vtab5.test 889f444970393c73f1e077e2bdc5d845e157a391\nF test/vtab6.test 8e789f526e6594cf7ae933d1adee0caa87dc9f78\nF test/vtab7.test 70c6f4a1d6177144a8236e4172d5fba92e683440374664ad1f04851fbb335d3c\nF test/vtab8.test e19fa4a538fcd1bb66c22825fa8f71618fb13583\nF test/vtab9.test ea58d2b95d61955f87226381716b2d0b1d4e4f9b\nF test/vtabA.test 1317f06a03597eee29f40a49b6c21e1aaba4285f\nF test/vtabB.test 04df5dc531b9f44d9ca65b9c1b79f12b5922a796\nF test/vtabC.test 4528f459a13136f982e75614d120aef165f17292\nF test/vtabD.test 05b3f1d77117271671089e48719524b676842e96\nF test/vtabE.test 2a143fe75a11275781d1fd1988d86b66a3f69cb98f4add62e3da8fd0f637b45f\nF test/vtabF.test 1918844c7c902f6a16c8dacf1ec8f84886d6e78b\nF test/vtabH.test 2efb5a24b0bb50796b21eca23032cfb77abfa4b0c03938e38ce5897abac404ca\nF test/vtabI.test 751b07636700dbdea328e4265b6077ccd6811a3f\nF test/vtabJ.test d7b73675708cf63cfcb9d443bb451fc01a028347275b7311e51f9fdf3ca6757f\nF test/vtab_alter.test 736e66fb5ec7b4fee58229aa3ada2f27ec58bc58c00edae4836890c3784c6783\nF test/vtab_err.test dcc8b7b9cb67522b3fe7a272c73856829dae4ab7fdb30399aea1b6981bda2b65\nF test/vtab_shared.test 5253bff2355a9a3f014c15337da7e177ab0ef8ad\nF test/vtabdrop.test 65d4cf6722972e5499bdaf0c0d70ee3b8133944a4e4bc31862563f32a7edca12\nF test/wal.test cdf0ca6cc0447520d19ef1c83287824ebeb3e82d75af856511ba96841a79fc9b\nF test/wal2.test 537f59e5c5932e3b45bf3591ae3e48a2601360c2e52821b633e222fe6ebd5b09\nF test/wal3.test 2a93004bc0fb2b5c29888964024695bade278ab2\nF test/wal4.test 4744e155cd6299c6bd99d3eab1c82f77db9cdb3c\nF test/wal5.test 9c11da7aeccd83a46d79a556ad11a18d3cb15aa9\nF test/wal6.test b602704e4b066199bc89d91ca9000f335dcf4572\nF test/wal64k.test 2a525c0f45d709bae3765c71045ccec5df7d100ccbd3a7860fdba46c9addb965\nF test/wal7.test 2ae8f427d240099cc4b2dfef63cff44e2a68a1bd\nF test/wal8.test d9df3fba4caad5854ed69ed673c68482514203c8\nF test/wal9.test 378e76a9ad09cd9bee06c172ad3547b0129a6750\nF test/wal_common.tcl a98f17fba96206122eff624db0ab13ec377be4fe\nF test/walbak.test 018d4e5a3d45c6298d11b99f09a8ef6876527946\nF test/walbig.test f437473a16cfb314867c6b5d1dbcd519e73e3434\nF test/walblock.test be48f3a75eff0b4456209f26b3ce186c2015497d\nF test/walcksum.test bb234a1bb42248b3515d992b719708015c384278\nF test/walcrash.test 21038858cc552077b0522f50b0fa87e38139306a\nF test/walcrash2.test a0edab4e5390f03b99a790de89aad15d6ec70b36\nF test/walcrash3.test e426aa58122d20f2b9fbe9a507f9eb8cab85b8af\nF test/walcrash4.test e7b6e7639a950a0cca8e210e248c8dad4d63bf20\nF test/walfault.test 09b8ad7e52d2f54bce50e31aa7ea51412bb9f70ac13c74e669ddcd8b48b0d98d\nF test/walfault2.test e039ac66c78d5561683cacde04097213cdad3b58e2b3f3fe1112862217bfd915\nF test/walhook.test ed00a40ba7255da22d6b66433ab61fab16a63483\nF test/walmode.test cd6e7cff618eaaa5910ce57c3657aa50110397f86213886a2400afb9bfec7b7b\nF test/walnoshm.test 84ca10c544632a756467336b7c3b864d493ee496\nF test/waloverwrite.test dad2f26567f1b45174e54fbf9a8dc1cb876a7f03\nF test/walpersist.test 8c6b7e3ec1ba91b5e4dc4e0921d6d3f87cd356a6\nF test/walprotocol.test a112aba0b79e3adeaa485fed09484b32c654e97df58e454aa8489ac2cd57bf84\nF test/walprotocol2.test 7d3b6b4bf0b12f8007121b1e6ef714bc99101fb3b48e46371df1db868eebc131\nF test/walro.test cb438d05ba0d191f10b688e39c4f0cd5b71569a1d1f4440e5bdf3c6880e08c20\nF test/walro2.test 0e79dd15cbdb4f482c01ea248373669c732414a726b357d04846a816afafb768\nF test/walrofault.test c70cb6e308c443867701856cce92ad8288cd99488fa52afab77cca6cfd51af68\nF test/walshared.test 0befc811dcf0b287efae21612304d15576e35417\nF test/walslow.test c05c68d4dc2700a982f89133ce103a1a84cc285f\nF test/walthread.test 14b20fcfa6ae152f5d8e12f5dc8a8a724b7ef189f5d8ef1e2ceab79f2af51747\nF test/walvfs.test ca81c9f427e0e5434076dfa948fd1d8e6d5ddd192b2fb6991635d81da5f3f5d4\nF test/wapp.tcl b440cd8cf57953d3a49e7ee81e6a18f18efdaf113b69f7d8482b0710a64566ec\nF test/wapptest.tcl 3cca775aede0591756a1fc0da55bbb3715d8c363873fd2cfdd4d555b0a4af57d x\nF test/where.test 19c709c9f0f6ed12c23f909f6592aa55fba34269d5a2898537aa27a22b9ce650\nF test/where2.test 478d2170637b9211f593120648858593bf2445a1\nF test/where3.test 2341a294e17193a6b1699ea7f192124a5286ca6acfcc3f4b06d16c931fbcda2c\nF test/where4.test 4a371bfcc607f41d233701bdec33ac2972908ba8\nF test/where5.test fdf66f96d29a064b63eb543e28da4dfdccd81ad2\nF test/where6.test 5da5a98cec820d488e82708301b96cb8c18a258b\nF test/where7.test 75722434c486ac9e74718caa6cce234f45ba34c0b6c0f9555b29eb8bb5f6ade1\nF test/where8.test 461ca40265ed996a6305da99bb024b0e41602bb586acf544c08f95922358e49f\nF test/where9.test 2c554b97bbdb2fdf26c57099f60db8a52bfcf7c147f2c256f9798fa0e267ca85\nF test/whereA.test 6c6a420ca7d313242f9b1bd471dc80e4d0f8323700ba9c78df0bb843d4daa3b4\nF test/whereB.test 0def95db3bdec220a731c7e4bec5930327c1d8c5\nF test/whereC.test cae295158703cb3fc23bf1a108a9ab730efff0f6\nF test/whereD.test 711d4df58d6d4fb9b3f5ce040b818564198be002\nF test/whereE.test b3a055eef928c992b0a33198a7b8dc10eea5ad2f\nF test/whereF.test 3d9412b1199d3e2bed34fcb76b4c48d0bf4df95d27e3f8dd27b6f8b4716d0d89\nF test/whereG.test 4cda56de49f0c7d9a4f2590a3ddc5f79a7f2a03d2229d0f5bb5d3981ce57f293\nF test/whereH.test e4b07f7a3c2f5d31195cd33710054c78667573b2\nF test/whereI.test a2874062140ed4aba9ffae76e6190a3df6fc73d1373fdfa8fd632945082a5364\nF test/whereJ.test 88287550f6ee604422403b053455b1ad894eeaa5c35d348532dfa1439286cb9a\nF test/whereK.test f8e3cf26a8513ecc7f514f54df9f0572c046c42b\nF test/whereL.test 0a19fc44cd1122040f56c934f1b14d0ca85bde28f270268a428dd9796ea0634c\nF test/wherefault.test 1374c3aa198388925246475f84ad4cd5f9528864\nF test/wherelfault.test 9012e4ef5259058b771606616bd007af5d154e64cc25fa9fd4170f6411db44e3\nF test/wherelimit.test 592081800806d297dd7449b1030c863d2883d6d42901837ccd2e5a9bd962edb0\nF test/wherelimit2.test 9bf0aa56cca40ea0e4c5e2915341355a2bbc0859ec4ce1589197fe2a9d94635f\nF test/win32heap.test 10fd891266bd00af68671e702317726375e5407561d859be1aa04696f2aeee74\nF test/win32lock.test fbf107c91d8f5512be5a5b87c4c42ab9fdd54972\nF test/win32longpath.test 169c75a3b2e43481f4a62122510210c67b08f26d\nF test/win32nolock.test ac4f08811a562e45a5755e661f45ca85892bdbbc\nF test/window1.test b3567fde130dd65fedf56da66a3916cc992e61f910a56b7dac3f71608809faac\nF test/window2.tcl 66db96fd9fd202bc31ee7f8ce7904cb469564864cff3f74e009bfef8102333f4\nF test/window2.test af2a001ded703bb8f2474fb0edfef170d5aba00f5c1f2aa9f65935b5da13df90\nF test/window3.tcl acea6e86a4324a210fd608d06741010ca83ded9fde438341cb978c49928faf03\nF test/window3.test e9959a993c8a71e96433be8daaa1827d78b8921e4f12debd7bdbeb3c856ef3cb\nF test/window4.tcl d732df0e81beedc0ba8a563ade68611d322d27303ad0c0c8e4444107c39e84ec\nF test/window4.test 807f3e6b15f9338e5b9742b87c5c7ca825b42b9657fde6096e890119370848e0\nF test/window5.test d328dd18221217c49c144181975eea17339eaeaf0e9aa558cee3afb84652821e\nF test/window6.test f8d674254b23289cc17c84d79dec7eda7caa1dfb7836c43122cfdf3640d1df32\nF test/window7.tcl 6a1210f05d40ec89c22960213a22cd3f98d4e2f2eb20646c83c8c30d4d76108f\nF test/window7.test 1d31276961ae7801edc72173edaf7593e3cbc79c06d1f1f09e20d8418af403cd\nF test/window8.tcl f2711aa3571e4e6b0dad98db8d95fd6cb8d9db0c92bbdf535f153b07606a1ce2\nF test/window8.test c4331b27a6f66d69fa8f8bab10cc731db1a81d293ae108a68f7c3487fa94e65b\nF test/window9.test b63f6f74d730547e63e78946f951f5d1a7d4e99f91f6d5906305469043d92a15\nF test/windowA.test 6d63dc1260daa17141a55007600581778523a8b420629f1282d2acfc36af23be\nF test/windowB.test 7a983ea1cc1cf72be7f378e4b32f6cb2d73014c5cd8b25aaee825164cd4269e5\nF test/windowerr.tcl f5acd6fbc210d7b5546c0e879d157888455cd4a17a1d3f28f07c1c8a387019e0\nF test/windowerr.test a8b752402109c15aa1c5efe1b93ccb0ce1ef84fa964ae1cd6684dd0b3cc1819b\nF test/windowfault.test a90b397837209f15e54afa62e8be39b2759a0101fae04e05a08bcc50e243a452\nF test/with1.test d32792084dcb5f6c047d77bb8a032822ef9fe050ade07d0aeffa37753a05e3c9\nF test/with2.test e0030e2f0267a910d6c0e4f46f2dfe941c1cc0d4f659ba69b3597728e7e8f1ab\nF test/with3.test 7de8dff2891aca0f9453463e4a2d6eb995baf137827d5596116fee53e22a4e29\nF test/with4.test 257be66c0c67fee1defbbac0f685c3465e2cad037f21ce65f23f86084f198205\nF test/withM.test 693b61765f2b387b5e3e24a4536e2e82de15ff64\nF test/without_rowid1.test 9cfb83705c506e3849fa7efc88a3c9a15f9a50bf9b1516b41757a7cef9bba8c3\nF test/without_rowid2.test af260339f79d13cb220288b67cd287fbcf81ad99\nF test/without_rowid3.test ea4b59dd1b0d7f5f5e4b7cca978cdb905752a9d7c57dc4344a591dba765a3691\nF test/without_rowid4.test 4e08bcbaee0399f35d58b5581881e7a6243d458a\nF test/without_rowid5.test 89b1c587bd92a0590e440da33e7666bf4891572a\nF test/without_rowid6.test 8463b20098e9f75a501a9f17dfb42fffc79068eac0b2775fe56ef2281d2df45e\nF test/without_rowid7.test d7c59a93d726b55812d620f8f284e01904a5b85f9ee9eea8f2f68571a5e8c40e\nF test/wordcount.c d721a4b6fae93e6e33449700bce1686bc23257c27425bc3ef1599dc912adec66\nF test/writecrash.test f1da7f7adfe8d7f09ea79b42e5ca6dcc41102f27f8e334ad71539501ddd910cc\nF test/zeroblob.test 07a5b11ab591d1f26c626945fb7f228f68b993533b2ada77273edf6ee29db174\nF test/zerodamage.test 9c41628db7e8d9e8a0181e59ea5f189df311a9f6ce99cc376dc461f66db6f8dc\nF test/zipfile.test b3b558639f7a103e095713ad0f57fec1fce1b7d60c8054df5789b98f7547a395\nF test/zipfile2.test 9903388a602a3834189857a985106ff95c3bba6a3969e0134127df991889db5d\nF test/zipfilefault.test 44d4d7a7f7cca7521d569d7f71026b241d65a6b1757aa409c1a168827edbbc2c\nF tool/GetFile.cs 47852aa0d806fe47ed1ac5138bdce7f000fe87aaa7f28107d0cb1e26682aeb44\nF tool/GetTclKit.bat 8995df40c4209808b31f24de0b58f90930239a234f7591e3675d45bfbb990c5d\nF tool/Replace.cs 02c67258801c2fb5f63231e0ac0f220b4b36ba91\nF tool/build-all-msvc.bat c12328d06c45fec8baada5949e3d5af54bf8c887 x\nF tool/build-shell.sh 950f47c6174f1eea171319438b93ba67ff5bf367\nF tool/cg_anno.tcl c1f875f5a4c9caca3d59937b16aff716f8b1883935f1b4c9ae23124705bc8099 x\nF tool/checkSpacing.c 810e51703529a204fc4e1eb060e9ab663e3c06d2\nF tool/dbhash.c 19560c9a2aa2b269b6a5108259b93d26d12f8f0877c31fe9f8f61dfbd219ba63\nF tool/dbtotxt.c b2221864a20fb391c46bd31bc1fbdc4a96f5c8a89bef58f421eb9b9c36b1702c\nF tool/dbtotxt.md c9a57af8739957ef36d2cfad5c4b1443ff3688ed33e4901ee200c8b651f43f3c\nF tool/extract-sqlite3h.tcl 069ceab0cee26cba99952bfa08c0b23e35941c837acabe143f0c355d96c9e2eb x\nF tool/extract.c 054069d81b095fbdc189a6f5d4466e40380505e2\nF tool/fast_vacuum.c 5ba0d6f5963a0a63bdc42840f678bad75b2ebce1\nF tool/fragck.tcl 5265a95126abcf6ab357f7efa544787e5963f439\nF tool/fuzzershell.c e1d90a03ca790d7c331c2aae08ca46ff435f1ae1faa6cb9cc48f4687c18fdc6e\nF tool/genfkey.README cf68fddd4643bbe3ff8e31b8b6d8b0a1b85e20f4\nF tool/genfkey.test b6afd7b825d797a1e1274f519ab5695373552ecad5cd373530c63533638a5a4f\nF tool/getlock.c f4c39b651370156cae979501a7b156bdba50e7ce\nF tool/index_usage.c 9ec344d29cbeb03fdc0fce668eedfb7495792170de933adf95cf8d6904a166ad\nF tool/kvtest-speed.sh 4761a9c4b3530907562314d7757995787f7aef8f\nF tool/lemon.c fa7912caf5662ee9b3afc7ff2a2607e81437d603e2f86c88ab412ef43f78fc24\nF tool/lempar.c 34b136b281ae022277738d8b51061237fb330deaa317010d89375117e3a028aa\nF tool/libvers.c caafc3b689638a1d88d44bc5f526c2278760d9b9\nF tool/loadfts.c c3c64e4d5e90e8ba41159232c2189dba4be7b862\nF tool/logest.c 11346aa019e2e77a00902aa7d0cabd27bd2e8cca\nF tool/max-limits.c cbb635fbb37ae4d05f240bfb5b5270bb63c54439\nF tool/mkautoconfamal.sh 422fc365358a2e92876ffc62971a0ff28ed472fc8bcf9de0df921c736fdeca5e\nF tool/mkccode.tcl 86463e68ce9c15d3041610fedd285ce32a5cf7a58fc88b3202b8b76837650dbe x\nF tool/mkctimec.tcl dd183b73ae1c28249669741c250525f0407e579a70482371668fd5f130d9feb3\nF tool/mkkeywordhash.c 27ffc6f6e7e3ecbfc5bca1f1f11a09fc5badf6d67557a5fb2d3b069dbed90617\nF tool/mkmsvcmin.tcl cad0c7b54d7dd92bc87d59f36d4cc4f070eb2e625f14159dc2f5c4204e6a13ea\nF tool/mkopcodec.tcl d1b6362bd3aa80d5520d4d6f3765badf01f6c43c\nF tool/mkopcodeh.tcl 352a4319c0ad869eb26442bf7c3b015aa15594c21f1cce5a6420dbe999367c21\nF tool/mkopts.tcl 680f785fdb09729fd9ac50632413da4eadbdf9071535e3f26d03795828ab07fa\nF tool/mkpragmatab.tcl 70269c7013dab01c5d366b1bb4cee6e42fa1a3a8d179a052d14d6b31f11ad77f\nF tool/mkshellc.tcl 70a9978e363b0f3280ca9ce1c46d72563ff479c1930a12a7375e3881b7325712\nF tool/mksourceid.c 36aa8020014aed0836fd13c51d6dc9219b0df1761d6b5f58ff5b616211b079b9\nF tool/mkspeedsql.tcl a1a334d288f7adfe6e996f2e712becf076745c97\nF tool/mksqlite3c-noext.tcl 4f7cfef5152b0c91920355cbfc1d608a4ad242cb819f1aea07f6d0274f584a7f\nF tool/mksqlite3c.tcl 5fed3d75069d8f66f202d3b5200b0cea4aa7108481acd06732a06fdd42eb83a2\nF tool/mksqlite3h.tcl 080873e3856eceb9d289a08a00c4b30f875ea3feadcbece796bd509b1532792c\nF tool/mksqlite3internalh.tcl eb994013e833359137eb53a55acdad0b5ae1049b\nF tool/mkvsix.tcl b9e0777a213c23156b6542842c238479e496ebf5\nF tool/offsets.c fe4262fdfa378e8f5499a42136d17bf3b98f6091\nF tool/omittest.tcl 27f9413c3343bac200a28d81e8234adb0f5e141c4771893cb19b40235a91f1e0\nF tool/opcodesum.tcl 740ed206ba8c5040018988129abbf3089a0ccf4a\nF tool/pagesig.c ff0ca355fd3c2398e933da5e22439bbff89b803b\nF tool/replace.tcl 60f91e8dd06ab81f74d213ecbd9c9945f32ac048\nF tool/restore_jrnl.tcl 6957a34f8f1f0f8285e07536225ec3b292a9024a\nF tool/rollback-test.c 9fc98427d1e23e84429d7e6d07d9094fbdec65a5\nF tool/run-speed-test.sh f95d19fd669b68c4c38b6b475242841d47c66076\nF tool/showdb.c 97d14a1ce32d5edda84081a5c939bd8975abd89568a773b288940e67e4c7e3ad\nF tool/showjournal.c 5bad7ae8784a43d2b270d953060423b8bd480818\nF tool/showlocks.c 9920bcc64f58378ff1118caead34147201f48c68\nF tool/showshm.c a0ab6ec32dd1f11218ca2a4018f8fb875b59414801ab8ceed8b2e69b7b45a809\nF tool/showstat4.c 0682ebea7abf4d3657f53c4a243f2e7eab48eab344ed36a94bb75dcd19a5c2a1\nF tool/showwal.c ad9d768f96ca6199ad3a8c9562d679680bd032dd01204ea3e5ea6fb931d81847\nF tool/soak1.tcl 8d407956e1a45b485a8e072470a3e629a27037fe\nF tool/spaceanal.tcl 4bfd19aad7eb3ce0372ef0255f58035e0bba4ff5e9acfd763a10c6fb365c8dec\nF tool/speed-check.sh 2b042d703a9472f08c3b13be27afac658426f8e4fc87cd2d575953fda86f08d1\nF tool/speedtest.tcl 06c76698485ccf597b9e7dbb1ac70706eb873355\nF tool/speedtest16.c ecb6542862151c3e6509bbc00509b234562ae81e\nF tool/speedtest2.tcl ee2149167303ba8e95af97873c575c3e0fab58ff\nF tool/speedtest8.c 2902c46588c40b55661e471d7a86e4dd71a18224\nF tool/speedtest8inst1.c 7ce07da76b5e745783e703a834417d725b7d45fd\nF tool/split-sqlite3c.tcl 3efcd4240b738f6bb2b5af0aea7e1e0ef9bc1c61654f645076cec883030b710c\nF tool/sqldiff.c 7b9b7238284f02131dbb8f21a4e862409bff728045c5473139d28c67ac87580e\nF tool/sqlite3_analyzer.c.in 7eeaae8b0d7577662acaabbb11107af0659d1b41bc1dfdd4d91422de27127968\nF tool/sqltclsh.c.in 1bcc2e9da58fadf17b0bf6a50e68c1159e602ce057210b655d50bad5aaaef898\nF tool/sqltclsh.tcl 862f4cf1418df5e1315b5db3b5ebe88969e2a784525af5fbf9596592f14ed848\nF tool/srcck1.c 371de5363b70154012955544f86fdee8f6e5326f\nF tool/stack_usage.tcl f8e71b92cdb099a147dad572375595eae55eca43\nF tool/symbols-mingw.sh 4dbcea7e74768305384c9fd2ed2b41bbf9f0414d\nF tool/symbols.sh 1612bd947750e21e7b47befad5f6b3825b06cce0705441f903bf35ced65ae9b9\nF tool/varint.c 5d94cb5003db9dbbcbcc5df08d66f16071aee003\nF tool/vdbe-compress.tcl 5926c71f9c12d2ab73ef35c29376e756eb68361c\nF tool/vdbe_profile.tcl 246d0da094856d72d2c12efec03250d71639d19f\nF tool/warnings-clang.sh bbf6a1e685e534c92ec2bfba5b1745f34fb6f0bc2a362850723a9ee87c1b31a7\nF tool/warnings.sh 09311479bdc290e20ec8e35a3d1b14b096bbd96222277cfd6274c3a99b3d012f\nF tool/win/sqlite.vsix deb315d026cc8400325c5863eef847784a219a2f\nF vsixtest/App.xaml b76d3b48860e7454775c47ea38ffea9c4abe3e85\nF vsixtest/App.xaml.cpp c465147f50871165c60ca16955219f6c5812d6d8\nF vsixtest/App.xaml.h 4a9768e2983d05600ad1e1c2f1b00a132967da9f\nF vsixtest/Assets/LockScreenLogo.scale-200.png e820c9a3deb909197081b0bf3216c06e13905f0a\nF vsixtest/Assets/SplashScreen.scale-200.png cab70988ca71bebec7bfeb3b6dbafe17b9ab0b4a\nF vsixtest/Assets/Square150x150Logo.scale-200.png e17b40817db7a239fc239d83efcc951fb824e3ff\nF vsixtest/Assets/Square44x44Logo.scale-200.png 2f166237094dea94d952d10b9eeae81806844f1c\nF vsixtest/Assets/Square44x44Logo.targetsize-24_altform-unplated.png 5f6a6d391b95a3061ccca6e6fdd6955ede63b4ed\nF vsixtest/Assets/StoreLogo.png 0828b7257db74a4ecd5eeb6b7b4971f0fdc4d9d1\nF vsixtest/Assets/Wide310x150Logo.scale-200.png 04ddefe5bc5f43ae12a7433f6f236ddab101ac42\nF vsixtest/MainPage.xaml 34f49897e3ca533a7e74506ba0759b66eebce151\nF vsixtest/MainPage.xaml.cpp 7f31fc6de751b64676c0924c97a5485d950a91d7\nF vsixtest/MainPage.xaml.h cc05cca10d50a003f6c6e4448b701cdd07f52f29\nF vsixtest/Package.appxmanifest 6b6db1eb7df3a315c5d681059754d5f0e0c47a93\nF vsixtest/pch.cpp cb823cfac36f1a39a7eb0acbd7e9a0b0de8f23af\nF vsixtest/pch.h 9cab7980f2ac4baa40807d8b5e52af32a21cf78c\nF vsixtest/vsixtest.sln 77cadbe4e96c1fe1bf51cd77de9e9b0a12ada547\nF vsixtest/vsixtest.tcl 6a9a6ab600c25a91a7acc6293828957a386a8a93\nF vsixtest/vsixtest.vcxproj.data 2ed517e100c66dc455b492e1a33350c1b20fbcdc\nF vsixtest/vsixtest.vcxproj.filters 37e51ffedcdb064aad6ff33b6148725226cd608e\nF vsixtest/vsixtest_TemporaryKey.pfx e5b1b036facdb453873e7084e1cae9102ccc67a0\nP 1d2e53a39b87e364685e21de137655b6eee725e4c6d27fc90865072d7c5892b5\nR 73f9d074ffb019cac59a96d55cf2c0bc\nU drh\nZ 9b8f81a17115c4850191512c3ac99432\n", "e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539", "/*\n** 2003 April 6\n**\n** The author disclaims copyright to this source code.  In place of\n** a legal notice, here is a blessing:\n**\n**    May you do good and not evil.\n**    May you find forgiveness for yourself and forgive others.\n**    May you share freely, never taking more than you give.\n**\n*************************************************************************\n** This file contains code used to implement the PRAGMA command.\n*/\n#include \"sqliteInt.h\"\n\n#if !defined(SQLITE_ENABLE_LOCKING_STYLE)\n#  if defined(__APPLE__)\n#    define SQLITE_ENABLE_LOCKING_STYLE 1\n#  else\n#    define SQLITE_ENABLE_LOCKING_STYLE 0\n#  endif\n#endif\n\n/***************************************************************************\n** The \"pragma.h\" include file is an automatically generated file that\n** that includes the PragType_XXXX macro definitions and the aPragmaName[]\n** object.  This ensures that the aPragmaName[] table is arranged in\n** lexicographical order to facility a binary search of the pragma name.\n** Do not edit pragma.h directly.  Edit and rerun the script in at \n** ../tool/mkpragmatab.tcl. */\n#include \"pragma.h\"\n\n/*\n** Interpret the given string as a safety level.  Return 0 for OFF,\n** 1 for ON or NORMAL, 2 for FULL, and 3 for EXTRA.  Return 1 for an empty or \n** unrecognized string argument.  The FULL and EXTRA option is disallowed\n** if the omitFull parameter it 1.\n**\n** Note that the values returned are one less that the values that\n** should be passed into sqlite3BtreeSetSafetyLevel().  The is done\n** to support legacy SQL code.  The safety level used to be boolean\n** and older scripts may have used numbers 0 for OFF and 1 for ON.\n*/\nstatic u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){\n                             /* 123456789 123456789 123 */\n  static const char zText[] = \"onoffalseyestruextrafull\";\n  static const u8 iOffset[] = {0, 1, 2,  4,    9,  12,  15,   20};\n  static const u8 iLength[] = {2, 2, 3,  5,    3,   4,   5,    4};\n  static const u8 iValue[] =  {1, 0, 0,  0,    1,   1,   3,    2};\n                            /* on no off false yes true extra full */\n  int i, n;\n  if( sqlite3Isdigit(*z) ){\n    return (u8)sqlite3Atoi(z);\n  }\n  n = sqlite3Strlen30(z);\n  for(i=0; i<ArraySize(iLength); i++){\n    if( iLength[i]==n && sqlite3StrNICmp(&zText[iOffset[i]],z,n)==0\n     && (!omitFull || iValue[i]<=1)\n    ){\n      return iValue[i];\n    }\n  }\n  return dflt;\n}\n\n/*\n** Interpret the given string as a boolean value.\n*/\nu8 sqlite3GetBoolean(const char *z, u8 dflt){\n  return getSafetyLevel(z,1,dflt)!=0;\n}\n\n/* The sqlite3GetBoolean() function is used by other modules but the\n** remainder of this file is specific to PRAGMA processing.  So omit\n** the rest of the file if PRAGMAs are omitted from the build.\n*/\n#if !defined(SQLITE_OMIT_PRAGMA)\n\n/*\n** Interpret the given string as a locking mode value.\n*/\nstatic int getLockingMode(const char *z){\n  if( z ){\n    if( 0==sqlite3StrICmp(z, \"exclusive\") ) return PAGER_LOCKINGMODE_EXCLUSIVE;\n    if( 0==sqlite3StrICmp(z, \"normal\") ) return PAGER_LOCKINGMODE_NORMAL;\n  }\n  return PAGER_LOCKINGMODE_QUERY;\n}\n\n#ifndef SQLITE_OMIT_AUTOVACUUM\n/*\n** Interpret the given string as an auto-vacuum mode value.\n**\n** The following strings, \"none\", \"full\" and \"incremental\" are \n** acceptable, as are their numeric equivalents: 0, 1 and 2 respectively.\n*/\nstatic int getAutoVacuum(const char *z){\n  int i;\n  if( 0==sqlite3StrICmp(z, \"none\") ) return BTREE_AUTOVACUUM_NONE;\n  if( 0==sqlite3StrICmp(z, \"full\") ) return BTREE_AUTOVACUUM_FULL;\n  if( 0==sqlite3StrICmp(z, \"incremental\") ) return BTREE_AUTOVACUUM_INCR;\n  i = sqlite3Atoi(z);\n  return (u8)((i>=0&&i<=2)?i:0);\n}\n#endif /* ifndef SQLITE_OMIT_AUTOVACUUM */\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n/*\n** Interpret the given string as a temp db location. Return 1 for file\n** backed temporary databases, 2 for the Red-Black tree in memory database\n** and 0 to use the compile-time default.\n*/\nstatic int getTempStore(const char *z){\n  if( z[0]>='0' && z[0]<='2' ){\n    return z[0] - '0';\n  }else if( sqlite3StrICmp(z, \"file\")==0 ){\n    return 1;\n  }else if( sqlite3StrICmp(z, \"memory\")==0 ){\n    return 2;\n  }else{\n    return 0;\n  }\n}\n#endif /* SQLITE_PAGER_PRAGMAS */\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n/*\n** Invalidate temp storage, either when the temp storage is changed\n** from default, or when 'file' and the temp_store_directory has changed\n*/\nstatic int invalidateTempStorage(Parse *pParse){\n  sqlite3 *db = pParse->db;\n  if( db->aDb[1].pBt!=0 ){\n    if( !db->autoCommit || sqlite3BtreeIsInReadTrans(db->aDb[1].pBt) ){\n      sqlite3ErrorMsg(pParse, \"temporary storage cannot be changed \"\n        \"from within a transaction\");\n      return SQLITE_ERROR;\n    }\n    sqlite3BtreeClose(db->aDb[1].pBt);\n    db->aDb[1].pBt = 0;\n    sqlite3ResetAllSchemasOfConnection(db);\n  }\n  return SQLITE_OK;\n}\n#endif /* SQLITE_PAGER_PRAGMAS */\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n/*\n** If the TEMP database is open, close it and mark the database schema\n** as needing reloading.  This must be done when using the SQLITE_TEMP_STORE\n** or DEFAULT_TEMP_STORE pragmas.\n*/\nstatic int changeTempStorage(Parse *pParse, const char *zStorageType){\n  int ts = getTempStore(zStorageType);\n  sqlite3 *db = pParse->db;\n  if( db->temp_store==ts ) return SQLITE_OK;\n  if( invalidateTempStorage( pParse ) != SQLITE_OK ){\n    return SQLITE_ERROR;\n  }\n  db->temp_store = (u8)ts;\n  return SQLITE_OK;\n}\n#endif /* SQLITE_PAGER_PRAGMAS */\n\n/*\n** Set result column names for a pragma.\n*/\nstatic void setPragmaResultColumnNames(\n  Vdbe *v,                     /* The query under construction */\n  const PragmaName *pPragma    /* The pragma */\n){\n  u8 n = pPragma->nPragCName;\n  sqlite3VdbeSetNumCols(v, n==0 ? 1 : n);\n  if( n==0 ){\n    sqlite3VdbeSetColName(v, 0, COLNAME_NAME, pPragma->zName, SQLITE_STATIC);\n  }else{\n    int i, j;\n    for(i=0, j=pPragma->iPragCName; i<n; i++, j++){\n      sqlite3VdbeSetColName(v, i, COLNAME_NAME, pragCName[j], SQLITE_STATIC);\n    }\n  }\n}\n\n/*\n** Generate code to return a single integer value.\n*/\nstatic void returnSingleInt(Vdbe *v, i64 value){\n  sqlite3VdbeAddOp4Dup8(v, OP_Int64, 0, 1, 0, (const u8*)&value, P4_INT64);\n  sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n}\n\n/*\n** Generate code to return a single text value.\n*/\nstatic void returnSingleText(\n  Vdbe *v,                /* Prepared statement under construction */\n  const char *zValue      /* Value to be returned */\n){\n  if( zValue ){\n    sqlite3VdbeLoadString(v, 1, (const char*)zValue);\n    sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n  }\n}\n\n\n/*\n** Set the safety_level and pager flags for pager iDb.  Or if iDb<0\n** set these values for all pagers.\n*/\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\nstatic void setAllPagerFlags(sqlite3 *db){\n  if( db->autoCommit ){\n    Db *pDb = db->aDb;\n    int n = db->nDb;\n    assert( SQLITE_FullFSync==PAGER_FULLFSYNC );\n    assert( SQLITE_CkptFullFSync==PAGER_CKPT_FULLFSYNC );\n    assert( SQLITE_CacheSpill==PAGER_CACHESPILL );\n    assert( (PAGER_FULLFSYNC | PAGER_CKPT_FULLFSYNC | PAGER_CACHESPILL)\n             ==  PAGER_FLAGS_MASK );\n    assert( (pDb->safety_level & PAGER_SYNCHRONOUS_MASK)==pDb->safety_level );\n    while( (n--) > 0 ){\n      if( pDb->pBt ){\n        sqlite3BtreeSetPagerFlags(pDb->pBt,\n                 pDb->safety_level | (db->flags & PAGER_FLAGS_MASK) );\n      }\n      pDb++;\n    }\n  }\n}\n#else\n# define setAllPagerFlags(X)  /* no-op */\n#endif\n\n\n/*\n** Return a human-readable name for a constraint resolution action.\n*/\n#ifndef SQLITE_OMIT_FOREIGN_KEY\nstatic const char *actionName(u8 action){\n  const char *zName;\n  switch( action ){\n    case OE_SetNull:  zName = \"SET NULL\";        break;\n    case OE_SetDflt:  zName = \"SET DEFAULT\";     break;\n    case OE_Cascade:  zName = \"CASCADE\";         break;\n    case OE_Restrict: zName = \"RESTRICT\";        break;\n    default:          zName = \"NO ACTION\";  \n                      assert( action==OE_None ); break;\n  }\n  return zName;\n}\n#endif\n\n\n/*\n** Parameter eMode must be one of the PAGER_JOURNALMODE_XXX constants\n** defined in pager.h. This function returns the associated lowercase\n** journal-mode name.\n*/\nconst char *sqlite3JournalModename(int eMode){\n  static char * const azModeName[] = {\n    \"delete\", \"persist\", \"off\", \"truncate\", \"memory\"\n#ifndef SQLITE_OMIT_WAL\n     , \"wal\"\n#endif\n  };\n  assert( PAGER_JOURNALMODE_DELETE==0 );\n  assert( PAGER_JOURNALMODE_PERSIST==1 );\n  assert( PAGER_JOURNALMODE_OFF==2 );\n  assert( PAGER_JOURNALMODE_TRUNCATE==3 );\n  assert( PAGER_JOURNALMODE_MEMORY==4 );\n  assert( PAGER_JOURNALMODE_WAL==5 );\n  assert( eMode>=0 && eMode<=ArraySize(azModeName) );\n\n  if( eMode==ArraySize(azModeName) ) return 0;\n  return azModeName[eMode];\n}\n\n/*\n** Locate a pragma in the aPragmaName[] array.\n*/\nstatic const PragmaName *pragmaLocate(const char *zName){\n  int upr, lwr, mid = 0, rc;\n  lwr = 0;\n  upr = ArraySize(aPragmaName)-1;\n  while( lwr<=upr ){\n    mid = (lwr+upr)/2;\n    rc = sqlite3_stricmp(zName, aPragmaName[mid].zName);\n    if( rc==0 ) break;\n    if( rc<0 ){\n      upr = mid - 1;\n    }else{\n      lwr = mid + 1;\n    }\n  }\n  return lwr>upr ? 0 : &aPragmaName[mid];\n}\n\n/*\n** Helper subroutine for PRAGMA integrity_check:\n**\n** Generate code to output a single-column result row with a value of the\n** string held in register 3.  Decrement the result count in register 1\n** and halt if the maximum number of result rows have been issued.\n*/\nstatic int integrityCheckResultRow(Vdbe *v){\n  int addr;\n  sqlite3VdbeAddOp2(v, OP_ResultRow, 3, 1);\n  addr = sqlite3VdbeAddOp3(v, OP_IfPos, 1, sqlite3VdbeCurrentAddr(v)+2, 1);\n  VdbeCoverage(v);\n  sqlite3VdbeAddOp0(v, OP_Halt);\n  return addr;\n}\n\n/*\n** Process a pragma statement.  \n**\n** Pragmas are of this form:\n**\n**      PRAGMA [schema.]id [= value]\n**\n** The identifier might also be a string.  The value is a string, and\n** identifier, or a number.  If minusFlag is true, then the value is\n** a number that was preceded by a minus sign.\n**\n** If the left side is \"database.id\" then pId1 is the database name\n** and pId2 is the id.  If the left side is just \"id\" then pId1 is the\n** id and pId2 is any empty string.\n*/\nvoid sqlite3Pragma(\n  Parse *pParse, \n  Token *pId1,        /* First part of [schema.]id field */\n  Token *pId2,        /* Second part of [schema.]id field, or NULL */\n  Token *pValue,      /* Token for <value>, or NULL */\n  int minusFlag       /* True if a '-' sign preceded <value> */\n){\n  char *zLeft = 0;       /* Nul-terminated UTF-8 string <id> */\n  char *zRight = 0;      /* Nul-terminated UTF-8 string <value>, or NULL */\n  const char *zDb = 0;   /* The database name */\n  Token *pId;            /* Pointer to <id> token */\n  char *aFcntl[4];       /* Argument to SQLITE_FCNTL_PRAGMA */\n  int iDb;               /* Database index for <database> */\n  int rc;                      /* return value form SQLITE_FCNTL_PRAGMA */\n  sqlite3 *db = pParse->db;    /* The database connection */\n  Db *pDb;                     /* The specific database being pragmaed */\n  Vdbe *v = sqlite3GetVdbe(pParse);  /* Prepared statement */\n  const PragmaName *pPragma;   /* The pragma */\n\n  if( v==0 ) return;\n  sqlite3VdbeRunOnlyOnce(v);\n  pParse->nMem = 2;\n\n  /* Interpret the [schema.] part of the pragma statement. iDb is the\n  ** index of the database this pragma is being applied to in db.aDb[]. */\n  iDb = sqlite3TwoPartName(pParse, pId1, pId2, &pId);\n  if( iDb<0 ) return;\n  pDb = &db->aDb[iDb];\n\n  /* If the temp database has been explicitly named as part of the \n  ** pragma, make sure it is open. \n  */\n  if( iDb==1 && sqlite3OpenTempDatabase(pParse) ){\n    return;\n  }\n\n  zLeft = sqlite3NameFromToken(db, pId);\n  if( !zLeft ) return;\n  if( minusFlag ){\n    zRight = sqlite3MPrintf(db, \"-%T\", pValue);\n  }else{\n    zRight = sqlite3NameFromToken(db, pValue);\n  }\n\n  assert( pId2 );\n  zDb = pId2->n>0 ? pDb->zDbSName : 0;\n  if( sqlite3AuthCheck(pParse, SQLITE_PRAGMA, zLeft, zRight, zDb) ){\n    goto pragma_out;\n  }\n\n  /* Send an SQLITE_FCNTL_PRAGMA file-control to the underlying VFS\n  ** connection.  If it returns SQLITE_OK, then assume that the VFS\n  ** handled the pragma and generate a no-op prepared statement.\n  **\n  ** IMPLEMENTATION-OF: R-12238-55120 Whenever a PRAGMA statement is parsed,\n  ** an SQLITE_FCNTL_PRAGMA file control is sent to the open sqlite3_file\n  ** object corresponding to the database file to which the pragma\n  ** statement refers.\n  **\n  ** IMPLEMENTATION-OF: R-29875-31678 The argument to the SQLITE_FCNTL_PRAGMA\n  ** file control is an array of pointers to strings (char**) in which the\n  ** second element of the array is the name of the pragma and the third\n  ** element is the argument to the pragma or NULL if the pragma has no\n  ** argument.\n  */\n  aFcntl[0] = 0;\n  aFcntl[1] = zLeft;\n  aFcntl[2] = zRight;\n  aFcntl[3] = 0;\n  db->busyHandler.nBusy = 0;\n  rc = sqlite3_file_control(db, zDb, SQLITE_FCNTL_PRAGMA, (void*)aFcntl);\n  if( rc==SQLITE_OK ){\n    sqlite3VdbeSetNumCols(v, 1);\n    sqlite3VdbeSetColName(v, 0, COLNAME_NAME, aFcntl[0], SQLITE_TRANSIENT);\n    returnSingleText(v, aFcntl[0]);\n    sqlite3_free(aFcntl[0]);\n    goto pragma_out;\n  }\n  if( rc!=SQLITE_NOTFOUND ){\n    if( aFcntl[0] ){\n      sqlite3ErrorMsg(pParse, \"%s\", aFcntl[0]);\n      sqlite3_free(aFcntl[0]);\n    }\n    pParse->nErr++;\n    pParse->rc = rc;\n    goto pragma_out;\n  }\n\n  /* Locate the pragma in the lookup table */\n  pPragma = pragmaLocate(zLeft);\n  if( pPragma==0 ) goto pragma_out;\n\n  /* Make sure the database schema is loaded if the pragma requires that */\n  if( (pPragma->mPragFlg & PragFlg_NeedSchema)!=0 ){\n    if( sqlite3ReadSchema(pParse) ) goto pragma_out;\n  }\n\n  /* Register the result column names for pragmas that return results */\n  if( (pPragma->mPragFlg & PragFlg_NoColumns)==0 \n   && ((pPragma->mPragFlg & PragFlg_NoColumns1)==0 || zRight==0)\n  ){\n    setPragmaResultColumnNames(v, pPragma);\n  }\n\n  /* Jump to the appropriate pragma handler */\n  switch( pPragma->ePragTyp ){\n  \n#if !defined(SQLITE_OMIT_PAGER_PRAGMAS) && !defined(SQLITE_OMIT_DEPRECATED)\n  /*\n  **  PRAGMA [schema.]default_cache_size\n  **  PRAGMA [schema.]default_cache_size=N\n  **\n  ** The first form reports the current persistent setting for the\n  ** page cache size.  The value returned is the maximum number of\n  ** pages in the page cache.  The second form sets both the current\n  ** page cache size value and the persistent page cache size value\n  ** stored in the database file.\n  **\n  ** Older versions of SQLite would set the default cache size to a\n  ** negative number to indicate synchronous=OFF.  These days, synchronous\n  ** is always on by default regardless of the sign of the default cache\n  ** size.  But continue to take the absolute value of the default cache\n  ** size of historical compatibility.\n  */\n  case PragTyp_DEFAULT_CACHE_SIZE: {\n    static const int iLn = VDBE_OFFSET_LINENO(2);\n    static const VdbeOpList getCacheSize[] = {\n      { OP_Transaction, 0, 0,        0},                         /* 0 */\n      { OP_ReadCookie,  0, 1,        BTREE_DEFAULT_CACHE_SIZE},  /* 1 */\n      { OP_IfPos,       1, 8,        0},\n      { OP_Integer,     0, 2,        0},\n      { OP_Subtract,    1, 2,        1},\n      { OP_IfPos,       1, 8,        0},\n      { OP_Integer,     0, 1,        0},                         /* 6 */\n      { OP_Noop,        0, 0,        0},\n      { OP_ResultRow,   1, 1,        0},\n    };\n    VdbeOp *aOp;\n    sqlite3VdbeUsesBtree(v, iDb);\n    if( !zRight ){\n      pParse->nMem += 2;\n      sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(getCacheSize));\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(getCacheSize), getCacheSize, iLn);\n      if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n      aOp[0].p1 = iDb;\n      aOp[1].p1 = iDb;\n      aOp[6].p1 = SQLITE_DEFAULT_CACHE_SIZE;\n    }else{\n      int size = sqlite3AbsInt32(sqlite3Atoi(zRight));\n      sqlite3BeginWriteOperation(pParse, 0, iDb);\n      sqlite3VdbeAddOp3(v, OP_SetCookie, iDb, BTREE_DEFAULT_CACHE_SIZE, size);\n      assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n      pDb->pSchema->cache_size = size;\n      sqlite3BtreeSetCacheSize(pDb->pBt, pDb->pSchema->cache_size);\n    }\n    break;\n  }\n#endif /* !SQLITE_OMIT_PAGER_PRAGMAS && !SQLITE_OMIT_DEPRECATED */\n\n#if !defined(SQLITE_OMIT_PAGER_PRAGMAS)\n  /*\n  **  PRAGMA [schema.]page_size\n  **  PRAGMA [schema.]page_size=N\n  **\n  ** The first form reports the current setting for the\n  ** database page size in bytes.  The second form sets the\n  ** database page size value.  The value can only be set if\n  ** the database has not yet been created.\n  */\n  case PragTyp_PAGE_SIZE: {\n    Btree *pBt = pDb->pBt;\n    assert( pBt!=0 );\n    if( !zRight ){\n      int size = ALWAYS(pBt) ? sqlite3BtreeGetPageSize(pBt) : 0;\n      returnSingleInt(v, size);\n    }else{\n      /* Malloc may fail when setting the page-size, as there is an internal\n      ** buffer that the pager module resizes using sqlite3_realloc().\n      */\n      db->nextPagesize = sqlite3Atoi(zRight);\n      if( SQLITE_NOMEM==sqlite3BtreeSetPageSize(pBt, db->nextPagesize,-1,0) ){\n        sqlite3OomFault(db);\n      }\n    }\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]secure_delete\n  **  PRAGMA [schema.]secure_delete=ON/OFF/FAST\n  **\n  ** The first form reports the current setting for the\n  ** secure_delete flag.  The second form changes the secure_delete\n  ** flag setting and reports the new value.\n  */\n  case PragTyp_SECURE_DELETE: {\n    Btree *pBt = pDb->pBt;\n    int b = -1;\n    assert( pBt!=0 );\n    if( zRight ){\n      if( sqlite3_stricmp(zRight, \"fast\")==0 ){\n        b = 2;\n      }else{\n        b = sqlite3GetBoolean(zRight, 0);\n      }\n    }\n    if( pId2->n==0 && b>=0 ){\n      int ii;\n      for(ii=0; ii<db->nDb; ii++){\n        sqlite3BtreeSecureDelete(db->aDb[ii].pBt, b);\n      }\n    }\n    b = sqlite3BtreeSecureDelete(pBt, b);\n    returnSingleInt(v, b);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]max_page_count\n  **  PRAGMA [schema.]max_page_count=N\n  **\n  ** The first form reports the current setting for the\n  ** maximum number of pages in the database file.  The \n  ** second form attempts to change this setting.  Both\n  ** forms return the current setting.\n  **\n  ** The absolute value of N is used.  This is undocumented and might\n  ** change.  The only purpose is to provide an easy way to test\n  ** the sqlite3AbsInt32() function.\n  **\n  **  PRAGMA [schema.]page_count\n  **\n  ** Return the number of pages in the specified database.\n  */\n  case PragTyp_PAGE_COUNT: {\n    int iReg;\n    sqlite3CodeVerifySchema(pParse, iDb);\n    iReg = ++pParse->nMem;\n    if( sqlite3Tolower(zLeft[0])=='p' ){\n      sqlite3VdbeAddOp2(v, OP_Pagecount, iDb, iReg);\n    }else{\n      sqlite3VdbeAddOp3(v, OP_MaxPgcnt, iDb, iReg, \n                        sqlite3AbsInt32(sqlite3Atoi(zRight)));\n    }\n    sqlite3VdbeAddOp2(v, OP_ResultRow, iReg, 1);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]locking_mode\n  **  PRAGMA [schema.]locking_mode = (normal|exclusive)\n  */\n  case PragTyp_LOCKING_MODE: {\n    const char *zRet = \"normal\";\n    int eMode = getLockingMode(zRight);\n\n    if( pId2->n==0 && eMode==PAGER_LOCKINGMODE_QUERY ){\n      /* Simple \"PRAGMA locking_mode;\" statement. This is a query for\n      ** the current default locking mode (which may be different to\n      ** the locking-mode of the main database).\n      */\n      eMode = db->dfltLockMode;\n    }else{\n      Pager *pPager;\n      if( pId2->n==0 ){\n        /* This indicates that no database name was specified as part\n        ** of the PRAGMA command. In this case the locking-mode must be\n        ** set on all attached databases, as well as the main db file.\n        **\n        ** Also, the sqlite3.dfltLockMode variable is set so that\n        ** any subsequently attached databases also use the specified\n        ** locking mode.\n        */\n        int ii;\n        assert(pDb==&db->aDb[0]);\n        for(ii=2; ii<db->nDb; ii++){\n          pPager = sqlite3BtreePager(db->aDb[ii].pBt);\n          sqlite3PagerLockingMode(pPager, eMode);\n        }\n        db->dfltLockMode = (u8)eMode;\n      }\n      pPager = sqlite3BtreePager(pDb->pBt);\n      eMode = sqlite3PagerLockingMode(pPager, eMode);\n    }\n\n    assert( eMode==PAGER_LOCKINGMODE_NORMAL\n            || eMode==PAGER_LOCKINGMODE_EXCLUSIVE );\n    if( eMode==PAGER_LOCKINGMODE_EXCLUSIVE ){\n      zRet = \"exclusive\";\n    }\n    returnSingleText(v, zRet);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]journal_mode\n  **  PRAGMA [schema.]journal_mode =\n  **                      (delete|persist|off|truncate|memory|wal|off)\n  */\n  case PragTyp_JOURNAL_MODE: {\n    int eMode;        /* One of the PAGER_JOURNALMODE_XXX symbols */\n    int ii;           /* Loop counter */\n\n    if( zRight==0 ){\n      /* If there is no \"=MODE\" part of the pragma, do a query for the\n      ** current mode */\n      eMode = PAGER_JOURNALMODE_QUERY;\n    }else{\n      const char *zMode;\n      int n = sqlite3Strlen30(zRight);\n      for(eMode=0; (zMode = sqlite3JournalModename(eMode))!=0; eMode++){\n        if( sqlite3StrNICmp(zRight, zMode, n)==0 ) break;\n      }\n      if( !zMode ){\n        /* If the \"=MODE\" part does not match any known journal mode,\n        ** then do a query */\n        eMode = PAGER_JOURNALMODE_QUERY;\n      }\n      if( eMode==PAGER_JOURNALMODE_OFF && (db->flags & SQLITE_Defensive)!=0 ){\n        /* Do not allow journal-mode \"OFF\" in defensive since the database\n        ** can become corrupted using ordinary SQL when the journal is off */\n        eMode = PAGER_JOURNALMODE_QUERY;\n      }\n    }\n    if( eMode==PAGER_JOURNALMODE_QUERY && pId2->n==0 ){\n      /* Convert \"PRAGMA journal_mode\" into \"PRAGMA main.journal_mode\" */\n      iDb = 0;\n      pId2->n = 1;\n    }\n    for(ii=db->nDb-1; ii>=0; ii--){\n      if( db->aDb[ii].pBt && (ii==iDb || pId2->n==0) ){\n        sqlite3VdbeUsesBtree(v, ii);\n        sqlite3VdbeAddOp3(v, OP_JournalMode, ii, 1, eMode);\n      }\n    }\n    sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]journal_size_limit\n  **  PRAGMA [schema.]journal_size_limit=N\n  **\n  ** Get or set the size limit on rollback journal files.\n  */\n  case PragTyp_JOURNAL_SIZE_LIMIT: {\n    Pager *pPager = sqlite3BtreePager(pDb->pBt);\n    i64 iLimit = -2;\n    if( zRight ){\n      sqlite3DecOrHexToI64(zRight, &iLimit);\n      if( iLimit<-1 ) iLimit = -1;\n    }\n    iLimit = sqlite3PagerJournalSizeLimit(pPager, iLimit);\n    returnSingleInt(v, iLimit);\n    break;\n  }\n\n#endif /* SQLITE_OMIT_PAGER_PRAGMAS */\n\n  /*\n  **  PRAGMA [schema.]auto_vacuum\n  **  PRAGMA [schema.]auto_vacuum=N\n  **\n  ** Get or set the value of the database 'auto-vacuum' parameter.\n  ** The value is one of:  0 NONE 1 FULL 2 INCREMENTAL\n  */\n#ifndef SQLITE_OMIT_AUTOVACUUM\n  case PragTyp_AUTO_VACUUM: {\n    Btree *pBt = pDb->pBt;\n    assert( pBt!=0 );\n    if( !zRight ){\n      returnSingleInt(v, sqlite3BtreeGetAutoVacuum(pBt));\n    }else{\n      int eAuto = getAutoVacuum(zRight);\n      assert( eAuto>=0 && eAuto<=2 );\n      db->nextAutovac = (u8)eAuto;\n      /* Call SetAutoVacuum() to set initialize the internal auto and\n      ** incr-vacuum flags. This is required in case this connection\n      ** creates the database file. It is important that it is created\n      ** as an auto-vacuum capable db.\n      */\n      rc = sqlite3BtreeSetAutoVacuum(pBt, eAuto);\n      if( rc==SQLITE_OK && (eAuto==1 || eAuto==2) ){\n        /* When setting the auto_vacuum mode to either \"full\" or \n        ** \"incremental\", write the value of meta[6] in the database\n        ** file. Before writing to meta[6], check that meta[3] indicates\n        ** that this really is an auto-vacuum capable database.\n        */\n        static const int iLn = VDBE_OFFSET_LINENO(2);\n        static const VdbeOpList setMeta6[] = {\n          { OP_Transaction,    0,         1,                 0},    /* 0 */\n          { OP_ReadCookie,     0,         1,         BTREE_LARGEST_ROOT_PAGE},\n          { OP_If,             1,         0,                 0},    /* 2 */\n          { OP_Halt,           SQLITE_OK, OE_Abort,          0},    /* 3 */\n          { OP_SetCookie,      0,         BTREE_INCR_VACUUM, 0},    /* 4 */\n        };\n        VdbeOp *aOp;\n        int iAddr = sqlite3VdbeCurrentAddr(v);\n        sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(setMeta6));\n        aOp = sqlite3VdbeAddOpList(v, ArraySize(setMeta6), setMeta6, iLn);\n        if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n        aOp[0].p1 = iDb;\n        aOp[1].p1 = iDb;\n        aOp[2].p2 = iAddr+4;\n        aOp[4].p1 = iDb;\n        aOp[4].p3 = eAuto - 1;\n        sqlite3VdbeUsesBtree(v, iDb);\n      }\n    }\n    break;\n  }\n#endif\n\n  /*\n  **  PRAGMA [schema.]incremental_vacuum(N)\n  **\n  ** Do N steps of incremental vacuuming on a database.\n  */\n#ifndef SQLITE_OMIT_AUTOVACUUM\n  case PragTyp_INCREMENTAL_VACUUM: {\n    int iLimit, addr;\n    if( zRight==0 || !sqlite3GetInt32(zRight, &iLimit) || iLimit<=0 ){\n      iLimit = 0x7fffffff;\n    }\n    sqlite3BeginWriteOperation(pParse, 0, iDb);\n    sqlite3VdbeAddOp2(v, OP_Integer, iLimit, 1);\n    addr = sqlite3VdbeAddOp1(v, OP_IncrVacuum, iDb); VdbeCoverage(v);\n    sqlite3VdbeAddOp1(v, OP_ResultRow, 1);\n    sqlite3VdbeAddOp2(v, OP_AddImm, 1, -1);\n    sqlite3VdbeAddOp2(v, OP_IfPos, 1, addr); VdbeCoverage(v);\n    sqlite3VdbeJumpHere(v, addr);\n    break;\n  }\n#endif\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n  /*\n  **  PRAGMA [schema.]cache_size\n  **  PRAGMA [schema.]cache_size=N\n  **\n  ** The first form reports the current local setting for the\n  ** page cache size. The second form sets the local\n  ** page cache size value.  If N is positive then that is the\n  ** number of pages in the cache.  If N is negative, then the\n  ** number of pages is adjusted so that the cache uses -N kibibytes\n  ** of memory.\n  */\n  case PragTyp_CACHE_SIZE: {\n    assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n    if( !zRight ){\n      returnSingleInt(v, pDb->pSchema->cache_size);\n    }else{\n      int size = sqlite3Atoi(zRight);\n      pDb->pSchema->cache_size = size;\n      sqlite3BtreeSetCacheSize(pDb->pBt, pDb->pSchema->cache_size);\n    }\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]cache_spill\n  **  PRAGMA cache_spill=BOOLEAN\n  **  PRAGMA [schema.]cache_spill=N\n  **\n  ** The first form reports the current local setting for the\n  ** page cache spill size. The second form turns cache spill on\n  ** or off.  When turnning cache spill on, the size is set to the\n  ** current cache_size.  The third form sets a spill size that\n  ** may be different form the cache size.\n  ** If N is positive then that is the\n  ** number of pages in the cache.  If N is negative, then the\n  ** number of pages is adjusted so that the cache uses -N kibibytes\n  ** of memory.\n  **\n  ** If the number of cache_spill pages is less then the number of\n  ** cache_size pages, no spilling occurs until the page count exceeds\n  ** the number of cache_size pages.\n  **\n  ** The cache_spill=BOOLEAN setting applies to all attached schemas,\n  ** not just the schema specified.\n  */\n  case PragTyp_CACHE_SPILL: {\n    assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n    if( !zRight ){\n      returnSingleInt(v,\n         (db->flags & SQLITE_CacheSpill)==0 ? 0 : \n            sqlite3BtreeSetSpillSize(pDb->pBt,0));\n    }else{\n      int size = 1;\n      if( sqlite3GetInt32(zRight, &size) ){\n        sqlite3BtreeSetSpillSize(pDb->pBt, size);\n      }\n      if( sqlite3GetBoolean(zRight, size!=0) ){\n        db->flags |= SQLITE_CacheSpill;\n      }else{\n        db->flags &= ~(u64)SQLITE_CacheSpill;\n      }\n      setAllPagerFlags(db);\n    }\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]mmap_size(N)\n  **\n  ** Used to set mapping size limit. The mapping size limit is\n  ** used to limit the aggregate size of all memory mapped regions of the\n  ** database file. If this parameter is set to zero, then memory mapping\n  ** is not used at all.  If N is negative, then the default memory map\n  ** limit determined by sqlite3_config(SQLITE_CONFIG_MMAP_SIZE) is set.\n  ** The parameter N is measured in bytes.\n  **\n  ** This value is advisory.  The underlying VFS is free to memory map\n  ** as little or as much as it wants.  Except, if N is set to 0 then the\n  ** upper layers will never invoke the xFetch interfaces to the VFS.\n  */\n  case PragTyp_MMAP_SIZE: {\n    sqlite3_int64 sz;\n#if SQLITE_MAX_MMAP_SIZE>0\n    assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n    if( zRight ){\n      int ii;\n      sqlite3DecOrHexToI64(zRight, &sz);\n      if( sz<0 ) sz = sqlite3GlobalConfig.szMmap;\n      if( pId2->n==0 ) db->szMmap = sz;\n      for(ii=db->nDb-1; ii>=0; ii--){\n        if( db->aDb[ii].pBt && (ii==iDb || pId2->n==0) ){\n          sqlite3BtreeSetMmapLimit(db->aDb[ii].pBt, sz);\n        }\n      }\n    }\n    sz = -1;\n    rc = sqlite3_file_control(db, zDb, SQLITE_FCNTL_MMAP_SIZE, &sz);\n#else\n    sz = 0;\n    rc = SQLITE_OK;\n#endif\n    if( rc==SQLITE_OK ){\n      returnSingleInt(v, sz);\n    }else if( rc!=SQLITE_NOTFOUND ){\n      pParse->nErr++;\n      pParse->rc = rc;\n    }\n    break;\n  }\n\n  /*\n  **   PRAGMA temp_store\n  **   PRAGMA temp_store = \"default\"|\"memory\"|\"file\"\n  **\n  ** Return or set the local value of the temp_store flag.  Changing\n  ** the local value does not make changes to the disk file and the default\n  ** value will be restored the next time the database is opened.\n  **\n  ** Note that it is possible for the library compile-time options to\n  ** override this setting\n  */\n  case PragTyp_TEMP_STORE: {\n    if( !zRight ){\n      returnSingleInt(v, db->temp_store);\n    }else{\n      changeTempStorage(pParse, zRight);\n    }\n    break;\n  }\n\n  /*\n  **   PRAGMA temp_store_directory\n  **   PRAGMA temp_store_directory = \"\"|\"directory_name\"\n  **\n  ** Return or set the local value of the temp_store_directory flag.  Changing\n  ** the value sets a specific directory to be used for temporary files.\n  ** Setting to a null string reverts to the default temporary directory search.\n  ** If temporary directory is changed, then invalidateTempStorage.\n  **\n  */\n  case PragTyp_TEMP_STORE_DIRECTORY: {\n    if( !zRight ){\n      returnSingleText(v, sqlite3_temp_directory);\n    }else{\n#ifndef SQLITE_OMIT_WSD\n      if( zRight[0] ){\n        int res;\n        rc = sqlite3OsAccess(db->pVfs, zRight, SQLITE_ACCESS_READWRITE, &res);\n        if( rc!=SQLITE_OK || res==0 ){\n          sqlite3ErrorMsg(pParse, \"not a writable directory\");\n          goto pragma_out;\n        }\n      }\n      if( SQLITE_TEMP_STORE==0\n       || (SQLITE_TEMP_STORE==1 && db->temp_store<=1)\n       || (SQLITE_TEMP_STORE==2 && db->temp_store==1)\n      ){\n        invalidateTempStorage(pParse);\n      }\n      sqlite3_free(sqlite3_temp_directory);\n      if( zRight[0] ){\n        sqlite3_temp_directory = sqlite3_mprintf(\"%s\", zRight);\n      }else{\n        sqlite3_temp_directory = 0;\n      }\n#endif /* SQLITE_OMIT_WSD */\n    }\n    break;\n  }\n\n#if SQLITE_OS_WIN\n  /*\n  **   PRAGMA data_store_directory\n  **   PRAGMA data_store_directory = \"\"|\"directory_name\"\n  **\n  ** Return or set the local value of the data_store_directory flag.  Changing\n  ** the value sets a specific directory to be used for database files that\n  ** were specified with a relative pathname.  Setting to a null string reverts\n  ** to the default database directory, which for database files specified with\n  ** a relative path will probably be based on the current directory for the\n  ** process.  Database file specified with an absolute path are not impacted\n  ** by this setting, regardless of its value.\n  **\n  */\n  case PragTyp_DATA_STORE_DIRECTORY: {\n    if( !zRight ){\n      returnSingleText(v, sqlite3_data_directory);\n    }else{\n#ifndef SQLITE_OMIT_WSD\n      if( zRight[0] ){\n        int res;\n        rc = sqlite3OsAccess(db->pVfs, zRight, SQLITE_ACCESS_READWRITE, &res);\n        if( rc!=SQLITE_OK || res==0 ){\n          sqlite3ErrorMsg(pParse, \"not a writable directory\");\n          goto pragma_out;\n        }\n      }\n      sqlite3_free(sqlite3_data_directory);\n      if( zRight[0] ){\n        sqlite3_data_directory = sqlite3_mprintf(\"%s\", zRight);\n      }else{\n        sqlite3_data_directory = 0;\n      }\n#endif /* SQLITE_OMIT_WSD */\n    }\n    break;\n  }\n#endif\n\n#if SQLITE_ENABLE_LOCKING_STYLE\n  /*\n  **   PRAGMA [schema.]lock_proxy_file\n  **   PRAGMA [schema.]lock_proxy_file = \":auto:\"|\"lock_file_path\"\n  **\n  ** Return or set the value of the lock_proxy_file flag.  Changing\n  ** the value sets a specific file to be used for database access locks.\n  **\n  */\n  case PragTyp_LOCK_PROXY_FILE: {\n    if( !zRight ){\n      Pager *pPager = sqlite3BtreePager(pDb->pBt);\n      char *proxy_file_path = NULL;\n      sqlite3_file *pFile = sqlite3PagerFile(pPager);\n      sqlite3OsFileControlHint(pFile, SQLITE_GET_LOCKPROXYFILE, \n                           &proxy_file_path);\n      returnSingleText(v, proxy_file_path);\n    }else{\n      Pager *pPager = sqlite3BtreePager(pDb->pBt);\n      sqlite3_file *pFile = sqlite3PagerFile(pPager);\n      int res;\n      if( zRight[0] ){\n        res=sqlite3OsFileControl(pFile, SQLITE_SET_LOCKPROXYFILE, \n                                     zRight);\n      } else {\n        res=sqlite3OsFileControl(pFile, SQLITE_SET_LOCKPROXYFILE, \n                                     NULL);\n      }\n      if( res!=SQLITE_OK ){\n        sqlite3ErrorMsg(pParse, \"failed to set lock proxy file\");\n        goto pragma_out;\n      }\n    }\n    break;\n  }\n#endif /* SQLITE_ENABLE_LOCKING_STYLE */      \n    \n  /*\n  **   PRAGMA [schema.]synchronous\n  **   PRAGMA [schema.]synchronous=OFF|ON|NORMAL|FULL|EXTRA\n  **\n  ** Return or set the local value of the synchronous flag.  Changing\n  ** the local value does not make changes to the disk file and the\n  ** default value will be restored the next time the database is\n  ** opened.\n  */\n  case PragTyp_SYNCHRONOUS: {\n    if( !zRight ){\n      returnSingleInt(v, pDb->safety_level-1);\n    }else{\n      if( !db->autoCommit ){\n        sqlite3ErrorMsg(pParse, \n            \"Safety level may not be changed inside a transaction\");\n      }else if( iDb!=1 ){\n        int iLevel = (getSafetyLevel(zRight,0,1)+1) & PAGER_SYNCHRONOUS_MASK;\n        if( iLevel==0 ) iLevel = 1;\n        pDb->safety_level = iLevel;\n        pDb->bSyncSet = 1;\n        setAllPagerFlags(db);\n      }\n    }\n    break;\n  }\n#endif /* SQLITE_OMIT_PAGER_PRAGMAS */\n\n#ifndef SQLITE_OMIT_FLAG_PRAGMAS\n  case PragTyp_FLAG: {\n    if( zRight==0 ){\n      setPragmaResultColumnNames(v, pPragma);\n      returnSingleInt(v, (db->flags & pPragma->iArg)!=0 );\n    }else{\n      u64 mask = pPragma->iArg;    /* Mask of bits to set or clear. */\n      if( db->autoCommit==0 ){\n        /* Foreign key support may not be enabled or disabled while not\n        ** in auto-commit mode.  */\n        mask &= ~(SQLITE_ForeignKeys);\n      }\n#if SQLITE_USER_AUTHENTICATION\n      if( db->auth.authLevel==UAUTH_User ){\n        /* Do not allow non-admin users to modify the schema arbitrarily */\n        mask &= ~(SQLITE_WriteSchema);\n      }\n#endif\n\n      if( sqlite3GetBoolean(zRight, 0) ){\n        db->flags |= mask;\n      }else{\n        db->flags &= ~mask;\n        if( mask==SQLITE_DeferFKs ) db->nDeferredImmCons = 0;\n      }\n\n      /* Many of the flag-pragmas modify the code generated by the SQL \n      ** compiler (eg. count_changes). So add an opcode to expire all\n      ** compiled SQL statements after modifying a pragma value.\n      */\n      sqlite3VdbeAddOp0(v, OP_Expire);\n      setAllPagerFlags(db);\n    }\n    break;\n  }\n#endif /* SQLITE_OMIT_FLAG_PRAGMAS */\n\n#ifndef SQLITE_OMIT_SCHEMA_PRAGMAS\n  /*\n  **   PRAGMA table_info(<table>)\n  **\n  ** Return a single row for each column of the named table. The columns of\n  ** the returned data set are:\n  **\n  ** cid:        Column id (numbered from left to right, starting at 0)\n  ** name:       Column name\n  ** type:       Column declaration type.\n  ** notnull:    True if 'NOT NULL' is part of column declaration\n  ** dflt_value: The default value for the column, if any.\n  ** pk:         Non-zero for PK fields.\n  */\n  case PragTyp_TABLE_INFO: if( zRight ){\n    Table *pTab;\n    pTab = sqlite3LocateTable(pParse, LOCATE_NOERR, zRight, zDb);\n    if( pTab ){\n      int iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n      int i, k;\n      int nHidden = 0;\n      Column *pCol;\n      Index *pPk = sqlite3PrimaryKeyIndex(pTab);\n      pParse->nMem = 7;\n      sqlite3CodeVerifySchema(pParse, iTabDb);\n      sqlite3ViewGetColumnNames(pParse, pTab);\n      for(i=0, pCol=pTab->aCol; i<pTab->nCol; i++, pCol++){\n        int isHidden = 0;\n        if( pCol->colFlags & COLFLAG_NOINSERT ){\n          if( pPragma->iArg==0 ){\n            nHidden++;\n            continue;\n          }\n          if( pCol->colFlags & COLFLAG_VIRTUAL ){\n            isHidden = 2;  /* GENERATED ALWAYS AS ... VIRTUAL */\n          }else if( pCol->colFlags & COLFLAG_STORED ){\n            isHidden = 3;  /* GENERATED ALWAYS AS ... STORED */\n          }else{ assert( pCol->colFlags & COLFLAG_HIDDEN );\n            isHidden = 1;  /* HIDDEN */\n          }\n        }\n        if( (pCol->colFlags & COLFLAG_PRIMKEY)==0 ){\n          k = 0;\n        }else if( pPk==0 ){\n          k = 1;\n        }else{\n          for(k=1; k<=pTab->nCol && pPk->aiColumn[k-1]!=i; k++){}\n        }\n        assert( pCol->pDflt==0 || pCol->pDflt->op==TK_SPAN || isHidden>=2 );\n        sqlite3VdbeMultiLoad(v, 1, pPragma->iArg ? \"issisii\" : \"issisi\",\n               i-nHidden,\n               pCol->zName,\n               sqlite3ColumnType(pCol,\"\"),\n               pCol->notNull ? 1 : 0,\n               pCol->pDflt && isHidden<2 ? pCol->pDflt->u.zToken : 0,\n               k,\n               isHidden);\n      }\n    }\n  }\n  break;\n\n#ifdef SQLITE_DEBUG\n  case PragTyp_STATS: {\n    Index *pIdx;\n    HashElem *i;\n    pParse->nMem = 5;\n    sqlite3CodeVerifySchema(pParse, iDb);\n    for(i=sqliteHashFirst(&pDb->pSchema->tblHash); i; i=sqliteHashNext(i)){\n      Table *pTab = sqliteHashData(i);\n      sqlite3VdbeMultiLoad(v, 1, \"ssiii\",\n           pTab->zName,\n           0,\n           pTab->szTabRow,\n           pTab->nRowLogEst,\n           pTab->tabFlags);\n      for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){\n        sqlite3VdbeMultiLoad(v, 2, \"siiiX\",\n           pIdx->zName,\n           pIdx->szIdxRow,\n           pIdx->aiRowLogEst[0],\n           pIdx->hasStat1);\n        sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 5);\n      }\n    }\n  }\n  break;\n#endif\n\n  case PragTyp_INDEX_INFO: if( zRight ){\n    Index *pIdx;\n    Table *pTab;\n    pIdx = sqlite3FindIndex(db, zRight, zDb);\n    if( pIdx==0 ){\n      /* If there is no index named zRight, check to see if there is a\n      ** WITHOUT ROWID table named zRight, and if there is, show the\n      ** structure of the PRIMARY KEY index for that table. */\n      pTab = sqlite3LocateTable(pParse, LOCATE_NOERR, zRight, zDb);\n      if( pTab && !HasRowid(pTab) ){\n        pIdx = sqlite3PrimaryKeyIndex(pTab);\n      }\n    }\n    if( pIdx ){\n      int iIdxDb = sqlite3SchemaToIndex(db, pIdx->pSchema);\n      int i;\n      int mx;\n      if( pPragma->iArg ){\n        /* PRAGMA index_xinfo (newer version with more rows and columns) */\n        mx = pIdx->nColumn;\n        pParse->nMem = 6;\n      }else{\n        /* PRAGMA index_info (legacy version) */\n        mx = pIdx->nKeyCol;\n        pParse->nMem = 3;\n      }\n      pTab = pIdx->pTable;\n      sqlite3CodeVerifySchema(pParse, iIdxDb);\n      assert( pParse->nMem<=pPragma->nPragCName );\n      for(i=0; i<mx; i++){\n        i16 cnum = pIdx->aiColumn[i];\n        sqlite3VdbeMultiLoad(v, 1, \"iisX\", i, cnum,\n                             cnum<0 ? 0 : pTab->aCol[cnum].zName);\n        if( pPragma->iArg ){\n          sqlite3VdbeMultiLoad(v, 4, \"isiX\",\n            pIdx->aSortOrder[i],\n            pIdx->azColl[i],\n            i<pIdx->nKeyCol);\n        }\n        sqlite3VdbeAddOp2(v, OP_ResultRow, 1, pParse->nMem);\n      }\n    }\n  }\n  break;\n\n  case PragTyp_INDEX_LIST: if( zRight ){\n    Index *pIdx;\n    Table *pTab;\n    int i;\n    pTab = sqlite3FindTable(db, zRight, zDb);\n    if( pTab ){\n      int iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n      pParse->nMem = 5;\n      sqlite3CodeVerifySchema(pParse, iTabDb);\n      for(pIdx=pTab->pIndex, i=0; pIdx; pIdx=pIdx->pNext, i++){\n        const char *azOrigin[] = { \"c\", \"u\", \"pk\" };\n        sqlite3VdbeMultiLoad(v, 1, \"isisi\",\n           i,\n           pIdx->zName,\n           IsUniqueIndex(pIdx),\n           azOrigin[pIdx->idxType],\n           pIdx->pPartIdxWhere!=0);\n      }\n    }\n  }\n  break;\n\n  case PragTyp_DATABASE_LIST: {\n    int i;\n    pParse->nMem = 3;\n    for(i=0; i<db->nDb; i++){\n      if( db->aDb[i].pBt==0 ) continue;\n      assert( db->aDb[i].zDbSName!=0 );\n      sqlite3VdbeMultiLoad(v, 1, \"iss\",\n         i,\n         db->aDb[i].zDbSName,\n         sqlite3BtreeGetFilename(db->aDb[i].pBt));\n    }\n  }\n  break;\n\n  case PragTyp_COLLATION_LIST: {\n    int i = 0;\n    HashElem *p;\n    pParse->nMem = 2;\n    for(p=sqliteHashFirst(&db->aCollSeq); p; p=sqliteHashNext(p)){\n      CollSeq *pColl = (CollSeq *)sqliteHashData(p);\n      sqlite3VdbeMultiLoad(v, 1, \"is\", i++, pColl->zName);\n    }\n  }\n  break;\n\n#ifndef SQLITE_OMIT_INTROSPECTION_PRAGMAS\n  case PragTyp_FUNCTION_LIST: {\n    int i;\n    HashElem *j;\n    FuncDef *p;\n    pParse->nMem = 2;\n    for(i=0; i<SQLITE_FUNC_HASH_SZ; i++){\n      for(p=sqlite3BuiltinFunctions.a[i]; p; p=p->u.pHash ){\n        if( p->funcFlags & SQLITE_FUNC_INTERNAL ) continue;\n        sqlite3VdbeMultiLoad(v, 1, \"si\", p->zName, 1);\n      }\n    }\n    for(j=sqliteHashFirst(&db->aFunc); j; j=sqliteHashNext(j)){\n      p = (FuncDef*)sqliteHashData(j);\n      sqlite3VdbeMultiLoad(v, 1, \"si\", p->zName, 0);\n    }\n  }\n  break;\n\n#ifndef SQLITE_OMIT_VIRTUALTABLE\n  case PragTyp_MODULE_LIST: {\n    HashElem *j;\n    pParse->nMem = 1;\n    for(j=sqliteHashFirst(&db->aModule); j; j=sqliteHashNext(j)){\n      Module *pMod = (Module*)sqliteHashData(j);\n      sqlite3VdbeMultiLoad(v, 1, \"s\", pMod->zName);\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_VIRTUALTABLE */\n\n  case PragTyp_PRAGMA_LIST: {\n    int i;\n    for(i=0; i<ArraySize(aPragmaName); i++){\n      sqlite3VdbeMultiLoad(v, 1, \"s\", aPragmaName[i].zName);\n    }\n  }\n  break;\n#endif /* SQLITE_INTROSPECTION_PRAGMAS */\n\n#endif /* SQLITE_OMIT_SCHEMA_PRAGMAS */\n\n#ifndef SQLITE_OMIT_FOREIGN_KEY\n  case PragTyp_FOREIGN_KEY_LIST: if( zRight ){\n    FKey *pFK;\n    Table *pTab;\n    pTab = sqlite3FindTable(db, zRight, zDb);\n    if( pTab ){\n      pFK = pTab->pFKey;\n      if( pFK ){\n        int iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n        int i = 0; \n        pParse->nMem = 8;\n        sqlite3CodeVerifySchema(pParse, iTabDb);\n        while(pFK){\n          int j;\n          for(j=0; j<pFK->nCol; j++){\n            sqlite3VdbeMultiLoad(v, 1, \"iissssss\",\n                   i,\n                   j,\n                   pFK->zTo,\n                   pTab->aCol[pFK->aCol[j].iFrom].zName,\n                   pFK->aCol[j].zCol,\n                   actionName(pFK->aAction[1]),  /* ON UPDATE */\n                   actionName(pFK->aAction[0]),  /* ON DELETE */\n                   \"NONE\");\n          }\n          ++i;\n          pFK = pFK->pNextFrom;\n        }\n      }\n    }\n  }\n  break;\n#endif /* !defined(SQLITE_OMIT_FOREIGN_KEY) */\n\n#ifndef SQLITE_OMIT_FOREIGN_KEY\n#ifndef SQLITE_OMIT_TRIGGER\n  case PragTyp_FOREIGN_KEY_CHECK: {\n    FKey *pFK;             /* A foreign key constraint */\n    Table *pTab;           /* Child table contain \"REFERENCES\" keyword */\n    Table *pParent;        /* Parent table that child points to */\n    Index *pIdx;           /* Index in the parent table */\n    int i;                 /* Loop counter:  Foreign key number for pTab */\n    int j;                 /* Loop counter:  Field of the foreign key */\n    HashElem *k;           /* Loop counter:  Next table in schema */\n    int x;                 /* result variable */\n    int regResult;         /* 3 registers to hold a result row */\n    int regKey;            /* Register to hold key for checking the FK */\n    int regRow;            /* Registers to hold a row from pTab */\n    int addrTop;           /* Top of a loop checking foreign keys */\n    int addrOk;            /* Jump here if the key is OK */\n    int *aiCols;           /* child to parent column mapping */\n\n    regResult = pParse->nMem+1;\n    pParse->nMem += 4;\n    regKey = ++pParse->nMem;\n    regRow = ++pParse->nMem;\n    k = sqliteHashFirst(&db->aDb[iDb].pSchema->tblHash);\n    while( k ){\n      int iTabDb;\n      if( zRight ){\n        pTab = sqlite3LocateTable(pParse, 0, zRight, zDb);\n        k = 0;\n      }else{\n        pTab = (Table*)sqliteHashData(k);\n        k = sqliteHashNext(k);\n      }\n      if( pTab==0 || pTab->pFKey==0 ) continue;\n      iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n      sqlite3CodeVerifySchema(pParse, iTabDb);\n      sqlite3TableLock(pParse, iTabDb, pTab->tnum, 0, pTab->zName);\n      if( pTab->nCol+regRow>pParse->nMem ) pParse->nMem = pTab->nCol + regRow;\n      sqlite3OpenTable(pParse, 0, iTabDb, pTab, OP_OpenRead);\n      sqlite3VdbeLoadString(v, regResult, pTab->zName);\n      for(i=1, pFK=pTab->pFKey; pFK; i++, pFK=pFK->pNextFrom){\n        pParent = sqlite3FindTable(db, pFK->zTo, zDb);\n        if( pParent==0 ) continue;\n        pIdx = 0;\n        sqlite3TableLock(pParse, iTabDb, pParent->tnum, 0, pParent->zName);\n        x = sqlite3FkLocateIndex(pParse, pParent, pFK, &pIdx, 0);\n        if( x==0 ){\n          if( pIdx==0 ){\n            sqlite3OpenTable(pParse, i, iTabDb, pParent, OP_OpenRead);\n          }else{\n            sqlite3VdbeAddOp3(v, OP_OpenRead, i, pIdx->tnum, iTabDb);\n            sqlite3VdbeSetP4KeyInfo(pParse, pIdx);\n          }\n        }else{\n          k = 0;\n          break;\n        }\n      }\n      assert( pParse->nErr>0 || pFK==0 );\n      if( pFK ) break;\n      if( pParse->nTab<i ) pParse->nTab = i;\n      addrTop = sqlite3VdbeAddOp1(v, OP_Rewind, 0); VdbeCoverage(v);\n      for(i=1, pFK=pTab->pFKey; pFK; i++, pFK=pFK->pNextFrom){\n        pParent = sqlite3FindTable(db, pFK->zTo, zDb);\n        pIdx = 0;\n        aiCols = 0;\n        if( pParent ){\n          x = sqlite3FkLocateIndex(pParse, pParent, pFK, &pIdx, &aiCols);\n          assert( x==0 );\n        }\n        addrOk = sqlite3VdbeMakeLabel(pParse);\n\n        /* Generate code to read the child key values into registers\n        ** regRow..regRow+n. If any of the child key values are NULL, this \n        ** row cannot cause an FK violation. Jump directly to addrOk in \n        ** this case. */\n        for(j=0; j<pFK->nCol; j++){\n          int iCol = aiCols ? aiCols[j] : pFK->aCol[j].iFrom;\n          sqlite3ExprCodeGetColumnOfTable(v, pTab, 0, iCol, regRow+j);\n          sqlite3VdbeAddOp2(v, OP_IsNull, regRow+j, addrOk); VdbeCoverage(v);\n        }\n\n        /* Generate code to query the parent index for a matching parent\n        ** key. If a match is found, jump to addrOk. */\n        if( pIdx ){\n          sqlite3VdbeAddOp4(v, OP_MakeRecord, regRow, pFK->nCol, regKey,\n              sqlite3IndexAffinityStr(db,pIdx), pFK->nCol);\n          sqlite3VdbeAddOp4Int(v, OP_Found, i, addrOk, regKey, 0);\n          VdbeCoverage(v);\n        }else if( pParent ){\n          int jmp = sqlite3VdbeCurrentAddr(v)+2;\n          sqlite3VdbeAddOp3(v, OP_SeekRowid, i, jmp, regRow); VdbeCoverage(v);\n          sqlite3VdbeGoto(v, addrOk);\n          assert( pFK->nCol==1 );\n        }\n\n        /* Generate code to report an FK violation to the caller. */\n        if( HasRowid(pTab) ){\n          sqlite3VdbeAddOp2(v, OP_Rowid, 0, regResult+1);\n        }else{\n          sqlite3VdbeAddOp2(v, OP_Null, 0, regResult+1);\n        }\n        sqlite3VdbeMultiLoad(v, regResult+2, \"siX\", pFK->zTo, i-1);\n        sqlite3VdbeAddOp2(v, OP_ResultRow, regResult, 4);\n        sqlite3VdbeResolveLabel(v, addrOk);\n        sqlite3DbFree(db, aiCols);\n      }\n      sqlite3VdbeAddOp2(v, OP_Next, 0, addrTop+1); VdbeCoverage(v);\n      sqlite3VdbeJumpHere(v, addrTop);\n    }\n  }\n  break;\n#endif /* !defined(SQLITE_OMIT_TRIGGER) */\n#endif /* !defined(SQLITE_OMIT_FOREIGN_KEY) */\n\n#ifndef SQLITE_OMIT_CASE_SENSITIVE_LIKE_PRAGMA\n  /* Reinstall the LIKE and GLOB functions.  The variant of LIKE\n  ** used will be case sensitive or not depending on the RHS.\n  */\n  case PragTyp_CASE_SENSITIVE_LIKE: {\n    if( zRight ){\n      sqlite3RegisterLikeFunctions(db, sqlite3GetBoolean(zRight, 0));\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_CASE_SENSITIVE_LIKE_PRAGMA */\n\n#ifndef SQLITE_INTEGRITY_CHECK_ERROR_MAX\n# define SQLITE_INTEGRITY_CHECK_ERROR_MAX 100\n#endif\n\n#ifndef SQLITE_OMIT_INTEGRITY_CHECK\n  /*    PRAGMA integrity_check\n  **    PRAGMA integrity_check(N)\n  **    PRAGMA quick_check\n  **    PRAGMA quick_check(N)\n  **\n  ** Verify the integrity of the database.\n  **\n  ** The \"quick_check\" is reduced version of \n  ** integrity_check designed to detect most database corruption\n  ** without the overhead of cross-checking indexes.  Quick_check\n  ** is linear time wherease integrity_check is O(NlogN).\n  */\n  case PragTyp_INTEGRITY_CHECK: {\n    int i, j, addr, mxErr;\n\n    int isQuick = (sqlite3Tolower(zLeft[0])=='q');\n\n    /* If the PRAGMA command was of the form \"PRAGMA <db>.integrity_check\",\n    ** then iDb is set to the index of the database identified by <db>.\n    ** In this case, the integrity of database iDb only is verified by\n    ** the VDBE created below.\n    **\n    ** Otherwise, if the command was simply \"PRAGMA integrity_check\" (or\n    ** \"PRAGMA quick_check\"), then iDb is set to 0. In this case, set iDb\n    ** to -1 here, to indicate that the VDBE should verify the integrity\n    ** of all attached databases.  */\n    assert( iDb>=0 );\n    assert( iDb==0 || pId2->z );\n    if( pId2->z==0 ) iDb = -1;\n\n    /* Initialize the VDBE program */\n    pParse->nMem = 6;\n\n    /* Set the maximum error count */\n    mxErr = SQLITE_INTEGRITY_CHECK_ERROR_MAX;\n    if( zRight ){\n      sqlite3GetInt32(zRight, &mxErr);\n      if( mxErr<=0 ){\n        mxErr = SQLITE_INTEGRITY_CHECK_ERROR_MAX;\n      }\n    }\n    sqlite3VdbeAddOp2(v, OP_Integer, mxErr-1, 1); /* reg[1] holds errors left */\n\n    /* Do an integrity check on each database file */\n    for(i=0; i<db->nDb; i++){\n      HashElem *x;     /* For looping over tables in the schema */\n      Hash *pTbls;     /* Set of all tables in the schema */\n      int *aRoot;      /* Array of root page numbers of all btrees */\n      int cnt = 0;     /* Number of entries in aRoot[] */\n      int mxIdx = 0;   /* Maximum number of indexes for any table */\n\n      if( OMIT_TEMPDB && i==1 ) continue;\n      if( iDb>=0 && i!=iDb ) continue;\n\n      sqlite3CodeVerifySchema(pParse, i);\n\n      /* Do an integrity check of the B-Tree\n      **\n      ** Begin by finding the root pages numbers\n      ** for all tables and indices in the database.\n      */\n      assert( sqlite3SchemaMutexHeld(db, i, 0) );\n      pTbls = &db->aDb[i].pSchema->tblHash;\n      for(cnt=0, x=sqliteHashFirst(pTbls); x; x=sqliteHashNext(x)){\n        Table *pTab = sqliteHashData(x);  /* Current table */\n        Index *pIdx;                      /* An index on pTab */\n        int nIdx;                         /* Number of indexes on pTab */\n        if( HasRowid(pTab) ) cnt++;\n        for(nIdx=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, nIdx++){ cnt++; }\n        if( nIdx>mxIdx ) mxIdx = nIdx;\n      }\n      aRoot = sqlite3DbMallocRawNN(db, sizeof(int)*(cnt+1));\n      if( aRoot==0 ) break;\n      for(cnt=0, x=sqliteHashFirst(pTbls); x; x=sqliteHashNext(x)){\n        Table *pTab = sqliteHashData(x);\n        Index *pIdx;\n        if( HasRowid(pTab) ) aRoot[++cnt] = pTab->tnum;\n        for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){\n          aRoot[++cnt] = pIdx->tnum;\n        }\n      }\n      aRoot[0] = cnt;\n\n      /* Make sure sufficient number of registers have been allocated */\n      pParse->nMem = MAX( pParse->nMem, 8+mxIdx );\n      sqlite3ClearTempRegCache(pParse);\n\n      /* Do the b-tree integrity checks */\n      sqlite3VdbeAddOp4(v, OP_IntegrityCk, 2, cnt, 1, (char*)aRoot,P4_INTARRAY);\n      sqlite3VdbeChangeP5(v, (u8)i);\n      addr = sqlite3VdbeAddOp1(v, OP_IsNull, 2); VdbeCoverage(v);\n      sqlite3VdbeAddOp4(v, OP_String8, 0, 3, 0,\n         sqlite3MPrintf(db, \"*** in database %s ***\\n\", db->aDb[i].zDbSName),\n         P4_DYNAMIC);\n      sqlite3VdbeAddOp3(v, OP_Concat, 2, 3, 3);\n      integrityCheckResultRow(v);\n      sqlite3VdbeJumpHere(v, addr);\n\n      /* Make sure all the indices are constructed correctly.\n      */\n      for(x=sqliteHashFirst(pTbls); x; x=sqliteHashNext(x)){\n        Table *pTab = sqliteHashData(x);\n        Index *pIdx, *pPk;\n        Index *pPrior = 0;\n        int loopTop;\n        int iDataCur, iIdxCur;\n        int r1 = -1;\n\n        if( pTab->tnum<1 ) continue;  /* Skip VIEWs or VIRTUAL TABLEs */\n        pPk = HasRowid(pTab) ? 0 : sqlite3PrimaryKeyIndex(pTab);\n        sqlite3OpenTableAndIndices(pParse, pTab, OP_OpenRead, 0,\n                                   1, 0, &iDataCur, &iIdxCur);\n        /* reg[7] counts the number of entries in the table.\n        ** reg[8+i] counts the number of entries in the i-th index \n        */\n        sqlite3VdbeAddOp2(v, OP_Integer, 0, 7);\n        for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){\n          sqlite3VdbeAddOp2(v, OP_Integer, 0, 8+j); /* index entries counter */\n        }\n        assert( pParse->nMem>=8+j );\n        assert( sqlite3NoTempsInRange(pParse,1,7+j) );\n        sqlite3VdbeAddOp2(v, OP_Rewind, iDataCur, 0); VdbeCoverage(v);\n        loopTop = sqlite3VdbeAddOp2(v, OP_AddImm, 7, 1);\n        if( !isQuick ){\n          /* Sanity check on record header decoding */\n          sqlite3VdbeAddOp3(v, OP_Column, iDataCur, pTab->nNVCol-1,3);\n          sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);\n        }\n        /* Verify that all NOT NULL columns really are NOT NULL */\n        for(j=0; j<pTab->nCol; j++){\n          char *zErr;\n          int jmp2;\n          if( j==pTab->iPKey ) continue;\n          if( pTab->aCol[j].notNull==0 ) continue;\n          sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);\n          sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);\n          jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);\n          zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,\n                              pTab->aCol[j].zName);\n          sqlite3VdbeAddOp4(v, OP_String8, 0, 3, 0, zErr, P4_DYNAMIC);\n          integrityCheckResultRow(v);\n          sqlite3VdbeJumpHere(v, jmp2);\n        }\n        /* Verify CHECK constraints */\n        if( pTab->pCheck && (db->flags & SQLITE_IgnoreChecks)==0 ){\n          ExprList *pCheck = sqlite3ExprListDup(db, pTab->pCheck, 0);\n          if( db->mallocFailed==0 ){\n            int addrCkFault = sqlite3VdbeMakeLabel(pParse);\n            int addrCkOk = sqlite3VdbeMakeLabel(pParse);\n            char *zErr;\n            int k;\n            pParse->iSelfTab = iDataCur + 1;\n            for(k=pCheck->nExpr-1; k>0; k--){\n              sqlite3ExprIfFalse(pParse, pCheck->a[k].pExpr, addrCkFault, 0);\n            }\n            sqlite3ExprIfTrue(pParse, pCheck->a[0].pExpr, addrCkOk, \n                SQLITE_JUMPIFNULL);\n            sqlite3VdbeResolveLabel(v, addrCkFault);\n            pParse->iSelfTab = 0;\n            zErr = sqlite3MPrintf(db, \"CHECK constraint failed in %s\",\n                pTab->zName);\n            sqlite3VdbeAddOp4(v, OP_String8, 0, 3, 0, zErr, P4_DYNAMIC);\n            integrityCheckResultRow(v);\n            sqlite3VdbeResolveLabel(v, addrCkOk);\n          }\n          sqlite3ExprListDelete(db, pCheck);\n        }\n        if( !isQuick ){ /* Omit the remaining tests for quick_check */\n          /* Validate index entries for the current row */\n          for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){\n            int jmp2, jmp3, jmp4, jmp5;\n            int ckUniq = sqlite3VdbeMakeLabel(pParse);\n            if( pPk==pIdx ) continue;\n            r1 = sqlite3GenerateIndexKey(pParse, pIdx, iDataCur, 0, 0, &jmp3,\n                                         pPrior, r1);\n            pPrior = pIdx;\n            sqlite3VdbeAddOp2(v, OP_AddImm, 8+j, 1);/* increment entry count */\n            /* Verify that an index entry exists for the current table row */\n            jmp2 = sqlite3VdbeAddOp4Int(v, OP_Found, iIdxCur+j, ckUniq, r1,\n                                        pIdx->nColumn); VdbeCoverage(v);\n            sqlite3VdbeLoadString(v, 3, \"row \");\n            sqlite3VdbeAddOp3(v, OP_Concat, 7, 3, 3);\n            sqlite3VdbeLoadString(v, 4, \" missing from index \");\n            sqlite3VdbeAddOp3(v, OP_Concat, 4, 3, 3);\n            jmp5 = sqlite3VdbeLoadString(v, 4, pIdx->zName);\n            sqlite3VdbeAddOp3(v, OP_Concat, 4, 3, 3);\n            jmp4 = integrityCheckResultRow(v);\n            sqlite3VdbeJumpHere(v, jmp2);\n            /* For UNIQUE indexes, verify that only one entry exists with the\n            ** current key.  The entry is unique if (1) any column is NULL\n            ** or (2) the next entry has a different key */\n            if( IsUniqueIndex(pIdx) ){\n              int uniqOk = sqlite3VdbeMakeLabel(pParse);\n              int jmp6;\n              int kk;\n              for(kk=0; kk<pIdx->nKeyCol; kk++){\n                int iCol = pIdx->aiColumn[kk];\n                assert( iCol!=XN_ROWID && iCol<pTab->nCol );\n                if( iCol>=0 && pTab->aCol[iCol].notNull ) continue;\n                sqlite3VdbeAddOp2(v, OP_IsNull, r1+kk, uniqOk);\n                VdbeCoverage(v);\n              }\n              jmp6 = sqlite3VdbeAddOp1(v, OP_Next, iIdxCur+j); VdbeCoverage(v);\n              sqlite3VdbeGoto(v, uniqOk);\n              sqlite3VdbeJumpHere(v, jmp6);\n              sqlite3VdbeAddOp4Int(v, OP_IdxGT, iIdxCur+j, uniqOk, r1,\n                                   pIdx->nKeyCol); VdbeCoverage(v);\n              sqlite3VdbeLoadString(v, 3, \"non-unique entry in index \");\n              sqlite3VdbeGoto(v, jmp5);\n              sqlite3VdbeResolveLabel(v, uniqOk);\n            }\n            sqlite3VdbeJumpHere(v, jmp4);\n            sqlite3ResolvePartIdxLabel(pParse, jmp3);\n          }\n        }\n        sqlite3VdbeAddOp2(v, OP_Next, iDataCur, loopTop); VdbeCoverage(v);\n        sqlite3VdbeJumpHere(v, loopTop-1);\n#ifndef SQLITE_OMIT_BTREECOUNT\n        if( !isQuick ){\n          sqlite3VdbeLoadString(v, 2, \"wrong # of entries in index \");\n          for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){\n            if( pPk==pIdx ) continue;\n            sqlite3VdbeAddOp2(v, OP_Count, iIdxCur+j, 3);\n            addr = sqlite3VdbeAddOp3(v, OP_Eq, 8+j, 0, 3); VdbeCoverage(v);\n            sqlite3VdbeChangeP5(v, SQLITE_NOTNULL);\n            sqlite3VdbeLoadString(v, 4, pIdx->zName);\n            sqlite3VdbeAddOp3(v, OP_Concat, 4, 2, 3);\n            integrityCheckResultRow(v);\n            sqlite3VdbeJumpHere(v, addr);\n          }\n        }\n#endif /* SQLITE_OMIT_BTREECOUNT */\n      } \n    }\n    {\n      static const int iLn = VDBE_OFFSET_LINENO(2);\n      static const VdbeOpList endCode[] = {\n        { OP_AddImm,      1, 0,        0},    /* 0 */\n        { OP_IfNotZero,   1, 4,        0},    /* 1 */\n        { OP_String8,     0, 3,        0},    /* 2 */\n        { OP_ResultRow,   3, 1,        0},    /* 3 */\n        { OP_Halt,        0, 0,        0},    /* 4 */\n        { OP_String8,     0, 3,        0},    /* 5 */\n        { OP_Goto,        0, 3,        0},    /* 6 */\n      };\n      VdbeOp *aOp;\n\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(endCode), endCode, iLn);\n      if( aOp ){\n        aOp[0].p2 = 1-mxErr;\n        aOp[2].p4type = P4_STATIC;\n        aOp[2].p4.z = \"ok\";\n        aOp[5].p4type = P4_STATIC;\n        aOp[5].p4.z = (char*)sqlite3ErrStr(SQLITE_CORRUPT);\n      }\n      sqlite3VdbeChangeP3(v, 0, sqlite3VdbeCurrentAddr(v)-2);\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_INTEGRITY_CHECK */\n\n#ifndef SQLITE_OMIT_UTF16\n  /*\n  **   PRAGMA encoding\n  **   PRAGMA encoding = \"utf-8\"|\"utf-16\"|\"utf-16le\"|\"utf-16be\"\n  **\n  ** In its first form, this pragma returns the encoding of the main\n  ** database. If the database is not initialized, it is initialized now.\n  **\n  ** The second form of this pragma is a no-op if the main database file\n  ** has not already been initialized. In this case it sets the default\n  ** encoding that will be used for the main database file if a new file\n  ** is created. If an existing main database file is opened, then the\n  ** default text encoding for the existing database is used.\n  ** \n  ** In all cases new databases created using the ATTACH command are\n  ** created to use the same default text encoding as the main database. If\n  ** the main database has not been initialized and/or created when ATTACH\n  ** is executed, this is done before the ATTACH operation.\n  **\n  ** In the second form this pragma sets the text encoding to be used in\n  ** new database files created using this database handle. It is only\n  ** useful if invoked immediately after the main database i\n  */\n  case PragTyp_ENCODING: {\n    static const struct EncName {\n      char *zName;\n      u8 enc;\n    } encnames[] = {\n      { \"UTF8\",     SQLITE_UTF8        },\n      { \"UTF-8\",    SQLITE_UTF8        },  /* Must be element [1] */\n      { \"UTF-16le\", SQLITE_UTF16LE     },  /* Must be element [2] */\n      { \"UTF-16be\", SQLITE_UTF16BE     },  /* Must be element [3] */\n      { \"UTF16le\",  SQLITE_UTF16LE     },\n      { \"UTF16be\",  SQLITE_UTF16BE     },\n      { \"UTF-16\",   0                  }, /* SQLITE_UTF16NATIVE */\n      { \"UTF16\",    0                  }, /* SQLITE_UTF16NATIVE */\n      { 0, 0 }\n    };\n    const struct EncName *pEnc;\n    if( !zRight ){    /* \"PRAGMA encoding\" */\n      if( sqlite3ReadSchema(pParse) ) goto pragma_out;\n      assert( encnames[SQLITE_UTF8].enc==SQLITE_UTF8 );\n      assert( encnames[SQLITE_UTF16LE].enc==SQLITE_UTF16LE );\n      assert( encnames[SQLITE_UTF16BE].enc==SQLITE_UTF16BE );\n      returnSingleText(v, encnames[ENC(pParse->db)].zName);\n    }else{                        /* \"PRAGMA encoding = XXX\" */\n      /* Only change the value of sqlite.enc if the database handle is not\n      ** initialized. If the main database exists, the new sqlite.enc value\n      ** will be overwritten when the schema is next loaded. If it does not\n      ** already exists, it will be created to use the new encoding value.\n      */\n      if( \n        !(DbHasProperty(db, 0, DB_SchemaLoaded)) || \n        DbHasProperty(db, 0, DB_Empty) \n      ){\n        for(pEnc=&encnames[0]; pEnc->zName; pEnc++){\n          if( 0==sqlite3StrICmp(zRight, pEnc->zName) ){\n            SCHEMA_ENC(db) = ENC(db) =\n                pEnc->enc ? pEnc->enc : SQLITE_UTF16NATIVE;\n            break;\n          }\n        }\n        if( !pEnc->zName ){\n          sqlite3ErrorMsg(pParse, \"unsupported encoding: %s\", zRight);\n        }\n      }\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_UTF16 */\n\n#ifndef SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS\n  /*\n  **   PRAGMA [schema.]schema_version\n  **   PRAGMA [schema.]schema_version = <integer>\n  **\n  **   PRAGMA [schema.]user_version\n  **   PRAGMA [schema.]user_version = <integer>\n  **\n  **   PRAGMA [schema.]freelist_count\n  **\n  **   PRAGMA [schema.]data_version\n  **\n  **   PRAGMA [schema.]application_id\n  **   PRAGMA [schema.]application_id = <integer>\n  **\n  ** The pragma's schema_version and user_version are used to set or get\n  ** the value of the schema-version and user-version, respectively. Both\n  ** the schema-version and the user-version are 32-bit signed integers\n  ** stored in the database header.\n  **\n  ** The schema-cookie is usually only manipulated internally by SQLite. It\n  ** is incremented by SQLite whenever the database schema is modified (by\n  ** creating or dropping a table or index). The schema version is used by\n  ** SQLite each time a query is executed to ensure that the internal cache\n  ** of the schema used when compiling the SQL query matches the schema of\n  ** the database against which the compiled query is actually executed.\n  ** Subverting this mechanism by using \"PRAGMA schema_version\" to modify\n  ** the schema-version is potentially dangerous and may lead to program\n  ** crashes or database corruption. Use with caution!\n  **\n  ** The user-version is not used internally by SQLite. It may be used by\n  ** applications for any purpose.\n  */\n  case PragTyp_HEADER_VALUE: {\n    int iCookie = pPragma->iArg;  /* Which cookie to read or write */\n    sqlite3VdbeUsesBtree(v, iDb);\n    if( zRight && (pPragma->mPragFlg & PragFlg_ReadOnly)==0 ){\n      /* Write the specified cookie value */\n      static const VdbeOpList setCookie[] = {\n        { OP_Transaction,    0,  1,  0},    /* 0 */\n        { OP_SetCookie,      0,  0,  0},    /* 1 */\n      };\n      VdbeOp *aOp;\n      sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(setCookie));\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(setCookie), setCookie, 0);\n      if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n      aOp[0].p1 = iDb;\n      aOp[1].p1 = iDb;\n      aOp[1].p2 = iCookie;\n      aOp[1].p3 = sqlite3Atoi(zRight);\n    }else{\n      /* Read the specified cookie value */\n      static const VdbeOpList readCookie[] = {\n        { OP_Transaction,     0,  0,  0},    /* 0 */\n        { OP_ReadCookie,      0,  1,  0},    /* 1 */\n        { OP_ResultRow,       1,  1,  0}\n      };\n      VdbeOp *aOp;\n      sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(readCookie));\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(readCookie),readCookie,0);\n      if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n      aOp[0].p1 = iDb;\n      aOp[1].p1 = iDb;\n      aOp[1].p3 = iCookie;\n      sqlite3VdbeReusable(v);\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS */\n\n#ifndef SQLITE_OMIT_COMPILEOPTION_DIAGS\n  /*\n  **   PRAGMA compile_options\n  **\n  ** Return the names of all compile-time options used in this build,\n  ** one option per row.\n  */\n  case PragTyp_COMPILE_OPTIONS: {\n    int i = 0;\n    const char *zOpt;\n    pParse->nMem = 1;\n    while( (zOpt = sqlite3_compileoption_get(i++))!=0 ){\n      sqlite3VdbeLoadString(v, 1, zOpt);\n      sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n    }\n    sqlite3VdbeReusable(v);\n  }\n  break;\n#endif /* SQLITE_OMIT_COMPILEOPTION_DIAGS */\n\n#ifndef SQLITE_OMIT_WAL\n  /*\n  **   PRAGMA [schema.]wal_checkpoint = passive|full|restart|truncate\n  **\n  ** Checkpoint the database.\n  */\n  case PragTyp_WAL_CHECKPOINT: {\n    int iBt = (pId2->z?iDb:SQLITE_MAX_ATTACHED);\n    int eMode = SQLITE_CHECKPOINT_PASSIVE;\n    if( zRight ){\n      if( sqlite3StrICmp(zRight, \"full\")==0 ){\n        eMode = SQLITE_CHECKPOINT_FULL;\n      }else if( sqlite3StrICmp(zRight, \"restart\")==0 ){\n        eMode = SQLITE_CHECKPOINT_RESTART;\n      }else if( sqlite3StrICmp(zRight, \"truncate\")==0 ){\n        eMode = SQLITE_CHECKPOINT_TRUNCATE;\n      }\n    }\n    pParse->nMem = 3;\n    sqlite3VdbeAddOp3(v, OP_Checkpoint, iBt, eMode, 1);\n    sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 3);\n  }\n  break;\n\n  /*\n  **   PRAGMA wal_autocheckpoint\n  **   PRAGMA wal_autocheckpoint = N\n  **\n  ** Configure a database connection to automatically checkpoint a database\n  ** after accumulating N frames in the log. Or query for the current value\n  ** of N.\n  */\n  case PragTyp_WAL_AUTOCHECKPOINT: {\n    if( zRight ){\n      sqlite3_wal_autocheckpoint(db, sqlite3Atoi(zRight));\n    }\n    returnSingleInt(v, \n       db->xWalCallback==sqlite3WalDefaultHook ? \n           SQLITE_PTR_TO_INT(db->pWalArg) : 0);\n  }\n  break;\n#endif\n\n  /*\n  **  PRAGMA shrink_memory\n  **\n  ** IMPLEMENTATION-OF: R-23445-46109 This pragma causes the database\n  ** connection on which it is invoked to free up as much memory as it\n  ** can, by calling sqlite3_db_release_memory().\n  */\n  case PragTyp_SHRINK_MEMORY: {\n    sqlite3_db_release_memory(db);\n    break;\n  }\n\n  /*\n  **  PRAGMA optimize\n  **  PRAGMA optimize(MASK)\n  **  PRAGMA schema.optimize\n  **  PRAGMA schema.optimize(MASK)\n  **\n  ** Attempt to optimize the database.  All schemas are optimized in the first\n  ** two forms, and only the specified schema is optimized in the latter two.\n  **\n  ** The details of optimizations performed by this pragma are expected\n  ** to change and improve over time.  Applications should anticipate that\n  ** this pragma will perform new optimizations in future releases.\n  **\n  ** The optional argument is a bitmask of optimizations to perform:\n  **\n  **    0x0001    Debugging mode.  Do not actually perform any optimizations\n  **              but instead return one line of text for each optimization\n  **              that would have been done.  Off by default.\n  **\n  **    0x0002    Run ANALYZE on tables that might benefit.  On by default.\n  **              See below for additional information.\n  **\n  **    0x0004    (Not yet implemented) Record usage and performance \n  **              information from the current session in the\n  **              database file so that it will be available to \"optimize\"\n  **              pragmas run by future database connections.\n  **\n  **    0x0008    (Not yet implemented) Create indexes that might have\n  **              been helpful to recent queries\n  **\n  ** The default MASK is and always shall be 0xfffe.  0xfffe means perform all\n  ** of the optimizations listed above except Debug Mode, including new\n  ** optimizations that have not yet been invented.  If new optimizations are\n  ** ever added that should be off by default, those off-by-default \n  ** optimizations will have bitmasks of 0x10000 or larger.\n  **\n  ** DETERMINATION OF WHEN TO RUN ANALYZE\n  **\n  ** In the current implementation, a table is analyzed if only if all of\n  ** the following are true:\n  **\n  ** (1) MASK bit 0x02 is set.\n  **\n  ** (2) The query planner used sqlite_stat1-style statistics for one or\n  **     more indexes of the table at some point during the lifetime of\n  **     the current connection.\n  **\n  ** (3) One or more indexes of the table are currently unanalyzed OR\n  **     the number of rows in the table has increased by 25 times or more\n  **     since the last time ANALYZE was run.\n  **\n  ** The rules for when tables are analyzed are likely to change in\n  ** future releases.\n  */\n  case PragTyp_OPTIMIZE: {\n    int iDbLast;           /* Loop termination point for the schema loop */\n    int iTabCur;           /* Cursor for a table whose size needs checking */\n    HashElem *k;           /* Loop over tables of a schema */\n    Schema *pSchema;       /* The current schema */\n    Table *pTab;           /* A table in the schema */\n    Index *pIdx;           /* An index of the table */\n    LogEst szThreshold;    /* Size threshold above which reanalysis is needd */\n    char *zSubSql;         /* SQL statement for the OP_SqlExec opcode */\n    u32 opMask;            /* Mask of operations to perform */\n\n    if( zRight ){\n      opMask = (u32)sqlite3Atoi(zRight);\n      if( (opMask & 0x02)==0 ) break;\n    }else{\n      opMask = 0xfffe;\n    }\n    iTabCur = pParse->nTab++;\n    for(iDbLast = zDb?iDb:db->nDb-1; iDb<=iDbLast; iDb++){\n      if( iDb==1 ) continue;\n      sqlite3CodeVerifySchema(pParse, iDb);\n      pSchema = db->aDb[iDb].pSchema;\n      for(k=sqliteHashFirst(&pSchema->tblHash); k; k=sqliteHashNext(k)){\n        pTab = (Table*)sqliteHashData(k);\n\n        /* If table pTab has not been used in a way that would benefit from\n        ** having analysis statistics during the current session, then skip it.\n        ** This also has the effect of skipping virtual tables and views */\n        if( (pTab->tabFlags & TF_StatsUsed)==0 ) continue;\n\n        /* Reanalyze if the table is 25 times larger than the last analysis */\n        szThreshold = pTab->nRowLogEst + 46; assert( sqlite3LogEst(25)==46 );\n        for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){\n          if( !pIdx->hasStat1 ){\n            szThreshold = 0; /* Always analyze if any index lacks statistics */\n            break;\n          }\n        }\n        if( szThreshold ){\n          sqlite3OpenTable(pParse, iTabCur, iDb, pTab, OP_OpenRead);\n          sqlite3VdbeAddOp3(v, OP_IfSmaller, iTabCur, \n                         sqlite3VdbeCurrentAddr(v)+2+(opMask&1), szThreshold);\n          VdbeCoverage(v);\n        }\n        zSubSql = sqlite3MPrintf(db, \"ANALYZE \\\"%w\\\".\\\"%w\\\"\",\n                                 db->aDb[iDb].zDbSName, pTab->zName);\n        if( opMask & 0x01 ){\n          int r1 = sqlite3GetTempReg(pParse);\n          sqlite3VdbeAddOp4(v, OP_String8, 0, r1, 0, zSubSql, P4_DYNAMIC);\n          sqlite3VdbeAddOp2(v, OP_ResultRow, r1, 1);\n        }else{\n          sqlite3VdbeAddOp4(v, OP_SqlExec, 0, 0, 0, zSubSql, P4_DYNAMIC);\n        }\n      }\n    }\n    sqlite3VdbeAddOp0(v, OP_Expire);\n    break;\n  }\n\n  /*\n  **   PRAGMA busy_timeout\n  **   PRAGMA busy_timeout = N\n  **\n  ** Call sqlite3_busy_timeout(db, N).  Return the current timeout value\n  ** if one is set.  If no busy handler or a different busy handler is set\n  ** then 0 is returned.  Setting the busy_timeout to 0 or negative\n  ** disables the timeout.\n  */\n  /*case PragTyp_BUSY_TIMEOUT*/ default: {\n    assert( pPragma->ePragTyp==PragTyp_BUSY_TIMEOUT );\n    if( zRight ){\n      sqlite3_busy_timeout(db, sqlite3Atoi(zRight));\n    }\n    returnSingleInt(v, db->busyTimeout);\n    break;\n  }\n\n  /*\n  **   PRAGMA soft_heap_limit\n  **   PRAGMA soft_heap_limit = N\n  **\n  ** IMPLEMENTATION-OF: R-26343-45930 This pragma invokes the\n  ** sqlite3_soft_heap_limit64() interface with the argument N, if N is\n  ** specified and is a non-negative integer.\n  ** IMPLEMENTATION-OF: R-64451-07163 The soft_heap_limit pragma always\n  ** returns the same integer that would be returned by the\n  ** sqlite3_soft_heap_limit64(-1) C-language function.\n  */\n  case PragTyp_SOFT_HEAP_LIMIT: {\n    sqlite3_int64 N;\n    if( zRight && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK ){\n      sqlite3_soft_heap_limit64(N);\n    }\n    returnSingleInt(v, sqlite3_soft_heap_limit64(-1));\n    break;\n  }\n\n  /*\n  **   PRAGMA hard_heap_limit\n  **   PRAGMA hard_heap_limit = N\n  **\n  ** Invoke sqlite3_hard_heap_limit64() to query or set the hard heap\n  ** limit.  The hard heap limit can be activated or lowered by this\n  ** pragma, but not raised or deactivated.  Only the\n  ** sqlite3_hard_heap_limit64() C-language API can raise or deactivate\n  ** the hard heap limit.  This allows an application to set a heap limit\n  ** constraint that cannot be relaxed by an untrusted SQL script.\n  */\n  case PragTyp_HARD_HEAP_LIMIT: {\n    sqlite3_int64 N;\n    if( zRight && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK ){\n      sqlite3_int64 iPrior = sqlite3_hard_heap_limit64(-1);\n      if( N>0 && (iPrior==0 || iPrior>N) ) sqlite3_hard_heap_limit64(N);\n    }\n    returnSingleInt(v, sqlite3_hard_heap_limit64(-1));\n    break;\n  }\n\n  /*\n  **   PRAGMA threads\n  **   PRAGMA threads = N\n  **\n  ** Configure the maximum number of worker threads.  Return the new\n  ** maximum, which might be less than requested.\n  */\n  case PragTyp_THREADS: {\n    sqlite3_int64 N;\n    if( zRight\n     && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK\n     && N>=0\n    ){\n      sqlite3_limit(db, SQLITE_LIMIT_WORKER_THREADS, (int)(N&0x7fffffff));\n    }\n    returnSingleInt(v, sqlite3_limit(db, SQLITE_LIMIT_WORKER_THREADS, -1));\n    break;\n  }\n\n#if defined(SQLITE_DEBUG) || defined(SQLITE_TEST)\n  /*\n  ** Report the current state of file logs for all databases\n  */\n  case PragTyp_LOCK_STATUS: {\n    static const char *const azLockName[] = {\n      \"unlocked\", \"shared\", \"reserved\", \"pending\", \"exclusive\"\n    };\n    int i;\n    pParse->nMem = 2;\n    for(i=0; i<db->nDb; i++){\n      Btree *pBt;\n      const char *zState = \"unknown\";\n      int j;\n      if( db->aDb[i].zDbSName==0 ) continue;\n      pBt = db->aDb[i].pBt;\n      if( pBt==0 || sqlite3BtreePager(pBt)==0 ){\n        zState = \"closed\";\n      }else if( sqlite3_file_control(db, i ? db->aDb[i].zDbSName : 0, \n                                     SQLITE_FCNTL_LOCKSTATE, &j)==SQLITE_OK ){\n         zState = azLockName[j];\n      }\n      sqlite3VdbeMultiLoad(v, 1, \"ss\", db->aDb[i].zDbSName, zState);\n    }\n    break;\n  }\n#endif\n\n#ifdef SQLITE_HAS_CODEC\n  /* Pragma        iArg\n  ** ----------   ------\n  **  key           0\n  **  rekey         1\n  **  hexkey        2\n  **  hexrekey      3\n  **  textkey       4\n  **  textrekey     5\n  */\n  case PragTyp_KEY: {\n    if( zRight ){\n      char zBuf[40];\n      const char *zKey = zRight;\n      int n;\n      if( pPragma->iArg==2 || pPragma->iArg==3 ){\n        u8 iByte;\n        int i;\n        for(i=0, iByte=0; i<sizeof(zBuf)*2 && sqlite3Isxdigit(zRight[i]); i++){\n          iByte = (iByte<<4) + sqlite3HexToInt(zRight[i]);\n          if( (i&1)!=0 ) zBuf[i/2] = iByte;\n        }\n        zKey = zBuf;\n        n = i/2;\n      }else{\n        n = pPragma->iArg<4 ? sqlite3Strlen30(zRight) : -1;\n      }\n      if( (pPragma->iArg & 1)==0 ){\n        rc = sqlite3_key_v2(db, zDb, zKey, n);\n      }else{\n        rc = sqlite3_rekey_v2(db, zDb, zKey, n);\n      }\n      if( rc==SQLITE_OK && n!=0 ){\n        sqlite3VdbeSetNumCols(v, 1);\n        sqlite3VdbeSetColName(v, 0, COLNAME_NAME, \"ok\", SQLITE_STATIC);\n        returnSingleText(v, \"ok\");\n      }\n    }\n    break;\n  }\n#endif\n#if defined(SQLITE_HAS_CODEC) || defined(SQLITE_ENABLE_CEROD)\n  case PragTyp_ACTIVATE_EXTENSIONS: if( zRight ){\n#ifdef SQLITE_HAS_CODEC\n    if( sqlite3StrNICmp(zRight, \"see-\", 4)==0 ){\n      sqlite3_activate_see(&zRight[4]);\n    }\n#endif\n#ifdef SQLITE_ENABLE_CEROD\n    if( sqlite3StrNICmp(zRight, \"cerod-\", 6)==0 ){\n      sqlite3_activate_cerod(&zRight[6]);\n    }\n#endif\n  }\n  break;\n#endif\n\n  } /* End of the PRAGMA switch */\n\n  /* The following block is a no-op unless SQLITE_DEBUG is defined. Its only\n  ** purpose is to execute assert() statements to verify that if the\n  ** PragFlg_NoColumns1 flag is set and the caller specified an argument\n  ** to the PRAGMA, the implementation has not added any OP_ResultRow \n  ** instructions to the VM.  */\n  if( (pPragma->mPragFlg & PragFlg_NoColumns1) && zRight ){\n    sqlite3VdbeVerifyNoResultRow(v);\n  }\n\npragma_out:\n  sqlite3DbFree(db, zLeft);\n  sqlite3DbFree(db, zRight);\n}\n#ifndef SQLITE_OMIT_VIRTUALTABLE\n/*****************************************************************************\n** Implementation of an eponymous virtual table that runs a pragma.\n**\n*/\ntypedef struct PragmaVtab PragmaVtab;\ntypedef struct PragmaVtabCursor PragmaVtabCursor;\nstruct PragmaVtab {\n  sqlite3_vtab base;        /* Base class.  Must be first */\n  sqlite3 *db;              /* The database connection to which it belongs */\n  const PragmaName *pName;  /* Name of the pragma */\n  u8 nHidden;               /* Number of hidden columns */\n  u8 iHidden;               /* Index of the first hidden column */\n};\nstruct PragmaVtabCursor {\n  sqlite3_vtab_cursor base; /* Base class.  Must be first */\n  sqlite3_stmt *pPragma;    /* The pragma statement to run */\n  sqlite_int64 iRowid;      /* Current rowid */\n  char *azArg[2];           /* Value of the argument and schema */\n};\n\n/* \n** Pragma virtual table module xConnect method.\n*/\nstatic int pragmaVtabConnect(\n  sqlite3 *db,\n  void *pAux,\n  int argc, const char *const*argv,\n  sqlite3_vtab **ppVtab,\n  char **pzErr\n){\n  const PragmaName *pPragma = (const PragmaName*)pAux;\n  PragmaVtab *pTab = 0;\n  int rc;\n  int i, j;\n  char cSep = '(';\n  StrAccum acc;\n  char zBuf[200];\n\n  UNUSED_PARAMETER(argc);\n  UNUSED_PARAMETER(argv);\n  sqlite3StrAccumInit(&acc, 0, zBuf, sizeof(zBuf), 0);\n  sqlite3_str_appendall(&acc, \"CREATE TABLE x\");\n  for(i=0, j=pPragma->iPragCName; i<pPragma->nPragCName; i++, j++){\n    sqlite3_str_appendf(&acc, \"%c\\\"%s\\\"\", cSep, pragCName[j]);\n    cSep = ',';\n  }\n  if( i==0 ){\n    sqlite3_str_appendf(&acc, \"(\\\"%s\\\"\", pPragma->zName);\n    i++;\n  }\n  j = 0;\n  if( pPragma->mPragFlg & PragFlg_Result1 ){\n    sqlite3_str_appendall(&acc, \",arg HIDDEN\");\n    j++;\n  }\n  if( pPragma->mPragFlg & (PragFlg_SchemaOpt|PragFlg_SchemaReq) ){\n    sqlite3_str_appendall(&acc, \",schema HIDDEN\");\n    j++;\n  }\n  sqlite3_str_append(&acc, \")\", 1);\n  sqlite3StrAccumFinish(&acc);\n  assert( strlen(zBuf) < sizeof(zBuf)-1 );\n  rc = sqlite3_declare_vtab(db, zBuf);\n  if( rc==SQLITE_OK ){\n    pTab = (PragmaVtab*)sqlite3_malloc(sizeof(PragmaVtab));\n    if( pTab==0 ){\n      rc = SQLITE_NOMEM;\n    }else{\n      memset(pTab, 0, sizeof(PragmaVtab));\n      pTab->pName = pPragma;\n      pTab->db = db;\n      pTab->iHidden = i;\n      pTab->nHidden = j;\n    }\n  }else{\n    *pzErr = sqlite3_mprintf(\"%s\", sqlite3_errmsg(db));\n  }\n\n  *ppVtab = (sqlite3_vtab*)pTab;\n  return rc;\n}\n\n/* \n** Pragma virtual table module xDisconnect method.\n*/\nstatic int pragmaVtabDisconnect(sqlite3_vtab *pVtab){\n  PragmaVtab *pTab = (PragmaVtab*)pVtab;\n  sqlite3_free(pTab);\n  return SQLITE_OK;\n}\n\n/* Figure out the best index to use to search a pragma virtual table.\n**\n** There are not really any index choices.  But we want to encourage the\n** query planner to give == constraints on as many hidden parameters as\n** possible, and especially on the first hidden parameter.  So return a\n** high cost if hidden parameters are unconstrained.\n*/\nstatic int pragmaVtabBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){\n  PragmaVtab *pTab = (PragmaVtab*)tab;\n  const struct sqlite3_index_constraint *pConstraint;\n  int i, j;\n  int seen[2];\n\n  pIdxInfo->estimatedCost = (double)1;\n  if( pTab->nHidden==0 ){ return SQLITE_OK; }\n  pConstraint = pIdxInfo->aConstraint;\n  seen[0] = 0;\n  seen[1] = 0;\n  for(i=0; i<pIdxInfo->nConstraint; i++, pConstraint++){\n    if( pConstraint->usable==0 ) continue;\n    if( pConstraint->op!=SQLITE_INDEX_CONSTRAINT_EQ ) continue;\n    if( pConstraint->iColumn < pTab->iHidden ) continue;\n    j = pConstraint->iColumn - pTab->iHidden;\n    assert( j < 2 );\n    seen[j] = i+1;\n  }\n  if( seen[0]==0 ){\n    pIdxInfo->estimatedCost = (double)2147483647;\n    pIdxInfo->estimatedRows = 2147483647;\n    return SQLITE_OK;\n  }\n  j = seen[0]-1;\n  pIdxInfo->aConstraintUsage[j].argvIndex = 1;\n  pIdxInfo->aConstraintUsage[j].omit = 1;\n  if( seen[1]==0 ) return SQLITE_OK;\n  pIdxInfo->estimatedCost = (double)20;\n  pIdxInfo->estimatedRows = 20;\n  j = seen[1]-1;\n  pIdxInfo->aConstraintUsage[j].argvIndex = 2;\n  pIdxInfo->aConstraintUsage[j].omit = 1;\n  return SQLITE_OK;\n}\n\n/* Create a new cursor for the pragma virtual table */\nstatic int pragmaVtabOpen(sqlite3_vtab *pVtab, sqlite3_vtab_cursor **ppCursor){\n  PragmaVtabCursor *pCsr;\n  pCsr = (PragmaVtabCursor*)sqlite3_malloc(sizeof(*pCsr));\n  if( pCsr==0 ) return SQLITE_NOMEM;\n  memset(pCsr, 0, sizeof(PragmaVtabCursor));\n  pCsr->base.pVtab = pVtab;\n  *ppCursor = &pCsr->base;\n  return SQLITE_OK;\n}\n\n/* Clear all content from pragma virtual table cursor. */\nstatic void pragmaVtabCursorClear(PragmaVtabCursor *pCsr){\n  int i;\n  sqlite3_finalize(pCsr->pPragma);\n  pCsr->pPragma = 0;\n  for(i=0; i<ArraySize(pCsr->azArg); i++){\n    sqlite3_free(pCsr->azArg[i]);\n    pCsr->azArg[i] = 0;\n  }\n}\n\n/* Close a pragma virtual table cursor */\nstatic int pragmaVtabClose(sqlite3_vtab_cursor *cur){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)cur;\n  pragmaVtabCursorClear(pCsr);\n  sqlite3_free(pCsr);\n  return SQLITE_OK;\n}\n\n/* Advance the pragma virtual table cursor to the next row */\nstatic int pragmaVtabNext(sqlite3_vtab_cursor *pVtabCursor){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  int rc = SQLITE_OK;\n\n  /* Increment the xRowid value */\n  pCsr->iRowid++;\n  assert( pCsr->pPragma );\n  if( SQLITE_ROW!=sqlite3_step(pCsr->pPragma) ){\n    rc = sqlite3_finalize(pCsr->pPragma);\n    pCsr->pPragma = 0;\n    pragmaVtabCursorClear(pCsr);\n  }\n  return rc;\n}\n\n/* \n** Pragma virtual table module xFilter method.\n*/\nstatic int pragmaVtabFilter(\n  sqlite3_vtab_cursor *pVtabCursor, \n  int idxNum, const char *idxStr,\n  int argc, sqlite3_value **argv\n){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  PragmaVtab *pTab = (PragmaVtab*)(pVtabCursor->pVtab);\n  int rc;\n  int i, j;\n  StrAccum acc;\n  char *zSql;\n\n  UNUSED_PARAMETER(idxNum);\n  UNUSED_PARAMETER(idxStr);\n  pragmaVtabCursorClear(pCsr);\n  j = (pTab->pName->mPragFlg & PragFlg_Result1)!=0 ? 0 : 1;\n  for(i=0; i<argc; i++, j++){\n    const char *zText = (const char*)sqlite3_value_text(argv[i]);\n    assert( j<ArraySize(pCsr->azArg) );\n    assert( pCsr->azArg[j]==0 );\n    if( zText ){\n      pCsr->azArg[j] = sqlite3_mprintf(\"%s\", zText);\n      if( pCsr->azArg[j]==0 ){\n        return SQLITE_NOMEM;\n      }\n    }\n  }\n  sqlite3StrAccumInit(&acc, 0, 0, 0, pTab->db->aLimit[SQLITE_LIMIT_SQL_LENGTH]);\n  sqlite3_str_appendall(&acc, \"PRAGMA \");\n  if( pCsr->azArg[1] ){\n    sqlite3_str_appendf(&acc, \"%Q.\", pCsr->azArg[1]);\n  }\n  sqlite3_str_appendall(&acc, pTab->pName->zName);\n  if( pCsr->azArg[0] ){\n    sqlite3_str_appendf(&acc, \"=%Q\", pCsr->azArg[0]);\n  }\n  zSql = sqlite3StrAccumFinish(&acc);\n  if( zSql==0 ) return SQLITE_NOMEM;\n  rc = sqlite3_prepare_v2(pTab->db, zSql, -1, &pCsr->pPragma, 0);\n  sqlite3_free(zSql);\n  if( rc!=SQLITE_OK ){\n    pTab->base.zErrMsg = sqlite3_mprintf(\"%s\", sqlite3_errmsg(pTab->db));\n    return rc;\n  }\n  return pragmaVtabNext(pVtabCursor);\n}\n\n/*\n** Pragma virtual table module xEof method.\n*/\nstatic int pragmaVtabEof(sqlite3_vtab_cursor *pVtabCursor){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  return (pCsr->pPragma==0);\n}\n\n/* The xColumn method simply returns the corresponding column from\n** the PRAGMA.  \n*/\nstatic int pragmaVtabColumn(\n  sqlite3_vtab_cursor *pVtabCursor, \n  sqlite3_context *ctx, \n  int i\n){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  PragmaVtab *pTab = (PragmaVtab*)(pVtabCursor->pVtab);\n  if( i<pTab->iHidden ){\n    sqlite3_result_value(ctx, sqlite3_column_value(pCsr->pPragma, i));\n  }else{\n    sqlite3_result_text(ctx, pCsr->azArg[i-pTab->iHidden],-1,SQLITE_TRANSIENT);\n  }\n  return SQLITE_OK;\n}\n\n/* \n** Pragma virtual table module xRowid method.\n*/\nstatic int pragmaVtabRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *p){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  *p = pCsr->iRowid;\n  return SQLITE_OK;\n}\n\n/* The pragma virtual table object */\nstatic const sqlite3_module pragmaVtabModule = {\n  0,                           /* iVersion */\n  0,                           /* xCreate - create a table */\n  pragmaVtabConnect,           /* xConnect - connect to an existing table */\n  pragmaVtabBestIndex,         /* xBestIndex - Determine search strategy */\n  pragmaVtabDisconnect,        /* xDisconnect - Disconnect from a table */\n  0,                           /* xDestroy - Drop a table */\n  pragmaVtabOpen,              /* xOpen - open a cursor */\n  pragmaVtabClose,             /* xClose - close a cursor */\n  pragmaVtabFilter,            /* xFilter - configure scan constraints */\n  pragmaVtabNext,              /* xNext - advance a cursor */\n  pragmaVtabEof,               /* xEof */\n  pragmaVtabColumn,            /* xColumn - read data */\n  pragmaVtabRowid,             /* xRowid - read data */\n  0,                           /* xUpdate - write data */\n  0,                           /* xBegin - begin transaction */\n  0,                           /* xSync - sync transaction */\n  0,                           /* xCommit - commit transaction */\n  0,                           /* xRollback - rollback transaction */\n  0,                           /* xFindFunction - function overloading */\n  0,                           /* xRename - rename the table */\n  0,                           /* xSavepoint */\n  0,                           /* xRelease */\n  0,                           /* xRollbackTo */\n  0                            /* xShadowName */\n};\n\n/*\n** Check to see if zTabName is really the name of a pragma.  If it is,\n** then register an eponymous virtual table for that pragma and return\n** a pointer to the Module object for the new virtual table.\n*/\nModule *sqlite3PragmaVtabRegister(sqlite3 *db, const char *zName){\n  const PragmaName *pName;\n  assert( sqlite3_strnicmp(zName, \"pragma_\", 7)==0 );\n  pName = pragmaLocate(zName+7);\n  if( pName==0 ) return 0;\n  if( (pName->mPragFlg & (PragFlg_Result0|PragFlg_Result1))==0 ) return 0;\n  assert( sqlite3HashFind(&db->aModule, zName)==0 );\n  return sqlite3VtabCreateModule(db, zName, &pragmaVtabModule, (void*)pName, 0);\n}\n\n#endif /* SQLITE_OMIT_VIRTUALTABLE */\n\n#endif /* SQLITE_OMIT_PRAGMA */\n", "# 2019-10-31\n#\n# The author disclaims copyright to this source code.  In place of\n# a legal notice, here is a blessing:\n#\n#    May you do good and not evil.\n#    May you find forgiveness for yourself and forgive others.\n#    May you share freely, never taking more than you give.\n#\n#***********************************************************************\n# \n# Test cases for generated columns.\n#\n\nset testdir [file dirname $argv0]\nsource $testdir/tester.tcl\n\n# ticket 830277d9db6c3ba1 on 2019-10-31\ndo_execsql_test gencol1-100 {\n  CREATE TABLE t0(c0 AS(TYPEOF(c1)), c1);\n  INSERT INTO t0(c1) VALUES(0);\n  CREATE TABLE t1(x AS (typeof(y)), y);\n  INSERT INTO t1 SELECT * FROM t0;\n  SELECT * FROM t1;\n} {integer 0}\n\nforeach {tn schema} { \n1 {\n   CREATE TABLE t1(\n     a INT,\n     b TEXT,\n     c ANY,\n     w INT GENERATED ALWAYS AS (a*10),\n     x TEXT AS (typeof(c)),\n     y TEXT AS (substr(b,a,a+2))\n   );\n  }\n2 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (a*10),\n     x TEXT AS (typeof(c)),\n     y TEXT AS (substr(b,a,a+2)),\n     a INT,\n     b TEXT,\n     c ANY\n   );\n  }\n3 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (a*10),\n     a INT,\n     x TEXT AS (typeof(c)) STORED,\n     b TEXT,\n     y TEXT AS (substr(b,a,a+2)),\n     c ANY\n   );\n  }\n4 {\n   CREATE TABLE t1(\n     a INTEGER PRIMARY KEY,\n     w INT GENERATED ALWAYS AS (a*10),\n     b TEXT,\n     x TEXT AS (typeof(c)),\n     y TEXT AS (substr(b,a,a+2)) STORED,\n     c ANY\n   );\n  }\n5 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (a*10),\n     a INT,\n     x TEXT AS (typeof(c)),\n     b TEXT,\n     y TEXT AS (substr(b,a,a+2)) STORED,\n     c ANY,\n     PRIMARY KEY(a,b)\n   ) WITHOUT ROWID;\n  }\n6 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (m*5),\n     m INT AS (a*2) STORED,\n     a INT,\n     x TEXT AS (typeof(c)),\n     b TEXT,\n     y TEXT AS (substr(b,m/2,m/2+2)) STORED,\n     c ANY,\n     PRIMARY KEY(a,b)\n   );\n  }\n7 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (m*5),\n     m INT AS (a*2) NOT NULL,\n     a INT,\n     x TEXT AS (typeof(c)) CHECK (x<>'blank'),\n     b TEXT,\n     y TEXT AS (substr(b,m/2,m/2+2)) STORED,\n     c ANY,\n     PRIMARY KEY(b,a)\n   ) WITHOUT ROWID;\n  }\n} {\n  catch {db close}\n  sqlite3 db :memory:\n  db eval $schema\n  do_execsql_test gencol1-2.$tn.100 {\n    INSERT INTO t1(a,b,c) VALUES(1,'abcdef',5.5),(3,'cantaloupe',NULL);\n    SELECT w, x, y, '|' FROM t1 ORDER BY a;\n  } {10 real abc | 30 null ntalo |}\n  do_execsql_test gencol1-2.$tn.101 {\n    SELECT w, x, y, '|' FROM t1 ORDER BY w;\n  } {10 real abc | 30 null ntalo |}\n  do_execsql_test gencol1-2.$tn.102 {\n    SELECT a FROM t1 WHERE w=30;\n  } {3}\n  do_execsql_test gencol1-2.$tn.103 {\n    SELECT a FROM t1 WHERE x='real';\n  } {1}\n  do_execsql_test gencol1-2.$tn.104 {\n    SELECT a FROM t1 WHERE y LIKE '%tal%' OR x='real' ORDER BY b;\n  } {1 3}\n  do_execsql_test gencol1-2.$tn.110 {\n    CREATE INDEX t1w ON t1(w);\n    SELECT a FROM t1 WHERE w=10;\n  } {1}\n  do_execsql_test gencol1-2.$tn.120 {\n    CREATE INDEX t1x ON t1(x) WHERE w BETWEEN 20 AND 40;\n    SELECT a FROM t1 WHERE x='null' AND w BETWEEN 20 AND 40;\n  } {3}\n  do_execsql_test gencol1-2.$tn.121 {\n    SELECT a FROM t1 WHERE x='real';\n  } {1}\n  do_execsql_test gencol1-2.$tn.130 {\n    VACUUM;\n    PRAGMA integrity_check;\n  } {ok}\n  do_execsql_test gencol1-2.$tn.140 {\n    UPDATE t1 SET a=a+100 WHERE w<20;\n    SELECT a, w, '|' FROM t1 ORDER BY w;\n  } {3 30 | 101 1010 |}\n  do_execsql_test gencol1-2.$tn.150 {\n    INSERT INTO t1 VALUES(4,'jambalaya','Chef John'),(15,87719874135,0);\n    SELECT w, x, y, '|' FROM t1 ORDER BY w;\n  } {30 null ntalo | 40 text balaya | 150 integer {} | 1010 real {} |}\n}\n\n# 2019-10-31 ticket b9befa4b83a660cc\ndb close\nsqlite3 db :memory:\ndo_execsql_test gencol1-3.100 {\n  PRAGMA foreign_keys = true;\n  CREATE TABLE t0(c0 PRIMARY KEY, c1, c2 AS (c0+c1-c3) REFERENCES t0, c3);\n  INSERT INTO t0 VALUES (0, 0, 0), (11, 5, 5);\n  UPDATE t0 SET c1 = c0, c3 = c0;\n  SELECT *, '|' FROM t0 ORDER BY +c0;\n} {0 0 0 0 | 11 11 11 11 |}\ndo_catchsql_test gencol1-3.110 {\n  UPDATE t0 SET c1 = c0, c3 = c0+1;\n} {1 {FOREIGN KEY constraint failed}}\n\n# 2019-11-01 ticket c28a01da72f8957c\ndb close\nsqlite3 db :memory:\ndo_execsql_test gencol1-4.100 {\n  CREATE TABLE t0 (\n    c0,\n    c1 a UNIQUE AS (1),\n    c2,\n    c3 REFERENCES t0(c1)\n  );\n  PRAGMA foreign_keys = true;\n  INSERT INTO t0(c0,c2,c3) VALUES(0,0,1);\n} {}\ndo_catchsql_test gencol1-4.110 {\n  REPLACE INTO t0(c0,c2,c3) VALUES(0,0,0),(0,0,0);\n} {1 {FOREIGN KEY constraint failed}}\n\n# 2019-11-01 Problem found while adding new foreign key test cases in TH3.\ndb close\nsqlite3 db :memory:\ndo_execsql_test gencol1-5.100 {\n  PRAGMA foreign_keys=ON;\n  CREATE TABLE t1(\n    gcb AS (b*1),\n    a INTEGER PRIMARY KEY,\n    gcc AS (c+0),\n    b UNIQUE,\n    gca AS (1*a+0),\n    c UNIQUE\n  ) WITHOUT ROWID;\n  INSERT INTO t1 VALUES(1,2,3);\n  INSERT INTO t1 VALUES(4,5,6);\n  INSERT INTO t1 VALUES(7,8,9);\n  CREATE TABLE t1a(\n    gcx AS (x+0) REFERENCES t1(a) ON DELETE CASCADE,\n    id,\n    x,\n    gcid AS (1*id)\n  );\n  INSERT INTO t1a VALUES(1, 1);\n  INSERT INTO t1a VALUES(2, 4);\n  INSERT INTO t1a VALUES(3, 7);\n  DELETE FROM t1 WHERE b=5;\n  SELECT id,x,'|' FROM t1a ORDER BY id;\n} {1 1 | 3 7 |}  \n\ndo_catchsql_test gencol1-6.10 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0(c0 NOT NULL AS(c1), c1);\n  REPLACE INTO t0(c1) VALUES(NULL);\n} {1 {NOT NULL constraint failed: t0.c0}}\n\n# 2019-11-06 ticket b13b7dce76e9352b34e7\ndo_execsql_test gencol1-7.10 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0 (c0 GENERATED ALWAYS AS (1), c1 UNIQUE, c2 UNIQUE);\n  INSERT INTO t0(c1) VALUES (1);\n  SELECT quote(0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1) FROM t0;\n} {NULL}\ndo_execsql_test gencol1-7.20 {\n  SELECT 99 FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1;  \n} {}\n\n# 2019-11-06 ticket 4fc08501f4e56692\ndo_execsql_test gencol1-8.10 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0(\n    c0 AS (('a', 9) < ('b', c1)),\n    c1 AS (1),\n    c2 CHECK (1 = c1)\n  );\n  INSERT INTO t0 VALUES (0),(99);\n  SELECT * FROM t0;\n} {1 1 0 1 1 99}\ndo_catchsql_test gencol1-8.20 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0(\n    c0,\n    c1 AS(c0 + c2),\n    c2 AS(c1) CHECK(c2)\n  );\n  UPDATE t0 SET c0 = NULL;\n} {1 {generated column loop on \"c2\"}}\n\n# 2019-11-21 Problems in the new generated column logic\n# reported by Yongheng Chen and Rui Zhong\ndo_execsql_test gencol1-9.10 {\n  PRAGMA foreign_keys=OFF;\n  DROP TABLE t1;\n  CREATE TABLE t1(aa , bb AS (17) UNIQUE);\n  INSERT INTO t1 VALUES(17);\n  CREATE TABLE t2(cc);\n  INSERT INTO t2 VALUES(41);\n  SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;\n} {41 17 17}\ndo_execsql_test gencol1-9.20 {\n  CREATE TABLE t3(aa INT PRIMARY KEY, bb UNIQUE AS(aa));\n  INSERT INTO t3 VALUES(1);\n  SELECT 100, * FROM t3;\n  DELETE FROM t3 WHERE (SELECT bb FROM t3);\n  SELECT 200, * FROM t3;\n} {100 1 1}\n\n# 2019-12-04 Generated column in a CREATE TABLE IF NOT EXISTS that\n# does already exist.\n#\nsqlite3 db :memory:\ndo_execsql_test gencol1-10.10 {\n  CREATE TABLE t1(aa,bb);\n  CREATE TABLE IF NOT EXISTS t1(aa, bb AS (aa+1));\n  PRAGMA integrity_check;\n} {ok}\n\n# 2019-12-06 Found by mrigger\n#\nsqlite3 db :memory:\ndo_execsql_test gencol1-11.10 {\n  PRAGMA foreign_keys = true;\n  CREATE TABLE t0(\n    c0,\n    c1 INTEGER PRIMARY KEY,\n    c2 BLOB UNIQUE DEFAULT x'00',\n    c3 BLOB GENERATED ALWAYS AS (1), \n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.20 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\ndo_execsql_test gencol1-11.30 {\n  DROP TABLE t0;\n  CREATE TABLE t0(\n    c0,\n    c1 INTEGER PRIMARY KEY,\n    c3 BLOB GENERATED ALWAYS AS (1), \n    c2 BLOB UNIQUE DEFAULT x'00',\n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.40 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\ndo_execsql_test gencol1-11.50 {\n  DROP TABLE t0;\n  CREATE TABLE t0(\n    c0,\n    c3 BLOB GENERATED ALWAYS AS (1), \n    c1 INTEGER PRIMARY KEY,\n    c2 BLOB UNIQUE DEFAULT x'00',\n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.60 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\ndo_execsql_test gencol1-11.70 {\n  DROP TABLE t0;\n  CREATE TABLE t0(\n    c3 BLOB GENERATED ALWAYS AS (1), \n    c0,\n    c1 INTEGER PRIMARY KEY,\n    c2 BLOB UNIQUE DEFAULT x'00',\n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.80 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\n\nfinish_test\n"], "fixing_code": ["C Fix\\sthe\\sNOT\\sNULL\\sverification\\slogic\\sin\\sPRAGMA\\sintegrity_check\\sso\\sthat\\sit\\nworks\\sfor\\sgenerated\\scolumns\\swhose\\svalue\\sis\\sthe\\sresult\\sof\\sa\\scomparison\\soperator.\\nTicket\\s[bd8c280671ba44a7]\nD 2019-12-09T15:52:07.194\nF .fossil-settings/empty-dirs dbb81e8fc0401ac46a1491ab34a7f2c7c0452f2f06b54ebb845d024ca8283ef1\nF .fossil-settings/ignore-glob 35175cdfcf539b2318cb04a9901442804be81cd677d8b889fcc9149c21f239ea\nF LICENSE.md df5091916dbb40e6e9686186587125e1b2ff51f022cc334e886c19a0e9982724\nF Makefile.in d3a862c9742f5a08230a3b295c0a47fd3067f19356dc39935280135f90474b04\nF Makefile.linux-gcc f609543700659711fbd230eced1f01353117621dccae7b9fb70daa64236c5241\nF Makefile.msc 0b0acbf34bb238170bdf1fd343a1fd37bc81c042ce029c1cc53fe15b5d4ed07b\nF README.md 1514a365ffca3c138e00c5cc839906108a01011a6b082bad19b09781e3aa498a\nF VERSION 081500f0aeaadc989d85aafbc717af45512018aebc73d89e5c2368fe62a600ff\nF aclocal.m4 a5c22d164aff7ed549d53a90fa56d56955281f50\nF art/sqlite370.eps aa97a671332b432a54e1d74ff5e8775be34200c2\nF art/sqlite370.ico af56c1d00fee7cd4753e8631ed60703ed0fc6e90\nF art/sqlite370.jpg d512473dae7e378a67e28ff96a34da7cb331def2\nF autoconf/INSTALL 83e4a25da9fd053c7b3665eaaaf7919707915903\nF autoconf/Makefile.am e14b629addaa1ce372b72043f28f40de2e32b7e211b6e0fc18dbb87989197e40\nF autoconf/Makefile.fallback 22fe523eb36dfce31e0f6349f782eb084e86a5620b2b0b4f84a2d6133f53f5ac\nF autoconf/Makefile.msc 492ea431c411378094593a5225b9a02645455a5d87a26d018b5461b723e52125\nF autoconf/README.first 6c4f34fe115ff55d4e8dbfa3cecf04a0188292f7\nF autoconf/README.txt 4f04b0819303aabaa35fff5f7b257fb0c1ef95f1\nF autoconf/configure.ac 308de24343e76ecfbe9a67f8fcd4c5216b790d230c5d9ce10210b7d5965d6192\nF autoconf/tea/Makefile.in b438a7020446c8a8156e8d97c8914a04833da6fd\nF autoconf/tea/README 3e9a3c060f29a44344ab50aec506f4db903fb873\nF autoconf/tea/aclocal.m4 52c47aac44ce0ddb1f918b6993e8beb8eee88f43\nF autoconf/tea/configure.ac 8aa16e3f0a5ca7959d4af198f46934ec187d395f\nF autoconf/tea/doc/sqlite3.n e1fe45d4f5286ee3d0ccc877aca2a0def488e9bb\nF autoconf/tea/license.terms 13bd403c9610fd2b76ece0ab50c4c5eda933d523\nF autoconf/tea/pkgIndex.tcl.in 3ef61715cf1c7bdcff56947ffadb26bc991ca39d\nF autoconf/tea/tclconfig/install-sh bdd5e293591621ae60d9824d86a4b1c5f22c3d00\nF autoconf/tea/tclconfig/tcl.m4 66ddf0a5d5e4b1d29bff472c0985fd7fa89d0fb5\nF autoconf/tea/win/makefile.vc f89d0184d0eee5f7e356ea407964dcd139939928\nF autoconf/tea/win/nmakehlp.c 247538ad8e8c508f33c03ec1fbd67d3a07ef6291\nF autoconf/tea/win/rules.vc c511f222b80064096b705dbeb97060ee1d6b6d63\nF config.guess 883205ddf25b46f10c181818bf42c09da9888884af96f79e1719264345053bd6\nF config.h.in 6376abec766e9a0785178b1823b5a587e9f1ccbc\nF config.sub c2d0260f17f3e4bc0b6808fccf1b291cb5e9126c14fc5890efc77b9fd0175559\nF configure fdc9f8d53360170679349d8f72fb2e5c79f511424891b7bb8a2f48de41c7a6ef x\nF configure.ac 3552d3aecade98a9d4b64bceb48ffb7726cbc85902efde956812942f060fbd0a\nF contrib/sqlitecon.tcl 210a913ad63f9f991070821e599d600bd913e0ad\nF doc/F2FS.txt c1d4a0ae9711cfe0e1d8b019d154f1c29e0d3abfe820787ba1e9ed7691160fcd\nF doc/lemon.html 24956ab2995e55fe171e55bdd04f22b553957dc8bb43501dbb9311e30187e0d3\nF doc/pager-invariants.txt 27fed9a70ddad2088750c4a2b493b63853da2710\nF doc/vfs-shm.txt e101f27ea02a8387ce46a05be2b1a902a021d37a\nF ext/README.md fd5f78013b0a2bc6f0067afb19e6ad040e89a10179b4f6f03eee58fac5f169bd\nF ext/async/README.txt e12275968f6fde133a80e04387d0e839b0c51f91\nF ext/async/sqlite3async.c 0f3070cc3f5ede78f2b9361fb3b629ce200d7d74\nF ext/async/sqlite3async.h f489b080af7e72aec0e1ee6f1d98ab6cf2e4dcef\nF ext/expert/README.md b321c2762bb93c18ea102d5a5f7753a4b8bac646cb392b3b437f633caf2020c3\nF ext/expert/expert.c d548d603a4cc9e61f446cc179c120c6713511c413f82a4a32b1e1e69d3f086a4\nF ext/expert/expert1.test e2afc53a27610e8251e44c7f961806607a5490ff204b3db342740d558e052662\nF ext/expert/sqlite3expert.c 3da865f2286433588260f41e796422c611bceaca3a0bbf9139a619cf7d062c19\nF ext/expert/sqlite3expert.h ca81efc2679a92373a13a3e76a6138d0310e32be53d6c3bfaedabd158ea8969b\nF ext/expert/test_expert.c d56c194b769bdc90cf829a14c9ecbc1edca9c850b837a4d0b13be14095c32a72\nF ext/fts1/README.txt 20ac73b006a70bcfd80069bdaf59214b6cf1db5e\nF ext/fts1/ft_hash.c 3927bd880e65329bdc6f506555b228b28924921b\nF ext/fts1/ft_hash.h 06df7bba40dadd19597aa400a875dbc2fed705ea\nF ext/fts1/fts1.c a39f7d21c2994d27c959ef9c3505c81542c81432\nF ext/fts1/fts1.h 6060b8f62c1d925ea8356cb1a6598073eb9159a6\nF ext/fts1/fts1_hash.c 3196cee866edbebb1c0521e21672e6d599965114\nF ext/fts1/fts1_hash.h e7f0d761353996a8175eda351104acfde23afcb0\nF ext/fts1/fts1_porter.c b1c7304b8988ba3f764a147cdd32043b4913ea7b\nF ext/fts1/fts1_tokenizer.h fdea722c38a9f82ed921642981234f666e47919c\nF ext/fts1/fts1_tokenizer1.c fd00d1fe4dc30dfc5c64cba695ce34f4af20d2fa\nF ext/fts1/fulltext.c 37698e1909584f6d8ea67d1485e3ad39dbf42d19\nF ext/fts1/fulltext.h 08525a47852d1d62a0be81d3fc3fe2d23b094efd\nF ext/fts1/simple_tokenizer.c bbfa4e3b2a26ef17d4edc6d98cd4a3f5396d998a\nF ext/fts1/tokenizer.h 0c53421b832366d20d720d21ea3e1f6e66a36ef9\nF ext/fts2/README.tokenizers 21e3684ea5a095b55d70f6878b4ce6af5932dfb7\nF ext/fts2/README.txt 8c18f41574404623b76917b9da66fcb0ab38328d\nF ext/fts2/fts2.c 72c816a9ae448049fbbe8f18a85698765fc7956c\nF ext/fts2/fts2.h da5f76c65163301d1068a971fd32f4119e3c95fa\nF ext/fts2/fts2_hash.c 011a1d32de45bb1b519a1fd0048e857d6a843558\nF ext/fts2/fts2_hash.h 1824b99dfd8d0225facbdb26a2c87289b2e7dcf8\nF ext/fts2/fts2_icu.c 51c5cd3c04954badd329fa738c95fcdb717b5188\nF ext/fts2/fts2_porter.c 2cd4a507bf3c3085fe66f59b0f2a325f65aaacf5\nF ext/fts2/fts2_tokenizer.c b529493d55e55497213c37e1f31680a77746be26\nF ext/fts2/fts2_tokenizer.h 27a1a99ca2d615cf7e142839b8d79e8751b4529e\nF ext/fts2/fts2_tokenizer1.c 07e223eecb483d448313b5f1553a4f299a7fb7a1\nF ext/fts2/mkfts2amal.tcl 974d5d438cb3f7c4a652639262f82418c1e4cff0\nF ext/fts3/README.content fdc666a70d5257a64fee209f97cf89e0e6e32b51\nF ext/fts3/README.syntax a19711dc5458c20734b8e485e75fb1981ec2427a\nF ext/fts3/README.tokenizers b92bdeb8b46503f0dd301d364efc5ef59ef9fa8e2758b8e742f39fa93a2e422d\nF ext/fts3/README.txt 8c18f41574404623b76917b9da66fcb0ab38328d\nF ext/fts3/fts3.c 9a69143c94195d9342dd4a704021009fb9e45dff9bff775dae024d47e363bab8\nF ext/fts3/fts3.h 3a10a0af180d502cecc50df77b1b22df142817fe\nF ext/fts3/fts3Int.h ba4e5445a0daf4a251345d4704259268fd98a3e0282fedfcaedb9fc6da9f250c\nF ext/fts3/fts3_aux.c 96708c8b3a7d9b8ca1b68ea2b7e503e283f20e95f145becadedfad096dbd0f34\nF ext/fts3/fts3_expr.c b132af223e90e35b9f9efa9fe63d6ae737d34153a3b6066736086df8abc78a1f\nF ext/fts3/fts3_hash.c 8b6e31bfb0844c27dc6092c2620bdb1fca17ed613072db057d96952c6bdb48b7\nF ext/fts3/fts3_hash.h 39cf6874dc239d6b4e30479b1975fe5b22a3caaf\nF ext/fts3/fts3_icu.c 305ce7fb6036484085b5556a9c8e62acdc7763f0f4cdf5fd538212a9f3720116\nF ext/fts3/fts3_porter.c 3565faf04b626cddf85f03825e86056a4562c009\nF ext/fts3/fts3_snippet.c d62e40baa6a200586c3a425478109418f44926b1c318c870b59a4286afbe2795\nF ext/fts3/fts3_term.c f45a1e7c6ef464abb1231245d123dae12266b69e05cc56e14045b76591ae92d1\nF ext/fts3/fts3_test.c 73b16e229e517c1b1f0fb8e1046182a4e5dbc8dbe6eea8a5d4353fcce7dbbf39\nF ext/fts3/fts3_tokenize_vtab.c 1de9a61acfa2a0445ed989310c31839c57f6b6086dd9d5c97177ae734a17fd8b\nF ext/fts3/fts3_tokenizer.c a1ca0ab7c9c688ccb1d605645809f74f5df2bf4ca568e4bb37fb51113fd78e45\nF ext/fts3/fts3_tokenizer.h 64c6ef6c5272c51ebe60fc607a896e84288fcbc3\nF ext/fts3/fts3_tokenizer1.c 5c98225a53705e5ee34824087478cf477bdb7004\nF ext/fts3/fts3_unicode.c 4b9af6151c29b35ed09574937083cece7c31e911f69615e168a39677569b684d\nF ext/fts3/fts3_unicode2.c 416eb7e1e81142703520d284b768ca2751d40e31fa912cae24ba74860532bf0f\nF ext/fts3/fts3_write.c fa971df91b7c9c317ccb76e73de425de372f854cbed16be2d98f42f61be6c0fb\nF ext/fts3/fts3speed.tcl b54caf6a18d38174f1a6e84219950d85e98bb1e9\nF ext/fts3/mkfts3amal.tcl 252ecb7fe6467854f2aa237bf2c390b74e71f100\nF ext/fts3/tool/fts3cov.sh c331d006359456cf6f8f953e37f2b9c7d568f3863f00bb5f7eb87fea4ac01b73\nF ext/fts3/tool/fts3view.c 202801a2056995b763864d60c2dee744d46f1677\nF ext/fts3/unicode/CaseFolding.txt 8c678ca52ecc95e16bc7afc2dbf6fc9ffa05db8c\nF ext/fts3/unicode/UnicodeData.txt cd07314edb62d49fde34debdaf92fa2aa69011e7\nF ext/fts3/unicode/mkunicode.tcl bf7fcaa6d68e6d38223467983785d054f1cff4d9e3905dd51f6ed8801bb590d5\nF ext/fts3/unicode/parseunicode.tcl a981bd6466d12dd17967515801c3ff23f74a281be1a03cf1e6f52a6959fc77eb\nF ext/fts5/extract_api_docs.tcl a36e54ec777172ddd3f9a88daf593b00848368e0\nF ext/fts5/fts5.h c132a9323f22a972c4c93a8d5a3d901113a6e612faf30ca8e695788438c5ca2a\nF ext/fts5/fts5Int.h d7cbc214ee167496f70905667e18f73ea0402f7ef09236ce305e117e0efc866a\nF ext/fts5/fts5_aux.c dcc627d8b6e3fc773db528ff67b39955dab7b51628f9dba8e15849e5bedfd7fa\nF ext/fts5/fts5_buffer.c 5a5fe0159752c0fb0a5a93c722e9db2662822709490769d482b76a6dc8aaca70\nF ext/fts5/fts5_config.c aab6117f8f85933e051c66f227414fdcaf7f2313688e16276b895f9d42d28e5c\nF ext/fts5/fts5_expr.c 2be456484786333d559dc2987a00f2750981fab91d52db8452a8046278c5f22e\nF ext/fts5/fts5_hash.c 1cc0095646f5f3b46721aa112fb4f9bf29ae175cb5338f89dcec66ed97acfe75\nF ext/fts5/fts5_index.c 99b77ae1f503978ca76985bcfff7345c822aed8bbaa8edb3747f804f614685b5\nF ext/fts5/fts5_main.c 9db1f173d299466aeff89bd949fb1eb0a181265726fb56f11e07ea292dcc9a73\nF ext/fts5/fts5_storage.c 167e3d8f8052a71032d498e32a2f2ed5ffe489e5d4d47e298adfa02ed55c7882\nF ext/fts5/fts5_tcl.c 39bcbae507f594aad778172fa914cad0f585bf92fd3b078c686e249282db0d95\nF ext/fts5/fts5_test_mi.c 08c11ec968148d4cb4119d96d819f8c1f329812c568bac3684f5464be177d3ee\nF ext/fts5/fts5_test_tok.c f96c6e193c466711d6d7828d5f190407fe7ab897062d371426dd3036f01258e7\nF ext/fts5/fts5_tokenize.c 2e508c6a3bd8ee56c48e98a38052e1a650e49b32a484cce9b189984114bc3b88\nF ext/fts5/fts5_unicode2.c 8bd0cd07396b74c1a05590e4070d635bccfc849812c305619f109e6c0485e250\nF ext/fts5/fts5_varint.c e64d2113f6e1bfee0032972cffc1207b77af63319746951bf1d09885d1dadf80\nF ext/fts5/fts5_vocab.c c3f12188570abb423303cd193b16dd19ba54e21c2e930e9b748d743de3b385f5\nF ext/fts5/fts5parse.y eb526940f892ade5693f22ffd6c4f2702543a9059942772526eac1fde256bb05\nF ext/fts5/mkportersteps.tcl 5acf962d2e0074f701620bb5308155fa1e4a63ba\nF ext/fts5/test/fts5_common.tcl b01c584144b5064f30e6c648145a2dd6bc440841\nF ext/fts5/test/fts5aa.test 5bd43427b7d08ce2e19c488a26534be450538b9232d4d5305049e8de236e9aa9\nF ext/fts5/test/fts5ab.test 9205c839332c908aaad2b01ab8670ece8b161e8f2ec8a9fabf18ca9385880bb7\nF ext/fts5/test/fts5ac.test a7aa7e1fefc6e1918aa4d3111d5c44a09177168e962c5fd2cca9620de8a7ed6d\nF ext/fts5/test/fts5ad.test e8cf959dfcd57c8e46d6f5f25665686f3b6627130a9a981371dafdf6482790de\nF ext/fts5/test/fts5ae.test 1142d16d9cc193894dc13cc8f9c7a8a21411ac61b5567a878514df6f9f0d7bb7\nF ext/fts5/test/fts5af.test 724247405b13f8f06cc6ce464dc4f152dc5dd4e86b12c2099685d8f19747bf7b\nF ext/fts5/test/fts5ag.test 7816f25a0707578f08145ab539fc0ca025f8951e788b28a6a18a06b2099469dd\nF ext/fts5/test/fts5ah.test 27b5a33bfd0363ca8a4dc659e6e2a5df3dea1c3c5b04bc51ca6aeb1277bd9b21\nF ext/fts5/test/fts5ai.test bc97e4758cc93e06bf851d61c98fdf4e8b8f8315ee28a84fb15f916360856414\nF ext/fts5/test/fts5aj.test 745020852d85f5dd49d11cb7ad11d3cc6dafc4fe6d6d24bc0875ac8f43ee4149\nF ext/fts5/test/fts5ak.test fc3595f8e6873bb86d70c9bd4b67d0413ce577bd4793c39a2b60a7b8825b60a6\nF ext/fts5/test/fts5al.test 00c4c1c6a1366b73aa48ce2068c634520867c3cf7f5d1676ebbb775ee1f35734\nF ext/fts5/test/fts5alter.test 5565f7e4605512b69171ac18ca84398603f9f6456dbe377beeca97e83cc242cd\nF ext/fts5/test/fts5auto.test 78989e6527ce69c9eddbef7392fea5c10b0010cd2b2ae68eec7bc869c471e691\nF ext/fts5/test/fts5aux.test ebf6f2ff7cb556e83f66991b7f12bff016d3c83d4eab36704b649dd6b1437318\nF ext/fts5/test/fts5auxdata.test eacc97ff04892f1a5f3d4df5a73f8bcbc3955ea1d12c9f24137eb1fc079e7611\nF ext/fts5/test/fts5bigpl.test 6466c89b38439f0aba26ac09e232a6b963f29b1cbe1304f6a664fe1e7a8f5fd3\nF ext/fts5/test/fts5bigtok.test 541119e616c637caea925a8c028c37c2c29e94383e00aa2f9198d530724b6e36\nF ext/fts5/test/fts5cat.test daba0b80659460b0cb60bd1f40b402478a761fe7ea414c3c94c2be25568cc33a\nF ext/fts5/test/fts5circref.test f880dfd0d99f6fb73b88ccacb0927d18e833672fd906cc47d6b4e529419eaa62\nF ext/fts5/test/fts5colset.test a30473451321bbf0b6218af62e96b4ae5fa99931cfdb210b5ecc804623b30f75\nF ext/fts5/test/fts5columnsize.test 45459ce4dd9fd853b6044cdc9674921bff89e3d840f348ca8c1630f9edbf5482\nF ext/fts5/test/fts5config.test 60094712debc59286c59aef0e6cf511c37d866802776a825ce437d26afe0817f\nF ext/fts5/test/fts5conflict.test 655925678e630d3cdf145d18725a558971806416f453ac8410ca8c04d934238d\nF ext/fts5/test/fts5connect.test 08030168fc96fc278fa81f28654fb7e90566f33aff269c073e19b3ae9126b2f4\nF ext/fts5/test/fts5content.test 213506436fb2c87567b8e31f6d43ab30aab99354cec74ed679f22aad0cdbf283\nF ext/fts5/test/fts5corrupt.test 77ae6f41a7eba10620efb921cf7dbe218b0ef232b04519deb43581cb17a57ebe\nF ext/fts5/test/fts5corrupt2.test 7453752ba12ce91690c469a6449d412561cc604b1dec994e16ab132952e7805f\nF ext/fts5/test/fts5corrupt3.test 5aaa2f8b44a85246a2ea76db1695bde38a75802979f3961702afa8f322d331c8\nF ext/fts5/test/fts5corrupt4.test ea805c4d7c68b5f185b9db5d2060a7ae5875339738dd48203c92162f41e7ca91\nF ext/fts5/test/fts5delete.test cbf87e3b8867c4d5cfcaed975c7475fd3f99d072bce2075fcedf43d1f82af775\nF ext/fts5/test/fts5detail.test 31b240dbf6d44ac3507e2f8b65f29fdc12465ffd531212378c7ce1066766f54e\nF ext/fts5/test/fts5determin.test 1b77879b2ae818b5b71c859e534ee334dac088b7cf3ff3bf76a2c82b1c788d11\nF ext/fts5/test/fts5dlidx.test b90852c55881b29dbac6380b274de27beae623ac4b6d567c6c8fb9cdc315a86e\nF ext/fts5/test/fts5doclist.test e39a6001495f1dc68e20323586ac965787986c2bf6f515b9b0285627b089d9e6\nF ext/fts5/test/fts5ea.test b01e3a18cdfabbff8104a96a5242a06a68a998a0\nF ext/fts5/test/fts5eb.test af1cd2d2cdff343bd40fd8ad9278e9161bfca81ad629e5aaa8c60a868b16044f\nF ext/fts5/test/fts5fault1.test d28a65caee75db6897c3cf1358c5230d3bb2a3bf7fb31062c19c7e5382b3d2bd\nF ext/fts5/test/fts5fault2.test 69c8fdbef830cd0d450908d4504d5bb86609e255af99c421c20a0756251fe344\nF ext/fts5/test/fts5fault3.test da2f9e3e56ff5740d68ebdd6877c97089e7ed28ddff28a0da87a6afea27e5522\nF ext/fts5/test/fts5fault4.test 1c1db5fcfe59401e7833146100f1d8de284a0a686fac31ddac9fb56c459f725b\nF ext/fts5/test/fts5fault5.test a336e4e11847de24c9497f80cce18e00bb3fab7fb11f97d04eb9af898900a762\nF ext/fts5/test/fts5fault6.test a0fc0a8f99e4b16500c31dfc7e38e1defe0f1693ac47650517ac7b723b1956f8\nF ext/fts5/test/fts5fault7.test 0acbec416edb24b8881f154e99c31e9ccf73f539cfcd164090be139e9e97ed4c\nF ext/fts5/test/fts5fault8.test 318238659d35f82ad215ecb57ca4c87486ea85d45dbeedaee42f148ff5105ee2\nF ext/fts5/test/fts5fault9.test 098e6b894bbdf9b2192f994a30f4043673fb3f338b6b8ab1624c704422f39119\nF ext/fts5/test/fts5faultA.test be4487576bff8c22cee6597d1893b312f306504a8c6ccd3c53ca85af12290c8c\nF ext/fts5/test/fts5faultB.test d606bdb8e81aaeb6f41de3fc9fc7ae315733f0903fbff05cf54f5b045b729ab5\nF ext/fts5/test/fts5faultD.test cc5d1225556e356615e719c612e845d41bff7d5a\nF ext/fts5/test/fts5first.test 3fcf2365c00a15fc9704233674789a3b95131d12de18a9b996159f6909dc8079\nF ext/fts5/test/fts5full.test e1701a112354e0ff9a1fdffb0c940c576530c33732ee20ac5e8361777070d717\nF ext/fts5/test/fts5fuzz1.test 238d8c45f3b81342aa384de3e581ff2fa330bf922a7b69e484bbc06051a1080e\nF ext/fts5/test/fts5hash.test a4cf51acad99bfc43c16fb74f9d22495dc221ae0701fc5e908ca963a9b26a02b\nF ext/fts5/test/fts5integrity.test 4317561cd25eca7df16aa1f7d1a700ee958059fa639785f94aba0a84df9ab17b\nF ext/fts5/test/fts5interrupt.test 09613247b273a99889808ef852898177e671406fe71fdde7ea00e78ea283d227\nF ext/fts5/test/fts5lastrowid.test be98fe3e03235296585b72daad7aed5717ba0062bae5e5c18dd6e04e194c6b28\nF ext/fts5/test/fts5leftjoin.test c0b4cafb9661379e576dc4405c0891d8fcc2782680740513c4d1fc114b43d4ad\nF ext/fts5/test/fts5matchinfo.test 50d86da66ec5b27603dcd90ba0227f5d9deb10351cbc52974a88e24f6fc9b076\nF ext/fts5/test/fts5merge.test e92a8db28b45931e7a9c7b1bbd36101692759d00274df74d83fd29d25d53b3a6\nF ext/fts5/test/fts5merge2.test 3ebad1a59d6ad3fb66eff6523a09e95dc6367cbefb3cd73196801dea0425c8e2\nF ext/fts5/test/fts5misc.test a5b53328b5b79275915de8f67ae85905eb2133d8dbcc808411f67c094b1bd347\nF ext/fts5/test/fts5multi.test a15bc91cdb717492e6e1b66fec1c356cb57386b980c7ba5af1915f97fe878581\nF ext/fts5/test/fts5multiclient.test 5ff811c028d6108045ffef737f1e9f05028af2458e456c0937c1d1b8dea56d45\nF ext/fts5/test/fts5near.test 211477940142d733ac04fad97cb24095513ab2507073a99c2765c3ddd2ef58bd\nF ext/fts5/test/fts5onepass.test f9b7d9b2c334900c6542a869760290e2ab5382af8fbd618834bf1fcc3e7b84da\nF ext/fts5/test/fts5optimize.test 36a752d24c818792032e4ff502936fc9cc5ef938721696396fdc79214b2717f1\nF ext/fts5/test/fts5phrase.test 13e5d8e9083077b3d9c74315b3c92ec723cc6eb37c8155e0bfe1bba00559f07b\nF ext/fts5/test/fts5plan.test 771b999d161e24fd803ce0290adb7c6e7c9b9cc2c6a0adb344813fb89473aa32\nF ext/fts5/test/fts5porter.test 8d08010c28527db66bc3feebd2b8767504aaeb9b101a986342fa7833d49d0d15\nF ext/fts5/test/fts5porter2.test 0d251a673f02fa13ca7f011654873b3add20745f7402f108600a23e52d8c7457\nF ext/fts5/test/fts5prefix.test a0fa67b06650f2deaa7bf27745899d94e0fb547ad9ecbd08bfad98c04912c056\nF ext/fts5/test/fts5query.test ac363b17a442620bb0780e93c24f16a5f963dfe2f23dc85647b869efcfada728\nF ext/fts5/test/fts5rank.test c9fd4a1e36b4fa92d572ec13d846469b97da249d1c2f7fd3ee7e017ce46f2416\nF ext/fts5/test/fts5rebuild.test 55d6f17715cddbf825680dd6551efbc72ed916d8cf1cde40a46fc5d785b451e7\nF ext/fts5/test/fts5restart.test 835ecc8f449e3919f72509ab58056d0cedca40d1fe04108ccf8ac4c2ba41f415\nF ext/fts5/test/fts5rowid.test b8790ec170a8dc1942a15aef3db926a5f3061b1ff171013003d8297203a20ad6\nF ext/fts5/test/fts5simple.test a298670508c1458b88ce6030440f26a30673931884eb5f4094ac1773b3ba217b\nF ext/fts5/test/fts5simple2.test 258a1b0c590409bfa5271e872c79572b319d2a56554d0585f68f146a0da603f0\nF ext/fts5/test/fts5simple3.test d5c74a9d3ca71bd5dd5cacb7c55b86ea12cdddfc8b1910e3de2995206898380f\nF ext/fts5/test/fts5synonym.test 1651815b8008de170e8e600dcacc17521d765482ea8f074ae82cfa870d8bb7fb\nF ext/fts5/test/fts5synonym2.test b54cce5c34ec08ed616f646635538ae82e34a0e28f947ec60b6fadbc4b3fb17a\nF ext/fts5/test/fts5tok1.test ce6551e41ff56f30b69963577324624733bed0d1753589f06120d664d9cd45c9\nF ext/fts5/test/fts5tok2.test dcacb32d4a2a3f0dd3215d4a3987f78ae4be21a2\nF ext/fts5/test/fts5tokenizer.test ac3c9112b263a639fb0508ae73a3ee886bf4866d2153771a8e8a20c721305a43\nF ext/fts5/test/fts5umlaut.test a42fe2fe6387c40c49ab27ccbd070e1ae38e07f38d05926482cc0bccac9ad602\nF ext/fts5/test/fts5unicode.test 17056f4efe6b0a5d4f41fdf7a7dc9af2873004562eaa899d40633b93dc95f5a9\nF ext/fts5/test/fts5unicode2.test 9b3df486de05fb4bde4aa7ee8de2e6dae1df6eb90e3f2e242c9383b95d314e3e\nF ext/fts5/test/fts5unicode3.test 590c72e18195bda2446133f9d82d04a4e89d094bba58c75ae10f4afc6faa0744\nF ext/fts5/test/fts5unicode4.test 6463301d669f963c83988017aa354108be0b947d325aef58d3abddf27147b687\nF ext/fts5/test/fts5unindexed.test 9021af86a0fb9fc616f7a69a996db0116e7936d0db63892db6bafabbec21af4d\nF ext/fts5/test/fts5update.test b8affd796e45c94a4d19ad5c26606ea06065a0f162a9562d9f005b5a80ccf0bc\nF ext/fts5/test/fts5version.test c8f2cc105f0abf0224965f93e584633dee3e06c91478bc67e468f7cfdf97fd6a\nF ext/fts5/test/fts5vocab.test 648fb2fe86b55e08295e34504704718d92fba3e2cf3e1f5d72fa3682df4cd0f0\nF ext/fts5/test/fts5vocab2.test e0fdc3a3095f6eda68ac9bf9a443ff929a124d46f00af19933604085712e9d47\nF ext/fts5/tool/fts5speed.tcl b0056f91a55b2d1a3684ec05729de92b042e2f85\nF ext/fts5/tool/fts5txt2db.tcl 526a9979c963f1c54fd50976a05a502e533a4c59\nF ext/fts5/tool/loadfts5.tcl 95b03429ee6b138645703c6ca192c3ac96eaf093\nF ext/fts5/tool/mkfts5c.tcl d1c2a9ab8e0ec690a52316f33dd9b1d379942f45\nF ext/fts5/tool/showfts5.tcl d54da0e067306663e2d5d523965ca487698e722c\nF ext/icu/README.txt a295e91db742b153e8dce8f7efd31d28ad1eea4df31ef4daa3eedc85be2f5138\nF ext/icu/icu.c c2c7592574c08cd1270d909b8fb8797f6ea1f49e931e71dbcc25506b9b224580\nF ext/icu/sqliteicu.h 728867a802baa5a96de7495e9689a8e01715ef37\nF ext/lsm1/Makefile a553b728bba6c11201b795188c5708915cc4290f02b7df6ba7e8c4c943fd5cd9\nF ext/lsm1/Makefile.msc f8c878b467232226de288da320e1ac71c131f5ec91e08b21f502303347260013\nF ext/lsm1/lsm-test/README 87ea529d2abe615e856d4714bfe8bb185e6c2771b8612aa6298588b7b43e6f86\nF ext/lsm1/lsm-test/lsmtest.h cf58528ffe0cfe535e91b44584e2ec5fb1caacdabecef0d8dcf83bf83168bf28\nF ext/lsm1/lsm-test/lsmtest1.c ae6ba48a0851b39be69a7d0eb220bfb9521a526e926223d5014bd385df10abb3\nF ext/lsm1/lsm-test/lsmtest2.c 188b09aec776516aeedcfd13b9c6faf85ba16b3671a0897a2c740ee00a5dc4f8\nF ext/lsm1/lsm-test/lsmtest3.c 9ab87528a36dbf4a61d7c8ad954f5ee368c0878c127b84b942b2e2abe522de26\nF ext/lsm1/lsm-test/lsmtest4.c d258d6a245db5d8eaede096e2368d23f859c5e92c80ab9122463f708514fe10c\nF ext/lsm1/lsm-test/lsmtest5.c 8d5242a0f870d65eeada191c8945781fed9cb8ece3886573790ebd373b62dac5\nF ext/lsm1/lsm-test/lsmtest6.c 869cb4a172cd07d1a75b3aeaecd61d0a477787b3b8668bad0d3ff0f43b642b7c\nF ext/lsm1/lsm-test/lsmtest7.c 7a917455a0f956a8ed3f44f5c9387ec0ea6627714874464cc3fa5c5a9cabb2f2\nF ext/lsm1/lsm-test/lsmtest8.c 589b68c44531a0f04d5e879bb1e211be5f7100f48eed7e8631e07ed5cbd68f94\nF ext/lsm1/lsm-test/lsmtest9.c dd1a0ebf41134933a744d1e00e60429a2a21fc50d587ae7dd6bdb6e96d805bdc\nF ext/lsm1/lsm-test/lsmtest_bt.c d70d9a9be5eef9360af1251dd083948d74fd30137a08f61bef995f7ac04e037f\nF ext/lsm1/lsm-test/lsmtest_datasource.c 5d770be191d0ca51315926723009b2c25c0b4b8136840494ef710ac324aa916c\nF ext/lsm1/lsm-test/lsmtest_func.c 159aa401bc8032bfa3d8cf2977bd687abebab880255895a5eb45770d626fa38d\nF ext/lsm1/lsm-test/lsmtest_io.c cf11b27b129c6bd5818fa1d440176502dc27229f0db892b4479118d61993ea20\nF ext/lsm1/lsm-test/lsmtest_main.c a9bc647738c0dcaebf205d6d194b3ce4a6ef3925801cd2d919f0a4ea33a15aeb\nF ext/lsm1/lsm-test/lsmtest_mem.c 4e63c764345ab1df59d4f13a77980c6f3643798210b10d6cdbd785b4b888fda5\nF ext/lsm1/lsm-test/lsmtest_tdb.c 618a8619183fda4f5540fcde15f9068293c5e3180e1a246e34409b0c148758b3\nF ext/lsm1/lsm-test/lsmtest_tdb.h 8733eee249b12956a9df8322994b43d19bd8c02ad2e8b0bb5164db4d6ccc1735\nF ext/lsm1/lsm-test/lsmtest_tdb2.cc 99ea7f2dd9c7536c8fb9bdd329e4cfeb76899f3ddf6f48bdd3926e016922b715\nF ext/lsm1/lsm-test/lsmtest_tdb3.c 7a7ccae189f5bb25bcd1ec3bbd740529706eded7f6729a5a0a9eeaeb57785320\nF ext/lsm1/lsm-test/lsmtest_tdb4.c 47e8bb5eba266472d690fb8264f1855ebdba0ae5a0e541e35fcda61ebf1d277f\nF ext/lsm1/lsm-test/lsmtest_util.c 241622db5a332a09c8e6e7606b617d288a37b557f7d3bce0bb97809f67cc2806\nF ext/lsm1/lsm-test/lsmtest_win32.c 0e0a224674c4d3170631c41b026b56c7e1672b151f5261e1b4cc19068641da2d\nF ext/lsm1/lsm.h 0f6f64ff071471cb87bf98beb8386566f30ea001\nF ext/lsm1/lsmInt.h 5983690e05e83653cc01ba9d8fbf8455e534ddf8349ed9adedbf46a7549760b0\nF ext/lsm1/lsm_ckpt.c 0eabfaf812ddb4ea43add38f05e430694cd054eb622c3e35af4c43118a2d5321\nF ext/lsm1/lsm_file.c 3c51841d5b3e7da162693cbac9a9f47eeedf6bcbbe2969a4d25e30c428c9fe36\nF ext/lsm1/lsm_log.c a8bf334532109bba05b09a504ee45fc393828b0d034ca61ab45e3940709d9a7c\nF ext/lsm1/lsm_main.c b5703f8042e71d3a2d65e671f6832e077e79e89e9975818f67f969922618db63\nF ext/lsm1/lsm_mem.c 4c51ea9fa285ee6e35301b33491642d071740a0a\nF ext/lsm1/lsm_mutex.c 378edf0a2b142b4f7640ee982df06d50b98788ea\nF ext/lsm1/lsm_shared.c 76adfc1ed9ffebaf92746dde4b370ccc48143ca8b05b563816eadd2aadf1c525\nF ext/lsm1/lsm_sorted.c 6f7d8cf7a7d3d3f1ab5d9ba6347e8f39f3d73c00ec48afcd0c4bcbefd806f9b8\nF ext/lsm1/lsm_str.c 65e361b488c87b10bf3e5c0070b14ffc602cf84f094880bece77bbf6678bca82\nF ext/lsm1/lsm_tree.c 682679d7ef2b8b6f2fe77aeb532c8d29695bca671c220b0abac77069de5fb9fb\nF ext/lsm1/lsm_unix.c 57361bcf5b1a1a028f5d66571ee490e9064d2cfb145a2cc9e5ddade467bb551b\nF ext/lsm1/lsm_varint.c 43f954af668a66c7928b81597c14d6ad4be9fedbc276bbd80f52fa28a02fdb62\nF ext/lsm1/lsm_vtab.c 169bfe7ef8e6c9de9c77e17c4c50c9ae55fb0167d80be3d1be82c991184b6f35\nF ext/lsm1/lsm_win32.c 0a4acbd7e8d136dd3a5753f0a9e7a9802263a9d96cef3278cf120bcaa724db7c\nF ext/lsm1/test/lsm1_common.tcl 5ed4bab07c93be2e4f300ebe46007ecf4b3e20bc5fbe1dedaf04a8774a6d8d82\nF ext/lsm1/test/lsm1_simple.test a04d08e8661ae6fc53786c67f0bd102c6692f003e859dde03ed9ac3f12e066e5\nF ext/lsm1/tool/mklsm1c.tcl f31561bbee5349f0a554d1ad7236ac1991fc09176626f529f6078e07335398b0\nF ext/misc/README.md d6dd0fe1d8af77040216798a6a2b0c46c73054d2f0ea544fbbcdccf6f238c240\nF ext/misc/amatch.c 50a9ef2d38dabfa371f8c1904097d493271e63d58ccb0e9b79a4fa4a94e66660\nF ext/misc/anycollseq.c 5ffdfde9829eeac52219136ad6aa7cd9a4edb3b15f4f2532de52f4a22525eddb\nF ext/misc/appendvfs.c 3777f22ec1057dc4e5fd89f2fbddcc7a29fbeef1ad038c736c54411bb1967af7\nF ext/misc/blobio.c a867c4c4617f6ec223a307ebfe0eabb45e0992f74dd47722b96f3e631c0edb2a\nF ext/misc/btreeinfo.c 4f0ebf278f46e68e6306c667917766cebc5550fd35d5de17847988e22892d4d2\nF ext/misc/carray.c 91e9a7f512fda934894bed30464552fffa7d3073b5be04189ae0bd0c59f26bfd\nF ext/misc/closure.c dbfd8543b2a017ae6b1a5843986b22ddf99ff126ec9634a2f4047cd14c85c243\nF ext/misc/completion.c cec672d40604075bb341a7f11ac48393efdcd90a979269b8fe7977ea62d0547f\nF ext/misc/compress.c dd4f8a6d0baccff3c694757db5b430f3bbd821d8686d1fc24df55cf9f035b189\nF ext/misc/csv.c 7f047aeb68f5802e7ce6639292095d622a488bb43526ed04810e0649faa71ceb\nF ext/misc/dbdata.c e316fba936571584e55abd5b974a32a191727a6b746053a0c9d439bd2cf93940\nF ext/misc/dbdump.c baf6e37447c9d6968417b1cd34cbedb0b0ab3f91b5329501d8a8d5be3287c336\nF ext/misc/eval.c 4b4757592d00fd32e44c7a067e6a0e4839c81a4d57abc4131ee7806d1be3104e\nF ext/misc/explain.c d5c12962d79913ef774b297006872af1fccda388f61a11d37758f9179a09551f\nF ext/misc/fileio.c 288e7230e0fe464d71b0694e2d8bdd3a353118ac2e31da3964b95f460f09915f\nF ext/misc/fossildelta.c 7708651072eb5620ab21bbfb518d184f27b2c29c0131b09b9a2d8852a8016430\nF ext/misc/fuzzer.c c4e27daf41433a64cad5265cd27dbcb891147e9994d0422200ce81ce9a54b625\nF ext/misc/ieee754.c f190d0cc5182529acb15babd177781be1ac1718c\nF ext/misc/json1.c 760107d0b97ab422952591b0d7519327dcb482954a7706ee387a54c135f8aabf\nF ext/misc/memstat.c 3017a0832c645c0f8c773435620d663855f04690172316bd127270d1a7523d4d\nF ext/misc/memtrace.c 7c0d115d2ef716ad0ba632c91e05bd119cb16c1aedf3bec9f06196ead2d5537b\nF ext/misc/memvfs.c ab36f49e02ebcdf85a1e08dc4d8599ea8f343e073ac9e0bca18a98b7e1ec9567\nF ext/misc/mmapwarm.c 8c5fe90d807a23e44a8b93e96e8b812b19b300d5fd8c1d40a4fd1d8224e33f46\nF ext/misc/nextchar.c 279f80fe8ef5ba413242e2704e246503ac601f005eefb180d19e6c920338a0ba\nF ext/misc/normalize.c b4290464f542bae7a97b43f15bd197949b833ffd668b7c313631bd5d4610212c\nF ext/misc/percentile.c 148dd07286b16e50f232bb638a47850085ad37d51f270429905bd865e595d1ca\nF ext/misc/prefixes.c 7be86d17525cfae6ed462fc3c519efc44488ac329890f77491c8f82871f57e17\nF ext/misc/regexp.c 653b6ab5e89bcb5d45f9ebe0747d7f8f3f5706cac963fcbc9a3ddbe5fdc1efa2\nF ext/misc/remember.c add730f0f7e7436cd15ea3fd6a90fd83c3f706ab44169f7f048438b7d6baa69c\nF ext/misc/rot13.c 540a169cb0d74f15522a8930b0cccdcb37a4fd071d219a5a083a319fc6e8db77\nF ext/misc/scrub.c db9fff56fed322ca587d73727c6021b11ae79ce3f31b389e1d82891d144f22ad\nF ext/misc/series.c 0c97f63378fddc9f425e82ba139b9aaf902211f24ced115c2b6ae12b425f7334\nF ext/misc/sha1.c d8125a88ee9023bc17d6f87ea8850db33f906d5701b30d4fd9bddb57f231e60a\nF ext/misc/shathree.c 22ba7ca84a433d6466a7d05dcc876910b435a715da8cc462517db9351412b8c8\nF ext/misc/showauth.c 732578f0fe4ce42d577e1c86dc89dd14a006ab52\nF ext/misc/spellfix.c f88ecb2c0294453ce8b7704b211f5350c41b085b38c8e056852e3a08b0f5e484\nF ext/misc/sqlar.c 57d5bc45cd5492208e451f697404be88f8612527d64c9d42f96b325b64983d74\nF ext/misc/stmt.c 8a8dc4675042e4551e4afe99b8d0cc7a4a2fc1a8dacc0a9ce1b1bbff145da93d\nF ext/misc/templatevtab.c 8a16a91a5ceaccfcbd6aaaa56d46828806e460dd194965b3f77bf38f14b942c4\nF ext/misc/totype.c 5b6b1eafaa993e29f8df843319b3292b029f1b5cbbbf11c8a88e05d3f714159f\nF ext/misc/unionvtab.c 36237f0607ca954ac13a4a0e2d2ac40c33bc6e032a5f55f431713061ef1625f9\nF ext/misc/uuid.c db4db81e8c6a92ad6176ebd9f81dcb6870e331e1a286d0452f4319e3ba3df812\nF ext/misc/vfslog.c 3b25c2f56ba60788db247287be6ab024b53c4afffd412b4876db563389be0d35\nF ext/misc/vfsstat.c 77b5b4235c9f7f11eddf82487c0a422944ac2f132dafd5af3be7a68a057b1cdb\nF ext/misc/vtablog.c 5538acd0c8ddaae372331bee11608d76973436b77d6a91e8635cfc9432fba5ae\nF ext/misc/vtshim.c 1976e6dd68dd0d64508c91a6dfab8e75f8aaf6cd\nF ext/misc/wholenumber.c 784b12543d60702ebdd47da936e278aa03076212\nF ext/misc/zipfile.c 7ad29133e304e40c8fe239bea10e101580ed56bc68c16d992af514cce19572d0\nF ext/misc/zorder.c b0ff58fa643afa1d846786d51ea8d5c4b6b35aa0254ab5a82617db92f3adda64\nF ext/rbu/rbu.c 8681f6157db6adc82c34af24b14ea8a3be0146ad2a3b6c1d5da6cb8a5796c8ce\nF ext/rbu/rbu1.test 221d9c18a5e600ac9ac6b1810d99d9f99163a7909ba61597876ab6e4d4beb3d6\nF ext/rbu/rbu10.test 0a201c32202143f23c81c0144503da339786fc20acb7a2fda11601b65659f314\nF ext/rbu/rbu11.test 5c834cf491086b45e071eabf71f708febc143e86a384a92de69e0b1a4cace144\nF ext/rbu/rbu12.test 29f8b2118f6c96fac3755bd6d2b55c2db24f878b1f11fbfbe294f3a230a3dcdc\nF ext/rbu/rbu13.test 1285298e3360ec74511764841b3c174dcfe21da2f618c22febf1a20abd0365c2\nF ext/rbu/rbu14.test 4a7bf0b3a4516d3ab0bc0ba4ceb53eb7e3324147ccda152e561060f659dbba31\nF ext/rbu/rbu3.test d6c6cc7a1326e8e23b9820f30bd3054f22092e503fadfd2a660ae006653f6d80\nF ext/rbu/rbu5.test 724b38ea5f722e3d22dc76343860bd998bb676c3f78c4bc8175df5c5d7720e23\nF ext/rbu/rbu6.test 401064236d3cf86b7edc01c586d7c5554f48553946fbfa1a3af35d7e47dce9e3\nF ext/rbu/rbu7.test ae25f47b56f178197fc1098537a35a39176cc73d1629b03dc9d795929fc36ec2\nF ext/rbu/rbu8.test b98a6fc58ead84a0e6ddee775b9702cd981f318d5d4fd1d4df0fa0c40db7251b\nF ext/rbu/rbu9.test 0e4d985e25620d61920597e8ea69c871c9e8c1f5a0be2ae9fa70bb641d74378c\nF ext/rbu/rbuA.test b34a90cb495682c25b5fc03a9d5e7a4fc99541c29256f25e2e2a4f6542b4f5b3\nF ext/rbu/rbuB.test 52b07158824c6927b7e25554ace92a695cdebfc296ae3d308ac386984aded9bc\nF ext/rbu/rbuC.test 80f1cc2fb74f44b1128fd0ed8eedab3a76fefeb72a947860e2869ef76fc8dc6b\nF ext/rbu/rbu_common.tcl 60d904133ff843fe72cc0514e9dd2486707181e6e0fbab20979da28c48d21de9\nF ext/rbu/rbucollate.test cac528a9a46318cba42e61258bb42660bbbf4fdb9a8c863de5a54ad0c658d197\nF ext/rbu/rbucrash.test 000981a1fe8a6e4d9a684232f6a129e66a3ef595f5ed74655e2f9c68ffa613b4\nF ext/rbu/rbucrash2.test efa143cc94228eb0266d3f1abfbee60a5838a84cef7cc3fcb8c145b74d96fd41\nF ext/rbu/rbudiff.test 156957851136b63c143478518dc1bda6c832103cdbe8ac1d7cdd47edb3cbe0a3\nF ext/rbu/rbudor.test e3e8623926012f43eebe51fedf06a102df2640750d971596b052495f2536db20\nF ext/rbu/rbuexpr.test 10d0420537c3bc7666e576d72adeffe7e86cfbb00dcc30aa9ce096c042415190\nF ext/rbu/rbufault.test 2d7f567b79d558f6e093c58808cab4354f8a174e3802f69e7790a9689b3c09f8\nF ext/rbu/rbufault2.test c81327a3ac2c385b9b954db3644d4e0df93eeebfc3de9f1f29975a1e73fd3d0c\nF ext/rbu/rbufault3.test b2fcc9db5c982b869f67d1d4688d8cb515d5b92f58011fff95665f2e62cec179\nF ext/rbu/rbufault4.test 03d2849c3df7d7bd14a622e789ff049e5080edd34a79cd432e01204db2a5930a\nF ext/rbu/rbufts.test 0ae8d1da191c75bd776b86e24456db0fb6e97b7c944259fae5407ea55d23c31d\nF ext/rbu/rbumisc.test 329986cf5dd51890c4eb906c2f960ebb773a79a64bed90f506b7c417825b37eb\nF ext/rbu/rbumulti.test 5fb139058f37ddc5a113c5b93238de915b769b7792de41b44c983bc7c18cf5b9\nF ext/rbu/rbupartial.test f25df014b8dbe3c5345851fba6e66f79ab237f57dc201b2d5f0dbae658ae5a4c\nF ext/rbu/rbuprogress.test 857cf1f8166c83ef977edb9ef4fc42d80f71fbd798652b46ae2f3a7031870f8d\nF ext/rbu/rburesume.test dbdc4ca504e9c76375a69e5f0d91205db967dcc509a5166ca80231f8fda49eb1\nF ext/rbu/rbusave.test f4190a1a86fccf84f723af5c93813365ae33feda35845ba107b59683d1cdd926\nF ext/rbu/rbusplit.test b37e7b40b38760881dc9c854bd40b4744c6b6cd74990754eca3bda0f407051e8\nF ext/rbu/rbutemplimit.test 05ceefa90a2e26a99f40dd48282ed63a00df5e59c1f2bfd479c143e201a1b0ba\nF ext/rbu/rbuvacuum.test 55e101e90168c2b31df6c9638fe73dc7f7cc666b6142266d1563697d79f73534\nF ext/rbu/rbuvacuum2.test b8e5b51dc8b2c0153373d024c0936be3f66f9234acbd6d0baab0869d56b14e6b\nF ext/rbu/rbuvacuum3.test 8addd82e4b83b4c93fa47428eae4fd0dbf410f8512c186f38e348feb49ba03dc\nF ext/rbu/rbuvacuum4.test a78898e438a44803eb2bc897ba3323373c9f277418e2d6d76e90f2f1dbccfd10\nF ext/rbu/sqlite3rbu.c f3a3e09f575157052813be667d6ab3b54f47fb02e6e1c9f767ad7bb8f1fb90b3\nF ext/rbu/sqlite3rbu.h 1dc88ab7bd32d0f15890ea08d23476c4198d3da3056985403991f8c9cd389812\nF ext/rbu/test_rbu.c 03f6f177096a5f822d68d8e4069ad8907fe572c62ff2d19b141f59742821828a\nF ext/repair/README.md 92f5e8aae749a4dae14f02eea8e1bb42d4db2b6ce5e83dbcdd6b1446997e0c15\nF ext/repair/checkfreelist.c 0dbae18c1b552f58d64f8969e4fb1e7f11930c60a8c2a9a8d50b7f15bdfd54bd\nF ext/repair/checkindex.c 7d28c01a2e012ac64257d230fc452b2cafb78311a91a343633d01d95220f66f3\nF ext/repair/sqlite3_checker.c.in 4a5a3af3f450fe503e5a2985e98516dc2a6b9ad247449e284c1cf140fc91720f\nF ext/repair/sqlite3_checker.tcl a9a2caa9660567257c177a91124d8c0dccdfa341e25c51e6da7f1fd9e601eafa\nF ext/repair/test/README.md 34b2f542cf5be7bffe479242b33ee3492cea30711e447cc4a1a86cb5915f419e\nF ext/repair/test/checkfreelist01.test 3e8aa6aeb4007680c94a8d07b41c339aa635cc78249442da72ff3f8297398a69\nF ext/repair/test/checkindex01.test b530f141413b587c9eb78ff734de6bb79bc3515c335096108c12c01bddbadcec\nF ext/repair/test/test.tcl 686d76d888dffd021f64260abf29a55c57b2cedfa7fc69150b42b1d6119aac3c\nF ext/rtree/README 6315c0d73ebf0ec40dedb5aa0e942bc8b54e3761\nF ext/rtree/geopoly.c c591164125808f8bba9659e92665b78412cd263e654b6f05294f3a8da7cdd9fb\nF ext/rtree/rtree.c 26fcb3f7a92fda9afcf5eee684cc3188b7367da69bc9c374492d844fb8ed4e25\nF ext/rtree/rtree.h 4a690463901cb5e6127cf05eb8e642f127012fd5003830dbc974eca5802d9412\nF ext/rtree/rtree1.test 4092a8bd2b5eafc4fafe4fe9024249c12b13e4bab23c2c3eaff57412fdf805fa\nF ext/rtree/rtree2.test 9d9deddbb16fd0c30c36e6b4fdc3ee3132d765567f0f9432ee71e1303d32603d\nF ext/rtree/rtree3.test 4ee5d7df86040efe3d8d84f141f2962a7745452200a7cba1db06f86d97050499\nF ext/rtree/rtree4.test 304de65d484540111b896827e4261815e5dca4ce28eeecd58be648cd73452c4b\nF ext/rtree/rtree5.test 49c9041d713d54560b315c2c7ef7207ee287eba1b20f8266968a06f2e55d3142\nF ext/rtree/rtree6.test 1252a0439da01d2f1f5cbbdeeb80455a2d68b9bae2a9787937b167a5e3957828\nF ext/rtree/rtree7.test c8fb2e555b128dd0f0bdb520c61380014f497f8a23c40f2e820acc9f9e4fdce5\nF ext/rtree/rtree8.test 2d99006a1386663978c9e1df167554671e4f711c419175b39f332719deb1ce0e\nF ext/rtree/rtree9.test c646f12c8c1c68ef015c6c043d86a0c42488e2e68ed1bb1b0771a7ca246cbabf\nF ext/rtree/rtreeA.test ed2f1be9c06dde0b1ab93a95dd9e87eeaa02db2d30bcb4b9179b69ee3dc3319b\nF ext/rtree/rtreeB.test 4cec297f8e5c588654bbf3c6ed0903f10612be8a2878055dd25faf8c71758bc9\nF ext/rtree/rtreeC.test 6aa87eba4d9a3003b941a1ba77db259c5cabc3fd92fc5a6360f5369520eb9a4d\nF ext/rtree/rtreeD.test fe46aa7f012e137bd58294409b16c0d43976c3bb92c8f710481e577c4a1100dc\nF ext/rtree/rtreeE.test e65d3fc625da1800b412fc8785817327d43ccfec5f5973912d8c9e471928caa9\nF ext/rtree/rtreeF.test 81ffa7ef51c4e4618d497a57328c265bf576990c7070633b623b23cd450ed331\nF ext/rtree/rtreeG.test 1b9ca6e3effb48f4161edaa463ddeaa8fca4b2526d084f9cbf5dbe4e0184939c\nF ext/rtree/rtreeH.test 0885151ee8429242625600ae47142cca935332c70a06737f35af53a7bd7aaf90\nF ext/rtree/rtreeI.test 608e77f7fde9be5a12eae316baef640fffaafcfa90a3d67443e78123e19c4ca4\nF ext/rtree/rtree_perf.tcl 6c18c1f23cd48e0f948930c98dfdd37dfccb5195\nF ext/rtree/rtree_util.tcl db734b4c5e75fed6acc56d9701f2235345acfdec750b5fc7b587936f5f6bceed\nF ext/rtree/rtreecheck.test d67d5b3e9e45bfa8cd90734e8e9302144ac415b8e9176c6f02d4f92892ee8a35\nF ext/rtree/rtreecirc.test aec664eb21ae943aeb344191407afff5d392d3ae9d12b9a112ced0d9c5de298e\nF ext/rtree/rtreeconnect.test 225ad3fcb483d36cbee423a25052a6bbae762c9576ae9268332360c68c170d3d\nF ext/rtree/rtreefuzz001.test eef1ed593bb15886cd5d5367a2f2492f81e315848896cdf7afb6e21454978827\nF ext/rtree/sqlite3rtree.h 03c8db3261e435fbddcfc961471795cbf12b24e03001d0015b2636b0f3881373\nF ext/rtree/tkt3363.test 142ab96eded44a3615ec79fba98c7bde7d0f96de\nF ext/rtree/util/randomshape.tcl 54ee03d0d4a1c621806f7f44d5b78d2db8fac26e0e8687c36c4bd0203b27dbff\nF ext/rtree/viewrtree.tcl eea6224b3553599ae665b239bd827e182b466024\nF ext/rtree/visual01.txt e9c2564083bcd30ec51b07f881bffbf0e12b50a3f6fced0c222c5c1d2f94ac66\nF ext/session/changeset.c 7a1e6a14c7e92d36ca177e92e88b5281acd709f3b726298dc34ec0fb58869cb5\nF ext/session/changesetfuzz.c 227076ab0ae4447d742c01ee88a564da6478bbf26b65108bf8fac9cd8b0b24aa\nF ext/session/changesetfuzz1.test 2e1b90d888fbf0eea5e1bd2f1e527a48cc85f8e0ff75df1ec4e320b21f580b3a\nF ext/session/session1.test 0b2f88995832ea040ae8e83a1ad4afa99c00b85c779d213da73a95ea4113233e\nF ext/session/session2.test 284de45abae4cc1082bc52012ee81521d5ac58e0\nF ext/session/session3.test ce9ce3dfa489473987f899e9f6a0f2db9bde3479\nF ext/session/session4.test 6778997065b44d99c51ff9cece047ff9244a32856b328735ae27ddef68979c40\nF ext/session/session5.test 716bc6fafd625ce60dfa62ae128971628c1a1169\nF ext/session/session6.test 443789bc2fca12e4f7075cf692c60b8a2bea1a26\nF ext/session/session8.test 8e194b3f655d861ca36de5d4de53f702751bab3b\nF ext/session/session9.test 5409d90d8141881d08285ed1c2c0d8d10fb92069\nF ext/session/sessionA.test 1feeab0b8e03527f08f2f1defb442da25480138f\nF ext/session/sessionB.test c4fb7f8a688787111606e123a555f18ee04f65bb9f2a4bb2aa71d55ce4e6d02c\nF ext/session/sessionC.test f8a5508bc059ae646e5ec9bdbca66ad24bc92fe99fda5790ac57e1f59fce2fdf\nF ext/session/sessionD.test 4f91d0ca8afc4c3969c72c9f0b5ea9527e21de29039937d0d973f821e8470724\nF ext/session/sessionE.test b2010949c9d7415306f64e3c2072ddabc4b8250c98478d3c0c4d064bce83111d\nF ext/session/sessionF.test d37ed800881e742c208df443537bf29aa49fd56eac520d0f0c6df3e6320f3401\nF ext/session/sessionG.test 3828b944cd1285f4379340fd36f8b64c464fc84df6ff3ccbc95578fd87140b9c\nF ext/session/sessionH.test a417559f29a7e775950fc5fc82b3d01256a7cbe793ddf1180df234df823d56e2\nF ext/session/session_common.tcl 29ec9910aca1e996ca1c8531b8cecabf96eb576aa53de65a8ff03d848b9a2a8b\nF ext/session/session_speed_test.c dcf0ef58d76b70c8fbd9eab3be77cf9deb8bc1638fed8be518b62d6cbdef88b3\nF ext/session/sessionat.test efe88965e74ff1bc2af9c310b28358c02d420c1fb2705cc7a28f0c1cc142c3ec\nF ext/session/sessiondiff.test ad13dd65664bae26744e1f18eb3cbd5588349b7e9118851d8f9364248d67bcec\nF ext/session/sessionfault.test da273f2712b6411e85e71465a1733b8501dbf6f7\nF ext/session/sessionfault2.test dd593f80b6b4786f7adfe83c5939620bc505559770cc181332da26f29cddd7bb\nF ext/session/sessioninvert.test ae1a003a9ab1f8d64227dbb5c3a4c97e65b561b01e7b2953cf48683fb2724169\nF ext/session/sessionrebase.test ccfa716b23bd1d3b03217ee58cfd90c78d4b99f53e6a9a2f05e82363b9142810\nF ext/session/sessionstat1.test 218d351cf9fcd6648f125a26b607b140310160184723c2666091b54450a68fb5\nF ext/session/sessionwor.test 67b5ab91d4f93ce65ff1f58240ac5ddf73f8670facc1ffa49cef56293d52818d\nF ext/session/sqlite3session.c a4dfb372f270df93422b0dc7666fd46849e6979b62a152f11287c21eed4ac21b\nF ext/session/sqlite3session.h a2db5b72b938d12c727b4b4ec632254ca493670a9c0de597af3271a7f774fc57\nF ext/session/test_session.c 98797aba475a799376c9a42214f2d1debf2d0c3cb657d9c8bbf4f70bf3fb4aec\nF ext/userauth/sqlite3userauth.h 7f3ea8c4686db8e40b0a0e7a8e0b00fac13aa7a3\nF ext/userauth/user-auth.txt e6641021a9210364665fe625d067617d03f27b04\nF ext/userauth/userauth.c f81aa5a3ecacf406f170c62a144405858f6f6de51dbdc0920134e629edbe2648\nF install-sh 9d4de14ab9fb0facae2f48780b874848cbf2f895 x\nF ltmain.sh 3ff0879076df340d2e23ae905484d8c15d5fdea8\nF magic.txt 8273bf49ba3b0c8559cb2774495390c31fd61c60\nF main.mk 7ce055f3df31a4f7d21e38f493f907c21db1f673863a573e231f55e2ab005023\nF mkso.sh fd21c06b063bb16a5d25deea1752c2da6ac3ed83\nF mptest/config01.test 3c6adcbc50b991866855f1977ff172eb6d901271\nF mptest/config02.test 4415dfe36c48785f751e16e32c20b077c28ae504\nF mptest/crash01.test 61e61469e257df0850df4293d7d4d6c2af301421\nF mptest/crash02.subtest f4ef05adcd15d60e5d2bd654204f2c008b519df8\nF mptest/mptest.c aa41ace6dbc5050d76b02548d3521e6bbccae4f0\nF mptest/multiwrite01.test dab5c5f8f9534971efce679152c5146da265222d\nF spec.template 86a4a43b99ebb3e75e6b9a735d5fd293a24e90ca\nF sqlite.pc.in 42b7bf0d02e08b9e77734a47798d1a55a9e0716b\nF sqlite3.1 fc7ad8990fc8409983309bb80de8c811a7506786\nF sqlite3.pc.in 48fed132e7cb71ab676105d2a4dc77127d8c1f3a\nF src/alter.c ef3519bcc3da6e1d8c0bda63233fb315c99f08e8cd74fe3afb9eeaa2b424bfd4\nF src/analyze.c b3ceec3fc052df8a96ca8a8c858d455dc5029ba681b4be98bb5c5a9162cfa58c\nF src/attach.c b30c44333d55a68c0a12920b5b9d40b254cbd3d4509bda77417209eeed8b3d80\nF src/auth.c a3d5bfdba83d25abed1013a8c7a5f204e2e29b0c25242a56bc02bb0c07bf1e06\nF src/backup.c f70077d40c08b7787bfe934e4d1da8030cb0cc57d46b345fba2294b7d1be23ab\nF src/bitvec.c 17ea48eff8ba979f1f5b04cc484c7bb2be632f33\nF src/btmutex.c 8acc2f464ee76324bf13310df5692a262b801808984c1b79defb2503bbafadb6\nF src/btree.c d22498af716953400e314d2d98d1dac3ea5c3b01e0fd243ef9e9b132c74114ec\nF src/btree.h f27a33c49280209a93385e218306c4ee5f46ba8d7649d2f81a7166b282232484\nF src/btreeInt.h 91806f01fd1145a9a86ba3042f25c38d8faf6002701bf5e780742cf88bcff437\nF src/build.c 7c277ccc24c249b84f29ba829b0ed377e78487c93d17d999798641be0c20fad5\nF src/callback.c 88615dfc0a82167b65b452b4b305dbf86be77200b3343c6ffc6d03e92a01d181\nF src/complete.c a3634ab1e687055cd002e11b8f43eb75c17da23e\nF src/ctime.c 1b0724e66f95f33b160b1af85caaf9cceb325d22abf39bd24df4f54a73982251\nF src/date.c e1d8ac7102f3f283e63e13867acb0efa33861cf34f0faf4cdbaf9fa7a1eb7041\nF src/dbpage.c 135eb3b5e74f9ef74bde5cec2571192c90c86984fa534c88bf4a055076fa19b7\nF src/dbstat.c 6c407e549406c10fde9ac3987f6d734459205239ad370369bc5fcd683084a4fa\nF src/delete.c a5c59b9c0251cf7682bc52af0d64f09b1aefc6781a63592c8f1136f7b73c66e4\nF src/expr.c 947911a1826673add2311e8650aeaf9c2809706dfaa45fc2445a5ff32f70693d\nF src/fault.c 460f3e55994363812d9d60844b2a6de88826e007\nF src/fkey.c 92a248ec0fa4ed8ab60c98d9b188ce173aaf218f32e7737ba77deb2a684f9847\nF src/func.c ed33e38cd642058182a31a3f518f2e34f4bbe53aa483335705c153c4d3e50b12\nF src/global.c a1a8d698762ddd9a1543aac26c1e0029b20fcc3fcb56bfa41ec8cea2368f2798\nF src/hash.c 8d7dda241d0ebdafb6ffdeda3149a412d7df75102cecfc1021c98d6219823b19\nF src/hash.h 9d56a9079d523b648774c1784b74b89bd93fac7b365210157482e4319a468f38\nF src/hwtime.h cb1d7e3e1ed94b7aa6fde95ae2c2daccc3df826be26fc9ed7fd90d1750ae6144\nF src/in-operator.md 10cd8f4bcd225a32518407c2fb2484089112fd71\nF src/insert.c 730455b1530552212ef67bf51dde86090d3995c432fb5806cd1addc58f2919b7\nF src/legacy.c d7874bc885906868cd51e6c2156698f2754f02d9eee1bae2d687323c3ca8e5aa\nF src/loadext.c d74f5e7bd51f3c9d283442473eb65aef359664efd6513591c03f01881c4ae2da\nF src/main.c 868ae7db7a54fe859bf2ca8b7a4f24e9fa03a6134abfb7c9801d08411ef5dacb\nF src/malloc.c 550021fcae36f0ffe9f8563d83e6385f9df307a854d55d7d0abb7241ee8dbcc6\nF src/mem0.c 6a55ebe57c46ca1a7d98da93aaa07f99f1059645\nF src/mem1.c c12a42539b1ba105e3707d0e628ad70e611040d8f5e38cf942cee30c867083de\nF src/mem2.c f1940d9e91948dd6a908fbb9ce3835c36b5d83c3\nF src/mem3.c 8768ac94694f31ffaf8b4d0ea5dc08af7010a35a\nF src/mem5.c 9bf955937b07f8c32541c8a9991f33ce3173d944\nF src/memdb.c 02a5fcec19b9d40dd449ca802dc1b2e8f93f255fbf2a886277a3c3800d8d35db\nF src/memjournal.c 7561c01c90958f3ba9bc6cb2d857123d932bdfa5539ea34427a0957b2e35154d\nF src/msvc.h 3a15918220367a8876be3fa4f2abe423a861491e84b864fb2b7426bf022a28f8\nF src/mutex.c bae36f8af32c22ad80bbf0ccebec63c252b6a2b86e4d3e42672ff287ebf4a604\nF src/mutex.h a7b2293c48db5f27007c3bdb21d438873637d12658f5a0bf8ad025bb96803c4a\nF src/mutex_noop.c 9d4309c075ba9cc7249e19412d3d62f7f94839c4\nF src/mutex_unix.c aaf9ebc3f89df28483c52208497a99a02cc3650011422fc9d4c57e4392f7fe58\nF src/mutex_w32.c 7670d770c94bbfe8289bec9d7f1394c5a00a57c37f892aab6b6612d085255235\nF src/notify.c 9711a7575036f0d3040ba61bc6e217f13a9888e7\nF src/os.c 669cc3839cc35d20f81faf0be1ab6d4581cea35e9d8f3a9d48a98d6571f7c285\nF src/os.h 48388821692e87da174ea198bf96b1b2d9d83be5dfc908f673ee21fafbe0d432\nF src/os_common.h b2f4707a603e36811d9b1a13278bffd757857b85\nF src/os_setup.h 0dbaea40a7d36bf311613d31342e0b99e2536586\nF src/os_unix.c 3e0e519f27683083a465e948e056759a8340728c222b5c394a135e0c57c220bc\nF src/os_win.c 035a813cbd17f355bdcad7ab894af214a9c13a1db8aeac902365350b98cd45a7\nF src/os_win.h 7b073010f1451abe501be30d12f6bc599824944a\nF src/pager.c 30f20d2263d3717f41a0d9a40f7a3d0f48ce1cfab461b875c6187ead9d6ad1c7\nF src/pager.h 217921e81eb5fe455caa5cda96061959706bcdd29ddb57166198645ef7822ac3\nF src/parse.y 17c1ae265e1b92cb1f3f1661b020e3eb31f2d8b9588322d2b6f2b22f25b674c9\nF src/pcache.c 385ff064bca69789d199a98e2169445dc16e4291fa807babd61d4890c3b34177\nF src/pcache.h 4f87acd914cef5016fae3030343540d75f5b85a1877eed1a2a19b9f284248586\nF src/pcache1.c 62714cbd1b7299a6e6a27a587b66b4fd3a836a84e1181e7f96f5c34a50917848\nF src/pragma.c 26e9ee514138b9697d4be6d8f9ca84655053026390cf10de838862238aa4aba9\nF src/pragma.h ec3b31eac9b1df040f1cc8cb3d89bc06605c3b4cb3d76f833de8d6d6c3f77f04\nF src/prepare.c 6049beb71385f017af6fc320d2c75a4e50b75e280c54232442b785fbb83df057\nF src/printf.c 9be6945837c839ba57837b4bc3af349eba630920fa5532aa518816defe42a7d4\nF src/random.c 80f5d666f23feb3e6665a6ce04c7197212a88384\nF src/resolve.c 618bf4f57fa0617cd5295117fea5f25955b76d278303405a8551c4204593011e\nF src/rowset.c d977b011993aaea002cab3e0bb2ce50cf346000dff94e944d547b989f4b1fe93\nF src/select.c 0fe10579de20eb8dc04ec9ed29659fa782bee2bcc85a35734637f3e2cabc2762\nF src/shell.c.in 4a3a9e1c11847b1904f2b01d087af1c052f660902755abab457cab1756817ded\nF src/sqlite.h.in 2a23e8161775253d9cf383c2c6aa559005dc787d350dcb0be67a6c4cc3bd1d19\nF src/sqlite3.rc 5121c9e10c3964d5755191c80dd1180c122fc3a8\nF src/sqlite3ext.h 72af51aa4e912e14cd495fb6e7fac65f0940db80ed950d90911aff292cc47ce2\nF src/sqliteInt.h 1ac4dfde728b9d5812d1223d668d5e1f43c6fe4f469d6a7a482f298a10a03210\nF src/sqliteLimit.h 1513bfb7b20378aa0041e7022d04acb73525de35b80b252f1b83fedb4de6a76b\nF src/status.c 46e7aec11f79dad50965a5ca5fa9de009f7d6bde08be2156f1538a0a296d4d0e\nF src/table.c b46ad567748f24a326d9de40e5b9659f96ffff34\nF src/tclsqlite.c 8cd2600e8de23dff6cdf84d39f46ca57139b061b28f6f80b166bace17d52ab1c\nF src/test1.c c654981c1d86ebc90dd23fcc0969e6c85e28112f0acc2e2224a97a2a33e7c42f\nF src/test2.c 3efb99ab7f1fc8d154933e02ae1378bac9637da5\nF src/test3.c 61798bb0d38b915067a8c8e03f5a534b431181f802659a6616f9b4ff7d872644\nF src/test4.c 405834f6a93ec395cc4c9bb8ecebf7c3d8079e7ca16ae65e82d01afd229694bb\nF src/test5.c 328aae2c010c57a9829d255dc099d6899311672d\nF src/test6.c e8d839fbc552ce044bec8234561a2d5b8819b48e29548ad0ba400471697946a8\nF src/test7.c 5612e9aecf934d6df7bba6ce861fdf5ba5456010\nF src/test8.c 3f7d0cc4e12e06832ba3db4455cb16867ccadafa602eb6ff5fcf097bffce56ed\nF src/test9.c 12e5ba554d2d1cbe0158f6ab3f7ffcd7a86ee4e5\nF src/test_async.c 195ab49da082053fdb0f949c114b806a49ca770a\nF src/test_autoext.c 915d245e736652a219a907909bb6710f0d587871\nF src/test_backup.c bf5da90c9926df0a4b941f2d92825a01bbe090a0\nF src/test_bestindex.c 78809f11026f18a93fcfd798d9479cba37e1201c830260bf1edc674b2fa9b857\nF src/test_blob.c ae4a0620b478548afb67963095a7417cd06a4ec0a56adb453542203bfdcb31ce\nF src/test_btree.c 8b2dc8b8848cf3a4db93f11578f075e82252a274\nF src/test_config.c e25826d693039cdd45963de378cbf39e3af0e8aa7a8a6fc159876f4e7b5a4f8c\nF src/test_delete.c e2fe07646dff6300b48d49b2fee2fe192ed389e834dd635e3b3bac0ce0bf9f8f\nF src/test_demovfs.c 86142ba864d4297d54c5b2e972e74f3141ae4b30f05b3a95824184ed2d3d7f91\nF src/test_devsym.c 6109b45c3db3ef7b002320947ed448c027356ab8b885156ff535fd8684d4a571\nF src/test_fs.c ba1e1dc18fd3159fdba0b9c4256f14032159785320dfbd6776eb9973cb75d480\nF src/test_func.c 181f992e5495644434c4f0e3cc72362a78c295eb2cf3ff4d02498b8bde7aa276\nF src/test_hexio.c d170d0e1a6431afdeac086a250d2595078288c2257615d37949355361399bcaa\nF src/test_init.c 4413c211a94b62157ca4c145b3f27c497f03c664\nF src/test_intarray.c 39b4181662a0f33a427748d87218e7578d913e683dc27eab7098bb41617cac71\nF src/test_intarray.h d57ae92f420cda25e22790dac474d60961bd0c500cbaa3338a05152d4a669ef7\nF src/test_journal.c a0b9709b2f12b1ec819eea8a1176f283bca6d688a6d4a502bd6fd79786f4e287\nF src/test_loadext.c 337056bae59f80b9eb00ba82088b39d0f4fe6dfd\nF src/test_malloc.c dec0aa821b230773aeb3dd11d652c1193f7cedb18a20b25659bc672288115242\nF src/test_md5.c 7268e1e8c399d4a5e181b64ac20e1e6f3bc4dd9fc87abac02db145a3d951fa8c\nF src/test_multiplex.c e054459f7633f3ff8ce1245da724f9a8be189e4e\nF src/test_multiplex.h 5436d03f2d0501d04f3ed50a75819e190495b635\nF src/test_mutex.c 7f4337ba23ee6b1d2ec81c189653608cb069926a\nF src/test_onefile.c f31e52e891c5fef6709b9fcef54ce660648a34172423a9cbdf4cbce3ba0049f4\nF src/test_osinst.c 98ef31ff03d55497829ca0f6c74a9f4e1aa48690\nF src/test_pcache.c a5cd24730cb43c5b18629043314548c9169abb00\nF src/test_quota.c 6cb9297115b551f433a9ad1741817a9831abed99\nF src/test_quota.h 2a8ad1952d1d2ca9af0ce0465e56e6c023b5e15d\nF src/test_rtree.c 671f3fae50ff116ef2e32a3bf1fe21b5615b4b7b\nF src/test_schema.c f575932cb6274d12147a77e13ea4b49d52408513\nF src/test_server.c a2615049954cbb9cfb4a62e18e2f0616e4dc38fe\nF src/test_sqllog.c 11e6ce7575f489155c604ac4b439f2ac1d3d5aef\nF src/test_superlock.c 4839644b9201da822f181c5bc406c0b2385f672e\nF src/test_syscall.c 1073306ba2e9bfc886771871a13d3de281ed3939\nF src/test_tclsh.c eeafce33ad2136d57e5dec10f1e9a4347447eb72ffd504a1c7b9c6bfe2e71578\nF src/test_tclvar.c 33ff42149494a39c5fbb0df3d25d6fafb2f668888e41c0688d07273dcb268dfc\nF src/test_thread.c 911d15fb14e19c0c542bdc8aabf981c2f10a4858\nF src/test_vdbecov.c f60c6f135ec42c0de013a1d5136777aa328a776d33277f92abac648930453d43\nF src/test_vfs.c 36822d696789535bdd0260f07d2c9a46546082fea8bb1d0a7354c7f9366e37ea\nF src/test_vfstrace.c bab9594adc976cbe696ff3970728830b4c5ed698\nF src/test_windirent.c a895e2c068a06644eef91a7f0a32182445a893b9a0f33d0cdb4283dca2486ac1\nF src/test_windirent.h 90dfbe95442c9762357fe128dc7ae3dc199d006de93eb33ba3972e0a90484215\nF src/test_window.c cdae419fdcea5bad6dcd9368c685abdad6deb59e9fc8b84b153de513d394ba3f\nF src/test_wsd.c 41cadfd9d97fe8e3e4e44f61a4a8ccd6f7ca8fe9\nF src/threads.c 4ae07fa022a3dc7c5beb373cf744a85d3c5c6c3c\nF src/tokenize.c 7b17f6e2f20f6cbcb0b215025a86b7457c38451fc7622f705e553d7a488c572d\nF src/treeview.c 41d928f04d65931b15f629b4938e9f2c7dc259f02eef34cb2cc6e293f5af813f\nF src/trigger.c 681ccdb910a87243940d63f99b26190d9c5d2534c2ded3c0825b7c0e315a342e\nF src/update.c 07a50767f7d3e26d4c887c31cd66448d700d3215caea6023acf7269336097df7\nF src/upsert.c b445315c8958d8f17ec3297d06842e61dacaad0633ccaec1e4e160de7e562212\nF src/utf.c 2f0fac345c7660d5c5bd3df9e9d8d33d4c27f366bcfb09e07443064d751a0507\nF src/util.c 66b22af7b359ce6493c34fef28c87d5c2d1765f212d6e4cd5e08d99ac30b89bb\nF src/vacuum.c 82dcec9e7b1afa980288718ad11bc499651c722d7b9f32933c4d694d91cb6ebf\nF src/vdbe.c b67d6af853e03c3dd6d1116351567f62d8a2c10d3bd6db5f7f366e75d11c6653\nF src/vdbe.h fdbc0a11e5768a702b46ce63286f60e22e71351a29bd98b3666405e1fccc7802\nF src/vdbeInt.h bd589b8b7273286858950717e0e1ec5c88b18af45079a3366dc1371865cea704\nF src/vdbeapi.c 1252d80c548711e47a6d84dae88ed4e95d3fbb4e7bd0eaa1347299af7efddf02\nF src/vdbeaux.c 0bbbdc70c573d5112b74a3d555dd51c76ee3f8b6d43cf07e5105ced6a3ec0d10\nF src/vdbeblob.c 253ed82894924c362a7fa3079551d3554cd1cdace39aa833da77d3bc67e7c1b1\nF src/vdbemem.c 2eb00a4d1a7d2c97510a4d1ccaf4e12c9143f2ced1c6b96b5eddc372183c9121\nF src/vdbesort.c a3be032cc3fee0e3af31773af4a7a6f931b7230a34f53282ccf1d9a2a72343be\nF src/vdbetrace.c fa3bf238002f0bbbdfb66cc8afb0cea284ff9f148d6439bc1f6f2b4c3b7143f0\nF src/vtab.c 108f79166d4a232a8bfb9d46e2fbec191f83a87fe97f7b93fc4de976c3fa3434\nF src/vxworks.h d2988f4e5a61a4dfe82c6524dd3d6e4f2ce3cdb9\nF src/wal.c 15a2845769f51ba132f9cf0b2c7a6887a91fc8437892dbcce9fcdc68b66d60a1\nF src/wal.h 606292549f5a7be50b6227bd685fa76e3a4affad71bb8ac5ce4cb5c79f6a176a\nF src/walker.c a137468bf36c92e64d2275caa80c83902e3a0fc59273591b96c6416d3253d05d\nF src/where.c bb2d3c08de9ae57f6ff17459cefd9e38e82d3e7aaa544bc49503b6fdaaf2c800\nF src/whereInt.h 4a296fd4fa79fdcbc2b5e8c1b898901617655811223e1082b899c23ecb092217\nF src/wherecode.c 7efa97f4dc2f95548611deba68f0210ab357725899a9bae5391a525e48271875\nF src/whereexpr.c 39b6a538804c6e1248c22b33e09d00f89ae6a099c849c4d841ce3995562287b4\nF src/window.c a77f12078dd4b10e655d4ba5a73ca32dbe00e0206018305185c7e86445d3f429\nF test/8_3_names.test ebbb5cd36741350040fd28b432ceadf495be25b2\nF test/affinity2.test ce1aafc86e110685b324e9a763eab4f2a73f737842ec3b687bd965867de90627\nF test/affinity3.test 6a101af2fc945ce2912f6fe54dd646018551710d\nF test/aggerror.test a867e273ef9e3d7919f03ef4f0e8c0d2767944f2\nF test/aggnested.test 12106f0748e8e9bfc1a8e6840e203e051eae06a26ed13fc9fd5db108a8d6db54\nF test/alias.test 4529fbc152f190268a15f9384a5651bbbabc9d87\nF test/all.test 2ecb8bbd52416642e41c9081182a8df05d42c75637afd4488aace78cc4b69e13\nF test/alter.test 16ed8d2470193f34bc711e51506ff1211ebfab8025ca3b9510ff2aef139874cb\nF test/alter2.test a966ccfcddf9ce0a4e0e6ff1aca9e6e7948e0e242cd7e43fc091948521807687\nF test/alter3.test 9351a9f0c59ff9dddecccaaa2f777ffee5369870c63d30d3a74add815254ec0f\nF test/alter4.test 74b22251c5e9c48093cfc4921ed9c11b59df84634aeeb00e501773320beb8424\nF test/alterauth.test 63442ba61ceb0c1eeb63aac1f4f5cebfa509d352276059d27106ae256bafc959\nF test/alterauth2.test c0a1ddf5b93d93cb0d15ba7acaf0c5c6fb515bbe861ede75b2d3fabad33b6499\nF test/altercol.test 54374d2ba18af25bb24e23acf18a60270d4ec120b7ec0558078b59d5aa1a31ad\nF test/alterlegacy.test 82022721ce0de29cedc9a7af63bc9fcc078b0ee000f8283b4b6ea9c3eab2f44b\nF test/altermalloc.test 167a47de41b5c638f5f5c6efb59784002b196fff70f98d9b4ed3cd74a3fb80c9\nF test/altermalloc2.test fa7b1c1139ea39b8dec407cf1feb032ca8e0076bd429574969b619175ad0174b\nF test/altertab.test 4d8b79b0b88b62b90b710390df14fe99e0a3578345526886eaa550e28e3065dc\nF test/altertab2.test 8883693952f6d7fb5f754dbf1d694ed780aa883027bef04cb1fb99a3b88c9272\nF test/altertab3.test 3faf56b3f5af0dd2c12d954db4746521fc96543222da5b6e2633ed417640ce83\nF test/amatch1.test b5ae7065f042b7f4c1c922933f4700add50cdb9f\nF test/analyze.test 547bb700f903107b38611b014ca645d6b5bb819f5210d7bf39c40802aafeb7d7\nF test/analyze3.test 01f0b122e3e54ad2544f14f7cc7dcb4c2cb8753cad5e88c6b8d49615b3fd6a2b\nF test/analyze4.test cdf88f3f72b0f0643a1ff6c730fc5af1e42464d47478d9fbac84c333f72c014e\nF test/analyze5.test fa5131952303ac4146aba101b116b9c8cb89e2637531c334a6df7f7d19dddc0d\nF test/analyze6.test 6c3f7df2996cb6872f355a6ac1eb6d5de00a5a9288214bad7ef25c97d9cc72dc\nF test/analyze7.test 6ef0b12369f61ddeadc7d8a705c40e6b52cb29f63de3a4c56581b510b46b5783\nF test/analyze8.test 36ce54947710bd44e4f9484e1ad07e725ef01a9d7078b417c1bc884356febe4d\nF test/analyze9.test 9fbf0e0101eef4f5dc149769aa14e10b76ee06e7c28598264b32173cd1999a54\nF test/analyzeC.test 489fe2ea3be3f17548e8dd895f1b41c9669b52de1b0861f5bffe6eec46eac710\nF test/analyzeD.test e50cd0b3e6063216cc0c88a1776e8645dc0bd65a6bb275769cbee33b7fd8d90c\nF test/analyzeE.test 8684e8ac5722fb97c251887ad97e5d496a98af1d\nF test/analyzeF.test 9e1a0537949eb5483642b1140a5c39e5b4025939024b935398471fa552f4dabb\nF test/analyzer1.test 459fa02c445ddbf0101a3bad47b34290a35f2e49\nF test/async.test 1d0e056ba1bb9729283a0f22718d3a25e82c277b\nF test/async2.test c0a9bd20816d7d6a2ceca7b8c03d3d69c28ffb8b\nF test/async3.test d73a062002376d7edc1fe3edff493edbec1fc2f7\nF test/async4.test 1787e3952128aa10238bf39945126de7ca23685a\nF test/async5.test 383ab533fdb9f7ad228cc99ee66e1acb34cc0dc0\nF test/atof1.test ff0b0156fd705b67c506e1f2bfe9e26102bea9bd\nF test/atomic.test 065a453dde33c77ff586d91ccaa6ed419829d492dbb1a5694b8a09f3f9d7d061\nF test/atomic2.test b6863b4aa552543874f80b42fb3063f1c8c2e3d8e56b6562f00a3cc347b5c1da\nF test/atrc.c ec92d56d8fbed9eb3e11aaf1ab98cf7dd59e69dae31f128013f1d97e54e7dfed\nF test/attach.test 21bce8681f780a8d631a5ec7ecd0d849bfe84611257b038ae4ffeccc609d8a4e\nF test/attach2.test 256bd240da1835fb8408dd59fb7ef71f8358c7a756c46662434d11d07ba3a0ce\nF test/attach3.test c59d92791070c59272e00183b7353eeb94915976\nF test/attach4.test aa05b1d8218b24eba5a7cccf4f224f514ba57ba705c9267f09d2bb63fed0eea1\nF test/attachmalloc.test 12c4f028e570acf9e0a4b0b7fe6f536e21f3d5ebddcece423603d0569beaf438\nF test/auth.test 2154625c05bc79f0e0ea72cb2358395a8041243caa0fd7ce7617d50da4331794\nF test/auth2.test 9eb7fce9f34bf1f50d3f366fb3e606be5a2000a1\nF test/auth3.test db21405b95257c24d29273b6b31d0efc59e1d337e3d5804ba2d1fd4897b1ae49\nF test/autoanalyze1.test b9cc3f32a990fa56669b668d237c6d53e983554ae80c0604992e18869a0b2dec\nF test/autoinc.test 997d6f185f138229dc4251583a1d04816423dddc2fc034871a01aeb1d728cb39\nF test/autoindex1.test 96185415f5faacd5b8d7a7f505efddd5abb1f111d58338e9c0b1dc40b87cd3cc\nF test/autoindex2.test 12ef578928102baaa0dc23ad397601a2f4ecb0df\nF test/autoindex3.test 2dd997d6590438b53e4f715f9278aa91c9299cf3f81246a0915269c35beb790e\nF test/autoindex4.test 49d3cd791a9baa16fb461d7ea3de80d019a819cf\nF test/autoindex5.test a5d72fe8c217cc0ea356dc6fa06a282a8a3fc53aa807709d79dba07a8f248102\nF test/autovacuum.test 0831cd34e14695d297187f7f6519265e3121c5b0a1720e548e86829e796129e9\nF test/autovacuum_ioerr2.test 8a367b224183ad801e0e24dcb7d1501f45f244b4\nF test/avtrans.test b7dc25459ecbd86c6fa9c606ee3068f59d81e225118617dcf2bbb6ded2ade89e\nF test/backcompat.test 3e64cedda754c778ef6bbe417b6e7a295e662a4d\nF test/backup.test dd4a5ff756e3df3931dacb1791db0584d4bad989\nF test/backup2.test 1fd1ad8c5b3d2d5b9c0cce4143a4fc610d51ddc6ae16a7a122973d43e6b50bbd\nF test/backup4.test 8f6fd48e0dfde77b9a3bb26dc471ede3e101df32\nF test/backup5.test ee5da6d7fe5082f5b9b0bbfa31d016f52412a2e4\nF test/backup_ioerr.test 4c3c7147cee85b024ecf6e150e090c32fdbb5135\nF test/backup_malloc.test 0c9abdf74c51e7bedb66d504cd684f28d4bd4027\nF test/badutf.test d5360fc31f643d37a973ab0d8b4fb85799c3169f\nF test/badutf2.test f310fd3b24a491b6b77bccdf14923b85d6ebcce751068c180d93a6b8ff854399\nF test/bc_common.tcl b5e42d80305be95697e6370e015af571e5333a1c\nF test/bestindex1.test 705b57d7f51d53ee5fd043dd9666236e1fc18f4d59abf51da0ea5ea1b4804947\nF test/bestindex2.test 9a0ccd320b6525eec3a706aae6cdab7e1b7b5abca75027e39f39f755e76e5928\nF test/bestindex3.test 7622e792ff2da16d262d3cea6ad914591ac4806d57ed128e6c940b7920b47b84\nF test/bestindex4.test 038e3d0789332f3f1d61474f9bbc9c6d08c6bd1783a978f31f38ad82688de601\nF test/bestindex5.test 67c1166131bb59f9e47c00118f7d432ca5491e6cae6ca3f87ca9db20103a78f9\nF test/bestindex6.test d856a9bb63d927493575823eed44053bc36251e241aa364e54d0f2a2d302e1d4\nF test/between.test 68137a6e941c221417c15b6fe2d55f27bb1b6ab48bdf9e2aa51efdd85bc53802\nF test/bigfile.test aa74f4e5db51c8e54a1d9de9fa65d01d1eb20b59\nF test/bigfile2.test 1b489a3a39ae90c7f027b79110d6b4e1dbc71bfc\nF test/bigmmap.test 31dad31573638bd32de866cdefd11843f75685be4ba6aec1a47918f098f1899b\nF test/bigrow.test f0aeb7573dcb8caaafea76454be3ade29b7fc747\nF test/bigsort.test 8299fa9298f4f1e02fc7d2712e8b77d6cd60e5a2\nF test/bind.test 1e136709b306f7ed3192d349c2930d89df6ab621654ad6f1a72381d3fe76f483\nF test/bindxfer.test efecd12c580c14df5f4ad3b3e83c667744a4f7e0\nF test/bitvec.test 75894a880520164d73b1305c1c3f96882615e142\nF test/blob.test e7ac6c7d3a985cc4678c64f325292529a69ae252\nF test/boundary1.tcl 6421b2d920d8b09539503a8673339d32f7609eb1\nF test/boundary1.test 66d7f4706ccdb42d58eafdb081de07b0eb42d77b\nF test/boundary2.tcl e34ef4e930cf1083150d4d2c603e146bd3b76bcb\nF test/boundary2.test 9ae758d7dab7e882c8b6cc4a6a10278385bff8fa\nF test/boundary3.tcl 23361e108a125dca9c4080c2feb884fe54d69243\nF test/boundary3.test 56ef82096b4329aca2be74fa1e2b0f762ea0eb45\nF test/boundary4.tcl 0bb4b1a94f4fc5ae59b79b9a2b7a140c405e2983\nF test/boundary4.test 89e02fa66397b8a325d5eb102b5806f961f8ec4b\nF test/btree01.test e08b3613540145b353f20c81cb18ead54ff12e0f\nF test/btree02.test 7555a5440453d900410160a52554fe6478af4faf53098f7235f1f443d5a1d6cc\nF test/btreefault.test c2bcb542685eea44621275cfedbd8a13f65201e3\nF test/busy.test 510dc6daaad18bcbbc085bcc6217d6dc418def5e73f72ce1475eea0cb7834727\nF test/cache.test 13bc046b26210471ca6f2889aceb1ea52dc717de\nF test/cacheflush.test af25bb1509df04c1da10e38d8f322d66eceedf61\nF test/cachespill.test 895997f84a25b323b166aecb69baab2d6380ea98f9e0bcc688c4493c535cfab9\nF test/capi2.test 34a1a9a96d543a2ec2c209696b11b164444f57253b1f2cba1c2e53fadede6c7b\nF test/capi3.test 3910a73c38ac76d69778dd9eb481ab7cd6ed59117fc047b4f6056a5c72529de1\nF test/capi3b.test efb2b9cfd127efa84433cd7a2d72ce0454ae0dc4\nF test/capi3c.test 54e2dc0c8fd7c34ad1590d1be6864397da2438c95a9f5aee2f8fbc60c112e44b\nF test/capi3d.test aba917805573a03deed961a21f07a5a84505ad0a616f7e3fc1508844a15bccc4\nF test/capi3e.test 3d49c01ef2a1a55f41d73cba2b23b5059ec460fe\nF test/cast.test 3619f0c58c2e4b2a94aa86e75607e497d34ef40ab74418e71aef7b4ca5155895\nF test/cffault.test 9d6b20606afe712374952eec4f8fd74b1a8097ef\nF test/check.test 25c6035302c846c7ff8e681cf8284473f6f01be94d327de60a688ad84ab01f8b\nF test/checkfault.test da6cb3d50247169efcb20bdf57863a3ccfa1d27d9e55cd324f0680096970f014\nF test/chunksize.test 427d87791743486cbf0c3b8c625002f3255cb3a89c6eba655a98923b1387b760\nF test/close.test eccbad8ecd611d974cbf47278c3d4e5874faf02d811338d5d348af42d56d647c\nF test/closure01.test 9905883f1b171a4638f98fc764879f154e214a306d3d8daf412a15e7f3a9b1e0\nF test/coalesce.test cee0dccb9fbd2d494b77234bccf9dc6c6786eb91\nF test/collate1.test 4178fda6f4cd757b7a278e6b83805868fb1eb46edafb6e3d4bcc2419f8d93202\nF test/collate2.test 9aaa410a00734e48bcb27f3872617d6f69b2a621\nF test/collate3.test 89defc49983ddfbf0a0555aca8c0521a676f56a5\nF test/collate4.test c953715fb498b87163e3e73dd94356bff1f317bd\nF test/collate5.test 65d928034d30d2d263a80f6359f7549ee1598ec6\nF test/collate6.test 8be65a182abaac8011a622131486dafb8076e907\nF test/collate7.test 8ec29d98f3ee4ccebce6e16ce3863fb6b8c7b868\nF test/collate8.test cd9b3d3f999b8520ffaa7cc1647061fc5bab1334\nF test/collate9.test 3adcc799229545940df2f25308dd1ad65869145a\nF test/collateA.test b8218ab90d1fa5c59dcf156efabb1b2599c580d6\nF test/collateB.test 1e68906951b846570f29f20102ed91d29e634854ee47454d725f2151ecac0b95\nF test/colmeta.test 2c765ea61ee37bc43bbe6d6047f89004e6508eb1\nF test/colname.test 87ad5458bb8709312dac0d6755fd30e8e4ca83298d0a9ef6e5c24277a3c3390e\nF test/conflict.test c7cc007e2af151516ddf38f7412fe10d473a694f55e3df437e2c7b31c2590e8d\nF test/conflict2.test bb0b94cf7196c64a3cbd815c66d3ee98c2fecd9c\nF test/conflict3.test f62a2d0cad9162a60e6458fc913dff3a2208feca924120c21737cfee65a6a74a\nF test/contrib01.test 2a1cbc0f2f48955d7d073f725765da6fbceda6b4\nF test/corrupt.test d7cb0300e4a297147b6a05e92a1684bc8973635c3bcaa3d66e983c9cbdbf47a3\nF test/corrupt2.test bb50042cf9a1f1023d73af325d47eb02a6bb11e3c52f8812644b220c5d4bca35\nF test/corrupt3.test f95d7bf78109e0b84eb285a787ce91a3fd6a2dd7d0cb55882abff3bdc081a57e\nF test/corrupt4.test 8d1d86b850fcc43e417450454f2044e52d55778a\nF test/corrupt5.test 387be3250795e2a86e6234745558b80efb248a357d0cd8e53bce75c7463f545d\nF test/corrupt6.test fc6a891716139665dae0073b6945e3670bf92568\nF test/corrupt7.test b036f94bda4b0b23a2919bf717046ce9ecca4543\nF test/corrupt8.test 2399dfe40d2c0c63af86706e30f3e6302a8d0516\nF test/corrupt9.test 730a3db08d4ab9aa43392ea30d9c2b4879cbff85\nF test/corruptA.test 112f4b2ae0b95ebf3ea63718642fb969a93acea557ace3a307234d19c245989b\nF test/corruptB.test 73a8d6c0b9833697ecf16b63e3c5c05c945b5dec\nF test/corruptC.test 74d4498fd25759618b393f1e9cde111de828b88c1848ab320f6c179fd52b5a60\nF test/corruptD.test 33a37ce3ed56a20093ceee778cd2d7109c7085a59f3213d2baede11d952e8e50\nF test/corruptE.test 4143791f2dfb443aec5b7fabfa5821e6063eccc3b49b06f212c2f014715fd476\nF test/corruptF.test be9fde98e4c93648f1ba52b74e5318edc8f59fe4\nF test/corruptG.test adf79b669cbfd19e28c8191a610d083ae53a6d51\nF test/corruptH.test 79801d97ec5c2f9f3c87739aa1ec2eb786f96454\nF test/corruptI.test a17bbf54fdde78d43cf3cc34b0057719fd4a173a3d824285b67dc5257c064c7b\nF test/corruptJ.test 4d5ccc4bf959464229a836d60142831ef76a5aa4\nF test/corruptK.test 5b4212fe346699831c5ad559a62c54e11c0611bdde1ea8423a091f9c01aa32af\nF test/corruptL.test a22a7bbf8da7603960f0bfcc62a68d1c3c41963786bd832ff804ba5e2458fb9c\nF test/corruptM.test 7d574320e08c1b36caa3e47262061f186367d593a7e305d35f15289cc2c3e067\nF test/cost.test 51f4fcaae6e78ad5a57096831259ed6c760e2ac6876836e91c00030fad385b34\nF test/count.test cb2e0f934c6eb33670044520748d2ecccd46259c\nF test/countofview.test e17d6e6688cf74f22783c9ec6e788c0790ee4fbbaee713affd00b1ac0bb39b86\nF test/coveridxscan.test 5ec98719a2e2914e8908dc75f7247d9b54a26df04625f846ac7900d5483f7296\nF test/crash.test fb9dc4a02dcba30d4aa5c2c226f98b220b2b959f\nF test/crash2.test 5b14d4eb58b880e231361d3b609b216acda86651\nF test/crash3.test 8f5de9d32ab9ab95475a9efe7f47a940aa889418\nF test/crash4.test fe2821baf37168dc59dd733dcf7dba2a401487bc\nF test/crash5.test f14ff37eddc41991be4eb63568f86caa306fd9962a0ae3750db8836777bb7aae\nF test/crash6.test 4c56f1e40d0291e1110790a99807aa875b1647ba\nF test/crash7.test 1a194c4900a255258cf94b7fcbfd29536db572df\nF test/crash8.test 64366e459c28dd62edfb7ad87253a409c7533b92d16fcc479a6a8131bdcc3100\nF test/crashM.test d95f59046fa749b0d0822edf18a717788c8f318d\nF test/crashtest1.c 09c1c7d728ccf4feb9e481671e29dda5669bbcc2\nF test/createtab.test 85cdfdae5c3de331cd888d6c66e1aba575b47c2e3c3cc4a1d6f54140699f5165\nF test/cse.test 277350a26264495e86b1785f34d2d0c8600e021c\nF test/csv01.test c9c3af0d58c34e9ac970c5875a77939edb958762c8aafb95409e19a3f088b6cd\nF test/ctime.test 78749e6c9a5f0010d67985be80788f841e3cd2da18114e2ed6010399a7d807f3\nF test/cursorhint.test 7bc346788390475e77a345da2b92270d04d35856\nF test/cursorhint2.test 6f3aa9cb19e7418967a10ec6905209bcbb5968054da855fc36c8beee9ae9c42f\nF test/dataversion1.test 6e5e86ac681f0782e766ebcb56c019ae001522d114e0e111e5ebf68ccf2a7bb8\nF test/date.test 9b73bbeb1b82d9c1f44dec5cf563bf7da58d2373\nF test/date2.test 5ef8265c71460cda6b1698bf18f4bb0ffb40ac08c5092f6afe84d398c2feb5be\nF test/dbdata.test 042f49acff3438f940eeba5868d3af080ae64ddf26ae78f80c92bec3ca7d8603\nF test/dbfuzz.c 73047c920d6210e5912c87cdffd9a1c281d4252e\nF test/dbfuzz001.test 42aad1dcef6219fbee86a9b7d08832c9bbb2e41508f6f128ae91745927276292\nF test/dbfuzz2-seed1.db e6225c6f3d7b63f9c5b6867146a5f329d997ab105bee64644dc2b3a2f2aebaee\nF test/dbfuzz2.c c2c9cb40082a77b7e95ffb8b2da1e93322efadfb1c8c1e0001c95a0af1e156c2\nF test/dbpage.test 650234ba683b9d82b899c6c51439819787e7609f17a0cc40e0080a7b6443bc38\nF test/dbstatus.test 4a4221a883025ffd39696b3d1b3910b928fb097d77e671351acb35f3aed42759\nF test/dbstatus2.test f5fe0afed3fa45e57cfa70d1147606c20d2ba23feac78e9a172f2fe8ab5b78ef\nF test/default.test 3e46c421eebefd2787c2f96673efabf792d360f3a1d5073918cbe450ce672a62\nF test/delete.test 31832b0c45ecb51a54348c68db173be462985901e6ed7f403d6d7a8f70ab4ef0\nF test/delete2.test 3a03f2cca1f9a67ec469915cb8babd6485db43fa\nF test/delete3.test 555e84a00a99230b7d049d477a324a631126a6ab\nF test/delete4.test 6aa279f459f4aa792cc251435c3809415c1ecaf9f27dce91675e26f05b503db3\nF test/delete_db.test 096d828493c7907f9ea11a7098ea6a0f73edba89406487d5d6cc2228dc4ab8b0\nF test/descidx1.test edc8adee58d491b06c7157c50364eaf1c3605c9c19f8093cb1ea2b6184f3ac13\nF test/descidx2.test a0ba347037ff3b811f4c6ceca5fd0f9d5d72e74e59f2d9de346a9d2f6ad78298\nF test/descidx3.test 953c831df7ea219c73826dfbf2f6ee02d95040725aa88ccb4fa43d1a1999b926\nF test/diskfull.test 106391384780753ea6896b7b4f005d10e9866b6e\nF test/distinct.test a1783b960ad8c15a77cd9f207be072898db1026c\nF test/distinct2.test 11b0594c932098e969d084ba45ab81d5040f4d4e766db65d49146705a305ed98\nF test/distinctagg.test 1a6ef9c87a58669438fc771450d7a72577417376\nF test/e_blobbytes.test 439a945953b35cb6948a552edaec4dc31fd70a05\nF test/e_blobclose.test 4b3c8c60c2171164d472059c73e9f3c1844bb66d\nF test/e_blobopen.test e95e1d40f995056f6f322cd5e1a1b83a27e1a145\nF test/e_blobwrite.test f87ff598b67af5b3ec002a8d83e804dc8d23808e88cf0080c176612fc9ffce14\nF test/e_changes.test fd66105385153dbf21fdb35eb8ef6c3e1eade579\nF test/e_createtable.test 1c602347e73ab80b11b9fa083f47155861aaafcff8054aac9e0b76d0df33b0a7\nF test/e_delete.test ab39084f26ae1f033c940b70ebdbbd523dc4962e\nF test/e_droptrigger.test 3cd080807622c13e5bbb61fc9a57bd7754da2412\nF test/e_dropview.test 21ce09c361227ddbc9819a5608ee2700c276bdd5\nF test/e_expr.test 328d2d7c84f8e53e942a13eac771b337bcdfcf4c3569324001868b5639f3c857\nF test/e_fkey.test 2febb2084aef9b0186782421c07bc9d377abf067c9cb4efd49d9647ae31f5afe\nF test/e_fts3.test 17ba7c373aba4d4f5696ba147ee23fd1a1ef70782af050e03e262ca187c5ee07\nF test/e_insert.test f02f7f17852b2163732c6611d193f84fc67bc641fb4882c77a464076e5eba80e\nF test/e_reindex.test 2b0e29344497d9a8a999453a003cb476b6b1d2eef2d6c120f83c2d3a429f3164\nF test/e_resolve.test a61751c368b109db73df0f20fc75fb47e166b1d8\nF test/e_select.test f9474205669a7736ef725b29cc7ae9e8601919a3d0ffc0ab30745a028f2a4b61\nF test/e_select2.test aceb80ab927d46fba5ce7586ebabf23e2bb0604f\nF test/e_totalchanges.test b12ee5809d3e63aeb83238dd501a7bca7fd72c10\nF test/e_update.test f46c2554d915c9197548681e8d8c33a267e84528\nF test/e_uri.test 47eeb2960e74613f0f8722b2f13aef08fde69daa16e5380ac93df84dac8b1f72\nF test/e_vacuum.test 0d8832a2ce92350db0d0cff47b419465fd9772562e1f77ff7d9478c07a4980d2\nF test/e_wal.test ae9a593207a77d711443ee69ffe081fda9243625\nF test/e_walauto.test 248af31e73c98df23476a22bdb815524c9dc3ba8\nF test/e_walckpt.test 28c371a6bb5e5fe7f31679c1df1763a19d19e8a0\nF test/e_walhook.test 01b494287ba9e60b70f6ebf3c6c62e0ffe01788e344a4846b08e5de0b344cb66\nF test/emptytable.test a38110becbdfa6325cd65cb588dca658cd885f62\nF test/enc.test e54531cd6bf941ee6760be041dff19a104c7acea\nF test/enc2.test 83437a79ba1545a55fb549309175c683fb334473\nF test/enc3.test 6807f7a7740a00361ca8d0ccd66bc60c8dc5f2b6\nF test/enc4.test c8f1ce3618508fd0909945beb8b8831feef2c020\nF test/eqp.test 84879b63e3110552bf8ce648a3507dc3ceb72109ecec83c2aef0db37a27f6382\nF test/errmsg.test eae9f091eb39ce7e20305de45d8e5d115b68fa856fba4ea6757b6ca3705ff7f9\nF test/eval.test a64c9105d6ff163df7cf09d6ac29cdad5922078c\nF test/exclusive.test 1206b87e192497d78c7f35552e86a9d05421498da300fb1cce5ca5351ccde3c3\nF test/exclusive2.test 984090e8e9d1b331d2e8111daf6e5d61dda0bef7\nF test/exec.test e949714dc127eaa5ecc7d723efec1ec27118fdd7\nF test/exists.test 79a75323c78f02bbe9c251ea502a092f9ef63dac\nF test/expr.test 7cb55e80aeb41d65fec968c08212505123063fea60bdc355d764d747670e9eea\nF test/expr2.test c27327ae9c017a7ff6280123f67aff496f912da74d78c888926d68b46ec75fd8\nF test/extension01.test 00d13cec817f331a687a243e0e5a2d87b0e358c9\nF test/extraquick.test cb254400bd42bfb777ff675356aabf3287978f79\nF test/fallocate.test 37a62e396a68eeede8f8d2ecf23573a80faceb630788d314d0a073d862616717\nF test/filectrl.test 6e871c2d35dead1d9a88e176e8d2ca094fec6bb3\nF test/filefmt.test f393e80c4b8d493b7a7f8f3809a8425bbf4292af1f5140f01cb1427798a2bbd4\nF test/filter1.test fe7fcfeff48ca399fbc9577f55b60c8be8ccfdffc5e3b4ace21dc3c3e59f0f6a\nF test/filter2.tcl 44e525497ce07382915f01bd29ffd0fa49dab3adb87253b5e5103ba8f93393e8\nF test/filter2.test 485cf95d1f6d6ceee5632201ca52a71868599836f430cdee42e5f7f14666e30a\nF test/filterfault.test c08fb491d698e8df6c122c98f7db1c65ffcfcad2c1ab0e07fa8a5be1b34eaa8b\nF test/fkey1.test d11dbb8a93ead9b5c46ae5d02da016d61245d47662fb2d844c99214f6163f768\nF test/fkey2.test d35d1c81e7569bdd2b872e91750f7098117d2e8291369f70b7e3d50a0e523dc2\nF test/fkey3.test 76d475c80b84ee7a5d062e56ccb6ea68882e2b49\nF test/fkey4.test 86446017011273aad8f9a99c1a65019e7bd9ca9d\nF test/fkey5.test 24dd28eb3d9f1b5a174f47e9899ace5facb08373a4223593c8c631e6cf9f7d5a\nF test/fkey6.test d078a1e323a740062bed38df32b8a736fd320dc0\nF test/fkey7.test 64fb28da03da5dfe3cdef5967aa7e832c2507bf7fb8f0780cacbca1f2338d031\nF test/fkey8.test 48ef829d63f5f7b37aabd4df9363ac05f65539d1da8c4a44251631769d920579\nF test/fkey_malloc.test 594a7ea1fbab553c036c70813cd8bd9407d63749\nF test/fordelete.test eb93a2f34137bb87bdab88fcab06c0bd92719aff\nF test/format4.test eeae341953db8b6bda7f549044797c3278a6cc345d11ada81471671b654f8ef4\nF test/fts-9fd058691.test 78b887e30ae6816df0e1fed6259de4b5a64ad33c\nF test/fts1a.test 46090311f85da51bb33bd5ce84f7948359c6d8d7\nF test/fts1b.test 5d8a01aefbecc8b7442b36c94c05eb7a845462d5\nF test/fts1c.test 85a525ce7428907469b4cce13d5563ce542ce64c\nF test/fts1d.test a73deace5c18df4a549b12908bade4f05dcf1a2f\nF test/fts1e.test 77244843e925560b5a0b70069c3e7ab62f181ed2\nF test/fts1f.test 2d6cb10d8b7a4e6edc321bbdb3982f1f48774714\nF test/fts1i.test 6bfe08cdfdced063a39a50c8601da65e6274d879\nF test/fts1j.test e3797475796043a161e348c46a309664cac83f7f\nF test/fts1k.test 65d3b41487b9f738d11b0f00eca375c0ca6bd970\nF test/fts1l.test 15c119ed2362b2b28d5300c0540a6a43eab66c36\nF test/fts1m.test 2d9ca67b095d49f037a914087cc0a61e89da4f0c\nF test/fts1n.test a2317dcd27b1d087ee3878b30e0a59c593c98b7a\nF test/fts1o.test d1554caede42bba2c82fe613bcc921856c196b752449ead0470fac52a20fd3b8\nF test/fts1porter.test d86e9c3e0c7f8ff95add6582b4b585fb4e02b96d\nF test/fts2.test e3fb95f96a650411574efc136f3fb10eef479ed7\nF test/fts2a.test 473a5c8b473a4e21a8e3fddaed1e59666e0c6ab7\nF test/fts2b.test 964abc0236c849c07ca1ae496bb25c268ae94816\nF test/fts2c.test ffb5a35230ac72c4354535c547965ce6824537c0\nF test/fts2d.test b7eaa671ca9a16997f3e5b158ee777ae21052b0b\nF test/fts2e.test 2da13dbc2d009105f42196845c1e1ce136c03d38\nF test/fts2f.test cf84096235991709c1e61caa389632aa0a4f976d\nF test/fts2g.test 3d26fe171bda6133ebf5a380731d70eaa2ef2f6f73d79769cf8946e622b6d597\nF test/fts2h.test 223af921323b409d4b5b18ff4e51619541b174bb\nF test/fts2i.test 1b22451d1f13f7c509baec620dc3a4a754885dd6\nF test/fts2j.test 298fa1670aa21cd445b282d139b70c72e7ade12b\nF test/fts2k.test c7ebf4a4937594aa07459e3e1bca1251c1be8659\nF test/fts2l.test 3333336621524cf7d60bb62d6ef6ab69647866ed\nF test/fts2m.test 4b30142ead6f3ed076e880a2a464064c5ad58c51\nF test/fts2n.test 12b9c5352128cebd1c6b8395e43788d4b09087c2\nF test/fts2o.test 4054ac7433eb5440f1b1d200cfa449342dc4aabd991759139813e17c73e5bf9a\nF test/fts2p.test 4b48c35c91e6a7dbf5ac8d1e5691823cc999aafb\nF test/fts2q.test b2fbbe038b7a31a52a6079b215e71226d8c6a682\nF test/fts2r.test b154c30b63061d8725e320fba1a39e2201cadd5e\nF test/fts2token.test d8070b241a15ff13592a9ae4a8b7c171af6f445a\nF test/fts3.test 672a040ea57036fb4b6fdc09027c18d7d24ab654\nF test/fts3_common.tcl dffad248f9ce090800e272017d2898005c28ee6314fc1dd5550643a02666907a\nF test/fts3aa.test 814d60a1ba30b4a71d8f9306a6564bc7b636dd6efacd2ad80306f9b23ef3ebee\nF test/fts3ab.test 7f6cf260ae80dda064023df8e8e503e9a412b91f\nF test/fts3ac.test 636ed7486043055d4f126a0e385f2d5a82ebbf63\nF test/fts3ad.test e40570cb6f74f059129ad48bcef3d7cbc20dda49\nF test/fts3ae.test ce32a13b34b0260928e4213b4481acf801533bda\nF test/fts3af.test d394978c534eabf22dd0837e718b913fd66b499c\nF test/fts3ag.test c003672a215124df7fc6000036d896f498b26b53\nF test/fts3ah.test dc9f66c32c296f1bc8bcc4535126bddfeca62894\nF test/fts3ai.test 24058fdc6e9e5102c1fd8459591b114b6a85d285\nF test/fts3aj.test 0ed71e1dd9b03b843a857dc3eb9b15630e0104fc\nF test/fts3ak.test bd14deafe9d1586e8e9bf032411026ac4f8c925d\nF test/fts3al.test 07d64326e79bbdbab20ee87fc3328fbf01641c9f\nF test/fts3am.test 218aa6ba0dfc50c7c16b2022aac5c6be593d08d8\nF test/fts3an.test a49ccadc07a2f7d646ec1b81bc09da2d85a85b18\nF test/fts3ao.test 266989148fec6d9f1bb6c5382f7aa3dcea0e9cd444576e28dd2b9287ac7dd220\nF test/fts3atoken.test bef8a163490098a6b8a6ec5f5407269a3a15b9902c0fcf5e962825a81675b3a0\nF test/fts3auto.test bfe0857bd0b69d68dd685a931b58486411a69f5794a7f6d6fe808bfa31a99614\nF test/fts3aux1.test 7a170e172afdbceb67f5baa05941fd4fbf56af42f61daa3d140f4b4bf4cb68f6\nF test/fts3aux2.test 2459e7fa3e22734aed237d1e2ae192f5541c4d8b218956ad2d90754977bf907f\nF test/fts3b.test c15c4a9d04e210d0be67e54ce6a87b927168fbf9c1e3faec8c1a732c366fd491\nF test/fts3c.test fc723a9cf10b397fdfc2b32e73c53c8b1ec02958\nF test/fts3comp1.test a0f5b16a2df44dd0b15751787130af2183167c0c\nF test/fts3conf.test c84bbaec81281c1788aa545ac6e78a6bd6cde2bdbbce2da261690e3659f5a76b\nF test/fts3corrupt.test ce7f7b5eaeee5f1804584d061b978d85e64abf2af9adaa7577589fac6f7eae01\nF test/fts3corrupt2.test bf55c3fa0b0dc8ea1c0fe5543623bd27714585da6a129038fd6999fe3b0d25f3\nF test/fts3corrupt3.test 0d5b69a0998b4adf868cc301fc78f3d0707745f1d984ce044c205cdb764b491f\nF test/fts3corrupt4.test bc90c0f6ee73df4c6bd20f1b32fefdfc00b44cc577d67ebca43b157fc3efd422\nF test/fts3corrupt5.test 0549f85ec4bd22e992f645f13c59b99d652f2f5e643dac75568bfd23a6db7ed5\nF test/fts3cov.test 7eacdbefd756cfa4dc2241974e3db2834e9b372ca215880e00032222f32194cf\nF test/fts3d.test 2bd8c97bcb9975f2334147173b4872505b6a41359a4f9068960a36afe07a679f\nF test/fts3defer.test f4c20e4c7153d20a98ee49ee5f3faef624fefc9a067f8d8d629db380c4d9f1de\nF test/fts3defer2.test 3da52ca2114e300e9971eee2f0cc1a2e5f27e6a9ee67957d49e63e41fdfcc0e7\nF test/fts3defer3.test dd53fc13223c6d8264a98244e9b19abd35ed71cd\nF test/fts3drop.test 1b906e293d6773812587b3dc458cb9e8f3f0c297\nF test/fts3e.test 1f6c6ac9cc8b772ca256e6b22aaeed50c9350851\nF test/fts3expr.test ebae205a7a89446c32583bcd492dcb817b9f6b31819bb4dde2583bb99c77e526\nF test/fts3expr2.test 18da930352e5693eaa163a3eacf96233b7290d1a\nF test/fts3expr3.test c4d4a7d6327418428c96e0a3a1137c251b8dfbf8\nF test/fts3expr4.test f5b2832549f01b1f7f73389fa21d4b875499bc95bf7c8b36271844888c6a0938\nF test/fts3expr5.test a5b9a053becbdb8e973fbf4d6d3abaabeb42d511d1848bd57931f3e0a1cf983e\nF test/fts3fault.test 798e45af84be7978ca33d5bdc94246eb44724db24174b5d8e9b1ac46c57fb08d\nF test/fts3fault2.test 6a17a11d8034b1c4eca9f3091649273d56c49ff049e2173df8060f94341e9da0\nF test/fts3first.test dbdedd20914c8d539aa3206c9b34a23775644641\nF test/fts3fuzz001.test e3c7b0ce9b04cc02281dcc96812a277f02df03cd7dc082055d87e11eb18aaf56\nF test/fts3join.test 949b4f5ae3ae9cc2423cb865d711e32476bdb205ab2be923fdf48246e4a44166\nF test/fts3malloc.test b0e4c133b8d61d4f6d112d8110f8320e9e453ef6\nF test/fts3matchinfo.test aa66cc50615578b30f6df9984819ae5b702511cf8a94251ec7c594096a703a4a\nF test/fts3misc.test c47d2c1ea1351c51c32c688545b02c8180a3f22156d1aedc206a8c09b9d95905\nF test/fts3near.test 7e3354d46f155a822b59c0e957fd2a70c1d7e905\nF test/fts3offsets.test b85fd382abdc78ebce721d8117bd552dfb75094c\nF test/fts3prefix.test fa794eaab0bdae466494947b0b153d7844478ab2\nF test/fts3prefix2.test e1f0a822ca661dced7f12ce392e14eaf65609dce\nF test/fts3query.test ca033ff2ebcc22c69d89032fb0bc1850997d31e7e60ecd26440796ba1654e78f\nF test/fts3rank.test cd99bc83a3c923c8d52afd90d86979cf05fc41849f892faeac3988055ef37b99\nF test/fts3rnd.test 1320d8826a845e38a96e769562bf83d7a92a15d0\nF test/fts3shared.test 57e26a801f21027b7530da77db54286a6fe4997e\nF test/fts3snippet.test 430bb5ace2b31ccd99de4d71775d956da832c114c4b3e39589748f114458647c\nF test/fts3sort.test ed34c716a11cc2009a35210e84ad5f9c102362ca\nF test/fts3tok1.test a663f4cac22a9505400bc22aacb818d7055240409c28729669ea7d4cc2120d15\nF test/fts3tok_err.test 52273cd193b9036282f7bacb43da78c6be87418d\nF test/fts3varint.test 0b84a3fd4eba8a39f3687523804d18f3b322e6d4539a55bf342079c3614f2ada\nF test/fts4aa.test 4338ea7a67f7e19269bf6e6fb4a291352aa32296e7daed87f9823d57016a1ef7\nF test/fts4check.test 6259f856604445d7b684c9b306b2efb6346834c3f50e8fc4a59a2ca6d5319ad0\nF test/fts4content.test 73bbb123420d2c46ef2fb3b24761e9acdb78b0877179d3a5d7d57aada08066f6\nF test/fts4docid.test e33c383cfbdff0284685604d256f347a18fdbf01\nF test/fts4growth.test 289833c34ad45a5e6e6133b53b6a71647231fb89d36ddcb8d9c87211b6721d7f\nF test/fts4growth2.test 13ad4e76451af6e6906c95cdc725d01b00044269\nF test/fts4incr.test 4e353a0bd886ea984e56fce9e77724fc923b8d0d\nF test/fts4langid.test 2168ba330af34f8a1c8832de0aab4c4b6fa195a16419c9c0c8aad59ceb6ff714\nF test/fts4lastrowid.test 185835895948d5325c7710649824042373b2203149abe8024a9319d25234dfd7\nF test/fts4merge.test e2b2ec21e287d54ec09824ccfb41e66896eeca568fc818ba0e0eb2efd94c35d2\nF test/fts4merge2.test 5faa558d1b672f82b847d2a337465fa745e46891\nF test/fts4merge3.test 8d9ccb4a3d41c4c617a149d6c4b13ad02de797d0\nF test/fts4merge4.test d895b1057a7798b67e03455d0fa50e9ea836c47b\nF test/fts4merge5.test 69932d85cda8a1c4dcfb742865900ed8fbda51724b8cf9a45bbe226dfd06c596\nF test/fts4noti.test 5553d7bb2e20bf4a06b23e849352efc022ce6309\nF test/fts4onepass.test d69ddc4ee3415e40b0c5d1d0408488a87614d4f63ba9c44f3e52db541d6b7cc7\nF test/fts4opt.test 0fd0cc84000743ff2a883b9b84b4a5be07249f0ba790c8848a757164cdd46b2a\nF test/fts4record.test a48508f69a84c9287c8019d3a1ae712f5730d8335ffaf8e2101e691d078950bb\nF test/fts4rename.test 15fd9985c2bce6dea20da2245b22029ec89bd4710ed317c4c53abbe3cfd0c880\nF test/fts4umlaut.test fcaca4471de7e78c9d1f7e8976e3e8704d7d8ad979d57a739d00f3f757380429\nF test/fts4unicode.test ceca76422abc251818cb25dabe33d3c3970da5f7c90e1540f190824e6b3a7c95\nF test/full.test 6b3c8fb43c6beab6b95438c1675374b95fab245d\nF test/func.test 7d425f9a6eaa2c50baa751bef6b0c6c6af1751e0e0e1eb4863d426bb4c886788\nF test/func2.test 772d66227e4e6684b86053302e2d74a2500e1e0f\nF test/func3.test 2bb0f31ab7baaed690b962a88544d7be6b34fa389364bc36a44e441ed3e3f1e6\nF test/func4.test 6beacdfcb0e18c358e6c2dcacf1b65d1fa80955f\nF test/func5.test cdd224400bc3e48d891827cc913a57051a426fa4\nF test/func6.test 90e42b64c4f9fb6f04f44cb8a1da586c8542502e926b19c76504fe74ff2a9b7c\nF test/fuzz-oss1.test e58330d01cbbd8215ee636b17a03fe220b37dbfa\nF test/fuzz.test 96083052bf5765e4518c1ba686ce2bab785670d1\nF test/fuzz2.test 76dc35b32b6d6f965259508508abce75a6c4d7e1\nF test/fuzz3.test 9c813e6613b837cb7a277b0383cd66bfa07042b4cf0317157c35852f30043c31\nF test/fuzz4.test c229bcdb45518a89e1d208a21343e061503460ac69fae1539320a89f572eb634\nF test/fuzz_common.tcl a87dfbb88c2a6b08a38e9a070dabd129e617b45b\nF test/fuzz_malloc.test f348276e732e814802e39f042b1f6da6362a610af73a528d8f76898fde6b22f2\nF test/fuzzcheck.c e8cf694f71a1ee39a59f7c2a38c0f8660db0656ce47c8a334b6e9a11f1e66c6d\nF test/fuzzdata1.db d36e88741b4f23bcbaaf55b006290669d03c6c891cf13c7b3a53bc1b097b693f\nF test/fuzzdata2.db 128b3feeb78918d075c9b14b48610145a0dd4c8d6f1ca7c2870c7e425f5bf31f\nF test/fuzzdata3.db c6586d3e3cef0fbc18108f9bb649aa77bfc38aba\nF test/fuzzdata4.db b502c7d5498261715812dd8b3c2005bad08b3a26e6489414bd13926cd3e42ed2\nF test/fuzzdata5.db e35f64af17ec48926481cfaf3b3855e436bd40d1cfe2d59a9474cb4b748a52a5\nF test/fuzzdata6.db 92a80e4afc172c24f662a10a612d188fb272de4a9bd19e017927c95f737de6d7\nF test/fuzzdata7.db e7a86fd83dda151d160445d542e32e5c6019c541b3a74c2a525b6ac640639711\nF test/fuzzdata8.db b45368bbe9f86d40d30603e8f780ac29807cbcc951a18d7a7fd9d0c0e904706e\nF test/fuzzer1.test 3d4c4b7e547aba5e5511a2991e3e3d07166cfbb8\nF test/fuzzer2.test a85ef814ce071293bce1ad8dffa217cbbaad4c14\nF test/fuzzerfault.test 8792cd77fd5bce765b05d0c8e01b9edcf8af8536\nF test/gcfault.test dd28c228a38976d6336a3fc42d7e5f1ad060cb8c\nF test/gencol1.test 96d669ccb82d4140df6b38bfc110b98f94ac4cf8d32af42bae6349941b3eb92c\nF test/genesis.tcl 1e2e2e8e5cc4058549a154ff1892fe5c9de19f98\nF test/having.test e4098a4b8962f9596035c3b87a8928a10648acc509f1bb8d6f96413bbf79a1b3\nF test/hexlit.test 4a6a5f46e3c65c4bf1fa06f5dd5a9507a5627751\nF test/hidden.test 23c1393a79e846d68fd902d72c85d5e5dcf98711\nF test/hook.test 1604b3b2f5931430087540404555c1b6be3618600b81558657c66b533ed70b13\nF test/hook2.test b9ff3b8c6519fb67f33192f1afe86e7782ee4ac8\nF test/icu.test 41aa8847745a879b897a7febea0f8f9efc8e67fe8bf680589b6e07c7b0a1569a\nF test/ieee754.test 806fc0ce7f305f57e3331eaceeddcfec9339e607\nF test/imposter1.test c3f1db2d3db2c24611a6596a3fc0ffc14f1466c8\nF test/in.test 3e9bd58597a444123a40a9ac94cae0fec8897e17e9f519b02fc370bcf5ba5175\nF test/in2.test 5d4c61d17493c832f7d2d32bef785119e87bde75\nF test/in3.test 3cbf58c87f4052cee3a58b37b6389777505aa0c0\nF test/in4.test 0f77b0ff371549e6a119d0356be10bdba72258162e9701e83527a560482f5e98\nF test/in5.test b32ce7f4a93f44c5dee94af16886d922cc16ebe33c8e1765c73d4049d0f4b40f\nF test/in6.test 62d943a02f722948f4410ee0b53c3cb39acd7c41afb083df8d7004238fe90a20\nF test/incrblob.test c9b96afc292aeff43d6687bcb09b0280aa599822\nF test/incrblob2.test a494c9e848560039a23974b9119cfc2cf3ad3bd15cc2694ee6367ae537ef8f1f\nF test/incrblob3.test d8d036fde015d4a159cd3cbae9d29003b37227a4\nF test/incrblob4.test 21a52a6843a56cdcce968c6a86b72a7066d0e6ba\nF test/incrblob_err.test 89372a28f1d98254f03fed705f9efcd34ef61a674df16d2dbb4726944a2de5e9\nF test/incrblobfault.test 74dd8ac108304cea0b4a0df6df63a1567e558758\nF test/incrcorrupt.test 6c567fbf870aa9e91866fe52ce6f200cd548939a\nF test/incrvacuum.test 2aaee202b1f230e55779f70d155f6ba67bbdff8481d650214d256ab0f97d4a2b\nF test/incrvacuum2.test 7d26cfda66c7e55898d196de54ac4ec7d86a4e3d\nF test/incrvacuum3.test 75256fb1377e7c39ef2de62bfc42bbff67be295a\nF test/incrvacuum_ioerr.test 6ae2f783424e47a0033304808fe27789cf93e635\nF test/index.test a2e948ed949e575487b5c1d521767d4584ac42d352f2dcd8e48004638e7bc7dc\nF test/index2.test f835d5e13ca163bd78c4459ca15fd2e4ed487407\nF test/index3.test 51685f39345462b84fcf77eb8537af847fdf438cc96b05c45d6aaca4e473ade0\nF test/index4.test ab92e736d5946840236cd61ac3191f91a7856bf6\nF test/index5.test 8621491915800ec274609e42e02a97d67e9b13e7\nF test/index6.test f172653b35b20233e59200e8b92a76db61bf7285437bf777b93b306ba26a47e7\nF test/index7.test 1d764c0cca45f5a76150b08e127ccc8d52492cfa788b5fafed4be784a351b020\nF test/index8.test bc2e3db70e8e62459aaa1bd7e4a9b39664f8f9d7\nF test/index9.test 0aa3e509dddf81f93380396e40e9bb386904c1054924ba8fa9bcdfe85a8e7721\nF test/indexedby.test a52c8c6abfae4fbfb51d99440de4ca1840dbacc606b05e29328a2a8ba7cd914e\nF test/indexexpr1.test 284e119999d132cc8bf37735a928c9859b28e8e295d02b7a6a4f93977c7f9ba5\nF test/indexexpr2.test dba11dbb0a58fcba4cd694f46b4004976123b81b0501f525d43c9be59f0207b1\nF test/indexfault.test 98d78a8ff1f5335628b62f886a1cb7c7dac1ef6d48fa39c51ec871c87dce9811\nF test/init.test 15c823093fdabbf7b531fe22cf037134d09587a7\nF test/insert.test 4e3f0de67aac3c5be1f4aaedbcea11638f1b5cdc9a3115be14d19aa9db7623c6\nF test/insert2.test 4d14b8f1b810a41995f6286b64a6943215d52208\nF test/insert3.test 1b7db95a03ad9c5013fdf7d6722b6cd66ee55e30\nF test/insert4.test fb9e0f752c75f453555990250b449f6d123ae6a3ebf054d14e4470de4498dce3\nF test/insert5.test 394f96728d1258f406fe5f5aeb0aaf29487c39a6\nF test/insertfault.test ac63d14ea3b49c573673a572f4014b9117383a03e497c58f308b5c776e4a7f74\nF test/instr.test 107df2b9b74a4b59315916b575590a08f2a714de0754abe541f10a0971d0a2a4\nF test/instrfault.test 0f870b218ea17cd477bb19ed330eecdb460dd53a\nF test/intarray.test bb976b0b3df0ebb6a2eddfb61768280440e672beba5460ed49679ea984ccf440\nF test/interrupt.test 16ea879ec728cb76414c148c5f24afd5d1f91054\nF test/interrupt2.test e4408ca770a6feafbadb0801e54a0dcd1a8d108d\nF test/intpkey.test ac71107a49a06492b69b82aafaf225400598d3c8\nF test/intreal.test 2a87e85a5949bd55e41ef04c58f5800587c5380bdbc559ff1c79b614b0e6a533\nF test/io.test f95bca1783b01ea7761671560d023360d2dfa4cc\nF test/ioerr.test 470fcc78e9cd352d162baf782fe301ea807d764241f58a48fc58109c2dfcdb6b\nF test/ioerr2.test 2593563599e2cc6b6b4fcf5878b177bdd5d8df26\nF test/ioerr3.test d3cec5e1a11ad6d27527d0d38573fbff14c71bdd\nF test/ioerr4.test f130fe9e71008577b342b8874d52984bd04ede2c\nF test/ioerr5.test 2edfa4fb0f896f733071303b42224df8bedd9da4\nF test/ioerr6.test a395a6ab144b26a9e3e21059a1ab6a7149cca65b\nF test/istrue.test 75327829744e65cc8700e69340b8e6c192e10e39dfae7ccb0e970d3c4f49090a\nF test/join.test f787ee2716efe5beeb9888d10630f917b112c32b6b3e612e48a17ea8aed3a8eb\nF test/join2.test 10f7047e723ebd68b2f47189be8eed20451a6f665d8bf46f1774c640d1062417\nF test/join3.test 6f0c774ff1ba0489e6c88a3e77b9d3528fb4fda0\nF test/join4.test 1a352e4e267114444c29266ce79e941af5885916\nF test/join5.test 3a96dc62f0b45402d7207e22d1993fe0c2fce1c57644a11439891dd62b990eb7\nF test/join6.test cfe6503791ceb0cbb509966740286ec423cbf10b\nF test/journal1.test c7b768041b7f494471531e17abc2f4f5ebf9e5096984f43ed17c4eb80ba34497\nF test/journal2.test 9dac6b4ba0ca79c3b21446bbae993a462c2397c4\nF test/journal3.test 7c3cf23ffc77db06601c1fcfc9743de8441cb77db9d1aa931863d94f5ffa140e\nF test/jrnlmode.test 9b5bc01dac22223cb60ec2d5f97acf568d73820794386de5634dcadbea9e1946\nF test/jrnlmode2.test 8759a1d4657c064637f8b079592651530db738419e1d649c6df7048cd724363d\nF test/jrnlmode3.test 556b447a05be0e0963f4311e95ab1632b11c9eaa\nF test/json101.test bb71538005f2d9e18620bdd3b76839a93ca0be61903eb8d751a64e78cf99b8fb\nF test/json102.test eeb54efa221e50b74a2d6fb9259963b48d7414dca3ce2fdfdeed45cb28487bc1\nF test/json103.test aff6b7a4c17d5a20b487a7bc1a274bfdc63b829413bdfb83bedac42ec7f67e3b\nF test/json104.test 317f4ec4b2d87afbba4d2460cf5be297aea76f2285eb618d276dbcd40a50950f\nF test/json105.test 45f7d6a9a54c85f8a9589b68d3e7a1f42d02f2359911a8cdbad1f9988f571173\nF test/keyword1.test 37ef6bba5d2ed5b07ecdd6810571de2956599dff\nF test/kvtest.c 94da54bb66aae7a54e47cf7e4ea4acecc0f217560f79ad3abfcc0361d6d557ba\nF test/lastinsert.test 42e948fd6442f07d60acbd15d33fb86473e0ef63\nF test/laststmtchanges.test ae613f53819206b3222771828d024154d51db200\nF test/lemon-test01.y 58b764610fd934e189ffbb0bbfa33d171b9cb06019b55bdc04d090d6767e11d7\nF test/like.test 3d702d79bf871fa32985b1ce334294c587e3948d3ab972001e811a58577e8b3c\nF test/like2.test 3b2ee13149ba4a8a60b59756f4e5d345573852da\nF test/like3.test 4f940ad275c006319950054a7a65661f476772171b82b6fdf795e4dda36f246f\nF test/limit.test 0c99a27a87b14c646a9d583c7c89fd06c352663e\nF test/limit2.test 9409b033284642a859fafc95f29a5a6a557bd57c1f0d7c3f554bd64ed69df77e\nF test/loadext.test faa4f6eed07a5aac35d57fdd7bc07f8fc82464cfd327567c10cf0ba3c86cde04\nF test/loadext2.test 0408380b57adca04004247179837a18e866a74f7\nF test/lock.test be4fe08118fb988fed741f429b7dd5d65e1c90db\nF test/lock2.test 5242d8ac4e2d59c403aebff606af449b455aceff\nF test/lock3.test f271375930711ae044080f4fe6d6eda930870d00\nF test/lock4.test 27143363eda1622f03c133efc8db808fc331afd973486cb571ea71cd717d37b8\nF test/lock5.test c6c5e0ebcb21c61a572870cc86c0cb9f14cede38\nF test/lock6.test ad5b387a3a8096afd3c68a55b9535056431b0cf5\nF test/lock7.test 49f1eaff1cdc491cc5dee3669f3c671d9f172431\nF test/lock_common.tcl 2f3f7f2e9637f93ccf609df48ef5b27a50278b6b1cd752b445d52262e5841413\nF test/lookaside.test 5a828e7256f1ee4da8e1bdaa03373a3ccdb0f1ff98dfa82e9b76cb41a45b1083\nF test/main.test 6bbb3999fd461eb8fb335cbab97409a3d7f91bbb8da60635e8be3e4a04a77772\nF test/make-where7.tcl 05c16b5d4f5d6512881dfec560cb793915932ef9\nF test/malloc.test 18dd1c4188c81ca79cf123527c71b19ee0c31feb9947fdffb0dc6ceb1436816a\nF test/malloc3.test 6e88bae6312854a4adb4ecc2a6a5ea8c59b4db778b724ba718e1c43fc8c3c136\nF test/malloc4.test 957337613002b7058a85116493a262f679f3a261\nF test/malloc5.test 2e4ad7684a13389a44a840499cd47173a8d05f22f082d7d083eece433a7a64eb\nF test/malloc6.test 2f039d9821927eacae43e1831f815e157659a151\nF test/malloc7.test 7c68a32942858bc715284856c5507446bba88c3a\nF test/malloc8.test 9b7a3f8cb9cf0b12fff566e80a980b1767bd961d\nF test/malloc9.test 2307c6ee3703b0a21391f3ea92388b4b73f9105e\nF test/mallocA.test aea76f2dd8bcc2d19748f6b911e876cefda74a563753bf26af046e9d34bb97e6\nF test/mallocAll.test 98f1be74bc9f49a858bc4f361fc58e26486798be\nF test/mallocB.test bc475ab850cda896142ab935bbfbc74c24e51ed6\nF test/mallocC.test 3dffe16532f109293ce1ccecd0c31dca55ef08c4\nF test/mallocD.test f78c295e8e18ea3029e65ca08278690e00c22100\nF test/mallocE.test db1ed69d7eded1b080952e2a7c37f364ad241b08\nF test/mallocF.test 2d5c590ebc2fc7f0dcebdf5aa8498b9aed69107e\nF test/mallocG.test 0ff91b65c50bdaba680fb75d87fe4ad35bb7934f\nF test/mallocH.test 79b65aed612c9b3ed2dcdaa727c85895fd1bfbdb\nF test/mallocI.test 6c23a71df077fa5d387be90e7e669c5b368ca38a\nF test/mallocJ.test b5d1839da331d96223e5f458856f8ffe1366f62e\nF test/mallocK.test 1f4b5efbf61715ab79b20b38739ff4b3d110ceb53f54e5db6da1f01c083707ab\nF test/mallocL.test fb311ff80afddf3b1a75e52289081f4754d901dc\nF test/mallocM.test 78bbe9d3da84a5c679123cdb40d7b2010b18fc46e13897e4f253c6ba6fbff134\nF test/malloc_common.tcl aac62499b76be719fac31e7a3e54a7fd53272e7f\nF test/malloctraceviewer.tcl b7a54595270c1d201abf1c3f3d461f27eaf24cdef623ad08a0fe5e411264c8a9\nF test/manydb.test 28385ae2087967aa05c38624cec7d96ec74feb3e\nF test/mem5.test c6460fba403c5703141348cd90de1c294188c68f\nF test/memdb.test c1f2a343ad14398d5d6debda6ea33e80d0dafcc7\nF test/memdb1.test 58d92c2bf622cc5f0f41461e1b35cf64f3f787199544c2c1dada37d88753f9d4\nF test/memleak.test 10b9c6c57e19fc68c32941495e9ba1c50123f6e2\nF test/memsubsys1.test 9e7555a22173b8f1c96c281ce289b338fcba2abe8b157f8798ca195bbf1d347e\nF test/memsubsys2.test 3e4a8d0c05fd3e5fa92017c64666730a520c7e08\nF test/minmax.test 6751e87b409fe11b02e70a306d846fa544e25a41\nF test/minmax2.test 1edf66901ddfab26ae1e04165e8da834c8d3284e2b20aefb26b80ef217962eab\nF test/minmax3.test cc1e8b010136db0d01a6f2a29ba5a9f321034354\nF test/minmax4.test 272ca395257f05937dc96441c9dde4bc9fbf116a8d4fa02baeb0d13d50e36c87\nF test/misc1.test 7ce84b25df9872e7d7878613a96815d2ba5bc974ac4e15a50118dde8f3917599\nF test/misc2.test 00d7de54eda90e237fc9a38b9e5ccc769ebf6d4d\nF test/misc3.test cf3dda47d5dda3e53fc5804a100d3c82be736c9d\nF test/misc4.test 10cd6addb2fa9093df4751a1b92b50440175dd5468a6ec84d0386e78f087db0e\nF test/misc5.test c4aeaa0fa28faa08f2485309c38db4719e6cd1364215d5687a5b96d340a3fa58\nF test/misc6.test 953cc693924d88e6117aeba16f46f0bf5abede91\nF test/misc7.test 4f21954012e4eb0a923c54a311f38c81bf6798ccdd7b51584db46d4007f63daa\nF test/misc8.test 8fb0f31d7a8aed484d759773ab8ad12ec746a477f4a67394a4af0e677494c3ca\nF test/misuse.test 9e7f78402005e833af71dcab32d048003869eca5abcaccc985d4f8dc1d86bcc7\nF test/mjournal.test 28a08d5cb5fb5b5702a46e19176e45e964e0800d1f894677169e79f34030e152\nF test/mmap1.test fb04e0c10492455007624ade884ca0c8852ff3e4e11d95408f9709ca2ef7f626\nF test/mmap2.test 9d6dd9ddb4ad2379f29cc78f38ce1e63ed418022\nF test/mmap3.test b3c297e78e6a8520aafcc1a8f140535594c9086e\nF test/mmap4.test 2e2b4e32555b58da15176e6fe750f17c9dcf7f93\nF test/mmapfault.test d4c9eff9cd8c2dc14bc43e71e042f175b0a26fe3\nF test/mmapwarm.test 2272005969cd17a910077bd5082f70bc1fefad9a875afec7fc9af483898ecaf3\nF test/multiplex.test dc0d67b66f84b484a83cb8bbdf3f0a7f49562ccd\nF test/multiplex2.test 580ca5817c7edbe4cc68fa150609c9473393003a\nF test/multiplex3.test d228f59eac91839a977eac19f21d053f03e4d101\nF test/multiplex4.test e8ae4c4bd70606a5727743241f13b5701990abe4\nF test/mutex1.test ea2cc74d97f077b9e74c84cbd024f14d79a8126f\nF test/mutex2.test bfeaeac2e73095b2ac32285d2756e3a65e681660\nF test/nan.test 437d40e6d0778b050d7750726c0cbd2c9936b81962926e8f8c48ca698f00f4d1\nF test/nockpt.test 8c43b25af63b0bd620cf1b003529e37b6f1dc53bd22690e96a1bd73f78dde53a\nF test/nolock.test f196cf8b8fbea4e2ca345140a2b3f3b0da45c76e\nF test/normalize.test f23b6c5926c59548635fcf39678ac613e726121e073dd902a3062fbb83903b72\nF test/notify1.test 669b2b743618efdc18ca4b02f45423d5d2304abf\nF test/notify2.test 2ecabaa1305083856b7c39cf32816b612740c161\nF test/notify3.test 10ff25cde502e72a92053a2f215d64bece4ef934\nF test/notnull.test a37b663d5bb728d66fc182016613fb8e4a0a4bbf3d75b8876a7527f7d4ed3f18\nF test/null.test 0dcce4f04284ec66108c503327ad6d224c0752b3\nF test/nulls1.test a325e2f2148fb5c82cd5f734e7b60f5fa28f9394c318edf3140f36f57d39930a\nF test/numcast.test 5d126f7f581432e86a90d1e35cac625164aec4a1\nF test/numindex1.test 20a5450d4b056e48cd5db30e659f13347a099823\nF test/offset1.test f06b83657bcf26f9ce805e67450e189e282143b2\nF test/openv2.test 0d3040974bf402e19b7df4b783e447289d7ab394\nF test/optfuzz-db01.c a0c256905c8ac79f9a5de2f374a3d9f757bef0dca2a238dc7c10cc8a38031834\nF test/optfuzz-db01.txt 21f6bdeadc701cf11528276e2a55c70bfcb846ba42df327f979bd9e7b6ce7041\nF test/optfuzz.c 50e330304eb1992e15ddd11f3daaad9bcc0d9aaad09cb2bcc77f9515df2e88b1\nF test/orderby1.test e4501f54721f804ca56922e253403ac6775f88e9f07569994ce99212b3ca5b10\nF test/orderby2.test bc11009f7cd99d96b1b11e57b199b00633eb5b04\nF test/orderby3.test 8619d06a3debdcd80a27c0fdea5c40b468854b99\nF test/orderby4.test 4d39bfbaaa3ae64d026ca2ff166353d2edca4ba4\nF test/orderby5.test 5f4d6cb93cc2f6d3f4228354310a2ce1fbd95d5bbffcba8c6482eeb62a466407\nF test/orderby6.test 8b38138ab0972588240b3fca0985d2e400432859\nF test/orderby7.test 3d1383d52ade5b9eb3a173b3147fdd296f0202da\nF test/orderby8.test 23ef1a5d72bd3adcc2f65561c654295d1b8047bd\nF test/orderby9.test 87fb9548debcc2cd141c5299002dd94672fa76a3\nF test/orderbyA.test df608e59efc2ef50c1eddf1a773b272de3252e9401bfec86d04b52fd973866d5\nF test/oserror.test 1fc9746b83d778e70d115049747ba19c7fba154afce7cc165b09feb6ca6abbc5\nF test/ossfuzz.c 9636dad2092a05a32110df0ca06713038dd0c43dd89a77dabe4b8b0d71096715\nF test/ossshell.c f125c5bd16e537a2549aa579b328dd1c59905e7ab1338dfc210e755bb7b69f17\nF test/ovfl.test 199c482696defceacee8c8e0e0ef36da62726b2f\nF test/pager1.test 1e9ee778bdeaf4f7f09997d029cdaca6a42dfc2092edafe4f5e590acbf1eab13\nF test/pager2.test 67b8f40ae98112bcdba1f2b2d03ea83266418c71\nF test/pager3.test 4e9a83d6ca0838d7c602c9eb93d1357562d9059c1e02ffb138a8271020838370\nF test/pager4.test a122e9e6925d5b23b31e3dfef8c6a44bbf19590e\nF test/pagerfault.test 63c5da625562c66345ab4528790327ca63db2f6f9cbae2aba8cb7c51de3d1628\nF test/pagerfault2.test caf4c7facb914fd3b03a17b31ae2b180c8d6ca1f\nF test/pagerfault3.test 1003fcda009bf48a8e22a516e193b6ef0dd1bbd8\nF test/pageropt.test 84e4cc5cbca285357f7906e99b21be4f2bf5abc0\nF test/pagesize.test 5769fc62d8c890a83a503f67d47508dfdc543305\nF test/parser1.test 6ccdf5e459a5dc4673d3273dc311a7e9742ca952dd0551a6a6320d27035ce4b3\nF test/pcache.test c8acbedd3b6fd0f9a7ca887a83b11d24a007972b\nF test/pcache2.test af7f3deb1a819f77a6d0d81534e97d1cf62cd442\nF test/percentile.test 4243af26b8f3f4555abe166f723715a1f74c77ff\nF test/permutations.test 8587800fe1a0eb01456a3f4500b821e54e3347e78acf11dbf05f4990530f6cee\nF test/pg_common.tcl 222a1bad1c41c308fa366313cd7b51b3be7e9b21c8736a421b974ac941693b54\nF test/pragma.test 59becdfd720b80d463ab750f69f7118fde10dfd556aa5d554f3bf6b7e5ea7533\nF test/pragma2.test e5d5c176360c321344249354c0c16aec46214c9f\nF test/pragma3.test 8300aa9c63cff1027006ca34bf413a148abbd6dcd471fa9a1ded322fe18c0df9\nF test/pragma4.test 10c624e45a83c0096a82a7579a5ff658542391d3b77355192da6572c8c17c00b\nF test/pragma5.test 2be6a44c91e8585ccb4c71c5f221ccebe0692a49557215a912916ed391188959\nF test/pragmafault.test 275edaf3161771d37de60e5c2b412627ac94cef11739236bec12ed1258b240f8\nF test/prefixes.test b524a1c44bffec225b9aec98bd728480352aa8532ac4c15771fb85e8beef65d9\nF test/printf.test 0300699733e53101b2ce48800518427249edd4053bb50fa0621c6607482f0fdb\nF test/printf2.test 30b5dd0b4b992dc5626496846ecce17ff592cacbcb11c3e589f3ac4d7e129dae\nF test/progress.test ebab27f670bd0d4eb9d20d49cef96e68141d92fb\nF test/ptrchng.test ef1aa72d6cf35a2bbd0869a649b744e9d84977fc\nF test/pushdown.test 5e72c51c5e33253ed639ccee1e01ce62d62b6eee5ca893cd82334e4ee7b1d7fc\nF test/queryonly.test 5f653159e0f552f0552d43259890c1089391dcca\nF test/quick.test 1681febc928d686362d50057c642f77a02c62e57\nF test/quota-glob.test 32901e9eed6705d68ca3faee2a06b73b57cb3c26\nF test/quota.test bfb269ce81ea52f593f9648316cd5013d766dd2a\nF test/quota2.test 7dc12e08b11cbc4c16c9ba2aa2e040ea8d8ab4b8\nF test/quote.test 626149eda89ee64d81a3790de370f9f0211921b11568a49c28c861f394330508\nF test/randexpr1.tcl 40dec52119ed3a2b8b2a773bce24b63a3a746459\nF test/randexpr1.test eda062a97e60f9c38ae8d806b03b0ddf23d796df\nF test/rbu.test 168573d353cd0fd10196b87b0caa322c144ef736\nF test/rdonly.test 64e2696c322e3538df0b1ed624e21f9a23ed9ff8\nF test/recover.test ccb8c2623902a92ebb76770edd075cb4f75a4760bb7afde38026572c6e79070d\nF test/regexp1.test 497ea812f264d12b6198d6e50a76be4a1973a9d8\nF test/regexp2.test 40e894223b3d6672655481493f1be12012f2b33c\nF test/reindex.test cd9d6021729910ece82267b4f5e1b5ac2911a7566c43b43c176a6a4732e2118d\nF test/releasetest.tcl fb76d8fcc95ac29d6356cd9e52b726ab9e43a24082897618dfbcb7c2b0049153 x\nF test/releasetest_data.tcl 9919fc6ac5bc92f8878fecfd1840db15999f660a6c9f609240b41aa62b885c88\nF test/resetdb.test 8062cf10a09d8c048f8de7711e94571c38b38168db0e5877ba7561789e5eeb2b\nF test/resolver01.test f4022acafda7f4d40eca94dbf16bc5fc4ac30ceb\nF test/rollback.test 06680159bc6746d0f26276e339e3ae2f951c64812468308838e0a3362d911eaa\nF test/rollback2.test bc868d57899dc6972e2b4483faae0e03365a0556941474eec487ae21d8d38bb6\nF test/rollbackfault.test 0e646aeab8840c399cfbfa43daab46fd609cf04a\nF test/round1.test 768018b04522ca420b1aba8a24bd76091d269f3bce3902af3ec6ebcee41ab21e\nF test/rowallock.test 3f88ec6819489d0b2341c7a7528ae17c053ab7cc\nF test/rowhash.test 0bc1d31415e4575d10cacf31e1a66b5cc0f8be81\nF test/rowid.test bfbd7b97d9267660be3c8f28507c4ed7f205196b8877c0db42df347c2e8845e3\nF test/rowvalue.test c39cc0be5e33f5294fc9224216198d6709d713ea948fdf8f42d89568e97912c9\nF test/rowvalue2.test 060d238b7e5639a7c5630cb5e63e311b44efef2b\nF test/rowvalue3.test 3068f508753af69884b12125995f023da0dbb256\nF test/rowvalue4.test 02e35f7762371c2f57ebd856aa056eac56cb27ef7715a0bb31eac1895a745356\nF test/rowvalue5.test c81c7d8cf36711ab37675ad7376084ae2a359cb6\nF test/rowvalue6.test d19b54feb604d5601f8614b15e214e0774c01087\nF test/rowvalue7.test c1cbdbf407029db01f87764097c6ac02a1c5a37efd2776eff32a9cdfdf6f2dba\nF test/rowvalue8.test 5900eddad9e2c3c2e26f1a95f74aafc1232ee5e0\nF test/rowvalue9.test d8dd2c6ecac432dadaa79e41dc2434f007be1b6b\nF test/rowvaluefault.test 7cd9ccc6c2fbdd881672984087aad0491bb75504\nF test/rowvaluevtab.test d166df5b666662de1ebf40d6f3849f8a76b34e17183a6cc7f81b420c462ce447\nF test/rtree.test 0c8d9dd458d6824e59683c19ab2ffa9ef946f798\nF test/run-wordcount.sh 891e89c4c2d16e629cd45951d4ed899ad12afc09\nF test/savepoint.test 1f8a6b1aea9a0d05837adc463d4bf47bd9d0f1c842f1c2a9caccd639baf34bf9\nF test/savepoint2.test 9b8543940572a2f01a18298c3135ad0c9f4f67d7\nF test/savepoint4.test c8f8159ade6d2acd9128be61e1230f1c1edc6cc0\nF test/savepoint5.test 0735db177e0ebbaedc39812c8d065075d563c4fd\nF test/savepoint6.test f41279c5e137139fa5c21485773332c7adb98cd7\nF test/savepoint7.test cde525ea3075283eb950cdcdefe23ead4f700daa\nF test/savepointfault.test f044eac64b59f09746c7020ee261734de82bf9b2\nF test/scanstatus.test 874e35011779b07725a47dbf1dd6282b0ca04af7e028fb0b534ee544b571be42\nF test/schema.test 5dd11c96ba64744de955315d2e4f8992e447533690153b93377dffb2a5ef5431\nF test/schema2.test 906408621ea881fdb496d878b1822572a34e32c5\nF test/schema3.test 1bc1008e1f8cb5654b248c55f27249366eb7ed38\nF test/schema4.test 3b26c9fa916abb6dadf894137adcf41b7796f7b9\nF test/schema5.test 29699b4421f183c8f0e88bd28ce7d75d13ea653e\nF test/schema6.test e4bd1f23d368695eb9e7b51ef6e02ca0642ea2ab4a52579959826b5e7dce1f9b\nF test/schemafault.test 1936bceca55ac82c5efbcc9fc91a1933e45c8d1e1d106b9a7e56c972a5a2a51e\nF test/securedel.test 2f70b2449186a1921bd01ec9da407fbfa98c3a7a5521854c300c194b2ff09384\nF test/securedel2.test 2d54c28e46eb1fd6902089958b20b1b056c6f1c5\nF test/select1.test 703154cbf66d0a9fbbd5b771dc3d2c4d3700121d133d695958d4a9c5a33251e8\nF test/select2.test 352480e0e9c66eda9c3044e412abdf5be0215b56\nF test/select3.test 3905450067c28766bc83ee397f6d87342de868baa60f2bcfd00f286dfbd62cb9\nF test/select4.test 5389d9895968d1196c457d59b3ee6515d771d328\nF test/select5.test df9ec0d218cedceb4fe7b63262025b547b50a55e59148c6f40b60ca25f1d4546\nF test/select6.test 319d45e414cdd321bf17cfacedaf19e3935ad64dac357c53f1492338c6e9b801\nF test/select7.test f659f231489349e8c5734e610803d7654207318f\nF test/select8.test 8c8f5ae43894c891efc5755ed905467d1d67ad5d\nF test/select9.test aebc2bb0c3bc44606125033cbcaac2c8d1f33a95\nF test/selectA.test b8a590f6493cad5b0bb4dfe1709bf7dcda0b6c40bb4caf32d1e36a89eebc8fc5\nF test/selectB.test 954e4e49cf1f896d61794e440669e03a27ceea25\nF test/selectC.test e25243f8ca503e06f252eb0218976d07cfeceac3\nF test/selectD.test fc20452847a01775710090383cfb4423275d2f745fed61f34fbf37573ac0d214\nF test/selectE.test a8730ca330fcf40ace158f134f4fe0eb00c7edbf\nF test/selectF.test 21c94e6438f76537b72532fa9fd4710cdd455fc3\nF test/selectG.test 089f7d3d7e6db91566f00b036cb353107a2cca6220eb1cb264085a836dae8840\nF test/server1.test c2b00864514a68a0e6fd518659dc95d0050307a357a08969872bef027d785dc4\nF test/session.test 78fa2365e93d3663a6e933f86e7afc395adf18be\nF test/sessionfuzz-data1.db 1f8d5def831f19b1c74571037f0d53a588ea49a6c4ca2a028fc0c27ef896dbcb\nF test/sessionfuzz.c be9c4d4afd359ce80024d8b541b9b8a880510aef5cf263df56fc0e9b947727f1\nF test/shared.test 1826673eb5eb745fb91a3bdac99a7737057742ae38dcb0fe076a384d6727578b\nF test/shared2.test 03eb4a8d372e290107d34b6ce1809919a698e879\nF test/shared3.test ab693f9b6e156b8bfb2a0ad94f29fe69602a5d38\nF test/shared4.test c75f476804e76e26bf6fa0e7b421fb0ca7d07558\nF test/shared6.test 866bb4982c45ce216c61ded5e8fde4e7e2f3ffa9\nF test/shared7.test a81e99f83e6c51b02ac99c96fb3a2a7b5978c956\nF test/shared8.test 933ed7d71f598bb6c7a8c192a3cd30f2562fdccf514df383798599c34ffa672f\nF test/shared9.test 5f2a8f79b4d6c7d107a01ffa1ed05ae7e6333e21\nF test/sharedA.test 49d87ec54ab640fbbc3786ee3c01de94aaa482a3a9f834ad3fe92770eb69e281\nF test/sharedB.test 16cc7178e20965d75278f410943109b77b2e645e\nF test/shared_err.test 32634e404a3317eeb94abc7a099c556a346fdb8fb3858dbe222a4cbb8926a939\nF test/sharedlock.test 5ede3c37439067c43b0198f580fd374ebf15d304\nF test/shell1.test 3c9707dce15e8fdca529503378660f099777d3ddcedccf801a37589a405c5942\nF test/shell2.test e242a9912f44f4c23c3d1d802a83e934e84c853b\nF test/shell3.test ac8c2b744014c3e9a0e26bfd829ab65f00923dc1a91ffd044863e9423cc91494\nF test/shell4.test 1c6aef11daaa2d6830acaba3ac9cbec93fbc1c3d5530743a637f39b3987d08ce\nF test/shell5.test 23939a4c51f0421330ea61dbd3c74f9c215f5f8d3d1a94846da6ffc777a35458\nF test/shell6.test 1ceb51b2678c472ba6cf1e5da96679ce8347889fe2c3bf93a0e0fa73f00b00d3\nF test/shell7.test 115132f66d0463417f408562cc2cf534f6bbc6d83a6d50f0072a9eb171bae97f\nF test/shell8.test 96be02ea0c21f05b24c1883d7b711a1fa8525a68ab7b636aacf6057876941013\nF test/shmlock.test 3dbf017d34ab0c60abe6a44e447d3552154bd0c87b41eaf5ceacd408dd13fda5\nF test/shortread1.test bb591ef20f0fd9ed26d0d12e80eee6d7ac8897a3\nF test/show_speedtest1_rtree.tcl 32e6c5f073d7426148a6936a0408f4b5b169aba5\nF test/shrink.test 1b4330b1fd9e818c04726d45cb28db73087535ce\nF test/sidedelete.test f0ad71abe6233e3b153100f3b8d679b19a488329\nF test/skipscan1.test 2a64ca7b3e6246bb86b47c9051bfd324603b1b60675fe606513535267713e080\nF test/skipscan2.test 3eb703ce794f139e7b83567911046298bcde29606116727f9b700ce34f559d2d\nF test/skipscan3.test ec5bab3f81c7038b43450e7b3062e04a198bdbb5\nF test/skipscan5.test 67817a4b6857c47e0e33ba3e506da6f23ef68de2\nF test/skipscan6.test 0b4cd1b4ac9f84d91454df513c99a4932fa07e8f27b8049bea605068b3e34ac7\nF test/snapshot.test a504f2e7009f512ef66c719f0ea1c55a556bdaf1e1312c80a04d46fc1a3e9632\nF test/snapshot2.test 8d6ff5dd9cc503f6e12d408a30409c3f9c653507b24408d9cd7195931c89bc54\nF test/snapshot3.test 8744313270c55f6e18574283553d3c5c5fe4c5970585663613a0e75c151e599b\nF test/snapshot4.test d4e9347ef2fcabc491fc893506c7bbaf334da3be111d6eb4f3a97cc623b78322\nF test/snapshot_fault.test f6c5ef7cb93bf92fbb4e864ecc5c87df7d3a250064838822db5b4d3a5563ede4\nF test/snapshot_up.test a0a29c4cf33475fcef07c3f8e64af795e24ab91b4cc68295863402a393cdd41c\nF test/soak.test 18944cf21b94a7fe0df02016a6ee1e9632bc4e8d095a0cb49d95e15d5cca2d5c\nF test/softheap1.test 843cd84db9891b2d01b9ab64cef3e9020f98d087\nF test/sort.test c2adc635c2564241fefec0b3a68391ef6868fd3b\nF test/sort2.test cc23b7c19d684657559e8a55b02f7fcee03851d0\nF test/sort3.test 1480ed7c4c157682542224e05e3b75faf4a149e5\nF test/sort4.test 5c34d9623a4ae5921d956dfa2b70e77ed0fc6e5c\nF test/sort5.test 6b43ae0e2169b5ceed441844492e55ba7f1ae0790528395ddf7888ab3094525d\nF test/sorterref.test a13ed207a0eea3c7898f308f979bfb518f68c598ec737d2c494dfd3deaa83506\nF test/sortfault.test d4ccf606a0c77498e2beb542764fd9394acb4d66\nF test/speed1.test f2974a91d79f58507ada01864c0e323093065452\nF test/speed1p.explain d841e650a04728b39e6740296b852dccdca9b2cb\nF test/speed1p.test b180e98609c7677382cf618c0ec9b69f789033a8\nF test/speed2.test 53177056baf6556dcbdcf032bbdfc41c1aa74ded\nF test/speed3.test 694affeb9100526007436334cf7d08f3d74b85ef\nF test/speed4.test abc0ad3399dcf9703abed2fff8705e4f8e416715\nF test/speed4p.explain 6b5f104ebeb34a038b2f714150f51d01143e59aa\nF test/speed4p.test 377a0c48e5a92e0b11c1c5ebb1bc9d83a7312c922bc0cb05970ef5d6a96d1f0c\nF test/speedtest1.c f3bfe3c6a87cbd88e4c4e38005d972bcc1019d1b2fe9569425f86629b11f6c31\nF test/spellfix.test 951a6405d49d1a23d6b78027d3877b4a33eeb8221dcab5704b499755bb4f552e\nF test/spellfix2.test dfc8f519a3fc204cb2dfa8b4f29821ae90f6f8c3\nF test/spellfix3.test 0f9efaaa502a0e0a09848028518a6fb096c8ad33\nF test/spellfix4.test 51c7c26514ade169855c66bcf130bd5acfb4d7fd090cc624645ab275ae6a41fb\nF test/sqldiff1.test 28cd737cf1b0078b1ec1bbf425e674c47785835e\nF test/sqllimits1.test 264f4b0f941800ba139d25e33ee919c5d95fea06dfbe8ac291d6811a30984ca5\nF test/sqllog.test 6af6cb0b09f4e44e1917e06ce85be7670302517a\nF test/stat.test 05669008edc5ed950e817c24e8c4b66840fda64d8c76bae27e5fc1bd23d95675\nF test/statfault.test f525a7bf633e50afd027700e9a486090684b1ac1\nF test/stmt.test 54ed2cc0764bf3e48a058331813c3dbd19fc1d0827c3d8369914a5d8f564ec75\nF test/stmtvtab1.test 6873dfb24f8e79cbb5b799b95c2e4349060eb7a3b811982749a84b359468e2d5\nF test/subjournal.test 8d4e2572c0ee9a15549f0d8e40863161295107e52f07a3e8012a2e1fdd093c49\nF test/subquery.test d7268d193dd33d5505df965399d3a594e76ae13f\nF test/subquery2.test 90cf944b9de8204569cf656028391e4af1ccc8c0cc02d4ef38ee3be8de1ffb12\nF test/subselect.test 0966aa8e720224dbd6a5e769a3ec2a723e332303\nF test/substr.test 18f57c4ca8a598805c4d64e304c418734d843c1a\nF test/subtype1.test 7fe09496352f97053af1437150751be2d0a0cae8\nF test/superlock.test ec94f0556b6488d97f71c79f9061ae08d9ab8f12\nF test/swarmvtab.test 9a3fd5ab3e9b3c976ad1b3d7646aab725114f2ac26b59395d0778b33bab6cdaf\nF test/swarmvtab2.test c948cb2fdfc5b01d85e8f6d6504854202dc1a0782ab2a0ed61538f27cbd0aa5c\nF test/swarmvtab3.test 247aa38b6ebd2b99db2075847ae47e789ac34f1c2ab5c720dfcffd990004c544\nF test/swarmvtabfault.test 8a67a9f27c61073a47990829e92bc0c64420a807cb642b15a25f6c788210ed95\nF test/symlink.test 72b22238d4405ba34df8e60b335d290a3b1129fd5c260835c944c1e4e77288a9\nF test/symlink2.test 9531f475a53d8781c4f81373f87faf2e2aff4f5fb2102ec6386e0c827916a670\nF test/sync.test 89539f4973c010eda5638407e71ca7fddbcd8e0594f4c9980229f804d4333092\nF test/sync2.test 8f9f7d4f6d5be8ca8941a8dadcc4299e558cb6a1ff653a9469146c7a76ef2039\nF test/syscall.test a39d9a36f852ae6e4800f861bc2f2e83f68bbc2112d9399931ecfadeabd2d69d\nF test/sysfault.test c9f2b0d8d677558f74de750c75e12a5454719d04\nF test/tabfunc01.test 5ca6d004157a3e886a55a9387b960cc0db41acd88753eb597ff409ec6cfb1be0\nF test/table.test eb3463b7add9f16a5bb836badf118cf391b809d09fdccd1f79684600d07ec132\nF test/tableapi.test ecbcc29c4ab62c1912c3717c48ea5c5e59f7d64e4a91034e6148bd2b82f177f4\nF test/tableopts.test dba698ba97251017b7c80d738c198d39ab747930\nF test/tclsqlite.test c4a5f5af3672fbe28a0aa322b88d9d1ce2225b6b1284ea11ede2e6d38e7c812c\nF test/tempdb.test 4cdaa23ddd8acb4d79cbb1b68ccdfd09b0537aaba909ca69a876157c2a2cbd08\nF test/tempdb2.test 353864e96fd3ae2f70773d0ffbf8b1fe48589b02c2ec05013b540879410c3440\nF test/tempfault.test 0c0d349c9a99bf5f374655742577f8712c647900\nF test/temptable.test d2c9b87a54147161bcd1822e30c1d1cd891e5b30\nF test/temptable2.test d2940417496e2b9548e01d09990763fbe88c316504033256d51493e1f1a5ce6a\nF test/temptable3.test d11a0974e52b347e45ee54ef1923c91ed91e4637\nF test/temptrigger.test 38f0ca479b1822d3117069e014daabcaacefffcc\nF test/tester.tcl abba168acd7f01dbfa3ffdbf402d151eb97e8a824d9208e845ab34c194441483\nF test/thread001.test b61a29dd87cf669f5f6ac96124a7c97d71b0c80d9012746072055877055cf9ef\nF test/thread002.test e630504f8a06c00bf8bbe68528774dd96aeb2e58\nF test/thread003.test ee4c9efc3b86a6a2767516a37bd64251272560a7\nF test/thread004.test f51dfc3936184aaf73ee85f315224baad272a87f\nF test/thread005.test 50d10b5684399676174bd96c94ad4250b1a2c8b6\nF test/thread1.test df115faa10a4ba1d456e9d4d9ec165016903eae4\nF test/thread2.test f35d2106452b77523b3a2b7d1dcde2e5ee8f9e46\nF test/thread_common.tcl 334639cadcb9f912bf82aa73f49efd5282e6cadd\nF test/threadtest1.c 6029d9c5567db28e6dc908a0c63099c3ba6c383b\nF test/threadtest2.c a70a8e94bef23339d34226eb9521015ef99f4df8\nF test/threadtest3.c 38a612ea62854349ed66372f330a40d73c5cf956\nF test/threadtest4.c c1e67136ceb6c7ec8184e56ac61db28f96bd2925\nF test/time-wordcount.sh 8e0b0f8109367827ad5d58f5cc849705731e4b90\nF test/tkt-02a8e81d44.test 6c80d9c7514e2a42d4918bf87bf6bc54f379110c\nF test/tkt-18458b1a.test 6a62cb1ee50fa3c620da59e3a6f531eb38fceaf7e2166203816b724524e6f1d6\nF test/tkt-26ff0c2d1e.test c15bec890c4d226c0da2f35ff30f9e84c169cfef90e73a8cb5cec11d723dfa96\nF test/tkt-2a5629202f.test 0521bd25658428baa26665aa53ffed9367d33af2\nF test/tkt-2d1a5c67d.test be1326f3061caec85085f4c9ee4490561ca037c0\nF test/tkt-2ea2425d34.test 1cf13e6f75d149b3209a0cb32927a82d3d79fb28\nF test/tkt-31338dca7e.test 6fb8807851964da0d24e942f2e19c7c705b9fb58\nF test/tkt-313723c356.test 4b306ad45c736cedf2f5221f6155b92143244b6d\nF test/tkt-385a5b56b9.test 5204a7cba0e28c99df0acbf95af5e1af4d32965a7a14de6eccebf949607618b1\nF test/tkt-38cb5df375.test f3cc8671f1eb604d4ae9cf886ed4366bec656678\nF test/tkt-3998683a16.test 6d1d04d551ed1704eb3396ca87bb9ccc8c5c1eb7\nF test/tkt-3a77c9714e.test 90e3e8455ee945a4076d4c44062b8845708af24a880355328fe7008f2047c9f0\nF test/tkt-3fe897352e.test 27e26eb0f1811aeba4d65aba43a4c52e99da5e70\nF test/tkt-4a03edc4c8.test 91c0e135888cdc3d4eea82406a44b05c8c1648d0\nF test/tkt-4c86b126f2.test cbcc611becd0396890169ab23102dd70048bbc9a\nF test/tkt-4dd95f6943.test 3d0ce415d2ee15d3d564121960016b9c7be79407\nF test/tkt-4ef7e3cfca.test 3965ae11cc9cf6e334f9d7d3c1e20bf8d56254b1\nF test/tkt-54844eea3f.test a12b851128f46a695e4e378cca67409b9b8f5894\nF test/tkt-5d863f876e.test 726e76d725f6fe0eb2fc8a522b721b79807380ee\nF test/tkt-5e10420e8d.test 904d1687b3c06d43e5b3555bbcf6802e7c0ffd84\nF test/tkt-5ee23731f.test 9db6e1d7209dc0794948b260d6f82b2b1de83a9f\nF test/tkt-6bfb98dfc0.test 24780633627b5cfc0635a5500c2389ebfb563336\nF test/tkt-752e1646fc.test ea78d88d14fe9866bdd991c634483334639e13bf\nF test/tkt-78e04e52ea.test cb44d0f5e7940223be740a39913a1b9b9b30d7e4a17ed3349141f893bae1b8f2\nF test/tkt-7a31705a7e6.test 9e9c057b6a9497c8f7ba7b16871029414ccf6550e7345d9085d6d71c9a56bb6f\nF test/tkt-7bbfb7d442.test 7b2cd79c7a17ae6750e75ec1a7846712a69c9d18\nF test/tkt-80ba201079.test 105a721e6aad0ae3c5946d7615d1e4d03f6145b8\nF test/tkt-80e031a00f.test 9ee36348b761bf7c14261e002b75a4c0d5a04d4c\nF test/tkt-8454a207b9.test c583a9f814a82a2b5ba95207f55001c9f0cd816c\nF test/tkt-868145d012.test a5f941107ece6a64410ca4755c6329b7eb57a356\nF test/tkt-8c63ff0ec.test 258b7fc8d7e4e1cb5362c7d65c143528b9c4cbed\nF test/tkt-91e2e8ba6f.test 08c4f94ae07696b05c9b822da0b4e5337a2f54c5\nF test/tkt-94c04eaadb.test f738c57c7f68ab8be1c054415af7774617cb6223\nF test/tkt-9a8b09f8e6.test b2ef151d0984b2ebf237760dbeaa50724e5a0667\nF test/tkt-9d68c883.test 16f7cb96781ba579bc2e19bb14b4ad609d9774b6\nF test/tkt-9f2eb3abac.test cb6123ac695a08b4454c3792fbe85108f67fabf8\nF test/tkt-a7b7803e.test 159ef554234fa1f9fb318c751b284bd1cf858da4\nF test/tkt-a7debbe0.test e295fa83cd4416a8ca37b354eb5fadefc5e81fb55253db538d35261fe9c95067\nF test/tkt-a8a0d2996a.test 002e1cde8fc30c39611b52cf981c88200b858765748556822da72e0d32fac73e\nF test/tkt-b1d3a2e531.test 8f7576e41ca179289ee1a8fee28386fd8e4b0550\nF test/tkt-b351d95f9.test d14a503c414c5c58fdde3e80f9a3cfef986498c0\nF test/tkt-b72787b1.test a95e8cdad0b98af1853ac7f0afd4ab27b77bf5f3\nF test/tkt-b75a9ca6b0.test ade89229d853a67a21bbd5e6e1e787a8f9d21f19908d1b7fca6bf3d4d5aa0767\nF test/tkt-ba7cbfaedc.test b4c0deccc12aeb55cfdb57935b16b5d67c5a9877\nF test/tkt-bd484a090c.test 60460bf946f79a79712b71f202eda501ca99b898\nF test/tkt-bdc6bbbb38.test fc38bb09bdd440e3513a1f5f98fc60a075182d7d\nF test/tkt-c48d99d690.test ba61977d62ab612fc515b3c488a6fbd6464a2447\nF test/tkt-c694113d5.test 82c461924ada5c14866c47e85535b0b0923ba16a2e907e370061a5ca77f65d77\nF test/tkt-cbd054fa6b.test 708475ef4d730a6853512c8ce363bcbd3becf0e26826e1f4cd46e2f52ff38edf\nF test/tkt-d11f09d36e.test d999b548fef885d1d1afa49a0e8544ecf436869d\nF test/tkt-d635236375.test 9d37e988b47d87505bc9445be0ca447002df5d09\nF test/tkt-d82e3f3721.test bcc0dfba658d15bab30fd4a9320c9e35d214ce30\nF test/tkt-f3e5abed55.test d5a0126118142d13e27f6ce9f4c47096e9321c00\nF test/tkt-f67b41381a.test a23bc124c981662db712167bacd0ed8ad11abac9\nF test/tkt-f777251dc7a.test d1a8fc3eefb7a9e64d19ff24d5c8c94c34a632fb\nF test/tkt-f7b4edec.test d998a08ff2b18b7f62edce8e3044317c45efe6c7\nF test/tkt-f973c7ac31.test 28ef85c7f015477916795246d8286aeda39d4ead\nF test/tkt-fa7bf5ec.test 9102dfea58aa371d78969da735f9392c57e2e035\nF test/tkt-fc62af4523.test 72825d3febdedcd5593a27989fc05accdbfc2bb4\nF test/tkt-fc7bd6358f.test 634bb4af7d661e82d6b61b80c86727bad698e08f\nF test/tkt1435.test f8c52c41de6e5ca02f1845f3a46e18e25cadac00\nF test/tkt1443.test bacc311da5c96a227bf8c167e77a30c99f8e8368\nF test/tkt1444.test a9d72f9e942708bd82dde6c707da61c489e213e9\nF test/tkt1449.test 93584a449752d52b07d2cfc280a69842b6e16ed5\nF test/tkt1473.test 9d000af3e11a4450d4c596f5e58b4b0d24eb0f8b\nF test/tkt1501.test 2064f98e00871848af4b2f517e46c1a7fb2e32db\nF test/tkt1512.test a1df1f66caf0b9122d6220c15dcee230298c2c2f\nF test/tkt1514.test ddef38e34fea72eb1ab935ded9f17a3fb71dd9df\nF test/tkt1536.test 83ff7a7b6e248016f8d682d4f7a4ae114070d466\nF test/tkt1537.test e3a14332de9770be8ff14bd15c19a49cbec10808\nF test/tkt1567.test 52f329386ac77e59260d4af1c58490d61377db20\nF test/tkt1644.test 80b6a2bb17885f3cf1cb886d97cdad13232bb869\nF test/tkt1667.test 4700d931ed19ea3983e8e703becb28079250b460\nF test/tkt1873.test 0e1b8c023050a430c2525179ed4022ddc7c31264\nF test/tkt2141.test f543d96f50d5a5dc0bc744f7db74ea166720ce46\nF test/tkt2192.test ff40157e5f42e65f844255d220fc6b290470942f\nF test/tkt2213.test a9702175601a57b61aba095a233b001d6f362474\nF test/tkt2251.test 5aab8c7898cd2df2a68fe19289cc29e8f5cf8c82\nF test/tkt2285.test cca17be61cf600b397188e77e7143844d2b977e9\nF test/tkt2332.test fc955609b958ca86dfa102832243370a0cc84070\nF test/tkt2339.test 73bd17818924cd2ac442e5fd9916b58565739450\nF test/tkt2391.test ab7a11be7402da8b51a5be603425367aa0684567\nF test/tkt2409.test be0d60e7d283f639dccea4b0b5e1cd3a4851fb5b\nF test/tkt2450.test 77ed94863f2049c1420288ddfea2d41e5e0971d6\nF test/tkt2565.test 8be666e927cb207aae88188f31c331870878b650\nF test/tkt2640.test 28134f5d1e05658ef182520cf0b680fa3de5211b\nF test/tkt2643.test 3f3ebb743da00d4fed4fcf6daed92a0e18e57813\nF test/tkt2686.test 6ee01c9b9e9c48f6d3a1fdd553b1cc4258f903d6\nF test/tkt2767.test 569000d842678f9cf2db7e0d1b27cbc9011381b0\nF test/tkt2817.test f31839e01f4243cff7399ef654d3af3558cb8d8d\nF test/tkt2820.test 39940276b3436d125deb7d8ebeee053e4cf13213\nF test/tkt2822.test f391776423a7c0d0949edfce375708bfb0f3141e\nF test/tkt2832.test a9b0b74a02dca166a04d9e37739c414b10929caa\nF test/tkt2854.test e432965db29e27e16f539b2ba7f502eb2ccc49af\nF test/tkt2920.test a8737380e4ae6424e00c0273dc12775704efbebf\nF test/tkt2927.test 4752868b9eeeb07a217f7f19f4cbaac98d6d086d\nF test/tkt2942.test c5c87d179799ca6d1fbe83c815510b87cd5ec7ce\nF test/tkt3080.test 1bca7579260920a66b4dd7e196e807c0f25ff804\nF test/tkt3093.test fbdbc5b4969244ad11f540759003e361fcaf391f\nF test/tkt3121.test 536df66a02838c26a12fe98639354ca1290ca68b\nF test/tkt3201.test f1500ccecc0d578dc4cde7d3242008297c4d59b3\nF test/tkt3292.test 7bad4423cf5eb075dbb58511d66d46fe816744754c9f0050ae60157f71a4fca7\nF test/tkt3298.test 20fd8773b825cb602e033aa04f8602e1ebdcd93c\nF test/tkt3334.test 9756631e3c4aa3c416362c279e3c0953a83b7ca8274cb81a13264bb56296d8b0\nF test/tkt3346.test 6f67c3ed7db94dfc5df4f5f0b63809a1f611e01a\nF test/tkt3357.test 77c37c6482b526fe89941ce951c22d011f5922ed\nF test/tkt3419.test 1bbf36d7ea03b638c15804251287c2391f5c1f6b\nF test/tkt3424.test 61f831bd2b071bd128fa5d00fbda57e656ca5812\nF test/tkt3442.test a1fc47c669e651d16494de3ff349bcb53281456f2ca02c8bc14220b6044bbfe8\nF test/tkt3457.test 5651e2cbb94645b677ec663160b9e192b87b7d365aecdfb24e19f749575a6fc2\nF test/tkt3461.test 228ea328a5a21e8663f80ee3d212a6ad92549a19\nF test/tkt3493.test 1686cbde85f8721fc1bdc0ee72f2ef2f63139218\nF test/tkt3508.test d75704db9501625c7f7deec119fcaf1696aefb7d\nF test/tkt3522.test 22ce2ebbcb04a6be56c0977d405c207967318fd6\nF test/tkt3527.test 1a6a48441b560bdc53aec581a868eb576234874d\nF test/tkt3541.test 5dc257bde9bc833ab9cc6844bf170b998dbb950a\nF test/tkt3554.test f599967f279077bace39220cbe76085c7b423725\nF test/tkt3581.test 1966b7193f1e3f14951cce8c66907ae69454e9a3\nF test/tkt35xx.test f38c1b03713179d414969187c941466e44945b35\nF test/tkt3630.test 9a934c58c259f89a0ae6bb6bb846c56285a6fd0f\nF test/tkt3718.test 3b59dcb5c4e7754dacd91e7fd353a61492cc402a\nF test/tkt3731.test 0c5f4cbffe102d43c3b2188af91a9e36348f974b\nF test/tkt3757.test 10cd679a88675c880533083fc79ac04324525595\nF test/tkt3761.test b95ea9c98f21cf91325f18a984887e62caceab33\nF test/tkt3762.test 4d439ff7abdc8d9323150269d182c37c2d514576\nF test/tkt3773.test 7bca904d2a647a6a4a291bd86d7fd7c73855b789\nF test/tkt3791.test a6624b9a80b216a26cf473607f42f3e51898c267\nF test/tkt3793.test d90ffd75c52413908d15e1c44fc2ea9c80fcc449\nF test/tkt3810.test 09608d81c63a6ff3aaf7bc70717909c51f5f4048\nF test/tkt3824.test 150aa00bb6220672e5f0eb14dc8eaa36750425f0\nF test/tkt3832.test 2300d10d57562b89875b72148338ac3e14f8847d\nF test/tkt3838.test 292e72489101cd1320d7278dc111c173ebf334d4\nF test/tkt3841.test 4659845bc53f809a5932c61c6ce8c5bb9d6b947f\nF test/tkt3871.test d921703d07c68f4fd5312073215a17fa34b0401d\nF test/tkt3879.test 2ad5bef2c87e9991ce941e054c31abe26ef7fb90\nF test/tkt3911.test 74cd324f3ba653040cc6d94cc4857b290d12d633\nF test/tkt3918.test ea78bf164e4d55cbde0d83c671ef6fbe930a0032\nF test/tkt3922.test f26be40ab4fe6c00795629bd2006d96e270d9b1a\nF test/tkt3929.test cdf67acf5aa936ec4ffead81db87f8a71fe40e59\nF test/tkt3935.test e15261fedb9e30a4305a311da614a5d8e693c767\nF test/tkt3992.test f3e7d548ac26f763b47bc0f750da3d03c81071da\nF test/tkt3997.test a335fa41ca3985660a139df7b734a26ef53284bd\nF test/tkt4018.test 18dbc6617f7a4b90e938d1bd6d26ad18daafaf08\nF test/tokenize.test ce430a7aed48fc98301611429595883fdfcab5d7\nF test/tpch01.test 7c4eb8cdd79c568f46d344b3e789c9fdb8a766d112871352704861f3fca32a2a\nF test/trace.test a659a9862957f4789e37a92b3bf6d2caf5c86b02cdeefc41e850ae53acf6992a\nF test/trace2.test f5cb67ad3bc09e0c58e8cca78dfd0b5639259983\nF test/trace3.test 1dff966888773ff1bfea01c080caf15417892b3f998408fe920c4791f7337144\nF test/trans.test 6e1b4c6a42dba31bd65f8fa5e61a2708e08ddde6\nF test/trans2.test 62bd045bfc7a1c14c5ba83ba64d21ade31583f76\nF test/trans3.test 91a100e5412b488e22a655fe423a14c26403ab94\nF test/transitive1.test 293300f46916569f08875cdb2fe2134be2c27677\nF test/trigger1.test 746dc327e2a0817a22bfc6f5a5e423483d3e77b3733ac20a8fe939e6541b5e53\nF test/trigger2.test d15da46f7012832faf3e0c536b47024409d5fb1722d2bb77e29c06d96d704bb1\nF test/trigger3.test aa640bb2bbb03edd5ff69c055117ea088f121945\nF test/trigger4.test 74700b76ebf3947b2f7a92405141eb2cf2a5d359\nF test/trigger5.test 619391a3e9fc194081d22cefd830d811e7badf83\nF test/trigger6.test 0e411654f122552da6590f0b4e6f781048a4a9b9\nF test/trigger7.test e7ce54bfda67a88d778aea42544e151c465547a7e617127b6914c2221a6d53c1\nF test/trigger8.test 30cb0530bd7c4728055420e3f739aa00412eafa4\nF test/trigger9.test 2226ec795a33b0460ab5cf8891e9054cc7edef41\nF test/triggerA.test 837be862d8721f903dba3f3ceff05b32e0bee5214cf6ea3da5fadf12d3650e9d\nF test/triggerB.test 56780c031b454abac2340dbb3b71ac5c56c3d7fe\nF test/triggerC.test 29f5a28d0fe39e6e2c01f6e1f53f08c0955170ae10a63ad023e33cb0a1682a51\nF test/triggerD.test 8e7f3921a92a5797d472732108109e44575fa650\nF test/triggerE.test ede2e4bce4ba802337bd69d39447fa04a938e06d84a8bfc53c76850fc36ed86d\nF test/triggerF.test 5d76f0a8c428ff87a4d5ed52da06f6096a2c787a1e21b846111dfac4123de3ad\nF test/triggerG.test d5caeef6144ede2426dd13211fd72248241ff2ebc68e12a4c0bf30f5faa21499\nF test/tt3_checkpoint.c 9e75cf7c1c364f52e1c47fd0f14c4340a9db0fe1\nF test/tt3_index.c 39eec10a35f57672225be4d182862152896dee4a\nF test/tt3_lookaside1.c 0377e202c3c2a50d688cb65ba203afeda6fafeb9\nF test/tt3_stress.c c57d804716165811d979d4a719e05baccd79277f\nF test/tt3_vacuum.c 1753f45917699c9c1f66b64c717a717c9379f776\nF test/types.test bf816ce73c7dfcfe26b700c19f97ef4050d194ff\nF test/types2.test 1aeb81976841a91eef292723649b5c4fe3bc3cac\nF test/types3.test 99e009491a54f4dc02c06bdbc0c5eea56ae3e25a\nF test/unionvtab.test e1704ab1b4c1bb3ffc9da4681f8e85a0b909fd80b937984fc94b27415ac8e5a4\nF test/unionvtabfault.test e8759f3d14fb938ce9657e2342db34aeac0fb9bc1692b0d1ebb0069630151d06\nF test/unique.test 93f8b2ef5ea51b9495f8d6493429b1fd0f465264\nF test/unique2.test 3674e9f2a3f1fbbfd4772ac74b7a97090d0f77d2\nF test/unixexcl.test d936ba2b06794018e136418addd59a2354eeae97\nF test/unordered.test ffeea7747d5ba962a8009a20b7e53d68cbae05b063604c68702c5998eb50c981\nF test/update.test 6a1193fbcb4546b4467d24635b1504b8e746b41d3b66dc6ace07581a62ce58fb\nF test/update2.test 67455bc61fcbcf96923c45b3bc4f87bc72be7d67575ad35f134906148c7b06d3\nF test/upsert1.test 0b740c8488fd2f5a06ac317c9913f7ef1eda8282f2db58b544b89480c51efab3\nF test/upsert2.test 9c3cdbb1a890227f6504ce4b0e3de68f4cdfa16bb21d8641208a9239896c5a09\nF test/upsert3.test 88d7d590a1948a9cb6eac1b54b0642f67a9f35a1fc0f19b200e97d5d39e3179c\nF test/upsert4.test 25d2a1da92f149331ae0c51ca6e3eee78189577585eab92de149900d62994fa5\nF test/upsertfault.test f21ca47740841fdb4d61acfa7b17646d773e67724fe8c185b71c018db8a94b35\nF test/uri.test 3481026f00ade6dfe8adb7acb6e1e47b04369568\nF test/uri2.test 9d3ba7a53ee167572d53a298ee4a5d38ec4a8fb7\nF test/userauth01.test e740a2697a7b40d7c5003a7d7edaee16acd349a9\nF test/utf16align.test 54cd35a27c005a9b6e7815d887718780b6a462ae\nF test/vacuum-into.test 48f4cec354fb6f27c98ef58d2fe49a11b71ff131af0cd9140efacc9858b9f670\nF test/vacuum.test ce91c39f7f91a4273bf620efad21086b5aa6ef1d\nF test/vacuum2.test aa048abee196c16c9ba308465494009057b79f9b\nF test/vacuum3.test 77ecdd54592b45a0bcb133339f99f1ae0ae94d0d\nF test/vacuum4.test 7ea76b769fffeb41f925303b04cbcf5a5bbeabe55e4c60ae754ff24eeeb7c010\nF test/vacuum5.test 263b144d537e92ad8e9ca8a73cc6e1583f41cfd0dda9432b87f7806174a2f48c\nF test/vacuummem.test 7b42abb3208bd82dd23a7536588396f295a314f2\nF test/varint.test bbce22cda8fc4d135bcc2b589574be8410614e62\nF test/veryquick.test 57ab846bacf7b90cf4e9a672721ea5c5b669b661\nF test/view.test 10ea54300a097d7c0337fd104abffe4a4786d1598b94017a37efe0e0d3e04dd5\nF test/vtab1.test c5d9e90ed02bcacd776dcbb7360199d290f7f53c26b484ddece543060c54319f\nF test/vtab2.test 14d4ab26cee13ba6cf5c5601b158e4f57552d3b055cdd9406cf7f711e9c84082\nF test/vtab3.test b45f47d20f225ccc9c28dc915d92740c2dee311e\nF test/vtab4.test 8e73ed268f3d596bc3590f45fc948fb40f28e9c3\nF test/vtab5.test 889f444970393c73f1e077e2bdc5d845e157a391\nF test/vtab6.test 8e789f526e6594cf7ae933d1adee0caa87dc9f78\nF test/vtab7.test 70c6f4a1d6177144a8236e4172d5fba92e683440374664ad1f04851fbb335d3c\nF test/vtab8.test e19fa4a538fcd1bb66c22825fa8f71618fb13583\nF test/vtab9.test ea58d2b95d61955f87226381716b2d0b1d4e4f9b\nF test/vtabA.test 1317f06a03597eee29f40a49b6c21e1aaba4285f\nF test/vtabB.test 04df5dc531b9f44d9ca65b9c1b79f12b5922a796\nF test/vtabC.test 4528f459a13136f982e75614d120aef165f17292\nF test/vtabD.test 05b3f1d77117271671089e48719524b676842e96\nF test/vtabE.test 2a143fe75a11275781d1fd1988d86b66a3f69cb98f4add62e3da8fd0f637b45f\nF test/vtabF.test 1918844c7c902f6a16c8dacf1ec8f84886d6e78b\nF test/vtabH.test 2efb5a24b0bb50796b21eca23032cfb77abfa4b0c03938e38ce5897abac404ca\nF test/vtabI.test 751b07636700dbdea328e4265b6077ccd6811a3f\nF test/vtabJ.test d7b73675708cf63cfcb9d443bb451fc01a028347275b7311e51f9fdf3ca6757f\nF test/vtab_alter.test 736e66fb5ec7b4fee58229aa3ada2f27ec58bc58c00edae4836890c3784c6783\nF test/vtab_err.test dcc8b7b9cb67522b3fe7a272c73856829dae4ab7fdb30399aea1b6981bda2b65\nF test/vtab_shared.test 5253bff2355a9a3f014c15337da7e177ab0ef8ad\nF test/vtabdrop.test 65d4cf6722972e5499bdaf0c0d70ee3b8133944a4e4bc31862563f32a7edca12\nF test/wal.test cdf0ca6cc0447520d19ef1c83287824ebeb3e82d75af856511ba96841a79fc9b\nF test/wal2.test 537f59e5c5932e3b45bf3591ae3e48a2601360c2e52821b633e222fe6ebd5b09\nF test/wal3.test 2a93004bc0fb2b5c29888964024695bade278ab2\nF test/wal4.test 4744e155cd6299c6bd99d3eab1c82f77db9cdb3c\nF test/wal5.test 9c11da7aeccd83a46d79a556ad11a18d3cb15aa9\nF test/wal6.test b602704e4b066199bc89d91ca9000f335dcf4572\nF test/wal64k.test 2a525c0f45d709bae3765c71045ccec5df7d100ccbd3a7860fdba46c9addb965\nF test/wal7.test 2ae8f427d240099cc4b2dfef63cff44e2a68a1bd\nF test/wal8.test d9df3fba4caad5854ed69ed673c68482514203c8\nF test/wal9.test 378e76a9ad09cd9bee06c172ad3547b0129a6750\nF test/wal_common.tcl a98f17fba96206122eff624db0ab13ec377be4fe\nF test/walbak.test 018d4e5a3d45c6298d11b99f09a8ef6876527946\nF test/walbig.test f437473a16cfb314867c6b5d1dbcd519e73e3434\nF test/walblock.test be48f3a75eff0b4456209f26b3ce186c2015497d\nF test/walcksum.test bb234a1bb42248b3515d992b719708015c384278\nF test/walcrash.test 21038858cc552077b0522f50b0fa87e38139306a\nF test/walcrash2.test a0edab4e5390f03b99a790de89aad15d6ec70b36\nF test/walcrash3.test e426aa58122d20f2b9fbe9a507f9eb8cab85b8af\nF test/walcrash4.test e7b6e7639a950a0cca8e210e248c8dad4d63bf20\nF test/walfault.test 09b8ad7e52d2f54bce50e31aa7ea51412bb9f70ac13c74e669ddcd8b48b0d98d\nF test/walfault2.test e039ac66c78d5561683cacde04097213cdad3b58e2b3f3fe1112862217bfd915\nF test/walhook.test ed00a40ba7255da22d6b66433ab61fab16a63483\nF test/walmode.test cd6e7cff618eaaa5910ce57c3657aa50110397f86213886a2400afb9bfec7b7b\nF test/walnoshm.test 84ca10c544632a756467336b7c3b864d493ee496\nF test/waloverwrite.test dad2f26567f1b45174e54fbf9a8dc1cb876a7f03\nF test/walpersist.test 8c6b7e3ec1ba91b5e4dc4e0921d6d3f87cd356a6\nF test/walprotocol.test a112aba0b79e3adeaa485fed09484b32c654e97df58e454aa8489ac2cd57bf84\nF test/walprotocol2.test 7d3b6b4bf0b12f8007121b1e6ef714bc99101fb3b48e46371df1db868eebc131\nF test/walro.test cb438d05ba0d191f10b688e39c4f0cd5b71569a1d1f4440e5bdf3c6880e08c20\nF test/walro2.test 0e79dd15cbdb4f482c01ea248373669c732414a726b357d04846a816afafb768\nF test/walrofault.test c70cb6e308c443867701856cce92ad8288cd99488fa52afab77cca6cfd51af68\nF test/walshared.test 0befc811dcf0b287efae21612304d15576e35417\nF test/walslow.test c05c68d4dc2700a982f89133ce103a1a84cc285f\nF test/walthread.test 14b20fcfa6ae152f5d8e12f5dc8a8a724b7ef189f5d8ef1e2ceab79f2af51747\nF test/walvfs.test ca81c9f427e0e5434076dfa948fd1d8e6d5ddd192b2fb6991635d81da5f3f5d4\nF test/wapp.tcl b440cd8cf57953d3a49e7ee81e6a18f18efdaf113b69f7d8482b0710a64566ec\nF test/wapptest.tcl 3cca775aede0591756a1fc0da55bbb3715d8c363873fd2cfdd4d555b0a4af57d x\nF test/where.test 19c709c9f0f6ed12c23f909f6592aa55fba34269d5a2898537aa27a22b9ce650\nF test/where2.test 478d2170637b9211f593120648858593bf2445a1\nF test/where3.test 2341a294e17193a6b1699ea7f192124a5286ca6acfcc3f4b06d16c931fbcda2c\nF test/where4.test 4a371bfcc607f41d233701bdec33ac2972908ba8\nF test/where5.test fdf66f96d29a064b63eb543e28da4dfdccd81ad2\nF test/where6.test 5da5a98cec820d488e82708301b96cb8c18a258b\nF test/where7.test 75722434c486ac9e74718caa6cce234f45ba34c0b6c0f9555b29eb8bb5f6ade1\nF test/where8.test 461ca40265ed996a6305da99bb024b0e41602bb586acf544c08f95922358e49f\nF test/where9.test 2c554b97bbdb2fdf26c57099f60db8a52bfcf7c147f2c256f9798fa0e267ca85\nF test/whereA.test 6c6a420ca7d313242f9b1bd471dc80e4d0f8323700ba9c78df0bb843d4daa3b4\nF test/whereB.test 0def95db3bdec220a731c7e4bec5930327c1d8c5\nF test/whereC.test cae295158703cb3fc23bf1a108a9ab730efff0f6\nF test/whereD.test 711d4df58d6d4fb9b3f5ce040b818564198be002\nF test/whereE.test b3a055eef928c992b0a33198a7b8dc10eea5ad2f\nF test/whereF.test 3d9412b1199d3e2bed34fcb76b4c48d0bf4df95d27e3f8dd27b6f8b4716d0d89\nF test/whereG.test 4cda56de49f0c7d9a4f2590a3ddc5f79a7f2a03d2229d0f5bb5d3981ce57f293\nF test/whereH.test e4b07f7a3c2f5d31195cd33710054c78667573b2\nF test/whereI.test a2874062140ed4aba9ffae76e6190a3df6fc73d1373fdfa8fd632945082a5364\nF test/whereJ.test 88287550f6ee604422403b053455b1ad894eeaa5c35d348532dfa1439286cb9a\nF test/whereK.test f8e3cf26a8513ecc7f514f54df9f0572c046c42b\nF test/whereL.test 0a19fc44cd1122040f56c934f1b14d0ca85bde28f270268a428dd9796ea0634c\nF test/wherefault.test 1374c3aa198388925246475f84ad4cd5f9528864\nF test/wherelfault.test 9012e4ef5259058b771606616bd007af5d154e64cc25fa9fd4170f6411db44e3\nF test/wherelimit.test 592081800806d297dd7449b1030c863d2883d6d42901837ccd2e5a9bd962edb0\nF test/wherelimit2.test 9bf0aa56cca40ea0e4c5e2915341355a2bbc0859ec4ce1589197fe2a9d94635f\nF test/win32heap.test 10fd891266bd00af68671e702317726375e5407561d859be1aa04696f2aeee74\nF test/win32lock.test fbf107c91d8f5512be5a5b87c4c42ab9fdd54972\nF test/win32longpath.test 169c75a3b2e43481f4a62122510210c67b08f26d\nF test/win32nolock.test ac4f08811a562e45a5755e661f45ca85892bdbbc\nF test/window1.test b3567fde130dd65fedf56da66a3916cc992e61f910a56b7dac3f71608809faac\nF test/window2.tcl 66db96fd9fd202bc31ee7f8ce7904cb469564864cff3f74e009bfef8102333f4\nF test/window2.test af2a001ded703bb8f2474fb0edfef170d5aba00f5c1f2aa9f65935b5da13df90\nF test/window3.tcl acea6e86a4324a210fd608d06741010ca83ded9fde438341cb978c49928faf03\nF test/window3.test e9959a993c8a71e96433be8daaa1827d78b8921e4f12debd7bdbeb3c856ef3cb\nF test/window4.tcl d732df0e81beedc0ba8a563ade68611d322d27303ad0c0c8e4444107c39e84ec\nF test/window4.test 807f3e6b15f9338e5b9742b87c5c7ca825b42b9657fde6096e890119370848e0\nF test/window5.test d328dd18221217c49c144181975eea17339eaeaf0e9aa558cee3afb84652821e\nF test/window6.test f8d674254b23289cc17c84d79dec7eda7caa1dfb7836c43122cfdf3640d1df32\nF test/window7.tcl 6a1210f05d40ec89c22960213a22cd3f98d4e2f2eb20646c83c8c30d4d76108f\nF test/window7.test 1d31276961ae7801edc72173edaf7593e3cbc79c06d1f1f09e20d8418af403cd\nF test/window8.tcl f2711aa3571e4e6b0dad98db8d95fd6cb8d9db0c92bbdf535f153b07606a1ce2\nF test/window8.test c4331b27a6f66d69fa8f8bab10cc731db1a81d293ae108a68f7c3487fa94e65b\nF test/window9.test b63f6f74d730547e63e78946f951f5d1a7d4e99f91f6d5906305469043d92a15\nF test/windowA.test 6d63dc1260daa17141a55007600581778523a8b420629f1282d2acfc36af23be\nF test/windowB.test 7a983ea1cc1cf72be7f378e4b32f6cb2d73014c5cd8b25aaee825164cd4269e5\nF test/windowerr.tcl f5acd6fbc210d7b5546c0e879d157888455cd4a17a1d3f28f07c1c8a387019e0\nF test/windowerr.test a8b752402109c15aa1c5efe1b93ccb0ce1ef84fa964ae1cd6684dd0b3cc1819b\nF test/windowfault.test a90b397837209f15e54afa62e8be39b2759a0101fae04e05a08bcc50e243a452\nF test/with1.test d32792084dcb5f6c047d77bb8a032822ef9fe050ade07d0aeffa37753a05e3c9\nF test/with2.test e0030e2f0267a910d6c0e4f46f2dfe941c1cc0d4f659ba69b3597728e7e8f1ab\nF test/with3.test 7de8dff2891aca0f9453463e4a2d6eb995baf137827d5596116fee53e22a4e29\nF test/with4.test 257be66c0c67fee1defbbac0f685c3465e2cad037f21ce65f23f86084f198205\nF test/withM.test 693b61765f2b387b5e3e24a4536e2e82de15ff64\nF test/without_rowid1.test 9cfb83705c506e3849fa7efc88a3c9a15f9a50bf9b1516b41757a7cef9bba8c3\nF test/without_rowid2.test af260339f79d13cb220288b67cd287fbcf81ad99\nF test/without_rowid3.test ea4b59dd1b0d7f5f5e4b7cca978cdb905752a9d7c57dc4344a591dba765a3691\nF test/without_rowid4.test 4e08bcbaee0399f35d58b5581881e7a6243d458a\nF test/without_rowid5.test 89b1c587bd92a0590e440da33e7666bf4891572a\nF test/without_rowid6.test 8463b20098e9f75a501a9f17dfb42fffc79068eac0b2775fe56ef2281d2df45e\nF test/without_rowid7.test d7c59a93d726b55812d620f8f284e01904a5b85f9ee9eea8f2f68571a5e8c40e\nF test/wordcount.c d721a4b6fae93e6e33449700bce1686bc23257c27425bc3ef1599dc912adec66\nF test/writecrash.test f1da7f7adfe8d7f09ea79b42e5ca6dcc41102f27f8e334ad71539501ddd910cc\nF test/zeroblob.test 07a5b11ab591d1f26c626945fb7f228f68b993533b2ada77273edf6ee29db174\nF test/zerodamage.test 9c41628db7e8d9e8a0181e59ea5f189df311a9f6ce99cc376dc461f66db6f8dc\nF test/zipfile.test b3b558639f7a103e095713ad0f57fec1fce1b7d60c8054df5789b98f7547a395\nF test/zipfile2.test 9903388a602a3834189857a985106ff95c3bba6a3969e0134127df991889db5d\nF test/zipfilefault.test 44d4d7a7f7cca7521d569d7f71026b241d65a6b1757aa409c1a168827edbbc2c\nF tool/GetFile.cs 47852aa0d806fe47ed1ac5138bdce7f000fe87aaa7f28107d0cb1e26682aeb44\nF tool/GetTclKit.bat 8995df40c4209808b31f24de0b58f90930239a234f7591e3675d45bfbb990c5d\nF tool/Replace.cs 02c67258801c2fb5f63231e0ac0f220b4b36ba91\nF tool/build-all-msvc.bat c12328d06c45fec8baada5949e3d5af54bf8c887 x\nF tool/build-shell.sh 950f47c6174f1eea171319438b93ba67ff5bf367\nF tool/cg_anno.tcl c1f875f5a4c9caca3d59937b16aff716f8b1883935f1b4c9ae23124705bc8099 x\nF tool/checkSpacing.c 810e51703529a204fc4e1eb060e9ab663e3c06d2\nF tool/dbhash.c 19560c9a2aa2b269b6a5108259b93d26d12f8f0877c31fe9f8f61dfbd219ba63\nF tool/dbtotxt.c b2221864a20fb391c46bd31bc1fbdc4a96f5c8a89bef58f421eb9b9c36b1702c\nF tool/dbtotxt.md c9a57af8739957ef36d2cfad5c4b1443ff3688ed33e4901ee200c8b651f43f3c\nF tool/extract-sqlite3h.tcl 069ceab0cee26cba99952bfa08c0b23e35941c837acabe143f0c355d96c9e2eb x\nF tool/extract.c 054069d81b095fbdc189a6f5d4466e40380505e2\nF tool/fast_vacuum.c 5ba0d6f5963a0a63bdc42840f678bad75b2ebce1\nF tool/fragck.tcl 5265a95126abcf6ab357f7efa544787e5963f439\nF tool/fuzzershell.c e1d90a03ca790d7c331c2aae08ca46ff435f1ae1faa6cb9cc48f4687c18fdc6e\nF tool/genfkey.README cf68fddd4643bbe3ff8e31b8b6d8b0a1b85e20f4\nF tool/genfkey.test b6afd7b825d797a1e1274f519ab5695373552ecad5cd373530c63533638a5a4f\nF tool/getlock.c f4c39b651370156cae979501a7b156bdba50e7ce\nF tool/index_usage.c 9ec344d29cbeb03fdc0fce668eedfb7495792170de933adf95cf8d6904a166ad\nF tool/kvtest-speed.sh 4761a9c4b3530907562314d7757995787f7aef8f\nF tool/lemon.c fa7912caf5662ee9b3afc7ff2a2607e81437d603e2f86c88ab412ef43f78fc24\nF tool/lempar.c 34b136b281ae022277738d8b51061237fb330deaa317010d89375117e3a028aa\nF tool/libvers.c caafc3b689638a1d88d44bc5f526c2278760d9b9\nF tool/loadfts.c c3c64e4d5e90e8ba41159232c2189dba4be7b862\nF tool/logest.c 11346aa019e2e77a00902aa7d0cabd27bd2e8cca\nF tool/max-limits.c cbb635fbb37ae4d05f240bfb5b5270bb63c54439\nF tool/mkautoconfamal.sh 422fc365358a2e92876ffc62971a0ff28ed472fc8bcf9de0df921c736fdeca5e\nF tool/mkccode.tcl 86463e68ce9c15d3041610fedd285ce32a5cf7a58fc88b3202b8b76837650dbe x\nF tool/mkctimec.tcl dd183b73ae1c28249669741c250525f0407e579a70482371668fd5f130d9feb3\nF tool/mkkeywordhash.c 27ffc6f6e7e3ecbfc5bca1f1f11a09fc5badf6d67557a5fb2d3b069dbed90617\nF tool/mkmsvcmin.tcl cad0c7b54d7dd92bc87d59f36d4cc4f070eb2e625f14159dc2f5c4204e6a13ea\nF tool/mkopcodec.tcl d1b6362bd3aa80d5520d4d6f3765badf01f6c43c\nF tool/mkopcodeh.tcl 352a4319c0ad869eb26442bf7c3b015aa15594c21f1cce5a6420dbe999367c21\nF tool/mkopts.tcl 680f785fdb09729fd9ac50632413da4eadbdf9071535e3f26d03795828ab07fa\nF tool/mkpragmatab.tcl 70269c7013dab01c5d366b1bb4cee6e42fa1a3a8d179a052d14d6b31f11ad77f\nF tool/mkshellc.tcl 70a9978e363b0f3280ca9ce1c46d72563ff479c1930a12a7375e3881b7325712\nF tool/mksourceid.c 36aa8020014aed0836fd13c51d6dc9219b0df1761d6b5f58ff5b616211b079b9\nF tool/mkspeedsql.tcl a1a334d288f7adfe6e996f2e712becf076745c97\nF tool/mksqlite3c-noext.tcl 4f7cfef5152b0c91920355cbfc1d608a4ad242cb819f1aea07f6d0274f584a7f\nF tool/mksqlite3c.tcl 5fed3d75069d8f66f202d3b5200b0cea4aa7108481acd06732a06fdd42eb83a2\nF tool/mksqlite3h.tcl 080873e3856eceb9d289a08a00c4b30f875ea3feadcbece796bd509b1532792c\nF tool/mksqlite3internalh.tcl eb994013e833359137eb53a55acdad0b5ae1049b\nF tool/mkvsix.tcl b9e0777a213c23156b6542842c238479e496ebf5\nF tool/offsets.c fe4262fdfa378e8f5499a42136d17bf3b98f6091\nF tool/omittest.tcl 27f9413c3343bac200a28d81e8234adb0f5e141c4771893cb19b40235a91f1e0\nF tool/opcodesum.tcl 740ed206ba8c5040018988129abbf3089a0ccf4a\nF tool/pagesig.c ff0ca355fd3c2398e933da5e22439bbff89b803b\nF tool/replace.tcl 60f91e8dd06ab81f74d213ecbd9c9945f32ac048\nF tool/restore_jrnl.tcl 6957a34f8f1f0f8285e07536225ec3b292a9024a\nF tool/rollback-test.c 9fc98427d1e23e84429d7e6d07d9094fbdec65a5\nF tool/run-speed-test.sh f95d19fd669b68c4c38b6b475242841d47c66076\nF tool/showdb.c 97d14a1ce32d5edda84081a5c939bd8975abd89568a773b288940e67e4c7e3ad\nF tool/showjournal.c 5bad7ae8784a43d2b270d953060423b8bd480818\nF tool/showlocks.c 9920bcc64f58378ff1118caead34147201f48c68\nF tool/showshm.c a0ab6ec32dd1f11218ca2a4018f8fb875b59414801ab8ceed8b2e69b7b45a809\nF tool/showstat4.c 0682ebea7abf4d3657f53c4a243f2e7eab48eab344ed36a94bb75dcd19a5c2a1\nF tool/showwal.c ad9d768f96ca6199ad3a8c9562d679680bd032dd01204ea3e5ea6fb931d81847\nF tool/soak1.tcl 8d407956e1a45b485a8e072470a3e629a27037fe\nF tool/spaceanal.tcl 4bfd19aad7eb3ce0372ef0255f58035e0bba4ff5e9acfd763a10c6fb365c8dec\nF tool/speed-check.sh 2b042d703a9472f08c3b13be27afac658426f8e4fc87cd2d575953fda86f08d1\nF tool/speedtest.tcl 06c76698485ccf597b9e7dbb1ac70706eb873355\nF tool/speedtest16.c ecb6542862151c3e6509bbc00509b234562ae81e\nF tool/speedtest2.tcl ee2149167303ba8e95af97873c575c3e0fab58ff\nF tool/speedtest8.c 2902c46588c40b55661e471d7a86e4dd71a18224\nF tool/speedtest8inst1.c 7ce07da76b5e745783e703a834417d725b7d45fd\nF tool/split-sqlite3c.tcl 3efcd4240b738f6bb2b5af0aea7e1e0ef9bc1c61654f645076cec883030b710c\nF tool/sqldiff.c 7b9b7238284f02131dbb8f21a4e862409bff728045c5473139d28c67ac87580e\nF tool/sqlite3_analyzer.c.in 7eeaae8b0d7577662acaabbb11107af0659d1b41bc1dfdd4d91422de27127968\nF tool/sqltclsh.c.in 1bcc2e9da58fadf17b0bf6a50e68c1159e602ce057210b655d50bad5aaaef898\nF tool/sqltclsh.tcl 862f4cf1418df5e1315b5db3b5ebe88969e2a784525af5fbf9596592f14ed848\nF tool/srcck1.c 371de5363b70154012955544f86fdee8f6e5326f\nF tool/stack_usage.tcl f8e71b92cdb099a147dad572375595eae55eca43\nF tool/symbols-mingw.sh 4dbcea7e74768305384c9fd2ed2b41bbf9f0414d\nF tool/symbols.sh 1612bd947750e21e7b47befad5f6b3825b06cce0705441f903bf35ced65ae9b9\nF tool/varint.c 5d94cb5003db9dbbcbcc5df08d66f16071aee003\nF tool/vdbe-compress.tcl 5926c71f9c12d2ab73ef35c29376e756eb68361c\nF tool/vdbe_profile.tcl 246d0da094856d72d2c12efec03250d71639d19f\nF tool/warnings-clang.sh bbf6a1e685e534c92ec2bfba5b1745f34fb6f0bc2a362850723a9ee87c1b31a7\nF tool/warnings.sh 09311479bdc290e20ec8e35a3d1b14b096bbd96222277cfd6274c3a99b3d012f\nF tool/win/sqlite.vsix deb315d026cc8400325c5863eef847784a219a2f\nF vsixtest/App.xaml b76d3b48860e7454775c47ea38ffea9c4abe3e85\nF vsixtest/App.xaml.cpp c465147f50871165c60ca16955219f6c5812d6d8\nF vsixtest/App.xaml.h 4a9768e2983d05600ad1e1c2f1b00a132967da9f\nF vsixtest/Assets/LockScreenLogo.scale-200.png e820c9a3deb909197081b0bf3216c06e13905f0a\nF vsixtest/Assets/SplashScreen.scale-200.png cab70988ca71bebec7bfeb3b6dbafe17b9ab0b4a\nF vsixtest/Assets/Square150x150Logo.scale-200.png e17b40817db7a239fc239d83efcc951fb824e3ff\nF vsixtest/Assets/Square44x44Logo.scale-200.png 2f166237094dea94d952d10b9eeae81806844f1c\nF vsixtest/Assets/Square44x44Logo.targetsize-24_altform-unplated.png 5f6a6d391b95a3061ccca6e6fdd6955ede63b4ed\nF vsixtest/Assets/StoreLogo.png 0828b7257db74a4ecd5eeb6b7b4971f0fdc4d9d1\nF vsixtest/Assets/Wide310x150Logo.scale-200.png 04ddefe5bc5f43ae12a7433f6f236ddab101ac42\nF vsixtest/MainPage.xaml 34f49897e3ca533a7e74506ba0759b66eebce151\nF vsixtest/MainPage.xaml.cpp 7f31fc6de751b64676c0924c97a5485d950a91d7\nF vsixtest/MainPage.xaml.h cc05cca10d50a003f6c6e4448b701cdd07f52f29\nF vsixtest/Package.appxmanifest 6b6db1eb7df3a315c5d681059754d5f0e0c47a93\nF vsixtest/pch.cpp cb823cfac36f1a39a7eb0acbd7e9a0b0de8f23af\nF vsixtest/pch.h 9cab7980f2ac4baa40807d8b5e52af32a21cf78c\nF vsixtest/vsixtest.sln 77cadbe4e96c1fe1bf51cd77de9e9b0a12ada547\nF vsixtest/vsixtest.tcl 6a9a6ab600c25a91a7acc6293828957a386a8a93\nF vsixtest/vsixtest.vcxproj.data 2ed517e100c66dc455b492e1a33350c1b20fbcdc\nF vsixtest/vsixtest.vcxproj.filters 37e51ffedcdb064aad6ff33b6148725226cd608e\nF vsixtest/vsixtest_TemporaryKey.pfx e5b1b036facdb453873e7084e1cae9102ccc67a0\nP e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539\nR 214fd6f511022e08e69f40b8ca4a69e8\nU drh\nZ 7b3cdd64628ae3e72f321ced6b81d514\n", "f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400", "/*\n** 2003 April 6\n**\n** The author disclaims copyright to this source code.  In place of\n** a legal notice, here is a blessing:\n**\n**    May you do good and not evil.\n**    May you find forgiveness for yourself and forgive others.\n**    May you share freely, never taking more than you give.\n**\n*************************************************************************\n** This file contains code used to implement the PRAGMA command.\n*/\n#include \"sqliteInt.h\"\n\n#if !defined(SQLITE_ENABLE_LOCKING_STYLE)\n#  if defined(__APPLE__)\n#    define SQLITE_ENABLE_LOCKING_STYLE 1\n#  else\n#    define SQLITE_ENABLE_LOCKING_STYLE 0\n#  endif\n#endif\n\n/***************************************************************************\n** The \"pragma.h\" include file is an automatically generated file that\n** that includes the PragType_XXXX macro definitions and the aPragmaName[]\n** object.  This ensures that the aPragmaName[] table is arranged in\n** lexicographical order to facility a binary search of the pragma name.\n** Do not edit pragma.h directly.  Edit and rerun the script in at \n** ../tool/mkpragmatab.tcl. */\n#include \"pragma.h\"\n\n/*\n** Interpret the given string as a safety level.  Return 0 for OFF,\n** 1 for ON or NORMAL, 2 for FULL, and 3 for EXTRA.  Return 1 for an empty or \n** unrecognized string argument.  The FULL and EXTRA option is disallowed\n** if the omitFull parameter it 1.\n**\n** Note that the values returned are one less that the values that\n** should be passed into sqlite3BtreeSetSafetyLevel().  The is done\n** to support legacy SQL code.  The safety level used to be boolean\n** and older scripts may have used numbers 0 for OFF and 1 for ON.\n*/\nstatic u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){\n                             /* 123456789 123456789 123 */\n  static const char zText[] = \"onoffalseyestruextrafull\";\n  static const u8 iOffset[] = {0, 1, 2,  4,    9,  12,  15,   20};\n  static const u8 iLength[] = {2, 2, 3,  5,    3,   4,   5,    4};\n  static const u8 iValue[] =  {1, 0, 0,  0,    1,   1,   3,    2};\n                            /* on no off false yes true extra full */\n  int i, n;\n  if( sqlite3Isdigit(*z) ){\n    return (u8)sqlite3Atoi(z);\n  }\n  n = sqlite3Strlen30(z);\n  for(i=0; i<ArraySize(iLength); i++){\n    if( iLength[i]==n && sqlite3StrNICmp(&zText[iOffset[i]],z,n)==0\n     && (!omitFull || iValue[i]<=1)\n    ){\n      return iValue[i];\n    }\n  }\n  return dflt;\n}\n\n/*\n** Interpret the given string as a boolean value.\n*/\nu8 sqlite3GetBoolean(const char *z, u8 dflt){\n  return getSafetyLevel(z,1,dflt)!=0;\n}\n\n/* The sqlite3GetBoolean() function is used by other modules but the\n** remainder of this file is specific to PRAGMA processing.  So omit\n** the rest of the file if PRAGMAs are omitted from the build.\n*/\n#if !defined(SQLITE_OMIT_PRAGMA)\n\n/*\n** Interpret the given string as a locking mode value.\n*/\nstatic int getLockingMode(const char *z){\n  if( z ){\n    if( 0==sqlite3StrICmp(z, \"exclusive\") ) return PAGER_LOCKINGMODE_EXCLUSIVE;\n    if( 0==sqlite3StrICmp(z, \"normal\") ) return PAGER_LOCKINGMODE_NORMAL;\n  }\n  return PAGER_LOCKINGMODE_QUERY;\n}\n\n#ifndef SQLITE_OMIT_AUTOVACUUM\n/*\n** Interpret the given string as an auto-vacuum mode value.\n**\n** The following strings, \"none\", \"full\" and \"incremental\" are \n** acceptable, as are their numeric equivalents: 0, 1 and 2 respectively.\n*/\nstatic int getAutoVacuum(const char *z){\n  int i;\n  if( 0==sqlite3StrICmp(z, \"none\") ) return BTREE_AUTOVACUUM_NONE;\n  if( 0==sqlite3StrICmp(z, \"full\") ) return BTREE_AUTOVACUUM_FULL;\n  if( 0==sqlite3StrICmp(z, \"incremental\") ) return BTREE_AUTOVACUUM_INCR;\n  i = sqlite3Atoi(z);\n  return (u8)((i>=0&&i<=2)?i:0);\n}\n#endif /* ifndef SQLITE_OMIT_AUTOVACUUM */\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n/*\n** Interpret the given string as a temp db location. Return 1 for file\n** backed temporary databases, 2 for the Red-Black tree in memory database\n** and 0 to use the compile-time default.\n*/\nstatic int getTempStore(const char *z){\n  if( z[0]>='0' && z[0]<='2' ){\n    return z[0] - '0';\n  }else if( sqlite3StrICmp(z, \"file\")==0 ){\n    return 1;\n  }else if( sqlite3StrICmp(z, \"memory\")==0 ){\n    return 2;\n  }else{\n    return 0;\n  }\n}\n#endif /* SQLITE_PAGER_PRAGMAS */\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n/*\n** Invalidate temp storage, either when the temp storage is changed\n** from default, or when 'file' and the temp_store_directory has changed\n*/\nstatic int invalidateTempStorage(Parse *pParse){\n  sqlite3 *db = pParse->db;\n  if( db->aDb[1].pBt!=0 ){\n    if( !db->autoCommit || sqlite3BtreeIsInReadTrans(db->aDb[1].pBt) ){\n      sqlite3ErrorMsg(pParse, \"temporary storage cannot be changed \"\n        \"from within a transaction\");\n      return SQLITE_ERROR;\n    }\n    sqlite3BtreeClose(db->aDb[1].pBt);\n    db->aDb[1].pBt = 0;\n    sqlite3ResetAllSchemasOfConnection(db);\n  }\n  return SQLITE_OK;\n}\n#endif /* SQLITE_PAGER_PRAGMAS */\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n/*\n** If the TEMP database is open, close it and mark the database schema\n** as needing reloading.  This must be done when using the SQLITE_TEMP_STORE\n** or DEFAULT_TEMP_STORE pragmas.\n*/\nstatic int changeTempStorage(Parse *pParse, const char *zStorageType){\n  int ts = getTempStore(zStorageType);\n  sqlite3 *db = pParse->db;\n  if( db->temp_store==ts ) return SQLITE_OK;\n  if( invalidateTempStorage( pParse ) != SQLITE_OK ){\n    return SQLITE_ERROR;\n  }\n  db->temp_store = (u8)ts;\n  return SQLITE_OK;\n}\n#endif /* SQLITE_PAGER_PRAGMAS */\n\n/*\n** Set result column names for a pragma.\n*/\nstatic void setPragmaResultColumnNames(\n  Vdbe *v,                     /* The query under construction */\n  const PragmaName *pPragma    /* The pragma */\n){\n  u8 n = pPragma->nPragCName;\n  sqlite3VdbeSetNumCols(v, n==0 ? 1 : n);\n  if( n==0 ){\n    sqlite3VdbeSetColName(v, 0, COLNAME_NAME, pPragma->zName, SQLITE_STATIC);\n  }else{\n    int i, j;\n    for(i=0, j=pPragma->iPragCName; i<n; i++, j++){\n      sqlite3VdbeSetColName(v, i, COLNAME_NAME, pragCName[j], SQLITE_STATIC);\n    }\n  }\n}\n\n/*\n** Generate code to return a single integer value.\n*/\nstatic void returnSingleInt(Vdbe *v, i64 value){\n  sqlite3VdbeAddOp4Dup8(v, OP_Int64, 0, 1, 0, (const u8*)&value, P4_INT64);\n  sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n}\n\n/*\n** Generate code to return a single text value.\n*/\nstatic void returnSingleText(\n  Vdbe *v,                /* Prepared statement under construction */\n  const char *zValue      /* Value to be returned */\n){\n  if( zValue ){\n    sqlite3VdbeLoadString(v, 1, (const char*)zValue);\n    sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n  }\n}\n\n\n/*\n** Set the safety_level and pager flags for pager iDb.  Or if iDb<0\n** set these values for all pagers.\n*/\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\nstatic void setAllPagerFlags(sqlite3 *db){\n  if( db->autoCommit ){\n    Db *pDb = db->aDb;\n    int n = db->nDb;\n    assert( SQLITE_FullFSync==PAGER_FULLFSYNC );\n    assert( SQLITE_CkptFullFSync==PAGER_CKPT_FULLFSYNC );\n    assert( SQLITE_CacheSpill==PAGER_CACHESPILL );\n    assert( (PAGER_FULLFSYNC | PAGER_CKPT_FULLFSYNC | PAGER_CACHESPILL)\n             ==  PAGER_FLAGS_MASK );\n    assert( (pDb->safety_level & PAGER_SYNCHRONOUS_MASK)==pDb->safety_level );\n    while( (n--) > 0 ){\n      if( pDb->pBt ){\n        sqlite3BtreeSetPagerFlags(pDb->pBt,\n                 pDb->safety_level | (db->flags & PAGER_FLAGS_MASK) );\n      }\n      pDb++;\n    }\n  }\n}\n#else\n# define setAllPagerFlags(X)  /* no-op */\n#endif\n\n\n/*\n** Return a human-readable name for a constraint resolution action.\n*/\n#ifndef SQLITE_OMIT_FOREIGN_KEY\nstatic const char *actionName(u8 action){\n  const char *zName;\n  switch( action ){\n    case OE_SetNull:  zName = \"SET NULL\";        break;\n    case OE_SetDflt:  zName = \"SET DEFAULT\";     break;\n    case OE_Cascade:  zName = \"CASCADE\";         break;\n    case OE_Restrict: zName = \"RESTRICT\";        break;\n    default:          zName = \"NO ACTION\";  \n                      assert( action==OE_None ); break;\n  }\n  return zName;\n}\n#endif\n\n\n/*\n** Parameter eMode must be one of the PAGER_JOURNALMODE_XXX constants\n** defined in pager.h. This function returns the associated lowercase\n** journal-mode name.\n*/\nconst char *sqlite3JournalModename(int eMode){\n  static char * const azModeName[] = {\n    \"delete\", \"persist\", \"off\", \"truncate\", \"memory\"\n#ifndef SQLITE_OMIT_WAL\n     , \"wal\"\n#endif\n  };\n  assert( PAGER_JOURNALMODE_DELETE==0 );\n  assert( PAGER_JOURNALMODE_PERSIST==1 );\n  assert( PAGER_JOURNALMODE_OFF==2 );\n  assert( PAGER_JOURNALMODE_TRUNCATE==3 );\n  assert( PAGER_JOURNALMODE_MEMORY==4 );\n  assert( PAGER_JOURNALMODE_WAL==5 );\n  assert( eMode>=0 && eMode<=ArraySize(azModeName) );\n\n  if( eMode==ArraySize(azModeName) ) return 0;\n  return azModeName[eMode];\n}\n\n/*\n** Locate a pragma in the aPragmaName[] array.\n*/\nstatic const PragmaName *pragmaLocate(const char *zName){\n  int upr, lwr, mid = 0, rc;\n  lwr = 0;\n  upr = ArraySize(aPragmaName)-1;\n  while( lwr<=upr ){\n    mid = (lwr+upr)/2;\n    rc = sqlite3_stricmp(zName, aPragmaName[mid].zName);\n    if( rc==0 ) break;\n    if( rc<0 ){\n      upr = mid - 1;\n    }else{\n      lwr = mid + 1;\n    }\n  }\n  return lwr>upr ? 0 : &aPragmaName[mid];\n}\n\n/*\n** Helper subroutine for PRAGMA integrity_check:\n**\n** Generate code to output a single-column result row with a value of the\n** string held in register 3.  Decrement the result count in register 1\n** and halt if the maximum number of result rows have been issued.\n*/\nstatic int integrityCheckResultRow(Vdbe *v){\n  int addr;\n  sqlite3VdbeAddOp2(v, OP_ResultRow, 3, 1);\n  addr = sqlite3VdbeAddOp3(v, OP_IfPos, 1, sqlite3VdbeCurrentAddr(v)+2, 1);\n  VdbeCoverage(v);\n  sqlite3VdbeAddOp0(v, OP_Halt);\n  return addr;\n}\n\n/*\n** Process a pragma statement.  \n**\n** Pragmas are of this form:\n**\n**      PRAGMA [schema.]id [= value]\n**\n** The identifier might also be a string.  The value is a string, and\n** identifier, or a number.  If minusFlag is true, then the value is\n** a number that was preceded by a minus sign.\n**\n** If the left side is \"database.id\" then pId1 is the database name\n** and pId2 is the id.  If the left side is just \"id\" then pId1 is the\n** id and pId2 is any empty string.\n*/\nvoid sqlite3Pragma(\n  Parse *pParse, \n  Token *pId1,        /* First part of [schema.]id field */\n  Token *pId2,        /* Second part of [schema.]id field, or NULL */\n  Token *pValue,      /* Token for <value>, or NULL */\n  int minusFlag       /* True if a '-' sign preceded <value> */\n){\n  char *zLeft = 0;       /* Nul-terminated UTF-8 string <id> */\n  char *zRight = 0;      /* Nul-terminated UTF-8 string <value>, or NULL */\n  const char *zDb = 0;   /* The database name */\n  Token *pId;            /* Pointer to <id> token */\n  char *aFcntl[4];       /* Argument to SQLITE_FCNTL_PRAGMA */\n  int iDb;               /* Database index for <database> */\n  int rc;                      /* return value form SQLITE_FCNTL_PRAGMA */\n  sqlite3 *db = pParse->db;    /* The database connection */\n  Db *pDb;                     /* The specific database being pragmaed */\n  Vdbe *v = sqlite3GetVdbe(pParse);  /* Prepared statement */\n  const PragmaName *pPragma;   /* The pragma */\n\n  if( v==0 ) return;\n  sqlite3VdbeRunOnlyOnce(v);\n  pParse->nMem = 2;\n\n  /* Interpret the [schema.] part of the pragma statement. iDb is the\n  ** index of the database this pragma is being applied to in db.aDb[]. */\n  iDb = sqlite3TwoPartName(pParse, pId1, pId2, &pId);\n  if( iDb<0 ) return;\n  pDb = &db->aDb[iDb];\n\n  /* If the temp database has been explicitly named as part of the \n  ** pragma, make sure it is open. \n  */\n  if( iDb==1 && sqlite3OpenTempDatabase(pParse) ){\n    return;\n  }\n\n  zLeft = sqlite3NameFromToken(db, pId);\n  if( !zLeft ) return;\n  if( minusFlag ){\n    zRight = sqlite3MPrintf(db, \"-%T\", pValue);\n  }else{\n    zRight = sqlite3NameFromToken(db, pValue);\n  }\n\n  assert( pId2 );\n  zDb = pId2->n>0 ? pDb->zDbSName : 0;\n  if( sqlite3AuthCheck(pParse, SQLITE_PRAGMA, zLeft, zRight, zDb) ){\n    goto pragma_out;\n  }\n\n  /* Send an SQLITE_FCNTL_PRAGMA file-control to the underlying VFS\n  ** connection.  If it returns SQLITE_OK, then assume that the VFS\n  ** handled the pragma and generate a no-op prepared statement.\n  **\n  ** IMPLEMENTATION-OF: R-12238-55120 Whenever a PRAGMA statement is parsed,\n  ** an SQLITE_FCNTL_PRAGMA file control is sent to the open sqlite3_file\n  ** object corresponding to the database file to which the pragma\n  ** statement refers.\n  **\n  ** IMPLEMENTATION-OF: R-29875-31678 The argument to the SQLITE_FCNTL_PRAGMA\n  ** file control is an array of pointers to strings (char**) in which the\n  ** second element of the array is the name of the pragma and the third\n  ** element is the argument to the pragma or NULL if the pragma has no\n  ** argument.\n  */\n  aFcntl[0] = 0;\n  aFcntl[1] = zLeft;\n  aFcntl[2] = zRight;\n  aFcntl[3] = 0;\n  db->busyHandler.nBusy = 0;\n  rc = sqlite3_file_control(db, zDb, SQLITE_FCNTL_PRAGMA, (void*)aFcntl);\n  if( rc==SQLITE_OK ){\n    sqlite3VdbeSetNumCols(v, 1);\n    sqlite3VdbeSetColName(v, 0, COLNAME_NAME, aFcntl[0], SQLITE_TRANSIENT);\n    returnSingleText(v, aFcntl[0]);\n    sqlite3_free(aFcntl[0]);\n    goto pragma_out;\n  }\n  if( rc!=SQLITE_NOTFOUND ){\n    if( aFcntl[0] ){\n      sqlite3ErrorMsg(pParse, \"%s\", aFcntl[0]);\n      sqlite3_free(aFcntl[0]);\n    }\n    pParse->nErr++;\n    pParse->rc = rc;\n    goto pragma_out;\n  }\n\n  /* Locate the pragma in the lookup table */\n  pPragma = pragmaLocate(zLeft);\n  if( pPragma==0 ) goto pragma_out;\n\n  /* Make sure the database schema is loaded if the pragma requires that */\n  if( (pPragma->mPragFlg & PragFlg_NeedSchema)!=0 ){\n    if( sqlite3ReadSchema(pParse) ) goto pragma_out;\n  }\n\n  /* Register the result column names for pragmas that return results */\n  if( (pPragma->mPragFlg & PragFlg_NoColumns)==0 \n   && ((pPragma->mPragFlg & PragFlg_NoColumns1)==0 || zRight==0)\n  ){\n    setPragmaResultColumnNames(v, pPragma);\n  }\n\n  /* Jump to the appropriate pragma handler */\n  switch( pPragma->ePragTyp ){\n  \n#if !defined(SQLITE_OMIT_PAGER_PRAGMAS) && !defined(SQLITE_OMIT_DEPRECATED)\n  /*\n  **  PRAGMA [schema.]default_cache_size\n  **  PRAGMA [schema.]default_cache_size=N\n  **\n  ** The first form reports the current persistent setting for the\n  ** page cache size.  The value returned is the maximum number of\n  ** pages in the page cache.  The second form sets both the current\n  ** page cache size value and the persistent page cache size value\n  ** stored in the database file.\n  **\n  ** Older versions of SQLite would set the default cache size to a\n  ** negative number to indicate synchronous=OFF.  These days, synchronous\n  ** is always on by default regardless of the sign of the default cache\n  ** size.  But continue to take the absolute value of the default cache\n  ** size of historical compatibility.\n  */\n  case PragTyp_DEFAULT_CACHE_SIZE: {\n    static const int iLn = VDBE_OFFSET_LINENO(2);\n    static const VdbeOpList getCacheSize[] = {\n      { OP_Transaction, 0, 0,        0},                         /* 0 */\n      { OP_ReadCookie,  0, 1,        BTREE_DEFAULT_CACHE_SIZE},  /* 1 */\n      { OP_IfPos,       1, 8,        0},\n      { OP_Integer,     0, 2,        0},\n      { OP_Subtract,    1, 2,        1},\n      { OP_IfPos,       1, 8,        0},\n      { OP_Integer,     0, 1,        0},                         /* 6 */\n      { OP_Noop,        0, 0,        0},\n      { OP_ResultRow,   1, 1,        0},\n    };\n    VdbeOp *aOp;\n    sqlite3VdbeUsesBtree(v, iDb);\n    if( !zRight ){\n      pParse->nMem += 2;\n      sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(getCacheSize));\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(getCacheSize), getCacheSize, iLn);\n      if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n      aOp[0].p1 = iDb;\n      aOp[1].p1 = iDb;\n      aOp[6].p1 = SQLITE_DEFAULT_CACHE_SIZE;\n    }else{\n      int size = sqlite3AbsInt32(sqlite3Atoi(zRight));\n      sqlite3BeginWriteOperation(pParse, 0, iDb);\n      sqlite3VdbeAddOp3(v, OP_SetCookie, iDb, BTREE_DEFAULT_CACHE_SIZE, size);\n      assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n      pDb->pSchema->cache_size = size;\n      sqlite3BtreeSetCacheSize(pDb->pBt, pDb->pSchema->cache_size);\n    }\n    break;\n  }\n#endif /* !SQLITE_OMIT_PAGER_PRAGMAS && !SQLITE_OMIT_DEPRECATED */\n\n#if !defined(SQLITE_OMIT_PAGER_PRAGMAS)\n  /*\n  **  PRAGMA [schema.]page_size\n  **  PRAGMA [schema.]page_size=N\n  **\n  ** The first form reports the current setting for the\n  ** database page size in bytes.  The second form sets the\n  ** database page size value.  The value can only be set if\n  ** the database has not yet been created.\n  */\n  case PragTyp_PAGE_SIZE: {\n    Btree *pBt = pDb->pBt;\n    assert( pBt!=0 );\n    if( !zRight ){\n      int size = ALWAYS(pBt) ? sqlite3BtreeGetPageSize(pBt) : 0;\n      returnSingleInt(v, size);\n    }else{\n      /* Malloc may fail when setting the page-size, as there is an internal\n      ** buffer that the pager module resizes using sqlite3_realloc().\n      */\n      db->nextPagesize = sqlite3Atoi(zRight);\n      if( SQLITE_NOMEM==sqlite3BtreeSetPageSize(pBt, db->nextPagesize,-1,0) ){\n        sqlite3OomFault(db);\n      }\n    }\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]secure_delete\n  **  PRAGMA [schema.]secure_delete=ON/OFF/FAST\n  **\n  ** The first form reports the current setting for the\n  ** secure_delete flag.  The second form changes the secure_delete\n  ** flag setting and reports the new value.\n  */\n  case PragTyp_SECURE_DELETE: {\n    Btree *pBt = pDb->pBt;\n    int b = -1;\n    assert( pBt!=0 );\n    if( zRight ){\n      if( sqlite3_stricmp(zRight, \"fast\")==0 ){\n        b = 2;\n      }else{\n        b = sqlite3GetBoolean(zRight, 0);\n      }\n    }\n    if( pId2->n==0 && b>=0 ){\n      int ii;\n      for(ii=0; ii<db->nDb; ii++){\n        sqlite3BtreeSecureDelete(db->aDb[ii].pBt, b);\n      }\n    }\n    b = sqlite3BtreeSecureDelete(pBt, b);\n    returnSingleInt(v, b);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]max_page_count\n  **  PRAGMA [schema.]max_page_count=N\n  **\n  ** The first form reports the current setting for the\n  ** maximum number of pages in the database file.  The \n  ** second form attempts to change this setting.  Both\n  ** forms return the current setting.\n  **\n  ** The absolute value of N is used.  This is undocumented and might\n  ** change.  The only purpose is to provide an easy way to test\n  ** the sqlite3AbsInt32() function.\n  **\n  **  PRAGMA [schema.]page_count\n  **\n  ** Return the number of pages in the specified database.\n  */\n  case PragTyp_PAGE_COUNT: {\n    int iReg;\n    sqlite3CodeVerifySchema(pParse, iDb);\n    iReg = ++pParse->nMem;\n    if( sqlite3Tolower(zLeft[0])=='p' ){\n      sqlite3VdbeAddOp2(v, OP_Pagecount, iDb, iReg);\n    }else{\n      sqlite3VdbeAddOp3(v, OP_MaxPgcnt, iDb, iReg, \n                        sqlite3AbsInt32(sqlite3Atoi(zRight)));\n    }\n    sqlite3VdbeAddOp2(v, OP_ResultRow, iReg, 1);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]locking_mode\n  **  PRAGMA [schema.]locking_mode = (normal|exclusive)\n  */\n  case PragTyp_LOCKING_MODE: {\n    const char *zRet = \"normal\";\n    int eMode = getLockingMode(zRight);\n\n    if( pId2->n==0 && eMode==PAGER_LOCKINGMODE_QUERY ){\n      /* Simple \"PRAGMA locking_mode;\" statement. This is a query for\n      ** the current default locking mode (which may be different to\n      ** the locking-mode of the main database).\n      */\n      eMode = db->dfltLockMode;\n    }else{\n      Pager *pPager;\n      if( pId2->n==0 ){\n        /* This indicates that no database name was specified as part\n        ** of the PRAGMA command. In this case the locking-mode must be\n        ** set on all attached databases, as well as the main db file.\n        **\n        ** Also, the sqlite3.dfltLockMode variable is set so that\n        ** any subsequently attached databases also use the specified\n        ** locking mode.\n        */\n        int ii;\n        assert(pDb==&db->aDb[0]);\n        for(ii=2; ii<db->nDb; ii++){\n          pPager = sqlite3BtreePager(db->aDb[ii].pBt);\n          sqlite3PagerLockingMode(pPager, eMode);\n        }\n        db->dfltLockMode = (u8)eMode;\n      }\n      pPager = sqlite3BtreePager(pDb->pBt);\n      eMode = sqlite3PagerLockingMode(pPager, eMode);\n    }\n\n    assert( eMode==PAGER_LOCKINGMODE_NORMAL\n            || eMode==PAGER_LOCKINGMODE_EXCLUSIVE );\n    if( eMode==PAGER_LOCKINGMODE_EXCLUSIVE ){\n      zRet = \"exclusive\";\n    }\n    returnSingleText(v, zRet);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]journal_mode\n  **  PRAGMA [schema.]journal_mode =\n  **                      (delete|persist|off|truncate|memory|wal|off)\n  */\n  case PragTyp_JOURNAL_MODE: {\n    int eMode;        /* One of the PAGER_JOURNALMODE_XXX symbols */\n    int ii;           /* Loop counter */\n\n    if( zRight==0 ){\n      /* If there is no \"=MODE\" part of the pragma, do a query for the\n      ** current mode */\n      eMode = PAGER_JOURNALMODE_QUERY;\n    }else{\n      const char *zMode;\n      int n = sqlite3Strlen30(zRight);\n      for(eMode=0; (zMode = sqlite3JournalModename(eMode))!=0; eMode++){\n        if( sqlite3StrNICmp(zRight, zMode, n)==0 ) break;\n      }\n      if( !zMode ){\n        /* If the \"=MODE\" part does not match any known journal mode,\n        ** then do a query */\n        eMode = PAGER_JOURNALMODE_QUERY;\n      }\n      if( eMode==PAGER_JOURNALMODE_OFF && (db->flags & SQLITE_Defensive)!=0 ){\n        /* Do not allow journal-mode \"OFF\" in defensive since the database\n        ** can become corrupted using ordinary SQL when the journal is off */\n        eMode = PAGER_JOURNALMODE_QUERY;\n      }\n    }\n    if( eMode==PAGER_JOURNALMODE_QUERY && pId2->n==0 ){\n      /* Convert \"PRAGMA journal_mode\" into \"PRAGMA main.journal_mode\" */\n      iDb = 0;\n      pId2->n = 1;\n    }\n    for(ii=db->nDb-1; ii>=0; ii--){\n      if( db->aDb[ii].pBt && (ii==iDb || pId2->n==0) ){\n        sqlite3VdbeUsesBtree(v, ii);\n        sqlite3VdbeAddOp3(v, OP_JournalMode, ii, 1, eMode);\n      }\n    }\n    sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]journal_size_limit\n  **  PRAGMA [schema.]journal_size_limit=N\n  **\n  ** Get or set the size limit on rollback journal files.\n  */\n  case PragTyp_JOURNAL_SIZE_LIMIT: {\n    Pager *pPager = sqlite3BtreePager(pDb->pBt);\n    i64 iLimit = -2;\n    if( zRight ){\n      sqlite3DecOrHexToI64(zRight, &iLimit);\n      if( iLimit<-1 ) iLimit = -1;\n    }\n    iLimit = sqlite3PagerJournalSizeLimit(pPager, iLimit);\n    returnSingleInt(v, iLimit);\n    break;\n  }\n\n#endif /* SQLITE_OMIT_PAGER_PRAGMAS */\n\n  /*\n  **  PRAGMA [schema.]auto_vacuum\n  **  PRAGMA [schema.]auto_vacuum=N\n  **\n  ** Get or set the value of the database 'auto-vacuum' parameter.\n  ** The value is one of:  0 NONE 1 FULL 2 INCREMENTAL\n  */\n#ifndef SQLITE_OMIT_AUTOVACUUM\n  case PragTyp_AUTO_VACUUM: {\n    Btree *pBt = pDb->pBt;\n    assert( pBt!=0 );\n    if( !zRight ){\n      returnSingleInt(v, sqlite3BtreeGetAutoVacuum(pBt));\n    }else{\n      int eAuto = getAutoVacuum(zRight);\n      assert( eAuto>=0 && eAuto<=2 );\n      db->nextAutovac = (u8)eAuto;\n      /* Call SetAutoVacuum() to set initialize the internal auto and\n      ** incr-vacuum flags. This is required in case this connection\n      ** creates the database file. It is important that it is created\n      ** as an auto-vacuum capable db.\n      */\n      rc = sqlite3BtreeSetAutoVacuum(pBt, eAuto);\n      if( rc==SQLITE_OK && (eAuto==1 || eAuto==2) ){\n        /* When setting the auto_vacuum mode to either \"full\" or \n        ** \"incremental\", write the value of meta[6] in the database\n        ** file. Before writing to meta[6], check that meta[3] indicates\n        ** that this really is an auto-vacuum capable database.\n        */\n        static const int iLn = VDBE_OFFSET_LINENO(2);\n        static const VdbeOpList setMeta6[] = {\n          { OP_Transaction,    0,         1,                 0},    /* 0 */\n          { OP_ReadCookie,     0,         1,         BTREE_LARGEST_ROOT_PAGE},\n          { OP_If,             1,         0,                 0},    /* 2 */\n          { OP_Halt,           SQLITE_OK, OE_Abort,          0},    /* 3 */\n          { OP_SetCookie,      0,         BTREE_INCR_VACUUM, 0},    /* 4 */\n        };\n        VdbeOp *aOp;\n        int iAddr = sqlite3VdbeCurrentAddr(v);\n        sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(setMeta6));\n        aOp = sqlite3VdbeAddOpList(v, ArraySize(setMeta6), setMeta6, iLn);\n        if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n        aOp[0].p1 = iDb;\n        aOp[1].p1 = iDb;\n        aOp[2].p2 = iAddr+4;\n        aOp[4].p1 = iDb;\n        aOp[4].p3 = eAuto - 1;\n        sqlite3VdbeUsesBtree(v, iDb);\n      }\n    }\n    break;\n  }\n#endif\n\n  /*\n  **  PRAGMA [schema.]incremental_vacuum(N)\n  **\n  ** Do N steps of incremental vacuuming on a database.\n  */\n#ifndef SQLITE_OMIT_AUTOVACUUM\n  case PragTyp_INCREMENTAL_VACUUM: {\n    int iLimit, addr;\n    if( zRight==0 || !sqlite3GetInt32(zRight, &iLimit) || iLimit<=0 ){\n      iLimit = 0x7fffffff;\n    }\n    sqlite3BeginWriteOperation(pParse, 0, iDb);\n    sqlite3VdbeAddOp2(v, OP_Integer, iLimit, 1);\n    addr = sqlite3VdbeAddOp1(v, OP_IncrVacuum, iDb); VdbeCoverage(v);\n    sqlite3VdbeAddOp1(v, OP_ResultRow, 1);\n    sqlite3VdbeAddOp2(v, OP_AddImm, 1, -1);\n    sqlite3VdbeAddOp2(v, OP_IfPos, 1, addr); VdbeCoverage(v);\n    sqlite3VdbeJumpHere(v, addr);\n    break;\n  }\n#endif\n\n#ifndef SQLITE_OMIT_PAGER_PRAGMAS\n  /*\n  **  PRAGMA [schema.]cache_size\n  **  PRAGMA [schema.]cache_size=N\n  **\n  ** The first form reports the current local setting for the\n  ** page cache size. The second form sets the local\n  ** page cache size value.  If N is positive then that is the\n  ** number of pages in the cache.  If N is negative, then the\n  ** number of pages is adjusted so that the cache uses -N kibibytes\n  ** of memory.\n  */\n  case PragTyp_CACHE_SIZE: {\n    assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n    if( !zRight ){\n      returnSingleInt(v, pDb->pSchema->cache_size);\n    }else{\n      int size = sqlite3Atoi(zRight);\n      pDb->pSchema->cache_size = size;\n      sqlite3BtreeSetCacheSize(pDb->pBt, pDb->pSchema->cache_size);\n    }\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]cache_spill\n  **  PRAGMA cache_spill=BOOLEAN\n  **  PRAGMA [schema.]cache_spill=N\n  **\n  ** The first form reports the current local setting for the\n  ** page cache spill size. The second form turns cache spill on\n  ** or off.  When turnning cache spill on, the size is set to the\n  ** current cache_size.  The third form sets a spill size that\n  ** may be different form the cache size.\n  ** If N is positive then that is the\n  ** number of pages in the cache.  If N is negative, then the\n  ** number of pages is adjusted so that the cache uses -N kibibytes\n  ** of memory.\n  **\n  ** If the number of cache_spill pages is less then the number of\n  ** cache_size pages, no spilling occurs until the page count exceeds\n  ** the number of cache_size pages.\n  **\n  ** The cache_spill=BOOLEAN setting applies to all attached schemas,\n  ** not just the schema specified.\n  */\n  case PragTyp_CACHE_SPILL: {\n    assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n    if( !zRight ){\n      returnSingleInt(v,\n         (db->flags & SQLITE_CacheSpill)==0 ? 0 : \n            sqlite3BtreeSetSpillSize(pDb->pBt,0));\n    }else{\n      int size = 1;\n      if( sqlite3GetInt32(zRight, &size) ){\n        sqlite3BtreeSetSpillSize(pDb->pBt, size);\n      }\n      if( sqlite3GetBoolean(zRight, size!=0) ){\n        db->flags |= SQLITE_CacheSpill;\n      }else{\n        db->flags &= ~(u64)SQLITE_CacheSpill;\n      }\n      setAllPagerFlags(db);\n    }\n    break;\n  }\n\n  /*\n  **  PRAGMA [schema.]mmap_size(N)\n  **\n  ** Used to set mapping size limit. The mapping size limit is\n  ** used to limit the aggregate size of all memory mapped regions of the\n  ** database file. If this parameter is set to zero, then memory mapping\n  ** is not used at all.  If N is negative, then the default memory map\n  ** limit determined by sqlite3_config(SQLITE_CONFIG_MMAP_SIZE) is set.\n  ** The parameter N is measured in bytes.\n  **\n  ** This value is advisory.  The underlying VFS is free to memory map\n  ** as little or as much as it wants.  Except, if N is set to 0 then the\n  ** upper layers will never invoke the xFetch interfaces to the VFS.\n  */\n  case PragTyp_MMAP_SIZE: {\n    sqlite3_int64 sz;\n#if SQLITE_MAX_MMAP_SIZE>0\n    assert( sqlite3SchemaMutexHeld(db, iDb, 0) );\n    if( zRight ){\n      int ii;\n      sqlite3DecOrHexToI64(zRight, &sz);\n      if( sz<0 ) sz = sqlite3GlobalConfig.szMmap;\n      if( pId2->n==0 ) db->szMmap = sz;\n      for(ii=db->nDb-1; ii>=0; ii--){\n        if( db->aDb[ii].pBt && (ii==iDb || pId2->n==0) ){\n          sqlite3BtreeSetMmapLimit(db->aDb[ii].pBt, sz);\n        }\n      }\n    }\n    sz = -1;\n    rc = sqlite3_file_control(db, zDb, SQLITE_FCNTL_MMAP_SIZE, &sz);\n#else\n    sz = 0;\n    rc = SQLITE_OK;\n#endif\n    if( rc==SQLITE_OK ){\n      returnSingleInt(v, sz);\n    }else if( rc!=SQLITE_NOTFOUND ){\n      pParse->nErr++;\n      pParse->rc = rc;\n    }\n    break;\n  }\n\n  /*\n  **   PRAGMA temp_store\n  **   PRAGMA temp_store = \"default\"|\"memory\"|\"file\"\n  **\n  ** Return or set the local value of the temp_store flag.  Changing\n  ** the local value does not make changes to the disk file and the default\n  ** value will be restored the next time the database is opened.\n  **\n  ** Note that it is possible for the library compile-time options to\n  ** override this setting\n  */\n  case PragTyp_TEMP_STORE: {\n    if( !zRight ){\n      returnSingleInt(v, db->temp_store);\n    }else{\n      changeTempStorage(pParse, zRight);\n    }\n    break;\n  }\n\n  /*\n  **   PRAGMA temp_store_directory\n  **   PRAGMA temp_store_directory = \"\"|\"directory_name\"\n  **\n  ** Return or set the local value of the temp_store_directory flag.  Changing\n  ** the value sets a specific directory to be used for temporary files.\n  ** Setting to a null string reverts to the default temporary directory search.\n  ** If temporary directory is changed, then invalidateTempStorage.\n  **\n  */\n  case PragTyp_TEMP_STORE_DIRECTORY: {\n    if( !zRight ){\n      returnSingleText(v, sqlite3_temp_directory);\n    }else{\n#ifndef SQLITE_OMIT_WSD\n      if( zRight[0] ){\n        int res;\n        rc = sqlite3OsAccess(db->pVfs, zRight, SQLITE_ACCESS_READWRITE, &res);\n        if( rc!=SQLITE_OK || res==0 ){\n          sqlite3ErrorMsg(pParse, \"not a writable directory\");\n          goto pragma_out;\n        }\n      }\n      if( SQLITE_TEMP_STORE==0\n       || (SQLITE_TEMP_STORE==1 && db->temp_store<=1)\n       || (SQLITE_TEMP_STORE==2 && db->temp_store==1)\n      ){\n        invalidateTempStorage(pParse);\n      }\n      sqlite3_free(sqlite3_temp_directory);\n      if( zRight[0] ){\n        sqlite3_temp_directory = sqlite3_mprintf(\"%s\", zRight);\n      }else{\n        sqlite3_temp_directory = 0;\n      }\n#endif /* SQLITE_OMIT_WSD */\n    }\n    break;\n  }\n\n#if SQLITE_OS_WIN\n  /*\n  **   PRAGMA data_store_directory\n  **   PRAGMA data_store_directory = \"\"|\"directory_name\"\n  **\n  ** Return or set the local value of the data_store_directory flag.  Changing\n  ** the value sets a specific directory to be used for database files that\n  ** were specified with a relative pathname.  Setting to a null string reverts\n  ** to the default database directory, which for database files specified with\n  ** a relative path will probably be based on the current directory for the\n  ** process.  Database file specified with an absolute path are not impacted\n  ** by this setting, regardless of its value.\n  **\n  */\n  case PragTyp_DATA_STORE_DIRECTORY: {\n    if( !zRight ){\n      returnSingleText(v, sqlite3_data_directory);\n    }else{\n#ifndef SQLITE_OMIT_WSD\n      if( zRight[0] ){\n        int res;\n        rc = sqlite3OsAccess(db->pVfs, zRight, SQLITE_ACCESS_READWRITE, &res);\n        if( rc!=SQLITE_OK || res==0 ){\n          sqlite3ErrorMsg(pParse, \"not a writable directory\");\n          goto pragma_out;\n        }\n      }\n      sqlite3_free(sqlite3_data_directory);\n      if( zRight[0] ){\n        sqlite3_data_directory = sqlite3_mprintf(\"%s\", zRight);\n      }else{\n        sqlite3_data_directory = 0;\n      }\n#endif /* SQLITE_OMIT_WSD */\n    }\n    break;\n  }\n#endif\n\n#if SQLITE_ENABLE_LOCKING_STYLE\n  /*\n  **   PRAGMA [schema.]lock_proxy_file\n  **   PRAGMA [schema.]lock_proxy_file = \":auto:\"|\"lock_file_path\"\n  **\n  ** Return or set the value of the lock_proxy_file flag.  Changing\n  ** the value sets a specific file to be used for database access locks.\n  **\n  */\n  case PragTyp_LOCK_PROXY_FILE: {\n    if( !zRight ){\n      Pager *pPager = sqlite3BtreePager(pDb->pBt);\n      char *proxy_file_path = NULL;\n      sqlite3_file *pFile = sqlite3PagerFile(pPager);\n      sqlite3OsFileControlHint(pFile, SQLITE_GET_LOCKPROXYFILE, \n                           &proxy_file_path);\n      returnSingleText(v, proxy_file_path);\n    }else{\n      Pager *pPager = sqlite3BtreePager(pDb->pBt);\n      sqlite3_file *pFile = sqlite3PagerFile(pPager);\n      int res;\n      if( zRight[0] ){\n        res=sqlite3OsFileControl(pFile, SQLITE_SET_LOCKPROXYFILE, \n                                     zRight);\n      } else {\n        res=sqlite3OsFileControl(pFile, SQLITE_SET_LOCKPROXYFILE, \n                                     NULL);\n      }\n      if( res!=SQLITE_OK ){\n        sqlite3ErrorMsg(pParse, \"failed to set lock proxy file\");\n        goto pragma_out;\n      }\n    }\n    break;\n  }\n#endif /* SQLITE_ENABLE_LOCKING_STYLE */      \n    \n  /*\n  **   PRAGMA [schema.]synchronous\n  **   PRAGMA [schema.]synchronous=OFF|ON|NORMAL|FULL|EXTRA\n  **\n  ** Return or set the local value of the synchronous flag.  Changing\n  ** the local value does not make changes to the disk file and the\n  ** default value will be restored the next time the database is\n  ** opened.\n  */\n  case PragTyp_SYNCHRONOUS: {\n    if( !zRight ){\n      returnSingleInt(v, pDb->safety_level-1);\n    }else{\n      if( !db->autoCommit ){\n        sqlite3ErrorMsg(pParse, \n            \"Safety level may not be changed inside a transaction\");\n      }else if( iDb!=1 ){\n        int iLevel = (getSafetyLevel(zRight,0,1)+1) & PAGER_SYNCHRONOUS_MASK;\n        if( iLevel==0 ) iLevel = 1;\n        pDb->safety_level = iLevel;\n        pDb->bSyncSet = 1;\n        setAllPagerFlags(db);\n      }\n    }\n    break;\n  }\n#endif /* SQLITE_OMIT_PAGER_PRAGMAS */\n\n#ifndef SQLITE_OMIT_FLAG_PRAGMAS\n  case PragTyp_FLAG: {\n    if( zRight==0 ){\n      setPragmaResultColumnNames(v, pPragma);\n      returnSingleInt(v, (db->flags & pPragma->iArg)!=0 );\n    }else{\n      u64 mask = pPragma->iArg;    /* Mask of bits to set or clear. */\n      if( db->autoCommit==0 ){\n        /* Foreign key support may not be enabled or disabled while not\n        ** in auto-commit mode.  */\n        mask &= ~(SQLITE_ForeignKeys);\n      }\n#if SQLITE_USER_AUTHENTICATION\n      if( db->auth.authLevel==UAUTH_User ){\n        /* Do not allow non-admin users to modify the schema arbitrarily */\n        mask &= ~(SQLITE_WriteSchema);\n      }\n#endif\n\n      if( sqlite3GetBoolean(zRight, 0) ){\n        db->flags |= mask;\n      }else{\n        db->flags &= ~mask;\n        if( mask==SQLITE_DeferFKs ) db->nDeferredImmCons = 0;\n      }\n\n      /* Many of the flag-pragmas modify the code generated by the SQL \n      ** compiler (eg. count_changes). So add an opcode to expire all\n      ** compiled SQL statements after modifying a pragma value.\n      */\n      sqlite3VdbeAddOp0(v, OP_Expire);\n      setAllPagerFlags(db);\n    }\n    break;\n  }\n#endif /* SQLITE_OMIT_FLAG_PRAGMAS */\n\n#ifndef SQLITE_OMIT_SCHEMA_PRAGMAS\n  /*\n  **   PRAGMA table_info(<table>)\n  **\n  ** Return a single row for each column of the named table. The columns of\n  ** the returned data set are:\n  **\n  ** cid:        Column id (numbered from left to right, starting at 0)\n  ** name:       Column name\n  ** type:       Column declaration type.\n  ** notnull:    True if 'NOT NULL' is part of column declaration\n  ** dflt_value: The default value for the column, if any.\n  ** pk:         Non-zero for PK fields.\n  */\n  case PragTyp_TABLE_INFO: if( zRight ){\n    Table *pTab;\n    pTab = sqlite3LocateTable(pParse, LOCATE_NOERR, zRight, zDb);\n    if( pTab ){\n      int iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n      int i, k;\n      int nHidden = 0;\n      Column *pCol;\n      Index *pPk = sqlite3PrimaryKeyIndex(pTab);\n      pParse->nMem = 7;\n      sqlite3CodeVerifySchema(pParse, iTabDb);\n      sqlite3ViewGetColumnNames(pParse, pTab);\n      for(i=0, pCol=pTab->aCol; i<pTab->nCol; i++, pCol++){\n        int isHidden = 0;\n        if( pCol->colFlags & COLFLAG_NOINSERT ){\n          if( pPragma->iArg==0 ){\n            nHidden++;\n            continue;\n          }\n          if( pCol->colFlags & COLFLAG_VIRTUAL ){\n            isHidden = 2;  /* GENERATED ALWAYS AS ... VIRTUAL */\n          }else if( pCol->colFlags & COLFLAG_STORED ){\n            isHidden = 3;  /* GENERATED ALWAYS AS ... STORED */\n          }else{ assert( pCol->colFlags & COLFLAG_HIDDEN );\n            isHidden = 1;  /* HIDDEN */\n          }\n        }\n        if( (pCol->colFlags & COLFLAG_PRIMKEY)==0 ){\n          k = 0;\n        }else if( pPk==0 ){\n          k = 1;\n        }else{\n          for(k=1; k<=pTab->nCol && pPk->aiColumn[k-1]!=i; k++){}\n        }\n        assert( pCol->pDflt==0 || pCol->pDflt->op==TK_SPAN || isHidden>=2 );\n        sqlite3VdbeMultiLoad(v, 1, pPragma->iArg ? \"issisii\" : \"issisi\",\n               i-nHidden,\n               pCol->zName,\n               sqlite3ColumnType(pCol,\"\"),\n               pCol->notNull ? 1 : 0,\n               pCol->pDflt && isHidden<2 ? pCol->pDflt->u.zToken : 0,\n               k,\n               isHidden);\n      }\n    }\n  }\n  break;\n\n#ifdef SQLITE_DEBUG\n  case PragTyp_STATS: {\n    Index *pIdx;\n    HashElem *i;\n    pParse->nMem = 5;\n    sqlite3CodeVerifySchema(pParse, iDb);\n    for(i=sqliteHashFirst(&pDb->pSchema->tblHash); i; i=sqliteHashNext(i)){\n      Table *pTab = sqliteHashData(i);\n      sqlite3VdbeMultiLoad(v, 1, \"ssiii\",\n           pTab->zName,\n           0,\n           pTab->szTabRow,\n           pTab->nRowLogEst,\n           pTab->tabFlags);\n      for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){\n        sqlite3VdbeMultiLoad(v, 2, \"siiiX\",\n           pIdx->zName,\n           pIdx->szIdxRow,\n           pIdx->aiRowLogEst[0],\n           pIdx->hasStat1);\n        sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 5);\n      }\n    }\n  }\n  break;\n#endif\n\n  case PragTyp_INDEX_INFO: if( zRight ){\n    Index *pIdx;\n    Table *pTab;\n    pIdx = sqlite3FindIndex(db, zRight, zDb);\n    if( pIdx==0 ){\n      /* If there is no index named zRight, check to see if there is a\n      ** WITHOUT ROWID table named zRight, and if there is, show the\n      ** structure of the PRIMARY KEY index for that table. */\n      pTab = sqlite3LocateTable(pParse, LOCATE_NOERR, zRight, zDb);\n      if( pTab && !HasRowid(pTab) ){\n        pIdx = sqlite3PrimaryKeyIndex(pTab);\n      }\n    }\n    if( pIdx ){\n      int iIdxDb = sqlite3SchemaToIndex(db, pIdx->pSchema);\n      int i;\n      int mx;\n      if( pPragma->iArg ){\n        /* PRAGMA index_xinfo (newer version with more rows and columns) */\n        mx = pIdx->nColumn;\n        pParse->nMem = 6;\n      }else{\n        /* PRAGMA index_info (legacy version) */\n        mx = pIdx->nKeyCol;\n        pParse->nMem = 3;\n      }\n      pTab = pIdx->pTable;\n      sqlite3CodeVerifySchema(pParse, iIdxDb);\n      assert( pParse->nMem<=pPragma->nPragCName );\n      for(i=0; i<mx; i++){\n        i16 cnum = pIdx->aiColumn[i];\n        sqlite3VdbeMultiLoad(v, 1, \"iisX\", i, cnum,\n                             cnum<0 ? 0 : pTab->aCol[cnum].zName);\n        if( pPragma->iArg ){\n          sqlite3VdbeMultiLoad(v, 4, \"isiX\",\n            pIdx->aSortOrder[i],\n            pIdx->azColl[i],\n            i<pIdx->nKeyCol);\n        }\n        sqlite3VdbeAddOp2(v, OP_ResultRow, 1, pParse->nMem);\n      }\n    }\n  }\n  break;\n\n  case PragTyp_INDEX_LIST: if( zRight ){\n    Index *pIdx;\n    Table *pTab;\n    int i;\n    pTab = sqlite3FindTable(db, zRight, zDb);\n    if( pTab ){\n      int iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n      pParse->nMem = 5;\n      sqlite3CodeVerifySchema(pParse, iTabDb);\n      for(pIdx=pTab->pIndex, i=0; pIdx; pIdx=pIdx->pNext, i++){\n        const char *azOrigin[] = { \"c\", \"u\", \"pk\" };\n        sqlite3VdbeMultiLoad(v, 1, \"isisi\",\n           i,\n           pIdx->zName,\n           IsUniqueIndex(pIdx),\n           azOrigin[pIdx->idxType],\n           pIdx->pPartIdxWhere!=0);\n      }\n    }\n  }\n  break;\n\n  case PragTyp_DATABASE_LIST: {\n    int i;\n    pParse->nMem = 3;\n    for(i=0; i<db->nDb; i++){\n      if( db->aDb[i].pBt==0 ) continue;\n      assert( db->aDb[i].zDbSName!=0 );\n      sqlite3VdbeMultiLoad(v, 1, \"iss\",\n         i,\n         db->aDb[i].zDbSName,\n         sqlite3BtreeGetFilename(db->aDb[i].pBt));\n    }\n  }\n  break;\n\n  case PragTyp_COLLATION_LIST: {\n    int i = 0;\n    HashElem *p;\n    pParse->nMem = 2;\n    for(p=sqliteHashFirst(&db->aCollSeq); p; p=sqliteHashNext(p)){\n      CollSeq *pColl = (CollSeq *)sqliteHashData(p);\n      sqlite3VdbeMultiLoad(v, 1, \"is\", i++, pColl->zName);\n    }\n  }\n  break;\n\n#ifndef SQLITE_OMIT_INTROSPECTION_PRAGMAS\n  case PragTyp_FUNCTION_LIST: {\n    int i;\n    HashElem *j;\n    FuncDef *p;\n    pParse->nMem = 2;\n    for(i=0; i<SQLITE_FUNC_HASH_SZ; i++){\n      for(p=sqlite3BuiltinFunctions.a[i]; p; p=p->u.pHash ){\n        if( p->funcFlags & SQLITE_FUNC_INTERNAL ) continue;\n        sqlite3VdbeMultiLoad(v, 1, \"si\", p->zName, 1);\n      }\n    }\n    for(j=sqliteHashFirst(&db->aFunc); j; j=sqliteHashNext(j)){\n      p = (FuncDef*)sqliteHashData(j);\n      sqlite3VdbeMultiLoad(v, 1, \"si\", p->zName, 0);\n    }\n  }\n  break;\n\n#ifndef SQLITE_OMIT_VIRTUALTABLE\n  case PragTyp_MODULE_LIST: {\n    HashElem *j;\n    pParse->nMem = 1;\n    for(j=sqliteHashFirst(&db->aModule); j; j=sqliteHashNext(j)){\n      Module *pMod = (Module*)sqliteHashData(j);\n      sqlite3VdbeMultiLoad(v, 1, \"s\", pMod->zName);\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_VIRTUALTABLE */\n\n  case PragTyp_PRAGMA_LIST: {\n    int i;\n    for(i=0; i<ArraySize(aPragmaName); i++){\n      sqlite3VdbeMultiLoad(v, 1, \"s\", aPragmaName[i].zName);\n    }\n  }\n  break;\n#endif /* SQLITE_INTROSPECTION_PRAGMAS */\n\n#endif /* SQLITE_OMIT_SCHEMA_PRAGMAS */\n\n#ifndef SQLITE_OMIT_FOREIGN_KEY\n  case PragTyp_FOREIGN_KEY_LIST: if( zRight ){\n    FKey *pFK;\n    Table *pTab;\n    pTab = sqlite3FindTable(db, zRight, zDb);\n    if( pTab ){\n      pFK = pTab->pFKey;\n      if( pFK ){\n        int iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n        int i = 0; \n        pParse->nMem = 8;\n        sqlite3CodeVerifySchema(pParse, iTabDb);\n        while(pFK){\n          int j;\n          for(j=0; j<pFK->nCol; j++){\n            sqlite3VdbeMultiLoad(v, 1, \"iissssss\",\n                   i,\n                   j,\n                   pFK->zTo,\n                   pTab->aCol[pFK->aCol[j].iFrom].zName,\n                   pFK->aCol[j].zCol,\n                   actionName(pFK->aAction[1]),  /* ON UPDATE */\n                   actionName(pFK->aAction[0]),  /* ON DELETE */\n                   \"NONE\");\n          }\n          ++i;\n          pFK = pFK->pNextFrom;\n        }\n      }\n    }\n  }\n  break;\n#endif /* !defined(SQLITE_OMIT_FOREIGN_KEY) */\n\n#ifndef SQLITE_OMIT_FOREIGN_KEY\n#ifndef SQLITE_OMIT_TRIGGER\n  case PragTyp_FOREIGN_KEY_CHECK: {\n    FKey *pFK;             /* A foreign key constraint */\n    Table *pTab;           /* Child table contain \"REFERENCES\" keyword */\n    Table *pParent;        /* Parent table that child points to */\n    Index *pIdx;           /* Index in the parent table */\n    int i;                 /* Loop counter:  Foreign key number for pTab */\n    int j;                 /* Loop counter:  Field of the foreign key */\n    HashElem *k;           /* Loop counter:  Next table in schema */\n    int x;                 /* result variable */\n    int regResult;         /* 3 registers to hold a result row */\n    int regKey;            /* Register to hold key for checking the FK */\n    int regRow;            /* Registers to hold a row from pTab */\n    int addrTop;           /* Top of a loop checking foreign keys */\n    int addrOk;            /* Jump here if the key is OK */\n    int *aiCols;           /* child to parent column mapping */\n\n    regResult = pParse->nMem+1;\n    pParse->nMem += 4;\n    regKey = ++pParse->nMem;\n    regRow = ++pParse->nMem;\n    k = sqliteHashFirst(&db->aDb[iDb].pSchema->tblHash);\n    while( k ){\n      int iTabDb;\n      if( zRight ){\n        pTab = sqlite3LocateTable(pParse, 0, zRight, zDb);\n        k = 0;\n      }else{\n        pTab = (Table*)sqliteHashData(k);\n        k = sqliteHashNext(k);\n      }\n      if( pTab==0 || pTab->pFKey==0 ) continue;\n      iTabDb = sqlite3SchemaToIndex(db, pTab->pSchema);\n      sqlite3CodeVerifySchema(pParse, iTabDb);\n      sqlite3TableLock(pParse, iTabDb, pTab->tnum, 0, pTab->zName);\n      if( pTab->nCol+regRow>pParse->nMem ) pParse->nMem = pTab->nCol + regRow;\n      sqlite3OpenTable(pParse, 0, iTabDb, pTab, OP_OpenRead);\n      sqlite3VdbeLoadString(v, regResult, pTab->zName);\n      for(i=1, pFK=pTab->pFKey; pFK; i++, pFK=pFK->pNextFrom){\n        pParent = sqlite3FindTable(db, pFK->zTo, zDb);\n        if( pParent==0 ) continue;\n        pIdx = 0;\n        sqlite3TableLock(pParse, iTabDb, pParent->tnum, 0, pParent->zName);\n        x = sqlite3FkLocateIndex(pParse, pParent, pFK, &pIdx, 0);\n        if( x==0 ){\n          if( pIdx==0 ){\n            sqlite3OpenTable(pParse, i, iTabDb, pParent, OP_OpenRead);\n          }else{\n            sqlite3VdbeAddOp3(v, OP_OpenRead, i, pIdx->tnum, iTabDb);\n            sqlite3VdbeSetP4KeyInfo(pParse, pIdx);\n          }\n        }else{\n          k = 0;\n          break;\n        }\n      }\n      assert( pParse->nErr>0 || pFK==0 );\n      if( pFK ) break;\n      if( pParse->nTab<i ) pParse->nTab = i;\n      addrTop = sqlite3VdbeAddOp1(v, OP_Rewind, 0); VdbeCoverage(v);\n      for(i=1, pFK=pTab->pFKey; pFK; i++, pFK=pFK->pNextFrom){\n        pParent = sqlite3FindTable(db, pFK->zTo, zDb);\n        pIdx = 0;\n        aiCols = 0;\n        if( pParent ){\n          x = sqlite3FkLocateIndex(pParse, pParent, pFK, &pIdx, &aiCols);\n          assert( x==0 );\n        }\n        addrOk = sqlite3VdbeMakeLabel(pParse);\n\n        /* Generate code to read the child key values into registers\n        ** regRow..regRow+n. If any of the child key values are NULL, this \n        ** row cannot cause an FK violation. Jump directly to addrOk in \n        ** this case. */\n        for(j=0; j<pFK->nCol; j++){\n          int iCol = aiCols ? aiCols[j] : pFK->aCol[j].iFrom;\n          sqlite3ExprCodeGetColumnOfTable(v, pTab, 0, iCol, regRow+j);\n          sqlite3VdbeAddOp2(v, OP_IsNull, regRow+j, addrOk); VdbeCoverage(v);\n        }\n\n        /* Generate code to query the parent index for a matching parent\n        ** key. If a match is found, jump to addrOk. */\n        if( pIdx ){\n          sqlite3VdbeAddOp4(v, OP_MakeRecord, regRow, pFK->nCol, regKey,\n              sqlite3IndexAffinityStr(db,pIdx), pFK->nCol);\n          sqlite3VdbeAddOp4Int(v, OP_Found, i, addrOk, regKey, 0);\n          VdbeCoverage(v);\n        }else if( pParent ){\n          int jmp = sqlite3VdbeCurrentAddr(v)+2;\n          sqlite3VdbeAddOp3(v, OP_SeekRowid, i, jmp, regRow); VdbeCoverage(v);\n          sqlite3VdbeGoto(v, addrOk);\n          assert( pFK->nCol==1 );\n        }\n\n        /* Generate code to report an FK violation to the caller. */\n        if( HasRowid(pTab) ){\n          sqlite3VdbeAddOp2(v, OP_Rowid, 0, regResult+1);\n        }else{\n          sqlite3VdbeAddOp2(v, OP_Null, 0, regResult+1);\n        }\n        sqlite3VdbeMultiLoad(v, regResult+2, \"siX\", pFK->zTo, i-1);\n        sqlite3VdbeAddOp2(v, OP_ResultRow, regResult, 4);\n        sqlite3VdbeResolveLabel(v, addrOk);\n        sqlite3DbFree(db, aiCols);\n      }\n      sqlite3VdbeAddOp2(v, OP_Next, 0, addrTop+1); VdbeCoverage(v);\n      sqlite3VdbeJumpHere(v, addrTop);\n    }\n  }\n  break;\n#endif /* !defined(SQLITE_OMIT_TRIGGER) */\n#endif /* !defined(SQLITE_OMIT_FOREIGN_KEY) */\n\n#ifndef SQLITE_OMIT_CASE_SENSITIVE_LIKE_PRAGMA\n  /* Reinstall the LIKE and GLOB functions.  The variant of LIKE\n  ** used will be case sensitive or not depending on the RHS.\n  */\n  case PragTyp_CASE_SENSITIVE_LIKE: {\n    if( zRight ){\n      sqlite3RegisterLikeFunctions(db, sqlite3GetBoolean(zRight, 0));\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_CASE_SENSITIVE_LIKE_PRAGMA */\n\n#ifndef SQLITE_INTEGRITY_CHECK_ERROR_MAX\n# define SQLITE_INTEGRITY_CHECK_ERROR_MAX 100\n#endif\n\n#ifndef SQLITE_OMIT_INTEGRITY_CHECK\n  /*    PRAGMA integrity_check\n  **    PRAGMA integrity_check(N)\n  **    PRAGMA quick_check\n  **    PRAGMA quick_check(N)\n  **\n  ** Verify the integrity of the database.\n  **\n  ** The \"quick_check\" is reduced version of \n  ** integrity_check designed to detect most database corruption\n  ** without the overhead of cross-checking indexes.  Quick_check\n  ** is linear time wherease integrity_check is O(NlogN).\n  */\n  case PragTyp_INTEGRITY_CHECK: {\n    int i, j, addr, mxErr;\n\n    int isQuick = (sqlite3Tolower(zLeft[0])=='q');\n\n    /* If the PRAGMA command was of the form \"PRAGMA <db>.integrity_check\",\n    ** then iDb is set to the index of the database identified by <db>.\n    ** In this case, the integrity of database iDb only is verified by\n    ** the VDBE created below.\n    **\n    ** Otherwise, if the command was simply \"PRAGMA integrity_check\" (or\n    ** \"PRAGMA quick_check\"), then iDb is set to 0. In this case, set iDb\n    ** to -1 here, to indicate that the VDBE should verify the integrity\n    ** of all attached databases.  */\n    assert( iDb>=0 );\n    assert( iDb==0 || pId2->z );\n    if( pId2->z==0 ) iDb = -1;\n\n    /* Initialize the VDBE program */\n    pParse->nMem = 6;\n\n    /* Set the maximum error count */\n    mxErr = SQLITE_INTEGRITY_CHECK_ERROR_MAX;\n    if( zRight ){\n      sqlite3GetInt32(zRight, &mxErr);\n      if( mxErr<=0 ){\n        mxErr = SQLITE_INTEGRITY_CHECK_ERROR_MAX;\n      }\n    }\n    sqlite3VdbeAddOp2(v, OP_Integer, mxErr-1, 1); /* reg[1] holds errors left */\n\n    /* Do an integrity check on each database file */\n    for(i=0; i<db->nDb; i++){\n      HashElem *x;     /* For looping over tables in the schema */\n      Hash *pTbls;     /* Set of all tables in the schema */\n      int *aRoot;      /* Array of root page numbers of all btrees */\n      int cnt = 0;     /* Number of entries in aRoot[] */\n      int mxIdx = 0;   /* Maximum number of indexes for any table */\n\n      if( OMIT_TEMPDB && i==1 ) continue;\n      if( iDb>=0 && i!=iDb ) continue;\n\n      sqlite3CodeVerifySchema(pParse, i);\n\n      /* Do an integrity check of the B-Tree\n      **\n      ** Begin by finding the root pages numbers\n      ** for all tables and indices in the database.\n      */\n      assert( sqlite3SchemaMutexHeld(db, i, 0) );\n      pTbls = &db->aDb[i].pSchema->tblHash;\n      for(cnt=0, x=sqliteHashFirst(pTbls); x; x=sqliteHashNext(x)){\n        Table *pTab = sqliteHashData(x);  /* Current table */\n        Index *pIdx;                      /* An index on pTab */\n        int nIdx;                         /* Number of indexes on pTab */\n        if( HasRowid(pTab) ) cnt++;\n        for(nIdx=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, nIdx++){ cnt++; }\n        if( nIdx>mxIdx ) mxIdx = nIdx;\n      }\n      aRoot = sqlite3DbMallocRawNN(db, sizeof(int)*(cnt+1));\n      if( aRoot==0 ) break;\n      for(cnt=0, x=sqliteHashFirst(pTbls); x; x=sqliteHashNext(x)){\n        Table *pTab = sqliteHashData(x);\n        Index *pIdx;\n        if( HasRowid(pTab) ) aRoot[++cnt] = pTab->tnum;\n        for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){\n          aRoot[++cnt] = pIdx->tnum;\n        }\n      }\n      aRoot[0] = cnt;\n\n      /* Make sure sufficient number of registers have been allocated */\n      pParse->nMem = MAX( pParse->nMem, 8+mxIdx );\n      sqlite3ClearTempRegCache(pParse);\n\n      /* Do the b-tree integrity checks */\n      sqlite3VdbeAddOp4(v, OP_IntegrityCk, 2, cnt, 1, (char*)aRoot,P4_INTARRAY);\n      sqlite3VdbeChangeP5(v, (u8)i);\n      addr = sqlite3VdbeAddOp1(v, OP_IsNull, 2); VdbeCoverage(v);\n      sqlite3VdbeAddOp4(v, OP_String8, 0, 3, 0,\n         sqlite3MPrintf(db, \"*** in database %s ***\\n\", db->aDb[i].zDbSName),\n         P4_DYNAMIC);\n      sqlite3VdbeAddOp3(v, OP_Concat, 2, 3, 3);\n      integrityCheckResultRow(v);\n      sqlite3VdbeJumpHere(v, addr);\n\n      /* Make sure all the indices are constructed correctly.\n      */\n      for(x=sqliteHashFirst(pTbls); x; x=sqliteHashNext(x)){\n        Table *pTab = sqliteHashData(x);\n        Index *pIdx, *pPk;\n        Index *pPrior = 0;\n        int loopTop;\n        int iDataCur, iIdxCur;\n        int r1 = -1;\n\n        if( pTab->tnum<1 ) continue;  /* Skip VIEWs or VIRTUAL TABLEs */\n        pPk = HasRowid(pTab) ? 0 : sqlite3PrimaryKeyIndex(pTab);\n        sqlite3OpenTableAndIndices(pParse, pTab, OP_OpenRead, 0,\n                                   1, 0, &iDataCur, &iIdxCur);\n        /* reg[7] counts the number of entries in the table.\n        ** reg[8+i] counts the number of entries in the i-th index \n        */\n        sqlite3VdbeAddOp2(v, OP_Integer, 0, 7);\n        for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){\n          sqlite3VdbeAddOp2(v, OP_Integer, 0, 8+j); /* index entries counter */\n        }\n        assert( pParse->nMem>=8+j );\n        assert( sqlite3NoTempsInRange(pParse,1,7+j) );\n        sqlite3VdbeAddOp2(v, OP_Rewind, iDataCur, 0); VdbeCoverage(v);\n        loopTop = sqlite3VdbeAddOp2(v, OP_AddImm, 7, 1);\n        if( !isQuick ){\n          /* Sanity check on record header decoding */\n          sqlite3VdbeAddOp3(v, OP_Column, iDataCur, pTab->nNVCol-1,3);\n          sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);\n        }\n        /* Verify that all NOT NULL columns really are NOT NULL */\n        for(j=0; j<pTab->nCol; j++){\n          char *zErr;\n          int jmp2;\n          if( j==pTab->iPKey ) continue;\n          if( pTab->aCol[j].notNull==0 ) continue;\n          sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);\n          if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){\n            sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);\n          }\n          jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);\n          zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,\n                              pTab->aCol[j].zName);\n          sqlite3VdbeAddOp4(v, OP_String8, 0, 3, 0, zErr, P4_DYNAMIC);\n          integrityCheckResultRow(v);\n          sqlite3VdbeJumpHere(v, jmp2);\n        }\n        /* Verify CHECK constraints */\n        if( pTab->pCheck && (db->flags & SQLITE_IgnoreChecks)==0 ){\n          ExprList *pCheck = sqlite3ExprListDup(db, pTab->pCheck, 0);\n          if( db->mallocFailed==0 ){\n            int addrCkFault = sqlite3VdbeMakeLabel(pParse);\n            int addrCkOk = sqlite3VdbeMakeLabel(pParse);\n            char *zErr;\n            int k;\n            pParse->iSelfTab = iDataCur + 1;\n            for(k=pCheck->nExpr-1; k>0; k--){\n              sqlite3ExprIfFalse(pParse, pCheck->a[k].pExpr, addrCkFault, 0);\n            }\n            sqlite3ExprIfTrue(pParse, pCheck->a[0].pExpr, addrCkOk, \n                SQLITE_JUMPIFNULL);\n            sqlite3VdbeResolveLabel(v, addrCkFault);\n            pParse->iSelfTab = 0;\n            zErr = sqlite3MPrintf(db, \"CHECK constraint failed in %s\",\n                pTab->zName);\n            sqlite3VdbeAddOp4(v, OP_String8, 0, 3, 0, zErr, P4_DYNAMIC);\n            integrityCheckResultRow(v);\n            sqlite3VdbeResolveLabel(v, addrCkOk);\n          }\n          sqlite3ExprListDelete(db, pCheck);\n        }\n        if( !isQuick ){ /* Omit the remaining tests for quick_check */\n          /* Validate index entries for the current row */\n          for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){\n            int jmp2, jmp3, jmp4, jmp5;\n            int ckUniq = sqlite3VdbeMakeLabel(pParse);\n            if( pPk==pIdx ) continue;\n            r1 = sqlite3GenerateIndexKey(pParse, pIdx, iDataCur, 0, 0, &jmp3,\n                                         pPrior, r1);\n            pPrior = pIdx;\n            sqlite3VdbeAddOp2(v, OP_AddImm, 8+j, 1);/* increment entry count */\n            /* Verify that an index entry exists for the current table row */\n            jmp2 = sqlite3VdbeAddOp4Int(v, OP_Found, iIdxCur+j, ckUniq, r1,\n                                        pIdx->nColumn); VdbeCoverage(v);\n            sqlite3VdbeLoadString(v, 3, \"row \");\n            sqlite3VdbeAddOp3(v, OP_Concat, 7, 3, 3);\n            sqlite3VdbeLoadString(v, 4, \" missing from index \");\n            sqlite3VdbeAddOp3(v, OP_Concat, 4, 3, 3);\n            jmp5 = sqlite3VdbeLoadString(v, 4, pIdx->zName);\n            sqlite3VdbeAddOp3(v, OP_Concat, 4, 3, 3);\n            jmp4 = integrityCheckResultRow(v);\n            sqlite3VdbeJumpHere(v, jmp2);\n            /* For UNIQUE indexes, verify that only one entry exists with the\n            ** current key.  The entry is unique if (1) any column is NULL\n            ** or (2) the next entry has a different key */\n            if( IsUniqueIndex(pIdx) ){\n              int uniqOk = sqlite3VdbeMakeLabel(pParse);\n              int jmp6;\n              int kk;\n              for(kk=0; kk<pIdx->nKeyCol; kk++){\n                int iCol = pIdx->aiColumn[kk];\n                assert( iCol!=XN_ROWID && iCol<pTab->nCol );\n                if( iCol>=0 && pTab->aCol[iCol].notNull ) continue;\n                sqlite3VdbeAddOp2(v, OP_IsNull, r1+kk, uniqOk);\n                VdbeCoverage(v);\n              }\n              jmp6 = sqlite3VdbeAddOp1(v, OP_Next, iIdxCur+j); VdbeCoverage(v);\n              sqlite3VdbeGoto(v, uniqOk);\n              sqlite3VdbeJumpHere(v, jmp6);\n              sqlite3VdbeAddOp4Int(v, OP_IdxGT, iIdxCur+j, uniqOk, r1,\n                                   pIdx->nKeyCol); VdbeCoverage(v);\n              sqlite3VdbeLoadString(v, 3, \"non-unique entry in index \");\n              sqlite3VdbeGoto(v, jmp5);\n              sqlite3VdbeResolveLabel(v, uniqOk);\n            }\n            sqlite3VdbeJumpHere(v, jmp4);\n            sqlite3ResolvePartIdxLabel(pParse, jmp3);\n          }\n        }\n        sqlite3VdbeAddOp2(v, OP_Next, iDataCur, loopTop); VdbeCoverage(v);\n        sqlite3VdbeJumpHere(v, loopTop-1);\n#ifndef SQLITE_OMIT_BTREECOUNT\n        if( !isQuick ){\n          sqlite3VdbeLoadString(v, 2, \"wrong # of entries in index \");\n          for(j=0, pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext, j++){\n            if( pPk==pIdx ) continue;\n            sqlite3VdbeAddOp2(v, OP_Count, iIdxCur+j, 3);\n            addr = sqlite3VdbeAddOp3(v, OP_Eq, 8+j, 0, 3); VdbeCoverage(v);\n            sqlite3VdbeChangeP5(v, SQLITE_NOTNULL);\n            sqlite3VdbeLoadString(v, 4, pIdx->zName);\n            sqlite3VdbeAddOp3(v, OP_Concat, 4, 2, 3);\n            integrityCheckResultRow(v);\n            sqlite3VdbeJumpHere(v, addr);\n          }\n        }\n#endif /* SQLITE_OMIT_BTREECOUNT */\n      } \n    }\n    {\n      static const int iLn = VDBE_OFFSET_LINENO(2);\n      static const VdbeOpList endCode[] = {\n        { OP_AddImm,      1, 0,        0},    /* 0 */\n        { OP_IfNotZero,   1, 4,        0},    /* 1 */\n        { OP_String8,     0, 3,        0},    /* 2 */\n        { OP_ResultRow,   3, 1,        0},    /* 3 */\n        { OP_Halt,        0, 0,        0},    /* 4 */\n        { OP_String8,     0, 3,        0},    /* 5 */\n        { OP_Goto,        0, 3,        0},    /* 6 */\n      };\n      VdbeOp *aOp;\n\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(endCode), endCode, iLn);\n      if( aOp ){\n        aOp[0].p2 = 1-mxErr;\n        aOp[2].p4type = P4_STATIC;\n        aOp[2].p4.z = \"ok\";\n        aOp[5].p4type = P4_STATIC;\n        aOp[5].p4.z = (char*)sqlite3ErrStr(SQLITE_CORRUPT);\n      }\n      sqlite3VdbeChangeP3(v, 0, sqlite3VdbeCurrentAddr(v)-2);\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_INTEGRITY_CHECK */\n\n#ifndef SQLITE_OMIT_UTF16\n  /*\n  **   PRAGMA encoding\n  **   PRAGMA encoding = \"utf-8\"|\"utf-16\"|\"utf-16le\"|\"utf-16be\"\n  **\n  ** In its first form, this pragma returns the encoding of the main\n  ** database. If the database is not initialized, it is initialized now.\n  **\n  ** The second form of this pragma is a no-op if the main database file\n  ** has not already been initialized. In this case it sets the default\n  ** encoding that will be used for the main database file if a new file\n  ** is created. If an existing main database file is opened, then the\n  ** default text encoding for the existing database is used.\n  ** \n  ** In all cases new databases created using the ATTACH command are\n  ** created to use the same default text encoding as the main database. If\n  ** the main database has not been initialized and/or created when ATTACH\n  ** is executed, this is done before the ATTACH operation.\n  **\n  ** In the second form this pragma sets the text encoding to be used in\n  ** new database files created using this database handle. It is only\n  ** useful if invoked immediately after the main database i\n  */\n  case PragTyp_ENCODING: {\n    static const struct EncName {\n      char *zName;\n      u8 enc;\n    } encnames[] = {\n      { \"UTF8\",     SQLITE_UTF8        },\n      { \"UTF-8\",    SQLITE_UTF8        },  /* Must be element [1] */\n      { \"UTF-16le\", SQLITE_UTF16LE     },  /* Must be element [2] */\n      { \"UTF-16be\", SQLITE_UTF16BE     },  /* Must be element [3] */\n      { \"UTF16le\",  SQLITE_UTF16LE     },\n      { \"UTF16be\",  SQLITE_UTF16BE     },\n      { \"UTF-16\",   0                  }, /* SQLITE_UTF16NATIVE */\n      { \"UTF16\",    0                  }, /* SQLITE_UTF16NATIVE */\n      { 0, 0 }\n    };\n    const struct EncName *pEnc;\n    if( !zRight ){    /* \"PRAGMA encoding\" */\n      if( sqlite3ReadSchema(pParse) ) goto pragma_out;\n      assert( encnames[SQLITE_UTF8].enc==SQLITE_UTF8 );\n      assert( encnames[SQLITE_UTF16LE].enc==SQLITE_UTF16LE );\n      assert( encnames[SQLITE_UTF16BE].enc==SQLITE_UTF16BE );\n      returnSingleText(v, encnames[ENC(pParse->db)].zName);\n    }else{                        /* \"PRAGMA encoding = XXX\" */\n      /* Only change the value of sqlite.enc if the database handle is not\n      ** initialized. If the main database exists, the new sqlite.enc value\n      ** will be overwritten when the schema is next loaded. If it does not\n      ** already exists, it will be created to use the new encoding value.\n      */\n      if( \n        !(DbHasProperty(db, 0, DB_SchemaLoaded)) || \n        DbHasProperty(db, 0, DB_Empty) \n      ){\n        for(pEnc=&encnames[0]; pEnc->zName; pEnc++){\n          if( 0==sqlite3StrICmp(zRight, pEnc->zName) ){\n            SCHEMA_ENC(db) = ENC(db) =\n                pEnc->enc ? pEnc->enc : SQLITE_UTF16NATIVE;\n            break;\n          }\n        }\n        if( !pEnc->zName ){\n          sqlite3ErrorMsg(pParse, \"unsupported encoding: %s\", zRight);\n        }\n      }\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_UTF16 */\n\n#ifndef SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS\n  /*\n  **   PRAGMA [schema.]schema_version\n  **   PRAGMA [schema.]schema_version = <integer>\n  **\n  **   PRAGMA [schema.]user_version\n  **   PRAGMA [schema.]user_version = <integer>\n  **\n  **   PRAGMA [schema.]freelist_count\n  **\n  **   PRAGMA [schema.]data_version\n  **\n  **   PRAGMA [schema.]application_id\n  **   PRAGMA [schema.]application_id = <integer>\n  **\n  ** The pragma's schema_version and user_version are used to set or get\n  ** the value of the schema-version and user-version, respectively. Both\n  ** the schema-version and the user-version are 32-bit signed integers\n  ** stored in the database header.\n  **\n  ** The schema-cookie is usually only manipulated internally by SQLite. It\n  ** is incremented by SQLite whenever the database schema is modified (by\n  ** creating or dropping a table or index). The schema version is used by\n  ** SQLite each time a query is executed to ensure that the internal cache\n  ** of the schema used when compiling the SQL query matches the schema of\n  ** the database against which the compiled query is actually executed.\n  ** Subverting this mechanism by using \"PRAGMA schema_version\" to modify\n  ** the schema-version is potentially dangerous and may lead to program\n  ** crashes or database corruption. Use with caution!\n  **\n  ** The user-version is not used internally by SQLite. It may be used by\n  ** applications for any purpose.\n  */\n  case PragTyp_HEADER_VALUE: {\n    int iCookie = pPragma->iArg;  /* Which cookie to read or write */\n    sqlite3VdbeUsesBtree(v, iDb);\n    if( zRight && (pPragma->mPragFlg & PragFlg_ReadOnly)==0 ){\n      /* Write the specified cookie value */\n      static const VdbeOpList setCookie[] = {\n        { OP_Transaction,    0,  1,  0},    /* 0 */\n        { OP_SetCookie,      0,  0,  0},    /* 1 */\n      };\n      VdbeOp *aOp;\n      sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(setCookie));\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(setCookie), setCookie, 0);\n      if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n      aOp[0].p1 = iDb;\n      aOp[1].p1 = iDb;\n      aOp[1].p2 = iCookie;\n      aOp[1].p3 = sqlite3Atoi(zRight);\n    }else{\n      /* Read the specified cookie value */\n      static const VdbeOpList readCookie[] = {\n        { OP_Transaction,     0,  0,  0},    /* 0 */\n        { OP_ReadCookie,      0,  1,  0},    /* 1 */\n        { OP_ResultRow,       1,  1,  0}\n      };\n      VdbeOp *aOp;\n      sqlite3VdbeVerifyNoMallocRequired(v, ArraySize(readCookie));\n      aOp = sqlite3VdbeAddOpList(v, ArraySize(readCookie),readCookie,0);\n      if( ONLY_IF_REALLOC_STRESS(aOp==0) ) break;\n      aOp[0].p1 = iDb;\n      aOp[1].p1 = iDb;\n      aOp[1].p3 = iCookie;\n      sqlite3VdbeReusable(v);\n    }\n  }\n  break;\n#endif /* SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS */\n\n#ifndef SQLITE_OMIT_COMPILEOPTION_DIAGS\n  /*\n  **   PRAGMA compile_options\n  **\n  ** Return the names of all compile-time options used in this build,\n  ** one option per row.\n  */\n  case PragTyp_COMPILE_OPTIONS: {\n    int i = 0;\n    const char *zOpt;\n    pParse->nMem = 1;\n    while( (zOpt = sqlite3_compileoption_get(i++))!=0 ){\n      sqlite3VdbeLoadString(v, 1, zOpt);\n      sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 1);\n    }\n    sqlite3VdbeReusable(v);\n  }\n  break;\n#endif /* SQLITE_OMIT_COMPILEOPTION_DIAGS */\n\n#ifndef SQLITE_OMIT_WAL\n  /*\n  **   PRAGMA [schema.]wal_checkpoint = passive|full|restart|truncate\n  **\n  ** Checkpoint the database.\n  */\n  case PragTyp_WAL_CHECKPOINT: {\n    int iBt = (pId2->z?iDb:SQLITE_MAX_ATTACHED);\n    int eMode = SQLITE_CHECKPOINT_PASSIVE;\n    if( zRight ){\n      if( sqlite3StrICmp(zRight, \"full\")==0 ){\n        eMode = SQLITE_CHECKPOINT_FULL;\n      }else if( sqlite3StrICmp(zRight, \"restart\")==0 ){\n        eMode = SQLITE_CHECKPOINT_RESTART;\n      }else if( sqlite3StrICmp(zRight, \"truncate\")==0 ){\n        eMode = SQLITE_CHECKPOINT_TRUNCATE;\n      }\n    }\n    pParse->nMem = 3;\n    sqlite3VdbeAddOp3(v, OP_Checkpoint, iBt, eMode, 1);\n    sqlite3VdbeAddOp2(v, OP_ResultRow, 1, 3);\n  }\n  break;\n\n  /*\n  **   PRAGMA wal_autocheckpoint\n  **   PRAGMA wal_autocheckpoint = N\n  **\n  ** Configure a database connection to automatically checkpoint a database\n  ** after accumulating N frames in the log. Or query for the current value\n  ** of N.\n  */\n  case PragTyp_WAL_AUTOCHECKPOINT: {\n    if( zRight ){\n      sqlite3_wal_autocheckpoint(db, sqlite3Atoi(zRight));\n    }\n    returnSingleInt(v, \n       db->xWalCallback==sqlite3WalDefaultHook ? \n           SQLITE_PTR_TO_INT(db->pWalArg) : 0);\n  }\n  break;\n#endif\n\n  /*\n  **  PRAGMA shrink_memory\n  **\n  ** IMPLEMENTATION-OF: R-23445-46109 This pragma causes the database\n  ** connection on which it is invoked to free up as much memory as it\n  ** can, by calling sqlite3_db_release_memory().\n  */\n  case PragTyp_SHRINK_MEMORY: {\n    sqlite3_db_release_memory(db);\n    break;\n  }\n\n  /*\n  **  PRAGMA optimize\n  **  PRAGMA optimize(MASK)\n  **  PRAGMA schema.optimize\n  **  PRAGMA schema.optimize(MASK)\n  **\n  ** Attempt to optimize the database.  All schemas are optimized in the first\n  ** two forms, and only the specified schema is optimized in the latter two.\n  **\n  ** The details of optimizations performed by this pragma are expected\n  ** to change and improve over time.  Applications should anticipate that\n  ** this pragma will perform new optimizations in future releases.\n  **\n  ** The optional argument is a bitmask of optimizations to perform:\n  **\n  **    0x0001    Debugging mode.  Do not actually perform any optimizations\n  **              but instead return one line of text for each optimization\n  **              that would have been done.  Off by default.\n  **\n  **    0x0002    Run ANALYZE on tables that might benefit.  On by default.\n  **              See below for additional information.\n  **\n  **    0x0004    (Not yet implemented) Record usage and performance \n  **              information from the current session in the\n  **              database file so that it will be available to \"optimize\"\n  **              pragmas run by future database connections.\n  **\n  **    0x0008    (Not yet implemented) Create indexes that might have\n  **              been helpful to recent queries\n  **\n  ** The default MASK is and always shall be 0xfffe.  0xfffe means perform all\n  ** of the optimizations listed above except Debug Mode, including new\n  ** optimizations that have not yet been invented.  If new optimizations are\n  ** ever added that should be off by default, those off-by-default \n  ** optimizations will have bitmasks of 0x10000 or larger.\n  **\n  ** DETERMINATION OF WHEN TO RUN ANALYZE\n  **\n  ** In the current implementation, a table is analyzed if only if all of\n  ** the following are true:\n  **\n  ** (1) MASK bit 0x02 is set.\n  **\n  ** (2) The query planner used sqlite_stat1-style statistics for one or\n  **     more indexes of the table at some point during the lifetime of\n  **     the current connection.\n  **\n  ** (3) One or more indexes of the table are currently unanalyzed OR\n  **     the number of rows in the table has increased by 25 times or more\n  **     since the last time ANALYZE was run.\n  **\n  ** The rules for when tables are analyzed are likely to change in\n  ** future releases.\n  */\n  case PragTyp_OPTIMIZE: {\n    int iDbLast;           /* Loop termination point for the schema loop */\n    int iTabCur;           /* Cursor for a table whose size needs checking */\n    HashElem *k;           /* Loop over tables of a schema */\n    Schema *pSchema;       /* The current schema */\n    Table *pTab;           /* A table in the schema */\n    Index *pIdx;           /* An index of the table */\n    LogEst szThreshold;    /* Size threshold above which reanalysis is needd */\n    char *zSubSql;         /* SQL statement for the OP_SqlExec opcode */\n    u32 opMask;            /* Mask of operations to perform */\n\n    if( zRight ){\n      opMask = (u32)sqlite3Atoi(zRight);\n      if( (opMask & 0x02)==0 ) break;\n    }else{\n      opMask = 0xfffe;\n    }\n    iTabCur = pParse->nTab++;\n    for(iDbLast = zDb?iDb:db->nDb-1; iDb<=iDbLast; iDb++){\n      if( iDb==1 ) continue;\n      sqlite3CodeVerifySchema(pParse, iDb);\n      pSchema = db->aDb[iDb].pSchema;\n      for(k=sqliteHashFirst(&pSchema->tblHash); k; k=sqliteHashNext(k)){\n        pTab = (Table*)sqliteHashData(k);\n\n        /* If table pTab has not been used in a way that would benefit from\n        ** having analysis statistics during the current session, then skip it.\n        ** This also has the effect of skipping virtual tables and views */\n        if( (pTab->tabFlags & TF_StatsUsed)==0 ) continue;\n\n        /* Reanalyze if the table is 25 times larger than the last analysis */\n        szThreshold = pTab->nRowLogEst + 46; assert( sqlite3LogEst(25)==46 );\n        for(pIdx=pTab->pIndex; pIdx; pIdx=pIdx->pNext){\n          if( !pIdx->hasStat1 ){\n            szThreshold = 0; /* Always analyze if any index lacks statistics */\n            break;\n          }\n        }\n        if( szThreshold ){\n          sqlite3OpenTable(pParse, iTabCur, iDb, pTab, OP_OpenRead);\n          sqlite3VdbeAddOp3(v, OP_IfSmaller, iTabCur, \n                         sqlite3VdbeCurrentAddr(v)+2+(opMask&1), szThreshold);\n          VdbeCoverage(v);\n        }\n        zSubSql = sqlite3MPrintf(db, \"ANALYZE \\\"%w\\\".\\\"%w\\\"\",\n                                 db->aDb[iDb].zDbSName, pTab->zName);\n        if( opMask & 0x01 ){\n          int r1 = sqlite3GetTempReg(pParse);\n          sqlite3VdbeAddOp4(v, OP_String8, 0, r1, 0, zSubSql, P4_DYNAMIC);\n          sqlite3VdbeAddOp2(v, OP_ResultRow, r1, 1);\n        }else{\n          sqlite3VdbeAddOp4(v, OP_SqlExec, 0, 0, 0, zSubSql, P4_DYNAMIC);\n        }\n      }\n    }\n    sqlite3VdbeAddOp0(v, OP_Expire);\n    break;\n  }\n\n  /*\n  **   PRAGMA busy_timeout\n  **   PRAGMA busy_timeout = N\n  **\n  ** Call sqlite3_busy_timeout(db, N).  Return the current timeout value\n  ** if one is set.  If no busy handler or a different busy handler is set\n  ** then 0 is returned.  Setting the busy_timeout to 0 or negative\n  ** disables the timeout.\n  */\n  /*case PragTyp_BUSY_TIMEOUT*/ default: {\n    assert( pPragma->ePragTyp==PragTyp_BUSY_TIMEOUT );\n    if( zRight ){\n      sqlite3_busy_timeout(db, sqlite3Atoi(zRight));\n    }\n    returnSingleInt(v, db->busyTimeout);\n    break;\n  }\n\n  /*\n  **   PRAGMA soft_heap_limit\n  **   PRAGMA soft_heap_limit = N\n  **\n  ** IMPLEMENTATION-OF: R-26343-45930 This pragma invokes the\n  ** sqlite3_soft_heap_limit64() interface with the argument N, if N is\n  ** specified and is a non-negative integer.\n  ** IMPLEMENTATION-OF: R-64451-07163 The soft_heap_limit pragma always\n  ** returns the same integer that would be returned by the\n  ** sqlite3_soft_heap_limit64(-1) C-language function.\n  */\n  case PragTyp_SOFT_HEAP_LIMIT: {\n    sqlite3_int64 N;\n    if( zRight && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK ){\n      sqlite3_soft_heap_limit64(N);\n    }\n    returnSingleInt(v, sqlite3_soft_heap_limit64(-1));\n    break;\n  }\n\n  /*\n  **   PRAGMA hard_heap_limit\n  **   PRAGMA hard_heap_limit = N\n  **\n  ** Invoke sqlite3_hard_heap_limit64() to query or set the hard heap\n  ** limit.  The hard heap limit can be activated or lowered by this\n  ** pragma, but not raised or deactivated.  Only the\n  ** sqlite3_hard_heap_limit64() C-language API can raise or deactivate\n  ** the hard heap limit.  This allows an application to set a heap limit\n  ** constraint that cannot be relaxed by an untrusted SQL script.\n  */\n  case PragTyp_HARD_HEAP_LIMIT: {\n    sqlite3_int64 N;\n    if( zRight && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK ){\n      sqlite3_int64 iPrior = sqlite3_hard_heap_limit64(-1);\n      if( N>0 && (iPrior==0 || iPrior>N) ) sqlite3_hard_heap_limit64(N);\n    }\n    returnSingleInt(v, sqlite3_hard_heap_limit64(-1));\n    break;\n  }\n\n  /*\n  **   PRAGMA threads\n  **   PRAGMA threads = N\n  **\n  ** Configure the maximum number of worker threads.  Return the new\n  ** maximum, which might be less than requested.\n  */\n  case PragTyp_THREADS: {\n    sqlite3_int64 N;\n    if( zRight\n     && sqlite3DecOrHexToI64(zRight, &N)==SQLITE_OK\n     && N>=0\n    ){\n      sqlite3_limit(db, SQLITE_LIMIT_WORKER_THREADS, (int)(N&0x7fffffff));\n    }\n    returnSingleInt(v, sqlite3_limit(db, SQLITE_LIMIT_WORKER_THREADS, -1));\n    break;\n  }\n\n#if defined(SQLITE_DEBUG) || defined(SQLITE_TEST)\n  /*\n  ** Report the current state of file logs for all databases\n  */\n  case PragTyp_LOCK_STATUS: {\n    static const char *const azLockName[] = {\n      \"unlocked\", \"shared\", \"reserved\", \"pending\", \"exclusive\"\n    };\n    int i;\n    pParse->nMem = 2;\n    for(i=0; i<db->nDb; i++){\n      Btree *pBt;\n      const char *zState = \"unknown\";\n      int j;\n      if( db->aDb[i].zDbSName==0 ) continue;\n      pBt = db->aDb[i].pBt;\n      if( pBt==0 || sqlite3BtreePager(pBt)==0 ){\n        zState = \"closed\";\n      }else if( sqlite3_file_control(db, i ? db->aDb[i].zDbSName : 0, \n                                     SQLITE_FCNTL_LOCKSTATE, &j)==SQLITE_OK ){\n         zState = azLockName[j];\n      }\n      sqlite3VdbeMultiLoad(v, 1, \"ss\", db->aDb[i].zDbSName, zState);\n    }\n    break;\n  }\n#endif\n\n#ifdef SQLITE_HAS_CODEC\n  /* Pragma        iArg\n  ** ----------   ------\n  **  key           0\n  **  rekey         1\n  **  hexkey        2\n  **  hexrekey      3\n  **  textkey       4\n  **  textrekey     5\n  */\n  case PragTyp_KEY: {\n    if( zRight ){\n      char zBuf[40];\n      const char *zKey = zRight;\n      int n;\n      if( pPragma->iArg==2 || pPragma->iArg==3 ){\n        u8 iByte;\n        int i;\n        for(i=0, iByte=0; i<sizeof(zBuf)*2 && sqlite3Isxdigit(zRight[i]); i++){\n          iByte = (iByte<<4) + sqlite3HexToInt(zRight[i]);\n          if( (i&1)!=0 ) zBuf[i/2] = iByte;\n        }\n        zKey = zBuf;\n        n = i/2;\n      }else{\n        n = pPragma->iArg<4 ? sqlite3Strlen30(zRight) : -1;\n      }\n      if( (pPragma->iArg & 1)==0 ){\n        rc = sqlite3_key_v2(db, zDb, zKey, n);\n      }else{\n        rc = sqlite3_rekey_v2(db, zDb, zKey, n);\n      }\n      if( rc==SQLITE_OK && n!=0 ){\n        sqlite3VdbeSetNumCols(v, 1);\n        sqlite3VdbeSetColName(v, 0, COLNAME_NAME, \"ok\", SQLITE_STATIC);\n        returnSingleText(v, \"ok\");\n      }\n    }\n    break;\n  }\n#endif\n#if defined(SQLITE_HAS_CODEC) || defined(SQLITE_ENABLE_CEROD)\n  case PragTyp_ACTIVATE_EXTENSIONS: if( zRight ){\n#ifdef SQLITE_HAS_CODEC\n    if( sqlite3StrNICmp(zRight, \"see-\", 4)==0 ){\n      sqlite3_activate_see(&zRight[4]);\n    }\n#endif\n#ifdef SQLITE_ENABLE_CEROD\n    if( sqlite3StrNICmp(zRight, \"cerod-\", 6)==0 ){\n      sqlite3_activate_cerod(&zRight[6]);\n    }\n#endif\n  }\n  break;\n#endif\n\n  } /* End of the PRAGMA switch */\n\n  /* The following block is a no-op unless SQLITE_DEBUG is defined. Its only\n  ** purpose is to execute assert() statements to verify that if the\n  ** PragFlg_NoColumns1 flag is set and the caller specified an argument\n  ** to the PRAGMA, the implementation has not added any OP_ResultRow \n  ** instructions to the VM.  */\n  if( (pPragma->mPragFlg & PragFlg_NoColumns1) && zRight ){\n    sqlite3VdbeVerifyNoResultRow(v);\n  }\n\npragma_out:\n  sqlite3DbFree(db, zLeft);\n  sqlite3DbFree(db, zRight);\n}\n#ifndef SQLITE_OMIT_VIRTUALTABLE\n/*****************************************************************************\n** Implementation of an eponymous virtual table that runs a pragma.\n**\n*/\ntypedef struct PragmaVtab PragmaVtab;\ntypedef struct PragmaVtabCursor PragmaVtabCursor;\nstruct PragmaVtab {\n  sqlite3_vtab base;        /* Base class.  Must be first */\n  sqlite3 *db;              /* The database connection to which it belongs */\n  const PragmaName *pName;  /* Name of the pragma */\n  u8 nHidden;               /* Number of hidden columns */\n  u8 iHidden;               /* Index of the first hidden column */\n};\nstruct PragmaVtabCursor {\n  sqlite3_vtab_cursor base; /* Base class.  Must be first */\n  sqlite3_stmt *pPragma;    /* The pragma statement to run */\n  sqlite_int64 iRowid;      /* Current rowid */\n  char *azArg[2];           /* Value of the argument and schema */\n};\n\n/* \n** Pragma virtual table module xConnect method.\n*/\nstatic int pragmaVtabConnect(\n  sqlite3 *db,\n  void *pAux,\n  int argc, const char *const*argv,\n  sqlite3_vtab **ppVtab,\n  char **pzErr\n){\n  const PragmaName *pPragma = (const PragmaName*)pAux;\n  PragmaVtab *pTab = 0;\n  int rc;\n  int i, j;\n  char cSep = '(';\n  StrAccum acc;\n  char zBuf[200];\n\n  UNUSED_PARAMETER(argc);\n  UNUSED_PARAMETER(argv);\n  sqlite3StrAccumInit(&acc, 0, zBuf, sizeof(zBuf), 0);\n  sqlite3_str_appendall(&acc, \"CREATE TABLE x\");\n  for(i=0, j=pPragma->iPragCName; i<pPragma->nPragCName; i++, j++){\n    sqlite3_str_appendf(&acc, \"%c\\\"%s\\\"\", cSep, pragCName[j]);\n    cSep = ',';\n  }\n  if( i==0 ){\n    sqlite3_str_appendf(&acc, \"(\\\"%s\\\"\", pPragma->zName);\n    i++;\n  }\n  j = 0;\n  if( pPragma->mPragFlg & PragFlg_Result1 ){\n    sqlite3_str_appendall(&acc, \",arg HIDDEN\");\n    j++;\n  }\n  if( pPragma->mPragFlg & (PragFlg_SchemaOpt|PragFlg_SchemaReq) ){\n    sqlite3_str_appendall(&acc, \",schema HIDDEN\");\n    j++;\n  }\n  sqlite3_str_append(&acc, \")\", 1);\n  sqlite3StrAccumFinish(&acc);\n  assert( strlen(zBuf) < sizeof(zBuf)-1 );\n  rc = sqlite3_declare_vtab(db, zBuf);\n  if( rc==SQLITE_OK ){\n    pTab = (PragmaVtab*)sqlite3_malloc(sizeof(PragmaVtab));\n    if( pTab==0 ){\n      rc = SQLITE_NOMEM;\n    }else{\n      memset(pTab, 0, sizeof(PragmaVtab));\n      pTab->pName = pPragma;\n      pTab->db = db;\n      pTab->iHidden = i;\n      pTab->nHidden = j;\n    }\n  }else{\n    *pzErr = sqlite3_mprintf(\"%s\", sqlite3_errmsg(db));\n  }\n\n  *ppVtab = (sqlite3_vtab*)pTab;\n  return rc;\n}\n\n/* \n** Pragma virtual table module xDisconnect method.\n*/\nstatic int pragmaVtabDisconnect(sqlite3_vtab *pVtab){\n  PragmaVtab *pTab = (PragmaVtab*)pVtab;\n  sqlite3_free(pTab);\n  return SQLITE_OK;\n}\n\n/* Figure out the best index to use to search a pragma virtual table.\n**\n** There are not really any index choices.  But we want to encourage the\n** query planner to give == constraints on as many hidden parameters as\n** possible, and especially on the first hidden parameter.  So return a\n** high cost if hidden parameters are unconstrained.\n*/\nstatic int pragmaVtabBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){\n  PragmaVtab *pTab = (PragmaVtab*)tab;\n  const struct sqlite3_index_constraint *pConstraint;\n  int i, j;\n  int seen[2];\n\n  pIdxInfo->estimatedCost = (double)1;\n  if( pTab->nHidden==0 ){ return SQLITE_OK; }\n  pConstraint = pIdxInfo->aConstraint;\n  seen[0] = 0;\n  seen[1] = 0;\n  for(i=0; i<pIdxInfo->nConstraint; i++, pConstraint++){\n    if( pConstraint->usable==0 ) continue;\n    if( pConstraint->op!=SQLITE_INDEX_CONSTRAINT_EQ ) continue;\n    if( pConstraint->iColumn < pTab->iHidden ) continue;\n    j = pConstraint->iColumn - pTab->iHidden;\n    assert( j < 2 );\n    seen[j] = i+1;\n  }\n  if( seen[0]==0 ){\n    pIdxInfo->estimatedCost = (double)2147483647;\n    pIdxInfo->estimatedRows = 2147483647;\n    return SQLITE_OK;\n  }\n  j = seen[0]-1;\n  pIdxInfo->aConstraintUsage[j].argvIndex = 1;\n  pIdxInfo->aConstraintUsage[j].omit = 1;\n  if( seen[1]==0 ) return SQLITE_OK;\n  pIdxInfo->estimatedCost = (double)20;\n  pIdxInfo->estimatedRows = 20;\n  j = seen[1]-1;\n  pIdxInfo->aConstraintUsage[j].argvIndex = 2;\n  pIdxInfo->aConstraintUsage[j].omit = 1;\n  return SQLITE_OK;\n}\n\n/* Create a new cursor for the pragma virtual table */\nstatic int pragmaVtabOpen(sqlite3_vtab *pVtab, sqlite3_vtab_cursor **ppCursor){\n  PragmaVtabCursor *pCsr;\n  pCsr = (PragmaVtabCursor*)sqlite3_malloc(sizeof(*pCsr));\n  if( pCsr==0 ) return SQLITE_NOMEM;\n  memset(pCsr, 0, sizeof(PragmaVtabCursor));\n  pCsr->base.pVtab = pVtab;\n  *ppCursor = &pCsr->base;\n  return SQLITE_OK;\n}\n\n/* Clear all content from pragma virtual table cursor. */\nstatic void pragmaVtabCursorClear(PragmaVtabCursor *pCsr){\n  int i;\n  sqlite3_finalize(pCsr->pPragma);\n  pCsr->pPragma = 0;\n  for(i=0; i<ArraySize(pCsr->azArg); i++){\n    sqlite3_free(pCsr->azArg[i]);\n    pCsr->azArg[i] = 0;\n  }\n}\n\n/* Close a pragma virtual table cursor */\nstatic int pragmaVtabClose(sqlite3_vtab_cursor *cur){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)cur;\n  pragmaVtabCursorClear(pCsr);\n  sqlite3_free(pCsr);\n  return SQLITE_OK;\n}\n\n/* Advance the pragma virtual table cursor to the next row */\nstatic int pragmaVtabNext(sqlite3_vtab_cursor *pVtabCursor){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  int rc = SQLITE_OK;\n\n  /* Increment the xRowid value */\n  pCsr->iRowid++;\n  assert( pCsr->pPragma );\n  if( SQLITE_ROW!=sqlite3_step(pCsr->pPragma) ){\n    rc = sqlite3_finalize(pCsr->pPragma);\n    pCsr->pPragma = 0;\n    pragmaVtabCursorClear(pCsr);\n  }\n  return rc;\n}\n\n/* \n** Pragma virtual table module xFilter method.\n*/\nstatic int pragmaVtabFilter(\n  sqlite3_vtab_cursor *pVtabCursor, \n  int idxNum, const char *idxStr,\n  int argc, sqlite3_value **argv\n){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  PragmaVtab *pTab = (PragmaVtab*)(pVtabCursor->pVtab);\n  int rc;\n  int i, j;\n  StrAccum acc;\n  char *zSql;\n\n  UNUSED_PARAMETER(idxNum);\n  UNUSED_PARAMETER(idxStr);\n  pragmaVtabCursorClear(pCsr);\n  j = (pTab->pName->mPragFlg & PragFlg_Result1)!=0 ? 0 : 1;\n  for(i=0; i<argc; i++, j++){\n    const char *zText = (const char*)sqlite3_value_text(argv[i]);\n    assert( j<ArraySize(pCsr->azArg) );\n    assert( pCsr->azArg[j]==0 );\n    if( zText ){\n      pCsr->azArg[j] = sqlite3_mprintf(\"%s\", zText);\n      if( pCsr->azArg[j]==0 ){\n        return SQLITE_NOMEM;\n      }\n    }\n  }\n  sqlite3StrAccumInit(&acc, 0, 0, 0, pTab->db->aLimit[SQLITE_LIMIT_SQL_LENGTH]);\n  sqlite3_str_appendall(&acc, \"PRAGMA \");\n  if( pCsr->azArg[1] ){\n    sqlite3_str_appendf(&acc, \"%Q.\", pCsr->azArg[1]);\n  }\n  sqlite3_str_appendall(&acc, pTab->pName->zName);\n  if( pCsr->azArg[0] ){\n    sqlite3_str_appendf(&acc, \"=%Q\", pCsr->azArg[0]);\n  }\n  zSql = sqlite3StrAccumFinish(&acc);\n  if( zSql==0 ) return SQLITE_NOMEM;\n  rc = sqlite3_prepare_v2(pTab->db, zSql, -1, &pCsr->pPragma, 0);\n  sqlite3_free(zSql);\n  if( rc!=SQLITE_OK ){\n    pTab->base.zErrMsg = sqlite3_mprintf(\"%s\", sqlite3_errmsg(pTab->db));\n    return rc;\n  }\n  return pragmaVtabNext(pVtabCursor);\n}\n\n/*\n** Pragma virtual table module xEof method.\n*/\nstatic int pragmaVtabEof(sqlite3_vtab_cursor *pVtabCursor){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  return (pCsr->pPragma==0);\n}\n\n/* The xColumn method simply returns the corresponding column from\n** the PRAGMA.  \n*/\nstatic int pragmaVtabColumn(\n  sqlite3_vtab_cursor *pVtabCursor, \n  sqlite3_context *ctx, \n  int i\n){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  PragmaVtab *pTab = (PragmaVtab*)(pVtabCursor->pVtab);\n  if( i<pTab->iHidden ){\n    sqlite3_result_value(ctx, sqlite3_column_value(pCsr->pPragma, i));\n  }else{\n    sqlite3_result_text(ctx, pCsr->azArg[i-pTab->iHidden],-1,SQLITE_TRANSIENT);\n  }\n  return SQLITE_OK;\n}\n\n/* \n** Pragma virtual table module xRowid method.\n*/\nstatic int pragmaVtabRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *p){\n  PragmaVtabCursor *pCsr = (PragmaVtabCursor*)pVtabCursor;\n  *p = pCsr->iRowid;\n  return SQLITE_OK;\n}\n\n/* The pragma virtual table object */\nstatic const sqlite3_module pragmaVtabModule = {\n  0,                           /* iVersion */\n  0,                           /* xCreate - create a table */\n  pragmaVtabConnect,           /* xConnect - connect to an existing table */\n  pragmaVtabBestIndex,         /* xBestIndex - Determine search strategy */\n  pragmaVtabDisconnect,        /* xDisconnect - Disconnect from a table */\n  0,                           /* xDestroy - Drop a table */\n  pragmaVtabOpen,              /* xOpen - open a cursor */\n  pragmaVtabClose,             /* xClose - close a cursor */\n  pragmaVtabFilter,            /* xFilter - configure scan constraints */\n  pragmaVtabNext,              /* xNext - advance a cursor */\n  pragmaVtabEof,               /* xEof */\n  pragmaVtabColumn,            /* xColumn - read data */\n  pragmaVtabRowid,             /* xRowid - read data */\n  0,                           /* xUpdate - write data */\n  0,                           /* xBegin - begin transaction */\n  0,                           /* xSync - sync transaction */\n  0,                           /* xCommit - commit transaction */\n  0,                           /* xRollback - rollback transaction */\n  0,                           /* xFindFunction - function overloading */\n  0,                           /* xRename - rename the table */\n  0,                           /* xSavepoint */\n  0,                           /* xRelease */\n  0,                           /* xRollbackTo */\n  0                            /* xShadowName */\n};\n\n/*\n** Check to see if zTabName is really the name of a pragma.  If it is,\n** then register an eponymous virtual table for that pragma and return\n** a pointer to the Module object for the new virtual table.\n*/\nModule *sqlite3PragmaVtabRegister(sqlite3 *db, const char *zName){\n  const PragmaName *pName;\n  assert( sqlite3_strnicmp(zName, \"pragma_\", 7)==0 );\n  pName = pragmaLocate(zName+7);\n  if( pName==0 ) return 0;\n  if( (pName->mPragFlg & (PragFlg_Result0|PragFlg_Result1))==0 ) return 0;\n  assert( sqlite3HashFind(&db->aModule, zName)==0 );\n  return sqlite3VtabCreateModule(db, zName, &pragmaVtabModule, (void*)pName, 0);\n}\n\n#endif /* SQLITE_OMIT_VIRTUALTABLE */\n\n#endif /* SQLITE_OMIT_PRAGMA */\n", "# 2019-10-31\n#\n# The author disclaims copyright to this source code.  In place of\n# a legal notice, here is a blessing:\n#\n#    May you do good and not evil.\n#    May you find forgiveness for yourself and forgive others.\n#    May you share freely, never taking more than you give.\n#\n#***********************************************************************\n# \n# Test cases for generated columns.\n#\n\nset testdir [file dirname $argv0]\nsource $testdir/tester.tcl\n\n# ticket 830277d9db6c3ba1 on 2019-10-31\ndo_execsql_test gencol1-100 {\n  CREATE TABLE t0(c0 AS(TYPEOF(c1)), c1);\n  INSERT INTO t0(c1) VALUES(0);\n  CREATE TABLE t1(x AS (typeof(y)), y);\n  INSERT INTO t1 SELECT * FROM t0;\n  SELECT * FROM t1;\n} {integer 0}\n\nforeach {tn schema} { \n1 {\n   CREATE TABLE t1(\n     a INT,\n     b TEXT,\n     c ANY,\n     w INT GENERATED ALWAYS AS (a*10),\n     x TEXT AS (typeof(c)),\n     y TEXT AS (substr(b,a,a+2))\n   );\n  }\n2 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (a*10),\n     x TEXT AS (typeof(c)),\n     y TEXT AS (substr(b,a,a+2)),\n     a INT,\n     b TEXT,\n     c ANY\n   );\n  }\n3 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (a*10),\n     a INT,\n     x TEXT AS (typeof(c)) STORED,\n     b TEXT,\n     y TEXT AS (substr(b,a,a+2)),\n     c ANY\n   );\n  }\n4 {\n   CREATE TABLE t1(\n     a INTEGER PRIMARY KEY,\n     w INT GENERATED ALWAYS AS (a*10),\n     b TEXT,\n     x TEXT AS (typeof(c)),\n     y TEXT AS (substr(b,a,a+2)) STORED,\n     c ANY\n   );\n  }\n5 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (a*10),\n     a INT,\n     x TEXT AS (typeof(c)),\n     b TEXT,\n     y TEXT AS (substr(b,a,a+2)) STORED,\n     c ANY,\n     PRIMARY KEY(a,b)\n   ) WITHOUT ROWID;\n  }\n6 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (m*5),\n     m INT AS (a*2) STORED,\n     a INT,\n     x TEXT AS (typeof(c)),\n     b TEXT,\n     y TEXT AS (substr(b,m/2,m/2+2)) STORED,\n     c ANY,\n     PRIMARY KEY(a,b)\n   );\n  }\n7 {\n   CREATE TABLE t1(\n     w INT GENERATED ALWAYS AS (m*5),\n     m INT AS (a*2) NOT NULL,\n     a INT,\n     x TEXT AS (typeof(c)) CHECK (x<>'blank'),\n     b TEXT,\n     y TEXT AS (substr(b,m/2,m/2+2)) STORED,\n     c ANY,\n     PRIMARY KEY(b,a)\n   ) WITHOUT ROWID;\n  }\n} {\n  catch {db close}\n  sqlite3 db :memory:\n  db eval $schema\n  do_execsql_test gencol1-2.$tn.100 {\n    INSERT INTO t1(a,b,c) VALUES(1,'abcdef',5.5),(3,'cantaloupe',NULL);\n    SELECT w, x, y, '|' FROM t1 ORDER BY a;\n  } {10 real abc | 30 null ntalo |}\n  do_execsql_test gencol1-2.$tn.101 {\n    SELECT w, x, y, '|' FROM t1 ORDER BY w;\n  } {10 real abc | 30 null ntalo |}\n  do_execsql_test gencol1-2.$tn.102 {\n    SELECT a FROM t1 WHERE w=30;\n  } {3}\n  do_execsql_test gencol1-2.$tn.103 {\n    SELECT a FROM t1 WHERE x='real';\n  } {1}\n  do_execsql_test gencol1-2.$tn.104 {\n    SELECT a FROM t1 WHERE y LIKE '%tal%' OR x='real' ORDER BY b;\n  } {1 3}\n  do_execsql_test gencol1-2.$tn.110 {\n    CREATE INDEX t1w ON t1(w);\n    SELECT a FROM t1 WHERE w=10;\n  } {1}\n  do_execsql_test gencol1-2.$tn.120 {\n    CREATE INDEX t1x ON t1(x) WHERE w BETWEEN 20 AND 40;\n    SELECT a FROM t1 WHERE x='null' AND w BETWEEN 20 AND 40;\n  } {3}\n  do_execsql_test gencol1-2.$tn.121 {\n    SELECT a FROM t1 WHERE x='real';\n  } {1}\n  do_execsql_test gencol1-2.$tn.130 {\n    VACUUM;\n    PRAGMA integrity_check;\n  } {ok}\n  do_execsql_test gencol1-2.$tn.140 {\n    UPDATE t1 SET a=a+100 WHERE w<20;\n    SELECT a, w, '|' FROM t1 ORDER BY w;\n  } {3 30 | 101 1010 |}\n  do_execsql_test gencol1-2.$tn.150 {\n    INSERT INTO t1 VALUES(4,'jambalaya','Chef John'),(15,87719874135,0);\n    SELECT w, x, y, '|' FROM t1 ORDER BY w;\n  } {30 null ntalo | 40 text balaya | 150 integer {} | 1010 real {} |}\n}\n\n# 2019-10-31 ticket b9befa4b83a660cc\ndb close\nsqlite3 db :memory:\ndo_execsql_test gencol1-3.100 {\n  PRAGMA foreign_keys = true;\n  CREATE TABLE t0(c0 PRIMARY KEY, c1, c2 AS (c0+c1-c3) REFERENCES t0, c3);\n  INSERT INTO t0 VALUES (0, 0, 0), (11, 5, 5);\n  UPDATE t0 SET c1 = c0, c3 = c0;\n  SELECT *, '|' FROM t0 ORDER BY +c0;\n} {0 0 0 0 | 11 11 11 11 |}\ndo_catchsql_test gencol1-3.110 {\n  UPDATE t0 SET c1 = c0, c3 = c0+1;\n} {1 {FOREIGN KEY constraint failed}}\n\n# 2019-11-01 ticket c28a01da72f8957c\ndb close\nsqlite3 db :memory:\ndo_execsql_test gencol1-4.100 {\n  CREATE TABLE t0 (\n    c0,\n    c1 a UNIQUE AS (1),\n    c2,\n    c3 REFERENCES t0(c1)\n  );\n  PRAGMA foreign_keys = true;\n  INSERT INTO t0(c0,c2,c3) VALUES(0,0,1);\n} {}\ndo_catchsql_test gencol1-4.110 {\n  REPLACE INTO t0(c0,c2,c3) VALUES(0,0,0),(0,0,0);\n} {1 {FOREIGN KEY constraint failed}}\n\n# 2019-11-01 Problem found while adding new foreign key test cases in TH3.\ndb close\nsqlite3 db :memory:\ndo_execsql_test gencol1-5.100 {\n  PRAGMA foreign_keys=ON;\n  CREATE TABLE t1(\n    gcb AS (b*1),\n    a INTEGER PRIMARY KEY,\n    gcc AS (c+0),\n    b UNIQUE,\n    gca AS (1*a+0),\n    c UNIQUE\n  ) WITHOUT ROWID;\n  INSERT INTO t1 VALUES(1,2,3);\n  INSERT INTO t1 VALUES(4,5,6);\n  INSERT INTO t1 VALUES(7,8,9);\n  CREATE TABLE t1a(\n    gcx AS (x+0) REFERENCES t1(a) ON DELETE CASCADE,\n    id,\n    x,\n    gcid AS (1*id)\n  );\n  INSERT INTO t1a VALUES(1, 1);\n  INSERT INTO t1a VALUES(2, 4);\n  INSERT INTO t1a VALUES(3, 7);\n  DELETE FROM t1 WHERE b=5;\n  SELECT id,x,'|' FROM t1a ORDER BY id;\n} {1 1 | 3 7 |}  \n\ndo_catchsql_test gencol1-6.10 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0(c0 NOT NULL AS(c1), c1);\n  REPLACE INTO t0(c1) VALUES(NULL);\n} {1 {NOT NULL constraint failed: t0.c0}}\n\n# 2019-11-06 ticket b13b7dce76e9352b34e7\ndo_execsql_test gencol1-7.10 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0 (c0 GENERATED ALWAYS AS (1), c1 UNIQUE, c2 UNIQUE);\n  INSERT INTO t0(c1) VALUES (1);\n  SELECT quote(0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1) FROM t0;\n} {NULL}\ndo_execsql_test gencol1-7.20 {\n  SELECT 99 FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1;  \n} {}\n\n# 2019-11-06 ticket 4fc08501f4e56692\ndo_execsql_test gencol1-8.10 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0(\n    c0 AS (('a', 9) < ('b', c1)),\n    c1 AS (1),\n    c2 CHECK (1 = c1)\n  );\n  INSERT INTO t0 VALUES (0),(99);\n  SELECT * FROM t0;\n} {1 1 0 1 1 99}\ndo_catchsql_test gencol1-8.20 {\n  DROP TABLE IF EXISTS t0;\n  CREATE TABLE t0(\n    c0,\n    c1 AS(c0 + c2),\n    c2 AS(c1) CHECK(c2)\n  );\n  UPDATE t0 SET c0 = NULL;\n} {1 {generated column loop on \"c2\"}}\n\n# 2019-11-21 Problems in the new generated column logic\n# reported by Yongheng Chen and Rui Zhong\ndo_execsql_test gencol1-9.10 {\n  PRAGMA foreign_keys=OFF;\n  DROP TABLE t1;\n  CREATE TABLE t1(aa , bb AS (17) UNIQUE);\n  INSERT INTO t1 VALUES(17);\n  CREATE TABLE t2(cc);\n  INSERT INTO t2 VALUES(41);\n  SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;\n} {41 17 17}\ndo_execsql_test gencol1-9.20 {\n  CREATE TABLE t3(aa INT PRIMARY KEY, bb UNIQUE AS(aa));\n  INSERT INTO t3 VALUES(1);\n  SELECT 100, * FROM t3;\n  DELETE FROM t3 WHERE (SELECT bb FROM t3);\n  SELECT 200, * FROM t3;\n} {100 1 1}\n\n# 2019-12-04 Generated column in a CREATE TABLE IF NOT EXISTS that\n# does already exist.\n#\nsqlite3 db :memory:\ndo_execsql_test gencol1-10.10 {\n  CREATE TABLE t1(aa,bb);\n  CREATE TABLE IF NOT EXISTS t1(aa, bb AS (aa+1));\n  PRAGMA integrity_check;\n} {ok}\n\n# 2019-12-06 Found by mrigger\n#\nsqlite3 db :memory:\ndo_execsql_test gencol1-11.10 {\n  PRAGMA foreign_keys = true;\n  CREATE TABLE t0(\n    c0,\n    c1 INTEGER PRIMARY KEY,\n    c2 BLOB UNIQUE DEFAULT x'00',\n    c3 BLOB GENERATED ALWAYS AS (1), \n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.20 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\ndo_execsql_test gencol1-11.30 {\n  DROP TABLE t0;\n  CREATE TABLE t0(\n    c0,\n    c1 INTEGER PRIMARY KEY,\n    c3 BLOB GENERATED ALWAYS AS (1), \n    c2 BLOB UNIQUE DEFAULT x'00',\n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.40 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\ndo_execsql_test gencol1-11.50 {\n  DROP TABLE t0;\n  CREATE TABLE t0(\n    c0,\n    c3 BLOB GENERATED ALWAYS AS (1), \n    c1 INTEGER PRIMARY KEY,\n    c2 BLOB UNIQUE DEFAULT x'00',\n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.60 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\ndo_execsql_test gencol1-11.70 {\n  DROP TABLE t0;\n  CREATE TABLE t0(\n    c3 BLOB GENERATED ALWAYS AS (1), \n    c0,\n    c1 INTEGER PRIMARY KEY,\n    c2 BLOB UNIQUE DEFAULT x'00',\n    FOREIGN KEY(c1) REFERENCES t0(c2)\n  );\n}\ndo_catchsql_test gencol1-11.80 {\n  INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)\n} {1 {FOREIGN KEY constraint failed}}\n\n# 2019-12-09 ticket bd8c280671ba44a7\n# With generated columns, the sqlite3ExprGetColumnOfTable() routine might\n# generate a code sequence that does not end with OP_Column.  So check to\n# make sure that the last instruction generated is an OP_column prior to\n# applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the\n# PRAGMA integrity_check code.\n#\nsqlite3 db :memory:\ndo_execsql_test gencol1-12.10 {\n  CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));\n  INSERT INTO t0(c0) VALUES (0);\n  PRAGMA integrity_check;\n} {ok}\n\nfinish_test\n"], "filenames": ["manifest", "manifest.uuid", "src/pragma.c", "test/gencol1.test"], "buggy_code_start_loc": [1, 1, 1599, 330], "buggy_code_end_loc": [1859, 2, 1600, 330], "fixing_code_start_loc": [1, 1, 1599, 331], "fixing_code_end_loc": [1859, 2, 1602, 345], "type": "CWE-754", "message": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.", "other": {"cve": {"id": "CVE-2019-19646", "sourceIdentifier": "cve@mitre.org", "published": "2019-12-09T19:15:14.757", "lastModified": "2022-04-15T16:15:53.847", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns."}, {"lang": "es", "value": "El archivo pragma.c en SQLite versiones hasta 3.30.1, maneja inapropiadamente NOT NULL en un comando PRAGMA de integrity_check en determinados casos de columnas generadas."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-754"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:sqlite:sqlite:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.30.1", "matchCriteriaId": "9234ECCF-E771-485D-B89B-9F67AAB332A1"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:siemens:sinec_infrastructure_network_services:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.0.1.1", "matchCriteriaId": "B0F46497-4AB0-49A7-9453-CC26837BF253"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:tenable:tenable.sc:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.19.0", "matchCriteriaId": "41DBA7C7-8084-45F6-B59D-13A9022C34DF"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oracle:mysql_workbench:*:*:*:*:*:*:*:*", "versionEndIncluding": "8.0.19", "matchCriteriaId": "7B4DA1DD-9BC1-4D76-BB41-6E6D69838571"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netapp:cloud_backup:-:*:*:*:*:*:*:*", "matchCriteriaId": "5C2089EE-5D7F-47EC-8EA5-0F69790564C4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:netapp:ontap_select_deploy_administration_utility:-:*:*:*:*:*:*:*", "matchCriteriaId": "E7CF3019-975D-40BB-A8A4-894E62BD3797"}]}]}], "references": [{"url": "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/sqlite/sqlite/commit/926f796e8feec15f3836aa0a060ed906f8ae04d3", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20191223-0001/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/security-alerts/cpuapr2020.html", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.sqlite.org/", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://www.tenable.com/security/tns-2021-14", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd"}}