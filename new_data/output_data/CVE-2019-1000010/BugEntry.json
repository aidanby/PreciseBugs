{"buggy_code": ["<?php\n\n/*\n * Discover new hosts with ping\n *******************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"scan\");\n\n# validate subnetId and type\nif(!is_numeric($_POST['subnetId']))                        { $Result->show(\"danger\", \"Invalid subnet Id\", true); die(); }\nif(!preg_match('/[^A-Za-z0-9-]*$/', $_POST['type']))       { $Result->show(\"danger\", \"Invalid scan type\", true); die(); }\n\n\n# invoke CLI with threading support\n$cmd = $Scan->php_exec.\" \".dirname(__FILE__) . '/../../../functions/scan/subnet-scan-icmp-execute.php'.\" 'discovery' \".$_POST['subnetId'];\n\n# save result to $output\nexec($cmd, $output, $retval);\n\n# format result back to object\n$output = array_values(array_filter($output));\n$script_result = json_decode($output[0]);\n\n# if method is fping we need to check against existing hosts because it produces list of all ips !\nif ($User->settings->scanPingType==\"fping\" && isset($script_result->values->alive)) {\n\t// fetch all hosts to be scanned\n\t$to_scan_hosts = $Scan->prepare_addresses_to_scan (\"discovery\", $_POST['subnetId']);\n\t// loop check\n\tforeach($script_result->values->alive as $rk=>$result) {\n\t\tif(!in_array($Subnets->transform_address($result, \"decimal\"), $to_scan_hosts)) {\n\t\t\tunset($script_result->values->alive[$rk]);\n\t\t}\n\t}\n\t// null\n\tif (sizeof($script_result->values->alive)==0) {\n\t\tunset($script_result->values->alive);\n\t}\n\t//rekey\n\telse {\n\t\t$script_result->values->alive = array_values($script_result->values->alive);\n\t}\n}\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# json error\nif(json_last_error()!=0)\t\t\t\t\t\t{ $Result->show(\"danger\", \"Invalid JSON response\".\" - \".$Result->json_error_decode(json_last_error()), false); }\n# die if error\nelseif($retval!==0) \t\t\t\t\t\t\t{ $Result->show(\"danger\", \"Error executing scan! Error code - $retval\", false); }\n# error?\nelseif($script_result->status===1)\t\t\t\t{ $Result->show(\"danger\", $script_result->error, false); }\n# empty\nelseif(!isset($script_result->values->alive)) \t{ $Result->show(\"danger\", _(\"No alive host found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n    // fetch custom fields and check for required\n    $Tools = new Tools ($Database);\n    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');\n    if($required_fields!==false) {\n        foreach ($required_fields as $k=>$f) {\n            if ($f['Null']!=\"NO\") {\n                unset($required_fields[$k]);\n            }\n        }\n    }\n\n\t//form\n\tprint \"<form name='\".$_POST['type'].\"-form' class='\".$_POST['type'].\"-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n    // custom\n\tif (isset($required_fields)) {\n\t\tforeach ($required_fields as $field) {\n            print \"<th>\"._($field['name']).\"</th>\";\n\t\t}\n    }\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($script_result->values->alive as $ip) {\n\t\t//resolve?\n\t\t$hostname = $DNS->resolve_address($ip, false, true, $nsid);\n\n\t\tprint \"<tr class='result$m'>\";\n\t\t//ip\n\t\tprint \"<td>\".$Subnets->transform_to_dotted($ip).\"</td>\";\n\t\t//description\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n\t\tprint \"\t<input type='hidden' name='ip$m' value=\".$Subnets->transform_to_dotted($ip).\">\";\n\t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n\t\tprint \"</td>\";\n\t\t//hostname\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n\t\tprint \"</td>\";\n\t\t// custom\n\t\tif (isset($required_fields)) {\n    \t\tforeach ($required_fields as $field) {\n    \t\t\t# replace spaces with |\n    \t\t\t$field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n\n    \t\t\tprint '\t<td>'. \"\\n\";\n\n    \t\t\t//set type\n    \t\t\tif(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n    \t\t\t\t//parse values\n    \t\t\t\t$tmp = substr($field['type'], 0,3)==\"set\" ? explode(\",\", str_replace(array(\"set(\", \")\", \"'\"), \"\", $field['type'])) : explode(\",\", str_replace(array(\"enum(\", \")\", \"'\"), \"\", $field['type']));\n    \t\t\t\t//null\n    \t\t\t\tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n    \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n    \t\t\t\tforeach($tmp as $v) {\n    \t\t\t\t\tif($v==@$address[$field['name']])\t{ print \"<option value='$v' selected='selected'>$v</option>\"; }\n    \t\t\t\t\telse\t\t\t\t\t\t\t\t{ print \"<option value='$v'>$v</option>\"; }\n    \t\t\t\t}\n    \t\t\t\tprint \"</select>\";\n    \t\t\t}\n    \t\t\t//date and time picker\n    \t\t\telseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n    \t\t\t\t// just for first\n    \t\t\t\tif($timeP==0) {\n    \t\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css\">';\n    \t\t\t\t\tprint '<script type=\"text/javascript\" src=\"js/bootstrap-datetimepicker.min.js\"></script>';\n    \t\t\t\t\tprint '<script type=\"text/javascript\">';\n    \t\t\t\t\tprint '$(document).ready(function() {';\n    \t\t\t\t\t//date only\n    \t\t\t\t\tprint '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n    \t\t\t\t\t//date + time\n    \t\t\t\t\tprint '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n\n    \t\t\t\t\tprint '})';\n    \t\t\t\t\tprint '</script>';\n    \t\t\t\t}\n    \t\t\t\t$timeP++;\n\n    \t\t\t\t//set size\n    \t\t\t\tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n    \t\t\t\telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n    \t\t\t\t//field\n    \t\t\t\tif(!isset($address[$field['name']]))\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n    \t\t\t\telse\t\t\t\t\t\t\t\t\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" value=\"'. $address[$field['name']]. '\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n    \t\t\t}\n    \t\t\t//boolean\n    \t\t\telseif($field['type'] == \"tinyint(1)\") {\n    \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n    \t\t\t\t$tmp = array(0=>\"No\",1=>\"Yes\");\n    \t\t\t\t//null\n    \t\t\t\tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n    \t\t\t\tforeach($tmp as $k=>$v) {\n    \t\t\t\t\tif(strlen(@$address[$field['name']])==0 && $k==2)\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\t\t\t\telseif($k==@$address[$field['name']])\t\t\t\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t{ print \"<option value='$k'>\"._($v).\"</option>\"; }\n    \t\t\t\t}\n    \t\t\t\tprint \"</select>\";\n    \t\t\t}\n    \t\t\t//default - input field\n    \t\t\telse {\n    \t\t\t\tprint ' <input type=\"text\" class=\"ip_addr form-control input-sm\" name=\"'. $field['nameNew'].$m .'\" placeholder=\"'. $field['name'] .'\" value=\"'. @$address[$field['name']]. '\" size=\"30\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\";\n    \t\t\t}\n\n                print \" </td>\";\n    \t\t}\n\t\t}\n\t\t//remove button\n\t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n\t\tprint \"</tr>\";\n\n\t\t$m++;\n\t}\n\n    // calculate colspan\n\t$colspan = 4 + sizeof(@$required_fields);\n\n\t//result\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='\".$_POST['type'].\"' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n}\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'><span class='muted'>Scan method: \".$Scan->settings->scanPingType.\"</span></dov>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($output[0]); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with telnet scan\n *******************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# get ports\nif(strlen($_POST['port'])==0) \t  { $Result->show(\"danger\", _('Please enter ports to scan').'!', true); }\n\n//verify ports\n$pcheck = explode(\";\", str_replace(\",\",\";\",$_POST['port']));\nforeach($pcheck as $p) {\n\tif(!is_numeric($p)) {\n\t\t$Result->show(\"danger\", _(\"Invalid port\").\" ($p)\", true);\n\t}\n}\n$_POST['port'] = str_replace(\";\",\",\",$_POST['port']);\n\n// verify subnetId\nif(!is_numeric($_POST['subnetId'])) { $Result->show(\"danger\", _('Invalid subnet Identifier').'!', true); }\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"scan\");\n\n# invoke CLI with threading support\n$cmd = $Scan->php_exec.\" \".dirname(__FILE__) . \"/../../../functions/scan/subnet-scan-telnet-execute.php $_POST[subnetId] '$_POST[port]'\";\n\n# save result to $output\nexec($cmd, $output, $retval);\n\n# format result back to object\n$script_result = json_decode($output[0]);\n\n\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# json error\nif(json_last_error()!=0)\t\t\t\t\t\t{ $Result->show(\"danger\", \"Invalid JSON response\".\" - \".$Result->json_error_decode(json_last_error()), false); }\n# die if error\nelseif($retval!=0) \t\t\t\t\t\t\t\t{ $Result->show(\"danger\", \"Error executing scan! Error code - $retval\", false); }\n# error?\nelseif($script_result->status===1)\t\t\t\t{ $Result->show(\"danger\", $script_result->error, false); }\n# empty\nelseif(!isset($script_result->values->alive)) \t{ $Result->show(\"danger\", _(\"No alive host found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n\tprint \"<form name='\".$_POST['type'].\"-form' class='\".$_POST['type'].\"-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($script_result->values->alive as $ip=>$port) {\n\t\t//resolve?\n\t\t$hostname = $DNS->resolve_address ( $ip, null, true, $nsid);\n\n\t\tprint \"<tr class='result$m'>\";\n\t\t//ip\n\t\tprint \"<td>\".$Subnets->transform_to_dotted($ip).\"</td>\";\n\t\t//description\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n\t\tprint \"\t<input type='hidden' name='ip$m' value=\".$Subnets->transform_to_dotted($ip).\">\";\n\t\tprint \"</td>\";\n\t\t//hostname\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n\t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n\t\tprint \"</td>\";\n\t\t//remove button\n\t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n\t\tprint \"</tr>\";\n\n\t\t$m++;\n\t}\n\n\t//result\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='4'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='4'>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='\".$_POST['type'].\"' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n}\n\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'><span class='muted'>Scan method: telnet</span></dov>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($output[0]); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with snmp\n *******************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"scan\");\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# scan disabled\nif ($User->settings->enableSNMP!=\"1\")           { $Result->show(\"danger\", _(\"SNMP module disbled\"), true); }\n# subnet check\n$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\nif ($subnet===false)                            { $Result->show(\"danger\", _(\"Invalid subnet Id\"), true);  }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# set class\n$Snmp = new phpipamSNMP ();\n\n// fetch all existing hosts\n$all_subnet_hosts = (array) $Addresses->fetch_subnet_addresses ($_POST['subnetId']);\n// reindex\nif (sizeof($all_subnet_hosts)>0) {\n    foreach ($all_subnet_hosts as $h) {\n        $subnet_ip_addresses[] = $Subnets->transform_address($h->ip_addr, \"dotted\");\n    }\n}\n\n# set selected address fields array\n$selected_ip_fields = $User->settings->IPfilter;\n$selected_ip_fields = explode(\";\", $selected_ip_fields);\n\n// no errors\nerror_reporting(E_ERROR);\n\n# fetch devices that use get_routing_table query\n$devices_used = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_arp_table%\", \"id\", true, true);\n\n# filter out not in this section\nif ($devices_used !== false) {\n    foreach ($devices_used as $d) {\n        // get possible sections\n        $permitted_sections = explode(\";\", $d->sections);\n        // check\n        if (in_array($subnet->sectionId, $permitted_sections)) {\n            $permitted_devices[] = $d;\n        }\n    }\n}\n\n// if none set die\nif (!isset($permitted_devices))                 { $Result->show(\"danger\", _(\"No devices for SNMP ARP query available\"), true); }\n\n// ok, we have devices, connect to each device and do query\nforeach ($permitted_devices as $d) {\n    // init\n    $Snmp->set_snmp_device ($d);\n    // fetch arp table\n    try {\n        $res = $Snmp->get_query(\"get_arp_table\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_arp_table\"] = $res;\n           // check\n           foreach ($res as $kr=>$r) {\n               // if is inside subnet\n               if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===false) { }\n               // check if host already exists, than remove it\n               elseif (in_array($r['ip'], $subnet_ip_addresses)) { }\n               // save\n               else {\n                   $found[$d->id][] = $r;\n               }\n           }\n        }\n        // get interfaces\n        $res = $Snmp->get_query(\"get_interfaces_ip\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_interfaces_ip\"] = $res;\n           // check\n           foreach ($res as $kr=>$r) {\n               // if is inside subnet\n               if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===false) { }\n               // check if host already exists, than remove it\n               elseif (in_array($r['ip'], $subnet_ip_addresses)) { }\n               // save\n               else {\n                   $found[$d->id][] = $r;\n               }\n           }\n        }\n    } catch (Exception $e) {\n       // save for debug\n       $debug[$d->hostname]['get_arp_table'] = $res;\n       $errors[] = $e->getMessage();\n\t}\n}\n\n# none and errors\nif(sizeof($found)==0 && isset($errors))          {\n    $Result->show(\"info\", _(\"No new hosts found\"), false);\n    $Result->show(\"warning\", implode(\"<hr>\", $errors), false);\n}\n# none\nelseif(sizeof($found)==0) \t                     { $Result->show(\"info\", _(\"No new hosts found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n    // fetch custom fields and check for required\n    $Tools = new Tools ($Database);\n    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');\n    if($required_fields!==false) {\n        foreach ($required_fields as $k=>$f) {\n            if ($f['Null']!=\"NO\") {\n                unset($required_fields[$k]);\n            }\n        }\n    }\n\n    // calculate colspan\n\t$colspan = 5 + sizeof(@$required_fields);\n\t// port\n\tif(in_array('port', $selected_ip_fields)) { $colspan++; }\n\n\n\t//form\n\tprint \"<form name='scan-snmp-arp-form' class='scan-snmp-arp-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"MAC\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n\t// port\n\tif(in_array('port', $selected_ip_fields)) {\n\tprint \"\t<th>\"._('Port').\"</th>\";\n\t}\n    // custom\n\tif (isset($required_fields)) {\n\t\tforeach ($required_fields as $field) {\n            print \"<th>\"._($field['name']).\"</th>\";\n\t\t}\n    }\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($found as $deviceid=>$device) {\n    \tforeach ($device as $ip ) {\n            print \"<tr class='result$m'>\";\n    \t\t//resolve?\n    \t\t$hostname = $DNS->resolve_address($ip['ip'], false, true, $nsid);\n\n    \t\t//ip\n    \t\tprint \"<td>$ip[ip]</td>\";\n    \t\t//description, ip, device\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n    \t\tprint \"\t<input type='hidden' name='ip$m' value='$ip[ip]'>\";\n    \t\tprint \"\t<input type='hidden' name='device$m' value='$deviceid'>\";\n    \t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n    \t\tprint \"</td>\";\n    \t\t// mac\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='mac$m' value='$ip[mac]'>\";\n    \t\tprint \"</td>\";\n    \t\t//hostname\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t// port\n    \t\tif(in_array('port', $selected_ip_fields)) {\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='port$m' value='\".@$ip['port'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t}\n    \t\t// custom\n    \t\tif (isset($required_fields)) {\n        \t\tforeach ($required_fields as $field) {\n        \t\t\t# replace spaces with |\n        \t\t\t$field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n\n        \t\t\tprint '\t<td>'. \"\\n\";\n\n        \t\t\t//set type\n        \t\t\tif(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n        \t\t\t\t//parse values\n        \t\t\t\t$tmp = substr($field['type'], 0,3)==\"set\" ? explode(\",\", str_replace(array(\"set(\", \")\", \"'\"), \"\", $field['type'])) : explode(\",\", str_replace(array(\"enum(\", \")\", \"'\"), \"\", $field['type']));\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\tforeach($tmp as $v) {\n        \t\t\t\t\tif($v==@$address[$field['name']])\t{ print \"<option value='$v' selected='selected'>$v</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t{ print \"<option value='$v'>$v</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//date and time picker\n        \t\t\telseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n        \t\t\t\t// just for first\n        \t\t\t\tif($timeP==0) {\n        \t\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css\">';\n        \t\t\t\t\tprint '<script type=\"text/javascript\" src=\"js/bootstrap-datetimepicker.min.js\"></script>';\n        \t\t\t\t\tprint '<script type=\"text/javascript\">';\n        \t\t\t\t\tprint '$(document).ready(function() {';\n        \t\t\t\t\t//date only\n        \t\t\t\t\tprint '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n        \t\t\t\t\t//date + time\n        \t\t\t\t\tprint '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n\n        \t\t\t\t\tprint '})';\n        \t\t\t\t\tprint '</script>';\n        \t\t\t\t}\n        \t\t\t\t$timeP++;\n\n        \t\t\t\t//set size\n        \t\t\t\tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n        \t\t\t\t//field\n        \t\t\t\tif(!isset($address[$field['name']]))\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t\t\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" value=\"'. $address[$field['name']]. '\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t}\n        \t\t\t//boolean\n        \t\t\telseif($field['type'] == \"tinyint(1)\") {\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\t$tmp = array(0=>\"No\",1=>\"Yes\");\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n        \t\t\t\tforeach($tmp as $k=>$v) {\n        \t\t\t\t\tif(strlen(@$address[$field['name']])==0 && $k==2)\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telseif($k==@$address[$field['name']])\t\t\t\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t{ print \"<option value='$k'>\"._($v).\"</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//default - input field\n        \t\t\telse {\n        \t\t\t\tprint ' <input type=\"text\" class=\"ip_addr form-control input-sm\" name=\"'. $field['nameNew'].$m .'\" placeholder=\"'. $field['name'] .'\" value=\"'. @$address[$field['name']]. '\" size=\"30\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\";\n        \t\t\t}\n\n                    print \" </td>\";\n        \t\t}\n    \t\t}\n    \t\t//remove button\n    \t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n    \t\tprint \"</tr>\";\n\n    \t\t$m++;\n\t\t}\n\t}\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='scan-snmp-arp' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n\n    // print errors\n    if (isset($errors)) {\n        print \"<hr>\";\n        foreach ($errors as $e) {\n            print $Result->show (\"warning\", $e, false);\n        }\n    }\n}\n\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'>\";\nprint \" <span class='muted'>\";\nprint \" Scan method: SNMP ARP<hr>\";\nprint \" Scanned devices: <br>\";\nforeach ($debug as $k=>$d) {\n    print \"&middot; \".$k.\"<br>\";\n}\nprint \"</span>\";\nprint \"</div>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($debug); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with snmp\n *******************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"scan\");\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n\n# scan disabled\nif ($User->settings->enableSNMP!=\"1\")           { $Result->show(\"danger\", _(\"SNMP module disbled\"), true); }\n# subnet check\n$subnet = $Subnets->fetch_object (\"subnets\", \"id\", $_POST['subnetId']);\nif ($subnet===false)                            { $Result->show(\"danger\", _(\"Invalid subnet Id\"), true);  }\n\n# fetch vlan\n$vlan = $Tools->fetch_object (\"vlans\", \"vlanId\", $subnet->vlanId);\nif ($vlan===false)                              { $Result->show(\"danger\", _(\"Subnet must have VLAN assigned for MAc address query\"), true);  }\n\n# set class\n$Snmp = new phpipamSNMP ();\n\n// fetch all existing hosts\n$all_subnet_hosts = (array) $Addresses->fetch_subnet_addresses ($subnet->id);\n// reindex\nif (sizeof($all_subnet_hosts)>0) {\n    foreach ($all_subnet_hosts as $h) {\n        $subnet_ip_addresses[] = $Subnets->transform_address($h->ip_addr, \"dotted\");\n    }\n}\n\n# set selected address fields array\n$selected_ip_fields = $User->settings->IPfilter;\n$selected_ip_fields = explode(\";\", $selected_ip_fields);\n\n// no errors\nerror_reporting(E_ERROR);\n\n# fetch devices that use get_routing_table query\n$devices_used_arp = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_arp_table%\", \"id\", true, true);\n$devices_used_mac = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_mac_table%\", \"id\", true, true);\n\n# filter out devices not in this section - ARP\nif ($devices_used_arp !== false) {\n    foreach ($devices_used_arp as $d) {\n        // get possible sections\n        $permitted_sections = explode(\";\", $d->sections);\n        // check\n        if (in_array($subnet->sectionId, $permitted_sections)) {\n            $permitted_devices_arp[] = $d;\n        }\n    }\n}\n# filter out not in this section\nif ($devices_used_mac !== false) {\n    foreach ($devices_used_mac as $d) {\n        // get possible sections\n        $permitted_sections = explode(\";\", $d->sections);\n        // check\n        if (in_array($subnet->sectionId, $permitted_sections)) {\n            $permitted_devices_mac[] = $d;\n        }\n    }\n}\n\n// if none set die\nif (!isset($permitted_devices_arp))                 { $Result->show(\"danger\", _(\"No devices for SNMP ARP query available\"), true); }\nif (!isset($permitted_devices_mac))                 { $Result->show(\"danger\", _(\"No devices for SNMP MAC address query available\"), true); }\n\n\n// first we need ARP table to fetchIP <> MAC mappings\nforeach ($permitted_devices_arp as $d) {\n    // init\n    $Snmp->set_snmp_device ($d);\n    // fetch arp table\n    try {\n        $res = $Snmp->get_query(\"get_arp_table\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_arp_table\"] = $res;\n           // check\n           foreach ($res as $kr=>$r) {\n               // if is inside subnet\n               if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===false) { }\n               // check if host already exists, than remove it\n               elseif (in_array($r['ip'], $subnet_ip_addresses)) { }\n               // save\n               else {\n                   $found_arp[] = $r;\n               }\n           }\n        }\n    } catch (Exception $e) {\n       // save for debug\n       $debug[$d->hostname]['get_arp_table'] = $res;\n       $errors[] = $e->getMessage();\n\t}\n}\n\n// if none found via ARP die\nif (!isset($found_arp))                         { $Result->show(\"danger\", _(\"No new hosts found from ARP scan, MAC address scan will not be performed\"), true); }\n\n\n// ok, we have devices, connect to each device and do query\nforeach ($permitted_devices_mac as $d) {\n    // init\n    $Snmp->set_snmp_device ($d, $vlan->number);\n    // fetch mac table\n    try {\n        $res = $Snmp->get_query(\"get_mac_table\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_mac_table\"] = $res;\n           // save found\n           foreach ($res as $r) {\n               $r['device'] = $d->id;\n               $r['device_name'] = $d->hostname;\n               $found_mac[] = $r;\n           }\n        }\n    } catch (Exception $e) {\n       // save for debug\n       $debug[$d->hostname]['get_mac_table'] = $res;\n       $errors[] = $e->getMessage();\n\t}\n}\n\n\n// if none found via ARP die\nif (!isset($found_mac))                         { $Result->show(\"danger\", _(\"No MAC address found via MAC address scan\"), true); }\n\n\n\n// now check for match\n$k=0;\nforeach ($found_mac as $mac) {\n    foreach ($found_arp as $arp) {\n        // check for match\n        if ($mac['mac']==$arp['mac']) {\n            $found[$k]['ip']     = $arp['ip'];\n            $found[$k]['mac']    = $mac['mac'];\n            $found[$k]['port']   = $mac['port'];\n            $found[$k]['device'] = $mac['device'];\n            $found[$k]['device_name'] = $mac['device_name'];\n            $found[$k]['port_alias'] = $mac['port_alias'];\n            // next index\n            $k++;\n        }\n    }\n}\n\n// remove duplicates\nforeach ($found as $k1=>$f) {\n    foreach ($found as $k2=>$f1) {\n        if ($k1!=$k2) {\n            if ($f['mac']==$f1['mac'] && $f['device']==$f1['device']) {\n                unset($found[$k1]);\n            }\n        }\n    }\n\n    // remove Port-channel\n    if(strpos(strtolower($f['port']), \"port-channel\")!==false) {\n        unset($found[$k1]);\n    }\n}\n\n\n\n# none and errors\nif(sizeof($found)==0 && isset($errors))          {\n    $Result->show(\"info\", _(\"No new hosts found\"), false);\n    $Result->show(\"warning\", implode(\"<hr>\", $errors), false);\n}\n# none\nelseif(sizeof($found)==0) \t                     { $Result->show(\"info\", _(\"No new hosts found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n    // fetch custom fields and check for required\n    $Tools = new Tools ($Database);\n    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');\n    if($required_fields!==false) {\n        foreach ($required_fields as $k=>$f) {\n            if ($f['Null']!=\"NO\") {\n                unset($required_fields[$k]);\n            }\n        }\n    }\n\n    // calculate colspan\n\t$colspan = 7 + sizeof(@$required_fields);\n\t// port\n\tif(in_array('port', $selected_ip_fields)) { $colspan++; }\n\n    /**\n     * Sorts array by ip\n     */\n    function sort_array($a, $b) {\n        // same\n        if ($a['ip']==$b['ip'])     { return 0; }\n        elseif ($a['ip']>$b['ip'])  { return 1; }\n        else                        { return -1; }\n    }\n    // sort ip addresses\n    usort($found, \"sort_array\");\n\n\n\t//form\n\tprint \"<form name='scan-snmp-mac-form' class='scan-snmp-mac-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"MAC\").\"</th>\";\n\tprint \"\t<th>\"._(\"Device\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n\tprint \"\t<th>\"._('Port').\"</th>\";\n\tprint \" <th></th>\";\n    // custom\n\tif (isset($required_fields)) {\n\t\tforeach ($required_fields as $field) {\n            print \"<th>\"._($field['name']).\"</th>\";\n\t\t}\n    }\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($found as $k=>$ip) {\n            print \"<tr class='result$m'>\";\n    \t\t//resolve?\n    \t\t$hostname = $DNS->resolve_address($ip['ip'], false, true, $nsid);\n\n    \t\t//ip - done print same !\n    \t\tif ($k!=0) {\n        \t\tif ($found[$k]['ip'] != $found[$k-1]['ip']) {\n        \t\t    print \"<td><span class='ip-address'>$ip[ip]</span></td>\";\n        \t\t}\n        \t\telse {\n            \t\tprint \"<td><span class='ip-address hidden'>$ip[ip]</span></td>\";\n        \t\t}\n    \t\t}\n    \t\telse {\n        \t\tprint \"<td><span class='ip-address'>$ip[ip]</span></td>\";\n            }\n    \t\t//description, ip, device\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n    \t\tprint \"\t<input type='hidden' name='ip$m' value='$ip[ip]'>\";\n    \t\tprint \"\t<input type='hidden' name='device$m' value='$ip[device]'>\";\n    \t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n    \t\tprint \"</td>\";\n    \t\t// mac\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='mac$m' value='$ip[mac]'>\";\n    \t\tprint \"</td>\";\n    \t\t// device\n    \t\tprint \"<td>$ip[device_name]</td>\";\n    \t\t//hostname\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t// port\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='port$m' value='\".@$ip['port'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t// info\n    \t\tprint \"<td>\";\n    \t\tif(strlen(@$ip['port_alias'])>0)\n    \t\tprint \"\t<i class='fa fa-info-circle' rel='tooltip' title='Interface description: $ip[port_alias]'></i>\";\n    \t\tprint \"</td>\";\n    \t\t// custom\n    \t\tif (isset($required_fields)) {\n        \t\tforeach ($required_fields as $field) {\n        \t\t\t# replace spaces with |\n        \t\t\t$field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n\n        \t\t\tprint '\t<td>'. \"\\n\";\n\n        \t\t\t//set type\n        \t\t\tif(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n        \t\t\t\t//parse values\n        \t\t\t\t$tmp = substr($field['type'], 0,3)==\"set\" ? explode(\",\", str_replace(array(\"set(\", \")\", \"'\"), \"\", $field['type'])) : explode(\",\", str_replace(array(\"enum(\", \")\", \"'\"), \"\", $field['type']));\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\tforeach($tmp as $v) {\n        \t\t\t\t\tif($v==@$address[$field['name']])\t{ print \"<option value='$v' selected='selected'>$v</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t{ print \"<option value='$v'>$v</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//date and time picker\n        \t\t\telseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n        \t\t\t\t// just for first\n        \t\t\t\tif($timeP==0) {\n        \t\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css\">';\n        \t\t\t\t\tprint '<script type=\"text/javascript\" src=\"js/bootstrap-datetimepicker.min.js\"></script>';\n        \t\t\t\t\tprint '<script type=\"text/javascript\">';\n        \t\t\t\t\tprint '$(document).ready(function() {';\n        \t\t\t\t\t//date only\n        \t\t\t\t\tprint '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n        \t\t\t\t\t//date + time\n        \t\t\t\t\tprint '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n\n        \t\t\t\t\tprint '})';\n        \t\t\t\t\tprint '</script>';\n        \t\t\t\t}\n        \t\t\t\t$timeP++;\n\n        \t\t\t\t//set size\n        \t\t\t\tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n        \t\t\t\t//field\n        \t\t\t\tif(!isset($address[$field['name']]))\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t\t\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" value=\"'. $address[$field['name']]. '\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t}\n        \t\t\t//boolean\n        \t\t\telseif($field['type'] == \"tinyint(1)\") {\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\t$tmp = array(0=>\"No\",1=>\"Yes\");\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n        \t\t\t\tforeach($tmp as $k=>$v) {\n        \t\t\t\t\tif(strlen(@$address[$field['name']])==0 && $k==2)\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telseif($k==@$address[$field['name']])\t\t\t\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t{ print \"<option value='$k'>\"._($v).\"</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//default - input field\n        \t\t\telse {\n        \t\t\t\tprint ' <input type=\"text\" class=\"ip_addr form-control input-sm\" name=\"'. $field['nameNew'].$m .'\" placeholder=\"'. $field['name'] .'\" value=\"'. @$address[$field['name']]. '\" size=\"30\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\";\n        \t\t\t}\n\n                    print \" </td>\";\n        \t\t}\n    \t\t}\n    \t\t//remove button\n    \t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove resultRemoveMac' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n    \t\tprint \"</tr>\";\n\n    \t\t$m++;\n\t}\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='scan-snmp-mac' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n\n    // print errors\n    if (isset($errors)) {\n        print \"<hr>\";\n        foreach ($errors as $e) {\n            print $Result->show (\"warning\", $e, false);\n        }\n    }\n}\n\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'>\";\nprint \" <span class='muted'>\";\nprint \" Scan method: SNMP ARP<hr>\";\nprint \" Scanned devices: <br>\";\nforeach ($debug as $k=>$d) {\n    print \"&middot; \".$k.\"<br>\";\n}\nprint \"</span>\";\nprint \"</div>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($debug); print \"</pre>\"; }\n\n?>", "<?php\n\n/*\n * Update alive status of all hosts in subnet\n ***************************/\n\n# validate subnetId and type\nif(!is_numeric($_POST['subnetId']))                        { $Result->show(\"danger\", \"Invalid subnet Id\", true); die(); }\n\n# invoke CLI with threading support\n$cmd = $Scan->php_exec.\" \".dirname(__FILE__) . '/../../../functions/scan/subnet-scan-icmp-execute.php'.\" 'update' \".$_POST['subnetId'];\n\n# save result to $output\nexec($cmd, $output, $retval);\n\n# format result back to object\n$output = array_values(array_filter($output));\n$script_result = json_decode($output[0]);\n\n# set blank values\nif (!isset($script_result->values->alive) || is_null($script_result->values->alive) )\t{ $script_result->values->alive = array(); }\nif (!isset($script_result->values->dead)  || is_null($script_result->values->dead) )\t{ $script_result->values->dead = array(); }\n\n# set address types array\n$Tools->get_addresses_types ();\n\n# if method is fping we need to check against existing hosts because it produces list of all ips !\nif ($User->settings->scanPingType==\"fping\" && isset($script_result->values->alive)) {\n\t// fetch all hosts to be scanned\n\t$all_subnet_hosts = $Scan->prepare_addresses_to_scan (\"update\", $_POST['subnetId']);\n\t// loop check\n\tforeach ($all_subnet_hosts as $k=>$h) {\n\t\t// alive ?\n\t\tif (sizeof($script_result->values->alive)>0) {\n\t\t\tif (!in_array($h, $script_result->values->alive)) {\n\t\t\t\t$script_result->values->dead[] = $h;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$script_result->values->dead = $all_subnet_hosts;\n\t\t}\n\t}\n\n\t// null\n\tif (sizeof($script_result->values->dead)==0)  {\n\t\tunset($script_result->values->dead); }\n\telse\t{\n\t\t$script_result->values->dead = array_values($script_result->values->dead);\n\t}\n\n\tif (sizeof($script_result->values->alive)==0) {\n\t\tunset($script_result->values->alive);\n\t}\n\t//rekey\n\telse {\n\t\t$script_result->values->alive = array_values($script_result->values->alive);\n\t}\n}\n\n# recode to same array with statuses\n$m=0;\nif($script_result->status==0) {\n\t//loop types (dead, alive, error)\n\tif(sizeof($script_result->values)>0) {\n\t\tforeach($script_result->values as $k=>$r) {\n\t\t\t//loop addresses in type\n\t\t\tforeach($r as $ip) {\n\t\t\t\t# get details\n\t\t\t\t$ipdet = (array) $Addresses->fetch_address_multiple_criteria ($ip, $_POST['subnetId']);\n\n\t\t\t\t# format output\n\t\t\t\t$res[$ip]['id']          = $ipdet['id'];;\n\t\t\t\t$res[$ip]['ip_addr']     = $ip;\n\t\t\t\t$res[$ip]['description'] = $ipdet['description'];\n\t\t\t\t$res[$ip]['hostname']    = $ipdet['hostname'];\n\t\t\t\t$res[$ip]['state']       = $ipdet['state'];\n\t\t\t\t$res[$ip]['lastSeen']    = $ipdet['lastSeen'];\n\n\t\t\t\t//online\n\t\t\t\tif($k==\"alive\")\t{\n\t\t\t\t\t$res[$ip]['status'] = \"Online\";\n\t\t\t\t\t$res[$ip]['code']=0;\n\t\t\t\t\t//update alive time\n\t\t\t\t\tif(isset($ipdet['id'])) {\n\t\t\t\t\t\t$Scan->ping_update_lastseen($ipdet['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//offline\n\t\t\t\telseif($k==\"dead\")\t{\n\t\t\t\t\t$res[$ip]['status'] = \"Offline\";\n\t\t\t\t\t$res[$ip]['code']=1;\n\t\t\t\t}\n\t\t\t\t//excluded\n\t\t\t\telseif($k==\"excluded\")\t{\n\t\t\t\t\t$res[$ip]['status'] = \"Excluded form check\";\n\t\t\t\t\t$res[$ip]['code']=100;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$res[$ip]['status'] = \"Error\";\n\t\t\t\t\t$res[$ip]['code']=2;\n\t\t\t\t}\n\t\t\t\t$m++;\n\t\t\t}\n\t\t}\n\t}\n}\n?>\n\n\n<h5><?php print _('Scan results');?>:</h5>\n<hr>\n\n<?php\n# json error\nif(json_last_error()!=0)\t\t\t\t\t\t{ $Result->show(\"danger\", \"Invalid JSON response\".\" - \".$Result->json_error_decode(json_last_error()), false); }\n# die if error\nelseif($retval!=0) \t\t\t\t\t\t\t\t{ $Result->show(\"danger\", \"Error executing scan! Error code - $retval\", false); }\n# error?\nelseif($script_result->status===1)\t\t\t\t{ $Result->show(\"danger\", $script_result->error, false); }\n# empty\nelseif(!isset($script_result->values)) \t\t\t{ $Result->show(\"info\", _(\"Subnet is empty\").\"!\", false); }\n# no ip addresses - error in script\nelseif(!isset($res)) \t\t\t\t\t\t\t{ $Result->show(\"info\", _(\"Error\").\"!\", false); }\n# ok\nelse {\n\t# order by IP address\n\tksort($res);\n\n\t//table\n\tprint \"<table class='table table-condensed table-top'>\";\n\n\t//headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('IP').\"</th>\";\n\tprint \"\t<th>\"._('Description').\"</th>\";\n\tprint \"\t<th>\"._('status').\"</th>\";\n\tprint \"\t<th>\"._('hostname').\"</th>\";\n\tprint \"</tr>\";\n\n\t//loop\n\tforeach($res as $r) {\n\t\t//set class\n\t\tif($r['code']==0)\t\t{ $class='success'; }\n\t\telseif($r['code']==100)\t{ $class='warning'; }\n\t\telse\t\t\t\t\t{ $class='danger'; }\n\n\t\tprint \"<tr class='$class'>\";\n\t\tprint \"\t<td>\".$Subnets->transform_to_dotted($r['ip_addr']).\"</td>\";\n\t\tprint \"\t<td>\".$r['description'].\"</td>\";\n\t\tprint \"\t<td>\"._(\"$r[status]\").\"</td>\";\n\t\tprint \"\t<td>\".$r['hostname'].\"</td>\";\n\n\t\tprint \"</tr>\";\n\n\t\t# update ipTag\n\t\tif ($User->settings->updateTags==1 && $Tools->address_types[$r['state']]['updateTag']==1) {\n\t\t\t// online\n\t\t\tif ($r['code']==0 && $r['state']!=2) {\n\t\t\t\t$Scan->update_address_tag ($r['id'], 2, $r['state'], date(\"Y-m-d H:i:s\"));\n\t\t\t}\n\t\t\t// offline\n\t\t\telseif( ($r['code']==1 || $r['code']==2) && $r['state']!=1) {\n\t\t\t\t$Scan->update_address_tag ($r['id'], 1, $r['state'], $r['lastSeen']);\n\t\t\t}\n\t\t}\n\n\t}\n\tprint \"</table>\";\n}\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'><span class='muted'>Scan method: \".$Scan->settings->scanPingType.\"</span></dov>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($output[0]); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with snmp\n *******************************/\n\n# verify that user is logged in\n$User->check_user_session();\n\n# scan disabled\nif ($User->settings->enableSNMP!=\"1\")           { $Result->show(\"danger\", \"SNMP module disbled\", true); }\n# subnet check\n$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\nif ($subnet===false)                            { $Result->show(\"danger\", \"Invalid subnet Id\", true);  }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# set class\n$Snmp = new phpipamSNMP ();\n\n// no errors\nerror_reporting(E_ERROR);\n\n// fetch all hosts to be scanned\n$all_subnet_hosts = (array) $Addresses->fetch_subnet_addresses ($_POST['subnetId']);\n\n// execute only if some exist\nif (sizeof($all_subnet_hosts)>0) {\n    // set default statuses\n    foreach ($all_subnet_hosts as $h) {\n        $result[$h->ip_addr] = (array) $h;\n        $result[$h->ip_addr]['code'] = 1;\n        $result[$h->ip_addr]['status'] = \"Offline\";\n    }\n\n    # fetch devices that use get_routing_table query\n    $devices_used = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_arp_table%\", \"id\", true, true);\n\n    # filter out not in this section\n    if ($devices_used !== false) {\n        foreach ($devices_used as $d) {\n            // get possible sections\n            $permitted_sections = explode(\";\", $d->sections);\n            // check\n            if (in_array($subnet->sectionId, $permitted_sections)) {\n                $permitted_devices[] = $d;\n            }\n        }\n    }\n\n    // if none set die\n    if (!isset($permitted_devices))                 { $Result->show(\"danger\", \"No devices for SNMP ARP query available\", true); }\n\n    // ok, we have devices, connect to each device and do query\n    foreach ($permitted_devices as $d) {\n        // init\n        $Snmp->set_snmp_device ($d);\n        // execute\n        try {\n           $res = $Snmp->get_query(\"get_arp_table\");\n           // remove those not in subnet\n           if (sizeof($res)>0) {\n               // save for debug\n               $debug[$d->hostname][\"get_arp_table\"] = $res;\n               // check\n               foreach ($res as $kr=>$r) {\n                   if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===true) {\n                       // must be existing\n                       if (array_key_exists($Subnets->transform_address($r['ip'], \"decimal\"), $result)) {\n                           // add to alive\n                           $result[$Subnets->transform_address($r['ip'], \"decimal\")]['code'] = 0;\n                           $result[$Subnets->transform_address($r['ip'], \"decimal\")]['status'] = \"Online\";\n                           // update alive time\n                           @$Scan->ping_update_lastseen($result[$Subnets->transform_address($r['ip'], \"decimal\")]['id']);\n                       }\n                   }\n               }\n           }\n           $found[$d->id] = $res;\n\n         } catch (Exception $e) {\n    \t\t$Result->show(\"danger\", \"<pre>\"._(\"Error\").\": \".$e.\"</pre>\", false); ;\n    \t\tdie();\n    \t}\n    }\n}\n?>\n\n\n\n\n<h5><?php print _('Scan results');?>:</h5>\n<hr>\n\n<?php\n# empty\nif(sizeof($all_subnet_hosts)==0) \t\t\t{ $Result->show(\"info\", _(\"Subnet is empty\").\"!\", false); }\n# ok\nelse {\n\t//table\n\tprint \"<table class='table table-condensed table-top'>\";\n\n\t//headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('IP').\"</th>\";\n\tprint \"\t<th>\"._('Description').\"</th>\";\n\tprint \"\t<th>\"._('status').\"</th>\";\n\tprint \"\t<th>\"._('hostname').\"</th>\";\n\tprint \"</tr>\";\n\n\t//loop\n\tforeach($result as $r) {\n\t\t//set class\n\t\tif($r['code']==0)\t\t{ $class='success'; }\n\t\telseif($r['code']==100)\t{ $class='warning'; }\n\t\telse\t\t\t\t\t{ $class='danger'; }\n\n\t\tprint \"<tr class='$class'>\";\n\t\tprint \"\t<td>\".$Subnets->transform_to_dotted($r['ip_addr']).\"</td>\";\n\t\tprint \"\t<td>\".$r['description'].\"</td>\";\n\t\tprint \"\t<td>\"._(\"$r[status]\").\"</td>\";\n\t\tprint \"\t<td>\".$r['hostname'].\"</td>\";\n\n\t\tprint \"</tr>\";\n\t}\n\tprint \"</table>\";\n}\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'>\";\nprint \" <span class='muted'>\";\nprint \" Scan method: SNMP ARP<hr>\";\nprint \" Scanned devices: <br>\";\nforeach ($debug as $k=>$d) {\n    print \"&middot; \".$k.\"<br>\";\n}\nprint \"</span>\";\nprint \"</div>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($debug); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with ping\n *******************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Tools\t \t= new Tools ($Database);\n$Admin\t \t= new Admin ($Database, false);\n$Sections\t= new Sections ($Database);\n$Subnets\t= new Subnets ($Database);\n$Addresses\t= new Addresses ($Database);\n$Scan\t \t= new Scan ($Database, $User->settings);\n$DNS\t \t= new DNS ($Database, $User->settings);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n# check maintaneance mode\n$User->check_maintaneance_mode ();\n\n# subnet Id must be a integer\nif(!is_numeric($_POST['subnetId']))\t{ $Result->show(\"danger\", _(\"Invalid ID\"), true); }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# fetch subnet details\n$subnet = $Subnets->fetch_subnet (null, $_POST['subnetId']);\n$subnet!==false ? : $Result->show(\"danger\", _(\"Invalid ID\"), true, true);\n\n# fake sectionId for snmp-route-all scan\n$_POST['sectionId'] = $subnet->sectionId;\n\n# full\nif ($_POST['type']!=\"update-icmp\" && $subnet->isFull==1)                { $Result->show(\"warning\", _(\"Cannot scan as subnet is market as used\"), true, true); }\n\n# verify php path\nif(!file_exists($Scan->php_exec))\t{ $Result->show(\"danger\", _(\"Invalid php path\"), true, true); }\n\n# scan\nswitch ($_POST['type']) {\n    case \"scan-icmp\":\n        include(\"subnet-scan-execute-scan-icmp.php\");\n        break;\n    case \"scan-telnet\":\n        include(\"subnet-scan-execute-scan-telnet.php\");\n        break;\n    case \"snmp-arp\":\n        include(\"subnet-scan-execute-snmp-arp.php\");\n        break;\n    case \"snmp-mac\":\n        include(\"subnet-scan-execute-snmp-mac.php\");\n        break;\n    case \"snmp-route-all\":\n        include(\"subnet-scan-execute-snmp-route-all.php\");\n        break;\n# discovery\n    case \"update-icmp\":\n        include(\"subnet-scan-execute-update-icmp.php\");\n        break;\n    case \"update-snmp-arp\":\n        include(\"subnet-scan-execute-update-snmp-arp.php\");\n        break;\n    default:\n        $Result->show(\"danger\", _(\"Invalid scan type\"), true);\n}\n", "<?php\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Admin\t \t= new Admin ($Database, false);\n$Subnets\t= new Subnets ($Database);\n$Sections\t= new Sections ($Database);\n$Addresses\t= new Addresses ($Database);\n$Tools      = new Tools ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n# validate csrf cookie\n$User->Crypto->csrf_cookie (\"validate\", \"scan\", $_POST['csrf_cookie']) === false ? $Result->show(\"danger\", _(\"Invalid CSRF cookie\"), true) : \"\";\n\n\n$type = $_POST['type'];\n\nswitch ($type) {\n    case \"scan-icmp\":\n    case \"scan-telnet\":\n    case \"snmp-arp\":\n    case \"snmp-mac\":\n    case \"snmp-route-all\":\n        $subnet_scan_result_included = true;\n        include(\"subnet-scan-result-$type.php\");\n        break;\n    default:\n        $Result->show(\"danger\", _(\"Invalid scan type\"), true);\n}", "<?php\n\n/*\n * Scan subnet for new hosts\n ***************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Admin\t \t= new Admin ($Database, false);\n$Subnets\t= new Subnets ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n\n# ID must be numeric\nif(!is_numeric($_POST['subnetId']))\t\t\t\t\t\t\t\t\t\t{ $Result->show(\"danger\", _(\"Invalid ID\"), true, true); }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# fetch subnet details\n$subnet = $Subnets->fetch_subnet (null, $_POST['subnetId']);\n$subnet!==false ? : $Result->show(\"danger\", _(\"Invalid ID\"), true, true);\n\n# IPv6 scanning is not supported\nif ( $Subnets->identify_address($subnet->subnet) == \"IPv6\") \t\t\t{ $Result->show(\"danger\", _('IPv6 scanning is not supported').'!', true, true); }\n\n# fix description\n$subnet->description = strlen($subnet->description)>0 ? \"(\".$subnet->description.\")\" : \"\";\n?>\n\n<!-- header -->\n<div class=\"pHeader\"><?php print _('Scan subnet'); ?></div>\n\n\n<!-- content -->\n<div class=\"pContent\">\n\t<table class=\"table table-noborder table-condensed table-scan\">\n    <!-- subnet -->\n    <tr>\n        <td class=\"middle\"><?php print _('Subnet'); ?></td>\n        <td><?php print $Subnets->transform_to_dotted($subnet->subnet).\"/$subnet->mask $subnet->description\"; ?></td>\n    </tr>\n    <!-- Scan type -->\n    <tr>\n    \t<td><?php print _('Select Scan type'); ?></td>\n    \t<td>\n    \t\t<select name=\"type\" id=\"type\" class=\"form-control input-sm input-w-auto\">\n    \t\t\t<!-- Discovery scans -->\n\t    \t\t<optgroup label=\"<?php print _('Discovery scans');?>\">\n\t\t    \t\t<option value=\"scan-icmp\"   <?php if(@$_COOKIE['scantype']==\"scan-icmp\") print \"selected\"; ?>><?php print _('Discovery scans');?>: Ping <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"scan-telnet\" <?php if(@$_COOKIE['scantype']==\"scan-telnet\") print \"selected\"; ?>><?php print _('Discovery scans');?>: Telnet <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"snmp-route-all\"    <?php if(@$_COOKIE['scantype']==\"snmp-route-all\") print \"selected\"; ?>><?php print _('Discovery scans');?>: SNMP nested subnets <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"snmp-arp\"    <?php if(@$_COOKIE['scantype']==\"snmp-arp\") print \"selected\"; ?>><?php print _('Discovery scans');?>: SNMP ARP <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"snmp-mac\"    <?php if(@$_COOKIE['scantype']==\"snmp-mac\") print \"selected\"; ?>><?php print _('Discovery scans');?>: SNMP MAC address <?php print _('scan');?></option>\n\t    \t\t</optgroup>\n    \t\t\t<!-- Status update scans -->\n\t    \t\t<optgroup label=\"<?php print _('Status update scans');?>\">\n\t\t    \t\t<option value=\"update-icmp\"     <?php if(@$_COOKIE['scantype']==\"update-icmp\") print \"selected\"; ?>><?php print _('Status update scans');?>: Ping <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"update-snmp-arp\" <?php if(@$_COOKIE['scantype']==\"update-snmp-arp\") print \"selected\"; ?>><?php print _('Status update scans');?>: SNMP ARP <?php print _('scan');?></option>\n\t    \t\t</optgroup>\n\n\t\t\t</select>\n    \t</td>\n    </tr>\n    <!-- telnet ports -->\n    <tbody id=\"telnetPorts\" style=\"border-top:0px;display:none;\">\n    <tr>\n    \t<td><?php print _('Ports'); ?></td>\n    \t<td>\n\t    \t<input type=\"text\" name=\"telnetports\" class=\"form-control input-sm input-w-200\" placeholder=\"<?php print _(\"Separate multiple ports with ;\"); ?>\">\n    \t</td>\n    </tr>\n    </tbody>\n\n    <tbody style=\"border:0px;\">\n    <tr>\n    \t<td><?php print _('Debug');?></td>\n    \t<td>\n    \t\t<input type=\"checkbox\" name=\"debug\">\n    \t</td>\n    </tr>\n    </tbody>\n\n    </table>\n\n    <!-- warning -->\n    <div class=\"alert alert-warning alert-block\" id=\"alert-scan\">\n    &middot; <?php print _('Discovery scans discover new hosts');?><br>\n    &middot; <?php print _('Status update scans update alive status for whole subnet');?><br>\n    </div>\n\n    <!-- result -->\n\t<div id=\"subnetScanResult\"></div>\n</div>\n\n<!-- footer -->\n<div class=\"pFooter\">\n\t<div class=\"btn-group\">\n\t\t<button class=\"btn btn-sm btn-default hidePopups\"><?php print _('Cancel'); ?></button>\n\t\t<button class=\"btn btn-sm btn-default btn-success\" id=\"subnetScanSubmit\" data-subnetId='<?php print $_POST['subnetId']; ?>'><i class=\"fa fa-gears\"></i> <?php print _('Scan subnet'); ?></button>\n\t</div>\n\n\t<div class=\"subnetTruncateResult\"></div>\n</div>", "<?php\n/* set latest version */\ndefine(\"VERSION\", \"1.4\");\t\t\t\t\t\t\t\t\t//decimal release version e.g 1.32\n/* set latest version */\ndefine(\"VERSION_VISIBLE\", \"1.4\");\t\t\t\t\t\t\t//visible version in footer e.g 1.3.2\n/* set latest revision */\ndefine(\"REVISION\", \"030\");\t\t\t\t\t\t\t\t\t//increment on static content changes (js/css) or point releases to avoid caching issues\n/* set last possible upgrade */\ndefine(\"LAST_POSSIBLE\", \"1.1\");\t\t\t\t\t\t\t\t//minimum required version to be able to upgrade\n\n// Automatically set DBVERSION as everyone forgets!\nfunction get_dbversion() {\n    require('upgrade_queries.php');\n    $upgrade_keys = array_keys($upgrade_queries);\n    return str_replace(VERSION.\".\", \"\", end($upgrade_keys));\n}\n\nif(!defined('DBVERSION'))\ndefine('DBVERSION', get_dbversion());\n\n/* prefix for css/js */\ndefine(\"SCRIPT_PREFIX\", VERSION_VISIBLE.'_r'.REVISION.'_v'.DBVERSION);\t\t//css and js folder prefix to prevent caching issues", "\n/**\n *\n * Javascript / jQuery functions\n *\n *\n */\n$(document).ready(function () {\n\n/* @general functions */\n\n/*loading spinner functions */\nfunction showSpinner() { $('div.loading').show(); }\nfunction hideSpinner() { $('div.loading').fadeOut('fast'); }\n\n/* escape hide popups */\n$(document).keydown(function(e) {\n    if(e.keyCode === 27) {\n         if($(\"#popupOverlay2\").is(\":visible\")) {\n            hidePopup2 ();\n         }\n         else {\n            hidePopup1 ();\n         }\n    }\n});\n\n// no enter in sortfields\n$(document).on(\"submit\", \".searchFormClass\", function() {\n    return false;\n});\n\n$('.show_popover').popover();\n\n\n/* this functions opens popup */\n/* -------------------------- */\nfunction open_popup (popup_class, target_script, post_data, secondary) {\n\t// class\n\tsecondary = typeof secondary !== 'undefined' ? secondary : false;\n\t// show spinner\n\tshowSpinner();\n\t// post\n    $.post(target_script, post_data, function(data) {\n        showPopup('popup_w'+popup_class, data, secondary);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText+\"<br>Status: \"+textStatus+\"<br>Error: \"+errorThrown); });\n    // prevent reload\n    return false;\n}\n\n/* this functions saves popup result */\n/* --------------------------------- */\nfunction submit_popup_data (result_div, target_script, post_data, reload) {\n\t// show spinner\n\tshowSpinner();\n\t// set reload\n\treload = typeof reload !== 'undefined' ? reload : true;\n\t// post\n    $.post(target_script, post_data, function(data) {\n        $('div'+result_div).html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        if(reload) {\n\t        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1 && data.search(\"alert-warning\")==-1 )\t{ setTimeout(function (){window.location.reload();}, 1500); }\n\t        else                               \t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ hideSpinner(); }\n        }\n        else {\n\t        hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    // prevent reload\n    return false;\n}\n\n/* reload window function for ajax error checking */\nfunction reload_window (data) {\n\tif(\tdata.search(\"alert-danger\")==-1 &&\n\t\tdata.search(\"error\")==-1 &&\n\t\tdata.search(\"alert-warning\") == -1 )    { setTimeout(function (){window.location.reload();}, 1500); }\n\telse                               \t\t  \t{ hideSpinner(); }\n}\n\n/* tooltips */\nif ($(\"[rel=tooltip]\").length) { $(\"[rel=tooltip]\").tooltip(); }\n\n/* hide error div if jquery loads ok\n*********************************************/\n$('div.jqueryError').hide();\n\n/* Show / hide JS error */\nfunction showError(errorText) {\n\t$('div.jqueryError').fadeIn('fast');\n\tif(errorText.length>0)  { $('.jqueryErrorText').html(errorText).show(); }\n\thideSpinner();\n}\nfunction hideError() {\n\t$('.jqueryErrorText').html();\n\t$('div.jqueryError').fadeOut('fast');\n}\n//hide error popup\n$(document).on(\"click\", \"#hideError\", function() {\n\thideError();\treturn false;\n});\n//disabled links\n$('.disabled a').click(function() {\treturn false;\n});\n\n/* tooltip hiding fix */\nfunction hideTooltips() { $('.tooltip').hide(); }\n\n/* popups */\nfunction showPopup(pClass, data, secondary) {\n\tshowSpinner();\n\t// secondary - load secondary popupoverlay\n\tif (secondary === true) { var oclass = \"#popupOverlay2\";}\n\telse \t\t\t\t\t{ var oclass = \"#popupOverlay\"; }\n\t// show overlay\n    $(oclass).fadeIn('fast');\n    // load data and show it\n    if (data!==false && typeof(data)!==\"undefined\") {\n    $(oclass+' .'+pClass).html(data);\n    }\n\t// malaiam: Weird popup_max bug loads same content in both popupOverlay and popupOverlay2, duplicating forms and URL parameter, messing things up, so we delete it\n\tif (secondary != true) { $('#popupOverlay2 > div').empty(); }\n    $(oclass+' .'+pClass).fadeIn('fast');\n    //disable page scrolling on bottom\n    $('body').addClass('stop-scrolling');\n    // resize\n    resize_pContent ()\n}\nfunction hidePopup(pClass, secondary) {\n\t// secondary - load secondary popupoverlay\n\tif (secondary === true) { var oclass = \"#popupOverlay2\";}\n\telse \t\t\t\t\t{ var oclass = \"#popupOverlay\"; }\n\t// hide\n    $(oclass+' .'+pClass).fadeOut('fast');\n\t// IMPORTANT: also empty loaded content to avoid issues on popup reopening\n\t$(oclass+' > div').empty();\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n}\nfunction hidePopups() {\n    $('#popupOverlay').fadeOut('fast');\n    $('#popupOverlay2').fadeOut('fast');\n\n\t// IMPORTANT: also empty loaded content to avoid issues on popup reopening\n\t$('#popupOverlay > div').empty();\n\t$('#popupOverlay2 > div').empty();\n\n    $('.popup').fadeOut('fast');\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n    hideSpinner();\n}\nfunction hidePopup1() {\n    $('#popupOverlay').fadeOut('fast');\n    $('#popupOverlay .popup').fadeOut('fast');\n    // IMPORTANT: also empty loaded content to avoid issues on popup reopening\n    $('#popupOverlay > div').empty();\n    hideSpinner();\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n}\nfunction hidePopup2() {\n    $('#popupOverlay2').fadeOut('fast');\n    $('#popupOverlay2 .popup').fadeOut('fast');\n\t// IMPORTANT: also empty loaded content to avoid issues on popup reopening\n\t$('#popupOverlay2 > div').empty();\n    hideSpinner();\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n}\nfunction hidePopupMasks() {\n    $('.popup_wmasks').fadeOut('fast');\n    hideSpinner();\n}\n$(document).on(\"click\", \".hidePopups\", function() {hidePopups(); });\n$(document).on(\"click\", \".hidePopup2\", function() { hidePopup2(); });\n$(document).on(\"click\", \".hidePopupMasks\", function() { hidePopupMasks(); });\n$(document).on(\"click\", \".hidePopupsReload\", function() { window.location.reload(); });\n\n//prevent loading for disabled buttons\n$('a.disabled, button.disabled').click(function() { return false; });\n\n//fix for menus on ipad\n$('body').on('touchstart.dropdown', '.dropdown-menu', function (e) { e.stopPropagation(); });\n\n/*    generate random password */\nfunction randomPass() {\n    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n    var pass = \"\";\n    var x;\n    var i;\n    for(x=0; x<10; x++) {\n        i = Math.floor(Math.random() * 62);\n        pass += chars.charAt(i);\n    }\n    return pass;\n}\n\n// on load\nresize_pContent ()\n// on resize\n$(window).resize(function () {\n    resize_pContent ()\n});\n\nfunction resize_pContent () {\n    if($(\".popup .pContent\").is(\":visible\")) {\n        var myheight = $(window).height() - 250;\n        $(\".popup .pContent\").css('max-height', myheight);\n    }\n}\n\n/* remove self on click */\n$(document).on(\"click\", \".selfDestruct\", function() {\n\t$(this).parent('div').fadeOut('fast');\n});\n\n\n/* @cookies */\nfunction createCookie(name,value,days) {\n    var date;\n    var expires;\n\n    if (typeof days === 'undefined') {\n        date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        expires = \"; expires=\"+date.toGMTString();\n    }\n    else {\n\t    var expires = \"\";\n    }\n\n    document.cookie = name+\"=\"+value+expires+\"; path=/\";\n}\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\n\n/* draggeable elements */\n$(function() {\n\t$(\".popup\").draggable({ handle: \".pHeader\" });\n});\n\n// bootstrap-table\n$('table.sorted-new')\n                 .attr(\"data-toggle\", \"table\")\n                 .attr('data-pagination', 'true')\n                 .attr('data-page-size', '250')\n                 .attr('data-page-list', '[50,100,250,500,All]')\n                 .attr('data-search','true')\n                 .attr('data-classes','table-no-bordered')\n                 .attr('data-icon-size','sm')\n                 .attr('data-show-footer','false')\n                 .attr('data-show-columns','true')\n                 .attr('data-icons-prefix','fa')\n                 .attr('data-icons','icons')\n                 .attr('data-cookie','true')\n                 .attr('data-sortable', 'false')\n\n$('table.sorted')\n                 .attr(\"data-toggle\", \"table\")\n                 .attr('data-pagination', 'true')\n                 .attr('data-page-size', '50')\n                 .attr('data-page-list', '[50,100,250,500,All]')\n                 .attr('data-search','true')\n                 .attr('data-classes','table-no-bordered')\n                 .attr('data-icon-size','sm')\n                 .attr('data-show-footer','false')\n                 .attr('data-show-columns','true')\n                 .attr('data-icons-prefix','fa')\n                 .attr('data-icons','icons')\n                 .attr('data-cookie', 'true')\n                 .attr('data-sortable', 'false')\n                 .attr('onlyInfoPagination', 'true')\n                 .attr('smartDisplay', true)\n                 .attr('showPaginationSwitch', true)\n                 .attr('minimumCountColumns', true)\n\n$('table.nosearch')\n                 .attr('data-search','false')\n                 .attr('data-show-columns','false')\n\n$('table.nopagination')\n                 .attr('data-pagination', 'false')\n\n$('table.sortable')\n                 .attr('data-sortable', 'true')\n\n// tooltips, popovers\n$('table.sorted').on('all.bs.table', function () {\n    if ($(\"[rel=tooltip]\").length) { $(\"[rel=tooltip]\").tooltip(); }\n    $('.show_popover').popover();\n})\n\n\n// icons - bootstrap table\nwindow.icons = {\n    refresh : 'fa-refresh',\n    toggle  : 'fa-toggle-on',\n    columns : 'fa-th-list'\n};\n\n\n$(\"li.disabled a\").click(function () {\n   return false;\n});\n$('form.search-form').submit(function() {\n   return false;\n});\n\n\n\n\n\n/**\n * Generic open popup scripts\n *\n * Generic function to open popup and provide data via POST attributes\n *\n * Attributes are:\n *     - data-script: script to load in popup\n *     - data-class: popup class/size (400, 700, ...)\n *     - data-secondary: open secondary popup\n *     - data-* : all data- parameters will be passed as POST params to requested script\n *\n * @return void\n */\n$(document).on(\"click\", \".open_popup\", function () {\n    // defaults\n    var post_data     = {};\n    var secondary     = false;\n    var popup_class   = \"400\";\n    var target_script = \"\";\n    // get all data- attributes\n    $.each(this.attributes, function() {\n        // script\n        if(this.name == \"data-script\") {\n            target_script = this.value;\n        }\n        // class\n        else if(this.name == \"data-class\") {\n            popup_class = this.value;\n        }\n        // secondary\n        else if(this.name == \"data-secondary\") {\n            secondary = true;\n        }\n        // parameters\n        else if(this.name.indexOf(\"data-\") !== -1) {\n            post_data[this.name.replace(\"data-\", \"\")] = this.value;\n        }\n    });\n    // checks\n    if(target_script == \"\") {\n        showError(\"Error: Missing target_script\");\n    }\n    // load popup\n    else {\n        open_popup (popup_class, target_script, post_data, secondary);\n    }\n    // no reload\n    return false;\n});\n\n\n/**\n * Generic submit popup script\n *\n * It will POST data from provided script and attributes to target\n * script and display it in target div\n *\n *\n */\n$(document).on(\"click\", \".submit_popup\", function () {\n    // defaults\n    var post_data     = {};\n    var reload        = true;\n    var result_div    = \"\";\n    var target_script = \"\";\n    // get all data- attributes\n    $.each(this.attributes, function() {\n        // script\n        if(this.name == \"data-script\") {\n            target_script = this.value;\n        }\n        // class\n        else if(this.name == \"data-result_div\") {\n            result_div = \"#\"+this.value;\n        }\n        // secondary\n        else if(this.name == \"data-noreload\") {\n            reload = false;\n        }\n        // get form parameters\n        else if(this.name == \"data-form\") {\n            post_data = $('form#'+this.value).serialize ()\n        }\n    });\n    // checks\n    if(target_script == \"\") {\n        showError(\"Error: Missing target_script\")\n    }\n    else if (result_div == \"\") {\n        showError(\"Error: Missing result div parameter\")\n    }\n    // load popup\n    else {\n        submit_popup_data (result_div, target_script, post_data, reload)\n    }\n    // no reload\n    return false;\n});\n\n\n\n\n\n/* @dashboard widgets ----------  */\n\n//if dashboard show widgets\nif($('#dashboard').length>0) {\n\t//get all boxes\n\t$('div[id^=\"w-\"]').each(function(){\n\t\tvar w = $(this).attr('id');\n\t\t//remove w-\n\t\tw = w.replace(\"w-\", \"\");\n\t\t$.post('app/dashboard/widgets/'+w+'.php', function(data) {\n\t\t\t$(\"#w-\"+w+' .hContent').html(data);\n\t\t}).fail(function(xhr, textStatus, errorThrown) {\n            $.post('app/dashboard/widgets/custom/'+w+'.php', function(data) {\n                $(\"#w-\"+w+' .hContent').html(data);\n            }).fail(function(xhr, textStatus, errorThrown) {\n    \t\t\t$(\"#w-\"+w+' .hContent').html('<blockquote style=\"margin-top:20px;margin-left:20px;\">File not found!</blockquote>');\n            })\n\t\t});\n\t});\n}\n//remove item\n$(document).on('click', \"i.remove-widget\", function() {\n\t$(this).parent().parent().fadeOut('fast').remove();\n});\n//add new widget form popup\n$(document).on('click', '#sortablePopup li a.widget-add', function() {\n\tvar wid   = $(this).attr('id');\n\tvar wsize = $(this).attr('data-size');\n\tvar wtitle= $(this).attr('data-htitle');\n\t//create\n\tvar data = '<div class=\"row-fluid\"><div class=\"span'+wsize+' widget-dash\" id=\"'+wid+'\"><div class=\"inner movable\"><h4>'+wtitle+'</h4><div class=\"hContent\"></div></div></div></div>';\n\t$('#dashboard').append(data);\n\t//load\n\tw = wid.replace(\"w-\", \"\");\n\t$.post('app/dashboard/widgets/'+w+'.php', function(data) {\n\t\t$(\"#\"+wid+' .hContent').html(data);\n\t}).fail(function(xhr, textStatus, errorThrown) {\n\t\t$(\"#\"+wid+' .hContent').html('<blockquote style=\"margin-top:20px;margin-left:20px;\">File not found!</blockquote>');\n\t});\n\t//remove item\n\t$(this).parent().fadeOut('fast');\treturn false;\n});\n\n\n\n/* @subnets list ----------  */\n\n/* leftmenu toggle submenus */\n// default hide\n$('ul.submenu.submenu-close').hide();\n// left menu folder delay tooltip\n$('.icon-folder-close,.icon-folder-show, .icon-search').tooltip( {\n    delay: {show:2000, hide:0},\n    placement:\"bottom\"\n});\n// show submenus\n$('ul#subnets').on(\"click\", \".fa-folder-close-o\", function() {\n    //change icon\n    $(this).removeClass('fa-folder-close-o').addClass('fa-folder-open-o');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideDown('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"add\", $(this).attr(\"data-str_id\"));\n});\n$('ul#subnets').on(\"click\", \".fa-folder\", function() {\n    //change icon\n    $(this).removeClass('fa-folder').addClass('fa-folder-open');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideDown('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"add\", $(this).attr(\"data-str_id\"));\n});\n// hide submenus\n$('ul#subnets').on(\"click\", \".fa-folder-open-o\", function() {\n    //change icon\n    $(this).removeClass('fa-folder-open-o').addClass('fa-folder-close-o');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideUp('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"remove\", $(this).attr(\"data-str_id\"));\n});\n$('ul#subnets').on(\"click\", \".fa-folder-open\", function() {\n    //change icon\n    $(this).removeClass('fa-folder-open').addClass('fa-folder');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideUp('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"remove\", $(this).attr(\"data-str_id\"));\n});\n\n\n/* Function to save subnets structure left menu to cookie */\nfunction update_subnet_structure_cookie (action, cid) {\n\t// read old cookie\n\tvar s_cookie = readCookie(\"sstr\");\n\t// defualt - if empty\n \tif(typeof s_cookie === 'undefined' || s_cookie==null || s_cookie.length===0)\ts_cookie = \"|\";\n\t// add or replace\n\tif (action == \"add\") {\n\t\t// split to array and check if it already exists\n\t\tvar arr = s_cookie.split('|');\n\t\tvar exists = false;\n\t\tfor(var i=0;i < arr.length;i++) {\n        \tif(arr[i]==cid) {\n\t     \t\texists = true;\n        }\t}\n        // new\n        if(exists==false)\ts_cookie += cid+\"|\";\n\t}\n\telse if (action == \"remove\")\t{\n\t\ts_cookie = s_cookie.replace(\"|\"+cid+\"|\", \"|\");\n\t}\n\t// save cookie\n\tcreateCookie(\"sstr\",s_cookie, 365);\n}\n\n//expand/contract all\n$('#expandfolders').click(function() {\n    // get action\n    var action = $(this).attr('data-action');\n    //open\n    if(action == 'close') {\n        $('.subnets ul#subnets li.folder > i').removeClass('fa-folder-close-o').addClass('fa-folder-open-o');\n        $('.subnets ul#subnets li.folderF > i').removeClass('fa-folder').addClass('fa-folder-open');\n        $('.subnets ul#subnets ul.submenu').removeClass('submenu-close').addClass('submenu-open').slideDown('fast');\n        $(this).attr('data-action','open');\n        createCookie('expandfolders','1','365');\n        $(this).removeClass('fa-expand').addClass('fa-compress');\n    }\n    else {\n        $('.subnets ul#subnets li.folder > i').addClass('fa-folder-close-o').removeClass('fa-folder-open-o');\n        $('.subnets ul#subnets li.folderF > i').addClass('fa-folder').removeClass('fa-folder-open');\n        $('.subnets ul#subnets ul.submenu').addClass('submenu-close').removeClass('submenu-open').slideUp('fast');\n        $(this).attr('data-action','close');\n        createCookie('expandfolders','0','365');\n        $(this).removeClass('fa-compress').addClass('fa-expand');\n    }\n});\n\n\n\n\n\n\n\n\n\n\n/* @ipaddress list ---------- */\n\n\n/*    add / edit / delete IP address\n****************************************/\n//show form\n$(document).on(\"click\", \".modIPaddr\", function() {\n    showSpinner();\n    var action    = $(this).attr('data-action');\n    var id        = $(this).attr('data-id');\n    var subnetId  = $(this).attr('data-subnetId');\n    var stopIP    = $(this).attr('data-stopIP');\n    //format posted values\n    var postdata = \"action=\"+action+\"&id=\"+id+\"&subnetId=\"+subnetId+\"&stopIP=\"+stopIP;\n    $.post('app/subnets/addresses/address-modify.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//move orphaned IP address\n$(document).on(\"click\", \"a.moveIPaddr\", function() {\n    showSpinner();\n    var action      = $(this).attr('data-action');\n    var id        = $(this).attr('data-id');\n    var subnetId  = $(this).attr('data-subnetId');\n    //format posted values\n    var postdata = \"action=\"+action+\"&id=\"+id+\"&subnetId=\"+subnetId;\n    $.post('app/subnets/addresses/move-address.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w400').html(data);\n        showPopup('popup_w400');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//resolve DNS name\n$(document).on(\"click\", \"#refreshHostname\", function() {\n    showSpinner();\n    var ipaddress = $('input.ip_addr').val();\n    var subnetId  = $(this).attr('data-subnetId');;\n    $.post('app/subnets/addresses/address-resolve.php', {ipaddress:ipaddress, subnetId: subnetId}, function(data) {\n        if(data.length !== 0) {\n            $('input[name=hostname]').val(data);\n        }\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//submit ip address change\n$(document).on(\"click\", \"button#editIPAddressSubmit, .editIPSubmitDelete\", function() {\n    //show spinner\n    showSpinner();\n    var postdata = $('form.editipaddress').serialize();\n\n    //append deleteconfirm\n\tif($(this).attr('id') == \"editIPSubmitDelete\") { postdata += \"&deleteconfirm=yes&action=delete\"; }\n    //replace delete if from visual\n    if($(this).attr('data-action') == \"all-delete\" ) { postdata += '&action-visual=delete';}\n\n    $.post('app/subnets/addresses/address-modify-submit.php', postdata, function(data) {\n        $('div.addnew_check').html(data);\n        $('div.addnew_check').slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//ping check\n$(document).on(\"click\", \".ping_ipaddress\", function() {\n\tshowSpinner();\n\tvar id       = $(this).attr('data-id');\n\tvar subnetId = $(this).attr('data-subnetId');\n\t// new ip?\n\tif ($(this).hasClass(\"ping_ipaddress_new\")) { id = $(\"input[name=ip_addr]\").val(); }\n\t//check\n\t$.post('app/subnets/addresses/ping-address.php', {id:id, subnetId:subnetId}, function(data) {\n        $('#popupOverlay2 div.popup_w400').html(data);\n        showPopup('popup_w400', false, true);\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    send notification mail\n********************************/\n//show form\n$(document).on(\"click\", \"a.mail_ipaddress\", function() {\n    //get IP address id\n    var IPid = $(this).attr('data-id');\n    $.post('app/subnets/addresses/mail-notify.php', { id:IPid }, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//send mail with IP details!\n$(document).on(\"click\", \"#mailIPAddressSubmit\", function() {\n    showSpinner();\n    var mailData = $('form#mailNotify').serialize();\n    //post to check script\n    $.post('app/subnets/addresses/mail-notify-check.php', mailData, function(data) {\n        $('div.sendmail_check').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n/*    send notification mail - subnet\n********************************/\n//show form\n$(document).on(\"click\", \"a.mail_subnet\", function() {\n    //get IP address id\n    var id = $(this).attr('data-id');\n    $.post('app/subnets/mail-notify-subnet.php', { id:id }, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//send mail with IP details!\n$(document).on(\"click\", \"#mailSubnetSubmit\", function() {\n    showSpinner();\n    var mailData = $('form#mailNotifySubnet').serialize();\n    //post to check script\n    $.post('app/subnets/mail-notify-subnet-check.php', mailData, function(data) {\n        $('div.sendmail_check').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*    scan subnet\n*************************/\n//open popup\n$('a.scan_subnet').click(function() {\n\tshowSpinner();\n\tvar subnetId = $(this).attr('data-subnetId');\n\t$.post('app/subnets/scan/subnet-scan.php', {subnetId:subnetId}, function(data) {\n        $('#popupOverlay div.popup_wmasks').html(data);\n        showPopup('popup_wmasks');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//show telnet port\n$(document).on('change', \"table.table-scan select#type\", function() {\n\tvar pingType = $('select[name=type]').find(\":selected\").val();\n\tif(pingType==\"scan-telnet\") { $('tbody#telnetPorts').show(); }\n\telse \t\t\t\t\t\t{ $('tbody#telnetPorts').hide(); }\n});\n//save value to cookie\n$(document).on('change', \"table.table-scan select#type\", function() {\n    var sel = ($(this).find(\":selected\").val());\n    createCookie(\"scantype\",sel,32);\n});\n\n//start scanning\n$(document).on('click','#subnetScanSubmit', function() {\n\tshowSpinner();\n\t$('#subnetScanResult').slideUp('fast');\n\tvar subnetId = $(this).attr('data-subnetId');\n\tvar type \t = $('select[name=type]').find(\":selected\").val();\n\tif($('input[name=debug]').is(':checked'))\t{ var debug = 1; }\n\telse\t\t\t\t\t\t\t\t\t\t{ var debug = 0; }\n\tvar port     = $('input[name=telnetports]').val();\n\t$('#alert-scan').slideUp('fast');\n\t$.post('app/subnets/scan/subnet-scan-execute.php', {subnetId:subnetId, type:type, debug:debug, port:port}, function(data) {\n        $('#subnetScanResult').html(data).slideDown('fast');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//remove result\n$(document).on('click', '.resultRemove', function() {\n\t// if MAC table show IP that is hidden\n\tif ($(this).hasClass('resultRemoveMac')) {\n    \t// if this one is hidden dont show ip for next\n    \tif ($(this).parent().parent().find('span.ip-address').hasClass('hidden')) {\n\n    \t}\n    \t// else show\n        else {\n            $(this).parent().parent().next().find('span.ip-address').removeClass('hidden');\n        }\n\t}\n    // get target\n\tvar target = $(this).attr('data-target');\n\t$('tr.'+target).remove();\treturn false;\n});\n//submit scanning result\n$(document).on('click', 'a#saveScanResults', function() {\n\tshowSpinner();\n\tvar script   = $(this).attr('data-script');\n\tvar subnetId = $(this).attr('data-subnetId');\n\tvar postData = $('form.'+script+\"-form\").serialize();\n\tvar postData = postData+\"&subnetId=\"+subnetId;\n\tvar postData = postData+\"&type=\"+script;\n\t$.post('app/subnets/scan/subnet-scan-result.php', postData, function(data) {\n        $('#subnetScanAddResult').html(data);\n        //hide if success!\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n\n/*    import IP addresses\n*************************/\n//load CSV import form\n$('a.csvImport').click(function () {\n    showSpinner();\n    var subnetId = $(this).attr('data-subnetId');\n    $.post('app/subnets/import-subnet/index.php', {subnetId:subnetId}, function(data) {\n        $('div.popup_max').html(data);\n        showPopup('popup_max');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//display uploaded file\n$(document).on(\"click\", \"input#csvimportcheck\", function() {\n    showSpinner();\n    //get filetype\n    var filetype = $('span.fname').html();\n    var xlsSubnetId  = $('a.csvImport').attr('data-subnetId');\n    $.post('app/subnets/import-subnet/print-file.php', { filetype:filetype, subnetId:xlsSubnetId }, function(data) {\n        $('div.csvimportverify').html(data).slideDown('fast');\n        hideSpinner();\n        // add reload class\n        $('.importFooter').removeClass(\"hidePopups\").addClass(\"hidePopupsReload\");\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//import file script\n$(document).on(\"click\", \"input#csvImportNo\", function() {\n    $('div.csvimportverify').hide('fast');\n});\n$(document).on(\"click\", \"input#csvImportYes\", function() {\n    showSpinner();\n    //get filetype\n    var filetype = $('span.fname').html();\n    //ignore errors\n    if($('input[name=ignoreErrors]').is(':checked'))    { var ignoreError = \"1\"; }\n    else                                                { var ignoreError = \"0\"; }\n    // get active subnet ID\n    var xlsSubnetId  = $('a.csvImport').attr('data-subnetId');\n    // Get CSRF cookie\n    var csrf_cookie = $('input[name=csrf_cookie]').val();\n    var postData = \"subnetId=\" + xlsSubnetId + \"&filetype=\" + filetype + \"&ignoreError=\" + ignoreError + \"&csrf_cookie=\" + csrf_cookie;\n\n    $.post('app/subnets/import-subnet/import-file.php', postData, function(data) {\n        $('div.csvImportResult').html(data).slideDown('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//download template\n$(document).on(\"click\", \"#csvtemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/subnets/import-subnet/import-template.php'></iframe></div>\");\n\treturn false;\n});\n//download vrf template\n$(document).on(\"click\", \"#vrftemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=vrf'></iframe></div>\");\n\treturn false;\n});\n\n//download domain template\n$(document).on(\"click\", \"#vlanstemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=vlans'></iframe></div>\");\n\treturn false;\n});\n\n//download domain template\n$(document).on(\"click\", \"#l2domtemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=l2dom'></iframe></div>\");\n\treturn false;\n});\n\n\n//download vlan domain template\n$(document).on(\"click\", \"#vlandomaintemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=vlandomain'></iframe></div>\");\n\treturn false;\n});\n\n\n//download subnet template\n$(document).on(\"click\", \"#subnetstemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=subnets'></iframe></div>\");\n\treturn false;\n});\n\n\n//download ip address template\n$(document).on(\"click\", \"#ipaddrtemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=ipaddr'></iframe></div>\");\n\treturn false;\n});\n\n\n//download device template\n$(document).on(\"click\", \"#devicestemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=devices'></iframe></div>\");\treturn false;\n});\n\n\n//download device types template\n$(document).on(\"click\", \"#devtypetemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=devtype'></iframe></div>\");\n\treturn false;\n});\n\n\n\n/*    export IP addresses\n*************************/\n//show fields\n$('a.csvExport').click(function() {\n    showSpinner();\n    var subnetId = $(this).attr('data-subnetId');\n    //show select fields\n    $.post('app/subnets/addresses/export-field-select.php', {subnetId:subnetId}, function(data) {\n\t    $('#popupOverlay div.popup_w400').html(data);\n        showPopup('popup_w400');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//export\n$(document).on(\"click\", \"button#exportSubnet\", function() {\n    var subnetId = $('a.csvExport').attr('data-subnetId');\n    //get selected fields\n    var exportFields = $('form#selectExportFields').serialize();\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/subnets/addresses/export-subnet.php?subnetId=\" + subnetId + \"&\" + exportFields + \"'></iframe></div>\");\n    return false;\n});\n\n\n/*\tadd / remove favourite subnet\n*********************************/\n$(document).on('click', 'a.editFavourite', function() {\n\tvar subnetId = $(this).attr('data-subnetId');\n\tvar action   = $(this).attr('data-action');\n\tvar from     = $(this).attr('data-from');\n\tvar item     = $(this);\n\n\t//remove\n\t$.post('app/tools/favourites/favourite-edit.php', {subnetId:subnetId, action:action, from:from}, function(data) {\n\t\t//success - widget - remove item\n\t\tif(data=='success' && from=='widget') \t{\n\t\t\t$('tr.favSubnet-'+subnetId).addClass('error');\n\t\t\t$('tr.favSubnet-'+subnetId).delay(200).fadeOut();\n\t\t}\n\t\t//success - subnet - toggle star-empty\n\t\telse if (data=='success') \t\t\t\t{\n\t\t\t$(this).toggleClass('btn-info');\n\t\t\t$('a.favourite-'+subnetId+\" i\").toggleClass('fa-star-o');\n\t\t\t$(item).toggleClass('btn-info');\n\t\t\t//remove\n\t\t\tif(action==\"remove\") {\n\t\t\t\t$('a.favourite-'+subnetId).attr('data-original-title','Click to add to favourites');\n\t\t\t\t$(item).attr('data-action','add');\n\t\t\t}\n\t\t\t//add\n\t\t\telse {\n\t\t\t\t$('a.favourite-'+subnetId).attr('data-original-title','Click to remove from favourites');\n\t\t\t\t$(item).attr('data-action','remove');\n\t\t\t}\n\t\t}\n\t\t//fail\n\t\telse {\n\t        $('#popupOverlay div.popup_w500').html(data);\n\t        showPopup('popup_w500');\n\t        hideSpinner();\n\t\t}\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    request IP address for non-admins if locked or viewer\n*********************************************************/\n//show request form\n$('a.request_ipaddress').click(function () {\n    showSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    $.post('app/tools/request-ip/index.php', {subnetId:subnetId}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//show request form from widget\n$(document).on(\"click\", \"button#requestIP_widget\", function() {\n    showSpinner();\n\tvar subnetId = $('select#subnetId option:selected').attr('value');\n    var ip_addr = document.getElementById('ip_addr_widget').value;\n    $.post('app/tools/request-ip/index.php', {subnetId:subnetId, ip_addr:ip_addr}, function(data) {\n        $('div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//auto-suggest first available IP in selected subnet\n$(document).on(\"change\", \"select#subnetId\", function() {\n    showSpinner();\n    var subnetId = $('select#subnetId option:selected').attr('value');\n    //post it via json to request_ip_first_free.php\n    $.post('app/login/request_ip_first_free.php', { subnetId:subnetId}, function(data) {\n        $('input.ip_addr').val(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n\n//submit request\n$(document).on(\"click\", \"button#requestIPAddressSubmit\", function() {\n    showSpinner();\n    var request = $('form#requestIP').serialize();\n    $.post('app/login/request_ip_result.php', request, function(data) {\n        $('div#requestIPresult').html(data).slideDown('fast');\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n\n\n\n\n/* @tools ----------- */\n\n\n/* ipCalc */\n//submit form\n$('form#ipCalc').submit(function () {\n    showSpinner();\n    var ipCalcData = $(this).serialize();\n    $.post('app/tools/ip-calculator/result.php', ipCalcData, function(data) {\n        $('div.ipCalcResult').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//reset input\n$('form#ipCalc input.reset').click(function () {\n    $('form#ipCalc input[type=\"text\"]').val('');\n    $('div.ipCalcResult').fadeOut('fast');\n});\n//\n$(document).on(\"click\", \"a.create_section_subnet_from_search\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var sectionId = $(this).attr('data-sectionId')\n    var subnet    = $(this).attr('data-subnet')\n    var bitmask   = $(this).attr('data-bitmask')\n\n    // formulate postdata\n    var postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + subnet + \"&bitmask=\" + bitmask + \"&action=add&location=ipcalc\";\n\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    });\n\n    return false;\n})\n\n/* search function */\nfunction search_execute (loc) {\n    showSpinner();\n    // location based params\n    if (loc==\"topmenu\") {\n        var ip = $('.searchInput').val();\n        var form_name = \"searchSelect\";\n    }\n    else {\n        var ip = $('form#search .search').val();\n        var form_name = \"search\";\n    }\n    ip = ip.replace(/\\//g, \"%252F\");\n    // parameters\n    var addresses = $('#'+form_name+' input[name=addresses]').is(\":checked\") ? \"on\" : \"off\";\n    var subnets   = $('#'+form_name+' input[name=subnets]').is(\":checked\") ? \"on\" : \"off\";\n    var vlans     = $('#'+form_name+' input[name=vlans]').is(\":checked\") ? \"on\" : \"off\";\n    var vrf       = $('#'+form_name+' input[name=vrf]').is(\":checked\") ? \"on\" : \"off\";\n    var pstn      = $('#'+form_name+' input[name=pstn]').is(\":checked\") ? \"on\" : \"off\";\n    var circuits  = $('#'+form_name+' input[name=circuits]').is(\":checked\") ? \"on\" : \"off\";\n    var customers = $('#'+form_name+' input[name=customers]').is(\":checked\") ? \"on\" : \"off\";\n\n    // set cookie json-encoded with parameters\n    createCookie(\"search_parameters\",'{\"addresses\":\"'+addresses+'\",\"subnets\":\"'+subnets+'\",\"vlans\":\"'+vlans+'\",\"vrf\":\"'+vrf+'\",\"pstn\":\"'+pstn+'\",\"circuits\":\"'+circuits+'\",\"customers\":\"'+customers+'\"}',365);\n\n    //lets try to detect IEto set location\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    var edge = ua.indexOf(\"Edge/\");\n    //IE\n    if (msie > 0 || edge > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) \t{ var base = $('.iebase').html(); }\n    else \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ var base = \"\"; }\n    //go to search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ window.location = base + \"tools/search/\"+ip; }\n\telse\t\t\t\t\t{ window.location = base + \"index.php?page=tools&section=search&ip=\"+ip; }\n}\n//submit form - topmenu\n$('.searchSubmit').click(function () {\n    search_execute (\"topmenu\");\n    return false;\n});\n//submit form - topmenu\n$('form#userMenuSearch').submit(function () {\n    search_execute (\"topmenu\");\n    return false;\n});\n//submit search form\n$('form#search').submit(function () {\n    search_execute (\"search\");\n    return false;\n});\n// search ipaddress override\n$('a.search_ipaddress').click(function() {\n    // set cookie json-encoded with parameters\n    createCookie(\"search_parameters\",'{\"addresses\":\"on\",\"subnets\":\"off\",\"vlans\":\"off\",\"vrf\":\"off\",\"pstn\":\"off\",\"circuits\":\"off\",\"customers\":\"off\"}',365);\n});\n\n//show/hide search select fields\n$(document).on(\"mouseenter\", \"#userMenuSearch\", function(event){\n    var object1 = $(\"#searchSelect\");\n    object1.slideDown('fast');\n});\n$(document).on(\"mouseleave\", '#user_menu', function(event){\n\t$(this).stop();\n    var object1 = $(\"#searchSelect\");\n    object1.slideUp();\n});\n\n\n//search export\n$(document).on(\"click\", \"#exportSearch\", function(event){\n    var searchTerm = $(this).attr('data-post');\n    $(\"div.dl\").remove();                                                //remove old innerDiv\n    $('div.exportDIVSearch').append(\"<div style='display:none' class='dl'><iframe src='app/tools/search/search-results-export.php?ip=\" + searchTerm + \"'></iframe></div>\");\n    return false;\n});\n\n/* hosts */\n$('#hosts').submit(function() {\n    showSpinner();\n    var hostname = $('input.hostsFilter').val();\n\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ window.location = base + \"tools/hosts/\" + hostname; }\n\telse\t\t\t\t\t{ window.location = base + \"index.php?page=tools&section=hosts&ip=\" + hostname; }\n    return false;\n});\n\n\n/* user menu selfchange */\n$('form#userModSelf').submit(function () {\n    var selfdata = $(this).serialize();\n    $('div.userModSelfResult').hide();\n\n    $.post('app/tools/user-menu/user-edit.php', selfdata, function(data) {\n        $('div.userModSelfResult').html(data).fadeIn('fast');\n\n        if(data.search(\"danger\")==-1) { $('div.userModSelfResult').delay(2000).fadeOut('slow'); hideSpinner(); }\n        else                          { hideSpinner(); }\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//    Generate random pass\n$(document).on(\"click\", \"#randomPassSelf\", function() {\n    var password = randomPass();\n    $('input.userPass').val(password);\n    $('#userRandomPass').html( password );\n    return false;\n});\n\n/* changelog */\n//submit form\n$('form#cform').submit(function () {\n    showSpinner();\n    var limit = $('form#cform .climit').val();\n    var filter = $('form#cform .cfilter').val();\n    //update search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ window.location = \"tools/changelog/\"+filter+\"/\"+limit+\"/\"; }\n\telse\t\t\t\t\t{ window.location = \"index.php?page=tools&section=changelog&subnetId=\"+filter+\"&sPage=\"+limit; }\n    return false;\n});\n\n/* changePassRequired */\n$('form#changePassRequiredForm').submit(function() {\n\tshowSpinner();\n\n    //get username\n    var ipampassword1 = $('#ipampassword1', this).val();\n    var ipampassword2 = $('#ipampassword2', this).val();\n    //get login data\n    var postData = \"ipampassword1=\"+ipampassword1+\"&ipampassword2=\"+ipampassword2;\n\n    $.post('app/tools/pass-change/result.php', postData, function(data) {\n        $('div#changePassRequiredResult').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n// show subnet masks popup\n$(document).on(\"click\", '.show-masks', function() {\n\topen_popup(\"masks\", \"app/tools/subnet-masks/popup.php\", {closeClass:$(this).attr('data-closeClass')}, true);\treturn false;\n});\n\n\n\n\n\n\n/* @administration ---------- */\n\n// clear logo\n$(document).on(\"click\", \".logo-clear\", function() {\n     $.post('app/admin/settings/logo/logo-clear.php', \"\", function(data) {\n        $('div.logo-current').html(data).slideDown('fast');\n        //reload after 1 second if all is ok!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n\n/* show/hide smtp body */\n$('select#mtype').change(function() {\n\tvar type = $(this).find(\":selected\").val();\n\t//if localhost hide, otherwise show\n\tif(type === \"localhost\") \t{ $('#mailsettingstbl tbody#smtp').hide(); }\n\telse \t\t\t\t\t\t{ $('#mailsettingstbl tbody#smtp').show(); }\n});\n\n\n/*    Edit users\n***************************/\n//disable pass if domain user\n$(document).on(\"change\", \"form#usersEdit select[name=authMethod]\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var type = $(\"select[name=authMethod]\").find(\":selected\").val();\n    //we changed to domain\n    if(type == \"1\") { $('tbody#user_password').show(); }\n    else            { $('tbody#user_password').hide(); }\n});\n// toggle notificaitons for user\n$(document).on(\"change\", \"form#usersEdit select[name=role]\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var type = $(\"form#usersEdit select[name=role]\").find(\":selected\").val();\n    //we changed to domain\n    if(type == \"Administrator\") { $('tbody#user_notifications').show(); $('tbody.module_permissions').hide(); }\n    else            \t\t\t{ $('tbody#user_notifications').hide(); $('tbody.module_permissions').show(); }\n});\n\n// generate random pass\n$(document).on(\"click\", \"a#randomPass\", function() {\n    var password = randomPass();\n    $('input.userPass').val(password);\n    $(this).html( password );\n    return false;\n});\n//search domain popup\n$(document).on(\"click\", \".adsearchuser\", function() {\n\t$('#popupOverlay2 .popup_w500').load('app/admin/users/ad-search-form.php');\n    showPopup('popup_w500', false, true);\n    hideSpinner();\n});\n//search domain user result\n$(document).on(\"click\", \"#adsearchusersubmit\", function() {\n\tshowSpinner();\n\tvar dname = $('#dusername').val();\n\tvar server = $('#adserver').find(\":selected\").val();\n\t$.post('app/admin/users/ad-search-result.php', {dname:dname, server:server}, function(data) {\n\t\t$('div#adsearchuserresult').html(data)\n\t\thideSpinner();\n\t});\n});\n//get user data from result\n$(document).on(\"click\", \".userselect\", function() {\n\tvar uname \t \t= $(this).attr('data-uname');\n\tvar username \t= $(this).attr('data-username');\n\tvar email \t \t= $(this).attr('data-email');\n\tvar server \t \t= $(this).attr('data-server');\n\tvar server_type = $(this).attr('data-server-type');\n\n\t//fill\n\t$('form#usersEdit input[name=real_name]').val(uname);\n\t$('form#usersEdit input[name=username]').val(username);\n\t$('form#usersEdit input[name=email]').val(email);\n\t$('form#usersEdit select[name=authMethod]').val(server);\n\t//hide password\n\t$('tbody#user_password').hide();\n\t//check server type and fetch group membership\n\tif (server_type==\"AD\" || server_type==\"LDAP\") {\n\t\t$.post('app/admin/users/ad-search-result-groups-membership.php', {server:server,username:username}, function(data) {\n\t\t\t//some data found\n\t\t\tif(data.length>0) {\n\t\t\t\t// to array and check\n\t\t\t\tvar groups = data.replace(/\\s/g, '');\n\t\t\t\tgroups = groups.split(\";\");\n\t\t\t\tfor (m = 0; m < groups.length; ++m) {\n\t\t\t\t\t$(\"input[name='group\"+groups[m]+\"']\").attr('checked', \"checked\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\thidePopup2();\treturn false;\n});\n\n\n\n/* Groups\n***************************/\n//search AD group popup\n$(document).on(\"click\", \".adLookup\", function() {\n\t$('#popupOverlay div.popup_w700').load('app/admin/groups/ad-search-group-form.php');\n\n    showPopup('popup_w700');\n    hideSpinner();\n});\n//search AD domain groups\n$(document).on(\"click\", \"#adsearchgroupsubmit\", function() {\n\tshowSpinner();\n\tvar dfilter = $('#dfilter').val();\n\tvar server = $('#adserver').find(\":selected\").val();\n\t$.post('app/admin/groups/ad-search-group-result.php', {dfilter:dfilter, server:server}, function(data) {\n\t\t$('div#adsearchgroupresult').html(data)\n\t\thideSpinner();\n\t});\n});\n//search domaingroup  add\n$(document).on(\"click\", \".groupselect\", function() {\n\tshowSpinner();\n\tvar gname = $(this).attr(\"data-gname\");\n\tvar gdescription = $(this).attr(\"data-gdescription\");\n\tvar gmembers = $(this).attr(\"data-members\");\n\tvar gid = $(this).attr(\"data-gid\");\n\tvar csrf_cookie = $(this).attr(\"data-csrf_cookie\");\n\n\t$.post('app/admin/groups/edit-group-result.php', {action:\"add\", g_name:gname, g_desc:gdescription, gmembers:gmembers, csrf_cookie:csrf_cookie}, function(data) {\n\t\t$('div.adgroup-'+gid).html(data)\n\t\thideSpinner();\n\t});\treturn false;\n});\n\n\n\n/*    instructions\n***********************/\n$('#instructionsForm').submit(function () {\n    var csrf_cookie = $(\"#instructionsForm input[name=csrf_cookie]\").val();\n    var id = $(\"#instructionsForm input[name=id]\").val();\n\tvar instructions = CKEDITOR.instances.instructions.getData();\n\t$('div.instructionsPreview').hide('fast');\n\n    showSpinner();\n    $.post('app/admin/instructions/edit-result.php', {instructions:instructions, csrf_cookie:csrf_cookie, id:id}, function(data) {\n        $('div.instructionsResult').html(data).fadeIn('fast');\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1)     \t{ $('div.instructionsResult').delay(2000).fadeOut('slow'); hideSpinner(); }\n        else                             \t{ hideSpinner(); }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n$('#preview').click(function () {\n    showSpinner();\n    var instructions = CKEDITOR.instances.instructions.getData();\n\n    $.post('app/admin/instructions/preview.php', {instructions:instructions, csrf_cookie:$(\"#instructionsForm input[name=csrf_cookie]\").val()}, function(data) {\n        $('div.instructionsPreview').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*    log files\n************************/\n//display log files - selection change\n$('form#logs').change(function () {\n    showSpinner();\n    var logSelection = $('form#logs').serialize();\n    $.post('app/tools/logs/show-logs.php', logSelection, function(data) {\n        $('div.logs').html(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//log files show details\n$(document).on(\"click\", \"a.openLogDetail\", function() {\n    var id = $(this).attr('data-logid');\n    $.post('app/tools/logs/detail-popup.php', {id:id}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//log files page change\n$('#logDirection button').click(function() {\n    showSpinner();\n    /* get severities */\n    var logSelection = $('form#logs').serialize();\n    /* get first or last id based on direction */\n    var direction = $(this).attr('data-direction');\n    /* get Id */\n    var lastId;\n    if (direction == \"next\")     { lastId = $('table#logs tr:last').attr('id'); }\n    else                         { lastId = $('table#logs tr:nth-child(2)').attr('id'); }\n\n    /* set complete post */\n    var postData = logSelection + \"&direction=\" + direction + \"&lastId=\" + lastId;\n\n    /* show logs */\n    $.post('app/tools/logs/show-logs.php', postData, function(data1) {\n        $('div.logs').html(data1);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//logs export\n$('#downloadLogs').click(function() {\n    showSpinner();\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/tools/logs/export.php'></iframe></div>\");\n    hideSpinner();\n    //show downloading\n    $('div.logs').prepend(\"<div class='alert alert-info' id='logsInfo'><i class='icon-remove icon-gray selfDestruct'></i> Preparing download... </div>\");\n    return false;\n});\n//logs clear\n$('#clearLogs').click(function() {\n    showSpinner();\n    $.post('app/tools/logs/clear-logs.php', function(data) {\n    \t$('div.logs').html(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n// commit logs\n$('.log-tabs li a').click(function() {\n\t// navigation\n\t$('.log-tabs li').removeClass(\"active\");\n\t$(this).parent('li').addClass(\"active\");\n\t// load\n\t$('div.log-print').hide();\n\t$('div.'+$(this).attr(\"data-target\")).show();\treturn false;\n});\n\n// show changelog details popup\n$(document).on(\"click\", \".openChangelogDetail\", function() {\n    open_popup(\"700\", \"app/tools/changelog/show-popup.php\", {cid:$(this).attr('data-cid')})\n})\n\n\n/*    Sections\n********************************/\n//edit section result\n$(document).on(\"click\", \"#editSectionSubmit, .editSectionSubmitDelete\", function() {\n    showSpinner();\n    var sectionData = $('form#sectionEdit').serialize();\n\n\t//append deleteconfirm\n\tif($(this).attr('id') == \"editSectionSubmitDelete\") { sectionData += \"&deleteconfirm=yes\"; };\n\n    $.post('app/admin/sections/edit-result.php', sectionData, function(data) {\n        $('div.sectionEditResult').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//section ordering save\n$(document).on(\"click\", \"#sectionOrderSubmit\", function() {\n    showSpinner();\n\t//get all ids that are checked\n\tvar m = 0;\n\tvar lis = $('#sortableSec li').map(function(i,n) {\n\tvar pindex = $(this).index() +1;\n\t\treturn $(n).attr('id')+\":\"+pindex;\n\t}).get().join(';');\n\n\t//post\n\t$.post('app/admin/sections/edit-order-result.php', {position: lis}, function(data) {\n\t\t$('.sectionOrderResult').html(data).fadeIn('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    powerDNS\n********************************/\n\n//hide defaults\n$(document).on(\"click\", \".hideDefaults\", function () {\n    if ($(this).is(':checked')) { $(\"tbody.defaults\").hide(); }\n    else\t\t\t\t\t\t{ $(\"tbody.defaults\").show(); }\n});\n//submit form\n$(document).on(\"click\", \"#editDomainSubmit\", function() {\n    //dont reload if it cane from ip addresses\n    if ($(this).hasClass('editDomainSubmit2'))  {\n    \t// show spinner\n    \tshowSpinner();\n    \t// post\n        $.post(\"app/admin/powerDNS/domain-edit-result.php\", $('form#domainEdit').serialize(), function(data) {\n            $('#popupOverlay2 div.domain-edit-result').html(data).slideDown('fast');\n            //reload after 2 seconds if succeeded!\n\t        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1 && data.search(\"alert-warning\")==-1 ) {\n    \t        $.post(\"app/admin/powerDNS/record-edit.php\", {id:$('#popupOverlay .pContent .ip_dns_addr').html(),domain_id:$('#popupOverlay .pContent strong').html(),action:\"add\"}, function(data2) {\n        \t        $(\"#popupOverlay .popup_w700\").html(data2);\n    \t        });\n    \t        setTimeout(function (){ $('#popupOverlay2').fadeOut('fast'); }, 1500);\n    \t        setTimeout(function (){ hideSpinner(); }, 1500);\n    \t    }\n\t        else {\n    \t        hideSpinner();\n    \t    }\n        }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n        // prevent reload\n        return false;\n    }\n    else {\n        submit_popup_data (\".domain-edit-result\", \"app/admin/powerDNS/domain-edit-result.php\", $('form#domainEdit').serialize());\n    }\n});\n\n// refresh subnet PTR records\n$(document).on(\"click\", \".refreshPTRsubnet\", function() {\n\topen_popup(\"700\", \"app/admin/powerDNS/refresh-ptr-records.php\", {subnetId:$(this).attr('data-subnetId')} );\treturn false;\n});\n$(document).on(\"click\", \".refreshPTRsubnetSubmit\", function() {\n\tsubmit_popup_data (\".refreshPTRsubnetResult\", \"app/admin/powerDNS/refresh-ptr-records-submit.php\", {subnetId:$(this).attr('data-subnetId')} );\treturn false;\n});\n//edit record\n$(document).on(\"click\", \".editRecord\", function() {\n\topen_popup(\"700\", \"app/admin/powerDNS/record-edit.php\", {id:$(this).attr('data-id'),domain_id:$(this).attr('data-domain_id'), action:$(this).attr('data-action')} );\treturn false;\n});\n$(document).on(\"click\", \"#editRecordSubmit\", function() {\n    submit_popup_data (\".record-edit-result\", \"app/admin/powerDNS/record-edit-result.php\", $('form#recordEdit').serialize());\n});\n$(document).on(\"click\", \"#editRecordSubmitDelete\", function() {\n    var formData = $('form#recordEdit').serialize();\n    // replace edit action with delete\n    formData = formData.replace(\"action=edit\", \"action=delete\");\n    submit_popup_data (\".record-edit-result\", \"app/admin/powerDNS/record-edit-result.php\", formData);\n});\n\n\n/*    Firewall zones\n********************************/\n\n// firewall zone settings\n$('#firewallZoneSettings').submit(function() {\n    showSpinner();\n    var settings = $(this).serialize();\n    //load submit results\n    $.post('app/admin/firewall-zones/settings-save.php', settings, function(data) {\n        $('div.settingsEdit').html(data).slideDown('fast');\n        //reload after 1 second if all is ok!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n// zone edit menu\n// load edit form\n$(document).on(\"click\", \".editFirewallZone\", function() {\n    open_popup(\"700\", \"app/admin/firewall-zones/zones-edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n});\n\n//submit form\n$(document).on(\"click\", \"#editZoneSubmit\", function() {\n    submit_popup_data (\".zones-edit-result\", \"app/admin/firewall-zones/zones-edit-result.php\", $('form#zoneEdit').serialize());\n});\n\n// bind a subnet which is not part of a zone to an existing zone\n// load edit form\n\n$(document).on(\"click\", \".subnet_to_zone\", function() {\n    showSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var operation = $(this).attr('data-operation');\n    //format posted values\n    var postdata = \"operation=\"+operation+\"&subnetId=\"+subnetId;\n    $.post('app/admin/firewall-zones/subnet-to-zone.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n//submit form\n$(document).on(\"click\", \"#subnet-to-zone-submit\", function() {\n    submit_popup_data (\".subnet-to-zone-result\", \"app/admin/firewall-zones/subnet-to-zone-save.php\", $('form#subnet-to-zone-edit').serialize());\n});\n\n// trigger the check for any mapping of the selected zone\n$(document).on(\"change\", \".checkMapping\",(function () {\n    showSpinner();\n    var pData = $(this).serializeArray();\n    pData.push({name:'operation',value:'checkMapping'});\n\n    //load results\n    $.post('app/admin/firewall-zones/ajax.php', pData, function(data) {\n        $('div.mappingAdd').html(data).slideDown('fast');\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    hideSpinner();\n    return false;\n}));\n\n// add network to zone\n$(document).on(\"click\", \".editNetwork\", function() {\n     var pData = $('form#zoneEdit').serializeArray();\n     pData.push({name:'action',value:$(this).attr('data-action')});\n     pData.push({name:'subnetId',value:$(this).attr('data-subnetId')});\n     $('#popupOverlay2 .popup_w500').load('app/admin/firewall-zones/zones-edit-network.php',pData);\n    showPopup('popup_w500', false, true);\n    hideSpinner();\n});\n\n// remove a non persitent network from the selection\n$(document).on(\"click\", \".deleteTempNetwork\", function() {\n    // show spinner\n    showSpinner();\n    var filterName = 'network['+$(this).attr(\"data-subnetArrayKey\")+']';\n    var pData =$('form#zoneEdit :input[name != \"'+filterName+'\"][name *= \"network[\"]').serializeArray();\n    pData.push({name:'noZone',value:1});\n\n    // post\n    $.post(\"app/admin/firewall-zones/ajax.php\", pData , function(data) {\n        $('div'+\".zoneNetwork\").html(data).slideDown('fast');\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    setTimeout(function (){hideSpinner();}, 500);\n\n    return false;\n});\n\n//submit form network\n$(document).on(\"click\", \"#editNetworkSubmit\", function() {\n    // show spinner\n    showSpinner();\n    // set reload\n    reload = typeof reload !== 'undefined' ? reload : true;\n    // post\n    $.post(\"app/admin/firewall-zones/zones-edit-network-result.php\", $('form#networkEdit :input[name != \"sectionId\"]').serialize(), function(data) {\n        $('div'+\".zones-edit-network-result\").html(data).slideDown('fast');\n\n        if(reload) {\n            if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1 && data.search(\"alert-warning\") == -1 ) {\n                $.post(\"app/admin/firewall-zones/ajax.php\", $('form#networkEdit :input[name != \"sectionId\"]').serialize(), function(data) {\n                    $('div'+\".zoneNetwork\").html(data).slideDown('fast');\n                }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n                setTimeout(function (){hideSpinner();hidePopup2();}, 500);\n            } else { hideSpinner(); }\n        }\n        else {\n            hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    // prevent reload\n    return false;\n});\n\n// zone edit menu - ajax request to fetch all subnets for a specific section id\n$(document).on(\"change\", \".firewallZoneSection\",(function () {\n    showSpinner();\n    var pData = $(this).serializeArray();\n    pData.push({name:'operation',value:'fetchSectionSubnets'});\n    //load results\n    $.post('app/admin/firewall-zones/ajax.php', pData, function(data) {\n        $('div.sectionSubnets').html(data).slideDown('fast');\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    hideSpinner();\n    return false;\n}));\n\n// mapping edit menu\n// load edit form\n$(document).on(\"click\", \".editMapping\", function() {\n    open_popup(\"700\", \"app/admin/firewall-zones/mapping-edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n\n//submit form\n$(document).on(\"click\", \"#editMappingSubmit\", function() {\n    submit_popup_data (\".mapping-edit-result\", \"app/admin/firewall-zones/mapping-edit-result.php\", $('form#mappingEdit').serialize());\n});\n\n// mapping edit menu - ajax request to fetch all zone informations for the selected zone\n$(document).on(\"change\", \".mappingZoneInformation\",(function() {\n    showSpinner();\n    var pData = $(this).serializeArray();\n    pData.push({name:'operation',value:'deliverZoneDetail'});\n    //load results\n    $.post('app/admin/firewall-zones/ajax.php', pData, function(data) {\n        $('div.zoneInformation').html(data).slideDown('fast');\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    hideSpinner();\n    return false;\n}));\n\n/*    regenerate firewall address objects\n********************************************/\n// execute regeneration of the address object via ajax, reload the page to refresh the data\n$(document).on(\"click\", \"a.fw_autogen\", function() {\n    //build vars\n    var subnetId = $(this).attr('data-subnetid');\n    var IPId = $(this).attr('data-ipid');\n    var dnsName = $(this).attr('data-dnsname');\n    var action = $(this).attr('data-action');\n    var operation = 'autogen';\n\n    showSpinner();\n\n    // send information to ajax.php to generate a new address object\n    $.post('app/admin/firewall-zones/ajax.php', {subnetId:subnetId, IPId:IPId, dnsName:dnsName, action:action, operation:operation}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n    // hide the spinner and reload the window on success\n    setTimeout(function (){hideSpinner();window.location.reload();}, 500);\n\n    return false;\n});\n\n/*    Subnets\n********************************/\n//show subnets\n$('table#manageSubnets button[id^=\"subnet-\"]').click(function() {\n    showSpinner();\n    var swid = $(this).attr('id');                    //get id\n    // change icon to down\n    if( $('#content-'+swid).is(':visible') )     { $(this).children('i').removeClass('fa-angle-down').addClass('fa-angle-right'); }    //hide\n    else                                         { $(this).children('i').removeClass('fa-angle-right').addClass('fa-angle-down'); }    //show\n    //show content\n    $('table#manageSubnets tbody#content-'+swid).slideToggle('fast');\n    hideSpinner();\n});\n//toggle show all / none\n$('#toggleAllSwitches').click(function() {\n    showSpinner();\n    // show\n    if( $(this).children().hasClass('fa-compress') ) {\n        $(this).children().removeClass('fa-compress').addClass('fa-expand');            //change icon\n        $('table#manageSubnets i.fa-angle-down').removeClass('fa-angle-down').addClass('fa-angle-right');    //change section chevrons\n        $('table#manageSubnets tbody[id^=\"content-subnet-\"]').hide();                                //show content\n        createCookie('showSubnets',0,30);                                                            //save cookie\n    }\n    //hide\n    else {\n        $(this).children().removeClass('fa-expand').addClass('fa-compress');\n        $('table#manageSubnets tbody[id^=\"content-subnet-\"]').show();\n        $('table#manageSubnets i.fa-angle-right').removeClass('fa-angle-right').addClass('fa-angle-down');    //change section chevrons\n        createCookie('showSubnets',1,30);                                                            //save cookie\n    }\n    hideSpinner();\n});\n//load edit form\n$(document).on(\"click\", \".editSubnet\", function() {\n    showSpinner();\n    var sectionId   = $(this).attr('data-sectionid');\n    var subnetId    = $(this).attr('data-subnetid');\n    var action         = $(this).attr('data-action');\n    //format posted values\n    var postdata    = \"sectionId=\" + sectionId + \"&subnetId=\" + subnetId + \"&action=\" + action;\n\n    //load edit data\n    $.post(\"app/admin/subnets/edit.php\", postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n    return false;\n});\n//resize / split subnet\n$(document).on(\"click\", \"#resize, #split, #truncate, .subnet-truncate\", function() {\n\tshowSpinner();\n\tvar action = $(this).attr('id');\n\tvar subnetId = $(this).attr('data-subnetId');\n\t//dimm and show popup2\n    $.post(\"app/admin/subnets/\"+action+\".php\", {action:action, subnetId:subnetId}, function(data) {\n        showPopup('popup_w500', data, true);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//resize save\n$(document).on(\"click\", \"button#subnetResizeSubmit\", function() {\n\tshowSpinner();\n\tvar resize = $('form#subnetResize').serialize();\n\t$.post(\"app/admin/subnets/resize-save.php\", resize, function(data) {\n\t\t$('div.subnetResizeResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//split save\n$(document).on(\"click\", \"button#subnetSplitSubmit\", function() {\n\tshowSpinner();\n\tvar split = $('form#subnetSplit').serialize();\n\t$.post(\"app/admin/subnets/split-save.php\", split, function(data) {\n\t\t$('div.subnetSplitResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//truncate save\n$(document).on(\"click\", \"button#subnetTruncateSubmit\", function() {\n\tshowSpinner();\n\tvar subnetId = $(this).attr('data-subnetId');\n    var csrf_cookie = $(this).attr('data-csrf_cookie');\n\t$.post(\"app/admin/subnets/truncate-save.php\", {subnetId:subnetId, csrf_cookie:csrf_cookie}, function(data) {\n\t\t$('div.subnetTruncateResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n$(document).on(\"submit\", \"#editSubnetDetails\", function() {\treturn false;\n});\n//save edit subnet changes\n$(document).on(\"click\", \".editSubnetSubmit, .editSubnetSubmitDelete\", function() {\n\n    showSpinner();\n    var subnetData = $('form#editSubnetDetails').serialize();\n\n    //if ipaddress and delete then change action!\n    if($(this).hasClass(\"editSubnetSubmitDelete\")) {\n        subnetData = subnetData.replace(\"action=edit\", \"action=delete\");\n    }\n\t//append deleteconfirm\n\tif($(this).attr('id') == \"editSubnetSubmitDelete\") { subnetData += \"&deleteconfirm=yes\"; };\n\n    //load results\n    $.post(\"app/admin/subnets/edit-result.php\", subnetData, function(data) {\n        $('div.manageSubnetEditResult').html(data).slideDown('fast');\n\n        //reload after 2 seconds if all is ok!\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            showSpinner();\n            var sectionId;\n            var subnetId;\n            var parameter;\n            //reload IP address list if request came from there\n            if(subnetData.search(\"IPaddresses\") != -1) {\n                //from ipcalc - load ip list\n                sectionId = $('form#editSubnetDetails input[name=sectionId]').val();\n                subnetId  = $('form#editSubnetDetails input[name=subnetId]').val();\n\t            //check for .subnet_id_new if new subnet id present and set location\n\t            if($(\".subnet_id_new\").html()!==\"undefined\") {\n\t\t            var subnet_id_new = $(\".subnet_id_new\").html();\n\t\t            if (subnet_id_new % 1 === 0) {\n\t\t\t            // section\n\t\t\t            var section_id_new = $(\".section_id_new\").html();\n\t\t\t\t\t\t//lets try to detect IEto set location\n\t\t\t\t\t    var ua = window.navigator.userAgent;\n\t\t\t\t\t    var msie = ua.indexOf(\"MSIE \");\n\t\t\t\t\t    var edge = ua.indexOf(\"Edge/\");\n\t\t\t\t\t    //IE\n\t\t\t\t\t    if (msie > 0 || edge > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) \t{ var base = $('.iebase').html(); }\n\t\t\t\t\t    else \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ var base = \"\"; }\n\t\t\t\t\t    //go to search page\n\t\t\t\t\t    var prettyLinks = $('#prettyLinks').html();\n\t\t\t\t\t\tif(prettyLinks==\"Yes\")\t{ setTimeout(function (){window.location = base + \"subnets/\"+section_id_new+\"/\"+subnet_id_new+\"/\";}, 1500); }\n\t\t\t\t\t\telse\t\t\t\t\t{ setTimeout(function (){window.location = base + \"index.php?page=subnets&section=\"+section_id_new+\"&subnetId=\"+subnet_id_new;}, 1500); }\n\t\t            }\n\t\t            else {\n\t\t            \tsetTimeout(function (){window.location.reload();}, 1500);\n\t            \t}\n\t            }\n\t            else {\n\t\t             setTimeout(function (){window.location.reload();}, 1500);\n\t            }\n            }\n            //from free space\n            else if(subnetData.search(\"freespace\") != -1) {\n\t            setTimeout(function (){window.location.reload();}, 1500);\n            }\n            //from ipcalc - ignore\n            else if (subnetData.search(\"ipcalc\") != -1) {\n            }\n            //from admin\n            else {\n                //reload\n                setTimeout(function (){window.location.reload();}, 1500);\n            }\n        }\n        //hide spinner - error\n        else {\n            hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n//get subnet info from ripe database\n$(document).on(\"click\", \"#get-ripe\", function() {\n\tshowSpinner();\n\tvar subnet = $('form#editSubnetDetails input[name=subnet]').val();\n\n\t$.post(\"app/admin/subnets/ripe-query.php\", {subnet: subnet}, function(data) {\n        showPopup('popup_w500', data, true);\n\t\thideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n// fill ripe fields\n$(document).on('click', \"#ripeMatchSubmit\", function() {\n\tvar cfields_temp = $('form#ripe-fields').serialize();\n\t// to array\n\tvar cfields = cfields_temp.split(\"&\");\n\t// loop\n\tfor (index = 0; index < cfields.length; ++index) {\n\t\t// check for =0match and ignore\n\t\tif (cfields[index].indexOf(\"=0\") > -1) {}\n\t\telse {\n\t\t\tconsole.log(cfields[index]);\n\t\t\tvar cdata = cfields[index].split(\"=\");\n\t\t\t$('form#editSubnetDetails input[name='+cdata[1]+']').val(cdata[0].replace(/___/g, \" \"));\n\t\t}\n\t}\n\t// hide\n\thidePopup2();\n});\n//change subnet permissions\n$(document).on(\"click\", \".showSubnetPerm\", function () {\n\tshowSpinner();\n\tvar subnetId  = $(this).attr('data-subnetId');\n\tvar sectionId = $(this).attr('data-sectionId');\n\n\t$.post(\"app/admin/subnets/permissions-show.php\", {subnetId:subnetId, sectionId:sectionId}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//submit permission change\n$(document).on(\"click\", \".editSubnetPermissionsSubmit\", function() {\n\tshowSpinner();\n\tvar perms = $('form#editSubnetPermissions').serialize();\n\t$.post('app/admin/subnets/permissions-submit.php', perms, function(data) {\n\t\t$('.editSubnetPermissionsResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//auto-suggest possible slaves select\n$(document).on(\"click\", \".dropdown-subnets li a\", function() {\n\tvar subnet = $(this).attr('data-cidr');\n\tvar inputfield = $('form#editSubnetDetails input[name=subnet]');\n\t// fill\n\t$(inputfield).val(subnet);\n\t// hide\n\t$('.dropdown-subnets').parent().removeClass(\"open\");\treturn false;\n});\n\n// linked subnets\n$('.editSubnetLink').click(function() {\n    showSpinner();\n\t$.post(\"app/admin/subnets/linked-subnet.php\", {subnetId:$(this).attr('data-subnetId')}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n   return false;\n});\n$(document).on('click', '.linkSubnetSave', function() {\n    showSpinner();\n\t$.post('app/admin/subnets/linked-subnet-submit.php', $('form#editLinkedSubnet').serialize(), function(data) {\n\t\t$('.linkSubnetSaveResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    Add subnet from IPCalc result\n*********************************/\n$(document).on(\"click\", \"#createSubnetFromCalc\", function() {\n    $('tr#selectSection').show();\n});\n$(document).on(\"change\", \"select#selectSectionfromIPCalc\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var sectionId = $(this).val();\n    var subnet      = $('table.ipCalcResult td#sub2').html();\n    var bitmask      = $('table.ipCalcResult td#sub4').html();\n    // ipv6 override\n    if ($(\"table.ipCalcResult td#sub0\").html() == \"IPv6\") {\n    \tvar postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + $('table.ipCalcResult td#sub3').html() + \"&bitmask=&action=add&location=ipcalc\";\n    } else {\n\t    var postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + subnet + \"&bitmask=\" + bitmask + \"&action=add&location=ipcalc\";\n    }\n    //make section active\n    $('table.newSections ul#sections li#' + sectionId ).addClass('active');\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n$(document).on(\"click\", \".createfromfree\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var sectionId = $(this).attr('data-sectionId');\n    var cidr      = $(this).attr('data-cidr');\n    var freespaceMSISD = $(this).attr('data-masterSubnetId');\n    var cidrArr   = cidr.split('/');\n    var subnet    = cidrArr[0];\n    var bitmask   = cidrArr[1];\n    var postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + subnet + \"&bitmask=\" + bitmask + \"&freespaceMSID=\" + freespaceMSISD + \"&action=add&location=ipcalc\";\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n/*    Edit subnet from ip address list\n************************************/\n$(document).on(\"click\", '.edit_subnet, button.edit_subnet, button#add_subnet', function() {\n    var subnetId  = $(this).attr('data-subnetId');\n    var sectionId = $(this).attr('data-sectionId');\n    var action    = $(this).attr('data-action');\n\n    //format posted values\n    var postdata     = \"sectionId=\"+sectionId+\"&subnetId=\"+subnetId+\"&action=\"+action+\"&location=IPaddresses\";\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/* Show add new VLAN on subnet add/edit on-thy-fly\n***************************************************/\n$(document).on(\"change\", \"select[name=vlanId]\", function() {\n    var domain = $(\"select[name=vlanId] option:selected\").attr('data-domain');\n    if($(this).val() == 'Add') {\n        showSpinner();\n        $.post('app/admin/vlans/edit.php', {action:\"add\", fromSubnet:\"true\", domain:domain}, function(data) {\n            showPopup('popup_w400', data, true);\n            hideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    }\n    return false;\n});\n//Submit new VLAN on the fly\n$(document).on(\"click\", \".vlanManagementEditFromSubnetButton\", function() {\n    showSpinner();\n    //get new vlan details\n    var postData = $('form#vlanManagementEditFromSubnet').serialize();\n\t//add to save script\n    $.post('app/admin/vlans/edit-result.php', postData, function(data) {\n        $('div.vlanManagementEditFromSubnetResult').html(data).show();\n        // ok\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            var vlanId\t  = $('#vlanidforonthefly').html();\n            var sectionId = $('#editSubnetDetails input[name=sectionId]').val();\n            $.post('app/admin/subnets/edit-vlan-dropdown.php', {vlanId:vlanId, sectionId:sectionId} , function(data) {\n                $('.editSubnetDetails td#vlanDropdown').html(data);\n                hideSpinner();\n\t\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n            //hide popup after 1 second\n            setTimeout(function (){ hidePopup('popup_w400', true); hidePopup2(); parameter = null;}, 1000);\n        }\n        else                      { hideSpinner(); }\n    });\n    return false;\n});\n// filter vlans\n$('.vlansearchsubmit').click(function() {\n\tshowSpinner();\n\tvar search = $('input.vlanfilter').val();\n\tvar location = $('input.vlanfilter').attr('data-location');\n    //go to search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ setTimeout(function (){window.location = location +search+\"/\";}, 500); }\n\telse\t\t\t\t\t{ setTimeout(function (){window.location = location + \"&sPage=\"+search;}, 500); }\n\n\n    //go to search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ setTimeout(function (){window.location = base + \"subnets/\"+section_id_new+\"/\"+subnet_id_new+\"/\";}, 1500); }\n\telse\t\t\t\t\t{ setTimeout(function (){window.location = base + \"index.php?page=subnets&section=\"+section_id_new+\"&subnetId=\"+subnet_id_new;}, 1500); }\treturn false;\n});\n\n\n\n\n\n\n/*\tFolders\n************************************/\n//create new folder popup\n$(document).on(\"click\", \"#add_folder, .add_folder\", function() {\n\tshowSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var sectionId = $(this).attr('data-sectionId');\n    var action    = $(this).attr('data-action');\n    //format posted values\n    var postdata     = \"sectionId=\"+sectionId+\"&subnetId=\"+subnetId+\"&action=\"+action+\"&location=IPaddresses\";\n\n    $.post('app/admin/subnets/edit-folder.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n    return false;\n});\n//submit folder changes\n$(document).on(\"click\", \".editFolderSubmit\", function() {\n\tshowSpinner();\n\tvar postData = $('form#editFolderDetails').serialize();\n\t$.post('app/admin/subnets/edit-folder-result.php', postData, function(data) {\n\t\t$('.manageFolderEditResult').html(\"\").html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//delete folder\n$(document).on(\"click\", \".editFolderSubmitDelete\", function() {\n\tshowSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var description = $('form#editFolderDetails #field-description').val();\n    var csrf_cookie = $('form#editFolderDetails input[name=csrf_cookie]').val();\n    //format posted values\n    var postData     = \"subnetId=\"+subnetId+\"&description=\"+description+\"&action=delete\"+\"&csrf_cookie=\"+csrf_cookie;\n\t//append deleteconfirm\n\tif($(this).attr('id') == \"editFolderSubmitDelete\") { postData += \"&deleteconfirm=yes\"; };\n\t$.post('app/admin/subnets/edit-folder-result.php', postData, function(data) {\n\t\t$('.manageFolderEditResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n\n\n/* ---- Devices ----- */\n//submit form\n$(document).on(\"click\", \"#editSwitchsubmit\", function() {\n    submit_popup_data (\".switchManagementEditResult\", \"app/admin/devices/edit-result.php\", $('form#switchManagementEdit').serialize());\n});\n//submit form\n$(document).on(\"click\", \"#editSwitchSNMPsubmit\", function() {\n    submit_popup_data (\".switchSNMPManagementEditResult\", \"app/admin/devices/edit-snmp-result.php\", $('form#switchSNMPManagementEdit').serialize());\n});\n//snmp test\n$(document).on(\"click\", \"#test-snmp\", function() {\n\topen_popup (\"700\", \"app/admin/devices/edit-snmp-test.php\", $('form#switchSNMPManagementEdit').serialize(), true);\treturn false;\n});\n//snmp route query popup\n$(document).on(\"click\", \"#snmp-routing\", function() {\n    open_popup (\"700\", \"app/subnets/scan/subnet-scan-execute-snmp-route.php\", \"\", true);\n    return false;\n});\n\n//snmp vlan query popup\n$(document).on(\"click\", \"#snmp-vlan\", function() {\n    open_popup (\"700\", \"app/admin/vlans/vlans-scan.php\", {domainId:$(this).attr('data-domainid')}, true);\n    return false;\n});\n//snmp vlan query execute\n$(document).on(\"click\", \".show-vlan-scan-result\", function() {\n    submit_popup_data (\".vlan-scan-result\", \"app/admin/vlans/vlans-scan-execute.php\", $('form#select-devices-vlan-scan').serialize(), true);\n    return false;\n});\n// submit vlan query result\n$(document).on(\"click\", \"#saveVlanScanResults\", function() {\n    submit_popup_data (\"#vlanScanAddResult\", \"app/admin/vlans/vlans-scan-result.php\", $('form#scan-snmp-vlan-form').serialize());\n    return false;\n});\n\n//snmp vrf query popup\n$(document).on(\"click\", \"#snmp-vrf\", function() {\n    open_popup (\"700\", \"app/admin/vrf/vrf-scan.php\", {}, true);\n    return false;\n});\n//snmp vrf query execute\n$(document).on(\"click\", \".show-vrf-scan-result\", function() {\n    submit_popup_data (\".vrf-scan-result\", \"app/admin/vrf/vrf-scan-execute.php\", $('form#select-devices-vrf-scan').serialize(), true);\n    return false;\n});\n// submit vrf query result\n$(document).on(\"click\", \"#saveVrfScanResults\", function() {\n    submit_popup_data (\"#vrfScanAddResult\", \"app/admin/vrf/vrf-scan-result.php\", $('form#scan-snmp-vrf-form').serialize());\n    return false;\n});\n\n//snmp select subnet to add to new subnet\n$(document).on(\"click\", \".select-snmp-subnet\", function() {\n    $('form#editSubnetDetails input[name=subnet]').val($(this).attr('data-subnet')+\"/\"+$(this).attr('data-mask'));\n    hidePopup2();\n    return false;\n});\n//snmp route query popup - section search\n$(document).on(\"click\", \"#snmp-routing-section\", function() {\n    open_popup (\"masks\", \"app/subnets/scan/subnet-scan-execute-snmp-route-all.php\", {sectionId:$(this).attr('data-sectionId'), subnetId:$(this).attr('data-subnetId')});\n    return false;\n});\n//remove all results for device\n$(document).on(\"click\", \".remove-snmp-results\", function () {\n    $(\"tbody#\"+$(this).attr('data-target')).remove();\n    $(this).parent().remove();\n});\n//remove subnet from found subnet list\n$(document).on(\"click\", \".remove-snmp-subnet\", function() {\n   $('#editSubnetDetailsSNMPallTable tr#tr-' + $(this).attr('data-target-subnet')).remove();\n   return false;\n});\n///add subnets to section\n$(document).on(\"click\", \"#add-subnets-to-section-snmp\", function() {\n   submit_popup_data (\".add-subnets-to-section-snmp-result\", \"app/subnets/scan/subnet-scan-result-snmp-route-all.php\", $('form#editSubnetDetailsSNMPall').serialize());\n   return false;\n});\n\n\n\n/* ---- Device types ----- */\n//load edit form\n$(document).on(\"click\", \".editDevType\", function() {\n\topen_popup(\"400\", \"app/admin/device-types/edit.php\", {tid:$(this).attr('data-tid'), action:$(this).attr('data-action')} );\n});\n//submit form\n$(document).on(\"click\", \"#editDevTypeSubmit\", function() {\n    submit_popup_data (\".devTypeEditResult\", \"app/admin/device-types/edit-result.php\", $('form#devTypeEdit').serialize());\n});\n\n/* ---- RACKS ----- */\n//load edit form\n$(document).on(\"click\", \".editRack\", function() {\n\topen_popup(\"400\", \"app/admin/racks/edit.php\", {rackid:$(this).attr('data-rackid'), action:$(this).attr('data-action')} );\treturn false;\n});\n//load edit rack devices form\n$(document).on(\"click\", \".editRackDevice\", function() {\n\topen_popup(\"400\", \"app/admin/racks/edit-rack-devices.php\", {rackid:$(this).attr('data-rackid'), deviceid:$(this).attr('data-deviceid'), devicetype:$(this).attr('data-devicetype'), action:$(this).attr('data-action'),csrf_cookie:$(this).attr('data-csrf')} );\treturn false;\n});\n//submit edit rack devices form\n$(document).on(\"click\", \"#editRackDevicesubmit\", function() {\n    submit_popup_data (\".rackDeviceManagementEditResult\", \"app/admin/racks/edit-rack-devices-result.php\", $('form#rackDeviceManagementEdit').serialize());\n});\n//show popup image\n$(document).on(\"click\", \".showRackPopup\", function() {\n\topen_popup(\"400\", \"app/tools/racks/show-rack-popup.php\", {rackid:$(this).attr('data-rackid'), deviceid:$(this).attr('data-deviceid')}, true );\treturn false;\n});\n\n\n/* ---- Locations ----- */\n//submit form\n$(document).on(\"click\", \"#editLocationSubmit\", function() {\n    submit_popup_data (\".editLocationResult\", \"app/admin/locations/edit-result.php\", $('form#editLocation').serialize());\n    return false;\n});\n\n\n\n/* ---- PSTN ---- */\n//load edit form\n$(document).on(\"click\", \".editPSTN\", function() {\n\topen_popup(\"700\", \"app/tools/pstn-prefixes/edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n//submit form\n$(document).on(\"click\", \"#editPSTNSubmit\", function() {\n    submit_popup_data (\".editPSTNResult\", \"app/tools/pstn-prefixes/edit-result.php\", $('form#editPSTN').serialize());\n    return false;\n});\n//load edit form\n$(document).on(\"click\", \".editPSTNnumber\", function() {\n\topen_popup(\"700\", \"app/tools/pstn-prefixes/edit-number.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n//submit form\n$(document).on(\"click\", \"#editPSTNnumberSubmit\", function() {\n    submit_popup_data (\".editPSTNnumberResult\", \"app/tools/pstn-prefixes/edit-number-result.php\", $('form#editPSTNnumber').serialize());\n    return false;\n});\n\n\n\n\n/* ---- NAT ----- */\n//load edit form\n$(document).on(\"click\", \".editNat\", function() {\n\topen_popup(\"700\", \"app/admin/nat/edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n//load edit form from subnets/addresses\n$(document).on(\"click\", \".mapNat\", function() {\n\topen_popup(\"700\", \"app/admin/nat/edit-map.php\", {id:$(this).attr('data-id'), object_type:$(this).attr('data-object-type'), object_id:$(this).attr('data-object-id')} );\n    return false;\n});\n//submit form\n$(document).on(\"click\", \"#editNatSubmit\", function() {\n    // action\n    var action = $('form#editNat input[name=action]').val();\n\n    if (action!==\"add\") {\n        submit_popup_data (\".editNatResult\", \"app/admin/nat/edit-result.php\", $('form#editNat').serialize());\n    }\n    else {\n        $.post(\"app/admin/nat/edit-result.php\", $('form#editNat').serialize(), function(data) {\n            $('.editNatResult').html(data);\n            if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n                setTimeout(function (){ open_popup(\"700\", \"app/admin/nat/edit.php\", {id:$('div.new_nat_id').html(), action:\"edit\"} ); hidePopup2(); parameter = null;}, 1000);\n            }\n            else {\n                hideSpinner();\n            }\n        }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n        return false;\n    }\n});\n// remove item\n$(document).on(\"click\", \".removeNatItem\", function() {\n    var id = $(this).attr('data-id');\n    showSpinner();\n\n    $.post(\"app/admin/nat/item-remove.php\", {id:$(this).attr('data-id'), type:$(this).attr('data-type'), item_id:$(this).attr('data-item-id'), csrf_cookie:$('form#editNat input[name=csrf_cookie]').val()}, function(data) {\n        $('#popupOverlay2 div.popup_w500').html(data);\n        showPopup('popup_w700', data, true);\n\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            setTimeout(function (){ open_popup(\"700\", \"app/admin/nat/edit.php\", {id:id, action:\"edit\"} ); hidePopup2(); parameter = null;}, 1000);\n        }\n        else {\n            hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n// add item popup\n$(document).on(\"click\", \".addNatItem\", function() {\n\topen_popup(\"700\", \"app/admin/nat/item-add.php\", {id:$(this).attr('data-id'), type:$(this).attr('data-type'), object_type:$(this).attr('data-object-type'), object_id:$(this).attr('data-object-id')}, true);\n    return false;\n});\n// search item\n$(document).on(\"submit\", \"form#search_nats\", function() {\n    showSpinner();\n    $.post(\"app/admin/nat/item-add-search.php\", $(this).serialize(), function(data) {\n        $('#nat_search_results').html(data);\n        hideSpinner();\n    });\n    return false;\n})\n// search result item select\n$(document).on(\"click\", \"a.addNatObjectFromSearch\", function() {\n    var id = $(this).attr('data-id');\n    var reload = $(this).attr('data-reload');\n    showSpinner();\n    $.post(\"app/admin/nat/item-add-submit.php\", {id:$(this).attr('data-id'), type:$(this).attr('data-type'), object_type:$(this).attr('data-object-type'), object_id:$(this).attr('data-object-id')}, function(data) {\n        $('#nat_search_results_commit').html(data);\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            if(reload == \"true\") {\n                reload_window (data);\n            }\n            else {\n                setTimeout(function (){ open_popup(\"700\", \"app/admin/nat/edit.php\", {id:id, action:\"edit\"} ); hidePopup2(); parameter = null;}, 1000);\n            }\n        }\n        else {\n            hideSpinner();\n        }\n    });\n    return false;\n})\n\n\n\n/* ---- tags ----- */\n//load edit form\n$(document).on(\"click\", \".editType\", function() {\n\topen_popup(\"400\", \"app/admin/tags/edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n});\n//submit form\n$(document).on(\"click\", \"#editTypesubmit\", function() {\n    submit_popup_data (\".editTypeResult\", \"app/admin/tags/edit-result.php\", $('form#editType').serialize());\n});\n\n\n/* ---- VLANs ----- */\n//submit form\n$(document).on(\"click\", \"#editVLANsubmit\", function() {\n    submit_popup_data (\".vlanManagementEditResult\", \"app/admin/vlans/edit-result.php\", $('form#vlanManagementEdit').serialize());\n});\n\n\n/* ---- VLAN domains ----- */\n//submit form\n$(document).on(\"click\", \"#editVLANdomainsubmit\", function() {\n    submit_popup_data (\".domainEditResult\", \"app/admin/vlans/edit-domain-result.php\", $('form#editVLANdomain').serialize());\n});\n\n\n/* ---- VRF ----- */\n//submit form\n$(document).on(\"click\", \"#editVRF\", function() {\n    submit_popup_data (\".vrfManagementEditResult\", \"app/admin/vrf/edit-result.php\", $('form#vrfManagementEdit').serialize());\n});\n\n/* ---- Nameservers ----- */\n// add new\n$(document).on(\"click\", \"#add_nameserver\", function() {\n\tshowSpinner();\n\t//get old number\n\tvar num = $(this).attr(\"data-id\");\n\t// append\n\t$('table#nameserverManagementEdit2 tbody#nameservers').append(\"<tr id='namesrv-\"+num+\"'><td>Nameserver \"+num+\"</td><td><input type='text' class='rd form-control input-sm' name='namesrv-\"+num+\"'></input><td><button class='btn btn-sm btn-default' id='remove_nameserver' data-id='namesrv-\"+num+\"'><i class='fa fa-trash-o'></i></buttom></td></td></tr>\");\n\t// add number\n\tnum++;\n\t$(this).attr(\"data-id\", num);\n\n\thideSpinner();\treturn false;\n});\n// remove\n$(document).on(\"click\", \"#remove_nameserver\", function() {\n\tshowSpinner();\n\t//get old number\n\tvar id = $(this).attr(\"data-id\");\n\t// append\n\tvar el = document.getElementById(id);\n\tel.parentNode.removeChild(el);\n\n\thideSpinner();\treturn false;\n});\n\n/* ---- IP requests ----- */\n//submit form\n$(document).on(\"click\", \"button.manageRequest\", function() {\n    var postValues = $('form.manageRequestEdit').serialize();\n    var action     = $(this).attr('data-action');\n    var postData   = postValues+\"&action=\"+action;\n    // submit\n    submit_popup_data (\".manageRequestResult\", \"app/admin/requests/edit-result.php\", postData);\n});\n\n\n/* ---- Share subnet ----- */\n//remove temp\n$(document).on(\"click\", \".removeSharedTemp\", function() {\n\tshowPopup(\"popup_w400\");\n    submit_popup_data (\"#popupOverlay .popup_w400\", \"app/tools/temp-shares/delete-result.php\", {code:$(this).attr('data-code')});\n    hideSpinner();\n});\n\n\n\n/*    Ripe AS import\n****************************/\n//get subnets form AS\n$('form#ripeImport').submit(function() {\n    showSpinner();\n    var as = $(this).serialize();\n    $.post('app/admin/ripe-import/ripe-telnet.php', as, function(data) {\n        $('div.ripeImportTelnet').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n// remove as line\n$(document).on(\"click\", \"table.asImport .removeSubnet\", function() {\n    $(this).parent('tr').remove();\n    hideTooltips();\n});\n// add selected to db\n$(document).on(\"submit\", \"form#asImport\", function() {\n    showSpinner();\n    //get subnets to add\n    var importData = $(this).serialize();\n    $.post('app/admin/ripe-import/import-subnets.php', importData, function(data) {\n        $('div.ripeImportResult').html(data).slideDown('fast');\n        //hide after 2 seconds\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1)     { $('table.asImport').delay(1000).fadeOut('fast'); hideSpinner(); }\n        else                             { hideSpinner(); }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n/*    custom fields - general\n************************************/\n\n//show edit form\n$(document).on(\"click\", \".edit-custom-field\", function() {\n    showSpinner();\n    var action    = $(this).attr('data-action');\n    var fieldName = $(this).attr('data-fieldname');\n    var table\t  = $(this).attr('data-table');\n    $.post('app/admin/custom-fields/edit.php',  {action:action, fieldName:fieldName, table:table}, function(data) {\n        $('#popupOverlay div.popup_w400').html(data);\n        showPopup('popup_w400');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//submit change\n$(document).on(\"click\", \"#editcustomSubmit\", function() {\n    showSpinner();\n    var field = $('form#editCustomFields').serialize();\n    $.post('app/admin/custom-fields/edit-result.php', field, function(data) {\n        $('div.customEditResult').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//field reordering\n$('table.customIP button.down').click(function() {\n    showSpinner();\n    var current  = $(this).attr('data-fieldname');\n    var next     = $(this).attr('data-nextfieldname');\n    var table\t = $(this).attr('data-table');\n    $.post('app/admin/custom-fields/order.php', {current:current, next:next, table:table}, function(data) {\n        $('div.'+table+'-order-result').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//filter\n$('.edit-custom-filter').click(function() {\n\tshowSpinner();\n\tvar table = $(this).attr('data-table');\n    $.post('app/admin/custom-fields/filter.php',  {table:table}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n$(document).on(\"click\", \"#editcustomFilterSubmit\", function() {\n    showSpinner();\n    var field = $('form#editCustomFieldsFilter').serialize();\n    $.post('app/admin/custom-fields/filter-result.php', field, function(data) {\n        $('div.customEditFilterResult').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n/* API, agents regenerate code\n*********/\n//regenerate API key\n$(document).on('click', \"#regApiKey\", function() {\n\tshowSpinner();\n    $.post('app/admin/api/generate-key.php', function(data) {\n        $('input#appcode').val(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//regenerate agent key\n$(document).on('click', \"#regAgentKey\", function() {\n\tshowSpinner();\n    $.post('app/admin/api/generate-key.php', function(data) {\n        $('input[name=code]').val(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n\n/*    Search and replace\n************************/\n$('button#searchReplaceSave').click(function() {\n    showSpinner();\n    var searchData = $('form#searchReplace').serialize();\n    $.post('app/admin/replace-fields/result.php', searchData, function(data) {\n        $('div.searchReplaceResult').html(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*  Data Import / Export\n*************************/\n// dump database\n$('button#XLSdump, button#MySQLdump, button#hostfileDump').click(function () {\n    showSpinner();\n    var script = \"\"\n    // define script\n    if ($(this).attr('id')==\"XLSdump\")              { script = \"generate-xls.php\"; }\n    else if ($(this).attr('id')==\"MySQLdump\")       { script = \"generate-mysql.php\"; }\n    else if ($(this).attr('id')==\"hostfileDump\")    { script = \"generate-hosts.php\"; }\n\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/\"+script+\"'></iframe></div>\");\n    hideSpinner();\n});\n\n\n//Export Section\n$('button.dataExport').click(function () {\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\"]; var popsize = {};\n\tpopsize[\"subnets\"] = \"w700\";\n\tpopsize[\"ipaddr\"] = \"w700\";\n\tpopsize[\"devices\"] = \"max\";\n\tvar dataType = $('select[name=dataType]').find(\":selected\").val();\n\thidePopups();\n    //show popup window\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/export-' + dataType + '-field-select.php', function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\t\tshowPopup('popup_w400');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n//export buttons\n$(document).on(\"click\", \"button#dataExportSubmit\", function() {\n    //get selected fields\n\tvar dataType = $(this).attr('data-type');\n    var exportFields = $('form#selectExportFields').serialize();\n\t//show popup window\n\tswitch(dataType) {\n\t\tcase 'vrf':\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-vrf.php?\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'vlan':\n\t\t\tvar exportDomains = $('form#selectExportDomains').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-vlan.php?\" + exportDomains + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'subnets':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-subnets.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'ipaddr':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-ipaddr.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'l2dom':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-l2dom.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'devices':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-devices.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'devtype':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-devtype.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t}\n    return false;\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#exportSelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#exportCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //deselect all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#exportCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeSectionSelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeSectionCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeSectionCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeIPv4SelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeIPv4Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeIPv4Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeIPv6SelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeIPv6Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeIPv6Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeCVRFSelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeCVRFCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeCVRFCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n//Import Section\n$('button.dataImport').click(function () {\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"recompute\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\"]; var popsize = {};\n\tpopsize[\"subnets\"] = \"max\";\n\tpopsize[\"ipaddr\"] = \"max\";\n\tpopsize[\"devices\"] = \"max\";\n\tvar dataType = $('select[name=dataType]').find(\":selected\").val();\n\thidePopups();\n    //show popup window, if implemented\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/import-' + dataType + '-select.php', function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w700').html(data);\n\t\t\tshowPopup('popup_w700');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n//import buttons\n$(document).on(\"click\", \"button#dataImportPreview\", function() {\n    //get data from previous window\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"recompute\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\" ]; var popsize = {};\n\tpopsize[\"subnets\"] = \"max\";\n\tpopsize[\"recompute\"] = \"max\";\n\tpopsize[\"ipaddr\"] = \"max\";\n\tpopsize[\"devices\"] = \"max\";\n\n\tvar dataType = $(this).attr('data-type');\n    var importFields = $('form#selectImportFields').serialize();\n\thidePopups();\n    //show popup window, if implemented\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/import-' + dataType + '-preview.php?' + importFields, function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w700').html(data);\n\t\t\tshowPopup('popup_w700');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n$(document).on(\"click\", \"button#dataImportSubmit\", function() {\n    //get data from previous window\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"recompute\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\" ]; var popsize = {};\n\tpopsize[\"subnets\"] = \"max\";\n\tpopsize[\"recompute\"] = \"max\";\n\tpopsize[\"ipaddr\"] = \"max\";\n\tpopsize[\"devices\"] = \"max\";\n\tvar dataType = $(this).attr('data-type');\n    var importFields = $('form#selectImportFields').serialize();\n\thidePopups();\n    //show popup window, if implemented\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/import-' + dataType + '.php?' + importFields, function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w700').html(data);\n\t\t\tshowPopup('popup_w700');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n// recompute button\n$('button.dataRecompute').click(function () {\n\tshowSpinner();\n\t$.post('app/admin/import-export/import-recompute-select.php', function(data) {\n\t$('#popupOverlay div.popup_w700').html(data);\n\tshowPopup('popup_w700');\n\thideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*\tFix database\n***********************/\n$(document).on('click', '.btn-tablefix', function() {\n\tvar tableid = $(this).attr('data-tableid');\n\tvar fieldid = $(this).attr('data-fieldid');\n\tvar type \t= $(this).attr('data-type');\n    $.post('app/admin/verify-database/fix.php', {tableid:tableid, fieldid:fieldid, type:type}, function(data) {\n        $('div#fix-result-'+tableid+fieldid).html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/* Bootstap table\n***********************/\n$('table#manageSubnets').on('click','button.editSubnet', function() {\n    showSpinner();\n    var sectionId   = $(this).attr('data-sectionid');\n    var subnetId    = $(this).attr('data-subnetid');\n    var action         = $(this).attr('data-action');\n    //format posted values\n    var postdata    = \"sectionId=\" + sectionId + \"&subnetId=\" + subnetId + \"&action=\" + action;\n\n    //load edit data\n    $.post(\"app/admin/subnets/edit.php\", postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); }); return false;\n});\n//change subnet permissions\n$('table#manageSubnets').on('click','button.showSubnetPerm', function() {\n\tshowSpinner();\n\tvar subnetId  = $(this).attr('data-subnetId');\n\tvar sectionId = $(this).attr('data-sectionId');\n\n\t$.post(\"app/admin/subnets/permissions-show.php\", {subnetId:subnetId, sectionId:sectionId}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); }); return false;\n});\n$('table#manageSubnets').on('click','button.add_folder', function() {\n\tshowSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var sectionId = $(this).attr('data-sectionId');\n    var action    = $(this).attr('data-action');\n    //format posted values\n    var postdata     = \"sectionId=\"+sectionId+\"&subnetId=\"+subnetId+\"&action=\"+action+\"&location=IPaddresses\";\n\n    $.post('app/admin/subnets/edit-folder.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); }); return false;\n});\n\nreturn false;\n});", "== 1.4\n\n    New features:\n    ------------\n    + Configurable password policy;\n    + Sessions can be now stored in database (#516);\n    + Two-factor authenticaiton - otp (Google Authenticator);\n    + Customers module (#694);\n    + Search for free subnet inside whole section;\n\n    Enhancements, changes:\n    ----------------------------\n    + Circuits enhancements (Virtual Circuits);\n    + Dropped support for 32bit systems;\n    + PHP 5.4 is now required;\n    + Added comressed actions dropdown;\n    + Rack module enhancements (#1325):\n        + Dynamic rack sizes;\n        + Top-down / Bottom-up racks;\n        + Custom rack devices independant of devices (power, patchpanel);\n    + Customized user permissions for modules:\n        + VLAN module;\n        + VRF module;\n        + PowerDNS module;\n        + Circuits module;\n        + Customers module;\n        + Devices module;\n        + Rack module;\n        + NAT module;\n        + PSTN module;\n        + Locations module;\n    + API:\n        + New API security type - SSL with app code (static app code);\n        + New config.php option $api_allow_unsafe to allow non-SSL API queries;\n        + Added last access field to api;\n        + Add Mac Search for Addresses controller (#2005);\n\n    Bugfixes:\n    ----------------------------\n    + Fix appended \" U\" in Rack description (#2046);\n    + Fix Bandwidth calculator - 400 Bad Request. (#1807);\n    + Fix bad DNS reverse zone for /23 subnet (#666);\n    + Fix Add missing standard field (#2153);\n    + Fix Consistency of VARCHAR Size on 'owner' column across tables (#2136);\n    + API:\n        + Fix inconsistant API success value returned (#2045);\n\n    Security Fixes:\n    ----------------------------\n    + Hide SNMP community (#2197);\n    + Hide LDAP/AD/Radius username / password and secret from logs and syslog (#2006);\n    + XSS in phpipamredirect cookie (#2338);\n    + XSS in print-user.php, CSRF in user-edit.php (#2326);\n    + Possible SQL injection in nat/item-add-submit.php (#2344);\n    + Fixed possible file inclusion in editing authenticaiton methods;\n\n== 1.3.2\n\n    Enhancements, changes:\n    ----------------------------\n    + Dark theme added;\n    + Full php7.2 compatibility;\n    + url_rewrite has changed, please use new rewrite scheme (https://phpipam.net/news/new_rewrite_scheme/);\n    + Search for matching subnet in all VRFs feature enabled when importing addresses;\n    + Added new config option to show custom fields separated from standard fields when editing IP address;\n    + Added Required fields subpage to define IP address fields that must be filled in;\n    + Performance + bug fixes (#1660, #1657);\n    + MasterSubnet dropdown list is dynamically generated via AJAX call;\n    + Bandwidth calculator;\n    + Support 8U rack sizes. (#1891);\n    + API:\n        + New last_subnet API calls (#1655);\n\n    Translations:\n    ----------------------------\n    + German translation updated to verson 1.3.1;\n    + French translations updated. (#1881);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed uncaught error if vlan number exceeds max permitted (#1455);\n    + Fixed Illegal string offset 'dns_name' in pingCheck.php errors (#1461);\n    + Performance fix for subnet_dropdown_print_available (#1562);\n    + Fixed logo updater for apache v2.4 (#1582);\n    + Fixed section names containing spaces are not included in exports (#1566);\n    + Allow DNS wildcard records (#1571);\n    + Fixed slow mac address vendor decoding for subnet detail view (#1658);\n    + Performance fix for detecting overlapping subnets. (#1052, #1426, #1533);\n    + Performance fix for slow mac address vendor decoding (#1658);\n    + Performance fix for subnet API first_subnet & all_subnets calls;\n    + Performance fix for delegating subnet permissions;\n    + Convert to UTF-8 encoding on import/export to preserve dialectics (#1659, #1700, #1728);\n    + Importing IPs loose Mac Addresses (#1607);\n    + Section names containing spaces are not included in exports. (#1566);\n    + Bug with section and dashboard (#1593);\n    + Fixed improper contents in plain text part of notification e-mails (#1707);\n    + Reduce size of email notifications (#1643);\n    + PHP 5.3 compatibility fixes (#1594, #1730);\n    + PHP 7.2 compatibility fixes (#1683, #1714);\n    + Fixed notification e-mails contain a broken link. (#1708);\n    + Allow dots to be used in domain names. (#1747);\n    + Use multi-byte compatible functions when shortening text. (#1753);\n    + Scan subnet reports/selects invalid php path. (#1757);\n    + Small code refactoring (#1699);\n    + Rack device start position overwritten. (#1545);\n    + Sections with folders returns no subnets using API. (#1883);\n    + Add custom_ prefix to Prefix controller custom fields. (#1836);\n    + Non-Admins missing the button to Add circuit. (#1902);\n    + Wrong field name of deviceTypes table when checking device type. (#1910);\n    + SNMPv3 improvements;\n    + Misc IPv6 fixes;\n\n    Security Fixes:\n    ----------------------------\n    + Code injection in Name field. (#1667);\n    + XSS (reflected) in SubnetID param. (#1702);\n    + CSRF enables open mail relay. (#1703);\n    + Reflected XSS requiring user interaction on search. (#1705);\n    + XSS reflected via CSRF in preview.php. (#1706);\n    + Reflected XSS via CSV upload. (#1742);\n    + Reflected XSS on 'mac' parameter. (#1903);\n\n== 1.3.1\n\n    New features:\n    ------------\n    + Circuits module (circuits, providers, map, ...) (#731);\n\n    Enhancements, changes:\n    ----------------------------\n    + Racks:\n        + Automatic location assignment when device added to rack (#1230);\n        + Rack map showing map of all racks in location;\n        + Rack back side;\n    + Compact menu layout (per-user setting, showing only icons);\n    + Network to network static nat;\n    + Selectable logo size (from config.php) (#952);\n    + Added default option for permissions propagations (#1351);\n    + API:\n        + Added Circuits controller;\n        + Encrypyted requests can now also be form-encoded (#1191);\n        + Introduce mcrypt AES compatibility (#1516);\n        + Fixed field ip not displayed when filters applied (#1529);\n    + New resolve hostnames option for subnet (#1222):\n        + Updates hostnames via pingCheck.php script (if parameter set for subnet);\n        + Updates hostnames via resolveIPaddresses.php script (if parameter set for subnet);\n        + On-the-fly empty hostname update if resolved (if parameter set for subnet and enabled globally);\n        + Added this infor to tools > scanned networks;\n    + Added custom_ prefix to custom field names to avoid duplication with custom fields (#1387);\n    + Added option to hide IP requests for unauthenticated users on login page (#1394);\n    + Performance optimizations for locations and subnet usage calculation;\n    + Added user groups custom fields;\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.3;\n    + German translation updated to verson 1.3;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed RACK images not displayed if not root location (#1204);\n    + Fixed import gateway ip (#1240);\n    + Fixed JSON_UNESCAPED_UNICODE for PHP 5.3 (#1135, #1245);\n    + Rename class Thread to PingThread to avoid naming conflict with pthreads Thread class (#1254);\n    + Fixed custom fields integer on subnet (#1266);\n    + Fixed Import Ip-adress doesnt update location (#1284);\n    + Fixed json_error for logo upload (#1256);\n    + Fixed CSRF error when moving orphaned addresses (#1303);\n    + Fixed VRF fetching via API by Id;\n    + Fixed map issues when quotes are in name/description (#1384);\n    + Fixed item not removed from NAT when deleted (#1378);\n    + Fixed Error when error_reporting = E_ALL about strict standards when importing IP addresses (#1372);\n    + Fixed Apostrophe errors in text custom fields (#1375);\n    + Fixed API error when creating address under folder (#1507);\n    + Fixed SNMPv3 (#1119);\n\n    Security Fixes:\n    ----------------------------\n    + Fixed XSS issues (#1403, #1521, #1500);\n\n== 1.3\n\n    New features:\n    ------------\n    + Multicast module (RFC1112, RFC2464) with IP to MAC mapping and multicast networks overview;\n    + Threshold module for subnets;\n    + Racks module (Rack drawing) for devices;\n    + Address linking by selected field;\n    + Custom logo for site and mails;\n    + PSTN number management module;\n    + SNMP module:\n        + Subnets discovery from route table (all subnets, nested subnets, add new subnet);\n        + Hosts discovery scans via ARP check/interface check;\n        + Hosts discovery scans via ARP + MAC address check (detects interface);\n        + VLAN discovery;\n        + VRF discovery;\n        + Status update scans via ARP check;\n    + NAT module\n        + Source / static / destination NAT;\n        + Linking subnet to NAT\n        + Show bindings under tools and next to IP address / subnet\n    + Locations module\n        + Map devices / racks / subnets to location;\n        + Google maps integration;\n    + SAML2 authentication (SSO)\n\n    Enhancements, changes:\n    ----------------------------\n    + Folders can now contain addresses;\n    + API:\n        - Api v1 removed;\n        + If subnet gateway defined gatewayId is returned in subnet details;\n        + Automatically added nameservers to subnet results;\n        + Added subnet usage result for each subnet in section;\n        + Added custom fields for all controllers;\n        + New subnets automatically get parent permissions;\n        + Added IP calculation to subnet;\n        + Changed all not_found when searching objects to 404 and all invalid parameters to 409 (conflict);\n        + If new item is created id will be available in response field \u201cid\u201d;\n        + New parameter $time_response in api/index.php that will return execution time in field \u201ctime\";\n        + Extensive first_free subnet calls search speedup;\n        + POST transaction locking;\n        + All first_free and first_address responses are now \"data\" instead of \"ip\" and \"subnet\" for consistency;\n        + Subnet splitting now copies over custom fields values by default (user custom_fields=no to revert);\n        + Added API option to nest custom_fields to assure correct structure;\n        + Added option to show/hide links in api by default for each app;\n        + Changed API http response codes;\n        + New methods:\n            + users:\n                GET    /user/expires/                         // returns token expiration date\n                GET    /user/token-expires/                   // returns token expiration date\n                GET    /user/users/                           // returns all users (rwa app permissions required)\n                GET    /user/admins/                          // returns all admin users (rwa app permissions required)\n            + addresses:\n                GET    /addresses/first_free/{subnetId}/      // returns first available address (subnetId can be provided with parameters)\n                GET    /addresses/{ip}/{subnetId}/            // returns IP address from subnet\n                GET    /addresses/search/{hostname}/          // Will search addresses by hostname\n                DELETE /addresses/{ip}/{subnetId}/            // deletes IP address from subnet\n                POST   /addresses/first_free/{subnetId}/      // will search for first free address in subnet, creating new address\n            + subnets:\n                GET    /subnets/{id}/addresses/{ip}/          // returns IP address from subnet\n                GET    /subnets/{id}/first_free/              // returns first free address in subnet\n                GET    /subnets/{id}/first_subnet/{mask}/     // returns first available subnets with specified mask\n                GET    /subnets/{id}/all_subnets/{mask}/      // returns all available subnets with specified mask\n                POST   /subnets/{id}/first_subnet/{mask}/     // creates first free subnet under master with specified mask\n                DELETE /subnets/{id}/permissions/             // removes permissions\n                PATCH  /subnets/{id}/permissions/             // sets subnet permissions (?grouname1=ro&groupname2=3&43=1)\n        + New controller Prefix;\n        + New controller Devices;\n        + New subcontrollers:\n            + /tools/nat/\n            + /tools/racks/\n            + /tools/locations/\n    + Widgets:\n        + New threshold widget;\n        + New inactive hosts widget;\n        + New Locations widget;\n    + PowerDNS:\n        + Default domain for PTR records (if hostname is not set);\n        + When removing IP address additional option that removes all associated PDNS records (ip and hostname);\n    + Permit normal users to manage VLANs / VRFs;\n    + Inactive (offline) hosts tools page;\n    + MAC address normalization;\n    + jQuery tables;\n    + Permission delegation now only delegates changes not whole permission set;\n    + Users with RWA permission can manage IP requests and receive IP request mails + changelog mails for subnet;\n    + IPv4 subnet link to IPv6 for dual-stack info;\n    + Removed inacessible DNS servers if timeout to prevent page load timeouts;\n    + Added option to only show supernets to limit pageload [#844 #816 #736];\n    + Added last scan info to subnet details;\n    + Added option to update address tags when address state change occurs (pingCheck) [#840];\n    + Added mantaneance mode;\n    + Added inactive addresses removal script;\n    + Subnet overlapping now checked also inside folders to prevernt duplicates;\n    + Subnet overlapping now checked also between sections if VRF defined;\n    + Added new settings directive that requires unique subnets accross sections;\n    + Added index check in verify database to detect and fix possible missing DB indexes;\n    + Added MAC address vendor display option;\n\n    Bugfixes:\n    ----------------------------\n    + PowerDNS regenerate PTR records now only updates current subnet (before whole zone);\n    + Fixed visual bug on 32-bit systems;\n    + Normal users with RWA permissions can scan subnets;\n    + Changed default timestamp from 0000-00-00 00:00:00 to 1970-01-01 00:00:01 to avoid SQL install errors if strict mode;\n    + Fixed https access on non-standard ports;\n    + Extended username to 255 chars for LDAP logins;\n    + Fixed search export invalid encoding and data may have been lost XLS file error;\n    + Fixed invalid character encoding in API responses;\n    + PowerDNS records cannot be created on slave zone;\n    + Fixed subnet resizing bug if subnet contained slaves;\n    + Added separate CSRF cookies for each address/subnet/pstn object;\n    + Deleted items are now shown and searchable from changelog;\n\n== 1.20.1\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.2;\n    + German translation updated to verson 1.2;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade bug that selected invalid auth method for AD/LDAP users;\n    + Fixed LDAP problems after 1.2 upgrade;\n    + Fixed PowerDNS Slave with multiple masters delimiter error;\n    + Fixed PowerDNS PTR records not being updated automatically;\n    + Fixed csrf cookie bug when editing folder;\n    + Fixed csrf cookie bug when truncationg subnet;\n    + Fixed invalid code for API crypt method;\n    + Fixed strange headings font display in Firefox;\n    + Fixed invalid proxy settings in config.dist.php;\n    + Fixed search same hostnames in db link form address table;\n    + Fixed import subnet bug caused by fw object;\n    + Fixed Subnet Import (Preview button > no action);\n\n== 1.20\n\n    New features:\n    ------------\n    + Added multiple simultaneous authentication methods (Apache, AD, LDAP, Radius, NetIQ);\n    + Added fping scanning support;\n    + Added selectable scanning type (ping/pear/fping);\n    + Added L2 domains;\n    + Added option to define address as default GW for subnet;\n    + Added customizable address tags with compressed option;\n    + Added temporary subnet / address shares;\n    + Added quick subnet masks;\n    + Added nameserver sets per subnets (jonashauge);\n    + Added optional syslog as log location;\n    + REST API:\n        + documentation: http://phpipam.net/api-documentation/\n        + API v2, old v1 support added\n        + Complete rewrite of all API calls;\n        + New security models (crypt, ssl, none);\n        + Support for custom fields;\n        + JSON / XML output\n        + Full read/write controllers (Sections, Subnets/Folders, Addresses, Vlans, Vrfs);\n    + PowerDNS integration:\n        + Automatic reverse records creation (PTR) - IPv4 and IPv6;\n        + Automatic SOA, NS record creation;\n        + DNS domain management;\n    + Added Scan agents to scan subnets remotely;\n    + Added firewall zone mappings and module;\n    + Added per-subnet DNS resolvers;\n    + Added option to mark subnet as utilized (full);\n\n    Enhancements:\n    ----------------------------\n    + All tables are now InnoDB by default;\n    + Upgraded jQuery to 2.1.3;\n    + All functions rewritten to classes/methods;\n    + Parametized all SQL queries, moved from MySQLI to PDO;\n    + Added VLAN/VRF to search and to search results export;\n    + Redesigned admin and tools menu;\n    + Added scanned/discovered subnets to tools for faster overview;\n    + Per-user display settings;\n    + New widget - tools shortcuts;\n    + New widget - IP calculator;\n    + New widget - request IP address;\n    + Clickable links for subnet fields;\n    + Custom VRF fields;\n    + Subnets can be now linked to devices;\n    + Import/export enhancements;\n    + Fast user switching for admins to impersonate user;\n    + Opened folders and subnets in tree menu are saved on page reload;\n    + RWA users can now process IP requests;\n    + Added auto-suggest for possible slave subnets;\n    + SSL option for MySQL connections;\n    + Enum custom field support;\n    + Added password reset script;\n    + Set sections to display VRF in;\n\n    Security Fixes:\n    ----------------------------\n    + Parametized all MySQL querries;\n    + Fixed plainpass being logged on user update;\n    + Fixed XSS exploit on /error/;\n    + Added CSRF protection to forms;\n\n    Translations:\n    ----------------------------\n    + Added Czech translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed bug with SSL/TLS smtp servers;\n    + Fixed visual subnet display issues on 32bit systems;\n    + Fixed IPv6 split subnets bug;\n    + Fixed /31 ping bug scanning out of boundaries;\n    + Fixed nested broadcast not counted to used percentage;\n    + Fixed invalid redirect after timeout;\n    + Fixed discovery script index overridden;\n    + Fixed dashboard graphs links to subnets;\n    + Fixed Invalid ID on subnet scan of large subnets;\n\n== 1.1.010\n\n    Bugfixes:\n    ----------------------------\n    + Fixed login fails with LDAP when escape characters are in password;\n    + Fixed login not working with spaces in password for AD login;\n    + Fixed Ivalid action when adding vlans from subnet popup menu;\n    + Fixed custom fields not appearing properly on IP request editing;\n    + Fixed Invalid ID error for IP address details on sorting;\n    + Fixed warnings if no VLAN search results are present;\n    + Fixed test mail not sending;\n    + Fixed unable to login if $phpsessname not defined;\n    + Fixed unable to login after upgrade;\n\n== 1.1\n\n    Enhancements:\n    ----------------------------\n    + Caching of SQL results to avoid multiple queries;\n    + Reduced number of DB queries;\n    + Added selected mail notifications to admins to be notified on IP/subnet change;\n    + Added new subnetId index to ipaddresses table that significantly improves network loading;\n    + Now using only 1 network connection towards MySQL server;\n    + Updated pagination;\n    + mod_rewrite no longer required, selectable URL structure under settings;\n    + Added option not to display free ranges;\n    + Added option to set maximum VLAN number;\n    + Selectable custom fields to be visible/hidden in tables view and updated device/VLAN view;\n    + Added additional confirmation before section, subnet, folder and IP address deletion;\n    + New script added for cron checks that discovers new hosts for selected networks;\n    + Added inactivity timeout to settings;\n    + Changed install procedure and updated install scripts;\n    + Added PEAR check for installation;\n    + Added free range disaply for VLANs;\n    + Addes SSL/TLS option for SMTP mail;\n    + API:\n        + Bugfixes;\n        + Added API admin permissions;\n        + read/delete actions for IP addresses;\n        + read/delete actions for Vlans;\n        + read/delete actions for VRFs;\n\n    Security Fixes:\n    ----------------------------\n    + Fixed known command injection vulnerabilities in the scan functions;\n    + Fixed known SQL injection vulnerabilities;\n    + Fixed known XSS vulnerabilities;\n    + Fixed known action XSS events;\n    + Moved to crypt method for storing password in database with salting;\n    + Added option to force user to change pass after first login;\n    + Admin password must be changed after installation;\n    + Added captcha code request after 5x unsuccesfull login to prevent brute-force attacks;\n\n    Translations:\n    ----------------------------\n    + Added es_ES translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed top 10 widgets not escaping strings;\n    + Fixed section parent can be set to self that caused section to disapear;\n    + Fixed username instead of password being sent to smtp server;\n    + Fixed IE search bug with workaround;\n    + Fixed subnet and bcast not showing on strict mode disabled;\n    + Fixed top subnets missing on dashboard for non-admin users;\n    + Fixed bug when installation was silently failing bacause pf missing _() function (missing gettext extension)\n    + Fixed device custom field not populated on adding device;\n    + Fixed XLS export silently failed when description longer than 31 characters;\n    + Fixed overlapping check not working;\n    + Fixed subnet free space calcultation;\n    + Fixed visual subnet display not showing on /31 and /32 networks;\n    + Fixed custom fields display on folder edit;\n    + Fixed unable to edit IP addresses when fields are sorted;\n    + Fixde ordering of custom fields defaults to varchar 256;\n    + Fixed IPv6 subnet / broadcast calculation bug and next subnet suggestion;\n\n== 1.0\n\n    New features:\n    ----------------------------\n    + IP address page with IP address details and IP history (Changelog);\n    + IP address changelog, subnet and section changelogs with full changelog under tools;\n    + Favourite subnets for quick access;\n    + Adding subnets from free space with automatic mask provided;\n    + Automatic database validity check after upgrading and automatic field/table fix under administration;\n    + Automatic weekly check for new phpipam version;\n\n    Enhancements:\n    ----------------------------\n    + Bootstrap 3;\n    + UI enhancements;\n    + Improved views based on browser width;\n    + Widget order can now be set;\n    + Widgets can be reordered (dragged) directly on dashboard;\n    + Subnet can now be splitted to max 256 new subnets (16 before);\n    + Scan settings are moved to Administration;\n    + Widget management has moved to administration, which allows creation of new widgets;\n    + Improved ICMP error detection;\n    + Mail settings can now be set on gui (localhost / smtp);\n    + Popup windows are now draggable;\n    + VLAN adding in the fly enhancements;\n    + Master section now shows all subnets in subsections;\n    + Tools > devices redone;\n    + DeviceTypes can now be edited/set/added;\n    + Ping subnet enhancements;\n    + Custom field types are now defineable (int/varchar/date/datetime/text/bool/set);\n    + Date and timepicker popups if type = date/datetime;\n    + For `set` and boolean custom fields dropdown is presented that users can pick;\n\n    + Favourite subnets widget;\n    + IP requests widget;\n    + Changelog widget;\n\n    Translations:\n    ----------------------------\n    + Added Brazil translation (Michel Braga Guimar\u00e3es);\n\n    Bugfixes:\n    --------\n    + UI fixes;\n    + Fixed bug where last page of IP addresses was inaccessible;\n    + IP address state change is now sent to all admins;\n    + Fixed subnet displaying as 0.0.0.0/0 in details;\n    + Fixed links to subnets form vlans and vrfs;\n    + Fixed search result showing all folders if searched item is not IP address;\n    + Fixed disapearing section when L2 section was selected as master section;\n    + Fixed device ID showing in mail notification instead of hostname;\n    + Fixed device ID showing in search results and export instead of hostname;\n    + Fixed search for subnet name returned no results;\n    + Fixed apostophe in IP address description throws SQL error for scan results and XLS import;\n    + Fixed requester email gets cut if longer than 32 chars;\n    + Fixed admin folder edit appearing as subnet;\n    + Fixed missing device/port in import;\n    + Fixed master section delete did not delete subsections and belonging subnets/ips;\n    + Fixed online status was not updated when running Ping status scans;\n    + Fixed Folder name not appearing when deleting folder;\n\n== 0.9\n\n    New features:\n    ----------------------------\n    + Support for ICMP network discovery;\n    + Cron script to check status for selected subnets/hosts with threading suport (pcntl php extension required);\n    + ICMP check IP status in demand;\n    + Compressed (grouped) DHCP IP ranges;\n    + API server version 0.1;\n    + Option to show and group subnets by VLAN in subnets list;\n    + Option to show and group subnets by VRF in subnets list;\n    + Added subsections;\n    + Added AD username search;\n    + Added folders;\n\n    Enhancements:\n    ----------------------------\n    + Added error catching/displaying for ajax-loaded php scripts;\n    + Added default language for login/requests display and new users;\n    + Added direct links to different pages in IP address table;\n    + Subnets can now be edited directly from nested subnets list;\n    + When adding nested subnets default vlan/vrf is selected from parent;\n    + Added Section ordering;\n    + Added per/section subnet ordering (overrides dafault form settings);\n    + Clicking on section now shows all subnets and belonging details;\n    + If session timeouts after re-login last requested page will be opened;\n    + Searh for IP address now returns also subnet, even if IP is not existing;\n    + Per-user selection of widgets to display;\n    + Added description and required field checkbox for custom IP/Subnet Fields;\n    + Added custom device fields;\n    + Mails are now sent through phpmailer;\n    + Admin user cannot be deleted;\n\n    Translations:\n    ----------------------------\n    + Added French translation (Denis Darr\u00e9);\n    + Added Dutch translation (Michiel Visser);\n    + Added German translation (Carsten Br\u00fcckner);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed wrong VLAN display in tools;\n    + Fixed subnet/section links from VLANS if base not /;\n    + Fixed warning in apache log on subnet editing if no VRFs are configured;\n    + Fixed admin menu off-screen overflow;\n    + Fixed firefox error when selectiong rights for section/subnets was not possible;\n    + Fixed subnet description in Cyrillic problem;\n    + Fixed errors on no permissions for user;\n    + Fixed Inaccurate Free Space Calculation (and Chart);\n    + Fixed VLAN permissions where VLAN was not displayed;\n\n== 0.8\n\n    New features:\n    ----------------------------\n    + New group and permission management;\n    + Support for translations;\n    + Subnet resizing;\n    + Subnet splitting into smaller subnets;\n    + Added free space display for nested subnets;\n    + Added visual display of subnet usage per IP address;\n    + Added truncate network option that deletes all IP addresses in subnet;\n    + Added button the updates subnet with RIPE information;\n\n    Enhancements:\n    ----------------------------\n    + Added add nested subnet under subnet details to simplify master subnet selection in hierarchy;\n    + Added edit subnet link from search results;\n    + Added reverse IPv6 DNS entries to IPCalc (Vincent Boisard);\n    + Added option for plain-text emails;\n    + Added ckEditor to write instructions;\n    + StrictMode is not set globally anymore but set per section;\n    + Added custom user fields;\n    + Added option to verify that hostname is unique;\n    + Improved MySQL exception handling;\n    + Added mod_rewrite error detection on installation and upgrade;\n    + Added hostname validation;\n    + Added Hostfile dump of IP addresses;\n    + Search also searches in custom fields;\n    + jQuery updated to v 1.9.1;\n\n    Bugfixes:\n    ------------------------\n    + Fixed overlay on second popup;\n    + Fixed IE search bug;\n    + Fixed support for non-standard ports;\n    + Fixed permitting overlapping subnets if vrfs are different;\n    + Fixed dates in logging appearing in 12h format;\n    + Fixed broken subnets link in tools > subnets if installation is not at document root;\n    + Fixed error when adding new subnet if checkboxes are not selected in newer MySQL servers;\n    + Fixed bad display of multilined navigation bar;\n    + Fixed wrong output of tools > VLAN list when using Duplicate VLANs;\n    + Fixed wrong link for upgrade script;\n    + On VRF change all child subnets are updated also;\n    + Fixed wrong maximum on dashboard top10 percentage;\n    + Fixed Adding a vlan while editing a subnet resets the edit subnet form;\n    + Fixed wrong free space calculation for nested subnets;\n    + Fixed IP use statistics not cumulative up the hierarchy if subnes has slaves;\n\n== 0.7\n\n    New features:\n    ----------------------------\n    + Completely rewritten UI using twitter's bootstrap as base;\n    + Using mod_rewrite apache module to handle GET requests (new install requitements!);\n    + Unlimited number of subnetting levels;\n    + OpenLDAP authentication support;\n    + New URL structure;\n    + Sorting of IP addresses;\n    + Custom subnet fields;\n    + Custom VLAN fields and admin option to allow duplicate VLAN names (metro area VLANs);\n    + Script to automatically update IP <-> hostname, run via cron (functions/scripts/resolveIPaddresses.php);\n    + Show Subnet name instead of subnet IP address option;\n    + Strict mode option in config files that controlls overlapping checks;\n    + New subnet menu;\n    + Added printLimit feature to break IP addresses into pages;\n\n    Enhancements:\n    ----------------------------\n    + Lots of UI changes;\n    + Less Ajax usage to display websites and details;\n    + Hierarchy display under subnet details (breadcrumbs);\n    + Search results covering VLANs;\n    + Custom IP fields ordering;\n    + VLAN creation from adding/editing subnets;\n    + IP addresses can now be edited;\n    + Collapsed switch list;\n    + Removing VLANs also removes references from subnet list;\n    + Removing VRFs also removes references from subnet list;\n    + Logs for admin on dashboard;\n    + Search via GET;\n    + Support for range networks (allows use of subnet and broadcast as IP);\n    + Import of custom IP fields;\n    + Abiility to move subnets between sections;\n    + Improved display of nested subnets now shows all IP addresses from nested subnets and orphaned IPs;\n    + Hides display of custom fields in subnet if none is filled in whole subnet;\n    + Replaced Highcharts with Flot because of licencing issues;\n\n    Bugfixes:\n    ------------------------\n    + Fixed error with missing custom IP fields when adding new IP address;\n    + Fixed bug when deleteing root subnet only deleted directly nested subnets (now whole tree);\n    + Fixed checkboxes not working in various browsers;\n    + Fixed change in switch details causing IP address associations to switch to be lost;\n    + Fixed subnet description display in under subnet administration;\n    + Fixed depricated error when showing XLS files;\n    + Fixed error when custom fields were not updated on adding IP address;\n    + Fixed error when custom fields were with spaces in name were not updated;\n    + Fixed error when providing already requested IP address;\n    + Search available also to viewer user types;\n    + Fixed /127 and /128 IPv6 subnets;\n    + Fixed /31 and /32 IPv4 subnets;\n    + Significally reduced php processing for dashboard statistics;\n    + Fixed importing of if quote is present;\n\n== 0.6\n\n    New features:\n    ----------------------------\n    + Selectable IP address list display fields;\n    + Custom IP address fields;\n    + Search and replace IP fields function;\n    + Full page width theme;\n\n    Enhancements:\n    ----------------------------\n    + Independant VLAN management;\n    + Added additional level of subnet nesting;\n    + Added option to clear and export log files;\n    + Export of search results to XLS;\n    + Clickable search results;\n    + Selectable export fields when exporting subnet;\n    + Subnet can be deleted from ip address edit subnet;\n    + IP Requests for locked subnets and viewer users can be placed from ip address list;\n    + jQuery updated to v 1.7.1;\n    + HighCharts updated to v 2.2.0;\n\n    Bugfixes:\n    ------------------------\n    + Upgrade is supported only for versions 0.4 and higher;\n    + Fixed broken UTF-8 support;\n    + Fixed wrong logging when authenticating via AD;\n    + Fixed issues where external attacker might get information about internal hosts through resolvedns script;\n    + Fixed wrong subnet nesting under administration/manage subnets;\n    + Fixed editing subnet can be outside of its own root subnet;\n    + Fixed errors when adding new switch auto-adds itselt to all hosts without no switch defined;\n    + Fixed removing switch not removed in ip address list;\n    + Vlan1 can now be used;\n    + Fixed mail sending settings with missing information;\n    + Fixed errors on adding switch with no sections;\n    + Fixed version check;\n    + Removed masterSubnets from subnets available for IP requests;\n    + Fixed error when non-admin user could not open dashboard;\n    + Added how subnet list switch when list hidden;\n\n== 0.5\n\n    New features:\n    -------------\n    + Importing subnets from RIPE by AS in admin section;\n    + Added switch management and changed switch logic;\n    + Added VRF support;\n    + Added AD domain authentication;\n    + Added MAC address field to ip address;\n    + Added database table and belonging fields check under admin;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Added DNS resolving when editing/adding IP address;\n    + Added IE compatibility meta tag and IE UI improvements for IE >= 8;\n    + Search returns also subnets and MAC searches;\n    + Added mac address and IP status to XLS import/export scripts;\n    + jQuery update from 1.6.2 to 1.7;\n    + Highcharts update from 2.1.2 to 2.1.8;\n\n    + Fixed dashboard errors if no IPv4/IPv6 subnets configured;\n    + Fixed errors with viewing / modifying IP addresses for Operator users;\n    + Fixed session cookie error on hosts;\n    + Fixed error when saving settings;\n    + Fixed instructions errors when inserting html code;\n    + Fixed first free IP address not displaying in IP request;\n\n\n== 0.4\n\n    New features:\n    -------------\n    + Massive add / edit / delete by specifying IP range (e.g. 10.10.0.1 - 10.10.0.254);\n    + Database upgrade / install from browser -> simplified installation/update procedure;\n    + New usertype viewer - can only view IP address list;\n    + Subnets can now be edited directly from IP address list;\n    + Option to lock subnet for writing to no-admin users;\n    + Device and Host list;\n    + Option to specify which subnet can have IP requests when editing / adding subnet if module is enabled;\n    + Latest version check on admin page;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Fixed overspanning of multiple sections;\n    + Admin menu and add subnet now shown only to admins;\n    + Fixed VLAN table to show nesting and IP request option and statistics;\n    + Fixed subnet table to show nesting and IP request option;\n    + Subnet Adding shows only master subnets in section not in all sections;\n    + Tooltips and button hovers are now in separate javascript file;\n    + Graphs show only subnets with non-0 ip addresses;\n    + Various code enhancements + improved error handling;\n    + Fixed URL links not updating after few clicks;\n    + If loading slave subnet directly the subnet menu drops down and shows active slave subnet;\n    + Clicking on master shubnet shows all nested subnets and statistics;\n    + Redesigned log table;\n    + Fixed search;\n\n== 0.3\n\n    New features:\n    -------------\n    + Subnet nesting - you can now have master subnet and normal subnets belonging to it;\n    + Server settings are now moved to database and can be set under admin menu (database settings & debugging remain in config.php);\n    + Request IP module on login page with email notification;\n    + Confirm/reject IP address request from admin page with mail notification;\n    + Admin dashboard notification of new requests;\n    + Autocomplete of owner and Switch name from all available when adding/editing IP address;\n    + New settings quick access on button hover;\n    + Option to export each subnet indivudually;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + jQuery update from 1.6 to 1.6.2;\n    + VLANs are now grouped by section;\n    + Direct access to subnet from vlan table;\n    + UI enhancements;\n    + Fixed user editing bug where user update broke password;\n    + Fixed password in new account notification;\n    + Fixed percentage display on Dashboard;\n    + IPv6 calculator /64 limit fixed;\n    + Changed tooltip effect to appear instantly for smoother display;\n    + Login functions are now separate file;\n\n\n== 0.2 (First public version)\n\n    Bugfixes / enhancements:\n    ------------------------\n    + now also works with php 5.2;\n    + fixed empty fields in xls import;\n    + passwords are now stored in md5 hash;\n    + high numbers for free/used IP addresses (mainly IPv6) are now represented in k/m/G values to improve readibility;\n    + fixed log search bug;\n    + cursor not displayed as link on images and non-href links;\n    + same add image on all pages;\n    + fixed IP mail notification apperance;\n    + UI enhancements and bugfixes;\n    + Fixed some javascript bugs;\n    + Minified javascript to make loading faster;\n    + adding new ip address now automatically provides first available IP address in subnet;\n\n    New features:\n    -------------\n    + added switch / port fields to IP addresses;\n    + hide subets on request to get better view;\n    + Informational tooltips added + option to disable them in config file if someone finds them annoying;\n    + export whole IP address database to XLS file from admin menu;\n    + create MySQL database dump from admin menu;\n    + added IP instructions for users, that can be edited from admin menu;\n\n\n== 0.1 (First test version)\n"], "fixing_code": ["<?php\n\n/*\n * Discover new hosts with ping\n *******************************/\n\n# Check we have been included and not called directly\nif (!isset($subnet_scan_execute_included)) { $Result->show(\"danger\", _(\"Invalid request\"), true); }\n\n# validate subnetId and type\nif(!is_numeric($_POST['subnetId']))                        { $Result->show(\"danger\", \"Invalid subnet Id\", true); die(); }\nif(!preg_match('/[^A-Za-z0-9-]*$/', $_POST['type']))       { $Result->show(\"danger\", \"Invalid scan type\", true); die(); }\n\n\n# invoke CLI with threading support\n$cmd = $Scan->php_exec.\" \".dirname(__FILE__) . '/../../../functions/scan/subnet-scan-icmp-execute.php'.\" 'discovery' \".$_POST['subnetId'];\n\n# save result to $output\nexec($cmd, $output, $retval);\n\n# format result back to object\n$output = array_values(array_filter($output));\n$script_result = json_decode($output[0]);\n\n# if method is fping we need to check against existing hosts because it produces list of all ips !\nif ($User->settings->scanPingType==\"fping\" && isset($script_result->values->alive)) {\n\t// fetch all hosts to be scanned\n\t$to_scan_hosts = $Scan->prepare_addresses_to_scan (\"discovery\", $_POST['subnetId']);\n\t// loop check\n\tforeach($script_result->values->alive as $rk=>$result) {\n\t\tif(!in_array($Subnets->transform_address($result, \"decimal\"), $to_scan_hosts)) {\n\t\t\tunset($script_result->values->alive[$rk]);\n\t\t}\n\t}\n\t// null\n\tif (sizeof($script_result->values->alive)==0) {\n\t\tunset($script_result->values->alive);\n\t}\n\t//rekey\n\telse {\n\t\t$script_result->values->alive = array_values($script_result->values->alive);\n\t}\n}\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# json error\nif(json_last_error()!=0)\t\t\t\t\t\t{ $Result->show(\"danger\", \"Invalid JSON response\".\" - \".$Result->json_error_decode(json_last_error()), false); }\n# die if error\nelseif($retval!==0) \t\t\t\t\t\t\t{ $Result->show(\"danger\", \"Error executing scan! Error code - $retval\", false); }\n# error?\nelseif($script_result->status===1)\t\t\t\t{ $Result->show(\"danger\", $script_result->error, false); }\n# empty\nelseif(!isset($script_result->values->alive)) \t{ $Result->show(\"danger\", _(\"No alive host found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n    // fetch custom fields and check for required\n    $Tools = new Tools ($Database);\n    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');\n    if($required_fields!==false) {\n        foreach ($required_fields as $k=>$f) {\n            if ($f['Null']!=\"NO\") {\n                unset($required_fields[$k]);\n            }\n        }\n    }\n\n\t//form\n\tprint \"<form name='\".$_POST['type'].\"-form' class='\".$_POST['type'].\"-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n    // custom\n\tif (isset($required_fields)) {\n\t\tforeach ($required_fields as $field) {\n            print \"<th>\"._($field['name']).\"</th>\";\n\t\t}\n    }\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($script_result->values->alive as $ip) {\n\t\t//resolve?\n\t\t$hostname = $DNS->resolve_address($ip, false, true, $nsid);\n\n\t\tprint \"<tr class='result$m'>\";\n\t\t//ip\n\t\tprint \"<td>\".$Subnets->transform_to_dotted($ip).\"</td>\";\n\t\t//description\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n\t\tprint \"\t<input type='hidden' name='ip$m' value=\".$Subnets->transform_to_dotted($ip).\">\";\n\t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n\t\tprint \"</td>\";\n\t\t//hostname\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n\t\tprint \"</td>\";\n\t\t// custom\n\t\tif (isset($required_fields)) {\n    \t\tforeach ($required_fields as $field) {\n    \t\t\t# replace spaces with |\n    \t\t\t$field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n\n    \t\t\tprint '\t<td>'. \"\\n\";\n\n    \t\t\t//set type\n    \t\t\tif(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n    \t\t\t\t//parse values\n    \t\t\t\t$tmp = substr($field['type'], 0,3)==\"set\" ? explode(\",\", str_replace(array(\"set(\", \")\", \"'\"), \"\", $field['type'])) : explode(\",\", str_replace(array(\"enum(\", \")\", \"'\"), \"\", $field['type']));\n    \t\t\t\t//null\n    \t\t\t\tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n    \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n    \t\t\t\tforeach($tmp as $v) {\n    \t\t\t\t\tif($v==@$address[$field['name']])\t{ print \"<option value='$v' selected='selected'>$v</option>\"; }\n    \t\t\t\t\telse\t\t\t\t\t\t\t\t{ print \"<option value='$v'>$v</option>\"; }\n    \t\t\t\t}\n    \t\t\t\tprint \"</select>\";\n    \t\t\t}\n    \t\t\t//date and time picker\n    \t\t\telseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n    \t\t\t\t// just for first\n    \t\t\t\tif($timeP==0) {\n    \t\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css\">';\n    \t\t\t\t\tprint '<script type=\"text/javascript\" src=\"js/bootstrap-datetimepicker.min.js\"></script>';\n    \t\t\t\t\tprint '<script type=\"text/javascript\">';\n    \t\t\t\t\tprint '$(document).ready(function() {';\n    \t\t\t\t\t//date only\n    \t\t\t\t\tprint '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n    \t\t\t\t\t//date + time\n    \t\t\t\t\tprint '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n\n    \t\t\t\t\tprint '})';\n    \t\t\t\t\tprint '</script>';\n    \t\t\t\t}\n    \t\t\t\t$timeP++;\n\n    \t\t\t\t//set size\n    \t\t\t\tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n    \t\t\t\telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n    \t\t\t\t//field\n    \t\t\t\tif(!isset($address[$field['name']]))\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n    \t\t\t\telse\t\t\t\t\t\t\t\t\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" value=\"'. $address[$field['name']]. '\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n    \t\t\t}\n    \t\t\t//boolean\n    \t\t\telseif($field['type'] == \"tinyint(1)\") {\n    \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n    \t\t\t\t$tmp = array(0=>\"No\",1=>\"Yes\");\n    \t\t\t\t//null\n    \t\t\t\tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n    \t\t\t\tforeach($tmp as $k=>$v) {\n    \t\t\t\t\tif(strlen(@$address[$field['name']])==0 && $k==2)\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\t\t\t\telseif($k==@$address[$field['name']])\t\t\t\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n    \t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t{ print \"<option value='$k'>\"._($v).\"</option>\"; }\n    \t\t\t\t}\n    \t\t\t\tprint \"</select>\";\n    \t\t\t}\n    \t\t\t//default - input field\n    \t\t\telse {\n    \t\t\t\tprint ' <input type=\"text\" class=\"ip_addr form-control input-sm\" name=\"'. $field['nameNew'].$m .'\" placeholder=\"'. $field['name'] .'\" value=\"'. @$address[$field['name']]. '\" size=\"30\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\";\n    \t\t\t}\n\n                print \" </td>\";\n    \t\t}\n\t\t}\n\t\t//remove button\n\t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n\t\tprint \"</tr>\";\n\n\t\t$m++;\n\t}\n\n    // calculate colspan\n\t$colspan = 4 + sizeof(@$required_fields);\n\n\t//result\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='\".$_POST['type'].\"' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n}\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'><span class='muted'>Scan method: \".$Scan->settings->scanPingType.\"</span></dov>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($output[0]); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with telnet scan\n *******************************/\n\n# Check we have been included and not called directly\nif (!isset($subnet_scan_execute_included)) { $Result->show(\"danger\", _(\"Invalid request\"), true); }\n\n# get ports\nif(empty($_POST['port'])) \t  { $Result->show(\"danger\", _('Please enter ports to scan').'!', true); }\n\n//verify ports\n$pcheck = explode(\";\", str_replace(\",\",\";\",$_POST['port']));\nforeach($pcheck as $p) {\n\tif(!is_numeric($p)) {\n\t\t$Result->show(\"danger\", _(\"Invalid port\").' ('.escape_input($p).')', true);\n\t}\n}\n$_POST['port'] = str_replace(\";\",\",\",$_POST['port']);\n\n// verify subnetId\nif(!is_numeric($_POST['subnetId'])) { $Result->show(\"danger\", _('Invalid subnet Identifier').'!', true); }\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"scan\");\n\n# invoke CLI with threading support\n$cmd = $Scan->php_exec.\" \".dirname(__FILE__) . \"/../../../functions/scan/subnet-scan-telnet-execute.php $_POST[subnetId] '$_POST[port]'\";\n\n# save result to $output\nexec($cmd, $output, $retval);\n\n# format result back to object\n$script_result = json_decode($output[0]);\n\n\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# json error\nif(json_last_error()!=0)\t\t\t\t\t\t{ $Result->show(\"danger\", \"Invalid JSON response\".\" - \".$Result->json_error_decode(json_last_error()), false); }\n# die if error\nelseif($retval!=0) \t\t\t\t\t\t\t\t{ $Result->show(\"danger\", \"Error executing scan! Error code - $retval\", false); }\n# error?\nelseif($script_result->status===1)\t\t\t\t{ $Result->show(\"danger\", $script_result->error, false); }\n# empty\nelseif(!isset($script_result->values->alive)) \t{ $Result->show(\"danger\", _(\"No alive host found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n\tprint \"<form name='\".$_POST['type'].\"-form' class='\".$_POST['type'].\"-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($script_result->values->alive as $ip=>$port) {\n\t\t//resolve?\n\t\t$hostname = $DNS->resolve_address ( $ip, null, true, $nsid);\n\n\t\tprint \"<tr class='result$m'>\";\n\t\t//ip\n\t\tprint \"<td>\".$Subnets->transform_to_dotted($ip).\"</td>\";\n\t\t//description\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n\t\tprint \"\t<input type='hidden' name='ip$m' value=\".$Subnets->transform_to_dotted($ip).\">\";\n\t\tprint \"</td>\";\n\t\t//hostname\n\t\tprint \"<td>\";\n\t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n\t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n\t\tprint \"</td>\";\n\t\t//remove button\n\t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n\t\tprint \"</tr>\";\n\n\t\t$m++;\n\t}\n\n\t//result\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='4'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='4'>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='\".$_POST['type'].\"' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n}\n\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'><span class='muted'>Scan method: telnet</span></dov>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($output[0]); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with snmp\n *******************************/\n\n# Check we have been included and not called directly\nif (!isset($subnet_scan_execute_included)) { $Result->show(\"danger\", _(\"Invalid request\"), true); }\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# scan disabled\nif ($User->settings->enableSNMP!=\"1\")           { $Result->show(\"danger\", _(\"SNMP module disbled\"), true); }\n# subnet check\n$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\nif ($subnet===false)                            { $Result->show(\"danger\", _(\"Invalid subnet Id\"), true);  }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# set class\n$Snmp = new phpipamSNMP ();\n\n// fetch all existing hosts\n$all_subnet_hosts = (array) $Addresses->fetch_subnet_addresses ($_POST['subnetId']);\n// reindex\nif (sizeof($all_subnet_hosts)>0) {\n    foreach ($all_subnet_hosts as $h) {\n        $subnet_ip_addresses[] = $Subnets->transform_address($h->ip_addr, \"dotted\");\n    }\n}\n\n# set selected address fields array\n$selected_ip_fields = $User->settings->IPfilter;\n$selected_ip_fields = explode(\";\", $selected_ip_fields);\n\n// no errors\nerror_reporting(E_ERROR);\n\n# fetch devices that use get_routing_table query\n$devices_used = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_arp_table%\", \"id\", true, true);\n\n# filter out not in this section\nif ($devices_used !== false) {\n    foreach ($devices_used as $d) {\n        // get possible sections\n        $permitted_sections = explode(\";\", $d->sections);\n        // check\n        if (in_array($subnet->sectionId, $permitted_sections)) {\n            $permitted_devices[] = $d;\n        }\n    }\n}\n\n// if none set die\nif (!isset($permitted_devices))                 { $Result->show(\"danger\", _(\"No devices for SNMP ARP query available\"), true); }\n\n// ok, we have devices, connect to each device and do query\nforeach ($permitted_devices as $d) {\n    // init\n    $Snmp->set_snmp_device ($d);\n    // fetch arp table\n    try {\n        $res = $Snmp->get_query(\"get_arp_table\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_arp_table\"] = $res;\n           // check\n           foreach ($res as $kr=>$r) {\n               // if is inside subnet\n               if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===false) { }\n               // check if host already exists, than remove it\n               elseif (in_array($r['ip'], $subnet_ip_addresses)) { }\n               // save\n               else {\n                   $found[$d->id][] = $r;\n               }\n           }\n        }\n        // get interfaces\n        $res = $Snmp->get_query(\"get_interfaces_ip\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_interfaces_ip\"] = $res;\n           // check\n           foreach ($res as $kr=>$r) {\n               // if is inside subnet\n               if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===false) { }\n               // check if host already exists, than remove it\n               elseif (in_array($r['ip'], $subnet_ip_addresses)) { }\n               // save\n               else {\n                   $found[$d->id][] = $r;\n               }\n           }\n        }\n    } catch (Exception $e) {\n       // save for debug\n       $debug[$d->hostname]['get_arp_table'] = $res;\n       $errors[] = $e->getMessage();\n\t}\n}\n\n# none and errors\nif(sizeof($found)==0 && isset($errors))          {\n    $Result->show(\"info\", _(\"No new hosts found\"), false);\n    $Result->show(\"warning\", implode(\"<hr>\", $errors), false);\n}\n# none\nelseif(sizeof($found)==0) \t                     { $Result->show(\"info\", _(\"No new hosts found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n    // fetch custom fields and check for required\n    $Tools = new Tools ($Database);\n    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');\n    if($required_fields!==false) {\n        foreach ($required_fields as $k=>$f) {\n            if ($f['Null']!=\"NO\") {\n                unset($required_fields[$k]);\n            }\n        }\n    }\n\n    // calculate colspan\n\t$colspan = 5 + sizeof(@$required_fields);\n\t// port\n\tif(in_array('port', $selected_ip_fields)) { $colspan++; }\n\n\n\t//form\n\tprint \"<form name='scan-snmp-arp-form' class='scan-snmp-arp-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"MAC\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n\t// port\n\tif(in_array('port', $selected_ip_fields)) {\n\tprint \"\t<th>\"._('Port').\"</th>\";\n\t}\n    // custom\n\tif (isset($required_fields)) {\n\t\tforeach ($required_fields as $field) {\n            print \"<th>\"._($field['name']).\"</th>\";\n\t\t}\n    }\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($found as $deviceid=>$device) {\n    \tforeach ($device as $ip ) {\n            print \"<tr class='result$m'>\";\n    \t\t//resolve?\n    \t\t$hostname = $DNS->resolve_address($ip['ip'], false, true, $nsid);\n\n    \t\t//ip\n    \t\tprint \"<td>$ip[ip]</td>\";\n    \t\t//description, ip, device\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n    \t\tprint \"\t<input type='hidden' name='ip$m' value='$ip[ip]'>\";\n    \t\tprint \"\t<input type='hidden' name='device$m' value='$deviceid'>\";\n    \t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n    \t\tprint \"</td>\";\n    \t\t// mac\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='mac$m' value='$ip[mac]'>\";\n    \t\tprint \"</td>\";\n    \t\t//hostname\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t// port\n    \t\tif(in_array('port', $selected_ip_fields)) {\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='port$m' value='\".@$ip['port'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t}\n    \t\t// custom\n    \t\tif (isset($required_fields)) {\n        \t\tforeach ($required_fields as $field) {\n        \t\t\t# replace spaces with |\n        \t\t\t$field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n\n        \t\t\tprint '\t<td>'. \"\\n\";\n\n        \t\t\t//set type\n        \t\t\tif(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n        \t\t\t\t//parse values\n        \t\t\t\t$tmp = substr($field['type'], 0,3)==\"set\" ? explode(\",\", str_replace(array(\"set(\", \")\", \"'\"), \"\", $field['type'])) : explode(\",\", str_replace(array(\"enum(\", \")\", \"'\"), \"\", $field['type']));\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\tforeach($tmp as $v) {\n        \t\t\t\t\tif($v==@$address[$field['name']])\t{ print \"<option value='$v' selected='selected'>$v</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t{ print \"<option value='$v'>$v</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//date and time picker\n        \t\t\telseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n        \t\t\t\t// just for first\n        \t\t\t\tif($timeP==0) {\n        \t\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css\">';\n        \t\t\t\t\tprint '<script type=\"text/javascript\" src=\"js/bootstrap-datetimepicker.min.js\"></script>';\n        \t\t\t\t\tprint '<script type=\"text/javascript\">';\n        \t\t\t\t\tprint '$(document).ready(function() {';\n        \t\t\t\t\t//date only\n        \t\t\t\t\tprint '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n        \t\t\t\t\t//date + time\n        \t\t\t\t\tprint '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n\n        \t\t\t\t\tprint '})';\n        \t\t\t\t\tprint '</script>';\n        \t\t\t\t}\n        \t\t\t\t$timeP++;\n\n        \t\t\t\t//set size\n        \t\t\t\tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n        \t\t\t\t//field\n        \t\t\t\tif(!isset($address[$field['name']]))\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t\t\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" value=\"'. $address[$field['name']]. '\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t}\n        \t\t\t//boolean\n        \t\t\telseif($field['type'] == \"tinyint(1)\") {\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\t$tmp = array(0=>\"No\",1=>\"Yes\");\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n        \t\t\t\tforeach($tmp as $k=>$v) {\n        \t\t\t\t\tif(strlen(@$address[$field['name']])==0 && $k==2)\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telseif($k==@$address[$field['name']])\t\t\t\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t{ print \"<option value='$k'>\"._($v).\"</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//default - input field\n        \t\t\telse {\n        \t\t\t\tprint ' <input type=\"text\" class=\"ip_addr form-control input-sm\" name=\"'. $field['nameNew'].$m .'\" placeholder=\"'. $field['name'] .'\" value=\"'. @$address[$field['name']]. '\" size=\"30\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\";\n        \t\t\t}\n\n                    print \" </td>\";\n        \t\t}\n    \t\t}\n    \t\t//remove button\n    \t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n    \t\tprint \"</tr>\";\n\n    \t\t$m++;\n\t\t}\n\t}\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='scan-snmp-arp' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n\n    // print errors\n    if (isset($errors)) {\n        print \"<hr>\";\n        foreach ($errors as $e) {\n            print $Result->show (\"warning\", $e, false);\n        }\n    }\n}\n\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'>\";\nprint \" <span class='muted'>\";\nprint \" Scan method: SNMP ARP<hr>\";\nprint \" Scanned devices: <br>\";\nforeach ($debug as $k=>$d) {\n    print \"&middot; \".$k.\"<br>\";\n}\nprint \"</span>\";\nprint \"</div>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($debug); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with snmp\n *******************************/\n\n# Check we have been included and not called directly\nif (!isset($subnet_scan_execute_included)) { $Result->show(\"danger\", _(\"Invalid request\"), true); }\n\n//title\nprint \"<h5>\"._('Scan results').\":</h5><hr>\";\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n\n# scan disabled\nif ($User->settings->enableSNMP!=\"1\")           { $Result->show(\"danger\", _(\"SNMP module disbled\"), true); }\n# subnet check\n$subnet = $Subnets->fetch_object (\"subnets\", \"id\", $_POST['subnetId']);\nif ($subnet===false)                            { $Result->show(\"danger\", _(\"Invalid subnet Id\"), true);  }\n\n# fetch vlan\n$vlan = $Tools->fetch_object (\"vlans\", \"vlanId\", $subnet->vlanId);\nif ($vlan===false)                              { $Result->show(\"danger\", _(\"Subnet must have VLAN assigned for MAc address query\"), true);  }\n\n# set class\n$Snmp = new phpipamSNMP ();\n\n// fetch all existing hosts\n$all_subnet_hosts = (array) $Addresses->fetch_subnet_addresses ($subnet->id);\n// reindex\nif (sizeof($all_subnet_hosts)>0) {\n    foreach ($all_subnet_hosts as $h) {\n        $subnet_ip_addresses[] = $Subnets->transform_address($h->ip_addr, \"dotted\");\n    }\n}\n\n# set selected address fields array\n$selected_ip_fields = $User->settings->IPfilter;\n$selected_ip_fields = explode(\";\", $selected_ip_fields);\n\n// no errors\nerror_reporting(E_ERROR);\n\n# fetch devices that use get_routing_table query\n$devices_used_arp = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_arp_table%\", \"id\", true, true);\n$devices_used_mac = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_mac_table%\", \"id\", true, true);\n\n# filter out devices not in this section - ARP\nif ($devices_used_arp !== false) {\n    foreach ($devices_used_arp as $d) {\n        // get possible sections\n        $permitted_sections = explode(\";\", $d->sections);\n        // check\n        if (in_array($subnet->sectionId, $permitted_sections)) {\n            $permitted_devices_arp[] = $d;\n        }\n    }\n}\n# filter out not in this section\nif ($devices_used_mac !== false) {\n    foreach ($devices_used_mac as $d) {\n        // get possible sections\n        $permitted_sections = explode(\";\", $d->sections);\n        // check\n        if (in_array($subnet->sectionId, $permitted_sections)) {\n            $permitted_devices_mac[] = $d;\n        }\n    }\n}\n\n// if none set die\nif (!isset($permitted_devices_arp))                 { $Result->show(\"danger\", _(\"No devices for SNMP ARP query available\"), true); }\nif (!isset($permitted_devices_mac))                 { $Result->show(\"danger\", _(\"No devices for SNMP MAC address query available\"), true); }\n\n\n// first we need ARP table to fetchIP <> MAC mappings\nforeach ($permitted_devices_arp as $d) {\n    // init\n    $Snmp->set_snmp_device ($d);\n    // fetch arp table\n    try {\n        $res = $Snmp->get_query(\"get_arp_table\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_arp_table\"] = $res;\n           // check\n           foreach ($res as $kr=>$r) {\n               // if is inside subnet\n               if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===false) { }\n               // check if host already exists, than remove it\n               elseif (in_array($r['ip'], $subnet_ip_addresses)) { }\n               // save\n               else {\n                   $found_arp[] = $r;\n               }\n           }\n        }\n    } catch (Exception $e) {\n       // save for debug\n       $debug[$d->hostname]['get_arp_table'] = $res;\n       $errors[] = $e->getMessage();\n\t}\n}\n\n// if none found via ARP die\nif (!isset($found_arp))                         { $Result->show(\"danger\", _(\"No new hosts found from ARP scan, MAC address scan will not be performed\"), true); }\n\n\n// ok, we have devices, connect to each device and do query\nforeach ($permitted_devices_mac as $d) {\n    // init\n    $Snmp->set_snmp_device ($d, $vlan->number);\n    // fetch mac table\n    try {\n        $res = $Snmp->get_query(\"get_mac_table\");\n        // remove those not in subnet\n        if (sizeof($res)>0) {\n           // save for debug\n           $debug[$d->hostname][\"get_mac_table\"] = $res;\n           // save found\n           foreach ($res as $r) {\n               $r['device'] = $d->id;\n               $r['device_name'] = $d->hostname;\n               $found_mac[] = $r;\n           }\n        }\n    } catch (Exception $e) {\n       // save for debug\n       $debug[$d->hostname]['get_mac_table'] = $res;\n       $errors[] = $e->getMessage();\n\t}\n}\n\n\n// if none found via ARP die\nif (!isset($found_mac))                         { $Result->show(\"danger\", _(\"No MAC address found via MAC address scan\"), true); }\n\n\n\n// now check for match\n$k=0;\nforeach ($found_mac as $mac) {\n    foreach ($found_arp as $arp) {\n        // check for match\n        if ($mac['mac']==$arp['mac']) {\n            $found[$k]['ip']     = $arp['ip'];\n            $found[$k]['mac']    = $mac['mac'];\n            $found[$k]['port']   = $mac['port'];\n            $found[$k]['device'] = $mac['device'];\n            $found[$k]['device_name'] = $mac['device_name'];\n            $found[$k]['port_alias'] = $mac['port_alias'];\n            // next index\n            $k++;\n        }\n    }\n}\n\n// remove duplicates\nforeach ($found as $k1=>$f) {\n    foreach ($found as $k2=>$f1) {\n        if ($k1!=$k2) {\n            if ($f['mac']==$f1['mac'] && $f['device']==$f1['device']) {\n                unset($found[$k1]);\n            }\n        }\n    }\n\n    // remove Port-channel\n    if(strpos(strtolower($f['port']), \"port-channel\")!==false) {\n        unset($found[$k1]);\n    }\n}\n\n\n\n# none and errors\nif(sizeof($found)==0 && isset($errors))          {\n    $Result->show(\"info\", _(\"No new hosts found\"), false);\n    $Result->show(\"warning\", implode(\"<hr>\", $errors), false);\n}\n# none\nelseif(sizeof($found)==0) \t                     { $Result->show(\"info\", _(\"No new hosts found\").\"!\", false); }\n# ok\nelse {\n\t// fetch subnet and set nsid\n\t$nsid = $subnet===false ? false : $subnet->nameserverId;\n\n    // fetch custom fields and check for required\n    $Tools = new Tools ($Database);\n    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');\n    if($required_fields!==false) {\n        foreach ($required_fields as $k=>$f) {\n            if ($f['Null']!=\"NO\") {\n                unset($required_fields[$k]);\n            }\n        }\n    }\n\n    // calculate colspan\n\t$colspan = 7 + sizeof(@$required_fields);\n\t// port\n\tif(in_array('port', $selected_ip_fields)) { $colspan++; }\n\n    /**\n     * Sorts array by ip\n     */\n    function sort_array($a, $b) {\n        // same\n        if ($a['ip']==$b['ip'])     { return 0; }\n        elseif ($a['ip']>$b['ip'])  { return 1; }\n        else                        { return -1; }\n    }\n    // sort ip addresses\n    usort($found, \"sort_array\");\n\n\n\t//form\n\tprint \"<form name='scan-snmp-mac-form' class='scan-snmp-mac-form'>\";\n\tprint \"<table class='table table-striped table-top table-condensed'>\";\n\n\t// titles\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._(\"IP\").\"</th>\";\n\tprint \"\t<th>\"._(\"Description\").\"</th>\";\n\tprint \"\t<th>\"._(\"MAC\").\"</th>\";\n\tprint \"\t<th>\"._(\"Device\").\"</th>\";\n\tprint \"\t<th>\"._(\"Hostname\").\"</th>\";\n\tprint \"\t<th>\"._('Port').\"</th>\";\n\tprint \" <th></th>\";\n    // custom\n\tif (isset($required_fields)) {\n\t\tforeach ($required_fields as $field) {\n            print \"<th>\"._($field['name']).\"</th>\";\n\t\t}\n    }\n\tprint \"\t<th></th>\";\n\tprint \"</tr>\";\n\n\t// alive\n\t$m=0;\n\tforeach($found as $k=>$ip) {\n            print \"<tr class='result$m'>\";\n    \t\t//resolve?\n    \t\t$hostname = $DNS->resolve_address($ip['ip'], false, true, $nsid);\n\n    \t\t//ip - done print same !\n    \t\tif ($k!=0) {\n        \t\tif ($found[$k]['ip'] != $found[$k-1]['ip']) {\n        \t\t    print \"<td><span class='ip-address'>$ip[ip]</span></td>\";\n        \t\t}\n        \t\telse {\n            \t\tprint \"<td><span class='ip-address hidden'>$ip[ip]</span></td>\";\n        \t\t}\n    \t\t}\n    \t\telse {\n        \t\tprint \"<td><span class='ip-address'>$ip[ip]</span></td>\";\n            }\n    \t\t//description, ip, device\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='description$m'>\";\n    \t\tprint \"\t<input type='hidden' name='ip$m' value='$ip[ip]'>\";\n    \t\tprint \"\t<input type='hidden' name='device$m' value='$ip[device]'>\";\n    \t\tprint \" <input type='hidden' name='csrf_cookie' value='$csrf'>\";\n    \t\tprint \"</td>\";\n    \t\t// mac\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='mac$m' value='$ip[mac]'>\";\n    \t\tprint \"</td>\";\n    \t\t// device\n    \t\tprint \"<td>$ip[device_name]</td>\";\n    \t\t//hostname\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='hostname$m' value='\".@$hostname['name'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t// port\n    \t\tprint \"<td>\";\n    \t\tprint \"\t<input type='text' class='form-control input-sm' name='port$m' value='\".@$ip['port'].\"'>\";\n    \t\tprint \"</td>\";\n    \t\t// info\n    \t\tprint \"<td>\";\n    \t\tif(strlen(@$ip['port_alias'])>0)\n    \t\tprint \"\t<i class='fa fa-info-circle' rel='tooltip' title='Interface description: $ip[port_alias]'></i>\";\n    \t\tprint \"</td>\";\n    \t\t// custom\n    \t\tif (isset($required_fields)) {\n        \t\tforeach ($required_fields as $field) {\n        \t\t\t# replace spaces with |\n        \t\t\t$field['nameNew'] = str_replace(\" \", \"___\", $field['name']);\n\n        \t\t\tprint '\t<td>'. \"\\n\";\n\n        \t\t\t//set type\n        \t\t\tif(substr($field['type'], 0,3) == \"set\" || substr($field['type'], 0,4) == \"enum\") {\n        \t\t\t\t//parse values\n        \t\t\t\t$tmp = substr($field['type'], 0,3)==\"set\" ? explode(\",\", str_replace(array(\"set(\", \")\", \"'\"), \"\", $field['type'])) : explode(\",\", str_replace(array(\"enum(\", \")\", \"'\"), \"\", $field['type']));\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { array_unshift($tmp, \"\"); }\n\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\tforeach($tmp as $v) {\n        \t\t\t\t\tif($v==@$address[$field['name']])\t{ print \"<option value='$v' selected='selected'>$v</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t{ print \"<option value='$v'>$v</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//date and time picker\n        \t\t\telseif($field['type'] == \"date\" || $field['type'] == \"datetime\") {\n        \t\t\t\t// just for first\n        \t\t\t\tif($timeP==0) {\n        \t\t\t\t\tprint '<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap/bootstrap-datetimepicker.min.css\">';\n        \t\t\t\t\tprint '<script type=\"text/javascript\" src=\"js/bootstrap-datetimepicker.min.js\"></script>';\n        \t\t\t\t\tprint '<script type=\"text/javascript\">';\n        \t\t\t\t\tprint '$(document).ready(function() {';\n        \t\t\t\t\t//date only\n        \t\t\t\t\tprint '\t$(\".datepicker\").datetimepicker( {pickDate: true, pickTime: false, pickSeconds: false });';\n        \t\t\t\t\t//date + time\n        \t\t\t\t\tprint '\t$(\".datetimepicker\").datetimepicker( { pickDate: true, pickTime: true } );';\n\n        \t\t\t\t\tprint '})';\n        \t\t\t\t\tprint '</script>';\n        \t\t\t\t}\n        \t\t\t\t$timeP++;\n\n        \t\t\t\t//set size\n        \t\t\t\tif($field['type'] == \"date\")\t{ $size = 10; $class='datepicker';\t\t$format = \"yyyy-MM-dd\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t{ $size = 19; $class='datetimepicker';\t$format = \"yyyy-MM-dd\"; }\n\n        \t\t\t\t//field\n        \t\t\t\tif(!isset($address[$field['name']]))\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t\telse\t\t\t\t\t\t\t\t\t{ print ' <input type=\"text\" class=\"'.$class.' form-control input-sm input-w-auto\" data-format=\"'.$format.'\" name=\"'. $field['nameNew'].$m .'\" maxlength=\"'.$size.'\" value=\"'. $address[$field['name']]. '\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\"; }\n        \t\t\t}\n        \t\t\t//boolean\n        \t\t\telseif($field['type'] == \"tinyint(1)\") {\n        \t\t\t\tprint \"<select name='$field[nameNew]$m' class='form-control input-sm input-w-auto' rel='tooltip' data-placement='right' title='$field[Comment]'>\";\n        \t\t\t\t$tmp = array(0=>\"No\",1=>\"Yes\");\n        \t\t\t\t//null\n        \t\t\t\tif($field['Null']!=\"NO\") { $tmp[2] = \"\"; }\n\n        \t\t\t\tforeach($tmp as $k=>$v) {\n        \t\t\t\t\tif(strlen(@$address[$field['name']])==0 && $k==2)\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telseif($k==@$address[$field['name']])\t\t\t\t{ print \"<option value='$k' selected='selected'>\"._($v).\"</option>\"; }\n        \t\t\t\t\telse\t\t\t\t\t\t\t\t\t\t\t\t{ print \"<option value='$k'>\"._($v).\"</option>\"; }\n        \t\t\t\t}\n        \t\t\t\tprint \"</select>\";\n        \t\t\t}\n        \t\t\t//default - input field\n        \t\t\telse {\n        \t\t\t\tprint ' <input type=\"text\" class=\"ip_addr form-control input-sm\" name=\"'. $field['nameNew'].$m .'\" placeholder=\"'. $field['name'] .'\" value=\"'. @$address[$field['name']]. '\" size=\"30\" '.$delete.' rel=\"tooltip\" data-placement=\"right\" title=\"'.$field['Comment'].'\">'. \"\\n\";\n        \t\t\t}\n\n                    print \" </td>\";\n        \t\t}\n    \t\t}\n    \t\t//remove button\n    \t\tprint \t\"<td><a href='' class='btn btn-xs btn-danger resultRemove resultRemoveMac' data-target='result$m'><i class='fa fa-times'></i></a></td>\";\n    \t\tprint \"</tr>\";\n\n    \t\t$m++;\n\t}\n\n\t//submit\n\tprint \"<tr>\";\n\tprint \"\t<td colspan='$colspan'>\";\n\tprint \"<div id='subnetScanAddResult'></div>\";\n\tprint \"\t\t<a href='' class='btn btn-sm btn-success pull-right' id='saveScanResults' data-script='scan-snmp-mac' data-subnetId='\".$_POST['subnetId'].\"'><i class='fa fa-plus'></i> \"._(\"Add discovered hosts\").\"</a>\";\n\tprint \"\t</td>\";\n\tprint \"</tr>\";\n\n\tprint \"</table>\";\n\tprint \"</form>\";\n\n    // print errors\n    if (isset($errors)) {\n        print \"<hr>\";\n        foreach ($errors as $e) {\n            print $Result->show (\"warning\", $e, false);\n        }\n    }\n}\n\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'>\";\nprint \" <span class='muted'>\";\nprint \" Scan method: SNMP ARP<hr>\";\nprint \" Scanned devices: <br>\";\nforeach ($debug as $k=>$d) {\n    print \"&middot; \".$k.\"<br>\";\n}\nprint \"</span>\";\nprint \"</div>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($debug); print \"</pre>\"; }\n\n?>", "<?php\n\n/*\n * Update alive status of all hosts in subnet\n ***************************/\n\n# Check we have been included and not called directly\nif (!isset($subnet_scan_execute_included)) { $Result->show(\"danger\", _(\"Invalid request\"), true); }\n\n# validate subnetId and type\nif(!is_numeric($_POST['subnetId']))                        { $Result->show(\"danger\", \"Invalid subnet Id\", true); die(); }\n\n# invoke CLI with threading support\n$cmd = $Scan->php_exec.\" \".dirname(__FILE__) . '/../../../functions/scan/subnet-scan-icmp-execute.php'.\" 'update' \".$_POST['subnetId'];\n\n# save result to $output\nexec($cmd, $output, $retval);\n\n# format result back to object\n$output = array_values(array_filter($output));\n$script_result = json_decode($output[0]);\n\n# set blank values\nif (!isset($script_result->values->alive) || is_null($script_result->values->alive) )\t{ $script_result->values->alive = array(); }\nif (!isset($script_result->values->dead)  || is_null($script_result->values->dead) )\t{ $script_result->values->dead = array(); }\n\n# set address types array\n$Tools->get_addresses_types ();\n\n# if method is fping we need to check against existing hosts because it produces list of all ips !\nif ($User->settings->scanPingType==\"fping\" && isset($script_result->values->alive)) {\n\t// fetch all hosts to be scanned\n\t$all_subnet_hosts = $Scan->prepare_addresses_to_scan (\"update\", $_POST['subnetId']);\n\t// loop check\n\tforeach ($all_subnet_hosts as $k=>$h) {\n\t\t// alive ?\n\t\tif (sizeof($script_result->values->alive)>0) {\n\t\t\tif (!in_array($h, $script_result->values->alive)) {\n\t\t\t\t$script_result->values->dead[] = $h;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$script_result->values->dead = $all_subnet_hosts;\n\t\t}\n\t}\n\n\t// null\n\tif (sizeof($script_result->values->dead)==0)  {\n\t\tunset($script_result->values->dead); }\n\telse\t{\n\t\t$script_result->values->dead = array_values($script_result->values->dead);\n\t}\n\n\tif (sizeof($script_result->values->alive)==0) {\n\t\tunset($script_result->values->alive);\n\t}\n\t//rekey\n\telse {\n\t\t$script_result->values->alive = array_values($script_result->values->alive);\n\t}\n}\n\n# recode to same array with statuses\n$m=0;\nif($script_result->status==0) {\n\t//loop types (dead, alive, error)\n\tif(sizeof($script_result->values)>0) {\n\t\tforeach($script_result->values as $k=>$r) {\n\t\t\t//loop addresses in type\n\t\t\tforeach($r as $ip) {\n\t\t\t\t# get details\n\t\t\t\t$ipdet = (array) $Addresses->fetch_address_multiple_criteria ($ip, $_POST['subnetId']);\n\n\t\t\t\t# format output\n\t\t\t\t$res[$ip]['id']          = $ipdet['id'];;\n\t\t\t\t$res[$ip]['ip_addr']     = $ip;\n\t\t\t\t$res[$ip]['description'] = $ipdet['description'];\n\t\t\t\t$res[$ip]['hostname']    = $ipdet['hostname'];\n\t\t\t\t$res[$ip]['state']       = $ipdet['state'];\n\t\t\t\t$res[$ip]['lastSeen']    = $ipdet['lastSeen'];\n\n\t\t\t\t//online\n\t\t\t\tif($k==\"alive\")\t{\n\t\t\t\t\t$res[$ip]['status'] = \"Online\";\n\t\t\t\t\t$res[$ip]['code']=0;\n\t\t\t\t\t//update alive time\n\t\t\t\t\tif(isset($ipdet['id'])) {\n\t\t\t\t\t\t$Scan->ping_update_lastseen($ipdet['id']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//offline\n\t\t\t\telseif($k==\"dead\")\t{\n\t\t\t\t\t$res[$ip]['status'] = \"Offline\";\n\t\t\t\t\t$res[$ip]['code']=1;\n\t\t\t\t}\n\t\t\t\t//excluded\n\t\t\t\telseif($k==\"excluded\")\t{\n\t\t\t\t\t$res[$ip]['status'] = \"Excluded form check\";\n\t\t\t\t\t$res[$ip]['code']=100;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$res[$ip]['status'] = \"Error\";\n\t\t\t\t\t$res[$ip]['code']=2;\n\t\t\t\t}\n\t\t\t\t$m++;\n\t\t\t}\n\t\t}\n\t}\n}\n?>\n\n\n<h5><?php print _('Scan results');?>:</h5>\n<hr>\n\n<?php\n# json error\nif(json_last_error()!=0)\t\t\t\t\t\t{ $Result->show(\"danger\", \"Invalid JSON response\".\" - \".$Result->json_error_decode(json_last_error()), false); }\n# die if error\nelseif($retval!=0) \t\t\t\t\t\t\t\t{ $Result->show(\"danger\", \"Error executing scan! Error code - $retval\", false); }\n# error?\nelseif($script_result->status===1)\t\t\t\t{ $Result->show(\"danger\", $script_result->error, false); }\n# empty\nelseif(!isset($script_result->values)) \t\t\t{ $Result->show(\"info\", _(\"Subnet is empty\").\"!\", false); }\n# no ip addresses - error in script\nelseif(!isset($res)) \t\t\t\t\t\t\t{ $Result->show(\"info\", _(\"Error\").\"!\", false); }\n# ok\nelse {\n\t# order by IP address\n\tksort($res);\n\n\t//table\n\tprint \"<table class='table table-condensed table-top'>\";\n\n\t//headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('IP').\"</th>\";\n\tprint \"\t<th>\"._('Description').\"</th>\";\n\tprint \"\t<th>\"._('status').\"</th>\";\n\tprint \"\t<th>\"._('hostname').\"</th>\";\n\tprint \"</tr>\";\n\n\t//loop\n\tforeach($res as $r) {\n\t\t//set class\n\t\tif($r['code']==0)\t\t{ $class='success'; }\n\t\telseif($r['code']==100)\t{ $class='warning'; }\n\t\telse\t\t\t\t\t{ $class='danger'; }\n\n\t\tprint \"<tr class='$class'>\";\n\t\tprint \"\t<td>\".$Subnets->transform_to_dotted($r['ip_addr']).\"</td>\";\n\t\tprint \"\t<td>\".$r['description'].\"</td>\";\n\t\tprint \"\t<td>\"._(\"$r[status]\").\"</td>\";\n\t\tprint \"\t<td>\".$r['hostname'].\"</td>\";\n\n\t\tprint \"</tr>\";\n\n\t\t# update ipTag\n\t\tif ($User->settings->updateTags==1 && $Tools->address_types[$r['state']]['updateTag']==1) {\n\t\t\t// online\n\t\t\tif ($r['code']==0 && $r['state']!=2) {\n\t\t\t\t$Scan->update_address_tag ($r['id'], 2, $r['state'], date(\"Y-m-d H:i:s\"));\n\t\t\t}\n\t\t\t// offline\n\t\t\telseif( ($r['code']==1 || $r['code']==2) && $r['state']!=1) {\n\t\t\t\t$Scan->update_address_tag ($r['id'], 1, $r['state'], $r['lastSeen']);\n\t\t\t}\n\t\t}\n\n\t}\n\tprint \"</table>\";\n}\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'><span class='muted'>Scan method: \".$Scan->settings->scanPingType.\"</span></dov>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($output[0]); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with snmp\n *******************************/\n\n# Check we have been included and not called directly\nif (!isset($subnet_scan_execute_included)) { $Result->show(\"danger\", _(\"Invalid request\"), true); }\n\n# scan disabled\nif ($User->settings->enableSNMP!=\"1\")           { $Result->show(\"danger\", \"SNMP module disbled\", true); }\n# subnet check\n$subnet = $Subnets->fetch_subnet (\"id\", $_POST['subnetId']);\nif ($subnet===false)                            { $Result->show(\"danger\", \"Invalid subnet Id\", true);  }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# set class\n$Snmp = new phpipamSNMP ();\n\n// no errors\nerror_reporting(E_ERROR);\n\n// fetch all hosts to be scanned\n$all_subnet_hosts = (array) $Addresses->fetch_subnet_addresses ($_POST['subnetId']);\n\n// execute only if some exist\nif (sizeof($all_subnet_hosts)>0) {\n    // set default statuses\n    foreach ($all_subnet_hosts as $h) {\n        $result[$h->ip_addr] = (array) $h;\n        $result[$h->ip_addr]['code'] = 1;\n        $result[$h->ip_addr]['status'] = \"Offline\";\n    }\n\n    # fetch devices that use get_routing_table query\n    $devices_used = $Tools->fetch_multiple_objects (\"devices\", \"snmp_queries\", \"%get_arp_table%\", \"id\", true, true);\n\n    # filter out not in this section\n    if ($devices_used !== false) {\n        foreach ($devices_used as $d) {\n            // get possible sections\n            $permitted_sections = explode(\";\", $d->sections);\n            // check\n            if (in_array($subnet->sectionId, $permitted_sections)) {\n                $permitted_devices[] = $d;\n            }\n        }\n    }\n\n    // if none set die\n    if (!isset($permitted_devices))                 { $Result->show(\"danger\", \"No devices for SNMP ARP query available\", true); }\n\n    // ok, we have devices, connect to each device and do query\n    foreach ($permitted_devices as $d) {\n        // init\n        $Snmp->set_snmp_device ($d);\n        // execute\n        try {\n           $res = $Snmp->get_query(\"get_arp_table\");\n           // remove those not in subnet\n           if (sizeof($res)>0) {\n               // save for debug\n               $debug[$d->hostname][\"get_arp_table\"] = $res;\n               // check\n               foreach ($res as $kr=>$r) {\n                   if ($Subnets->is_subnet_inside_subnet ($r['ip'].\"/32\", $Subnets->transform_address($subnet->subnet, \"dotted\").\"/\".$subnet->mask)===true) {\n                       // must be existing\n                       if (array_key_exists($Subnets->transform_address($r['ip'], \"decimal\"), $result)) {\n                           // add to alive\n                           $result[$Subnets->transform_address($r['ip'], \"decimal\")]['code'] = 0;\n                           $result[$Subnets->transform_address($r['ip'], \"decimal\")]['status'] = \"Online\";\n                           // update alive time\n                           @$Scan->ping_update_lastseen($result[$Subnets->transform_address($r['ip'], \"decimal\")]['id']);\n                       }\n                   }\n               }\n           }\n           $found[$d->id] = $res;\n\n         } catch (Exception $e) {\n    \t\t$Result->show(\"danger\", \"<pre>\"._(\"Error\").\": \".$e.\"</pre>\", false); ;\n    \t\tdie();\n    \t}\n    }\n}\n?>\n\n\n\n\n<h5><?php print _('Scan results');?>:</h5>\n<hr>\n\n<?php\n# empty\nif(sizeof($all_subnet_hosts)==0) \t\t\t{ $Result->show(\"info\", _(\"Subnet is empty\").\"!\", false); }\n# ok\nelse {\n\t//table\n\tprint \"<table class='table table-condensed table-top'>\";\n\n\t//headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('IP').\"</th>\";\n\tprint \"\t<th>\"._('Description').\"</th>\";\n\tprint \"\t<th>\"._('status').\"</th>\";\n\tprint \"\t<th>\"._('hostname').\"</th>\";\n\tprint \"</tr>\";\n\n\t//loop\n\tforeach($result as $r) {\n\t\t//set class\n\t\tif($r['code']==0)\t\t{ $class='success'; }\n\t\telseif($r['code']==100)\t{ $class='warning'; }\n\t\telse\t\t\t\t\t{ $class='danger'; }\n\n\t\tprint \"<tr class='$class'>\";\n\t\tprint \"\t<td>\".$Subnets->transform_to_dotted($r['ip_addr']).\"</td>\";\n\t\tprint \"\t<td>\".$r['description'].\"</td>\";\n\t\tprint \"\t<td>\"._(\"$r[status]\").\"</td>\";\n\t\tprint \"\t<td>\".$r['hostname'].\"</td>\";\n\n\t\tprint \"</tr>\";\n\t}\n\tprint \"</table>\";\n}\n//print scan method\nprint \"<div class='text-right' style='margin-top:7px;'>\";\nprint \" <span class='muted'>\";\nprint \" Scan method: SNMP ARP<hr>\";\nprint \" Scanned devices: <br>\";\nforeach ($debug as $k=>$d) {\n    print \"&middot; \".$k.\"<br>\";\n}\nprint \"</span>\";\nprint \"</div>\";\n\n# show debug?\nif($_POST['debug']==1) \t\t\t\t{ print \"<pre>\"; print_r($debug); print \"</pre>\"; }", "<?php\n\n/*\n * Discover new hosts with ping\n *******************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Tools\t \t= new Tools ($Database);\n$Admin\t \t= new Admin ($Database, false);\n$Sections\t= new Sections ($Database);\n$Subnets\t= new Subnets ($Database);\n$Addresses\t= new Addresses ($Database);\n$Scan\t \t= new Scan ($Database, $User->settings);\n$DNS\t \t= new DNS ($Database, $User->settings);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n# check maintaneance mode\n$User->check_maintaneance_mode ();\n\n# validate csrf cookie\n$User->Crypto->csrf_cookie (\"validate\", \"scan\", $_POST['csrf_cookie']) === false ? $Result->show(\"danger\", _(\"Invalid CSRF cookie\"), true) : \"\";\n\n# subnet Id must be a integer\nif(!is_numeric($_POST['subnetId']))\t{ $Result->show(\"danger\", _(\"Invalid ID\"), true); }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# fetch subnet details\n$subnet = $Subnets->fetch_subnet (null, $_POST['subnetId']);\n$subnet!==false ? : $Result->show(\"danger\", _(\"Invalid ID\"), true, true);\n\n# fake sectionId for snmp-route-all scan\n$_POST['sectionId'] = $subnet->sectionId;\n\n# full\nif ($_POST['type']!=\"update-icmp\" && $subnet->isFull==1)                { $Result->show(\"warning\", _(\"Cannot scan as subnet is market as used\"), true, true); }\n\n# verify php path\nif(!file_exists($Scan->php_exec))\t{ $Result->show(\"danger\", _(\"Invalid php path\"), true, true); }\n\n$type = $_POST['type'];\n\nswitch ($type) {\n#scan\n    case \"scan-icmp\":\n    case \"scan-telnet\":\n    case \"snmp-arp\":\n    case \"snmp-mac\":\n    case \"snmp-route-all\":\n# discovery\n    case \"update-icmp\":\n    case \"update-snmp-arp\":\n        $csrf = $_POST['csrf_cookie'];\n        $subnet_scan_execute_included = true;\n        require(\"subnet-scan-execute-$type.php\");\n        break;\n    default:\n        $Result->show(\"danger\", _(\"Invalid scan type\"), true);\n}\n", "<?php\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Admin\t \t= new Admin ($Database, false);\n$Subnets\t= new Subnets ($Database);\n$Sections\t= new Sections ($Database);\n$Addresses\t= new Addresses ($Database);\n$Tools      = new Tools ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n# validate csrf cookie\n$User->Crypto->csrf_cookie (\"validate\", \"scan\", $_POST['csrf_cookie']) === false ? $Result->show(\"danger\", _(\"Invalid CSRF cookie\"), true) : \"\";\n\n\n$type = $_POST['type'];\n\nswitch ($type) {\n    case \"scan-icmp\":\n    case \"scan-telnet\":\n    case \"snmp-arp\":\n    case \"snmp-mac\":\n    case \"snmp-route-all\":\n        $subnet_scan_result_included = true;\n        require(\"subnet-scan-result-$type.php\");\n        break;\n    default:\n        $Result->show(\"danger\", _(\"Invalid scan type\"), true);\n}", "<?php\n\n/*\n * Scan subnet for new hosts\n ***************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Admin\t \t= new Admin ($Database, false);\n$Subnets\t= new Subnets ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n# create csrf token\n$csrf = $User->Crypto->csrf_cookie (\"create\", \"scan\");\n\n# ID must be numeric\nif(!is_numeric($_POST['subnetId']))\t\t\t\t\t\t\t\t\t\t{ $Result->show(\"danger\", _(\"Invalid ID\"), true, true); }\n\n# verify that user has write permissionss for subnet\nif($Subnets->check_permission ($User->user, $_POST['subnetId']) != 3) \t{ $Result->show(\"danger\", _('You do not have permissions to modify hosts in this subnet').\"!\", true, true); }\n\n# fetch subnet details\n$subnet = $Subnets->fetch_subnet (null, $_POST['subnetId']);\n$subnet!==false ? : $Result->show(\"danger\", _(\"Invalid ID\"), true, true);\n\n# IPv6 scanning is not supported\nif ( $Subnets->identify_address($subnet->subnet) == \"IPv6\") \t\t\t{ $Result->show(\"danger\", _('IPv6 scanning is not supported').'!', true, true); }\n\n# fix description\n$subnet->description = strlen($subnet->description)>0 ? \"(\".$subnet->description.\")\" : \"\";\n?>\n\n<!-- header -->\n<div class=\"pHeader\"><?php print _('Scan subnet'); ?></div>\n\n\n<!-- content -->\n<div class=\"pContent\">\n\t<table class=\"table table-noborder table-condensed table-scan\">\n    <!-- subnet -->\n    <tr>\n        <td class=\"middle\"><?php print _('Subnet'); ?></td>\n        <td><?php print $Subnets->transform_to_dotted($subnet->subnet).\"/$subnet->mask $subnet->description\"; ?></td>\n    </tr>\n    <!-- Scan type -->\n    <tr>\n    \t<td><?php print _('Select Scan type'); ?></td>\n    \t<td>\n    \t\t<select name=\"type\" id=\"type\" class=\"form-control input-sm input-w-auto\">\n    \t\t\t<!-- Discovery scans -->\n\t    \t\t<optgroup label=\"<?php print _('Discovery scans');?>\">\n\t\t    \t\t<option value=\"scan-icmp\"   <?php if(@$_COOKIE['scantype']==\"scan-icmp\") print \"selected\"; ?>><?php print _('Discovery scans');?>: Ping <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"scan-telnet\" <?php if(@$_COOKIE['scantype']==\"scan-telnet\") print \"selected\"; ?>><?php print _('Discovery scans');?>: Telnet <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"snmp-route-all\"    <?php if(@$_COOKIE['scantype']==\"snmp-route-all\") print \"selected\"; ?>><?php print _('Discovery scans');?>: SNMP nested subnets <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"snmp-arp\"    <?php if(@$_COOKIE['scantype']==\"snmp-arp\") print \"selected\"; ?>><?php print _('Discovery scans');?>: SNMP ARP <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"snmp-mac\"    <?php if(@$_COOKIE['scantype']==\"snmp-mac\") print \"selected\"; ?>><?php print _('Discovery scans');?>: SNMP MAC address <?php print _('scan');?></option>\n\t    \t\t</optgroup>\n    \t\t\t<!-- Status update scans -->\n\t    \t\t<optgroup label=\"<?php print _('Status update scans');?>\">\n\t\t    \t\t<option value=\"update-icmp\"     <?php if(@$_COOKIE['scantype']==\"update-icmp\") print \"selected\"; ?>><?php print _('Status update scans');?>: Ping <?php print _('scan');?></option>\n\t\t    \t\t<option value=\"update-snmp-arp\" <?php if(@$_COOKIE['scantype']==\"update-snmp-arp\") print \"selected\"; ?>><?php print _('Status update scans');?>: SNMP ARP <?php print _('scan');?></option>\n\t    \t\t</optgroup>\n\n\t\t\t</select>\n    \t</td>\n    </tr>\n    <!-- telnet ports -->\n    <tbody id=\"telnetPorts\" style=\"border-top:0px;display:none;\">\n    <tr>\n    \t<td><?php print _('Ports'); ?></td>\n    \t<td>\n\t    \t<input type=\"text\" name=\"telnetports\" class=\"form-control input-sm input-w-200\" placeholder=\"<?php print _(\"Separate multiple ports with ;\"); ?>\">\n    \t</td>\n    </tr>\n    </tbody>\n\n    <tbody style=\"border:0px;\">\n    <tr>\n    \t<td><?php print _('Debug');?></td>\n    \t<td>\n    \t\t<input type=\"checkbox\" name=\"debug\">\n    \t</td>\n    </tr>\n    </tbody>\n\n    </table>\n\n    <!-- warning -->\n    <div class=\"alert alert-warning alert-block\" id=\"alert-scan\">\n    &middot; <?php print _('Discovery scans discover new hosts');?><br>\n    &middot; <?php print _('Status update scans update alive status for whole subnet');?><br>\n    </div>\n\n    <!-- result -->\n\t<div id=\"subnetScanResult\"></div>\n</div>\n\n<!-- footer -->\n<div class=\"pFooter\">\n\t<div class=\"btn-group\">\n\t\t<button class=\"btn btn-sm btn-default hidePopups\"><?php print _('Cancel'); ?></button>\n\t\t<button class=\"btn btn-sm btn-default btn-success\" id=\"subnetScanSubmit\" data-subnetId='<?php print $_POST['subnetId']; ?>' data-csrf-cookie='<?php print $csrf; ?>'><i class=\"fa fa-gears\"></i> <?php print _('Scan subnet'); ?></button>\n\t</div>\n\n\t<div class=\"subnetTruncateResult\"></div>\n</div>", "<?php\n/* set latest version */\ndefine(\"VERSION\", \"1.4\");\t\t\t\t\t\t\t\t\t//decimal release version e.g 1.32\n/* set latest version */\ndefine(\"VERSION_VISIBLE\", \"1.4\");\t\t\t\t\t\t\t//visible version in footer e.g 1.3.2\n/* set latest revision */\ndefine(\"REVISION\", \"031\");\t\t\t\t\t\t\t\t\t//increment on static content changes (js/css) or point releases to avoid caching issues\n/* set last possible upgrade */\ndefine(\"LAST_POSSIBLE\", \"1.1\");\t\t\t\t\t\t\t\t//minimum required version to be able to upgrade\n\n// Automatically set DBVERSION as everyone forgets!\nfunction get_dbversion() {\n    require('upgrade_queries.php');\n    $upgrade_keys = array_keys($upgrade_queries);\n    return str_replace(VERSION.\".\", \"\", end($upgrade_keys));\n}\n\nif(!defined('DBVERSION'))\ndefine('DBVERSION', get_dbversion());\n\n/* prefix for css/js */\ndefine(\"SCRIPT_PREFIX\", VERSION_VISIBLE.'_r'.REVISION.'_v'.DBVERSION);\t\t//css and js folder prefix to prevent caching issues", "\n/**\n *\n * Javascript / jQuery functions\n *\n *\n */\n$(document).ready(function () {\n\n/* @general functions */\n\n/*loading spinner functions */\nfunction showSpinner() { $('div.loading').show(); }\nfunction hideSpinner() { $('div.loading').fadeOut('fast'); }\n\n/* escape hide popups */\n$(document).keydown(function(e) {\n    if(e.keyCode === 27) {\n         if($(\"#popupOverlay2\").is(\":visible\")) {\n            hidePopup2 ();\n         }\n         else {\n            hidePopup1 ();\n         }\n    }\n});\n\n// no enter in sortfields\n$(document).on(\"submit\", \".searchFormClass\", function() {\n    return false;\n});\n\n$('.show_popover').popover();\n\n\n/* this functions opens popup */\n/* -------------------------- */\nfunction open_popup (popup_class, target_script, post_data, secondary) {\n\t// class\n\tsecondary = typeof secondary !== 'undefined' ? secondary : false;\n\t// show spinner\n\tshowSpinner();\n\t// post\n    $.post(target_script, post_data, function(data) {\n        showPopup('popup_w'+popup_class, data, secondary);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText+\"<br>Status: \"+textStatus+\"<br>Error: \"+errorThrown); });\n    // prevent reload\n    return false;\n}\n\n/* this functions saves popup result */\n/* --------------------------------- */\nfunction submit_popup_data (result_div, target_script, post_data, reload) {\n\t// show spinner\n\tshowSpinner();\n\t// set reload\n\treload = typeof reload !== 'undefined' ? reload : true;\n\t// post\n    $.post(target_script, post_data, function(data) {\n        $('div'+result_div).html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        if(reload) {\n\t        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1 && data.search(\"alert-warning\")==-1 )\t{ setTimeout(function (){window.location.reload();}, 1500); }\n\t        else                               \t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ hideSpinner(); }\n        }\n        else {\n\t        hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    // prevent reload\n    return false;\n}\n\n/* reload window function for ajax error checking */\nfunction reload_window (data) {\n\tif(\tdata.search(\"alert-danger\")==-1 &&\n\t\tdata.search(\"error\")==-1 &&\n\t\tdata.search(\"alert-warning\") == -1 )    { setTimeout(function (){window.location.reload();}, 1500); }\n\telse                               \t\t  \t{ hideSpinner(); }\n}\n\n/* tooltips */\nif ($(\"[rel=tooltip]\").length) { $(\"[rel=tooltip]\").tooltip(); }\n\n/* hide error div if jquery loads ok\n*********************************************/\n$('div.jqueryError').hide();\n\n/* Show / hide JS error */\nfunction showError(errorText) {\n\t$('div.jqueryError').fadeIn('fast');\n\tif(errorText.length>0)  { $('.jqueryErrorText').html(errorText).show(); }\n\thideSpinner();\n}\nfunction hideError() {\n\t$('.jqueryErrorText').html();\n\t$('div.jqueryError').fadeOut('fast');\n}\n//hide error popup\n$(document).on(\"click\", \"#hideError\", function() {\n\thideError();\treturn false;\n});\n//disabled links\n$('.disabled a').click(function() {\treturn false;\n});\n\n/* tooltip hiding fix */\nfunction hideTooltips() { $('.tooltip').hide(); }\n\n/* popups */\nfunction showPopup(pClass, data, secondary) {\n\tshowSpinner();\n\t// secondary - load secondary popupoverlay\n\tif (secondary === true) { var oclass = \"#popupOverlay2\";}\n\telse \t\t\t\t\t{ var oclass = \"#popupOverlay\"; }\n\t// show overlay\n    $(oclass).fadeIn('fast');\n    // load data and show it\n    if (data!==false && typeof(data)!==\"undefined\") {\n    $(oclass+' .'+pClass).html(data);\n    }\n\t// malaiam: Weird popup_max bug loads same content in both popupOverlay and popupOverlay2, duplicating forms and URL parameter, messing things up, so we delete it\n\tif (secondary != true) { $('#popupOverlay2 > div').empty(); }\n    $(oclass+' .'+pClass).fadeIn('fast');\n    //disable page scrolling on bottom\n    $('body').addClass('stop-scrolling');\n    // resize\n    resize_pContent ()\n}\nfunction hidePopup(pClass, secondary) {\n\t// secondary - load secondary popupoverlay\n\tif (secondary === true) { var oclass = \"#popupOverlay2\";}\n\telse \t\t\t\t\t{ var oclass = \"#popupOverlay\"; }\n\t// hide\n    $(oclass+' .'+pClass).fadeOut('fast');\n\t// IMPORTANT: also empty loaded content to avoid issues on popup reopening\n\t$(oclass+' > div').empty();\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n}\nfunction hidePopups() {\n    $('#popupOverlay').fadeOut('fast');\n    $('#popupOverlay2').fadeOut('fast');\n\n\t// IMPORTANT: also empty loaded content to avoid issues on popup reopening\n\t$('#popupOverlay > div').empty();\n\t$('#popupOverlay2 > div').empty();\n\n    $('.popup').fadeOut('fast');\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n    hideSpinner();\n}\nfunction hidePopup1() {\n    $('#popupOverlay').fadeOut('fast');\n    $('#popupOverlay .popup').fadeOut('fast');\n    // IMPORTANT: also empty loaded content to avoid issues on popup reopening\n    $('#popupOverlay > div').empty();\n    hideSpinner();\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n}\nfunction hidePopup2() {\n    $('#popupOverlay2').fadeOut('fast');\n    $('#popupOverlay2 .popup').fadeOut('fast');\n\t// IMPORTANT: also empty loaded content to avoid issues on popup reopening\n\t$('#popupOverlay2 > div').empty();\n    hideSpinner();\n    $('body').removeClass('stop-scrolling');        //enable scrolling back\n}\nfunction hidePopupMasks() {\n    $('.popup_wmasks').fadeOut('fast');\n    hideSpinner();\n}\n$(document).on(\"click\", \".hidePopups\", function() {hidePopups(); });\n$(document).on(\"click\", \".hidePopup2\", function() { hidePopup2(); });\n$(document).on(\"click\", \".hidePopupMasks\", function() { hidePopupMasks(); });\n$(document).on(\"click\", \".hidePopupsReload\", function() { window.location.reload(); });\n\n//prevent loading for disabled buttons\n$('a.disabled, button.disabled').click(function() { return false; });\n\n//fix for menus on ipad\n$('body').on('touchstart.dropdown', '.dropdown-menu', function (e) { e.stopPropagation(); });\n\n/*    generate random password */\nfunction randomPass() {\n    var chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n    var pass = \"\";\n    var x;\n    var i;\n    for(x=0; x<10; x++) {\n        i = Math.floor(Math.random() * 62);\n        pass += chars.charAt(i);\n    }\n    return pass;\n}\n\n// on load\nresize_pContent ()\n// on resize\n$(window).resize(function () {\n    resize_pContent ()\n});\n\nfunction resize_pContent () {\n    if($(\".popup .pContent\").is(\":visible\")) {\n        var myheight = $(window).height() - 250;\n        $(\".popup .pContent\").css('max-height', myheight);\n    }\n}\n\n/* remove self on click */\n$(document).on(\"click\", \".selfDestruct\", function() {\n\t$(this).parent('div').fadeOut('fast');\n});\n\n\n/* @cookies */\nfunction createCookie(name,value,days) {\n    var date;\n    var expires;\n\n    if (typeof days === 'undefined') {\n        date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        expires = \"; expires=\"+date.toGMTString();\n    }\n    else {\n\t    var expires = \"\";\n    }\n\n    document.cookie = name+\"=\"+value+expires+\"; path=/\";\n}\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\n\n/* draggeable elements */\n$(function() {\n\t$(\".popup\").draggable({ handle: \".pHeader\" });\n});\n\n// bootstrap-table\n$('table.sorted-new')\n                 .attr(\"data-toggle\", \"table\")\n                 .attr('data-pagination', 'true')\n                 .attr('data-page-size', '250')\n                 .attr('data-page-list', '[50,100,250,500,All]')\n                 .attr('data-search','true')\n                 .attr('data-classes','table-no-bordered')\n                 .attr('data-icon-size','sm')\n                 .attr('data-show-footer','false')\n                 .attr('data-show-columns','true')\n                 .attr('data-icons-prefix','fa')\n                 .attr('data-icons','icons')\n                 .attr('data-cookie','true')\n                 .attr('data-sortable', 'false')\n\n$('table.sorted')\n                 .attr(\"data-toggle\", \"table\")\n                 .attr('data-pagination', 'true')\n                 .attr('data-page-size', '50')\n                 .attr('data-page-list', '[50,100,250,500,All]')\n                 .attr('data-search','true')\n                 .attr('data-classes','table-no-bordered')\n                 .attr('data-icon-size','sm')\n                 .attr('data-show-footer','false')\n                 .attr('data-show-columns','true')\n                 .attr('data-icons-prefix','fa')\n                 .attr('data-icons','icons')\n                 .attr('data-cookie', 'true')\n                 .attr('data-sortable', 'false')\n                 .attr('onlyInfoPagination', 'true')\n                 .attr('smartDisplay', true)\n                 .attr('showPaginationSwitch', true)\n                 .attr('minimumCountColumns', true)\n\n$('table.nosearch')\n                 .attr('data-search','false')\n                 .attr('data-show-columns','false')\n\n$('table.nopagination')\n                 .attr('data-pagination', 'false')\n\n$('table.sortable')\n                 .attr('data-sortable', 'true')\n\n// tooltips, popovers\n$('table.sorted').on('all.bs.table', function () {\n    if ($(\"[rel=tooltip]\").length) { $(\"[rel=tooltip]\").tooltip(); }\n    $('.show_popover').popover();\n})\n\n\n// icons - bootstrap table\nwindow.icons = {\n    refresh : 'fa-refresh',\n    toggle  : 'fa-toggle-on',\n    columns : 'fa-th-list'\n};\n\n\n$(\"li.disabled a\").click(function () {\n   return false;\n});\n$('form.search-form').submit(function() {\n   return false;\n});\n\n\n\n\n\n/**\n * Generic open popup scripts\n *\n * Generic function to open popup and provide data via POST attributes\n *\n * Attributes are:\n *     - data-script: script to load in popup\n *     - data-class: popup class/size (400, 700, ...)\n *     - data-secondary: open secondary popup\n *     - data-* : all data- parameters will be passed as POST params to requested script\n *\n * @return void\n */\n$(document).on(\"click\", \".open_popup\", function () {\n    // defaults\n    var post_data     = {};\n    var secondary     = false;\n    var popup_class   = \"400\";\n    var target_script = \"\";\n    // get all data- attributes\n    $.each(this.attributes, function() {\n        // script\n        if(this.name == \"data-script\") {\n            target_script = this.value;\n        }\n        // class\n        else if(this.name == \"data-class\") {\n            popup_class = this.value;\n        }\n        // secondary\n        else if(this.name == \"data-secondary\") {\n            secondary = true;\n        }\n        // parameters\n        else if(this.name.indexOf(\"data-\") !== -1) {\n            post_data[this.name.replace(\"data-\", \"\")] = this.value;\n        }\n    });\n    // checks\n    if(target_script == \"\") {\n        showError(\"Error: Missing target_script\");\n    }\n    // load popup\n    else {\n        open_popup (popup_class, target_script, post_data, secondary);\n    }\n    // no reload\n    return false;\n});\n\n\n/**\n * Generic submit popup script\n *\n * It will POST data from provided script and attributes to target\n * script and display it in target div\n *\n *\n */\n$(document).on(\"click\", \".submit_popup\", function () {\n    // defaults\n    var post_data     = {};\n    var reload        = true;\n    var result_div    = \"\";\n    var target_script = \"\";\n    // get all data- attributes\n    $.each(this.attributes, function() {\n        // script\n        if(this.name == \"data-script\") {\n            target_script = this.value;\n        }\n        // class\n        else if(this.name == \"data-result_div\") {\n            result_div = \"#\"+this.value;\n        }\n        // secondary\n        else if(this.name == \"data-noreload\") {\n            reload = false;\n        }\n        // get form parameters\n        else if(this.name == \"data-form\") {\n            post_data = $('form#'+this.value).serialize ()\n        }\n    });\n    // checks\n    if(target_script == \"\") {\n        showError(\"Error: Missing target_script\")\n    }\n    else if (result_div == \"\") {\n        showError(\"Error: Missing result div parameter\")\n    }\n    // load popup\n    else {\n        submit_popup_data (result_div, target_script, post_data, reload)\n    }\n    // no reload\n    return false;\n});\n\n\n\n\n\n/* @dashboard widgets ----------  */\n\n//if dashboard show widgets\nif($('#dashboard').length>0) {\n\t//get all boxes\n\t$('div[id^=\"w-\"]').each(function(){\n\t\tvar w = $(this).attr('id');\n\t\t//remove w-\n\t\tw = w.replace(\"w-\", \"\");\n\t\t$.post('app/dashboard/widgets/'+w+'.php', function(data) {\n\t\t\t$(\"#w-\"+w+' .hContent').html(data);\n\t\t}).fail(function(xhr, textStatus, errorThrown) {\n            $.post('app/dashboard/widgets/custom/'+w+'.php', function(data) {\n                $(\"#w-\"+w+' .hContent').html(data);\n            }).fail(function(xhr, textStatus, errorThrown) {\n    \t\t\t$(\"#w-\"+w+' .hContent').html('<blockquote style=\"margin-top:20px;margin-left:20px;\">File not found!</blockquote>');\n            })\n\t\t});\n\t});\n}\n//remove item\n$(document).on('click', \"i.remove-widget\", function() {\n\t$(this).parent().parent().fadeOut('fast').remove();\n});\n//add new widget form popup\n$(document).on('click', '#sortablePopup li a.widget-add', function() {\n\tvar wid   = $(this).attr('id');\n\tvar wsize = $(this).attr('data-size');\n\tvar wtitle= $(this).attr('data-htitle');\n\t//create\n\tvar data = '<div class=\"row-fluid\"><div class=\"span'+wsize+' widget-dash\" id=\"'+wid+'\"><div class=\"inner movable\"><h4>'+wtitle+'</h4><div class=\"hContent\"></div></div></div></div>';\n\t$('#dashboard').append(data);\n\t//load\n\tw = wid.replace(\"w-\", \"\");\n\t$.post('app/dashboard/widgets/'+w+'.php', function(data) {\n\t\t$(\"#\"+wid+' .hContent').html(data);\n\t}).fail(function(xhr, textStatus, errorThrown) {\n\t\t$(\"#\"+wid+' .hContent').html('<blockquote style=\"margin-top:20px;margin-left:20px;\">File not found!</blockquote>');\n\t});\n\t//remove item\n\t$(this).parent().fadeOut('fast');\treturn false;\n});\n\n\n\n/* @subnets list ----------  */\n\n/* leftmenu toggle submenus */\n// default hide\n$('ul.submenu.submenu-close').hide();\n// left menu folder delay tooltip\n$('.icon-folder-close,.icon-folder-show, .icon-search').tooltip( {\n    delay: {show:2000, hide:0},\n    placement:\"bottom\"\n});\n// show submenus\n$('ul#subnets').on(\"click\", \".fa-folder-close-o\", function() {\n    //change icon\n    $(this).removeClass('fa-folder-close-o').addClass('fa-folder-open-o');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideDown('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"add\", $(this).attr(\"data-str_id\"));\n});\n$('ul#subnets').on(\"click\", \".fa-folder\", function() {\n    //change icon\n    $(this).removeClass('fa-folder').addClass('fa-folder-open');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideDown('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"add\", $(this).attr(\"data-str_id\"));\n});\n// hide submenus\n$('ul#subnets').on(\"click\", \".fa-folder-open-o\", function() {\n    //change icon\n    $(this).removeClass('fa-folder-open-o').addClass('fa-folder-close-o');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideUp('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"remove\", $(this).attr(\"data-str_id\"));\n});\n$('ul#subnets').on(\"click\", \".fa-folder-open\", function() {\n    //change icon\n    $(this).removeClass('fa-folder-open').addClass('fa-folder');\n    //find next submenu and hide it\n    $(this).nextAll('.submenu').slideUp('fast');\n\t//save cookie\n    update_subnet_structure_cookie (\"remove\", $(this).attr(\"data-str_id\"));\n});\n\n\n/* Function to save subnets structure left menu to cookie */\nfunction update_subnet_structure_cookie (action, cid) {\n\t// read old cookie\n\tvar s_cookie = readCookie(\"sstr\");\n\t// defualt - if empty\n \tif(typeof s_cookie === 'undefined' || s_cookie==null || s_cookie.length===0)\ts_cookie = \"|\";\n\t// add or replace\n\tif (action == \"add\") {\n\t\t// split to array and check if it already exists\n\t\tvar arr = s_cookie.split('|');\n\t\tvar exists = false;\n\t\tfor(var i=0;i < arr.length;i++) {\n        \tif(arr[i]==cid) {\n\t     \t\texists = true;\n        }\t}\n        // new\n        if(exists==false)\ts_cookie += cid+\"|\";\n\t}\n\telse if (action == \"remove\")\t{\n\t\ts_cookie = s_cookie.replace(\"|\"+cid+\"|\", \"|\");\n\t}\n\t// save cookie\n\tcreateCookie(\"sstr\",s_cookie, 365);\n}\n\n//expand/contract all\n$('#expandfolders').click(function() {\n    // get action\n    var action = $(this).attr('data-action');\n    //open\n    if(action == 'close') {\n        $('.subnets ul#subnets li.folder > i').removeClass('fa-folder-close-o').addClass('fa-folder-open-o');\n        $('.subnets ul#subnets li.folderF > i').removeClass('fa-folder').addClass('fa-folder-open');\n        $('.subnets ul#subnets ul.submenu').removeClass('submenu-close').addClass('submenu-open').slideDown('fast');\n        $(this).attr('data-action','open');\n        createCookie('expandfolders','1','365');\n        $(this).removeClass('fa-expand').addClass('fa-compress');\n    }\n    else {\n        $('.subnets ul#subnets li.folder > i').addClass('fa-folder-close-o').removeClass('fa-folder-open-o');\n        $('.subnets ul#subnets li.folderF > i').addClass('fa-folder').removeClass('fa-folder-open');\n        $('.subnets ul#subnets ul.submenu').addClass('submenu-close').removeClass('submenu-open').slideUp('fast');\n        $(this).attr('data-action','close');\n        createCookie('expandfolders','0','365');\n        $(this).removeClass('fa-compress').addClass('fa-expand');\n    }\n});\n\n\n\n\n\n\n\n\n\n\n/* @ipaddress list ---------- */\n\n\n/*    add / edit / delete IP address\n****************************************/\n//show form\n$(document).on(\"click\", \".modIPaddr\", function() {\n    showSpinner();\n    var action    = $(this).attr('data-action');\n    var id        = $(this).attr('data-id');\n    var subnetId  = $(this).attr('data-subnetId');\n    var stopIP    = $(this).attr('data-stopIP');\n    //format posted values\n    var postdata = \"action=\"+action+\"&id=\"+id+\"&subnetId=\"+subnetId+\"&stopIP=\"+stopIP;\n    $.post('app/subnets/addresses/address-modify.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//move orphaned IP address\n$(document).on(\"click\", \"a.moveIPaddr\", function() {\n    showSpinner();\n    var action      = $(this).attr('data-action');\n    var id        = $(this).attr('data-id');\n    var subnetId  = $(this).attr('data-subnetId');\n    //format posted values\n    var postdata = \"action=\"+action+\"&id=\"+id+\"&subnetId=\"+subnetId;\n    $.post('app/subnets/addresses/move-address.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w400').html(data);\n        showPopup('popup_w400');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//resolve DNS name\n$(document).on(\"click\", \"#refreshHostname\", function() {\n    showSpinner();\n    var ipaddress = $('input.ip_addr').val();\n    var subnetId  = $(this).attr('data-subnetId');;\n    $.post('app/subnets/addresses/address-resolve.php', {ipaddress:ipaddress, subnetId: subnetId}, function(data) {\n        if(data.length !== 0) {\n            $('input[name=hostname]').val(data);\n        }\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//submit ip address change\n$(document).on(\"click\", \"button#editIPAddressSubmit, .editIPSubmitDelete\", function() {\n    //show spinner\n    showSpinner();\n    var postdata = $('form.editipaddress').serialize();\n\n    //append deleteconfirm\n\tif($(this).attr('id') == \"editIPSubmitDelete\") { postdata += \"&deleteconfirm=yes&action=delete\"; }\n    //replace delete if from visual\n    if($(this).attr('data-action') == \"all-delete\" ) { postdata += '&action-visual=delete';}\n\n    $.post('app/subnets/addresses/address-modify-submit.php', postdata, function(data) {\n        $('div.addnew_check').html(data);\n        $('div.addnew_check').slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//ping check\n$(document).on(\"click\", \".ping_ipaddress\", function() {\n\tshowSpinner();\n\tvar id       = $(this).attr('data-id');\n\tvar subnetId = $(this).attr('data-subnetId');\n\t// new ip?\n\tif ($(this).hasClass(\"ping_ipaddress_new\")) { id = $(\"input[name=ip_addr]\").val(); }\n\t//check\n\t$.post('app/subnets/addresses/ping-address.php', {id:id, subnetId:subnetId}, function(data) {\n        $('#popupOverlay2 div.popup_w400').html(data);\n        showPopup('popup_w400', false, true);\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    send notification mail\n********************************/\n//show form\n$(document).on(\"click\", \"a.mail_ipaddress\", function() {\n    //get IP address id\n    var IPid = $(this).attr('data-id');\n    $.post('app/subnets/addresses/mail-notify.php', { id:IPid }, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//send mail with IP details!\n$(document).on(\"click\", \"#mailIPAddressSubmit\", function() {\n    showSpinner();\n    var mailData = $('form#mailNotify').serialize();\n    //post to check script\n    $.post('app/subnets/addresses/mail-notify-check.php', mailData, function(data) {\n        $('div.sendmail_check').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n/*    send notification mail - subnet\n********************************/\n//show form\n$(document).on(\"click\", \"a.mail_subnet\", function() {\n    //get IP address id\n    var id = $(this).attr('data-id');\n    $.post('app/subnets/mail-notify-subnet.php', { id:id }, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//send mail with IP details!\n$(document).on(\"click\", \"#mailSubnetSubmit\", function() {\n    showSpinner();\n    var mailData = $('form#mailNotifySubnet').serialize();\n    //post to check script\n    $.post('app/subnets/mail-notify-subnet-check.php', mailData, function(data) {\n        $('div.sendmail_check').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*    scan subnet\n*************************/\n//open popup\n$('a.scan_subnet').click(function() {\n\tshowSpinner();\n\tvar subnetId = $(this).attr('data-subnetId');\n\t$.post('app/subnets/scan/subnet-scan.php', {subnetId:subnetId}, function(data) {\n        $('#popupOverlay div.popup_wmasks').html(data);\n        showPopup('popup_wmasks');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//show telnet port\n$(document).on('change', \"table.table-scan select#type\", function() {\n\tvar pingType = $('select[name=type]').find(\":selected\").val();\n\tif(pingType==\"scan-telnet\") { $('tbody#telnetPorts').show(); }\n\telse \t\t\t\t\t\t{ $('tbody#telnetPorts').hide(); }\n});\n//save value to cookie\n$(document).on('change', \"table.table-scan select#type\", function() {\n    var sel = ($(this).find(\":selected\").val());\n    createCookie(\"scantype\",sel,32);\n});\n\n//start scanning\n$(document).on('click','#subnetScanSubmit', function() {\n\tshowSpinner();\n\t$('#subnetScanResult').slideUp('fast');\n\tvar subnetId = $(this).attr('data-subnetId');\n\tvar csrf     = $(this).attr('data-csrf-cookie');\n\tvar type \t = $('select[name=type]').find(\":selected\").val();\n\tif($('input[name=debug]').is(':checked'))\t{ var debug = 1; }\n\telse\t\t\t\t\t\t\t\t\t\t{ var debug = 0; }\n\tvar port     = $('input[name=telnetports]').val();\n\t$('#alert-scan').slideUp('fast');\n\t$.post('app/subnets/scan/subnet-scan-execute.php', {subnetId:subnetId, type:type, debug:debug, port:port, csrf_cookie:csrf}, function(data) {\n        $('#subnetScanResult').html(data).slideDown('fast');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//remove result\n$(document).on('click', '.resultRemove', function() {\n\t// if MAC table show IP that is hidden\n\tif ($(this).hasClass('resultRemoveMac')) {\n    \t// if this one is hidden dont show ip for next\n    \tif ($(this).parent().parent().find('span.ip-address').hasClass('hidden')) {\n\n    \t}\n    \t// else show\n        else {\n            $(this).parent().parent().next().find('span.ip-address').removeClass('hidden');\n        }\n\t}\n    // get target\n\tvar target = $(this).attr('data-target');\n\t$('tr.'+target).remove();\treturn false;\n});\n//submit scanning result\n$(document).on('click', 'a#saveScanResults', function() {\n\tshowSpinner();\n\tvar script   = $(this).attr('data-script');\n\tvar subnetId = $(this).attr('data-subnetId');\n\tvar postData = $('form.'+script+\"-form\").serialize();\n\tvar postData = postData+\"&subnetId=\"+subnetId;\n\tvar postData = postData+\"&type=\"+script;\n\t$.post('app/subnets/scan/subnet-scan-result.php', postData, function(data) {\n        $('#subnetScanAddResult').html(data);\n        //hide if success!\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n\n/*    import IP addresses\n*************************/\n//load CSV import form\n$('a.csvImport').click(function () {\n    showSpinner();\n    var subnetId = $(this).attr('data-subnetId');\n    $.post('app/subnets/import-subnet/index.php', {subnetId:subnetId}, function(data) {\n        $('div.popup_max').html(data);\n        showPopup('popup_max');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//display uploaded file\n$(document).on(\"click\", \"input#csvimportcheck\", function() {\n    showSpinner();\n    //get filetype\n    var filetype = $('span.fname').html();\n    var xlsSubnetId  = $('a.csvImport').attr('data-subnetId');\n    $.post('app/subnets/import-subnet/print-file.php', { filetype:filetype, subnetId:xlsSubnetId }, function(data) {\n        $('div.csvimportverify').html(data).slideDown('fast');\n        hideSpinner();\n        // add reload class\n        $('.importFooter').removeClass(\"hidePopups\").addClass(\"hidePopupsReload\");\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//import file script\n$(document).on(\"click\", \"input#csvImportNo\", function() {\n    $('div.csvimportverify').hide('fast');\n});\n$(document).on(\"click\", \"input#csvImportYes\", function() {\n    showSpinner();\n    //get filetype\n    var filetype = $('span.fname').html();\n    //ignore errors\n    if($('input[name=ignoreErrors]').is(':checked'))    { var ignoreError = \"1\"; }\n    else                                                { var ignoreError = \"0\"; }\n    // get active subnet ID\n    var xlsSubnetId  = $('a.csvImport').attr('data-subnetId');\n    // Get CSRF cookie\n    var csrf_cookie = $('input[name=csrf_cookie]').val();\n    var postData = \"subnetId=\" + xlsSubnetId + \"&filetype=\" + filetype + \"&ignoreError=\" + ignoreError + \"&csrf_cookie=\" + csrf_cookie;\n\n    $.post('app/subnets/import-subnet/import-file.php', postData, function(data) {\n        $('div.csvImportResult').html(data).slideDown('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//download template\n$(document).on(\"click\", \"#csvtemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/subnets/import-subnet/import-template.php'></iframe></div>\");\n\treturn false;\n});\n//download vrf template\n$(document).on(\"click\", \"#vrftemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=vrf'></iframe></div>\");\n\treturn false;\n});\n\n//download domain template\n$(document).on(\"click\", \"#vlanstemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=vlans'></iframe></div>\");\n\treturn false;\n});\n\n//download domain template\n$(document).on(\"click\", \"#l2domtemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=l2dom'></iframe></div>\");\n\treturn false;\n});\n\n\n//download vlan domain template\n$(document).on(\"click\", \"#vlandomaintemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=vlandomain'></iframe></div>\");\n\treturn false;\n});\n\n\n//download subnet template\n$(document).on(\"click\", \"#subnetstemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=subnets'></iframe></div>\");\n\treturn false;\n});\n\n\n//download ip address template\n$(document).on(\"click\", \"#ipaddrtemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=ipaddr'></iframe></div>\");\n\treturn false;\n});\n\n\n//download device template\n$(document).on(\"click\", \"#devicestemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=devices'></iframe></div>\");\treturn false;\n});\n\n\n//download device types template\n$(document).on(\"click\", \"#devtypetemplate\", function() {\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/import-template.php?type=devtype'></iframe></div>\");\n\treturn false;\n});\n\n\n\n/*    export IP addresses\n*************************/\n//show fields\n$('a.csvExport').click(function() {\n    showSpinner();\n    var subnetId = $(this).attr('data-subnetId');\n    //show select fields\n    $.post('app/subnets/addresses/export-field-select.php', {subnetId:subnetId}, function(data) {\n\t    $('#popupOverlay div.popup_w400').html(data);\n        showPopup('popup_w400');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//export\n$(document).on(\"click\", \"button#exportSubnet\", function() {\n    var subnetId = $('a.csvExport').attr('data-subnetId');\n    //get selected fields\n    var exportFields = $('form#selectExportFields').serialize();\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/subnets/addresses/export-subnet.php?subnetId=\" + subnetId + \"&\" + exportFields + \"'></iframe></div>\");\n    return false;\n});\n\n\n/*\tadd / remove favourite subnet\n*********************************/\n$(document).on('click', 'a.editFavourite', function() {\n\tvar subnetId = $(this).attr('data-subnetId');\n\tvar action   = $(this).attr('data-action');\n\tvar from     = $(this).attr('data-from');\n\tvar item     = $(this);\n\n\t//remove\n\t$.post('app/tools/favourites/favourite-edit.php', {subnetId:subnetId, action:action, from:from}, function(data) {\n\t\t//success - widget - remove item\n\t\tif(data=='success' && from=='widget') \t{\n\t\t\t$('tr.favSubnet-'+subnetId).addClass('error');\n\t\t\t$('tr.favSubnet-'+subnetId).delay(200).fadeOut();\n\t\t}\n\t\t//success - subnet - toggle star-empty\n\t\telse if (data=='success') \t\t\t\t{\n\t\t\t$(this).toggleClass('btn-info');\n\t\t\t$('a.favourite-'+subnetId+\" i\").toggleClass('fa-star-o');\n\t\t\t$(item).toggleClass('btn-info');\n\t\t\t//remove\n\t\t\tif(action==\"remove\") {\n\t\t\t\t$('a.favourite-'+subnetId).attr('data-original-title','Click to add to favourites');\n\t\t\t\t$(item).attr('data-action','add');\n\t\t\t}\n\t\t\t//add\n\t\t\telse {\n\t\t\t\t$('a.favourite-'+subnetId).attr('data-original-title','Click to remove from favourites');\n\t\t\t\t$(item).attr('data-action','remove');\n\t\t\t}\n\t\t}\n\t\t//fail\n\t\telse {\n\t        $('#popupOverlay div.popup_w500').html(data);\n\t        showPopup('popup_w500');\n\t        hideSpinner();\n\t\t}\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    request IP address for non-admins if locked or viewer\n*********************************************************/\n//show request form\n$('a.request_ipaddress').click(function () {\n    showSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    $.post('app/tools/request-ip/index.php', {subnetId:subnetId}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//show request form from widget\n$(document).on(\"click\", \"button#requestIP_widget\", function() {\n    showSpinner();\n\tvar subnetId = $('select#subnetId option:selected').attr('value');\n    var ip_addr = document.getElementById('ip_addr_widget').value;\n    $.post('app/tools/request-ip/index.php', {subnetId:subnetId, ip_addr:ip_addr}, function(data) {\n        $('div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//auto-suggest first available IP in selected subnet\n$(document).on(\"change\", \"select#subnetId\", function() {\n    showSpinner();\n    var subnetId = $('select#subnetId option:selected').attr('value');\n    //post it via json to request_ip_first_free.php\n    $.post('app/login/request_ip_first_free.php', { subnetId:subnetId}, function(data) {\n        $('input.ip_addr').val(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n\n//submit request\n$(document).on(\"click\", \"button#requestIPAddressSubmit\", function() {\n    showSpinner();\n    var request = $('form#requestIP').serialize();\n    $.post('app/login/request_ip_result.php', request, function(data) {\n        $('div#requestIPresult').html(data).slideDown('fast');\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n\n\n\n\n/* @tools ----------- */\n\n\n/* ipCalc */\n//submit form\n$('form#ipCalc').submit(function () {\n    showSpinner();\n    var ipCalcData = $(this).serialize();\n    $.post('app/tools/ip-calculator/result.php', ipCalcData, function(data) {\n        $('div.ipCalcResult').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//reset input\n$('form#ipCalc input.reset').click(function () {\n    $('form#ipCalc input[type=\"text\"]').val('');\n    $('div.ipCalcResult').fadeOut('fast');\n});\n//\n$(document).on(\"click\", \"a.create_section_subnet_from_search\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var sectionId = $(this).attr('data-sectionId')\n    var subnet    = $(this).attr('data-subnet')\n    var bitmask   = $(this).attr('data-bitmask')\n\n    // formulate postdata\n    var postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + subnet + \"&bitmask=\" + bitmask + \"&action=add&location=ipcalc\";\n\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    });\n\n    return false;\n})\n\n/* search function */\nfunction search_execute (loc) {\n    showSpinner();\n    // location based params\n    if (loc==\"topmenu\") {\n        var ip = $('.searchInput').val();\n        var form_name = \"searchSelect\";\n    }\n    else {\n        var ip = $('form#search .search').val();\n        var form_name = \"search\";\n    }\n    ip = ip.replace(/\\//g, \"%252F\");\n    // parameters\n    var addresses = $('#'+form_name+' input[name=addresses]').is(\":checked\") ? \"on\" : \"off\";\n    var subnets   = $('#'+form_name+' input[name=subnets]').is(\":checked\") ? \"on\" : \"off\";\n    var vlans     = $('#'+form_name+' input[name=vlans]').is(\":checked\") ? \"on\" : \"off\";\n    var vrf       = $('#'+form_name+' input[name=vrf]').is(\":checked\") ? \"on\" : \"off\";\n    var pstn      = $('#'+form_name+' input[name=pstn]').is(\":checked\") ? \"on\" : \"off\";\n    var circuits  = $('#'+form_name+' input[name=circuits]').is(\":checked\") ? \"on\" : \"off\";\n    var customers = $('#'+form_name+' input[name=customers]').is(\":checked\") ? \"on\" : \"off\";\n\n    // set cookie json-encoded with parameters\n    createCookie(\"search_parameters\",'{\"addresses\":\"'+addresses+'\",\"subnets\":\"'+subnets+'\",\"vlans\":\"'+vlans+'\",\"vrf\":\"'+vrf+'\",\"pstn\":\"'+pstn+'\",\"circuits\":\"'+circuits+'\",\"customers\":\"'+customers+'\"}',365);\n\n    //lets try to detect IEto set location\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    var edge = ua.indexOf(\"Edge/\");\n    //IE\n    if (msie > 0 || edge > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) \t{ var base = $('.iebase').html(); }\n    else \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ var base = \"\"; }\n    //go to search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ window.location = base + \"tools/search/\"+ip; }\n\telse\t\t\t\t\t{ window.location = base + \"index.php?page=tools&section=search&ip=\"+ip; }\n}\n//submit form - topmenu\n$('.searchSubmit').click(function () {\n    search_execute (\"topmenu\");\n    return false;\n});\n//submit form - topmenu\n$('form#userMenuSearch').submit(function () {\n    search_execute (\"topmenu\");\n    return false;\n});\n//submit search form\n$('form#search').submit(function () {\n    search_execute (\"search\");\n    return false;\n});\n// search ipaddress override\n$('a.search_ipaddress').click(function() {\n    // set cookie json-encoded with parameters\n    createCookie(\"search_parameters\",'{\"addresses\":\"on\",\"subnets\":\"off\",\"vlans\":\"off\",\"vrf\":\"off\",\"pstn\":\"off\",\"circuits\":\"off\",\"customers\":\"off\"}',365);\n});\n\n//show/hide search select fields\n$(document).on(\"mouseenter\", \"#userMenuSearch\", function(event){\n    var object1 = $(\"#searchSelect\");\n    object1.slideDown('fast');\n});\n$(document).on(\"mouseleave\", '#user_menu', function(event){\n\t$(this).stop();\n    var object1 = $(\"#searchSelect\");\n    object1.slideUp();\n});\n\n\n//search export\n$(document).on(\"click\", \"#exportSearch\", function(event){\n    var searchTerm = $(this).attr('data-post');\n    $(\"div.dl\").remove();                                                //remove old innerDiv\n    $('div.exportDIVSearch').append(\"<div style='display:none' class='dl'><iframe src='app/tools/search/search-results-export.php?ip=\" + searchTerm + \"'></iframe></div>\");\n    return false;\n});\n\n/* hosts */\n$('#hosts').submit(function() {\n    showSpinner();\n    var hostname = $('input.hostsFilter').val();\n\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ window.location = base + \"tools/hosts/\" + hostname; }\n\telse\t\t\t\t\t{ window.location = base + \"index.php?page=tools&section=hosts&ip=\" + hostname; }\n    return false;\n});\n\n\n/* user menu selfchange */\n$('form#userModSelf').submit(function () {\n    var selfdata = $(this).serialize();\n    $('div.userModSelfResult').hide();\n\n    $.post('app/tools/user-menu/user-edit.php', selfdata, function(data) {\n        $('div.userModSelfResult').html(data).fadeIn('fast');\n\n        if(data.search(\"danger\")==-1) { $('div.userModSelfResult').delay(2000).fadeOut('slow'); hideSpinner(); }\n        else                          { hideSpinner(); }\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//    Generate random pass\n$(document).on(\"click\", \"#randomPassSelf\", function() {\n    var password = randomPass();\n    $('input.userPass').val(password);\n    $('#userRandomPass').html( password );\n    return false;\n});\n\n/* changelog */\n//submit form\n$('form#cform').submit(function () {\n    showSpinner();\n    var limit = $('form#cform .climit').val();\n    var filter = $('form#cform .cfilter').val();\n    //update search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ window.location = \"tools/changelog/\"+filter+\"/\"+limit+\"/\"; }\n\telse\t\t\t\t\t{ window.location = \"index.php?page=tools&section=changelog&subnetId=\"+filter+\"&sPage=\"+limit; }\n    return false;\n});\n\n/* changePassRequired */\n$('form#changePassRequiredForm').submit(function() {\n\tshowSpinner();\n\n    //get username\n    var ipampassword1 = $('#ipampassword1', this).val();\n    var ipampassword2 = $('#ipampassword2', this).val();\n    //get login data\n    var postData = \"ipampassword1=\"+ipampassword1+\"&ipampassword2=\"+ipampassword2;\n\n    $.post('app/tools/pass-change/result.php', postData, function(data) {\n        $('div#changePassRequiredResult').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n// show subnet masks popup\n$(document).on(\"click\", '.show-masks', function() {\n\topen_popup(\"masks\", \"app/tools/subnet-masks/popup.php\", {closeClass:$(this).attr('data-closeClass')}, true);\treturn false;\n});\n\n\n\n\n\n\n/* @administration ---------- */\n\n// clear logo\n$(document).on(\"click\", \".logo-clear\", function() {\n     $.post('app/admin/settings/logo/logo-clear.php', \"\", function(data) {\n        $('div.logo-current').html(data).slideDown('fast');\n        //reload after 1 second if all is ok!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n\n/* show/hide smtp body */\n$('select#mtype').change(function() {\n\tvar type = $(this).find(\":selected\").val();\n\t//if localhost hide, otherwise show\n\tif(type === \"localhost\") \t{ $('#mailsettingstbl tbody#smtp').hide(); }\n\telse \t\t\t\t\t\t{ $('#mailsettingstbl tbody#smtp').show(); }\n});\n\n\n/*    Edit users\n***************************/\n//disable pass if domain user\n$(document).on(\"change\", \"form#usersEdit select[name=authMethod]\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var type = $(\"select[name=authMethod]\").find(\":selected\").val();\n    //we changed to domain\n    if(type == \"1\") { $('tbody#user_password').show(); }\n    else            { $('tbody#user_password').hide(); }\n});\n// toggle notificaitons for user\n$(document).on(\"change\", \"form#usersEdit select[name=role]\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var type = $(\"form#usersEdit select[name=role]\").find(\":selected\").val();\n    //we changed to domain\n    if(type == \"Administrator\") { $('tbody#user_notifications').show(); $('tbody.module_permissions').hide(); }\n    else            \t\t\t{ $('tbody#user_notifications').hide(); $('tbody.module_permissions').show(); }\n});\n\n// generate random pass\n$(document).on(\"click\", \"a#randomPass\", function() {\n    var password = randomPass();\n    $('input.userPass').val(password);\n    $(this).html( password );\n    return false;\n});\n//search domain popup\n$(document).on(\"click\", \".adsearchuser\", function() {\n\t$('#popupOverlay2 .popup_w500').load('app/admin/users/ad-search-form.php');\n    showPopup('popup_w500', false, true);\n    hideSpinner();\n});\n//search domain user result\n$(document).on(\"click\", \"#adsearchusersubmit\", function() {\n\tshowSpinner();\n\tvar dname = $('#dusername').val();\n\tvar server = $('#adserver').find(\":selected\").val();\n\t$.post('app/admin/users/ad-search-result.php', {dname:dname, server:server}, function(data) {\n\t\t$('div#adsearchuserresult').html(data)\n\t\thideSpinner();\n\t});\n});\n//get user data from result\n$(document).on(\"click\", \".userselect\", function() {\n\tvar uname \t \t= $(this).attr('data-uname');\n\tvar username \t= $(this).attr('data-username');\n\tvar email \t \t= $(this).attr('data-email');\n\tvar server \t \t= $(this).attr('data-server');\n\tvar server_type = $(this).attr('data-server-type');\n\n\t//fill\n\t$('form#usersEdit input[name=real_name]').val(uname);\n\t$('form#usersEdit input[name=username]').val(username);\n\t$('form#usersEdit input[name=email]').val(email);\n\t$('form#usersEdit select[name=authMethod]').val(server);\n\t//hide password\n\t$('tbody#user_password').hide();\n\t//check server type and fetch group membership\n\tif (server_type==\"AD\" || server_type==\"LDAP\") {\n\t\t$.post('app/admin/users/ad-search-result-groups-membership.php', {server:server,username:username}, function(data) {\n\t\t\t//some data found\n\t\t\tif(data.length>0) {\n\t\t\t\t// to array and check\n\t\t\t\tvar groups = data.replace(/\\s/g, '');\n\t\t\t\tgroups = groups.split(\";\");\n\t\t\t\tfor (m = 0; m < groups.length; ++m) {\n\t\t\t\t\t$(\"input[name='group\"+groups[m]+\"']\").attr('checked', \"checked\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\thidePopup2();\treturn false;\n});\n\n\n\n/* Groups\n***************************/\n//search AD group popup\n$(document).on(\"click\", \".adLookup\", function() {\n\t$('#popupOverlay div.popup_w700').load('app/admin/groups/ad-search-group-form.php');\n\n    showPopup('popup_w700');\n    hideSpinner();\n});\n//search AD domain groups\n$(document).on(\"click\", \"#adsearchgroupsubmit\", function() {\n\tshowSpinner();\n\tvar dfilter = $('#dfilter').val();\n\tvar server = $('#adserver').find(\":selected\").val();\n\t$.post('app/admin/groups/ad-search-group-result.php', {dfilter:dfilter, server:server}, function(data) {\n\t\t$('div#adsearchgroupresult').html(data)\n\t\thideSpinner();\n\t});\n});\n//search domaingroup  add\n$(document).on(\"click\", \".groupselect\", function() {\n\tshowSpinner();\n\tvar gname = $(this).attr(\"data-gname\");\n\tvar gdescription = $(this).attr(\"data-gdescription\");\n\tvar gmembers = $(this).attr(\"data-members\");\n\tvar gid = $(this).attr(\"data-gid\");\n\tvar csrf_cookie = $(this).attr(\"data-csrf_cookie\");\n\n\t$.post('app/admin/groups/edit-group-result.php', {action:\"add\", g_name:gname, g_desc:gdescription, gmembers:gmembers, csrf_cookie:csrf_cookie}, function(data) {\n\t\t$('div.adgroup-'+gid).html(data)\n\t\thideSpinner();\n\t});\treturn false;\n});\n\n\n\n/*    instructions\n***********************/\n$('#instructionsForm').submit(function () {\n    var csrf_cookie = $(\"#instructionsForm input[name=csrf_cookie]\").val();\n    var id = $(\"#instructionsForm input[name=id]\").val();\n\tvar instructions = CKEDITOR.instances.instructions.getData();\n\t$('div.instructionsPreview').hide('fast');\n\n    showSpinner();\n    $.post('app/admin/instructions/edit-result.php', {instructions:instructions, csrf_cookie:csrf_cookie, id:id}, function(data) {\n        $('div.instructionsResult').html(data).fadeIn('fast');\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1)     \t{ $('div.instructionsResult').delay(2000).fadeOut('slow'); hideSpinner(); }\n        else                             \t{ hideSpinner(); }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n$('#preview').click(function () {\n    showSpinner();\n    var instructions = CKEDITOR.instances.instructions.getData();\n\n    $.post('app/admin/instructions/preview.php', {instructions:instructions, csrf_cookie:$(\"#instructionsForm input[name=csrf_cookie]\").val()}, function(data) {\n        $('div.instructionsPreview').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*    log files\n************************/\n//display log files - selection change\n$('form#logs').change(function () {\n    showSpinner();\n    var logSelection = $('form#logs').serialize();\n    $.post('app/tools/logs/show-logs.php', logSelection, function(data) {\n        $('div.logs').html(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n//log files show details\n$(document).on(\"click\", \"a.openLogDetail\", function() {\n    var id = $(this).attr('data-logid');\n    $.post('app/tools/logs/detail-popup.php', {id:id}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//log files page change\n$('#logDirection button').click(function() {\n    showSpinner();\n    /* get severities */\n    var logSelection = $('form#logs').serialize();\n    /* get first or last id based on direction */\n    var direction = $(this).attr('data-direction');\n    /* get Id */\n    var lastId;\n    if (direction == \"next\")     { lastId = $('table#logs tr:last').attr('id'); }\n    else                         { lastId = $('table#logs tr:nth-child(2)').attr('id'); }\n\n    /* set complete post */\n    var postData = logSelection + \"&direction=\" + direction + \"&lastId=\" + lastId;\n\n    /* show logs */\n    $.post('app/tools/logs/show-logs.php', postData, function(data1) {\n        $('div.logs').html(data1);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//logs export\n$('#downloadLogs').click(function() {\n    showSpinner();\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/tools/logs/export.php'></iframe></div>\");\n    hideSpinner();\n    //show downloading\n    $('div.logs').prepend(\"<div class='alert alert-info' id='logsInfo'><i class='icon-remove icon-gray selfDestruct'></i> Preparing download... </div>\");\n    return false;\n});\n//logs clear\n$('#clearLogs').click(function() {\n    showSpinner();\n    $.post('app/tools/logs/clear-logs.php', function(data) {\n    \t$('div.logs').html(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n// commit logs\n$('.log-tabs li a').click(function() {\n\t// navigation\n\t$('.log-tabs li').removeClass(\"active\");\n\t$(this).parent('li').addClass(\"active\");\n\t// load\n\t$('div.log-print').hide();\n\t$('div.'+$(this).attr(\"data-target\")).show();\treturn false;\n});\n\n// show changelog details popup\n$(document).on(\"click\", \".openChangelogDetail\", function() {\n    open_popup(\"700\", \"app/tools/changelog/show-popup.php\", {cid:$(this).attr('data-cid')})\n})\n\n\n/*    Sections\n********************************/\n//edit section result\n$(document).on(\"click\", \"#editSectionSubmit, .editSectionSubmitDelete\", function() {\n    showSpinner();\n    var sectionData = $('form#sectionEdit').serialize();\n\n\t//append deleteconfirm\n\tif($(this).attr('id') == \"editSectionSubmitDelete\") { sectionData += \"&deleteconfirm=yes\"; };\n\n    $.post('app/admin/sections/edit-result.php', sectionData, function(data) {\n        $('div.sectionEditResult').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//section ordering save\n$(document).on(\"click\", \"#sectionOrderSubmit\", function() {\n    showSpinner();\n\t//get all ids that are checked\n\tvar m = 0;\n\tvar lis = $('#sortableSec li').map(function(i,n) {\n\tvar pindex = $(this).index() +1;\n\t\treturn $(n).attr('id')+\":\"+pindex;\n\t}).get().join(';');\n\n\t//post\n\t$.post('app/admin/sections/edit-order-result.php', {position: lis}, function(data) {\n\t\t$('.sectionOrderResult').html(data).fadeIn('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    powerDNS\n********************************/\n\n//hide defaults\n$(document).on(\"click\", \".hideDefaults\", function () {\n    if ($(this).is(':checked')) { $(\"tbody.defaults\").hide(); }\n    else\t\t\t\t\t\t{ $(\"tbody.defaults\").show(); }\n});\n//submit form\n$(document).on(\"click\", \"#editDomainSubmit\", function() {\n    //dont reload if it cane from ip addresses\n    if ($(this).hasClass('editDomainSubmit2'))  {\n    \t// show spinner\n    \tshowSpinner();\n    \t// post\n        $.post(\"app/admin/powerDNS/domain-edit-result.php\", $('form#domainEdit').serialize(), function(data) {\n            $('#popupOverlay2 div.domain-edit-result').html(data).slideDown('fast');\n            //reload after 2 seconds if succeeded!\n\t        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1 && data.search(\"alert-warning\")==-1 ) {\n    \t        $.post(\"app/admin/powerDNS/record-edit.php\", {id:$('#popupOverlay .pContent .ip_dns_addr').html(),domain_id:$('#popupOverlay .pContent strong').html(),action:\"add\"}, function(data2) {\n        \t        $(\"#popupOverlay .popup_w700\").html(data2);\n    \t        });\n    \t        setTimeout(function (){ $('#popupOverlay2').fadeOut('fast'); }, 1500);\n    \t        setTimeout(function (){ hideSpinner(); }, 1500);\n    \t    }\n\t        else {\n    \t        hideSpinner();\n    \t    }\n        }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n        // prevent reload\n        return false;\n    }\n    else {\n        submit_popup_data (\".domain-edit-result\", \"app/admin/powerDNS/domain-edit-result.php\", $('form#domainEdit').serialize());\n    }\n});\n\n// refresh subnet PTR records\n$(document).on(\"click\", \".refreshPTRsubnet\", function() {\n\topen_popup(\"700\", \"app/admin/powerDNS/refresh-ptr-records.php\", {subnetId:$(this).attr('data-subnetId')} );\treturn false;\n});\n$(document).on(\"click\", \".refreshPTRsubnetSubmit\", function() {\n\tsubmit_popup_data (\".refreshPTRsubnetResult\", \"app/admin/powerDNS/refresh-ptr-records-submit.php\", {subnetId:$(this).attr('data-subnetId')} );\treturn false;\n});\n//edit record\n$(document).on(\"click\", \".editRecord\", function() {\n\topen_popup(\"700\", \"app/admin/powerDNS/record-edit.php\", {id:$(this).attr('data-id'),domain_id:$(this).attr('data-domain_id'), action:$(this).attr('data-action')} );\treturn false;\n});\n$(document).on(\"click\", \"#editRecordSubmit\", function() {\n    submit_popup_data (\".record-edit-result\", \"app/admin/powerDNS/record-edit-result.php\", $('form#recordEdit').serialize());\n});\n$(document).on(\"click\", \"#editRecordSubmitDelete\", function() {\n    var formData = $('form#recordEdit').serialize();\n    // replace edit action with delete\n    formData = formData.replace(\"action=edit\", \"action=delete\");\n    submit_popup_data (\".record-edit-result\", \"app/admin/powerDNS/record-edit-result.php\", formData);\n});\n\n\n/*    Firewall zones\n********************************/\n\n// firewall zone settings\n$('#firewallZoneSettings').submit(function() {\n    showSpinner();\n    var settings = $(this).serialize();\n    //load submit results\n    $.post('app/admin/firewall-zones/settings-save.php', settings, function(data) {\n        $('div.settingsEdit').html(data).slideDown('fast');\n        //reload after 1 second if all is ok!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n// zone edit menu\n// load edit form\n$(document).on(\"click\", \".editFirewallZone\", function() {\n    open_popup(\"700\", \"app/admin/firewall-zones/zones-edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n});\n\n//submit form\n$(document).on(\"click\", \"#editZoneSubmit\", function() {\n    submit_popup_data (\".zones-edit-result\", \"app/admin/firewall-zones/zones-edit-result.php\", $('form#zoneEdit').serialize());\n});\n\n// bind a subnet which is not part of a zone to an existing zone\n// load edit form\n\n$(document).on(\"click\", \".subnet_to_zone\", function() {\n    showSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var operation = $(this).attr('data-operation');\n    //format posted values\n    var postdata = \"operation=\"+operation+\"&subnetId=\"+subnetId;\n    $.post('app/admin/firewall-zones/subnet-to-zone.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n//submit form\n$(document).on(\"click\", \"#subnet-to-zone-submit\", function() {\n    submit_popup_data (\".subnet-to-zone-result\", \"app/admin/firewall-zones/subnet-to-zone-save.php\", $('form#subnet-to-zone-edit').serialize());\n});\n\n// trigger the check for any mapping of the selected zone\n$(document).on(\"change\", \".checkMapping\",(function () {\n    showSpinner();\n    var pData = $(this).serializeArray();\n    pData.push({name:'operation',value:'checkMapping'});\n\n    //load results\n    $.post('app/admin/firewall-zones/ajax.php', pData, function(data) {\n        $('div.mappingAdd').html(data).slideDown('fast');\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    hideSpinner();\n    return false;\n}));\n\n// add network to zone\n$(document).on(\"click\", \".editNetwork\", function() {\n     var pData = $('form#zoneEdit').serializeArray();\n     pData.push({name:'action',value:$(this).attr('data-action')});\n     pData.push({name:'subnetId',value:$(this).attr('data-subnetId')});\n     $('#popupOverlay2 .popup_w500').load('app/admin/firewall-zones/zones-edit-network.php',pData);\n    showPopup('popup_w500', false, true);\n    hideSpinner();\n});\n\n// remove a non persitent network from the selection\n$(document).on(\"click\", \".deleteTempNetwork\", function() {\n    // show spinner\n    showSpinner();\n    var filterName = 'network['+$(this).attr(\"data-subnetArrayKey\")+']';\n    var pData =$('form#zoneEdit :input[name != \"'+filterName+'\"][name *= \"network[\"]').serializeArray();\n    pData.push({name:'noZone',value:1});\n\n    // post\n    $.post(\"app/admin/firewall-zones/ajax.php\", pData , function(data) {\n        $('div'+\".zoneNetwork\").html(data).slideDown('fast');\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    setTimeout(function (){hideSpinner();}, 500);\n\n    return false;\n});\n\n//submit form network\n$(document).on(\"click\", \"#editNetworkSubmit\", function() {\n    // show spinner\n    showSpinner();\n    // set reload\n    reload = typeof reload !== 'undefined' ? reload : true;\n    // post\n    $.post(\"app/admin/firewall-zones/zones-edit-network-result.php\", $('form#networkEdit :input[name != \"sectionId\"]').serialize(), function(data) {\n        $('div'+\".zones-edit-network-result\").html(data).slideDown('fast');\n\n        if(reload) {\n            if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1 && data.search(\"alert-warning\") == -1 ) {\n                $.post(\"app/admin/firewall-zones/ajax.php\", $('form#networkEdit :input[name != \"sectionId\"]').serialize(), function(data) {\n                    $('div'+\".zoneNetwork\").html(data).slideDown('fast');\n                }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n                setTimeout(function (){hideSpinner();hidePopup2();}, 500);\n            } else { hideSpinner(); }\n        }\n        else {\n            hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    // prevent reload\n    return false;\n});\n\n// zone edit menu - ajax request to fetch all subnets for a specific section id\n$(document).on(\"change\", \".firewallZoneSection\",(function () {\n    showSpinner();\n    var pData = $(this).serializeArray();\n    pData.push({name:'operation',value:'fetchSectionSubnets'});\n    //load results\n    $.post('app/admin/firewall-zones/ajax.php', pData, function(data) {\n        $('div.sectionSubnets').html(data).slideDown('fast');\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    hideSpinner();\n    return false;\n}));\n\n// mapping edit menu\n// load edit form\n$(document).on(\"click\", \".editMapping\", function() {\n    open_popup(\"700\", \"app/admin/firewall-zones/mapping-edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n\n//submit form\n$(document).on(\"click\", \"#editMappingSubmit\", function() {\n    submit_popup_data (\".mapping-edit-result\", \"app/admin/firewall-zones/mapping-edit-result.php\", $('form#mappingEdit').serialize());\n});\n\n// mapping edit menu - ajax request to fetch all zone informations for the selected zone\n$(document).on(\"change\", \".mappingZoneInformation\",(function() {\n    showSpinner();\n    var pData = $(this).serializeArray();\n    pData.push({name:'operation',value:'deliverZoneDetail'});\n    //load results\n    $.post('app/admin/firewall-zones/ajax.php', pData, function(data) {\n        $('div.zoneInformation').html(data).slideDown('fast');\n\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    hideSpinner();\n    return false;\n}));\n\n/*    regenerate firewall address objects\n********************************************/\n// execute regeneration of the address object via ajax, reload the page to refresh the data\n$(document).on(\"click\", \"a.fw_autogen\", function() {\n    //build vars\n    var subnetId = $(this).attr('data-subnetid');\n    var IPId = $(this).attr('data-ipid');\n    var dnsName = $(this).attr('data-dnsname');\n    var action = $(this).attr('data-action');\n    var operation = 'autogen';\n\n    showSpinner();\n\n    // send information to ajax.php to generate a new address object\n    $.post('app/admin/firewall-zones/ajax.php', {subnetId:subnetId, IPId:IPId, dnsName:dnsName, action:action, operation:operation}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n    // hide the spinner and reload the window on success\n    setTimeout(function (){hideSpinner();window.location.reload();}, 500);\n\n    return false;\n});\n\n/*    Subnets\n********************************/\n//show subnets\n$('table#manageSubnets button[id^=\"subnet-\"]').click(function() {\n    showSpinner();\n    var swid = $(this).attr('id');                    //get id\n    // change icon to down\n    if( $('#content-'+swid).is(':visible') )     { $(this).children('i').removeClass('fa-angle-down').addClass('fa-angle-right'); }    //hide\n    else                                         { $(this).children('i').removeClass('fa-angle-right').addClass('fa-angle-down'); }    //show\n    //show content\n    $('table#manageSubnets tbody#content-'+swid).slideToggle('fast');\n    hideSpinner();\n});\n//toggle show all / none\n$('#toggleAllSwitches').click(function() {\n    showSpinner();\n    // show\n    if( $(this).children().hasClass('fa-compress') ) {\n        $(this).children().removeClass('fa-compress').addClass('fa-expand');            //change icon\n        $('table#manageSubnets i.fa-angle-down').removeClass('fa-angle-down').addClass('fa-angle-right');    //change section chevrons\n        $('table#manageSubnets tbody[id^=\"content-subnet-\"]').hide();                                //show content\n        createCookie('showSubnets',0,30);                                                            //save cookie\n    }\n    //hide\n    else {\n        $(this).children().removeClass('fa-expand').addClass('fa-compress');\n        $('table#manageSubnets tbody[id^=\"content-subnet-\"]').show();\n        $('table#manageSubnets i.fa-angle-right').removeClass('fa-angle-right').addClass('fa-angle-down');    //change section chevrons\n        createCookie('showSubnets',1,30);                                                            //save cookie\n    }\n    hideSpinner();\n});\n//load edit form\n$(document).on(\"click\", \".editSubnet\", function() {\n    showSpinner();\n    var sectionId   = $(this).attr('data-sectionid');\n    var subnetId    = $(this).attr('data-subnetid');\n    var action         = $(this).attr('data-action');\n    //format posted values\n    var postdata    = \"sectionId=\" + sectionId + \"&subnetId=\" + subnetId + \"&action=\" + action;\n\n    //load edit data\n    $.post(\"app/admin/subnets/edit.php\", postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n    return false;\n});\n//resize / split subnet\n$(document).on(\"click\", \"#resize, #split, #truncate, .subnet-truncate\", function() {\n\tshowSpinner();\n\tvar action = $(this).attr('id');\n\tvar subnetId = $(this).attr('data-subnetId');\n\t//dimm and show popup2\n    $.post(\"app/admin/subnets/\"+action+\".php\", {action:action, subnetId:subnetId}, function(data) {\n        showPopup('popup_w500', data, true);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//resize save\n$(document).on(\"click\", \"button#subnetResizeSubmit\", function() {\n\tshowSpinner();\n\tvar resize = $('form#subnetResize').serialize();\n\t$.post(\"app/admin/subnets/resize-save.php\", resize, function(data) {\n\t\t$('div.subnetResizeResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//split save\n$(document).on(\"click\", \"button#subnetSplitSubmit\", function() {\n\tshowSpinner();\n\tvar split = $('form#subnetSplit').serialize();\n\t$.post(\"app/admin/subnets/split-save.php\", split, function(data) {\n\t\t$('div.subnetSplitResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//truncate save\n$(document).on(\"click\", \"button#subnetTruncateSubmit\", function() {\n\tshowSpinner();\n\tvar subnetId = $(this).attr('data-subnetId');\n    var csrf_cookie = $(this).attr('data-csrf_cookie');\n\t$.post(\"app/admin/subnets/truncate-save.php\", {subnetId:subnetId, csrf_cookie:csrf_cookie}, function(data) {\n\t\t$('div.subnetTruncateResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n$(document).on(\"submit\", \"#editSubnetDetails\", function() {\treturn false;\n});\n//save edit subnet changes\n$(document).on(\"click\", \".editSubnetSubmit, .editSubnetSubmitDelete\", function() {\n\n    showSpinner();\n    var subnetData = $('form#editSubnetDetails').serialize();\n\n    //if ipaddress and delete then change action!\n    if($(this).hasClass(\"editSubnetSubmitDelete\")) {\n        subnetData = subnetData.replace(\"action=edit\", \"action=delete\");\n    }\n\t//append deleteconfirm\n\tif($(this).attr('id') == \"editSubnetSubmitDelete\") { subnetData += \"&deleteconfirm=yes\"; };\n\n    //load results\n    $.post(\"app/admin/subnets/edit-result.php\", subnetData, function(data) {\n        $('div.manageSubnetEditResult').html(data).slideDown('fast');\n\n        //reload after 2 seconds if all is ok!\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            showSpinner();\n            var sectionId;\n            var subnetId;\n            var parameter;\n            //reload IP address list if request came from there\n            if(subnetData.search(\"IPaddresses\") != -1) {\n                //from ipcalc - load ip list\n                sectionId = $('form#editSubnetDetails input[name=sectionId]').val();\n                subnetId  = $('form#editSubnetDetails input[name=subnetId]').val();\n\t            //check for .subnet_id_new if new subnet id present and set location\n\t            if($(\".subnet_id_new\").html()!==\"undefined\") {\n\t\t            var subnet_id_new = $(\".subnet_id_new\").html();\n\t\t            if (subnet_id_new % 1 === 0) {\n\t\t\t            // section\n\t\t\t            var section_id_new = $(\".section_id_new\").html();\n\t\t\t\t\t\t//lets try to detect IEto set location\n\t\t\t\t\t    var ua = window.navigator.userAgent;\n\t\t\t\t\t    var msie = ua.indexOf(\"MSIE \");\n\t\t\t\t\t    var edge = ua.indexOf(\"Edge/\");\n\t\t\t\t\t    //IE\n\t\t\t\t\t    if (msie > 0 || edge > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) \t{ var base = $('.iebase').html(); }\n\t\t\t\t\t    else \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ var base = \"\"; }\n\t\t\t\t\t    //go to search page\n\t\t\t\t\t    var prettyLinks = $('#prettyLinks').html();\n\t\t\t\t\t\tif(prettyLinks==\"Yes\")\t{ setTimeout(function (){window.location = base + \"subnets/\"+section_id_new+\"/\"+subnet_id_new+\"/\";}, 1500); }\n\t\t\t\t\t\telse\t\t\t\t\t{ setTimeout(function (){window.location = base + \"index.php?page=subnets&section=\"+section_id_new+\"&subnetId=\"+subnet_id_new;}, 1500); }\n\t\t            }\n\t\t            else {\n\t\t            \tsetTimeout(function (){window.location.reload();}, 1500);\n\t            \t}\n\t            }\n\t            else {\n\t\t             setTimeout(function (){window.location.reload();}, 1500);\n\t            }\n            }\n            //from free space\n            else if(subnetData.search(\"freespace\") != -1) {\n\t            setTimeout(function (){window.location.reload();}, 1500);\n            }\n            //from ipcalc - ignore\n            else if (subnetData.search(\"ipcalc\") != -1) {\n            }\n            //from admin\n            else {\n                //reload\n                setTimeout(function (){window.location.reload();}, 1500);\n            }\n        }\n        //hide spinner - error\n        else {\n            hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n//get subnet info from ripe database\n$(document).on(\"click\", \"#get-ripe\", function() {\n\tshowSpinner();\n\tvar subnet = $('form#editSubnetDetails input[name=subnet]').val();\n\n\t$.post(\"app/admin/subnets/ripe-query.php\", {subnet: subnet}, function(data) {\n        showPopup('popup_w500', data, true);\n\t\thideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n// fill ripe fields\n$(document).on('click', \"#ripeMatchSubmit\", function() {\n\tvar cfields_temp = $('form#ripe-fields').serialize();\n\t// to array\n\tvar cfields = cfields_temp.split(\"&\");\n\t// loop\n\tfor (index = 0; index < cfields.length; ++index) {\n\t\t// check for =0match and ignore\n\t\tif (cfields[index].indexOf(\"=0\") > -1) {}\n\t\telse {\n\t\t\tconsole.log(cfields[index]);\n\t\t\tvar cdata = cfields[index].split(\"=\");\n\t\t\t$('form#editSubnetDetails input[name='+cdata[1]+']').val(cdata[0].replace(/___/g, \" \"));\n\t\t}\n\t}\n\t// hide\n\thidePopup2();\n});\n//change subnet permissions\n$(document).on(\"click\", \".showSubnetPerm\", function () {\n\tshowSpinner();\n\tvar subnetId  = $(this).attr('data-subnetId');\n\tvar sectionId = $(this).attr('data-sectionId');\n\n\t$.post(\"app/admin/subnets/permissions-show.php\", {subnetId:subnetId, sectionId:sectionId}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//submit permission change\n$(document).on(\"click\", \".editSubnetPermissionsSubmit\", function() {\n\tshowSpinner();\n\tvar perms = $('form#editSubnetPermissions').serialize();\n\t$.post('app/admin/subnets/permissions-submit.php', perms, function(data) {\n\t\t$('.editSubnetPermissionsResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//auto-suggest possible slaves select\n$(document).on(\"click\", \".dropdown-subnets li a\", function() {\n\tvar subnet = $(this).attr('data-cidr');\n\tvar inputfield = $('form#editSubnetDetails input[name=subnet]');\n\t// fill\n\t$(inputfield).val(subnet);\n\t// hide\n\t$('.dropdown-subnets').parent().removeClass(\"open\");\treturn false;\n});\n\n// linked subnets\n$('.editSubnetLink').click(function() {\n    showSpinner();\n\t$.post(\"app/admin/subnets/linked-subnet.php\", {subnetId:$(this).attr('data-subnetId')}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n   return false;\n});\n$(document).on('click', '.linkSubnetSave', function() {\n    showSpinner();\n\t$.post('app/admin/subnets/linked-subnet-submit.php', $('form#editLinkedSubnet').serialize(), function(data) {\n\t\t$('.linkSubnetSaveResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n/*    Add subnet from IPCalc result\n*********************************/\n$(document).on(\"click\", \"#createSubnetFromCalc\", function() {\n    $('tr#selectSection').show();\n});\n$(document).on(\"change\", \"select#selectSectionfromIPCalc\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var sectionId = $(this).val();\n    var subnet      = $('table.ipCalcResult td#sub2').html();\n    var bitmask      = $('table.ipCalcResult td#sub4').html();\n    // ipv6 override\n    if ($(\"table.ipCalcResult td#sub0\").html() == \"IPv6\") {\n    \tvar postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + $('table.ipCalcResult td#sub3').html() + \"&bitmask=&action=add&location=ipcalc\";\n    } else {\n\t    var postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + subnet + \"&bitmask=\" + bitmask + \"&action=add&location=ipcalc\";\n    }\n    //make section active\n    $('table.newSections ul#sections li#' + sectionId ).addClass('active');\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n});\n$(document).on(\"click\", \".createfromfree\", function() {\n    //get details - we need Section, network and subnet bitmask\n    var sectionId = $(this).attr('data-sectionId');\n    var cidr      = $(this).attr('data-cidr');\n    var freespaceMSISD = $(this).attr('data-masterSubnetId');\n    var cidrArr   = cidr.split('/');\n    var subnet    = cidrArr[0];\n    var bitmask   = cidrArr[1];\n    var postdata  = \"sectionId=\" + sectionId + \"&subnet=\" + subnet + \"&bitmask=\" + bitmask + \"&freespaceMSID=\" + freespaceMSISD + \"&action=add&location=ipcalc\";\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n/*    Edit subnet from ip address list\n************************************/\n$(document).on(\"click\", '.edit_subnet, button.edit_subnet, button#add_subnet', function() {\n    var subnetId  = $(this).attr('data-subnetId');\n    var sectionId = $(this).attr('data-sectionId');\n    var action    = $(this).attr('data-action');\n\n    //format posted values\n    var postdata     = \"sectionId=\"+sectionId+\"&subnetId=\"+subnetId+\"&action=\"+action+\"&location=IPaddresses\";\n    //load add Subnet form / popup\n    $.post('app/admin/subnets/edit.php', postdata , function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/* Show add new VLAN on subnet add/edit on-thy-fly\n***************************************************/\n$(document).on(\"change\", \"select[name=vlanId]\", function() {\n    var domain = $(\"select[name=vlanId] option:selected\").attr('data-domain');\n    if($(this).val() == 'Add') {\n        showSpinner();\n        $.post('app/admin/vlans/edit.php', {action:\"add\", fromSubnet:\"true\", domain:domain}, function(data) {\n            showPopup('popup_w400', data, true);\n            hideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    }\n    return false;\n});\n//Submit new VLAN on the fly\n$(document).on(\"click\", \".vlanManagementEditFromSubnetButton\", function() {\n    showSpinner();\n    //get new vlan details\n    var postData = $('form#vlanManagementEditFromSubnet').serialize();\n\t//add to save script\n    $.post('app/admin/vlans/edit-result.php', postData, function(data) {\n        $('div.vlanManagementEditFromSubnetResult').html(data).show();\n        // ok\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            var vlanId\t  = $('#vlanidforonthefly').html();\n            var sectionId = $('#editSubnetDetails input[name=sectionId]').val();\n            $.post('app/admin/subnets/edit-vlan-dropdown.php', {vlanId:vlanId, sectionId:sectionId} , function(data) {\n                $('.editSubnetDetails td#vlanDropdown').html(data);\n                hideSpinner();\n\t\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n            //hide popup after 1 second\n            setTimeout(function (){ hidePopup('popup_w400', true); hidePopup2(); parameter = null;}, 1000);\n        }\n        else                      { hideSpinner(); }\n    });\n    return false;\n});\n// filter vlans\n$('.vlansearchsubmit').click(function() {\n\tshowSpinner();\n\tvar search = $('input.vlanfilter').val();\n\tvar location = $('input.vlanfilter').attr('data-location');\n    //go to search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ setTimeout(function (){window.location = location +search+\"/\";}, 500); }\n\telse\t\t\t\t\t{ setTimeout(function (){window.location = location + \"&sPage=\"+search;}, 500); }\n\n\n    //go to search page\n    var prettyLinks = $('#prettyLinks').html();\n\tif(prettyLinks==\"Yes\")\t{ setTimeout(function (){window.location = base + \"subnets/\"+section_id_new+\"/\"+subnet_id_new+\"/\";}, 1500); }\n\telse\t\t\t\t\t{ setTimeout(function (){window.location = base + \"index.php?page=subnets&section=\"+section_id_new+\"&subnetId=\"+subnet_id_new;}, 1500); }\treturn false;\n});\n\n\n\n\n\n\n/*\tFolders\n************************************/\n//create new folder popup\n$(document).on(\"click\", \"#add_folder, .add_folder\", function() {\n\tshowSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var sectionId = $(this).attr('data-sectionId');\n    var action    = $(this).attr('data-action');\n    //format posted values\n    var postdata     = \"sectionId=\"+sectionId+\"&subnetId=\"+subnetId+\"&action=\"+action+\"&location=IPaddresses\";\n\n    $.post('app/admin/subnets/edit-folder.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\n    return false;\n});\n//submit folder changes\n$(document).on(\"click\", \".editFolderSubmit\", function() {\n\tshowSpinner();\n\tvar postData = $('form#editFolderDetails').serialize();\n\t$.post('app/admin/subnets/edit-folder-result.php', postData, function(data) {\n\t\t$('.manageFolderEditResult').html(\"\").html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n//delete folder\n$(document).on(\"click\", \".editFolderSubmitDelete\", function() {\n\tshowSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var description = $('form#editFolderDetails #field-description').val();\n    var csrf_cookie = $('form#editFolderDetails input[name=csrf_cookie]').val();\n    //format posted values\n    var postData     = \"subnetId=\"+subnetId+\"&description=\"+description+\"&action=delete\"+\"&csrf_cookie=\"+csrf_cookie;\n\t//append deleteconfirm\n\tif($(this).attr('id') == \"editFolderSubmitDelete\") { postData += \"&deleteconfirm=yes\"; };\n\t$.post('app/admin/subnets/edit-folder-result.php', postData, function(data) {\n\t\t$('.manageFolderEditResult').html(data);\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\treturn false;\n});\n\n\n\n\n/* ---- Devices ----- */\n//submit form\n$(document).on(\"click\", \"#editSwitchsubmit\", function() {\n    submit_popup_data (\".switchManagementEditResult\", \"app/admin/devices/edit-result.php\", $('form#switchManagementEdit').serialize());\n});\n//submit form\n$(document).on(\"click\", \"#editSwitchSNMPsubmit\", function() {\n    submit_popup_data (\".switchSNMPManagementEditResult\", \"app/admin/devices/edit-snmp-result.php\", $('form#switchSNMPManagementEdit').serialize());\n});\n//snmp test\n$(document).on(\"click\", \"#test-snmp\", function() {\n\topen_popup (\"700\", \"app/admin/devices/edit-snmp-test.php\", $('form#switchSNMPManagementEdit').serialize(), true);\treturn false;\n});\n//snmp route query popup\n$(document).on(\"click\", \"#snmp-routing\", function() {\n    open_popup (\"700\", \"app/subnets/scan/subnet-scan-execute-snmp-route.php\", \"\", true);\n    return false;\n});\n\n//snmp vlan query popup\n$(document).on(\"click\", \"#snmp-vlan\", function() {\n    open_popup (\"700\", \"app/admin/vlans/vlans-scan.php\", {domainId:$(this).attr('data-domainid')}, true);\n    return false;\n});\n//snmp vlan query execute\n$(document).on(\"click\", \".show-vlan-scan-result\", function() {\n    submit_popup_data (\".vlan-scan-result\", \"app/admin/vlans/vlans-scan-execute.php\", $('form#select-devices-vlan-scan').serialize(), true);\n    return false;\n});\n// submit vlan query result\n$(document).on(\"click\", \"#saveVlanScanResults\", function() {\n    submit_popup_data (\"#vlanScanAddResult\", \"app/admin/vlans/vlans-scan-result.php\", $('form#scan-snmp-vlan-form').serialize());\n    return false;\n});\n\n//snmp vrf query popup\n$(document).on(\"click\", \"#snmp-vrf\", function() {\n    open_popup (\"700\", \"app/admin/vrf/vrf-scan.php\", {}, true);\n    return false;\n});\n//snmp vrf query execute\n$(document).on(\"click\", \".show-vrf-scan-result\", function() {\n    submit_popup_data (\".vrf-scan-result\", \"app/admin/vrf/vrf-scan-execute.php\", $('form#select-devices-vrf-scan').serialize(), true);\n    return false;\n});\n// submit vrf query result\n$(document).on(\"click\", \"#saveVrfScanResults\", function() {\n    submit_popup_data (\"#vrfScanAddResult\", \"app/admin/vrf/vrf-scan-result.php\", $('form#scan-snmp-vrf-form').serialize());\n    return false;\n});\n\n//snmp select subnet to add to new subnet\n$(document).on(\"click\", \".select-snmp-subnet\", function() {\n    $('form#editSubnetDetails input[name=subnet]').val($(this).attr('data-subnet')+\"/\"+$(this).attr('data-mask'));\n    hidePopup2();\n    return false;\n});\n//snmp route query popup - section search\n$(document).on(\"click\", \"#snmp-routing-section\", function() {\n    open_popup (\"masks\", \"app/subnets/scan/subnet-scan-execute-snmp-route-all.php\", {sectionId:$(this).attr('data-sectionId'), subnetId:$(this).attr('data-subnetId')});\n    return false;\n});\n//remove all results for device\n$(document).on(\"click\", \".remove-snmp-results\", function () {\n    $(\"tbody#\"+$(this).attr('data-target')).remove();\n    $(this).parent().remove();\n});\n//remove subnet from found subnet list\n$(document).on(\"click\", \".remove-snmp-subnet\", function() {\n   $('#editSubnetDetailsSNMPallTable tr#tr-' + $(this).attr('data-target-subnet')).remove();\n   return false;\n});\n///add subnets to section\n$(document).on(\"click\", \"#add-subnets-to-section-snmp\", function() {\n   submit_popup_data (\".add-subnets-to-section-snmp-result\", \"app/subnets/scan/subnet-scan-result-snmp-route-all.php\", $('form#editSubnetDetailsSNMPall').serialize());\n   return false;\n});\n\n\n\n/* ---- Device types ----- */\n//load edit form\n$(document).on(\"click\", \".editDevType\", function() {\n\topen_popup(\"400\", \"app/admin/device-types/edit.php\", {tid:$(this).attr('data-tid'), action:$(this).attr('data-action')} );\n});\n//submit form\n$(document).on(\"click\", \"#editDevTypeSubmit\", function() {\n    submit_popup_data (\".devTypeEditResult\", \"app/admin/device-types/edit-result.php\", $('form#devTypeEdit').serialize());\n});\n\n/* ---- RACKS ----- */\n//load edit form\n$(document).on(\"click\", \".editRack\", function() {\n\topen_popup(\"400\", \"app/admin/racks/edit.php\", {rackid:$(this).attr('data-rackid'), action:$(this).attr('data-action')} );\treturn false;\n});\n//load edit rack devices form\n$(document).on(\"click\", \".editRackDevice\", function() {\n\topen_popup(\"400\", \"app/admin/racks/edit-rack-devices.php\", {rackid:$(this).attr('data-rackid'), deviceid:$(this).attr('data-deviceid'), devicetype:$(this).attr('data-devicetype'), action:$(this).attr('data-action'),csrf_cookie:$(this).attr('data-csrf')} );\treturn false;\n});\n//submit edit rack devices form\n$(document).on(\"click\", \"#editRackDevicesubmit\", function() {\n    submit_popup_data (\".rackDeviceManagementEditResult\", \"app/admin/racks/edit-rack-devices-result.php\", $('form#rackDeviceManagementEdit').serialize());\n});\n//show popup image\n$(document).on(\"click\", \".showRackPopup\", function() {\n\topen_popup(\"400\", \"app/tools/racks/show-rack-popup.php\", {rackid:$(this).attr('data-rackid'), deviceid:$(this).attr('data-deviceid')}, true );\treturn false;\n});\n\n\n/* ---- Locations ----- */\n//submit form\n$(document).on(\"click\", \"#editLocationSubmit\", function() {\n    submit_popup_data (\".editLocationResult\", \"app/admin/locations/edit-result.php\", $('form#editLocation').serialize());\n    return false;\n});\n\n\n\n/* ---- PSTN ---- */\n//load edit form\n$(document).on(\"click\", \".editPSTN\", function() {\n\topen_popup(\"700\", \"app/tools/pstn-prefixes/edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n//submit form\n$(document).on(\"click\", \"#editPSTNSubmit\", function() {\n    submit_popup_data (\".editPSTNResult\", \"app/tools/pstn-prefixes/edit-result.php\", $('form#editPSTN').serialize());\n    return false;\n});\n//load edit form\n$(document).on(\"click\", \".editPSTNnumber\", function() {\n\topen_popup(\"700\", \"app/tools/pstn-prefixes/edit-number.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n//submit form\n$(document).on(\"click\", \"#editPSTNnumberSubmit\", function() {\n    submit_popup_data (\".editPSTNnumberResult\", \"app/tools/pstn-prefixes/edit-number-result.php\", $('form#editPSTNnumber').serialize());\n    return false;\n});\n\n\n\n\n/* ---- NAT ----- */\n//load edit form\n$(document).on(\"click\", \".editNat\", function() {\n\topen_popup(\"700\", \"app/admin/nat/edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n    return false;\n});\n//load edit form from subnets/addresses\n$(document).on(\"click\", \".mapNat\", function() {\n\topen_popup(\"700\", \"app/admin/nat/edit-map.php\", {id:$(this).attr('data-id'), object_type:$(this).attr('data-object-type'), object_id:$(this).attr('data-object-id')} );\n    return false;\n});\n//submit form\n$(document).on(\"click\", \"#editNatSubmit\", function() {\n    // action\n    var action = $('form#editNat input[name=action]').val();\n\n    if (action!==\"add\") {\n        submit_popup_data (\".editNatResult\", \"app/admin/nat/edit-result.php\", $('form#editNat').serialize());\n    }\n    else {\n        $.post(\"app/admin/nat/edit-result.php\", $('form#editNat').serialize(), function(data) {\n            $('.editNatResult').html(data);\n            if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n                setTimeout(function (){ open_popup(\"700\", \"app/admin/nat/edit.php\", {id:$('div.new_nat_id').html(), action:\"edit\"} ); hidePopup2(); parameter = null;}, 1000);\n            }\n            else {\n                hideSpinner();\n            }\n        }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n        return false;\n    }\n});\n// remove item\n$(document).on(\"click\", \".removeNatItem\", function() {\n    var id = $(this).attr('data-id');\n    showSpinner();\n\n    $.post(\"app/admin/nat/item-remove.php\", {id:$(this).attr('data-id'), type:$(this).attr('data-type'), item_id:$(this).attr('data-item-id'), csrf_cookie:$('form#editNat input[name=csrf_cookie]').val()}, function(data) {\n        $('#popupOverlay2 div.popup_w500').html(data);\n        showPopup('popup_w700', data, true);\n\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            setTimeout(function (){ open_popup(\"700\", \"app/admin/nat/edit.php\", {id:id, action:\"edit\"} ); hidePopup2(); parameter = null;}, 1000);\n        }\n        else {\n            hideSpinner();\n        }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n// add item popup\n$(document).on(\"click\", \".addNatItem\", function() {\n\topen_popup(\"700\", \"app/admin/nat/item-add.php\", {id:$(this).attr('data-id'), type:$(this).attr('data-type'), object_type:$(this).attr('data-object-type'), object_id:$(this).attr('data-object-id')}, true);\n    return false;\n});\n// search item\n$(document).on(\"submit\", \"form#search_nats\", function() {\n    showSpinner();\n    $.post(\"app/admin/nat/item-add-search.php\", $(this).serialize(), function(data) {\n        $('#nat_search_results').html(data);\n        hideSpinner();\n    });\n    return false;\n})\n// search result item select\n$(document).on(\"click\", \"a.addNatObjectFromSearch\", function() {\n    var id = $(this).attr('data-id');\n    var reload = $(this).attr('data-reload');\n    showSpinner();\n    $.post(\"app/admin/nat/item-add-submit.php\", {id:$(this).attr('data-id'), type:$(this).attr('data-type'), object_type:$(this).attr('data-object-type'), object_id:$(this).attr('data-object-id')}, function(data) {\n        $('#nat_search_results_commit').html(data);\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1) {\n            if(reload == \"true\") {\n                reload_window (data);\n            }\n            else {\n                setTimeout(function (){ open_popup(\"700\", \"app/admin/nat/edit.php\", {id:id, action:\"edit\"} ); hidePopup2(); parameter = null;}, 1000);\n            }\n        }\n        else {\n            hideSpinner();\n        }\n    });\n    return false;\n})\n\n\n\n/* ---- tags ----- */\n//load edit form\n$(document).on(\"click\", \".editType\", function() {\n\topen_popup(\"400\", \"app/admin/tags/edit.php\", {id:$(this).attr('data-id'), action:$(this).attr('data-action')} );\n});\n//submit form\n$(document).on(\"click\", \"#editTypesubmit\", function() {\n    submit_popup_data (\".editTypeResult\", \"app/admin/tags/edit-result.php\", $('form#editType').serialize());\n});\n\n\n/* ---- VLANs ----- */\n//submit form\n$(document).on(\"click\", \"#editVLANsubmit\", function() {\n    submit_popup_data (\".vlanManagementEditResult\", \"app/admin/vlans/edit-result.php\", $('form#vlanManagementEdit').serialize());\n});\n\n\n/* ---- VLAN domains ----- */\n//submit form\n$(document).on(\"click\", \"#editVLANdomainsubmit\", function() {\n    submit_popup_data (\".domainEditResult\", \"app/admin/vlans/edit-domain-result.php\", $('form#editVLANdomain').serialize());\n});\n\n\n/* ---- VRF ----- */\n//submit form\n$(document).on(\"click\", \"#editVRF\", function() {\n    submit_popup_data (\".vrfManagementEditResult\", \"app/admin/vrf/edit-result.php\", $('form#vrfManagementEdit').serialize());\n});\n\n/* ---- Nameservers ----- */\n// add new\n$(document).on(\"click\", \"#add_nameserver\", function() {\n\tshowSpinner();\n\t//get old number\n\tvar num = $(this).attr(\"data-id\");\n\t// append\n\t$('table#nameserverManagementEdit2 tbody#nameservers').append(\"<tr id='namesrv-\"+num+\"'><td>Nameserver \"+num+\"</td><td><input type='text' class='rd form-control input-sm' name='namesrv-\"+num+\"'></input><td><button class='btn btn-sm btn-default' id='remove_nameserver' data-id='namesrv-\"+num+\"'><i class='fa fa-trash-o'></i></buttom></td></td></tr>\");\n\t// add number\n\tnum++;\n\t$(this).attr(\"data-id\", num);\n\n\thideSpinner();\treturn false;\n});\n// remove\n$(document).on(\"click\", \"#remove_nameserver\", function() {\n\tshowSpinner();\n\t//get old number\n\tvar id = $(this).attr(\"data-id\");\n\t// append\n\tvar el = document.getElementById(id);\n\tel.parentNode.removeChild(el);\n\n\thideSpinner();\treturn false;\n});\n\n/* ---- IP requests ----- */\n//submit form\n$(document).on(\"click\", \"button.manageRequest\", function() {\n    var postValues = $('form.manageRequestEdit').serialize();\n    var action     = $(this).attr('data-action');\n    var postData   = postValues+\"&action=\"+action;\n    // submit\n    submit_popup_data (\".manageRequestResult\", \"app/admin/requests/edit-result.php\", postData);\n});\n\n\n/* ---- Share subnet ----- */\n//remove temp\n$(document).on(\"click\", \".removeSharedTemp\", function() {\n\tshowPopup(\"popup_w400\");\n    submit_popup_data (\"#popupOverlay .popup_w400\", \"app/tools/temp-shares/delete-result.php\", {code:$(this).attr('data-code')});\n    hideSpinner();\n});\n\n\n\n/*    Ripe AS import\n****************************/\n//get subnets form AS\n$('form#ripeImport').submit(function() {\n    showSpinner();\n    var as = $(this).serialize();\n    $.post('app/admin/ripe-import/ripe-telnet.php', as, function(data) {\n        $('div.ripeImportTelnet').html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n// remove as line\n$(document).on(\"click\", \"table.asImport .removeSubnet\", function() {\n    $(this).parent('tr').remove();\n    hideTooltips();\n});\n// add selected to db\n$(document).on(\"submit\", \"form#asImport\", function() {\n    showSpinner();\n    //get subnets to add\n    var importData = $(this).serialize();\n    $.post('app/admin/ripe-import/import-subnets.php', importData, function(data) {\n        $('div.ripeImportResult').html(data).slideDown('fast');\n        //hide after 2 seconds\n        if(data.search(\"alert-danger\")==-1 && data.search(\"error\")==-1)     { $('table.asImport').delay(1000).fadeOut('fast'); hideSpinner(); }\n        else                             { hideSpinner(); }\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n/*    custom fields - general\n************************************/\n\n//show edit form\n$(document).on(\"click\", \".edit-custom-field\", function() {\n    showSpinner();\n    var action    = $(this).attr('data-action');\n    var fieldName = $(this).attr('data-fieldname');\n    var table\t  = $(this).attr('data-table');\n    $.post('app/admin/custom-fields/edit.php',  {action:action, fieldName:fieldName, table:table}, function(data) {\n        $('#popupOverlay div.popup_w400').html(data);\n        showPopup('popup_w400');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//submit change\n$(document).on(\"click\", \"#editcustomSubmit\", function() {\n    showSpinner();\n    var field = $('form#editCustomFields').serialize();\n    $.post('app/admin/custom-fields/edit-result.php', field, function(data) {\n        $('div.customEditResult').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//field reordering\n$('table.customIP button.down').click(function() {\n    showSpinner();\n    var current  = $(this).attr('data-fieldname');\n    var next     = $(this).attr('data-nextfieldname');\n    var table\t = $(this).attr('data-table');\n    $.post('app/admin/custom-fields/order.php', {current:current, next:next, table:table}, function(data) {\n        $('div.'+table+'-order-result').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//filter\n$('.edit-custom-filter').click(function() {\n\tshowSpinner();\n\tvar table = $(this).attr('data-table');\n    $.post('app/admin/custom-fields/filter.php',  {table:table}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n$(document).on(\"click\", \"#editcustomFilterSubmit\", function() {\n    showSpinner();\n    var field = $('form#editCustomFieldsFilter').serialize();\n    $.post('app/admin/custom-fields/filter-result.php', field, function(data) {\n        $('div.customEditFilterResult').html(data).slideDown('fast');\n        //reload after 2 seconds if succeeded!\n        reload_window (data);\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n/* API, agents regenerate code\n*********/\n//regenerate API key\n$(document).on('click', \"#regApiKey\", function() {\n\tshowSpinner();\n    $.post('app/admin/api/generate-key.php', function(data) {\n        $('input#appcode').val(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n//regenerate agent key\n$(document).on('click', \"#regAgentKey\", function() {\n\tshowSpinner();\n    $.post('app/admin/api/generate-key.php', function(data) {\n        $('input[name=code]').val(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n\n\n\n/*    Search and replace\n************************/\n$('button#searchReplaceSave').click(function() {\n    showSpinner();\n    var searchData = $('form#searchReplace').serialize();\n    $.post('app/admin/replace-fields/result.php', searchData, function(data) {\n        $('div.searchReplaceResult').html(data);\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*  Data Import / Export\n*************************/\n// dump database\n$('button#XLSdump, button#MySQLdump, button#hostfileDump').click(function () {\n    showSpinner();\n    var script = \"\"\n    // define script\n    if ($(this).attr('id')==\"XLSdump\")              { script = \"generate-xls.php\"; }\n    else if ($(this).attr('id')==\"MySQLdump\")       { script = \"generate-mysql.php\"; }\n    else if ($(this).attr('id')==\"hostfileDump\")    { script = \"generate-hosts.php\"; }\n\n    $(\"div.dl\").remove();    //remove old innerDiv\n    $('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/\"+script+\"'></iframe></div>\");\n    hideSpinner();\n});\n\n\n//Export Section\n$('button.dataExport').click(function () {\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\"]; var popsize = {};\n\tpopsize[\"subnets\"] = \"w700\";\n\tpopsize[\"ipaddr\"] = \"w700\";\n\tpopsize[\"devices\"] = \"max\";\n\tvar dataType = $('select[name=dataType]').find(\":selected\").val();\n\thidePopups();\n    //show popup window\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/export-' + dataType + '-field-select.php', function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\t\tshowPopup('popup_w400');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n//export buttons\n$(document).on(\"click\", \"button#dataExportSubmit\", function() {\n    //get selected fields\n\tvar dataType = $(this).attr('data-type');\n    var exportFields = $('form#selectExportFields').serialize();\n\t//show popup window\n\tswitch(dataType) {\n\t\tcase 'vrf':\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-vrf.php?\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'vlan':\n\t\t\tvar exportDomains = $('form#selectExportDomains').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-vlan.php?\" + exportDomains + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'subnets':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-subnets.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'ipaddr':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-ipaddr.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'l2dom':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-l2dom.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'devices':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-devices.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t\tcase 'devtype':\n\t\t\tvar exportSections = $('form#selectExportSections').serialize();\n\t\t\t$(\"div.dl\").remove();    //remove old innerDiv\n\t\t\t$('div.exportDIV').append(\"<div style='display:none' class='dl'><iframe src='app/admin/import-export/export-devtype.php?\" + exportSections + \"&\" + exportFields + \"'></iframe></div>\");\n\t\t\tsetTimeout(function (){hidePopups();}, 1500);\n\t\t\tbreak;\n\t}\n    return false;\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#exportSelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#exportCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //deselect all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#exportCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeSectionSelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeSectionCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeSectionCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeIPv4SelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeIPv4Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeIPv4Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeIPv6SelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeIPv6Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeIPv6Check').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n// Check/uncheck all\n$(document).on(\"click\", \"input#recomputeCVRFSelectAll\", function() {\n\tif(this.checked) { // check select status\n\t\t$('input#recomputeCVRFCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = true;  //select all checkboxes with same class\n\t\t});\n\t}else{\n\t\t$('input#recomputeCVRFCheck').each(function() { //loop through each checkbox\n\t\t\tthis.checked = false; //deselect all checkboxes with same class\n\t\t});\n\t}\n});\n//Import Section\n$('button.dataImport').click(function () {\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"recompute\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\"]; var popsize = {};\n\tpopsize[\"subnets\"] = \"max\";\n\tpopsize[\"ipaddr\"] = \"max\";\n\tpopsize[\"devices\"] = \"max\";\n\tvar dataType = $('select[name=dataType]').find(\":selected\").val();\n\thidePopups();\n    //show popup window, if implemented\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/import-' + dataType + '-select.php', function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w700').html(data);\n\t\t\tshowPopup('popup_w700');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n//import buttons\n$(document).on(\"click\", \"button#dataImportPreview\", function() {\n    //get data from previous window\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"recompute\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\" ]; var popsize = {};\n\tpopsize[\"subnets\"] = \"max\";\n\tpopsize[\"recompute\"] = \"max\";\n\tpopsize[\"ipaddr\"] = \"max\";\n\tpopsize[\"devices\"] = \"max\";\n\n\tvar dataType = $(this).attr('data-type');\n    var importFields = $('form#selectImportFields').serialize();\n\thidePopups();\n    //show popup window, if implemented\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/import-' + dataType + '-preview.php?' + importFields, function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w700').html(data);\n\t\t\tshowPopup('popup_w700');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n$(document).on(\"click\", \"button#dataImportSubmit\", function() {\n    //get data from previous window\n\tvar implemented = [\"vrf\",\"vlan\",\"subnets\",\"recompute\",\"ipaddr\", \"l2dom\", \"devices\", \"devtype\" ]; var popsize = {};\n\tpopsize[\"subnets\"] = \"max\";\n\tpopsize[\"recompute\"] = \"max\";\n\tpopsize[\"ipaddr\"] = \"max\";\n\tpopsize[\"devices\"] = \"max\";\n\tvar dataType = $(this).attr('data-type');\n    var importFields = $('form#selectImportFields').serialize();\n\thidePopups();\n    //show popup window, if implemented\n\tif (implemented.indexOf(dataType) > -1) {\n\t\tshowSpinner();\n\t\t$.post('app/admin/import-export/import-' + dataType + '.php?' + importFields, function(data) {\n\t\tif (popsize[dataType] !== undefined) {\n\t\t\t$('div.popup_'+popsize[dataType]).html(data);\n\t\t\tshowPopup('popup_'+popsize[dataType]);\n\t\t} else {\n\t\t\t$('#popupOverlay div.popup_w700').html(data);\n\t\t\tshowPopup('popup_w700');\n\t\t}\n\t\thideSpinner();\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t} else {\n\t\t$.post('app/admin/import-export/not-implemented.php', function(data) {\n\t\t$('#popupOverlay div.popup_w400').html(data);\n\t\tshowPopup('popup_w400');\n\t\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n\t}\n    return false;\n});\n// recompute button\n$('button.dataRecompute').click(function () {\n\tshowSpinner();\n\t$.post('app/admin/import-export/import-recompute-select.php', function(data) {\n\t$('#popupOverlay div.popup_w700').html(data);\n\tshowPopup('popup_w700');\n\thideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/*\tFix database\n***********************/\n$(document).on('click', '.btn-tablefix', function() {\n\tvar tableid = $(this).attr('data-tableid');\n\tvar fieldid = $(this).attr('data-fieldid');\n\tvar type \t= $(this).attr('data-type');\n    $.post('app/admin/verify-database/fix.php', {tableid:tableid, fieldid:fieldid, type:type}, function(data) {\n        $('div#fix-result-'+tableid+fieldid).html(data).fadeIn('fast');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); });\n    return false;\n});\n\n\n/* Bootstap table\n***********************/\n$('table#manageSubnets').on('click','button.editSubnet', function() {\n    showSpinner();\n    var sectionId   = $(this).attr('data-sectionid');\n    var subnetId    = $(this).attr('data-subnetid');\n    var action         = $(this).attr('data-action');\n    //format posted values\n    var postdata    = \"sectionId=\" + sectionId + \"&subnetId=\" + subnetId + \"&action=\" + action;\n\n    //load edit data\n    $.post(\"app/admin/subnets/edit.php\", postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); }); return false;\n});\n//change subnet permissions\n$('table#manageSubnets').on('click','button.showSubnetPerm', function() {\n\tshowSpinner();\n\tvar subnetId  = $(this).attr('data-subnetId');\n\tvar sectionId = $(this).attr('data-sectionId');\n\n\t$.post(\"app/admin/subnets/permissions-show.php\", {subnetId:subnetId, sectionId:sectionId}, function(data) {\n        $('#popupOverlay div.popup_w500').html(data);\n        showPopup('popup_w500');\n\t\thideSpinner();\n    }).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); }); return false;\n});\n$('table#manageSubnets').on('click','button.add_folder', function() {\n\tshowSpinner();\n    var subnetId  = $(this).attr('data-subnetId');\n    var sectionId = $(this).attr('data-sectionId');\n    var action    = $(this).attr('data-action');\n    //format posted values\n    var postdata     = \"sectionId=\"+sectionId+\"&subnetId=\"+subnetId+\"&action=\"+action+\"&location=IPaddresses\";\n\n    $.post('app/admin/subnets/edit-folder.php', postdata, function(data) {\n        $('#popupOverlay div.popup_w700').html(data);\n        showPopup('popup_w700');\n        hideSpinner();\n\t}).fail(function(jqxhr, textStatus, errorThrown) { showError(jqxhr.statusText + \"<br>Status: \" + textStatus + \"<br>Error: \"+errorThrown); }); return false;\n});\n\nreturn false;\n});", "== 1.4\n\n    New features:\n    ------------\n    + Configurable password policy;\n    + Sessions can be now stored in database (#516);\n    + Two-factor authenticaiton - otp (Google Authenticator);\n    + Customers module (#694);\n    + Search for free subnet inside whole section;\n\n    Enhancements, changes:\n    ----------------------------\n    + Circuits enhancements (Virtual Circuits);\n    + Dropped support for 32bit systems;\n    + PHP 5.4 is now required;\n    + Added comressed actions dropdown;\n    + Rack module enhancements (#1325):\n        + Dynamic rack sizes;\n        + Top-down / Bottom-up racks;\n        + Custom rack devices independant of devices (power, patchpanel);\n    + Customized user permissions for modules:\n        + VLAN module;\n        + VRF module;\n        + PowerDNS module;\n        + Circuits module;\n        + Customers module;\n        + Devices module;\n        + Rack module;\n        + NAT module;\n        + PSTN module;\n        + Locations module;\n    + API:\n        + New API security type - SSL with app code (static app code);\n        + New config.php option $api_allow_unsafe to allow non-SSL API queries;\n        + Added last access field to api;\n        + Add Mac Search for Addresses controller (#2005);\n\n    Bugfixes:\n    ----------------------------\n    + Fix appended \" U\" in Rack description (#2046);\n    + Fix Bandwidth calculator - 400 Bad Request. (#1807);\n    + Fix bad DNS reverse zone for /23 subnet (#666);\n    + Fix Add missing standard field (#2153);\n    + Fix Consistency of VARCHAR Size on 'owner' column across tables (#2136);\n    + API:\n        + Fix inconsistant API success value returned (#2045);\n\n    Security Fixes:\n    ----------------------------\n    + Hide SNMP community (#2197);\n    + Hide LDAP/AD/Radius username / password and secret from logs and syslog (#2006);\n    + XSS in phpipamredirect cookie (#2338);\n    + XSS in print-user.php, CSRF in user-edit.php (#2326);\n    + Possible SQL injection in nat/item-add-submit.php (#2344);\n    + Fixed possible file inclusion in editing authenticaiton methods;\n    + XSS in subnet-scan-telnet.php, CSRF in subnet-scan-execute.php (#2327);\n\n== 1.3.2\n\n    Enhancements, changes:\n    ----------------------------\n    + Dark theme added;\n    + Full php7.2 compatibility;\n    + url_rewrite has changed, please use new rewrite scheme (https://phpipam.net/news/new_rewrite_scheme/);\n    + Search for matching subnet in all VRFs feature enabled when importing addresses;\n    + Added new config option to show custom fields separated from standard fields when editing IP address;\n    + Added Required fields subpage to define IP address fields that must be filled in;\n    + Performance + bug fixes (#1660, #1657);\n    + MasterSubnet dropdown list is dynamically generated via AJAX call;\n    + Bandwidth calculator;\n    + Support 8U rack sizes. (#1891);\n    + API:\n        + New last_subnet API calls (#1655);\n\n    Translations:\n    ----------------------------\n    + German translation updated to verson 1.3.1;\n    + French translations updated. (#1881);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed uncaught error if vlan number exceeds max permitted (#1455);\n    + Fixed Illegal string offset 'dns_name' in pingCheck.php errors (#1461);\n    + Performance fix for subnet_dropdown_print_available (#1562);\n    + Fixed logo updater for apache v2.4 (#1582);\n    + Fixed section names containing spaces are not included in exports (#1566);\n    + Allow DNS wildcard records (#1571);\n    + Fixed slow mac address vendor decoding for subnet detail view (#1658);\n    + Performance fix for detecting overlapping subnets. (#1052, #1426, #1533);\n    + Performance fix for slow mac address vendor decoding (#1658);\n    + Performance fix for subnet API first_subnet & all_subnets calls;\n    + Performance fix for delegating subnet permissions;\n    + Convert to UTF-8 encoding on import/export to preserve dialectics (#1659, #1700, #1728);\n    + Importing IPs loose Mac Addresses (#1607);\n    + Section names containing spaces are not included in exports. (#1566);\n    + Bug with section and dashboard (#1593);\n    + Fixed improper contents in plain text part of notification e-mails (#1707);\n    + Reduce size of email notifications (#1643);\n    + PHP 5.3 compatibility fixes (#1594, #1730);\n    + PHP 7.2 compatibility fixes (#1683, #1714);\n    + Fixed notification e-mails contain a broken link. (#1708);\n    + Allow dots to be used in domain names. (#1747);\n    + Use multi-byte compatible functions when shortening text. (#1753);\n    + Scan subnet reports/selects invalid php path. (#1757);\n    + Small code refactoring (#1699);\n    + Rack device start position overwritten. (#1545);\n    + Sections with folders returns no subnets using API. (#1883);\n    + Add custom_ prefix to Prefix controller custom fields. (#1836);\n    + Non-Admins missing the button to Add circuit. (#1902);\n    + Wrong field name of deviceTypes table when checking device type. (#1910);\n    + SNMPv3 improvements;\n    + Misc IPv6 fixes;\n\n    Security Fixes:\n    ----------------------------\n    + Code injection in Name field. (#1667);\n    + XSS (reflected) in SubnetID param. (#1702);\n    + CSRF enables open mail relay. (#1703);\n    + Reflected XSS requiring user interaction on search. (#1705);\n    + XSS reflected via CSRF in preview.php. (#1706);\n    + Reflected XSS via CSV upload. (#1742);\n    + Reflected XSS on 'mac' parameter. (#1903);\n\n== 1.3.1\n\n    New features:\n    ------------\n    + Circuits module (circuits, providers, map, ...) (#731);\n\n    Enhancements, changes:\n    ----------------------------\n    + Racks:\n        + Automatic location assignment when device added to rack (#1230);\n        + Rack map showing map of all racks in location;\n        + Rack back side;\n    + Compact menu layout (per-user setting, showing only icons);\n    + Network to network static nat;\n    + Selectable logo size (from config.php) (#952);\n    + Added default option for permissions propagations (#1351);\n    + API:\n        + Added Circuits controller;\n        + Encrypyted requests can now also be form-encoded (#1191);\n        + Introduce mcrypt AES compatibility (#1516);\n        + Fixed field ip not displayed when filters applied (#1529);\n    + New resolve hostnames option for subnet (#1222):\n        + Updates hostnames via pingCheck.php script (if parameter set for subnet);\n        + Updates hostnames via resolveIPaddresses.php script (if parameter set for subnet);\n        + On-the-fly empty hostname update if resolved (if parameter set for subnet and enabled globally);\n        + Added this infor to tools > scanned networks;\n    + Added custom_ prefix to custom field names to avoid duplication with custom fields (#1387);\n    + Added option to hide IP requests for unauthenticated users on login page (#1394);\n    + Performance optimizations for locations and subnet usage calculation;\n    + Added user groups custom fields;\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.3;\n    + German translation updated to verson 1.3;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed RACK images not displayed if not root location (#1204);\n    + Fixed import gateway ip (#1240);\n    + Fixed JSON_UNESCAPED_UNICODE for PHP 5.3 (#1135, #1245);\n    + Rename class Thread to PingThread to avoid naming conflict with pthreads Thread class (#1254);\n    + Fixed custom fields integer on subnet (#1266);\n    + Fixed Import Ip-adress doesnt update location (#1284);\n    + Fixed json_error for logo upload (#1256);\n    + Fixed CSRF error when moving orphaned addresses (#1303);\n    + Fixed VRF fetching via API by Id;\n    + Fixed map issues when quotes are in name/description (#1384);\n    + Fixed item not removed from NAT when deleted (#1378);\n    + Fixed Error when error_reporting = E_ALL about strict standards when importing IP addresses (#1372);\n    + Fixed Apostrophe errors in text custom fields (#1375);\n    + Fixed API error when creating address under folder (#1507);\n    + Fixed SNMPv3 (#1119);\n\n    Security Fixes:\n    ----------------------------\n    + Fixed XSS issues (#1403, #1521, #1500);\n\n== 1.3\n\n    New features:\n    ------------\n    + Multicast module (RFC1112, RFC2464) with IP to MAC mapping and multicast networks overview;\n    + Threshold module for subnets;\n    + Racks module (Rack drawing) for devices;\n    + Address linking by selected field;\n    + Custom logo for site and mails;\n    + PSTN number management module;\n    + SNMP module:\n        + Subnets discovery from route table (all subnets, nested subnets, add new subnet);\n        + Hosts discovery scans via ARP check/interface check;\n        + Hosts discovery scans via ARP + MAC address check (detects interface);\n        + VLAN discovery;\n        + VRF discovery;\n        + Status update scans via ARP check;\n    + NAT module\n        + Source / static / destination NAT;\n        + Linking subnet to NAT\n        + Show bindings under tools and next to IP address / subnet\n    + Locations module\n        + Map devices / racks / subnets to location;\n        + Google maps integration;\n    + SAML2 authentication (SSO)\n\n    Enhancements, changes:\n    ----------------------------\n    + Folders can now contain addresses;\n    + API:\n        - Api v1 removed;\n        + If subnet gateway defined gatewayId is returned in subnet details;\n        + Automatically added nameservers to subnet results;\n        + Added subnet usage result for each subnet in section;\n        + Added custom fields for all controllers;\n        + New subnets automatically get parent permissions;\n        + Added IP calculation to subnet;\n        + Changed all not_found when searching objects to 404 and all invalid parameters to 409 (conflict);\n        + If new item is created id will be available in response field \u201cid\u201d;\n        + New parameter $time_response in api/index.php that will return execution time in field \u201ctime\";\n        + Extensive first_free subnet calls search speedup;\n        + POST transaction locking;\n        + All first_free and first_address responses are now \"data\" instead of \"ip\" and \"subnet\" for consistency;\n        + Subnet splitting now copies over custom fields values by default (user custom_fields=no to revert);\n        + Added API option to nest custom_fields to assure correct structure;\n        + Added option to show/hide links in api by default for each app;\n        + Changed API http response codes;\n        + New methods:\n            + users:\n                GET    /user/expires/                         // returns token expiration date\n                GET    /user/token-expires/                   // returns token expiration date\n                GET    /user/users/                           // returns all users (rwa app permissions required)\n                GET    /user/admins/                          // returns all admin users (rwa app permissions required)\n            + addresses:\n                GET    /addresses/first_free/{subnetId}/      // returns first available address (subnetId can be provided with parameters)\n                GET    /addresses/{ip}/{subnetId}/            // returns IP address from subnet\n                GET    /addresses/search/{hostname}/          // Will search addresses by hostname\n                DELETE /addresses/{ip}/{subnetId}/            // deletes IP address from subnet\n                POST   /addresses/first_free/{subnetId}/      // will search for first free address in subnet, creating new address\n            + subnets:\n                GET    /subnets/{id}/addresses/{ip}/          // returns IP address from subnet\n                GET    /subnets/{id}/first_free/              // returns first free address in subnet\n                GET    /subnets/{id}/first_subnet/{mask}/     // returns first available subnets with specified mask\n                GET    /subnets/{id}/all_subnets/{mask}/      // returns all available subnets with specified mask\n                POST   /subnets/{id}/first_subnet/{mask}/     // creates first free subnet under master with specified mask\n                DELETE /subnets/{id}/permissions/             // removes permissions\n                PATCH  /subnets/{id}/permissions/             // sets subnet permissions (?grouname1=ro&groupname2=3&43=1)\n        + New controller Prefix;\n        + New controller Devices;\n        + New subcontrollers:\n            + /tools/nat/\n            + /tools/racks/\n            + /tools/locations/\n    + Widgets:\n        + New threshold widget;\n        + New inactive hosts widget;\n        + New Locations widget;\n    + PowerDNS:\n        + Default domain for PTR records (if hostname is not set);\n        + When removing IP address additional option that removes all associated PDNS records (ip and hostname);\n    + Permit normal users to manage VLANs / VRFs;\n    + Inactive (offline) hosts tools page;\n    + MAC address normalization;\n    + jQuery tables;\n    + Permission delegation now only delegates changes not whole permission set;\n    + Users with RWA permission can manage IP requests and receive IP request mails + changelog mails for subnet;\n    + IPv4 subnet link to IPv6 for dual-stack info;\n    + Removed inacessible DNS servers if timeout to prevent page load timeouts;\n    + Added option to only show supernets to limit pageload [#844 #816 #736];\n    + Added last scan info to subnet details;\n    + Added option to update address tags when address state change occurs (pingCheck) [#840];\n    + Added mantaneance mode;\n    + Added inactive addresses removal script;\n    + Subnet overlapping now checked also inside folders to prevernt duplicates;\n    + Subnet overlapping now checked also between sections if VRF defined;\n    + Added new settings directive that requires unique subnets accross sections;\n    + Added index check in verify database to detect and fix possible missing DB indexes;\n    + Added MAC address vendor display option;\n\n    Bugfixes:\n    ----------------------------\n    + PowerDNS regenerate PTR records now only updates current subnet (before whole zone);\n    + Fixed visual bug on 32-bit systems;\n    + Normal users with RWA permissions can scan subnets;\n    + Changed default timestamp from 0000-00-00 00:00:00 to 1970-01-01 00:00:01 to avoid SQL install errors if strict mode;\n    + Fixed https access on non-standard ports;\n    + Extended username to 255 chars for LDAP logins;\n    + Fixed search export invalid encoding and data may have been lost XLS file error;\n    + Fixed invalid character encoding in API responses;\n    + PowerDNS records cannot be created on slave zone;\n    + Fixed subnet resizing bug if subnet contained slaves;\n    + Added separate CSRF cookies for each address/subnet/pstn object;\n    + Deleted items are now shown and searchable from changelog;\n\n== 1.20.1\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.2;\n    + German translation updated to verson 1.2;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade bug that selected invalid auth method for AD/LDAP users;\n    + Fixed LDAP problems after 1.2 upgrade;\n    + Fixed PowerDNS Slave with multiple masters delimiter error;\n    + Fixed PowerDNS PTR records not being updated automatically;\n    + Fixed csrf cookie bug when editing folder;\n    + Fixed csrf cookie bug when truncationg subnet;\n    + Fixed invalid code for API crypt method;\n    + Fixed strange headings font display in Firefox;\n    + Fixed invalid proxy settings in config.dist.php;\n    + Fixed search same hostnames in db link form address table;\n    + Fixed import subnet bug caused by fw object;\n    + Fixed Subnet Import (Preview button > no action);\n\n== 1.20\n\n    New features:\n    ------------\n    + Added multiple simultaneous authentication methods (Apache, AD, LDAP, Radius, NetIQ);\n    + Added fping scanning support;\n    + Added selectable scanning type (ping/pear/fping);\n    + Added L2 domains;\n    + Added option to define address as default GW for subnet;\n    + Added customizable address tags with compressed option;\n    + Added temporary subnet / address shares;\n    + Added quick subnet masks;\n    + Added nameserver sets per subnets (jonashauge);\n    + Added optional syslog as log location;\n    + REST API:\n        + documentation: http://phpipam.net/api-documentation/\n        + API v2, old v1 support added\n        + Complete rewrite of all API calls;\n        + New security models (crypt, ssl, none);\n        + Support for custom fields;\n        + JSON / XML output\n        + Full read/write controllers (Sections, Subnets/Folders, Addresses, Vlans, Vrfs);\n    + PowerDNS integration:\n        + Automatic reverse records creation (PTR) - IPv4 and IPv6;\n        + Automatic SOA, NS record creation;\n        + DNS domain management;\n    + Added Scan agents to scan subnets remotely;\n    + Added firewall zone mappings and module;\n    + Added per-subnet DNS resolvers;\n    + Added option to mark subnet as utilized (full);\n\n    Enhancements:\n    ----------------------------\n    + All tables are now InnoDB by default;\n    + Upgraded jQuery to 2.1.3;\n    + All functions rewritten to classes/methods;\n    + Parametized all SQL queries, moved from MySQLI to PDO;\n    + Added VLAN/VRF to search and to search results export;\n    + Redesigned admin and tools menu;\n    + Added scanned/discovered subnets to tools for faster overview;\n    + Per-user display settings;\n    + New widget - tools shortcuts;\n    + New widget - IP calculator;\n    + New widget - request IP address;\n    + Clickable links for subnet fields;\n    + Custom VRF fields;\n    + Subnets can be now linked to devices;\n    + Import/export enhancements;\n    + Fast user switching for admins to impersonate user;\n    + Opened folders and subnets in tree menu are saved on page reload;\n    + RWA users can now process IP requests;\n    + Added auto-suggest for possible slave subnets;\n    + SSL option for MySQL connections;\n    + Enum custom field support;\n    + Added password reset script;\n    + Set sections to display VRF in;\n\n    Security Fixes:\n    ----------------------------\n    + Parametized all MySQL querries;\n    + Fixed plainpass being logged on user update;\n    + Fixed XSS exploit on /error/;\n    + Added CSRF protection to forms;\n\n    Translations:\n    ----------------------------\n    + Added Czech translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed bug with SSL/TLS smtp servers;\n    + Fixed visual subnet display issues on 32bit systems;\n    + Fixed IPv6 split subnets bug;\n    + Fixed /31 ping bug scanning out of boundaries;\n    + Fixed nested broadcast not counted to used percentage;\n    + Fixed invalid redirect after timeout;\n    + Fixed discovery script index overridden;\n    + Fixed dashboard graphs links to subnets;\n    + Fixed Invalid ID on subnet scan of large subnets;\n\n== 1.1.010\n\n    Bugfixes:\n    ----------------------------\n    + Fixed login fails with LDAP when escape characters are in password;\n    + Fixed login not working with spaces in password for AD login;\n    + Fixed Ivalid action when adding vlans from subnet popup menu;\n    + Fixed custom fields not appearing properly on IP request editing;\n    + Fixed Invalid ID error for IP address details on sorting;\n    + Fixed warnings if no VLAN search results are present;\n    + Fixed test mail not sending;\n    + Fixed unable to login if $phpsessname not defined;\n    + Fixed unable to login after upgrade;\n\n== 1.1\n\n    Enhancements:\n    ----------------------------\n    + Caching of SQL results to avoid multiple queries;\n    + Reduced number of DB queries;\n    + Added selected mail notifications to admins to be notified on IP/subnet change;\n    + Added new subnetId index to ipaddresses table that significantly improves network loading;\n    + Now using only 1 network connection towards MySQL server;\n    + Updated pagination;\n    + mod_rewrite no longer required, selectable URL structure under settings;\n    + Added option not to display free ranges;\n    + Added option to set maximum VLAN number;\n    + Selectable custom fields to be visible/hidden in tables view and updated device/VLAN view;\n    + Added additional confirmation before section, subnet, folder and IP address deletion;\n    + New script added for cron checks that discovers new hosts for selected networks;\n    + Added inactivity timeout to settings;\n    + Changed install procedure and updated install scripts;\n    + Added PEAR check for installation;\n    + Added free range disaply for VLANs;\n    + Addes SSL/TLS option for SMTP mail;\n    + API:\n        + Bugfixes;\n        + Added API admin permissions;\n        + read/delete actions for IP addresses;\n        + read/delete actions for Vlans;\n        + read/delete actions for VRFs;\n\n    Security Fixes:\n    ----------------------------\n    + Fixed known command injection vulnerabilities in the scan functions;\n    + Fixed known SQL injection vulnerabilities;\n    + Fixed known XSS vulnerabilities;\n    + Fixed known action XSS events;\n    + Moved to crypt method for storing password in database with salting;\n    + Added option to force user to change pass after first login;\n    + Admin password must be changed after installation;\n    + Added captcha code request after 5x unsuccesfull login to prevent brute-force attacks;\n\n    Translations:\n    ----------------------------\n    + Added es_ES translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed top 10 widgets not escaping strings;\n    + Fixed section parent can be set to self that caused section to disapear;\n    + Fixed username instead of password being sent to smtp server;\n    + Fixed IE search bug with workaround;\n    + Fixed subnet and bcast not showing on strict mode disabled;\n    + Fixed top subnets missing on dashboard for non-admin users;\n    + Fixed bug when installation was silently failing bacause pf missing _() function (missing gettext extension)\n    + Fixed device custom field not populated on adding device;\n    + Fixed XLS export silently failed when description longer than 31 characters;\n    + Fixed overlapping check not working;\n    + Fixed subnet free space calcultation;\n    + Fixed visual subnet display not showing on /31 and /32 networks;\n    + Fixed custom fields display on folder edit;\n    + Fixed unable to edit IP addresses when fields are sorted;\n    + Fixde ordering of custom fields defaults to varchar 256;\n    + Fixed IPv6 subnet / broadcast calculation bug and next subnet suggestion;\n\n== 1.0\n\n    New features:\n    ----------------------------\n    + IP address page with IP address details and IP history (Changelog);\n    + IP address changelog, subnet and section changelogs with full changelog under tools;\n    + Favourite subnets for quick access;\n    + Adding subnets from free space with automatic mask provided;\n    + Automatic database validity check after upgrading and automatic field/table fix under administration;\n    + Automatic weekly check for new phpipam version;\n\n    Enhancements:\n    ----------------------------\n    + Bootstrap 3;\n    + UI enhancements;\n    + Improved views based on browser width;\n    + Widget order can now be set;\n    + Widgets can be reordered (dragged) directly on dashboard;\n    + Subnet can now be splitted to max 256 new subnets (16 before);\n    + Scan settings are moved to Administration;\n    + Widget management has moved to administration, which allows creation of new widgets;\n    + Improved ICMP error detection;\n    + Mail settings can now be set on gui (localhost / smtp);\n    + Popup windows are now draggable;\n    + VLAN adding in the fly enhancements;\n    + Master section now shows all subnets in subsections;\n    + Tools > devices redone;\n    + DeviceTypes can now be edited/set/added;\n    + Ping subnet enhancements;\n    + Custom field types are now defineable (int/varchar/date/datetime/text/bool/set);\n    + Date and timepicker popups if type = date/datetime;\n    + For `set` and boolean custom fields dropdown is presented that users can pick;\n\n    + Favourite subnets widget;\n    + IP requests widget;\n    + Changelog widget;\n\n    Translations:\n    ----------------------------\n    + Added Brazil translation (Michel Braga Guimar\u00e3es);\n\n    Bugfixes:\n    --------\n    + UI fixes;\n    + Fixed bug where last page of IP addresses was inaccessible;\n    + IP address state change is now sent to all admins;\n    + Fixed subnet displaying as 0.0.0.0/0 in details;\n    + Fixed links to subnets form vlans and vrfs;\n    + Fixed search result showing all folders if searched item is not IP address;\n    + Fixed disapearing section when L2 section was selected as master section;\n    + Fixed device ID showing in mail notification instead of hostname;\n    + Fixed device ID showing in search results and export instead of hostname;\n    + Fixed search for subnet name returned no results;\n    + Fixed apostophe in IP address description throws SQL error for scan results and XLS import;\n    + Fixed requester email gets cut if longer than 32 chars;\n    + Fixed admin folder edit appearing as subnet;\n    + Fixed missing device/port in import;\n    + Fixed master section delete did not delete subsections and belonging subnets/ips;\n    + Fixed online status was not updated when running Ping status scans;\n    + Fixed Folder name not appearing when deleting folder;\n\n== 0.9\n\n    New features:\n    ----------------------------\n    + Support for ICMP network discovery;\n    + Cron script to check status for selected subnets/hosts with threading suport (pcntl php extension required);\n    + ICMP check IP status in demand;\n    + Compressed (grouped) DHCP IP ranges;\n    + API server version 0.1;\n    + Option to show and group subnets by VLAN in subnets list;\n    + Option to show and group subnets by VRF in subnets list;\n    + Added subsections;\n    + Added AD username search;\n    + Added folders;\n\n    Enhancements:\n    ----------------------------\n    + Added error catching/displaying for ajax-loaded php scripts;\n    + Added default language for login/requests display and new users;\n    + Added direct links to different pages in IP address table;\n    + Subnets can now be edited directly from nested subnets list;\n    + When adding nested subnets default vlan/vrf is selected from parent;\n    + Added Section ordering;\n    + Added per/section subnet ordering (overrides dafault form settings);\n    + Clicking on section now shows all subnets and belonging details;\n    + If session timeouts after re-login last requested page will be opened;\n    + Searh for IP address now returns also subnet, even if IP is not existing;\n    + Per-user selection of widgets to display;\n    + Added description and required field checkbox for custom IP/Subnet Fields;\n    + Added custom device fields;\n    + Mails are now sent through phpmailer;\n    + Admin user cannot be deleted;\n\n    Translations:\n    ----------------------------\n    + Added French translation (Denis Darr\u00e9);\n    + Added Dutch translation (Michiel Visser);\n    + Added German translation (Carsten Br\u00fcckner);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed wrong VLAN display in tools;\n    + Fixed subnet/section links from VLANS if base not /;\n    + Fixed warning in apache log on subnet editing if no VRFs are configured;\n    + Fixed admin menu off-screen overflow;\n    + Fixed firefox error when selectiong rights for section/subnets was not possible;\n    + Fixed subnet description in Cyrillic problem;\n    + Fixed errors on no permissions for user;\n    + Fixed Inaccurate Free Space Calculation (and Chart);\n    + Fixed VLAN permissions where VLAN was not displayed;\n\n== 0.8\n\n    New features:\n    ----------------------------\n    + New group and permission management;\n    + Support for translations;\n    + Subnet resizing;\n    + Subnet splitting into smaller subnets;\n    + Added free space display for nested subnets;\n    + Added visual display of subnet usage per IP address;\n    + Added truncate network option that deletes all IP addresses in subnet;\n    + Added button the updates subnet with RIPE information;\n\n    Enhancements:\n    ----------------------------\n    + Added add nested subnet under subnet details to simplify master subnet selection in hierarchy;\n    + Added edit subnet link from search results;\n    + Added reverse IPv6 DNS entries to IPCalc (Vincent Boisard);\n    + Added option for plain-text emails;\n    + Added ckEditor to write instructions;\n    + StrictMode is not set globally anymore but set per section;\n    + Added custom user fields;\n    + Added option to verify that hostname is unique;\n    + Improved MySQL exception handling;\n    + Added mod_rewrite error detection on installation and upgrade;\n    + Added hostname validation;\n    + Added Hostfile dump of IP addresses;\n    + Search also searches in custom fields;\n    + jQuery updated to v 1.9.1;\n\n    Bugfixes:\n    ------------------------\n    + Fixed overlay on second popup;\n    + Fixed IE search bug;\n    + Fixed support for non-standard ports;\n    + Fixed permitting overlapping subnets if vrfs are different;\n    + Fixed dates in logging appearing in 12h format;\n    + Fixed broken subnets link in tools > subnets if installation is not at document root;\n    + Fixed error when adding new subnet if checkboxes are not selected in newer MySQL servers;\n    + Fixed bad display of multilined navigation bar;\n    + Fixed wrong output of tools > VLAN list when using Duplicate VLANs;\n    + Fixed wrong link for upgrade script;\n    + On VRF change all child subnets are updated also;\n    + Fixed wrong maximum on dashboard top10 percentage;\n    + Fixed Adding a vlan while editing a subnet resets the edit subnet form;\n    + Fixed wrong free space calculation for nested subnets;\n    + Fixed IP use statistics not cumulative up the hierarchy if subnes has slaves;\n\n== 0.7\n\n    New features:\n    ----------------------------\n    + Completely rewritten UI using twitter's bootstrap as base;\n    + Using mod_rewrite apache module to handle GET requests (new install requitements!);\n    + Unlimited number of subnetting levels;\n    + OpenLDAP authentication support;\n    + New URL structure;\n    + Sorting of IP addresses;\n    + Custom subnet fields;\n    + Custom VLAN fields and admin option to allow duplicate VLAN names (metro area VLANs);\n    + Script to automatically update IP <-> hostname, run via cron (functions/scripts/resolveIPaddresses.php);\n    + Show Subnet name instead of subnet IP address option;\n    + Strict mode option in config files that controlls overlapping checks;\n    + New subnet menu;\n    + Added printLimit feature to break IP addresses into pages;\n\n    Enhancements:\n    ----------------------------\n    + Lots of UI changes;\n    + Less Ajax usage to display websites and details;\n    + Hierarchy display under subnet details (breadcrumbs);\n    + Search results covering VLANs;\n    + Custom IP fields ordering;\n    + VLAN creation from adding/editing subnets;\n    + IP addresses can now be edited;\n    + Collapsed switch list;\n    + Removing VLANs also removes references from subnet list;\n    + Removing VRFs also removes references from subnet list;\n    + Logs for admin on dashboard;\n    + Search via GET;\n    + Support for range networks (allows use of subnet and broadcast as IP);\n    + Import of custom IP fields;\n    + Abiility to move subnets between sections;\n    + Improved display of nested subnets now shows all IP addresses from nested subnets and orphaned IPs;\n    + Hides display of custom fields in subnet if none is filled in whole subnet;\n    + Replaced Highcharts with Flot because of licencing issues;\n\n    Bugfixes:\n    ------------------------\n    + Fixed error with missing custom IP fields when adding new IP address;\n    + Fixed bug when deleteing root subnet only deleted directly nested subnets (now whole tree);\n    + Fixed checkboxes not working in various browsers;\n    + Fixed change in switch details causing IP address associations to switch to be lost;\n    + Fixed subnet description display in under subnet administration;\n    + Fixed depricated error when showing XLS files;\n    + Fixed error when custom fields were not updated on adding IP address;\n    + Fixed error when custom fields were with spaces in name were not updated;\n    + Fixed error when providing already requested IP address;\n    + Search available also to viewer user types;\n    + Fixed /127 and /128 IPv6 subnets;\n    + Fixed /31 and /32 IPv4 subnets;\n    + Significally reduced php processing for dashboard statistics;\n    + Fixed importing of if quote is present;\n\n== 0.6\n\n    New features:\n    ----------------------------\n    + Selectable IP address list display fields;\n    + Custom IP address fields;\n    + Search and replace IP fields function;\n    + Full page width theme;\n\n    Enhancements:\n    ----------------------------\n    + Independant VLAN management;\n    + Added additional level of subnet nesting;\n    + Added option to clear and export log files;\n    + Export of search results to XLS;\n    + Clickable search results;\n    + Selectable export fields when exporting subnet;\n    + Subnet can be deleted from ip address edit subnet;\n    + IP Requests for locked subnets and viewer users can be placed from ip address list;\n    + jQuery updated to v 1.7.1;\n    + HighCharts updated to v 2.2.0;\n\n    Bugfixes:\n    ------------------------\n    + Upgrade is supported only for versions 0.4 and higher;\n    + Fixed broken UTF-8 support;\n    + Fixed wrong logging when authenticating via AD;\n    + Fixed issues where external attacker might get information about internal hosts through resolvedns script;\n    + Fixed wrong subnet nesting under administration/manage subnets;\n    + Fixed editing subnet can be outside of its own root subnet;\n    + Fixed errors when adding new switch auto-adds itselt to all hosts without no switch defined;\n    + Fixed removing switch not removed in ip address list;\n    + Vlan1 can now be used;\n    + Fixed mail sending settings with missing information;\n    + Fixed errors on adding switch with no sections;\n    + Fixed version check;\n    + Removed masterSubnets from subnets available for IP requests;\n    + Fixed error when non-admin user could not open dashboard;\n    + Added how subnet list switch when list hidden;\n\n== 0.5\n\n    New features:\n    -------------\n    + Importing subnets from RIPE by AS in admin section;\n    + Added switch management and changed switch logic;\n    + Added VRF support;\n    + Added AD domain authentication;\n    + Added MAC address field to ip address;\n    + Added database table and belonging fields check under admin;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Added DNS resolving when editing/adding IP address;\n    + Added IE compatibility meta tag and IE UI improvements for IE >= 8;\n    + Search returns also subnets and MAC searches;\n    + Added mac address and IP status to XLS import/export scripts;\n    + jQuery update from 1.6.2 to 1.7;\n    + Highcharts update from 2.1.2 to 2.1.8;\n\n    + Fixed dashboard errors if no IPv4/IPv6 subnets configured;\n    + Fixed errors with viewing / modifying IP addresses for Operator users;\n    + Fixed session cookie error on hosts;\n    + Fixed error when saving settings;\n    + Fixed instructions errors when inserting html code;\n    + Fixed first free IP address not displaying in IP request;\n\n\n== 0.4\n\n    New features:\n    -------------\n    + Massive add / edit / delete by specifying IP range (e.g. 10.10.0.1 - 10.10.0.254);\n    + Database upgrade / install from browser -> simplified installation/update procedure;\n    + New usertype viewer - can only view IP address list;\n    + Subnets can now be edited directly from IP address list;\n    + Option to lock subnet for writing to no-admin users;\n    + Device and Host list;\n    + Option to specify which subnet can have IP requests when editing / adding subnet if module is enabled;\n    + Latest version check on admin page;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Fixed overspanning of multiple sections;\n    + Admin menu and add subnet now shown only to admins;\n    + Fixed VLAN table to show nesting and IP request option and statistics;\n    + Fixed subnet table to show nesting and IP request option;\n    + Subnet Adding shows only master subnets in section not in all sections;\n    + Tooltips and button hovers are now in separate javascript file;\n    + Graphs show only subnets with non-0 ip addresses;\n    + Various code enhancements + improved error handling;\n    + Fixed URL links not updating after few clicks;\n    + If loading slave subnet directly the subnet menu drops down and shows active slave subnet;\n    + Clicking on master shubnet shows all nested subnets and statistics;\n    + Redesigned log table;\n    + Fixed search;\n\n== 0.3\n\n    New features:\n    -------------\n    + Subnet nesting - you can now have master subnet and normal subnets belonging to it;\n    + Server settings are now moved to database and can be set under admin menu (database settings & debugging remain in config.php);\n    + Request IP module on login page with email notification;\n    + Confirm/reject IP address request from admin page with mail notification;\n    + Admin dashboard notification of new requests;\n    + Autocomplete of owner and Switch name from all available when adding/editing IP address;\n    + New settings quick access on button hover;\n    + Option to export each subnet indivudually;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + jQuery update from 1.6 to 1.6.2;\n    + VLANs are now grouped by section;\n    + Direct access to subnet from vlan table;\n    + UI enhancements;\n    + Fixed user editing bug where user update broke password;\n    + Fixed password in new account notification;\n    + Fixed percentage display on Dashboard;\n    + IPv6 calculator /64 limit fixed;\n    + Changed tooltip effect to appear instantly for smoother display;\n    + Login functions are now separate file;\n\n\n== 0.2 (First public version)\n\n    Bugfixes / enhancements:\n    ------------------------\n    + now also works with php 5.2;\n    + fixed empty fields in xls import;\n    + passwords are now stored in md5 hash;\n    + high numbers for free/used IP addresses (mainly IPv6) are now represented in k/m/G values to improve readibility;\n    + fixed log search bug;\n    + cursor not displayed as link on images and non-href links;\n    + same add image on all pages;\n    + fixed IP mail notification apperance;\n    + UI enhancements and bugfixes;\n    + Fixed some javascript bugs;\n    + Minified javascript to make loading faster;\n    + adding new ip address now automatically provides first available IP address in subnet;\n\n    New features:\n    -------------\n    + added switch / port fields to IP addresses;\n    + hide subets on request to get better view;\n    + Informational tooltips added + option to disable them in config file if someone finds them annoying;\n    + export whole IP address database to XLS file from admin menu;\n    + create MySQL database dump from admin menu;\n    + added IP instructions for users, that can be edited from admin menu;\n\n\n== 0.1 (First test version)\n"], "filenames": ["app/subnets/scan/subnet-scan-execute-scan-icmp.php", "app/subnets/scan/subnet-scan-execute-scan-telnet.php", "app/subnets/scan/subnet-scan-execute-snmp-arp.php", "app/subnets/scan/subnet-scan-execute-snmp-mac.php", "app/subnets/scan/subnet-scan-execute-update-icmp.php", "app/subnets/scan/subnet-scan-execute-update-snmp-arp.php", "app/subnets/scan/subnet-scan-execute.php", "app/subnets/scan/subnet-scan-result.php", "app/subnets/scan/subnet-scan.php", "functions/version.php", "js/magic.js", "misc/CHANGELOG"], "buggy_code_start_loc": [7, 7, 7, 7, 5, 7, 26, 32, 19, 7, 734, 55], "buggy_code_end_loc": [12, 18, 12, 12, 5, 9, 69, 33, 108, 8, 741, 55], "fixing_code_start_loc": [7, 7, 7, 7, 6, 7, 27, 32, 20, 7, 735, 56], "fixing_code_end_loc": [9, 18, 9, 9, 9, 9, 64, 33, 110, 8, 742, 57], "type": "CWE-79", "message": "phpIPAM version 1.3.2 and earlier contains a Cross Site Scripting (XSS) vulnerability in subnet-scan-telnet.php that can result in executing code in victims browser. This attack appears to be exploitable via victim visits link crafted by an attacker. This vulnerability appears to have been fixed in 1.4.", "other": {"cve": {"id": "CVE-2019-1000010", "sourceIdentifier": "cve@mitre.org", "published": "2019-02-04T21:29:01.003", "lastModified": "2019-02-06T12:50:52.387", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "phpIPAM version 1.3.2 and earlier contains a Cross Site Scripting (XSS) vulnerability in subnet-scan-telnet.php that can result in executing code in victims browser. This attack appears to be exploitable via victim visits link crafted by an attacker. This vulnerability appears to have been fixed in 1.4."}, {"lang": "es", "value": "phpIPAM, en versiones 1.3.2 y anteriores, contiene una vulnerabilidad de Cross-Site Scripting (XSS) en subnet-scan-telnet.php que puede resultar en la ejecuci\u00f3n de c\u00f3digo en el navegador de la v\u00edctima. Este ataque parece ser explotable mediante una v\u00edctima que visita un enlace manipulado por un atacante. La vulnerabilidad parece haber sido solucionada en la versi\u00f3n 1.4."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpipam:phpipam:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.3.2", "matchCriteriaId": "263E5E1B-4833-43F0-B563-30ADE0F25EE0"}]}]}], "references": [{"url": "https://github.com/phpipam/phpipam/commit/fd37bd8fb2b9c306079db505e0e3fe79a096c31c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/phpipam/phpipam/issues/2327", "source": "cve@mitre.org", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/phpipam/phpipam/commit/fd37bd8fb2b9c306079db505e0e3fe79a096c31c"}}