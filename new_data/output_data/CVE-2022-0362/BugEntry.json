{"buggy_code": ["<?php\nnamespace Api\\Controller;\nuse Think\\Controller;\nclass AdminUserController extends BaseController {\n\n\n    //\u83b7\u53d6\u6240\u6709\u7528\u6237\u5217\u8868\n    public function getList(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $page = I(\"page/d\");\n        $count = I(\"count/d\");\n        $username = I(\"username\");\n        $where = \" 1 = 1 \";\n        if ($username) {\n            $username = \\SQLite3::escapeString($username);\n           $where .= \" and username like '%{$username}%' \";\n        }\n        $Users = D(\"User\")->where($where)->page($page ,$count)->order(\" uid desc  \")->select();\n        $total = D(\"User\")->where($where)->count();\n        $return = array() ;\n        $return['total'] = (int)$total ;\n        if ($Users) {\n            foreach ($Users as $key => &$value) {\n                $value['reg_time'] = date(\"Y-m-d H:i:s\" , $value['reg_time']);\n                if($value['last_login_time']){\n                    $value['last_login_time'] = date(\"Y-m-d H:i:s\" , $value['last_login_time']);\n                }else{\n                    $value['last_login_time'] = '';\n                }\n            }\n            $return['users'] = $Users ;\n            $this->sendResult($return);\n        }else{\n            $this->sendResult(array());\n        }\n    }\n\n    //\u5220\u9664\u7528\u6237\n    public function deleteUser(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $uid = I(\"post.uid/d\");\n\n        if (D(\"Item\")->where(\"uid = '$uid' and is_del = 0 \")->find()) {\n           $this->sendError(10101,\"\u8be5\u7528\u6237\u540d\u4e0b\u8fd8\u6709\u9879\u76ee\uff0c\u4e0d\u5141\u8bb8\u5220\u9664\u3002\u8bf7\u5148\u5c06\u5176\u9879\u76ee\u5220\u9664\u6216\u8005\u91cd\u65b0\u5206\u914d/\u8f6c\u8ba9\"); \n           return ;\n        }\n        $return = D(\"User\")->delete_user($uid);\n        if (!$return) {\n            $this->sendError(10101);\n        }else{\n            $this->sendResult($return);\n        }\n    }\n\n    //\u4fee\u6539\u5bc6\u7801\n    public function changePassword(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $uid = I(\"post.uid/d\");\n        $new_password = I(\"new_password\");\n\n        $return = D(\"User\")->updatePwd($uid, $new_password);\n        if (!$return) {\n            $this->sendError(10101);\n        }else{\n            $this->sendResult($return);\n        }\n    }\n\n\n    //\u65b0\u589e\u7528\u6237\n    public function addUser(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $username = I(\"post.username\");\n        $password = I(\"post.password\");\n        $uid = I(\"post.uid\");\n        $name = I(\"post.name\");\n        if(!$username){\n            $this->sendError(10101,'\u7528\u6237\u540d\u4e0d\u5141\u8bb8\u4e3a\u7a7a');\n            return ;\n        }\n        if($uid){\n            if($password){\n                D(\"User\")->updatePwd($uid, $password);\n            }\n            if($name){\n                D(\"User\")->where(\" uid = '$uid' \")->save(array(\"name\"=>$name));\n             }\n             $this->sendResult(array());\n        }else{\n            if (D(\"User\")->isExist($username)) {\n                $this->sendError(10101,L('username_exists'));\n                return ;\n             }\n             $new_uid = D(\"User\")->register($username,$password);\n             if (!$new_uid) {\n                 $this->sendError(10101);\n             }else{\n                 if($name){\n                    D(\"User\")->where(\" uid = '$new_uid' \")->save(array(\"name\"=>$name));\n                 }\n                 $this->sendResult($return);\n             }\n        }\n\n    }\n\n\n\n}\n"], "fixing_code": ["<?php\nnamespace Api\\Controller;\nuse Think\\Controller;\nclass AdminUserController extends BaseController {\n\n\n    //\u83b7\u53d6\u6240\u6709\u7528\u6237\u5217\u8868\n    public function getList(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $page = I(\"page/d\");\n        $count = I(\"count/d\");\n        $username = I(\"username\");\n        $where = \" 1 = 1 \";\n        if ($username) {\n            $username = \\SQLite3::escapeString($username);\n           $where .= \" and username like '%{$username}%' \";\n        }\n        $Users = D(\"User\")->where($where)->page($page ,$count)->order(\" uid desc  \")->select();\n        $total = D(\"User\")->where($where)->count();\n        $return = array() ;\n        $return['total'] = (int)$total ;\n        if ($Users) {\n            foreach ($Users as $key => &$value) {\n                $value['reg_time'] = date(\"Y-m-d H:i:s\" , $value['reg_time']);\n                if($value['last_login_time']){\n                    $value['last_login_time'] = date(\"Y-m-d H:i:s\" , $value['last_login_time']);\n                }else{\n                    $value['last_login_time'] = '';\n                }\n            }\n            $return['users'] = $Users ;\n            $this->sendResult($return);\n        }else{\n            $this->sendResult(array());\n        }\n    }\n\n    //\u5220\u9664\u7528\u6237\n    public function deleteUser(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $uid = I(\"post.uid/d\");\n\n        if (D(\"Item\")->where(\"uid = '$uid' and is_del = 0 \")->find()) {\n           $this->sendError(10101,\"\u8be5\u7528\u6237\u540d\u4e0b\u8fd8\u6709\u9879\u76ee\uff0c\u4e0d\u5141\u8bb8\u5220\u9664\u3002\u8bf7\u5148\u5c06\u5176\u9879\u76ee\u5220\u9664\u6216\u8005\u91cd\u65b0\u5206\u914d/\u8f6c\u8ba9\"); \n           return ;\n        }\n        $return = D(\"User\")->delete_user($uid);\n        if (!$return) {\n            $this->sendError(10101);\n        }else{\n            $this->sendResult($return);\n        }\n    }\n\n    //\u4fee\u6539\u5bc6\u7801\n    public function changePassword(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $uid = I(\"post.uid/d\");\n        $new_password = I(\"new_password\");\n\n        $return = D(\"User\")->updatePwd($uid, $new_password);\n        if (!$return) {\n            $this->sendError(10101);\n        }else{\n            $this->sendResult($return);\n        }\n    }\n\n\n    //\u65b0\u589e\u7528\u6237\n    public function addUser(){\n        $login_user = $this->checkLogin();\n        $this->checkAdmin();\n        $username = I(\"post.username\");\n        $password = I(\"post.password\");\n        $uid = I(\"post.uid/d\");\n        $name = I(\"post.name\");\n        if(!$username){\n            $this->sendError(10101,'\u7528\u6237\u540d\u4e0d\u5141\u8bb8\u4e3a\u7a7a');\n            return ;\n        }\n        if($uid){\n            if($password){\n                D(\"User\")->updatePwd($uid, $password);\n            }\n            if($name){\n                D(\"User\")->where(\" uid = '$uid' \")->save(array(\"name\"=>$name));\n             }\n             $this->sendResult(array());\n        }else{\n            if (D(\"User\")->isExist($username)) {\n                $this->sendError(10101,L('username_exists'));\n                return ;\n             }\n             $new_uid = D(\"User\")->register($username,$password);\n             if (!$new_uid) {\n                 $this->sendError(10101);\n             }else{\n                 if($name){\n                    D(\"User\")->where(\" uid = '$new_uid' \")->save(array(\"name\"=>$name));\n                 }\n                 $this->sendResult($return);\n             }\n        }\n\n    }\n\n\n\n}\n"], "filenames": ["server/Application/Api/Controller/AdminUserController.class.php"], "buggy_code_start_loc": [79], "buggy_code_end_loc": [80], "fixing_code_start_loc": [79], "fixing_code_end_loc": [80], "type": "CWE-89", "message": "SQL Injection in Packagist showdoc/showdoc prior to 2.10.3.", "other": {"cve": {"id": "CVE-2022-0362", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-26T13:15:07.923", "lastModified": "2022-02-02T14:14:04.960", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "SQL Injection in Packagist showdoc/showdoc prior to 2.10.3."}, {"lang": "es", "value": "Una Inyecci\u00f3n SQL en Packagist showdoc/showdoc versiones anteriores a 2.10.3"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "LOW", "baseScore": 6.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.2, "impactScore": 5.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:showdoc:showdoc:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.10.3", "matchCriteriaId": "05C5DCD1-C603-4E72-8BEA-56DC42A0F703"}]}]}], "references": [{"url": "https://github.com/star7th/showdoc/commit/2b34e267e4186125f99bfa420140634ad45801fb", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/e7c72417-eb8f-416c-8480-be76ac0a9091", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/star7th/showdoc/commit/2b34e267e4186125f99bfa420140634ad45801fb"}}