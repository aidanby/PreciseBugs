{"buggy_code": ["<?php\n/**\n * Captions/timed-text controller.\n *\n * Very important - Flowplayer only accepts,\n *   xmlns=\"http://www.w3.org/2006/10/ttaf1\"\n * NOT\n *   xmlns=\"http://www.w3.org/2006/04/ttaf1\"\n *\n * @author N.D.Freear, 27 April 2011/6 February 2012.\n * @copyright Copyright 2012 The Open University.\n */\n#require_once APPPATH.'libraries/ouplayer_lib.php';\n\ndefine('TTML_NS', 'http://www.w3.org/2006/10/ttaf1');\n\n\nclass Timedtext extends MY_Controller { #CI_Controller {\n\n\n  // Captions for Mediaelement-based players.\n\n  /**\n   * TTML+XML to WebVTT (Web Video Text Tracks) parser.\n   * Copyright 2012-02-06 N.D.Freear/ The Open University.\n   *\n   * See, http://dev.w3.org/html5/webvtt/#the-webvtt-file-format\n   * See, http://www.delphiki.com/webvtt/\n   *\n   * FROM: oup-mep/webvtt.php\n   */\n  public function webvtt() {\n\n    $ttml_url = $this->input->get('url');\n    #'http://podcast.open.ac.uk/feeds/student-experiences/closed-captions/openings-being-an-ou-student.xml';\n    $debug = $this->input->get('debug');\n\n    if (! $ttml_url) {\n      $this->_error(\"Error, 'url' is a required parameter.\", 400);\n    }\n\n    $p = parse_url($ttml_url);\n\n\n    // A naive check for SRT captions, from VLE etc.\n    $is_srt = 'srt' == pathinfo($p['path'], PATHINFO_EXTENSION);\n\n\n\t// Bug #1334, Proxy mode to fix VLE caption redirects.\n\t// Example https://learn2acct.open.ac.uk/pluginfile.php/985394/mod_oucontent/oucontent/155114/k315-0-video1.srt\n    $options = array();\n    if ($is_srt && preg_match('/^(learn|[\\w\\.]*vledev)\\w*.open.ac.uk\\/(moodle\\w*\\/)?pluginfile/', $p['host'].$p['path'], $matches)) {\n      $options['proxy_cookies'] = true;\n      $options['max_redirects'] = 0;\n      $options['ua'] = $this->agent->agent_string();\n      $options['ssl_verify'] = false;\n      $options['debug'] = true;\n    }\n\n\t$this->load->library('http');\n\n    $result = $this->http->request($ttml_url, $spoof=FALSE, $options);\n\n    if (! $result->success) {\n      if (404 == $result->info['http_code']) {\n        $this->_error('Caption file not found.', 404);\n      }\n      #var_dump($result->info);\n      $this->_error('Caption request problem.', $result->http_code);\n    }\n\n\n    if (! $is_srt) {\n      $xmlo = @simplexml_load_string($result->data);\n      #$xmlo = new SimpleXMLElement($result->data);\n      if (! $xmlo) {\n        $this->_error('XML caption parsing problem.', 503);\n      }\n    }\n\n    if ($debug) {\n      header('Content-Type: text/plain; charset=UTF-8');\n    } else {\n      header('Content-Type: text/vtt; charset=UTF-8');\n    }\n    @header('X-Input-Text-Track: '.$ttml_url); #Was: X-Input-TTML\n    @header('Content-Disposition: inline; filename='.basename($ttml_url).'.vtt');\n    echo 'WEBVTT'.PHP_EOL.PHP_EOL;\n\n\n    // Assume the SRT captions are well formed.\n    if ($is_srt) {\n      echo $result->data;\n      exit;\n    }\n\n\n    // Get declared namespaces.\n    $ns = $xmlo->getDocNamespaces();\n\n    $ns_string = '';\n    foreach ($ns as $pre => $url) {\n      $fix = ''==$pre ? 'xmlns' : 'xmlns:'.$pre;\n      $ns_string .= \" $fix='$url'\";\n    }\n\n    $count=0;\nforeach ($xmlo->body->div->p as $el => $para) {\n  $count++;\n\n  $text ='';\n  $line = $para;\n  /*if (isset($para->span)) {\n    $line = $para->span;\n  }*/\n\n  if ($line->br) {\n    $para_n = str_replace('<br/>', ' ', $line->asXML());\n    $xml_n = \"<x $ns_string>$para_n</x>\";\n    $xmlo_n = new SimpleXMLElement($xml_n);\n    if (isset($xmlo_n->p->span)) {\n      foreach ($xmlo_n->p->children() as $span) {\n        $text .= (string) $span.' ';\n      }\n    } else {\n      $text = (string) $xmlo_n->p;\n    }\n  } elseif (isset($para->span)) {\n    $text = (string) $para->span;\n  } else {\n    $text = (string) $line;\n  }\n  echo\n    $count.PHP_EOL\n    .$para['begin'].' --> '.$para['end'].PHP_EOL\n    .$text .PHP_EOL.PHP_EOL;\n}\n\n  }\n\n\n\n  // Captions for Flowplayer-based players.\n\n  /**\n  *  OU-podcast player captions - TTML format.\n  */\n  public function pod_captions($custom_id, $shortcode, $captions_file=null) {\n\n    $captions = config_item('captions'); #$this->CI->config->item\n    if (isset($captions[$custom_id][$shortcode])) {\n\t    $cc_file = $captions[$custom_id][$shortcode];\n\n\t\t$cc_path = config_item('data_dir').\"oupodcast/captions/$cc_file\";\n\n\t\tif (file_exists($cc_path)) {\n\t\t    header('Content-Type: application/xml; charset=utf-8');\n\t\t\theader(\"Content-Disposition: inline; filename=$cc_file\");\n\t\t\t#header('Content-Type: text/xml');\n\t\t\t#header('Accept-Ranges: bytes');\n\t\t\techo file_get_contents($cc_path);\n\t\t} else {\n\t\t  //Error 404.\n\t\t  die('404.1');\n\t\t}\n\t} else {\n\t\t//Error 404.\n\t\tdie('404.2');\n\t}\n  }\n}\n"], "fixing_code": ["<?php\n/**\n * Captions/timed-text controller.\n *\n * Very important - Flowplayer only accepts,\n *   xmlns=\"http://www.w3.org/2006/10/ttaf1\"\n * NOT\n *   xmlns=\"http://www.w3.org/2006/04/ttaf1\"\n *\n * @author N.D.Freear, 27 April 2011/6 February 2012.\n * @copyright Copyright 2012 The Open University.\n */\n#require_once APPPATH.'libraries/ouplayer_lib.php';\n\ndefine('TTML_NS', 'http://www.w3.org/2006/10/ttaf1');\n\n\nclass Timedtext extends MY_Controller { #CI_Controller {\n\n\n  // Captions for Mediaelement-based players.\n\n  /**\n   * TTML+XML to WebVTT (Web Video Text Tracks) parser.\n   * Copyright 2012-02-06 N.D.Freear/ The Open University.\n   *\n   * See, http://dev.w3.org/html5/webvtt/#the-webvtt-file-format\n   * See, http://www.delphiki.com/webvtt/\n   *\n   * FROM: oup-mep/webvtt.php\n   */\n  public function webvtt() {\n\n    $ttml_url = $this->input->get('url');\n    #'http://podcast.open.ac.uk/feeds/student-experiences/closed-captions/openings-being-an-ou-student.xml';\n    $debug = $this->input->get('debug');\n\n    if (! $ttml_url) {\n      $this->_error(\"Error, 'url' is a required parameter.\", 400);\n    }\n\n    // Security.\n    if (! preg_match('@^https?:\\/\\/podcast.open.ac.uk\\/@', $ttml_url)) {\n      $this->_error(\"Error, bad 'url' parameter.\", 400);\n      return;\n    }\n\n    $p = parse_url($ttml_url);\n\n\n    // A naive check for SRT captions, from VLE etc.\n    $is_srt = 'srt' == pathinfo($p['path'], PATHINFO_EXTENSION);\n\n\n\t// Bug #1334, Proxy mode to fix VLE caption redirects.\n\t// Example https://learn2acct.open.ac.uk/pluginfile.php/985394/mod_oucontent/oucontent/155114/k315-0-video1.srt\n    $options = array();\n    if ($is_srt && preg_match('/^(learn|[\\w\\.]*vledev)\\w*.open.ac.uk\\/(moodle\\w*\\/)?pluginfile/', $p['host'].$p['path'], $matches)) {\n      $options['proxy_cookies'] = true;\n      $options['max_redirects'] = 0;\n      $options['ua'] = $this->agent->agent_string();\n      $options['ssl_verify'] = false;\n      $options['debug'] = true;\n    }\n\n\t$this->load->library('http');\n\n    $result = $this->http->request($ttml_url, $spoof=FALSE, $options);\n\n    if (! $result->success) {\n      if (404 == $result->info['http_code']) {\n        $this->_error('Caption file not found.', 404);\n      }\n      #var_dump($result->info);\n      $this->_error('Caption request problem.', $result->http_code);\n    }\n\n\n    if (! $is_srt) {\n      $xmlo = @simplexml_load_string($result->data);\n      #$xmlo = new SimpleXMLElement($result->data);\n      if (! $xmlo) {\n        $this->_error('XML caption parsing problem.', 503);\n      }\n    }\n\n    if ($debug) {\n      header('Content-Type: text/plain; charset=UTF-8');\n    } else {\n      header('Content-Type: text/vtt; charset=UTF-8');\n    }\n    @header('X-Input-Text-Track: '.$ttml_url); #Was: X-Input-TTML\n    @header('Content-Disposition: inline; filename='.basename($ttml_url).'.vtt');\n    echo 'WEBVTT'.PHP_EOL.PHP_EOL;\n\n\n    // Assume the SRT captions are well formed.\n    if ($is_srt) {\n      echo $result->data;\n      exit;\n    }\n\n\n    // Get declared namespaces.\n    $ns = $xmlo->getDocNamespaces();\n\n    $ns_string = '';\n    foreach ($ns as $pre => $url) {\n      $fix = ''==$pre ? 'xmlns' : 'xmlns:'.$pre;\n      $ns_string .= \" $fix='$url'\";\n    }\n\n    $count=0;\nforeach ($xmlo->body->div->p as $el => $para) {\n  $count++;\n\n  $text ='';\n  $line = $para;\n  /*if (isset($para->span)) {\n    $line = $para->span;\n  }*/\n\n  if ($line->br) {\n    $para_n = str_replace('<br/>', ' ', $line->asXML());\n    $xml_n = \"<x $ns_string>$para_n</x>\";\n    $xmlo_n = new SimpleXMLElement($xml_n);\n    if (isset($xmlo_n->p->span)) {\n      foreach ($xmlo_n->p->children() as $span) {\n        $text .= (string) $span.' ';\n      }\n    } else {\n      $text = (string) $xmlo_n->p;\n    }\n  } elseif (isset($para->span)) {\n    $text = (string) $para->span;\n  } else {\n    $text = (string) $line;\n  }\n  echo\n    $count.PHP_EOL\n    .$para['begin'].' --> '.$para['end'].PHP_EOL\n    .$text .PHP_EOL.PHP_EOL;\n}\n\n  }\n\n\n\n  // Captions for Flowplayer-based players.\n\n  /**\n  *  OU-podcast player captions - TTML format.\n  */\n  public function pod_captions($custom_id, $shortcode, $captions_file=null) {\n\n    $captions = config_item('captions'); #$this->CI->config->item\n    if (isset($captions[$custom_id][$shortcode])) {\n\t    $cc_file = $captions[$custom_id][$shortcode];\n\n\t\t$cc_path = config_item('data_dir').\"oupodcast/captions/$cc_file\";\n\n\t\tif (file_exists($cc_path)) {\n\t\t    header('Content-Type: application/xml; charset=utf-8');\n\t\t\theader(\"Content-Disposition: inline; filename=$cc_file\");\n\t\t\t#header('Content-Type: text/xml');\n\t\t\t#header('Accept-Ranges: bytes');\n\t\t\techo file_get_contents($cc_path);\n\t\t} else {\n\t\t  //Error 404.\n\t\t  die('404.1');\n\t\t}\n\t} else {\n\t\t//Error 404.\n\t\tdie('404.2');\n\t}\n  }\n}\n"], "filenames": ["application/controllers/timedtext.php"], "buggy_code_start_loc": [39], "buggy_code_end_loc": [39], "fixing_code_start_loc": [40], "fixing_code_end_loc": [46], "type": "CWE-79", "message": "A vulnerability was found in IET-OU Open Media Player up to 1.5.0. It has been declared as problematic. This vulnerability affects the function webvtt of the file application/controllers/timedtext.php. The manipulation of the argument ttml_url leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.5.1 is able to address this issue. The name of the patch is 3f39f2d68d11895929c04f7b49b97a734ae7cd1f. It is recommended to upgrade the affected component. VDB-216862 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2019-25086", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-27T09:15:09.647", "lastModified": "2023-01-06T05:42:59.527", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in IET-OU Open Media Player up to 1.5.0. It has been declared as problematic. This vulnerability affects the function webvtt of the file application/controllers/timedtext.php. The manipulation of the argument ttml_url leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.5.1 is able to address this issue. The name of the patch is 3f39f2d68d11895929c04f7b49b97a734ae7cd1f. It is recommended to upgrade the affected component. VDB-216862 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:open:open_media_player:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.5.1", "matchCriteriaId": "623D5E25-2312-4590-B717-18C6E666BE5D"}]}]}], "references": [{"url": "https://github.com/IET-OU/open-media-player/commit/3f39f2d68d11895929c04f7b49b97a734ae7cd1f", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/IET-OU/open-media-player/issues/93", "source": "cna@vuldb.com", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/IET-OU/open-media-player/releases/tag/1.5.1", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://iet.eu.teamwork.com/desk/#/tickets/366419", "source": "cna@vuldb.com", "tags": ["Issue Tracking", "Permissions Required", "Vendor Advisory"]}, {"url": "https://vuldb.com/?ctiid.216862", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216862", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/IET-OU/open-media-player/commit/3f39f2d68d11895929c04f7b49b97a734ae7cd1f"}}