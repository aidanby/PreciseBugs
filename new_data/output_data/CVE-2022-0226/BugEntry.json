{"buggy_code": ["<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhaudit/configuration.tpl.php');\n\n$auditOptions = erLhcoreClassModelChatConfig::fetch('audit_configuration');\n$data = (array)$auditOptions->data;\n\nif ( isset($_POST['StoreOptions']) ) {\n\n    $definition = array(\n        'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\n        'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\n        'log_user' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\n        'log_block' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\n        'log_objects' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw',null,FILTER_REQUIRE_ARRAY),\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n    $Errors = array();\n\n    if ( $form->hasValidData( 'days_log' )) {\n        $data['days_log'] = $form->days_log ;\n    } else {\n        $data['days_log'] = 90;\n    }\n\n    if ( $form->hasValidData( 'log_objects' )) {\n        $data['log_objects'] = $form->log_objects ;\n    } else {\n        $data['log_objects'] = array();\n    }\n\n    if ( $form->hasValidData( 'log_js' )) {\n        $data['log_js'] = 1;\n    } else {\n        $data['log_js'] = 0;\n    }\n\n    if ( $form->hasValidData( 'log_block' )) {\n        $data['log_block'] = 1;\n    } else {\n        $data['log_block'] = 0;\n    }\n\n    if ( $form->hasValidData( 'log_user' )) {\n        $data['log_user'] = 1;\n    } else {\n        $data['log_user'] = 0;\n    }\n\n    $auditOptions->explain = '';\n    $auditOptions->type = 0;\n    $auditOptions->hidden = 1;\n    $auditOptions->identifier = 'audit_configuration';\n    $auditOptions->value = serialize($data);\n    $auditOptions->saveThis();\n\n    $tpl->set('updated','done');\n}\n\n$tpl->set('audit_options',$data);\n\n$Result['content'] = $tpl->fetch();\n\n$Result['path'] = array(\n    array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('department/edit','System configuration')),\n    array(\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('audit/options', 'Options')\n    )\n);\n\n?>"], "fixing_code": ["<?php\n\n$tpl = erLhcoreClassTemplate::getInstance('lhaudit/configuration.tpl.php');\n\n$auditOptions = erLhcoreClassModelChatConfig::fetch('audit_configuration');\n$data = (array)$auditOptions->data;\n\nif ( isset($_POST['StoreOptions']) ) {\n\n    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n        erLhcoreClassModule::redirect();\n        exit;\n    }\n    \n    $definition = array(\n        'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\n        'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\n        'log_user' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\n        'log_block' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\n        'log_objects' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'unsafe_raw',null,FILTER_REQUIRE_ARRAY),\n    );\n\n    $form = new ezcInputForm( INPUT_POST, $definition );\n    $Errors = array();\n\n    if ( $form->hasValidData( 'days_log' )) {\n        $data['days_log'] = $form->days_log ;\n    } else {\n        $data['days_log'] = 90;\n    }\n\n    if ( $form->hasValidData( 'log_objects' )) {\n        $data['log_objects'] = $form->log_objects ;\n    } else {\n        $data['log_objects'] = array();\n    }\n\n    if ( $form->hasValidData( 'log_js' )) {\n        $data['log_js'] = 1;\n    } else {\n        $data['log_js'] = 0;\n    }\n\n    if ( $form->hasValidData( 'log_block' )) {\n        $data['log_block'] = 1;\n    } else {\n        $data['log_block'] = 0;\n    }\n\n    if ( $form->hasValidData( 'log_user' )) {\n        $data['log_user'] = 1;\n    } else {\n        $data['log_user'] = 0;\n    }\n\n    $auditOptions->explain = '';\n    $auditOptions->type = 0;\n    $auditOptions->hidden = 1;\n    $auditOptions->identifier = 'audit_configuration';\n    $auditOptions->value = serialize($data);\n    $auditOptions->saveThis();\n\n    $tpl->set('updated','done');\n}\n\n$tpl->set('audit_options',$data);\n\n$Result['content'] = $tpl->fetch();\n\n$Result['path'] = array(\n    array('url' => erLhcoreClassDesign::baseurl('system/configuration'),'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('department/edit','System configuration')),\n    array(\n        'title' => erTranslationClassLhTranslation::getInstance()->getTranslation('audit/options', 'Options')\n    )\n);\n\n?>"], "filenames": ["lhc_web/modules/lhaudit/configuration.php"], "buggy_code_start_loc": [9], "buggy_code_end_loc": [9], "fixing_code_start_loc": [10], "fixing_code_end_loc": [15], "type": "CWE-352", "message": "livehelperchat is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2022-0226", "sourceIdentifier": "security@huntr.dev", "published": "2022-01-14T19:15:08.123", "lastModified": "2022-01-21T03:25:43.710", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "livehelperchat is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "livehelperchat es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:livehelperchat:live_helper_chat:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.0", "matchCriteriaId": "9C340059-AF21-4164-8C85-B627CC108D5D"}]}]}], "references": [{"url": "https://github.com/livehelperchat/livehelperchat/commit/f59ffb02984c0ce2fbb19ac39365066507de9370", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/635d0abf-7680-47f6-a277-d9a91471c73f", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/livehelperchat/livehelperchat/commit/f59ffb02984c0ce2fbb19ac39365066507de9370"}}