{"buggy_code": ["name: build\n\non:\n  push:\n    branches: [ master ]\n  pull_request:\n    branches: [ master ]\n\njobs:\n  test:\n    strategy:\n      matrix:\n        go: [ '1.15.x', '1.16.x', '1.17.x' ]\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@master\n      - name: Set up Go\n        uses: actions/setup-go@v1\n        with:\n          go-version: ${{ matrix.go }}\n      - name: test\n        run: go test -coverprofile=coverage.txt -covermode=atomic\n      - name: coverage\n        run: bash <(curl -s https://codecov.io/bash)\n", "package httpSwagger\n\nimport (\n\t\"html/template\"\n\t\"net/http\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"sync\"\n\n\tswaggerFiles \"github.com/swaggo/files\"\n\t\"github.com/swaggo/swag\"\n)\n\n// WrapHandler wraps swaggerFiles.Handler and returns http.HandlerFunc\nvar WrapHandler = Handler()\n\n// Config stores httpSwagger configuration variables.\ntype Config struct {\n\t// The url pointing to API definition (normally swagger.json or swagger.yaml). Default is `doc.json`.\n\tURL                  string\n\tDeepLinking          bool\n\tDocExpansion         string\n\tDomID                string\n\tPersistAuthorization bool\n\tPlugins              []template.JS\n\tUIConfig             map[template.JS]template.JS\n\tBeforeScript         template.JS\n\tAfterScript          template.JS\n}\n\n// URL presents the url pointing to API definition (normally swagger.json or swagger.yaml).\nfunc URL(url string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.URL = url\n\t}\n}\n\n// DeepLinking true, false.\nfunc DeepLinking(deepLinking bool) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.DeepLinking = deepLinking\n\t}\n}\n\n// DocExpansion list, full, none.\nfunc DocExpansion(docExpansion string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.DocExpansion = docExpansion\n\t}\n}\n\n// DomID #swagger-ui.\nfunc DomID(domID string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.DomID = domID\n\t}\n}\n\n// If set to true, it persists authorization data and it would not be lost on browser close/refresh\n// Defaults to false\nfunc PersistAuthorization(persistAuthorization bool) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.PersistAuthorization = persistAuthorization\n\t}\n}\n\n// Plugins specifies additional plugins to load into Swagger UI.\nfunc Plugins(plugins []string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tvs := make([]template.JS, len(plugins))\n\t\tfor i, v := range plugins {\n\t\t\tvs[i] = template.JS(v)\n\t\t}\n\t\tc.Plugins = vs\n\t}\n}\n\n// UIConfig specifies additional SwaggerUIBundle config object properties.\nfunc UIConfig(props map[string]string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tvs := make(map[template.JS]template.JS, len(props))\n\t\tfor k, v := range props {\n\t\t\tvs[template.JS(k)] = template.JS(v)\n\t\t}\n\t\tc.UIConfig = vs\n\t}\n}\n\n// BeforeScript holds JavaScript to be run right before the Swagger UI object is created.\nfunc BeforeScript(js string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.BeforeScript = template.JS(js)\n\t}\n}\n\n// AfterScript holds JavaScript to be run right after the Swagger UI object is created\n// and set on the window.\nfunc AfterScript(js string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.AfterScript = template.JS(js)\n\t}\n}\n\n// Handler wraps `http.Handler` into `http.HandlerFunc`.\nfunc Handler(configFns ...func(*Config)) http.HandlerFunc {\n\tvar once sync.Once\n\n\tconfig := &Config{\n\t\tURL:          \"doc.json\",\n\t\tDeepLinking:  true,\n\t\tDocExpansion: \"list\",\n\t\tDomID:        \"#swagger-ui\",\n\t}\n\tfor _, configFn := range configFns {\n\t\tconfigFn(config)\n\t}\n\n\t// create a template with name\n\tt := template.New(\"swagger_index.html\")\n\tindex, _ := t.Parse(indexTempl)\n\n\tvar re = regexp.MustCompile(`^(.*/)([^?].*)?[?|.]*$`)\n\n\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\tmatches := re.FindStringSubmatch(r.RequestURI)\n\t\tpath := matches[2]\n\n\t\th := swaggerFiles.Handler\n\t\tonce.Do(func() {\n\t\t\th.Prefix = matches[1]\n\t\t})\n\n\t\tswitch filepath.Ext(path) {\n\t\tcase \".html\":\n\t\t\tw.Header().Set(\"Content-Type\", \"text/html; charset=utf-8\")\n\t\tcase \".css\":\n\t\t\tw.Header().Set(\"Content-Type\", \"text/css; charset=utf-8\")\n\t\tcase \".js\":\n\t\t\tw.Header().Set(\"Content-Type\", \"application/javascript\")\n\t\tcase \".png\":\n\t\t\tw.Header().Set(\"Content-Type\", \"image/png\")\n\t\tcase \".json\":\n\t\t\tw.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t}\n\n\t\tswitch path {\n\t\tcase \"index.html\":\n\t\t\t_ = index.Execute(w, config)\n\t\tcase \"doc.json\":\n\t\t\tdoc, err := swag.ReadDoc()\n\t\t\tif err != nil {\n\t\t\t\thttp.Error(w, http.StatusText(http.StatusInternalServerError), http.StatusInternalServerError)\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\t_, _ = w.Write([]byte(doc))\n\t\tcase \"\":\n\t\t\thttp.Redirect(w, r, h.Prefix+\"index.html\", 301)\n\t\tdefault:\n\t\t\th.ServeHTTP(w, r)\n\t\t}\n\t}\n}\n\nconst indexTempl = `<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Swagger UI</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script>\nwindow.onload = function() {\n  {{- if .BeforeScript}}\n  {{.BeforeScript}}\n  {{- end}}\n  // Build a system\n  const ui = SwaggerUIBundle({\n    url: \"{{.URL}}\",\n    deepLinking: {{.DeepLinking}},\n    docExpansion: \"{{.DocExpansion}}\",\n    dom_id: \"{{.DomID}}\",\n    persistAuthorization: {{.PersistAuthorization}},\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n      {{- range $plugin := .Plugins }},\n      {{$plugin}}\n      {{- end}}\n    ],\n    {{- range $k, $v := .UIConfig}}\n    {{$k}}: {{$v}},\n    {{- end}}\n    layout: \"StandaloneLayout\"\n  })\n\n  window.ui = ui\n  {{- if .AfterScript}}\n  {{.AfterScript}}\n  {{- end}}\n}\n</script>\n</body>\n\n</html>\n`\n", "package httpSwagger\n\nimport (\n\t\"bytes\"\n\t\"html/template\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/swaggo/swag\"\n)\n\ntype mockedSwag struct{}\n\nfunc (s *mockedSwag) ReadDoc() string {\n\treturn `{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"description\": \"This is a sample server Petstore server.\",\n        \"title\": \"Swagger Example API\",\n        \"termsOfService\": \"http://swagger.io/terms/\",\n        \"contact\": {\n            \"name\": \"API Support\",\n            \"url\": \"http://www.swagger.io/support\",\n            \"email\": \"support@swagger.io\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\": \"1.0\"\n    },\n    \"host\": \"petstore.swagger.io\",\n    \"basePath\": \"/v2\",\n    \"paths\": {}\n}`\n}\n\nfunc TestWrapHandler(t *testing.T) {\n\trouter := http.NewServeMux()\n\n\trouter.Handle(\"/\", Handler(DocExpansion(\"none\"), DomID(\"#swagger-ui\")))\n\n\tw1 := performRequest(\"GET\", \"/index.html\", router)\n\tassert.Equal(t, 200, w1.Code)\n\tassert.Equal(t, w1.Header()[\"Content-Type\"][0], \"text/html; charset=utf-8\")\n\n\tw2 := performRequest(\"GET\", \"/doc.json\", router)\n\tassert.Equal(t, 500, w2.Code)\n\n\tswag.Register(swag.Name, &mockedSwag{})\n\tw2 = performRequest(\"GET\", \"/doc.json\", router)\n\tassert.Equal(t, 200, w2.Code)\n\tassert.Equal(t, \"application/json; charset=utf-8\", w2.Header().Get(\"content-type\"))\n\n\tw3 := performRequest(\"GET\", \"/favicon-16x16.png\", router)\n\tassert.Equal(t, 200, w3.Code)\n\tassert.Equal(t, w3.Header()[\"Content-Type\"][0], \"image/png\")\n\n\tw4 := performRequest(\"GET\", \"/swagger-ui.css\", router)\n\tassert.Equal(t, 200, w4.Code)\n\tassert.Equal(t, w4.Header()[\"Content-Type\"][0], \"text/css; charset=utf-8\")\n\n\tw5 := performRequest(\"GET\", \"/swagger-ui-bundle.js\", router)\n\tassert.Equal(t, 200, w5.Code)\n\tassert.Equal(t, w5.Header()[\"Content-Type\"][0], \"application/javascript\")\n\n\tw6 := performRequest(\"GET\", \"/notfound\", router)\n\tassert.Equal(t, 404, w6.Code)\n\n\tw7 := performRequest(\"GET\", \"/\", router)\n\tassert.Equal(t, 301, w7.Code)\n}\n\nfunc performRequest(method, target string, h http.Handler) *httptest.ResponseRecorder {\n\tr := httptest.NewRequest(method, target, nil)\n\tw := httptest.NewRecorder()\n\n\th.ServeHTTP(w, r)\n\n\treturn w\n}\n\nfunc TestURL(t *testing.T) {\n\texpected := \"https://github.com/swaggo/http-swagger\"\n\tcfg := Config{}\n\tconfigFunc := URL(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.URL)\n}\n\nfunc TestDeepLinking(t *testing.T) {\n\texpected := true\n\tcfg := Config{}\n\tconfigFunc := DeepLinking(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DeepLinking)\n}\n\nfunc TestDocExpansion(t *testing.T) {\n\texpected := \"https://github.com/swaggo/docs\"\n\tcfg := Config{}\n\tconfigFunc := DocExpansion(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DocExpansion)\n}\n\nfunc TestDomID(t *testing.T) {\n\texpected := \"#swagger-ui\"\n\tcfg := Config{}\n\tconfigFunc := DomID(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DomID)\n}\n\nfunc TestPersistAuthorization(t *testing.T) {\n\texpected := true\n\tcfg := Config{}\n\tconfigFunc := PersistAuthorization(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.PersistAuthorization)\n}\n\nfunc TestConfigURL(t *testing.T) {\n\n\ttype fixture struct {\n\t\tdesc  string\n\t\tcfgfn func(c *Config)\n\t\texp   *Config\n\t}\n\n\tfixtures := []fixture{\n\t\t{\n\t\t\tdesc: \"configure URL\",\n\t\t\texp: &Config{\n\t\t\t\tURL: \"https://example.org/doc.json\",\n\t\t\t},\n\t\t\tcfgfn: URL(\"https://example.org/doc.json\"),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure DeepLinking\",\n\t\t\texp: &Config{\n\t\t\t\tDeepLinking: true,\n\t\t\t},\n\t\t\tcfgfn: DeepLinking(true),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure DocExpansion\",\n\t\t\texp: &Config{\n\t\t\t\tDocExpansion: \"none\",\n\t\t\t},\n\t\t\tcfgfn: DocExpansion(\"none\"),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure DomID\",\n\t\t\texp: &Config{\n\t\t\t\tDomID: \"#swagger-ui\",\n\t\t\t},\n\t\t\tcfgfn: DomID(\"#swagger-ui\"),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure Plugins\",\n\t\t\texp: &Config{\n\t\t\t\tPlugins: []template.JS{\n\t\t\t\t\t\"SomePlugin\",\n\t\t\t\t\t\"AnotherPlugin\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tcfgfn: Plugins([]string{\n\t\t\t\t\"SomePlugin\",\n\t\t\t\t\"AnotherPlugin\",\n\t\t\t}),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure UIConfig\",\n\t\t\texp: &Config{\n\t\t\t\tUIConfig: map[template.JS]template.JS{\n\t\t\t\t\t\"urls\": `[\"https://example.org/doc1.json\",\"https://example.org/doc1.json\"],`,\n\t\t\t\t},\n\t\t\t},\n\t\t\tcfgfn: UIConfig(map[string]string{\n\t\t\t\t\"urls\": `[\"https://example.org/doc1.json\",\"https://example.org/doc1.json\"],`,\n\t\t\t}),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure BeforeScript\",\n\t\t\texp: &Config{\n\t\t\t\tBeforeScript: `const SomePlugin = (system) => ({\n    // Some plugin\n  });`,\n\t\t\t},\n\t\t\tcfgfn: BeforeScript(`const SomePlugin = (system) => ({\n    // Some plugin\n  });`),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure AfterScript\",\n\t\t\texp: &Config{\n\t\t\t\tAfterScript: `const SomePlugin = (system) => ({\n    // Some plugin\n  });`,\n\t\t\t},\n\t\t\tcfgfn: AfterScript(`const SomePlugin = (system) => ({\n    // Some plugin\n  });`),\n\t\t},\n\t}\n\n\tfor _, fix := range fixtures {\n\t\tt.Run(fix.desc, func(t *testing.T) {\n\t\t\tcfg := &Config{}\n\t\t\tfix.cfgfn(cfg)\n\t\t\tassert.Equal(t, cfg, fix.exp)\n\t\t})\n\t}\n}\n\nfunc TestUIConfigOptions(t *testing.T) {\n\n\ttype fixture struct {\n\t\tdesc string\n\t\tcfg  *Config\n\t\texp  string\n\t}\n\n\thdr := `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Swagger UI</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script>\n`\n\tftr := `\n</script>\n</body>\n\n</html>\n`\n\n\tfixtures := []fixture{\n\t\t{\n\t\t\tdesc: \"default configuration\",\n\t\t\tcfg: &Config{\n\t\t\t\tURL:                  \"doc.json\",\n\t\t\t\tDeepLinking:          true,\n\t\t\t\tDocExpansion:         \"list\",\n\t\t\t\tDomID:                \"#swagger-ui\",\n\t\t\t\tPersistAuthorization: false,\n\t\t\t},\n\t\t\texp: `window.onload = function() {\n  \n  const ui = SwaggerUIBundle({\n    url: \"doc.json\",\n    deepLinking:  true ,\n    docExpansion: \"list\",\n    dom_id: \"#swagger-ui\",\n    persistAuthorization:  false ,\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  })\n\n  window.ui = ui\n}`,\n\t\t},\n\t\t{\n\t\t\tdesc: \"script configuration\",\n\t\t\tcfg: &Config{\n\t\t\t\tURL:                  \"swagger.json\",\n\t\t\t\tDeepLinking:          false,\n\t\t\t\tPersistAuthorization: true,\n\t\t\t\tDocExpansion:         \"none\",\n\t\t\t\tDomID:                \"#swagger-ui-id\",\n\t\t\t\tBeforeScript: `const SomePlugin = (system) => ({\n    // Some plugin\n  });\n`,\n\t\t\t\tAfterScript: `const someOtherCode = function(){\n    // Do something\n  };\n  someOtherCode();`,\n\t\t\t\tPlugins: []template.JS{\n\t\t\t\t\t\"SomePlugin\",\n\t\t\t\t\t\"AnotherPlugin\",\n\t\t\t\t},\n\t\t\t\tUIConfig: map[template.JS]template.JS{\n\t\t\t\t\t\"showExtensions\":        \"true\",\n\t\t\t\t\t\"onComplete\":            `() => { window.ui.setBasePath('v3'); }`,\n\t\t\t\t\t\"defaultModelRendering\": `\"model\"`,\n\t\t\t\t},\n\t\t\t},\n\t\t\texp: `window.onload = function() {\n  const SomePlugin = (system) => ({\n    // Some plugin\n  });\n\n  \n  const ui = SwaggerUIBundle({\n    url: \"swagger.json\",\n    deepLinking:  false ,\n    docExpansion: \"none\",\n    dom_id: \"#swagger-ui-id\",\n    persistAuthorization:  true ,\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl,\n      SomePlugin,\n      AnotherPlugin\n    ],\n    defaultModelRendering: \"model\",\n    onComplete: () => { window.ui.setBasePath('v3'); },\n    showExtensions: true,\n    layout: \"StandaloneLayout\"\n  })\n\n  window.ui = ui\n  const someOtherCode = function(){\n    // Do something\n  };\n  someOtherCode();\n}`,\n\t\t},\n\t}\n\n\tfor _, fix := range fixtures {\n\t\tt.Run(fix.desc, func(t *testing.T) {\n\t\t\ttmpl := template.New(\"swagger_index.html\")\n\t\t\tindex, err := tmpl.Parse(indexTempl)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\n\t\t\tbuf := bytes.NewBuffer(nil)\n\t\t\tif err := index.Execute(buf, fix.cfg); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\n\t\t\texp := hdr + fix.exp + ftr\n\n\t\t\t// Compare line by line\n\t\t\texplns := strings.Split(exp, \"\\n\")\n\t\t\tbuflns := strings.Split(buf.String(), \"\\n\")\n\n\t\t\texplen, buflen := len(explns), len(buflns)\n\t\t\tif explen != buflen {\n\t\t\t\tt.Errorf(\"expected %d lines, but got %d\", explen, buflen)\n\t\t\t}\n\n\t\t\tprintContext := func(idx int) {\n\t\t\t\tlines := 3\n\n\t\t\t\tfirstIdx := idx - lines\n\t\t\t\tif firstIdx < 0 {\n\t\t\t\t\tfirstIdx = 0\n\t\t\t\t}\n\t\t\t\tlastIdx := idx + lines\n\t\t\t\tif lastIdx > explen {\n\t\t\t\t\tlastIdx = explen\n\t\t\t\t}\n\t\t\t\tif lastIdx > buflen {\n\t\t\t\t\tlastIdx = buflen\n\t\t\t\t}\n\t\t\t\tt.Logf(\"expected:\\n\")\n\t\t\t\tfor i := firstIdx; i < lastIdx; i++ {\n\t\t\t\t\tt.Logf(explns[i])\n\t\t\t\t}\n\t\t\t\tt.Logf(\"got:\\n\")\n\t\t\t\tfor i := firstIdx; i < lastIdx; i++ {\n\t\t\t\t\tt.Logf(buflns[i])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor i, expln := range explns {\n\t\t\t\tif i >= buflen {\n\t\t\t\t\tprintContext(i)\n\t\t\t\t\tt.Fatalf(`first unequal line: expected \"%s\" but got EOF`, expln)\n\t\t\t\t}\n\t\t\t\tbufln := buflns[i]\n\t\t\t\tif bufln != expln {\n\t\t\t\t\tprintContext(i)\n\t\t\t\t\tt.Fatalf(`first unequal line: expected \"%s\" but got \"%s\"`, expln, bufln)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif buflen > explen {\n\t\t\t\tprintContext(explen - 1)\n\t\t\t\tt.Fatalf(`first unequal line: expected EOF, but got \"%s\"`, buflns[explen])\n\t\t\t}\n\t\t})\n\t}\n}\n"], "fixing_code": ["name: build\n\non:\n  push:\n    branches: [ master ]\n  pull_request:\n    branches: [ master ]\n\njobs:\n  test:\n    strategy:\n      matrix:\n        go: [ '1.15.x', '1.16.x', '1.17.x', '1.18.x' ]\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@master\n      - name: Set up Go\n        uses: actions/setup-go@v1\n        with:\n          go-version: ${{ matrix.go }}\n      - name: test\n        run: go test -coverprofile=coverage.txt -covermode=atomic\n      - name: coverage\n        run: bash <(curl -s https://codecov.io/bash)\n", "package httpSwagger\n\nimport (\n\t\"html/template\"\n\t\"net/http\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"sync\"\n\n\tswaggerFiles \"github.com/swaggo/files\"\n\t\"github.com/swaggo/swag\"\n)\n\n// WrapHandler wraps swaggerFiles.Handler and returns http.HandlerFunc\nvar WrapHandler = Handler()\n\n// Config stores httpSwagger configuration variables.\ntype Config struct {\n\t// The url pointing to API definition (normally swagger.json or swagger.yaml). Default is `doc.json`.\n\tURL                  string\n\tDeepLinking          bool\n\tDocExpansion         string\n\tDomID                string\n\tPersistAuthorization bool\n\tPlugins              []template.JS\n\tUIConfig             map[template.JS]template.JS\n\tBeforeScript         template.JS\n\tAfterScript          template.JS\n}\n\n// URL presents the url pointing to API definition (normally swagger.json or swagger.yaml).\nfunc URL(url string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.URL = url\n\t}\n}\n\n// DeepLinking true, false.\nfunc DeepLinking(deepLinking bool) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.DeepLinking = deepLinking\n\t}\n}\n\n// DocExpansion list, full, none.\nfunc DocExpansion(docExpansion string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.DocExpansion = docExpansion\n\t}\n}\n\n// DomID #swagger-ui.\nfunc DomID(domID string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.DomID = domID\n\t}\n}\n\n// If set to true, it persists authorization data and it would not be lost on browser close/refresh\n// Defaults to false\nfunc PersistAuthorization(persistAuthorization bool) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.PersistAuthorization = persistAuthorization\n\t}\n}\n\n// Plugins specifies additional plugins to load into Swagger UI.\nfunc Plugins(plugins []string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tvs := make([]template.JS, len(plugins))\n\t\tfor i, v := range plugins {\n\t\t\tvs[i] = template.JS(v)\n\t\t}\n\t\tc.Plugins = vs\n\t}\n}\n\n// UIConfig specifies additional SwaggerUIBundle config object properties.\nfunc UIConfig(props map[string]string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tvs := make(map[template.JS]template.JS, len(props))\n\t\tfor k, v := range props {\n\t\t\tvs[template.JS(k)] = template.JS(v)\n\t\t}\n\t\tc.UIConfig = vs\n\t}\n}\n\n// BeforeScript holds JavaScript to be run right before the Swagger UI object is created.\nfunc BeforeScript(js string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.BeforeScript = template.JS(js)\n\t}\n}\n\n// AfterScript holds JavaScript to be run right after the Swagger UI object is created\n// and set on the window.\nfunc AfterScript(js string) func(c *Config) {\n\treturn func(c *Config) {\n\t\tc.AfterScript = template.JS(js)\n\t}\n}\n\n// Handler wraps `http.Handler` into `http.HandlerFunc`.\nfunc Handler(configFns ...func(*Config)) http.HandlerFunc {\n\tvar once sync.Once\n\n\tconfig := &Config{\n\t\tURL:          \"doc.json\",\n\t\tDeepLinking:  true,\n\t\tDocExpansion: \"list\",\n\t\tDomID:        \"#swagger-ui\",\n\t}\n\tfor _, configFn := range configFns {\n\t\tconfigFn(config)\n\t}\n\n\t// create a template with name\n\tt := template.New(\"swagger_index.html\")\n\tindex, _ := t.Parse(indexTempl)\n\n\tvar re = regexp.MustCompile(`^(.*/)([^?].*)?[?|.]*$`)\n\n\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\tif r.Method != http.MethodGet {\n\t\t\thttp.Error(w, \"Method not allowed\", http.StatusMethodNotAllowed)\n\t\t\treturn\n\t\t}\n\t\tmatches := re.FindStringSubmatch(r.RequestURI)\n\t\tpath := matches[2]\n\n\t\th := swaggerFiles.Handler\n\t\tonce.Do(func() {\n\t\t\th.Prefix = matches[1]\n\t\t})\n\n\t\tswitch filepath.Ext(path) {\n\t\tcase \".html\":\n\t\t\tw.Header().Set(\"Content-Type\", \"text/html; charset=utf-8\")\n\t\tcase \".css\":\n\t\t\tw.Header().Set(\"Content-Type\", \"text/css; charset=utf-8\")\n\t\tcase \".js\":\n\t\t\tw.Header().Set(\"Content-Type\", \"application/javascript\")\n\t\tcase \".png\":\n\t\t\tw.Header().Set(\"Content-Type\", \"image/png\")\n\t\tcase \".json\":\n\t\t\tw.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t}\n\n\t\tswitch path {\n\t\tcase \"index.html\":\n\t\t\t_ = index.Execute(w, config)\n\t\tcase \"doc.json\":\n\t\t\tdoc, err := swag.ReadDoc()\n\t\t\tif err != nil {\n\t\t\t\thttp.Error(w, http.StatusText(http.StatusInternalServerError), http.StatusInternalServerError)\n\n\t\t\t\treturn\n\t\t\t}\n\t\t\t_, _ = w.Write([]byte(doc))\n\t\tcase \"\":\n\t\t\thttp.Redirect(w, r, h.Prefix+\"index.html\", http.StatusMovedPermanently)\n\t\tdefault:\n\t\t\th.ServeHTTP(w, r)\n\t\t}\n\t}\n}\n\nconst indexTempl = `<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Swagger UI</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script>\nwindow.onload = function() {\n  {{- if .BeforeScript}}\n  {{.BeforeScript}}\n  {{- end}}\n  // Build a system\n  const ui = SwaggerUIBundle({\n    url: \"{{.URL}}\",\n    deepLinking: {{.DeepLinking}},\n    docExpansion: \"{{.DocExpansion}}\",\n    dom_id: \"{{.DomID}}\",\n    persistAuthorization: {{.PersistAuthorization}},\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n      {{- range $plugin := .Plugins }},\n      {{$plugin}}\n      {{- end}}\n    ],\n    {{- range $k, $v := .UIConfig}}\n    {{$k}}: {{$v}},\n    {{- end}}\n    layout: \"StandaloneLayout\"\n  })\n\n  window.ui = ui\n  {{- if .AfterScript}}\n  {{.AfterScript}}\n  {{- end}}\n}\n</script>\n</body>\n\n</html>\n`\n", "package httpSwagger\n\nimport (\n\t\"bytes\"\n\t\"html/template\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/swaggo/swag\"\n)\n\ntype mockedSwag struct{}\n\nfunc (s *mockedSwag) ReadDoc() string {\n\treturn `{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"description\": \"This is a sample server Petstore server.\",\n        \"title\": \"Swagger Example API\",\n        \"termsOfService\": \"http://swagger.io/terms/\",\n        \"contact\": {\n            \"name\": \"API Support\",\n            \"url\": \"http://www.swagger.io/support\",\n            \"email\": \"support@swagger.io\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\": \"1.0\"\n    },\n    \"host\": \"petstore.swagger.io\",\n    \"basePath\": \"/v2\",\n    \"paths\": {}\n}`\n}\n\nfunc TestWrapHandler(t *testing.T) {\n\trouter := http.NewServeMux()\n\n\trouter.Handle(\"/\", Handler(DocExpansion(\"none\"), DomID(\"#swagger-ui\")))\n\n\tw1 := performRequest(http.MethodGet, \"/index.html\", router)\n\tassert.Equal(t, http.StatusOK, w1.Code)\n\tassert.Equal(t, w1.Header()[\"Content-Type\"][0], \"text/html; charset=utf-8\")\n\n\tassert.Equal(t, http.StatusInternalServerError, performRequest(http.MethodGet, \"/doc.json\", router).Code)\n\n\tswag.Register(swag.Name, &mockedSwag{})\n\tw2 := performRequest(http.MethodGet, \"/doc.json\", router)\n\tassert.Equal(t, http.StatusOK, w2.Code)\n\tassert.Equal(t, \"application/json; charset=utf-8\", w2.Header().Get(\"content-type\"))\n\n\tw3 := performRequest(http.MethodGet, \"/favicon-16x16.png\", router)\n\tassert.Equal(t, http.StatusOK, w3.Code)\n\tassert.Equal(t, w3.Header()[\"Content-Type\"][0], \"image/png\")\n\n\tw4 := performRequest(http.MethodGet, \"/swagger-ui.css\", router)\n\tassert.Equal(t, http.StatusOK, w4.Code)\n\tassert.Equal(t, w4.Header()[\"Content-Type\"][0], \"text/css; charset=utf-8\")\n\n\tw5 := performRequest(http.MethodGet, \"/swagger-ui-bundle.js\", router)\n\tassert.Equal(t, http.StatusOK, w5.Code)\n\tassert.Equal(t, w5.Header()[\"Content-Type\"][0], \"application/javascript\")\n\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/notfound\", router).Code)\n\n\tassert.Equal(t, 301, performRequest(http.MethodGet, \"/\", router).Code)\n\n\tassert.Equal(t, http.StatusMethodNotAllowed, performRequest(http.MethodPost, \"/swagger/index.html\", router).Code)\n\n\tassert.Equal(t, http.StatusMethodNotAllowed, performRequest(http.MethodPut, \"/swagger/index.html\", router).Code)\n}\n\nfunc performRequest(method, target string, h http.Handler) *httptest.ResponseRecorder {\n\tr := httptest.NewRequest(method, target, nil)\n\tw := httptest.NewRecorder()\n\n\th.ServeHTTP(w, r)\n\n\treturn w\n}\n\nfunc TestURL(t *testing.T) {\n\texpected := \"https://github.com/swaggo/http-swagger\"\n\tcfg := Config{}\n\tconfigFunc := URL(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.URL)\n}\n\nfunc TestDeepLinking(t *testing.T) {\n\texpected := true\n\tcfg := Config{}\n\tconfigFunc := DeepLinking(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DeepLinking)\n}\n\nfunc TestDocExpansion(t *testing.T) {\n\texpected := \"https://github.com/swaggo/docs\"\n\tcfg := Config{}\n\tconfigFunc := DocExpansion(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DocExpansion)\n}\n\nfunc TestDomID(t *testing.T) {\n\texpected := \"#swagger-ui\"\n\tcfg := Config{}\n\tconfigFunc := DomID(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DomID)\n}\n\nfunc TestPersistAuthorization(t *testing.T) {\n\texpected := true\n\tcfg := Config{}\n\tconfigFunc := PersistAuthorization(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.PersistAuthorization)\n}\n\nfunc TestConfigURL(t *testing.T) {\n\n\ttype fixture struct {\n\t\tdesc  string\n\t\tcfgfn func(c *Config)\n\t\texp   *Config\n\t}\n\n\tfixtures := []fixture{\n\t\t{\n\t\t\tdesc: \"configure URL\",\n\t\t\texp: &Config{\n\t\t\t\tURL: \"https://example.org/doc.json\",\n\t\t\t},\n\t\t\tcfgfn: URL(\"https://example.org/doc.json\"),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure DeepLinking\",\n\t\t\texp: &Config{\n\t\t\t\tDeepLinking: true,\n\t\t\t},\n\t\t\tcfgfn: DeepLinking(true),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure DocExpansion\",\n\t\t\texp: &Config{\n\t\t\t\tDocExpansion: \"none\",\n\t\t\t},\n\t\t\tcfgfn: DocExpansion(\"none\"),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure DomID\",\n\t\t\texp: &Config{\n\t\t\t\tDomID: \"#swagger-ui\",\n\t\t\t},\n\t\t\tcfgfn: DomID(\"#swagger-ui\"),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure Plugins\",\n\t\t\texp: &Config{\n\t\t\t\tPlugins: []template.JS{\n\t\t\t\t\t\"SomePlugin\",\n\t\t\t\t\t\"AnotherPlugin\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tcfgfn: Plugins([]string{\n\t\t\t\t\"SomePlugin\",\n\t\t\t\t\"AnotherPlugin\",\n\t\t\t}),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure UIConfig\",\n\t\t\texp: &Config{\n\t\t\t\tUIConfig: map[template.JS]template.JS{\n\t\t\t\t\t\"urls\": `[\"https://example.org/doc1.json\",\"https://example.org/doc1.json\"],`,\n\t\t\t\t},\n\t\t\t},\n\t\t\tcfgfn: UIConfig(map[string]string{\n\t\t\t\t\"urls\": `[\"https://example.org/doc1.json\",\"https://example.org/doc1.json\"],`,\n\t\t\t}),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure BeforeScript\",\n\t\t\texp: &Config{\n\t\t\t\tBeforeScript: `const SomePlugin = (system) => ({\n    // Some plugin\n  });`,\n\t\t\t},\n\t\t\tcfgfn: BeforeScript(`const SomePlugin = (system) => ({\n    // Some plugin\n  });`),\n\t\t},\n\t\t{\n\t\t\tdesc: \"configure AfterScript\",\n\t\t\texp: &Config{\n\t\t\t\tAfterScript: `const SomePlugin = (system) => ({\n    // Some plugin\n  });`,\n\t\t\t},\n\t\t\tcfgfn: AfterScript(`const SomePlugin = (system) => ({\n    // Some plugin\n  });`),\n\t\t},\n\t}\n\n\tfor _, fix := range fixtures {\n\t\tt.Run(fix.desc, func(t *testing.T) {\n\t\t\tcfg := &Config{}\n\t\t\tfix.cfgfn(cfg)\n\t\t\tassert.Equal(t, cfg, fix.exp)\n\t\t})\n\t}\n}\n\nfunc TestUIConfigOptions(t *testing.T) {\n\n\ttype fixture struct {\n\t\tdesc string\n\t\tcfg  *Config\n\t\texp  string\n\t}\n\n\thdr := `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Swagger UI</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n  </style>\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script>\n`\n\tftr := `\n</script>\n</body>\n\n</html>\n`\n\n\tfixtures := []fixture{\n\t\t{\n\t\t\tdesc: \"default configuration\",\n\t\t\tcfg: &Config{\n\t\t\t\tURL:                  \"doc.json\",\n\t\t\t\tDeepLinking:          true,\n\t\t\t\tDocExpansion:         \"list\",\n\t\t\t\tDomID:                \"#swagger-ui\",\n\t\t\t\tPersistAuthorization: false,\n\t\t\t},\n\t\t\texp: `window.onload = function() {\n  \n  const ui = SwaggerUIBundle({\n    url: \"doc.json\",\n    deepLinking:  true ,\n    docExpansion: \"list\",\n    dom_id: \"#swagger-ui\",\n    persistAuthorization:  false ,\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  })\n\n  window.ui = ui\n}`,\n\t\t},\n\t\t{\n\t\t\tdesc: \"script configuration\",\n\t\t\tcfg: &Config{\n\t\t\t\tURL:                  \"swagger.json\",\n\t\t\t\tDeepLinking:          false,\n\t\t\t\tPersistAuthorization: true,\n\t\t\t\tDocExpansion:         \"none\",\n\t\t\t\tDomID:                \"#swagger-ui-id\",\n\t\t\t\tBeforeScript: `const SomePlugin = (system) => ({\n    // Some plugin\n  });\n`,\n\t\t\t\tAfterScript: `const someOtherCode = function(){\n    // Do something\n  };\n  someOtherCode();`,\n\t\t\t\tPlugins: []template.JS{\n\t\t\t\t\t\"SomePlugin\",\n\t\t\t\t\t\"AnotherPlugin\",\n\t\t\t\t},\n\t\t\t\tUIConfig: map[template.JS]template.JS{\n\t\t\t\t\t\"showExtensions\":        \"true\",\n\t\t\t\t\t\"onComplete\":            `() => { window.ui.setBasePath('v3'); }`,\n\t\t\t\t\t\"defaultModelRendering\": `\"model\"`,\n\t\t\t\t},\n\t\t\t},\n\t\t\texp: `window.onload = function() {\n  const SomePlugin = (system) => ({\n    // Some plugin\n  });\n\n  \n  const ui = SwaggerUIBundle({\n    url: \"swagger.json\",\n    deepLinking:  false ,\n    docExpansion: \"none\",\n    dom_id: \"#swagger-ui-id\",\n    persistAuthorization:  true ,\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl,\n      SomePlugin,\n      AnotherPlugin\n    ],\n    defaultModelRendering: \"model\",\n    onComplete: () => { window.ui.setBasePath('v3'); },\n    showExtensions: true,\n    layout: \"StandaloneLayout\"\n  })\n\n  window.ui = ui\n  const someOtherCode = function(){\n    // Do something\n  };\n  someOtherCode();\n}`,\n\t\t},\n\t}\n\n\tfor _, fix := range fixtures {\n\t\tt.Run(fix.desc, func(t *testing.T) {\n\t\t\ttmpl := template.New(\"swagger_index.html\")\n\t\t\tindex, err := tmpl.Parse(indexTempl)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\n\t\t\tbuf := bytes.NewBuffer(nil)\n\t\t\tif err := index.Execute(buf, fix.cfg); err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\n\t\t\texp := hdr + fix.exp + ftr\n\n\t\t\t// Compare line by line\n\t\t\texplns := strings.Split(exp, \"\\n\")\n\t\t\tbuflns := strings.Split(buf.String(), \"\\n\")\n\n\t\t\texplen, buflen := len(explns), len(buflns)\n\t\t\tif explen != buflen {\n\t\t\t\tt.Errorf(\"expected %d lines, but got %d\", explen, buflen)\n\t\t\t}\n\n\t\t\tprintContext := func(idx int) {\n\t\t\t\tlines := 3\n\n\t\t\t\tfirstIdx := idx - lines\n\t\t\t\tif firstIdx < 0 {\n\t\t\t\t\tfirstIdx = 0\n\t\t\t\t}\n\t\t\t\tlastIdx := idx + lines\n\t\t\t\tif lastIdx > explen {\n\t\t\t\t\tlastIdx = explen\n\t\t\t\t}\n\t\t\t\tif lastIdx > buflen {\n\t\t\t\t\tlastIdx = buflen\n\t\t\t\t}\n\t\t\t\tt.Logf(\"expected:\\n\")\n\t\t\t\tfor i := firstIdx; i < lastIdx; i++ {\n\t\t\t\t\tt.Logf(explns[i])\n\t\t\t\t}\n\t\t\t\tt.Logf(\"got:\\n\")\n\t\t\t\tfor i := firstIdx; i < lastIdx; i++ {\n\t\t\t\t\tt.Logf(buflns[i])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor i, expln := range explns {\n\t\t\t\tif i >= buflen {\n\t\t\t\t\tprintContext(i)\n\t\t\t\t\tt.Fatalf(`first unequal line: expected \"%s\" but got EOF`, expln)\n\t\t\t\t}\n\t\t\t\tbufln := buflns[i]\n\t\t\t\tif bufln != expln {\n\t\t\t\t\tprintContext(i)\n\t\t\t\t\tt.Fatalf(`first unequal line: expected \"%s\" but got \"%s\"`, expln, bufln)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif buflen > explen {\n\t\t\t\tprintContext(explen - 1)\n\t\t\t\tt.Fatalf(`first unequal line: expected EOF, but got \"%s\"`, buflns[explen])\n\t\t\t}\n\t\t})\n\t}\n}\n"], "filenames": [".github/workflows/ci.yml", "swagger.go", "swagger_test.go"], "buggy_code_start_loc": [13, 124, 46], "buggy_code_end_loc": [14, 159, 75], "fixing_code_start_loc": [13, 125, 46], "fixing_code_end_loc": [14, 163, 76], "type": "CWE-755", "message": "http-swagger is an open source wrapper to automatically generate RESTful API documentation with Swagger 2.0. In versions of http-swagger prior to 1.2.6 an attacker may perform a denial of service attack consisting of memory exhaustion on the host system. The cause of the memory exhaustion is down to improper handling of http methods. Users are advised to upgrade. Users unable to upgrade may to restrict the path prefix to the \"GET\" method as a workaround.", "other": {"cve": {"id": "CVE-2022-24863", "sourceIdentifier": "security-advisories@github.com", "published": "2022-04-18T19:15:09.837", "lastModified": "2022-04-27T13:31:19.617", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "http-swagger is an open source wrapper to automatically generate RESTful API documentation with Swagger 2.0. In versions of http-swagger prior to 1.2.6 an attacker may perform a denial of service attack consisting of memory exhaustion on the host system. The cause of the memory exhaustion is down to improper handling of http methods. Users are advised to upgrade. Users unable to upgrade may to restrict the path prefix to the \"GET\" method as a workaround."}, {"lang": "es", "value": "http-swagger es un wrapper de c\u00f3digo abierto para generar autom\u00e1ticamente la documentaci\u00f3n de la API RESTful con Swagger versi\u00f3n  2.0. En versiones de http-swagger anteriores a 1.2.6 un atacante puede llevar a cabo un ataque de denegaci\u00f3n de servicio consistente en el agotamiento de la memoria del sistema anfitri\u00f3n. La causa del agotamiento de la memoria es debido al manejo inapropiado de los m\u00e9todos http. Es recomendado a usuarios actualizar. Los usuarios que no puedan actualizar pueden restringir el prefijo de la ruta al m\u00e9todo \"GET\" como medida de mitigaci\u00f3n"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "COMPLETE", "baseScore": 7.8}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-755"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-400"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:http-swagger_project:http-swagger:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.6", "matchCriteriaId": "05C10F2A-841B-4895-99F9-D7D9DB08F50B"}]}]}], "references": [{"url": "https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/swaggo/http-swagger/pull/62", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://github.com/swaggo/http-swagger/releases/tag/v1.2.6", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/swaggo/http-swagger/security/advisories/GHSA-xg75-q3q5-cqmv", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/swaggo/http-swagger/commit/b7d83e8fba85a7a51aa7e45e8244b4173f15049e"}}