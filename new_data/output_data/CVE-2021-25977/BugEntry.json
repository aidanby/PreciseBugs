{"buggy_code": ["Vue.component(\"pagecopy-item\", {\n  props: [\"item\"],\n  methods: {\n    toggleItem: function (item) {\n      item.isExpanded = !item.isExpanded;\n    }\n  },\n  template: \"\\n<li class=\\\"dd-item\\\" :class=\\\"{ expanded: item.isExpanded || item.items.length === 0 }\\\">\\n    <div class=\\\"sitemap-item expanded\\\">\\n        <div class=\\\"link\\\" :class=\\\"{ readonly: item.isCopy }\\\">\\n            <a v-if=\\\"!item.isCopy\\\" :href=\\\"piranha.baseUrl + 'manager/page/copyrelative/' + item.id + '/' + piranha.pagelist.addPageId + '/' + piranha.pagelist.addAfter\\\">\\n                {{ item.title }}\\n            </a>\\n            <a href=\\\"#\\\" v-else>\\n                {{ item.title }}\\n                <span v-if=\\\"item.isCopy\\\" class=\\\"badge badge-warning\\\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <div class=\\\"content-blocker\\\"></div>\\n        </div>\\n        <div class=\\\"type d-none d-md-block\\\">\\n            {{ item.typeName }}\\n        </div>\\n    </div>\\n    <ol class=\\\"dd-list\\\" v-if=\\\"item.items.length > 0\\\">\\n        <pagecopy-item v-for=\\\"child in item.items\\\" v-bind:key=\\\"child.id\\\" v-bind:item=\\\"child\\\"></pagecopy-item>\\n    </ol>\\n</li>\\n\"\n});\nVue.component(\"sitemap-item\", {\n  props: [\"item\"],\n  methods: {\n    toggleItem: function (item) {\n      item.isExpanded = !item.isExpanded;\n    }\n  },\n  template: \"\\n<li class=\\\"dd-item\\\" :class=\\\"{ expanded: item.isExpanded || item.items.length === 0 }\\\" :data-id=\\\"item.id\\\">\\n    <div class=\\\"sitemap-item\\\" :class=\\\"{ dimmed: item.isUnpublished || item.isScheduled }\\\">\\n        <div class=\\\"handle dd-handle\\\"><i class=\\\"fas fa-ellipsis-v\\\"></i></div>\\n        <div class=\\\"link\\\">\\n            <span class=\\\"actions\\\">\\n                <a v-if=\\\"item.items.length > 0 && item.isExpanded\\\" v-on:click.prevent=\\\"toggleItem(item)\\\" class=\\\"expand\\\" href=\\\"#\\\"><i class=\\\"fas fa-minus\\\"></i></a>\\n                <a v-if=\\\"item.items.length > 0 && !item.isExpanded\\\" v-on:click.prevent=\\\"toggleItem(item)\\\" class=\\\"expand\\\" href=\\\"#\\\"><i class=\\\"fas fa-plus\\\"></i></a>\\n            </span>\\n            <a v-if=\\\"piranha.permissions.pages.edit\\\" :href=\\\"piranha.baseUrl + item.editUrl + item.id\\\">\\n                <span v-html=\\\"item.title\\\"></span>\\n                <span v-if=\\\"item.isRestricted\\\" class=\\\"icon-restricted text-secondary small\\\"><i class=\\\"fas fa-lock\\\"></i></span>\\n                <span v-if=\\\"item.status\\\" class=\\\"badge badge-info\\\">{{ item.status }}</span>\\n                <span v-if=\\\"item.isScheduled\\\" class=\\\"badge badge-info\\\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\\\"item.isCopy\\\" class=\\\"badge badge-warning\\\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <span v-else class=\\\"title\\\">\\n                <span v-html=\\\"item.title\\\"></span>\\n                <span v-if=\\\"item.isRestricted\\\" class=\\\"icon-restricted text-secondary small\\\"><i class=\\\"fas fa-lock\\\"></i></span>\\n                <span v-if=\\\"item.status\\\" class=\\\"badge badge-info\\\">{{ item.status }}</span>\\n                <span v-if=\\\"item.isScheduled\\\" class=\\\"badge badge-info\\\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\\\"item.isCopy\\\" class=\\\"badge badge-warning\\\">{{ piranha.resources.texts.copy }}</span>\\n            </span>\\n        </div>\\n        <div class=\\\"type d-none d-md-block\\\">{{ item.typeName }}</div>\\n        <div class=\\\"date d-none d-lg-block\\\">{{ item.published }}</div>\\n        <div class=\\\"actions\\\">\\n            <a v-if=\\\"piranha.permissions.pages.add\\\" href=\\\"#\\\" v-on:click.prevent=\\\"piranha.pagelist.add(item.siteId, item.id, true)\\\"><i class=\\\"fas fa-angle-down\\\"></i></a>\\n            <a v-if=\\\"piranha.permissions.pages.add\\\" href=\\\"#\\\" v-on:click.prevent=\\\"piranha.pagelist.add(item.siteId, item.id, false)\\\"><i class=\\\"fas fa-angle-right\\\"></i></a>\\n            <a v-if=\\\"piranha.permissions.pages.delete && item.items.length === 0\\\" v-on:click.prevent=\\\"piranha.pagelist.remove(item.id)\\\" class=\\\"danger\\\" href=\\\"#\\\"><i class=\\\"fas fa-trash\\\"></i></a>\\n        </div>\\n    </div>\\n    <ol v-if=\\\"item.items.length > 0\\\" class=\\\"dd-list\\\">\\n        <sitemap-item v-for=\\\"child in item.items\\\" v-bind:key=\\\"child.id\\\" v-bind:item=\\\"child\\\">\\n        </sitemap-item>\\n    </ol>\\n</li>\\n\"\n});\n/*global\n    piranha\n*/\n\npiranha.pagelist = new Vue({\n    el: \"#pagelist\",\n    data: {\n        loading: true,\n        updateBindings: false,\n        items: [],\n        sites: [],\n        pageTypes: [],\n        addSiteId: null,\n        addSiteTitle: null,\n        addPageId: null,\n        addAfter: true\n    },\n    methods: {\n        load: function () {\n            var self = this;\n            piranha.permissions.load(function () {\n                fetch(piranha.baseUrl + \"manager/api/page/list\")\n                .then(function (response) { return response.json(); })\n                .then(function (result) {\n                    self.sites = result.sites;\n                    self.pageTypes = result.pageTypes;\n                    self.updateBindings = true;\n                })\n                .catch(function (error) { console.log(\"error:\", error ); });\n            });\n        },\n        remove: function (id) {\n            var self = this;\n\n            piranha.alert.open({\n                title: piranha.resources.texts.delete,\n                body: piranha.resources.texts.deletePageConfirm,\n                confirmCss: \"btn-danger\",\n                confirmIcon: \"fas fa-trash\",\n                confirmText: piranha.resources.texts.delete,\n                onConfirm: function () {\n                    fetch(piranha.baseUrl + \"manager/api/page/delete/\" + id)\n                    .then(function (response) { return response.json(); })\n                    .then(function (result) {\n                        piranha.notifications.push(result);\n\n                        self.load();\n                    })\n                    .catch(function (error) { console.log(\"error:\", error ); });\n                }\n            });\n        },\n        bind: function () {\n            var self = this;\n\n            $(\".sitemap-container\").each(function (i, e) {\n                $(e).nestable({\n                    maxDepth: 100,\n                    group: i,\n                    callback: function (l, e) {\n                        fetch(piranha.baseUrl + \"manager/api/page/move\", {\n                            method: \"post\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({\n                                id: $(e).attr(\"data-id\"),\n                                items: $(l).nestable(\"serialize\")\n                            })\n                        })\n                        .then(function (response) { return response.json(); })\n                        .then(function (result) {\n                            piranha.notifications.push(result.status);\n\n                            if (result.status.type === \"success\") {\n                                $('.sitemap-container').nestable('destroy');\n                                self.sites = [];\n                                Vue.nextTick(function () {\n                                    self.sites = result.sites;\n                                    Vue.nextTick(function () {\n                                        self.bind();\n                                    });\n                                });\n                            }\n                        })\n                        .catch(function (error) {\n                            console.log(\"error:\", error);\n                        });\n                    }\n                })\n            });\n        },\n        add: function (siteId, pageId, after) {\n            var self = this;\n\n            self.addSiteId = siteId;\n            self.addPageId = pageId;\n            self.addAfter = after;\n\n            // Get the site title\n            self.sites.forEach(function (e) {\n                if (e.id === siteId) {\n                    self.addSiteTitle = e.title;\n                }\n            });\n\n            // Open the modal\n            $(\"#pageAddModal\").modal(\"show\");\n        },\n        selectSite: function (siteId) {\n            var self = this;\n\n            self.addSiteId = siteId;\n\n            // Get the site title\n            self.sites.forEach(function (e) {\n                if (e.id === siteId) {\n                    self.addSiteTitle = e.title;\n                }\n            });\n        },\n        collapse: function () {\n            for (var n = 0; n < this.sites.length; n++)\n            {\n                for (var i = 0; i < this.sites[n].pages.length; i++)\n                {\n                    this.changeVisibility(this.sites[n].pages[i], false);\n                }\n            }\n        },\n        expand: function () {\n            for (var n = 0; n < this.sites.length; n++)\n            {\n                for (var i = 0; i < this.sites[n].pages.length; i++)\n                {\n                    this.changeVisibility(this.sites[n].pages[i], true);\n                }\n            }\n        },\n        changeVisibility: function (page, expanded) {\n            page.isExpanded = expanded;\n\n            for (var n = 0; n < page.items.length; n++)\n            {\n                this.changeVisibility(page.items[n], expanded);\n            }\n        }\n    },\n    created: function () {\n    },\n    updated: function () {\n        if (this.updateBindings)\n        {\n            this.bind();\n            this.updateBindings = false;\n        }\n\n        this.loading = false;\n    }\n});\n", "Vue.component(\"pagecopy-item\",{props:[\"item\"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:'\\n<li class=\"dd-item\" :class=\"{ expanded: item.isExpanded || item.items.length === 0 }\">\\n    <div class=\"sitemap-item expanded\">\\n        <div class=\"link\" :class=\"{ readonly: item.isCopy }\">\\n            <a v-if=\"!item.isCopy\" :href=\"piranha.baseUrl + \\'manager/page/copyrelative/\\' + item.id + \\'/\\' + piranha.pagelist.addPageId + \\'/\\' + piranha.pagelist.addAfter\">\\n                {{ item.title }}\\n            </a>\\n            <a href=\"#\" v-else>\\n                {{ item.title }}\\n                <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <div class=\"content-blocker\"></div>\\n        </div>\\n        <div class=\"type d-none d-md-block\">\\n            {{ item.typeName }}\\n        </div>\\n    </div>\\n    <ol class=\"dd-list\" v-if=\"item.items.length > 0\">\\n        <pagecopy-item v-for=\"child in item.items\" v-bind:key=\"child.id\" v-bind:item=\"child\"></pagecopy-item>\\n    </ol>\\n</li>\\n'}),Vue.component(\"sitemap-item\",{props:[\"item\"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:'\\n<li class=\"dd-item\" :class=\"{ expanded: item.isExpanded || item.items.length === 0 }\" :data-id=\"item.id\">\\n    <div class=\"sitemap-item\" :class=\"{ dimmed: item.isUnpublished || item.isScheduled }\">\\n        <div class=\"handle dd-handle\"><i class=\"fas fa-ellipsis-v\"></i></div>\\n        <div class=\"link\">\\n            <span class=\"actions\">\\n                <a v-if=\"item.items.length > 0 && item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-minus\"></i></a>\\n                <a v-if=\"item.items.length > 0 && !item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-plus\"></i></a>\\n            </span>\\n            <a v-if=\"piranha.permissions.pages.edit\" :href=\"piranha.baseUrl + item.editUrl + item.id\">\\n                <span v-html=\"item.title\"></span>\\n                <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\\n                <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\\n                <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <span v-else class=\"title\">\\n                <span v-html=\"item.title\"></span>\\n                <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\\n                <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\\n                <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\\n            </span>\\n        </div>\\n        <div class=\"type d-none d-md-block\">{{ item.typeName }}</div>\\n        <div class=\"date d-none d-lg-block\">{{ item.published }}</div>\\n        <div class=\"actions\">\\n            <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, true)\"><i class=\"fas fa-angle-down\"></i></a>\\n            <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, false)\"><i class=\"fas fa-angle-right\"></i></a>\\n            <a v-if=\"piranha.permissions.pages.delete && item.items.length === 0\" v-on:click.prevent=\"piranha.pagelist.remove(item.id)\" class=\"danger\" href=\"#\"><i class=\"fas fa-trash\"></i></a>\\n        </div>\\n    </div>\\n    <ol v-if=\"item.items.length > 0\" class=\"dd-list\">\\n        <sitemap-item v-for=\"child in item.items\" v-bind:key=\"child.id\" v-bind:item=\"child\">\\n        </sitemap-item>\\n    </ol>\\n</li>\\n'}),piranha.pagelist=new Vue({el:\"#pagelist\",data:{loading:!0,updateBindings:!1,items:[],sites:[],pageTypes:[],addSiteId:null,addSiteTitle:null,addPageId:null,addAfter:!0},methods:{load:function(){var e=this;piranha.permissions.load(function(){fetch(piranha.baseUrl+\"manager/api/page/list\").then(function(e){return e.json()}).then(function(i){e.sites=i.sites,e.pageTypes=i.pageTypes,e.updateBindings=!0}).catch(function(e){console.log(\"error:\",e)})})},remove:function(e){var i=this;piranha.alert.open({title:piranha.resources.texts.delete,body:piranha.resources.texts.deletePageConfirm,confirmCss:\"btn-danger\",confirmIcon:\"fas fa-trash\",confirmText:piranha.resources.texts.delete,onConfirm:function(){fetch(piranha.baseUrl+\"manager/api/page/delete/\"+e).then(function(e){return e.json()}).then(function(e){piranha.notifications.push(e),i.load()}).catch(function(e){console.log(\"error:\",e)})}})},bind:function(){var e=this;$(\".sitemap-container\").each(function(i,s){$(s).nestable({maxDepth:100,group:i,callback:function(i,s){fetch(piranha.baseUrl+\"manager/api/page/move\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({id:$(s).attr(\"data-id\"),items:$(i).nestable(\"serialize\")})}).then(function(e){return e.json()}).then(function(i){piranha.notifications.push(i.status),\"success\"===i.status.type&&($(\".sitemap-container\").nestable(\"destroy\"),e.sites=[],Vue.nextTick(function(){e.sites=i.sites,Vue.nextTick(function(){e.bind()})}))}).catch(function(e){console.log(\"error:\",e)})}})})},add:function(e,i,s){var a=this;a.addSiteId=e,a.addPageId=i,a.addAfter=s,a.sites.forEach(function(i){i.id===e&&(a.addSiteTitle=i.title)}),$(\"#pageAddModal\").modal(\"show\")},selectSite:function(e){var i=this;i.addSiteId=e,i.sites.forEach(function(s){s.id===e&&(i.addSiteTitle=s.title)})},collapse:function(){for(var e=0;e<this.sites.length;e++)for(var i=0;i<this.sites[e].pages.length;i++)this.changeVisibility(this.sites[e].pages[i],!1)},expand:function(){for(var e=0;e<this.sites.length;e++)for(var i=0;i<this.sites[e].pages.length;i++)this.changeVisibility(this.sites[e].pages[i],!0)},changeVisibility:function(e,i){e.isExpanded=i;for(var s=0;s<e.items.length;s++)this.changeVisibility(e.items[s],i)}},created:function(){},updated:function(){this.updateBindings&&(this.bind(),this.updateBindings=!1),this.loading=!1}});", "<template>\n    <li class=\"dd-item\" :class=\"{ expanded: item.isExpanded || item.items.length === 0 }\" :data-id=\"item.id\">\n        <div class=\"sitemap-item\" :class=\"{ dimmed: item.isUnpublished || item.isScheduled }\">\n            <div class=\"handle dd-handle\"><i class=\"fas fa-ellipsis-v\"></i></div>\n            <div class=\"link\">\n                <span class=\"actions\">\n                    <a v-if=\"item.items.length > 0 && item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-minus\"></i></a>\n                    <a v-if=\"item.items.length > 0 && !item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-plus\"></i></a>\n                </span>\n                <a v-if=\"piranha.permissions.pages.edit\" :href=\"piranha.baseUrl + item.editUrl + item.id\">\n                    <span v-html=\"item.title\"></span>\n                    <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\n                    <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\n                    <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\n                    <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\n                </a>\n                <span v-else class=\"title\">\n                    <span v-html=\"item.title\"></span>\n                    <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\n                    <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\n                    <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\n                    <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\n                </span>\n            </div>\n            <div class=\"type d-none d-md-block\">{{ item.typeName }}</div>\n            <div class=\"date d-none d-lg-block\">{{ item.published }}</div>\n            <div class=\"actions\">\n                <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, true)\"><i class=\"fas fa-angle-down\"></i></a>\n                <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, false)\"><i class=\"fas fa-angle-right\"></i></a>\n                <a v-if=\"piranha.permissions.pages.delete && item.items.length === 0\" v-on:click.prevent=\"piranha.pagelist.remove(item.id)\" class=\"danger\" href=\"#\"><i class=\"fas fa-trash\"></i></a>\n            </div>\n        </div>\n        <ol v-if=\"item.items.length > 0\" class=\"dd-list\">\n            <sitemap-item v-for=\"child in item.items\" v-bind:key=\"child.id\" v-bind:item=\"child\">\n            </sitemap-item>\n        </ol>\n    </li>\n</template>\n\n<script>\nexport default {\n    props: [\"item\"],\n    methods: {\n        toggleItem: function (item) {\n            item.isExpanded = !item.isExpanded;\n        }\n    }\n}\n</script>"], "fixing_code": ["Vue.component(\"pagecopy-item\", {\n  props: [\"item\"],\n  methods: {\n    toggleItem: function (item) {\n      item.isExpanded = !item.isExpanded;\n    }\n  },\n  template: \"\\n<li class=\\\"dd-item\\\" :class=\\\"{ expanded: item.isExpanded || item.items.length === 0 }\\\">\\n    <div class=\\\"sitemap-item expanded\\\">\\n        <div class=\\\"link\\\" :class=\\\"{ readonly: item.isCopy }\\\">\\n            <a v-if=\\\"!item.isCopy\\\" :href=\\\"piranha.baseUrl + 'manager/page/copyrelative/' + item.id + '/' + piranha.pagelist.addPageId + '/' + piranha.pagelist.addAfter\\\">\\n                {{ item.title }}\\n            </a>\\n            <a href=\\\"#\\\" v-else>\\n                {{ item.title }}\\n                <span v-if=\\\"item.isCopy\\\" class=\\\"badge badge-warning\\\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <div class=\\\"content-blocker\\\"></div>\\n        </div>\\n        <div class=\\\"type d-none d-md-block\\\">\\n            {{ item.typeName }}\\n        </div>\\n    </div>\\n    <ol class=\\\"dd-list\\\" v-if=\\\"item.items.length > 0\\\">\\n        <pagecopy-item v-for=\\\"child in item.items\\\" v-bind:key=\\\"child.id\\\" v-bind:item=\\\"child\\\"></pagecopy-item>\\n    </ol>\\n</li>\\n\"\n});\nVue.component(\"sitemap-item\", {\n  props: [\"item\"],\n  methods: {\n    toggleItem: function (item) {\n      item.isExpanded = !item.isExpanded;\n    }\n  },\n  template: \"\\n<li class=\\\"dd-item\\\" :class=\\\"{ expanded: item.isExpanded || item.items.length === 0 }\\\" :data-id=\\\"item.id\\\">\\n    <div class=\\\"sitemap-item\\\" :class=\\\"{ dimmed: item.isUnpublished || item.isScheduled }\\\">\\n        <div class=\\\"handle dd-handle\\\"><i class=\\\"fas fa-ellipsis-v\\\"></i></div>\\n        <div class=\\\"link\\\">\\n            <span class=\\\"actions\\\">\\n                <a v-if=\\\"item.items.length > 0 && item.isExpanded\\\" v-on:click.prevent=\\\"toggleItem(item)\\\" class=\\\"expand\\\" href=\\\"#\\\"><i class=\\\"fas fa-minus\\\"></i></a>\\n                <a v-if=\\\"item.items.length > 0 && !item.isExpanded\\\" v-on:click.prevent=\\\"toggleItem(item)\\\" class=\\\"expand\\\" href=\\\"#\\\"><i class=\\\"fas fa-plus\\\"></i></a>\\n            </span>\\n            <a v-if=\\\"piranha.permissions.pages.edit\\\" :href=\\\"piranha.baseUrl + item.editUrl + item.id\\\">\\n                <span>{{ item.title }}</span>\\n                <span v-if=\\\"item.isRestricted\\\" class=\\\"icon-restricted text-secondary small\\\"><i class=\\\"fas fa-lock\\\"></i></span>\\n                <span v-if=\\\"item.status\\\" class=\\\"badge badge-info\\\">{{ item.status }}</span>\\n                <span v-if=\\\"item.isScheduled\\\" class=\\\"badge badge-info\\\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\\\"item.isCopy\\\" class=\\\"badge badge-warning\\\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <span v-else class=\\\"title\\\">\\n                <span>{{ item.title }}</span>\\n                <span v-if=\\\"item.isRestricted\\\" class=\\\"icon-restricted text-secondary small\\\"><i class=\\\"fas fa-lock\\\"></i></span>\\n                <span v-if=\\\"item.status\\\" class=\\\"badge badge-info\\\">{{ item.status }}</span>\\n                <span v-if=\\\"item.isScheduled\\\" class=\\\"badge badge-info\\\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\\\"item.isCopy\\\" class=\\\"badge badge-warning\\\">{{ piranha.resources.texts.copy }}</span>\\n            </span>\\n        </div>\\n        <div class=\\\"type d-none d-md-block\\\">{{ item.typeName }}</div>\\n        <div class=\\\"date d-none d-lg-block\\\">{{ item.published }}</div>\\n        <div class=\\\"actions\\\">\\n            <a v-if=\\\"piranha.permissions.pages.add\\\" href=\\\"#\\\" v-on:click.prevent=\\\"piranha.pagelist.add(item.siteId, item.id, true)\\\"><i class=\\\"fas fa-angle-down\\\"></i></a>\\n            <a v-if=\\\"piranha.permissions.pages.add\\\" href=\\\"#\\\" v-on:click.prevent=\\\"piranha.pagelist.add(item.siteId, item.id, false)\\\"><i class=\\\"fas fa-angle-right\\\"></i></a>\\n            <a v-if=\\\"piranha.permissions.pages.delete && item.items.length === 0\\\" v-on:click.prevent=\\\"piranha.pagelist.remove(item.id)\\\" class=\\\"danger\\\" href=\\\"#\\\"><i class=\\\"fas fa-trash\\\"></i></a>\\n        </div>\\n    </div>\\n    <ol v-if=\\\"item.items.length > 0\\\" class=\\\"dd-list\\\">\\n        <sitemap-item v-for=\\\"child in item.items\\\" v-bind:key=\\\"child.id\\\" v-bind:item=\\\"child\\\">\\n        </sitemap-item>\\n    </ol>\\n</li>\\n\"\n});\n/*global\n    piranha\n*/\n\npiranha.pagelist = new Vue({\n    el: \"#pagelist\",\n    data: {\n        loading: true,\n        updateBindings: false,\n        items: [],\n        sites: [],\n        pageTypes: [],\n        addSiteId: null,\n        addSiteTitle: null,\n        addPageId: null,\n        addAfter: true\n    },\n    methods: {\n        load: function () {\n            var self = this;\n            piranha.permissions.load(function () {\n                fetch(piranha.baseUrl + \"manager/api/page/list\")\n                .then(function (response) { return response.json(); })\n                .then(function (result) {\n                    self.sites = result.sites;\n                    self.pageTypes = result.pageTypes;\n                    self.updateBindings = true;\n                })\n                .catch(function (error) { console.log(\"error:\", error ); });\n            });\n        },\n        remove: function (id) {\n            var self = this;\n\n            piranha.alert.open({\n                title: piranha.resources.texts.delete,\n                body: piranha.resources.texts.deletePageConfirm,\n                confirmCss: \"btn-danger\",\n                confirmIcon: \"fas fa-trash\",\n                confirmText: piranha.resources.texts.delete,\n                onConfirm: function () {\n                    fetch(piranha.baseUrl + \"manager/api/page/delete/\" + id)\n                    .then(function (response) { return response.json(); })\n                    .then(function (result) {\n                        piranha.notifications.push(result);\n\n                        self.load();\n                    })\n                    .catch(function (error) { console.log(\"error:\", error ); });\n                }\n            });\n        },\n        bind: function () {\n            var self = this;\n\n            $(\".sitemap-container\").each(function (i, e) {\n                $(e).nestable({\n                    maxDepth: 100,\n                    group: i,\n                    callback: function (l, e) {\n                        fetch(piranha.baseUrl + \"manager/api/page/move\", {\n                            method: \"post\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({\n                                id: $(e).attr(\"data-id\"),\n                                items: $(l).nestable(\"serialize\")\n                            })\n                        })\n                        .then(function (response) { return response.json(); })\n                        .then(function (result) {\n                            piranha.notifications.push(result.status);\n\n                            if (result.status.type === \"success\") {\n                                $('.sitemap-container').nestable('destroy');\n                                self.sites = [];\n                                Vue.nextTick(function () {\n                                    self.sites = result.sites;\n                                    Vue.nextTick(function () {\n                                        self.bind();\n                                    });\n                                });\n                            }\n                        })\n                        .catch(function (error) {\n                            console.log(\"error:\", error);\n                        });\n                    }\n                })\n            });\n        },\n        add: function (siteId, pageId, after) {\n            var self = this;\n\n            self.addSiteId = siteId;\n            self.addPageId = pageId;\n            self.addAfter = after;\n\n            // Get the site title\n            self.sites.forEach(function (e) {\n                if (e.id === siteId) {\n                    self.addSiteTitle = e.title;\n                }\n            });\n\n            // Open the modal\n            $(\"#pageAddModal\").modal(\"show\");\n        },\n        selectSite: function (siteId) {\n            var self = this;\n\n            self.addSiteId = siteId;\n\n            // Get the site title\n            self.sites.forEach(function (e) {\n                if (e.id === siteId) {\n                    self.addSiteTitle = e.title;\n                }\n            });\n        },\n        collapse: function () {\n            for (var n = 0; n < this.sites.length; n++)\n            {\n                for (var i = 0; i < this.sites[n].pages.length; i++)\n                {\n                    this.changeVisibility(this.sites[n].pages[i], false);\n                }\n            }\n        },\n        expand: function () {\n            for (var n = 0; n < this.sites.length; n++)\n            {\n                for (var i = 0; i < this.sites[n].pages.length; i++)\n                {\n                    this.changeVisibility(this.sites[n].pages[i], true);\n                }\n            }\n        },\n        changeVisibility: function (page, expanded) {\n            page.isExpanded = expanded;\n\n            for (var n = 0; n < page.items.length; n++)\n            {\n                this.changeVisibility(page.items[n], expanded);\n            }\n        }\n    },\n    created: function () {\n    },\n    updated: function () {\n        if (this.updateBindings)\n        {\n            this.bind();\n            this.updateBindings = false;\n        }\n\n        this.loading = false;\n    }\n});\n", "Vue.component(\"pagecopy-item\",{props:[\"item\"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:'\\n<li class=\"dd-item\" :class=\"{ expanded: item.isExpanded || item.items.length === 0 }\">\\n    <div class=\"sitemap-item expanded\">\\n        <div class=\"link\" :class=\"{ readonly: item.isCopy }\">\\n            <a v-if=\"!item.isCopy\" :href=\"piranha.baseUrl + \\'manager/page/copyrelative/\\' + item.id + \\'/\\' + piranha.pagelist.addPageId + \\'/\\' + piranha.pagelist.addAfter\">\\n                {{ item.title }}\\n            </a>\\n            <a href=\"#\" v-else>\\n                {{ item.title }}\\n                <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <div class=\"content-blocker\"></div>\\n        </div>\\n        <div class=\"type d-none d-md-block\">\\n            {{ item.typeName }}\\n        </div>\\n    </div>\\n    <ol class=\"dd-list\" v-if=\"item.items.length > 0\">\\n        <pagecopy-item v-for=\"child in item.items\" v-bind:key=\"child.id\" v-bind:item=\"child\"></pagecopy-item>\\n    </ol>\\n</li>\\n'}),Vue.component(\"sitemap-item\",{props:[\"item\"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:'\\n<li class=\"dd-item\" :class=\"{ expanded: item.isExpanded || item.items.length === 0 }\" :data-id=\"item.id\">\\n    <div class=\"sitemap-item\" :class=\"{ dimmed: item.isUnpublished || item.isScheduled }\">\\n        <div class=\"handle dd-handle\"><i class=\"fas fa-ellipsis-v\"></i></div>\\n        <div class=\"link\">\\n            <span class=\"actions\">\\n                <a v-if=\"item.items.length > 0 && item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-minus\"></i></a>\\n                <a v-if=\"item.items.length > 0 && !item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-plus\"></i></a>\\n            </span>\\n            <a v-if=\"piranha.permissions.pages.edit\" :href=\"piranha.baseUrl + item.editUrl + item.id\">\\n                <span>{{ item.title }}</span>\\n                <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\\n                <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\\n                <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\\n            </a>\\n            <span v-else class=\"title\">\\n                <span>{{ item.title }}</span>\\n                <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\\n                <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\\n                <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\\n                <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\\n            </span>\\n        </div>\\n        <div class=\"type d-none d-md-block\">{{ item.typeName }}</div>\\n        <div class=\"date d-none d-lg-block\">{{ item.published }}</div>\\n        <div class=\"actions\">\\n            <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, true)\"><i class=\"fas fa-angle-down\"></i></a>\\n            <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, false)\"><i class=\"fas fa-angle-right\"></i></a>\\n            <a v-if=\"piranha.permissions.pages.delete && item.items.length === 0\" v-on:click.prevent=\"piranha.pagelist.remove(item.id)\" class=\"danger\" href=\"#\"><i class=\"fas fa-trash\"></i></a>\\n        </div>\\n    </div>\\n    <ol v-if=\"item.items.length > 0\" class=\"dd-list\">\\n        <sitemap-item v-for=\"child in item.items\" v-bind:key=\"child.id\" v-bind:item=\"child\">\\n        </sitemap-item>\\n    </ol>\\n</li>\\n'}),piranha.pagelist=new Vue({el:\"#pagelist\",data:{loading:!0,updateBindings:!1,items:[],sites:[],pageTypes:[],addSiteId:null,addSiteTitle:null,addPageId:null,addAfter:!0},methods:{load:function(){var e=this;piranha.permissions.load(function(){fetch(piranha.baseUrl+\"manager/api/page/list\").then(function(e){return e.json()}).then(function(i){e.sites=i.sites,e.pageTypes=i.pageTypes,e.updateBindings=!0}).catch(function(e){console.log(\"error:\",e)})})},remove:function(e){var i=this;piranha.alert.open({title:piranha.resources.texts.delete,body:piranha.resources.texts.deletePageConfirm,confirmCss:\"btn-danger\",confirmIcon:\"fas fa-trash\",confirmText:piranha.resources.texts.delete,onConfirm:function(){fetch(piranha.baseUrl+\"manager/api/page/delete/\"+e).then(function(e){return e.json()}).then(function(e){piranha.notifications.push(e),i.load()}).catch(function(e){console.log(\"error:\",e)})}})},bind:function(){var e=this;$(\".sitemap-container\").each(function(i,s){$(s).nestable({maxDepth:100,group:i,callback:function(i,s){fetch(piranha.baseUrl+\"manager/api/page/move\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({id:$(s).attr(\"data-id\"),items:$(i).nestable(\"serialize\")})}).then(function(e){return e.json()}).then(function(i){piranha.notifications.push(i.status),\"success\"===i.status.type&&($(\".sitemap-container\").nestable(\"destroy\"),e.sites=[],Vue.nextTick(function(){e.sites=i.sites,Vue.nextTick(function(){e.bind()})}))}).catch(function(e){console.log(\"error:\",e)})}})})},add:function(e,i,s){var a=this;a.addSiteId=e,a.addPageId=i,a.addAfter=s,a.sites.forEach(function(i){i.id===e&&(a.addSiteTitle=i.title)}),$(\"#pageAddModal\").modal(\"show\")},selectSite:function(e){var i=this;i.addSiteId=e,i.sites.forEach(function(s){s.id===e&&(i.addSiteTitle=s.title)})},collapse:function(){for(var e=0;e<this.sites.length;e++)for(var i=0;i<this.sites[e].pages.length;i++)this.changeVisibility(this.sites[e].pages[i],!1)},expand:function(){for(var e=0;e<this.sites.length;e++)for(var i=0;i<this.sites[e].pages.length;i++)this.changeVisibility(this.sites[e].pages[i],!0)},changeVisibility:function(e,i){e.isExpanded=i;for(var s=0;s<e.items.length;s++)this.changeVisibility(e.items[s],i)}},created:function(){},updated:function(){this.updateBindings&&(this.bind(),this.updateBindings=!1),this.loading=!1}});", "<template>\n    <li class=\"dd-item\" :class=\"{ expanded: item.isExpanded || item.items.length === 0 }\" :data-id=\"item.id\">\n        <div class=\"sitemap-item\" :class=\"{ dimmed: item.isUnpublished || item.isScheduled }\">\n            <div class=\"handle dd-handle\"><i class=\"fas fa-ellipsis-v\"></i></div>\n            <div class=\"link\">\n                <span class=\"actions\">\n                    <a v-if=\"item.items.length > 0 && item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-minus\"></i></a>\n                    <a v-if=\"item.items.length > 0 && !item.isExpanded\" v-on:click.prevent=\"toggleItem(item)\" class=\"expand\" href=\"#\"><i class=\"fas fa-plus\"></i></a>\n                </span>\n                <a v-if=\"piranha.permissions.pages.edit\" :href=\"piranha.baseUrl + item.editUrl + item.id\">\n                    <span>{{ item.title }}</span>\n                    <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\n                    <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\n                    <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\n                    <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\n                </a>\n                <span v-else class=\"title\">\n                    <span>{{ item.title }}</span>\n                    <span v-if=\"item.isRestricted\" class=\"icon-restricted text-secondary small\"><i class=\"fas fa-lock\"></i></span>\n                    <span v-if=\"item.status\" class=\"badge badge-info\">{{ item.status }}</span>\n                    <span v-if=\"item.isScheduled\" class=\"badge badge-info\">{{ piranha.resources.texts.scheduled }}</span>\n                    <span v-if=\"item.isCopy\" class=\"badge badge-warning\">{{ piranha.resources.texts.copy }}</span>\n                </span>\n            </div>\n            <div class=\"type d-none d-md-block\">{{ item.typeName }}</div>\n            <div class=\"date d-none d-lg-block\">{{ item.published }}</div>\n            <div class=\"actions\">\n                <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, true)\"><i class=\"fas fa-angle-down\"></i></a>\n                <a v-if=\"piranha.permissions.pages.add\" href=\"#\" v-on:click.prevent=\"piranha.pagelist.add(item.siteId, item.id, false)\"><i class=\"fas fa-angle-right\"></i></a>\n                <a v-if=\"piranha.permissions.pages.delete && item.items.length === 0\" v-on:click.prevent=\"piranha.pagelist.remove(item.id)\" class=\"danger\" href=\"#\"><i class=\"fas fa-trash\"></i></a>\n            </div>\n        </div>\n        <ol v-if=\"item.items.length > 0\" class=\"dd-list\">\n            <sitemap-item v-for=\"child in item.items\" v-bind:key=\"child.id\" v-bind:item=\"child\">\n            </sitemap-item>\n        </ol>\n    </li>\n</template>\n\n<script>\nexport default {\n    props: [\"item\"],\n    methods: {\n        toggleItem: function (item) {\n            item.isExpanded = !item.isExpanded;\n        }\n    }\n}\n</script>"], "filenames": ["core/Piranha.Manager/assets/dist/js/piranha.pagelist.js", "core/Piranha.Manager/assets/dist/js/piranha.pagelist.min.js", "core/Piranha.Manager/assets/src/js/components/sitemap-item.vue"], "buggy_code_start_loc": [17, 1, 11], "buggy_code_end_loc": [18, 2, 19], "fixing_code_start_loc": [17, 1, 11], "fixing_code_end_loc": [18, 2, 19], "type": "CWE-79", "message": "In PiranhaCMS, versions 7.0.0 to 9.1.1 are vulnerable to stored XSS due to the page title improperly sanitized. By creating a page with a specially crafted page title, a low privileged user can trigger arbitrary JavaScript execution.", "other": {"cve": {"id": "CVE-2021-25977", "sourceIdentifier": "vulnerabilitylab@mend.io", "published": "2021-10-25T13:15:07.800", "lastModified": "2021-10-26T13:30:29.927", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In PiranhaCMS, versions 7.0.0 to 9.1.1 are vulnerable to stored XSS due to the page title improperly sanitized. By creating a page with a specially crafted page title, a low privileged user can trigger arbitrary JavaScript execution."}, {"lang": "es", "value": "En PiranhaCMS, versiones 7.0.0 a 9.1.1, son vulnerables a un ataque de tipo XSS almacenado debido a que el t\u00edtulo de la p\u00e1gina est\u00e1 saneado inapropiadamente. Al crear una p\u00e1gina con un t\u00edtulo de p\u00e1gina especialmente dise\u00f1ado, un usuario con pocos privilegios puede desencadenar una ejecuci\u00f3n arbitraria de JavaScript"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "vulnerabilitylab@mend.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "vulnerabilitylab@mend.io", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:dotnetfoundation:piranha_cms:*:*:*:*:*:*:*:*", "versionStartIncluding": "7.0.0", "versionEndIncluding": "9.1.1", "matchCriteriaId": "38B65D0E-34BF-4714-A36B-90EC950A594B"}]}]}], "references": [{"url": "https://github.com/PiranhaCMS/piranha.core/commit/543bc53c7dbd28c793ec960b57fb0e716c6b18d7", "source": "vulnerabilitylab@mend.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25977", "source": "vulnerabilitylab@mend.io", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/PiranhaCMS/piranha.core/commit/543bc53c7dbd28c793ec960b57fb0e716c6b18d7"}}