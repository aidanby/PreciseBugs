{"buggy_code": ["<?php\nif (!defined('WC_BASE')) define('WC_BASE', dirname(__FILE__));\n$ref=WC_BASE.\"/index.php\";\nif ($ref!=$_SERVER['SCRIPT_FILENAME']){\n\theader(\"Location: index.php\");\n\texit();\n}\n?>\n<!-- #################################### Start search ################################# -->\n<tr>\n\t<td width=\"10\">&nbsp; </td>\n\t<td valign=\"top\">\n\n<?php\nif ($authorized) {\n\t$cyr_conn = new cyradm;\n\t$error = $cyr_conn->imap_login();\n\n\tif ($error != 0){\n\t\tdie (\"IMAP Error: \".$cyr_conn->geterror());\n\t}\n\n\tif ($_SESSION['admintype'] == 0) {\n\t\t$allowed_domains1=\"('1'='1\";\n\t\t$allowed_domains3=\"('1'='1\";\n\t} else {\n\t\t$allowed_domains1=\"(a.domain_name='\";\n\t\t$allowed_domains3=\"(virtual.username='\";\n\t\tforeach($_SESSION['allowed_domains'] as $allowed_domain) {\n\t\t\t$allowed_domains1 .= $allowed_domain.\"' OR a.domain_name='\";\n\t\t\t$allowed_domains3 .= $allowed_domain.\"' OR virtual.username='\";\n\t\t}\n\t}\n\n\n\t#####  Show matching Domains first #######\n\t$query = \"SELECT * FROM domain AS a WHERE domain_name LIKE '%\".$_GET['searchstring'].\"%' AND \".$allowed_domains1.\"') ORDER BY domain_name\";\n\t$result = $handle->query($query);\n\t$cnt = $result->numRows();\n\n\tprint \"<tr>\";\n\tprint \"<td width=\\\"10\\\">&nbsp; </td>\";\n\tprint \"<td valign=\\\"top\\\"><h3>\"._(\"Total domains matching\").\": \".$cnt.\"</h3>\";\n\tprint \"<table border=0>\";\n\tprint \"<tbody>\";\n\tprint \"<tr>\";\n\tprint ($_SESSION['admintype']==0)?\"<th colspan=\\\"4\\\">\":\"<th colspan=\\\"2\\\">\";\n\tprint _(\"action\").\"</th>\";\n\tprint \"<th>\". _(\"domainname\").\"</th>\";\n\tif (!$DOMAIN_AS_PREFIX ) {\n\t    print \"<th>\"._(\"prefix\").\"</th>\";\n\t}\n\tprint \"<th>\"._(\"max Accounts\").\"</th>\";\n\tprint \"<th>\"._(\"Domain quota\").\"</th>\";\n\tprint \"<th>\"._(\"default quota per user\").\"</th>\";\n\tprint \"</tr>\";\n\n\tfor ($c=0;$c<$cnt;$c++) {\n\t\tif ($c%2==0){\n\t\t\t$cssrow=\"row1\";\n\t\t} else {\n\t\t\t$cssrow=\"row2\";\n\t\t}\n\n\t\t$row=$result->fetchRow(DB_FETCHMODE_ASSOC,$c);\n\t\t$domain = $row['domain_name'];\n\n\t\tprint \"<tr class=\\\"$cssrow\\\"> \\n\";\n\t\tif ($_SESSION['admintype']==0) {\n\t\t\tprint '<td><a href=\"index.php?action=editdomain&domain='.$domain.'\">'. _(\"Edit Domain\").\"</a></td>\\n\";\n\t\t\tprint '<td><a href=\"index.php?action=deletedomain&domain='.$domain.'\">'. _(\"Delete Domain\").\"</a></td>\\n\";\n\t\t}\n\t\tif ($row['transport'] == 'cyrus') {\n\t\t\tprint '<td><a href=\"index.php?action=accounts&domain='.$domain.'\">'. _(\"accounts\").\"</a></td>\\n\";\n\t\t} else {\n\t\t\tprint \"<td>\"._(\"accounts\").\"</td>\\n\";\n\t\t}\n\t\tif ($row['transport'] == 'cyrus') {\n\t\t\tprint '<td><a href=\\\"index.php?action=aliases&domain='.$domain.'\">'._(\"Aliases\").\"</a></td>\\n\";\n\t\t} else {\n\t\t\tprint \"<td>\"._(\"Aliases\").\"</td>\\n\";\n\t\t}\n\t\tprint \"<td>\";\n\t\tprint $domain;\n\t\tprint \"</td>\\n<td>\";\n\t\tif (!$DOMAIN_AS_PREFIX) {\n\t\t\t# Print the prefix\n\t\t\tprint $row['prefix'];\n\t\t\tprint \"</td>\\n<td align=\\\"right\\\">\";\n\t\t}\n\t\t# Print the maxaccount\n\t\tprint $row['maxaccounts'];\n\t\tprint \"</td>\\n<td align=\\\"right\\\">\";\n\t\tif (! $row['domainquota'] == 0) {\n\t\t\techo $row['domainquota'];\n\t\t} else {\n\t\t\tprint _(\"Quota not set\");\n\t\t}\n\t\tprint \"</td>\\n<td align=\\\"right\\\">\";\n\t\t# Print the quota\n\t\tprint $row['quota'];\n\t\tprint \"</td>\\n</tr>\\n\";\n\t}\n\tprint \"</tbody>\";\n\tprint \"</table>\";\n\n\t############ And now show the users matching the search query ###########\n\t$query = \"SELECT DISTINCT a.username, a.domain_name FROM virtual as v, accountuser as a WHERE ((v.username LIKE '%\".$_GET['searchstring'].\"%') OR (v.alias LIKE '%\".$_GET['searchstring'].\"%')) AND (v.username=a.username) AND \".$allowed_domains1.\"') ORDER BY username\";\n\t$result = $handle->query($query);\n\t$total = $result->numRows();\n\n\tprint \"<h3>\"._(\"Total users matching\").\": \".$total.\"</h3>\";\n\tif (empty($row_pos)) {\n\t\t$row_pos = 0;\n\t}\n        $query = \"SELECT DISTINCT a.* FROM virtual as v, accountuser as a WHERE ((v.username LIKE '%\".$_GET['searchstring'].\"%') OR (v.alias LIKE '%\".$_GET['searchstring'].\"%')) AND (v.username=a.username) AND \".$allowed_domains1.\"') ORDER BY username\";\n\t$result = $handle->limitQuery($query,$row_pos,10);\n\t$cnt = $result->numRows();\n\n\tprint \"<h4>\"._(\"Displaying from position\").\": \".$row_pos.\"</h4>\";\n\tif ($cnt!=0) {\n\t\tprint \"<table cellspacing=\\\"2\\\" cellpadding=\\\"0\\\"><tr>\";\n\n\t\t$prev = $row_pos -10;\n\t\t$next = $row_pos +10;\n\n\t\tif ($row_pos<10) {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"#\\\">\"._(\"Previous 10 entries\").\"</a></td>\";\n\t\t} else {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"index.php?action=search&row_pos=\".$prev.\"&searchstring=\".$searchstring.\"\\\">\"._(\"Previous 10 entries\").\"</a></td>\";\n\t\t}\n\t\tif ($next>$total) {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"#\\\">\"._(\"Next 10 entries\").\"</a></td>\";\n\t\t} else {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"index.php?action=search&row_pos=\".$next.\"&searchstring=\".$searchstring.\"\\\">\"._(\"Next 10 entries\").\"</a></td>\";\n\t\t}\n\t\tprint \"</tr></table><p>\";\n\n\t\tprint \"<table border=\\\"0\\\">\\n\";\n\t\tprint \"<tbody>\";\n\t\tprint \"<tr>\";\n\t\tprint \"<th colspan=\\\"5\\\">\"._(\"action\").\"</th>\";\n\t\tprint \"<th>\"._(\"Email address\").\"</th>\";\n\t\tprint \"<th>\"._(\"Username\").\"</th>\";\n\t\tprint \"<th>\"._(\"Last login\").\"</th>\";\n\t\tprint \"<th>\"._(\"Quota used\").\"</th>\";\n\t\tprint \"<th>\"._(\"services\").\"</th>\";\n\t\tprint \"</tr>\";\n\n\t\tfor ($c=0;$c<$cnt;$c++) {\n\t\t\tif ($c%2==0){\n\t\t\t\t$cssrow=\"row1\";\n\t\t\t} else {\n\t\t\t\t$cssrow=\"row2\";\n\t\t\t}\n\n\t\t\t$row=$result->fetchRow(DB_FETCHMODE_ASSOC,$c);\n\t\t\t$username=$row['username'];\n\t\t\t$domain=$row['domain_name'];\n\t\t\t$services = array();\n\t\t\t$services['imap'] = $row['imap'];\n\t\t\t$services['pop'] = $row['pop'];\n\t\t\t$services['sieve'] = $row['sieve'];\n\t\t\t$services['smtpauth'] = $row['smtpauth'];\n\t\t\tprint \"\\n<tr class=\\\"$cssrow\\\">\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=editaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Edit email addresses\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=manageaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Edit account\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=forwardaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\". _(\"Forward\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=deleteaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Delete account\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=catch&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Set catch all\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\">\";\n\t\t\t$query2 = \"SELECT alias,status FROM virtual WHERE username='\".$username.\"'\";\n\t\t\t$result2 = $handle->query($query2);\n\t\t\t$cnt2 = $result2->numRows();\n\n\t\t\tfor ($c2=0;$c2<$cnt2;$c2++){\n\t\t\t\t# Print All Emailadresses found for the account\n\t\t\t\t$row2 = $result2->fetchRow(DB_FETCHMODE_ASSOC, $c2);\n\t\t\t\tprint $row2['alias'].\"<br>\";\n\t\t\t}\n\t\t\t$query3 = \"SELECT dest FROM virtual WHERE alias='\".$username.\"' AND username=''\";\n\t\t\t$result3 = $handle->query($query3);\n\t\t\t$row = $result3->fetchRow(DB_FETCHMODE_ASSOC, 0);\n\t\t\tif (is_array($row)) {\n\t\t\t\tprint \"<br><b>\"._(\"Forwards\").\":</b><br><br>\";\n\t\t\t\t$forwards_tmp = preg_split('|,\\s*|', stripslashes($row['dest']));\n\t\t\t\t$forwards = array();\n\t\t\t\twhile (list(, $forward) = each($forwards_tmp)){\n\t\t\t\t\tif (strtolower($forward) != strtolower($username)){\n\t\t\t\t\t\t$forwards[] = htmlspecialchars(trim($forward));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$forwards[] = \"<b>\".htmlspecialchars(trim($forward)).\"</b>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\techo implode(\"<br>\", $forwards);\n\t\t\t}\n\t\t\tprint \"</td>\\n<td valign=\\\"middle\\\">\";\n\t\t\tprint $username;\n\t\t\tprint \"</td>\\n<td align=\\\"center\\\" valign=\\\"middle\\\">\";\n\t\t\t$query3 = \"SELECT * FROM log WHERE user='\".$username.\"' ORDER BY time DESC\";\n\t\t\t$result3 = $handle->query($query3);\n\t\t\tif (! DB::isError($result3)){\n\t\t\t\t$row3 = $result3->fetchRow(DB_FETCHMODE_ASSOC, 0);\n\t\t\t\t$lastlogin = $row3['time'];\n\t\t\t} else {\n\t\t\t\t$lastlogin = '';\n\t\t\t}\n\t\t\tif ($lastlogin == ''){\n\t\t\t\t$lastlogin=_(\"n/a\");\n\t\t\t}\n\t\t\tprint $lastlogin;\n\t\t\tprint \"</td>\\n<td valign=\\\"middle\\\">\";\n\t\t\tif ($DOMAIN_AS_PREFIX){\n\t    \t\t\t$quota = $cyr_conn->getquota(\"user/\" . $username);\n\t\t\t} else {\n\t    \t\t\t$quota = $cyr_conn->getquota(\"user.\" . $username);\n\t\t\t}\n\n\t\t\tif ($quota['used'] != \"NOT-SET\"){\n\t\t\t\t$q_used  = $quota['used'];\n\t\t\t\t$q_total = $quota['qmax'];\n\t\t\t\tif (!$q_total == 0) {\n\t\t\t\t\t$q_percent = 100*$q_used/$q_total;\n\t\t\t\t\tif ($q_percent >= $_SESSION['warnlevel']){\n\t\t\t\t\t\tprintf (\"<font color=red>\");\n\t\t\t\t\t}\n\t\t\t\t\tprintf (\"%d KBytes %s %d KBytes (%.2f%%)\",\n\t\t\t\t\t\t$quota['used']/1024, _(\"out of\"),\n\t\t\t\t\t\t$quota['qmax']/1024, $q_percent);\n\t\t\t\t\tif ($q_percent >= $_SESSION['warnlevel']){\n\t\t\t\t\t\tprintf (\"</font>\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint _(\"Unable to retrieve quota\");\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tprint _(\"Quota not set\");\n\t\t\t}  \n\t\t\tprint \"&nbsp;</td>\\n\";\n\t\t\tprint '<td valign=\"middle\">';\n\t\t\tprint '<table border=0 align=\"center\">';\n\t\t\tif($services['imap']==1){\n\t\t\t\tprint \"<tr><td>imap</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprint \"<tr><td>imap</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($services['pop']==1){\n\t\t\t\tprint \"<tr><td>pop</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>pop</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($services['sieve']==1){\n\t\t\t\tprint \"<tr><td>sieve</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>sieve</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($services['smtpauth']==1){\n\t\t\t\tprint \"<tr><td>smtpauth</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>smtpauth</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($row2['status']==1){\n\t\t\t\tprint \"<tr><td>smtp</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>smtp</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tprint \"</table>\\n</td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\t\tprint \"\\n</tbody>\\n\";\n\t\tprint \"</table>\\n\";\n\t}\n\telse{\n\t\tprint \"\\n\"._(\"No accounts found\").\"\\n<p>\";\n\t}\n\n\t################ And now show the matching aliases #######################\n\t$query3 = \"SELECT DISTINCT alias, username FROM virtual WHERE (((dest LIKE '%\".$_GET['searchstring'].\"%') OR (alias LIKE '%\".$_GET['searchstring'].\"%')) AND (dest <> username) AND (username<>'')) AND \".$allowed_domains3.\"') ORDER BY username\";\t\n\t$result3 = $handle->query($query3);\n\t$total = $result3->numRows();\n\tprint \"<h3>\"._(\"Total aliases matching\").\": \".$total.\"</h3>\";\n\tif ($total == 0) {\n\t\tprint _(\"No aliases found\");\n\t} else {\n?>\n        <table border=\"0\">\n                <tbody>\n                <tr>\n                        <th colspan=\"2\"><?php print _(\"action\");?></th>\n                        <th><?php print _(\"Email address\"); ?></th>\n                        <th><?php print _(\"Destination\"); ?></th>\n                </tr>\n<?php \n\t\tfor ($c = 0; $c < $total; $c++){\n\t\t\tif ($c%2==0){\n\t\t\t\t$cssrow=\"row1\";\n\t\t\t} else {\n\t\t\t\t$cssrow=\"row2\";\n\t\t\t}\n\t\t\t$row = $result3->fetchRow( DB_FETCHMODE_ASSOC, $c);\n\t\t\t$alias = $row['alias'];\n\t\t\t$domain = $row['username'];\n?>\n\t\t\t<tr class=\"<?php echo $cssrow; ?>\">\n                        <td><a href=\"index.php?action=editalias&alias=<?php echo $alias;?>&domain=<?php echo $domain;?>\"><?php print _(\"Edit Alias\"); ?></a></td>\n                        <td><a href=\"index.php?action=deletealias&alias=<?php echo $alias;?>&domain=<?php echo $domain;?>\"><?php print _(\"Delete Alias\"); ?></a></td>\n                        <td><?php echo $alias; ?></td>\n                        <td>\n<?php\n\t\t\t$query4 = \"SELECT dest FROM virtual WHERE alias='\".$alias.\"' AND username='\".$domain.\"'\";\n\t\t\t$result4 = $handle->limitQuery($query4, 0, 3);\n\t\t\t$num_dest = $result4->numRows ($result4);\n\t\t\tfor ($d=0; $d<$num_dest; $d++) {\n\t\t\t\t$row2 = $result4->fetchRow (DB_FETCHMODE_ASSOC, $d);\n\t\t\t\tif ($d!= 0) {\n\t\t\t\t\techo \", \";\n\t\t\t\t}\n\t\t\t\techo $row2['dest'];\n\t\t\t}\n\t\t\t$query5 = \"SELECT COUNT(dest) FROM virtual WHERE alias='\".$alias.\"' AND username='\".$domain.\"'\";\n\t\t\t$num_dests = $handle->getOne($query5);\n\t\t\tif ($num_dests>3) {\n\t\t\t\tprint \", ... \";\n\t\t\t}\n?>\n\t\t\t</td></tr>\n<?php\n\t\t}\n?>\n\t</table>\n\t<br>\n<?php\n\t}\n} else {\n?>\n\t<h3>\n\t\t<?php print $err_msg;?>\n\t</h3>\n\t<a href=\"index.php?action=browse\"><?php print _(\"Back\");?></a>\n<?php\n}\n?>\n\t</td>\n</tr>\n<!-- ##################################### End search.php #################################### -->\n"], "fixing_code": ["<?php\nif (!defined('WC_BASE')) define('WC_BASE', dirname(__FILE__));\n$ref=WC_BASE.\"/index.php\";\nif ($ref!=$_SERVER['SCRIPT_FILENAME']){\n\theader(\"Location: index.php\");\n\texit();\n}\n?>\n<!-- #################################### Start search ################################# -->\n<tr>\n\t<td width=\"10\">&nbsp; </td>\n\t<td valign=\"top\">\n\n<?php\nif ($authorized) {\n\t$cyr_conn = new cyradm;\n\t$error = $cyr_conn->imap_login();\n\n\tif ($error != 0){\n\t\tdie (\"IMAP Error: \".$cyr_conn->geterror());\n\t}\n\n\tif ($_SESSION['admintype'] == 0) {\n\t\t$allowed_domains1=\"('1'='1\";\n\t\t$allowed_domains3=\"('1'='1\";\n\t} else {\n\t\t$allowed_domains1=\"(a.domain_name='\";\n\t\t$allowed_domains3=\"(virtual.username='\";\n\t\tforeach($_SESSION['allowed_domains'] as $allowed_domain) {\n\t\t\t$allowed_domains1 .= $allowed_domain.\"' OR a.domain_name='\";\n\t\t\t$allowed_domains3 .= $allowed_domain.\"' OR virtual.username='\";\n\t\t}\n\t}\n\n\n\t#####  Show matching Domains first #######\n\t$query = \"SELECT * FROM domain AS a WHERE domain_name LIKE '%\".addslashes($_GET['searchstring']).\"%' AND \".$allowed_domains1.\"') ORDER BY domain_name\";\n\t$result = $handle->query($query);\n\t$cnt = $result->numRows();\n\n\tprint \"<tr>\";\n\tprint \"<td width=\\\"10\\\">&nbsp; </td>\";\n\tprint \"<td valign=\\\"top\\\"><h3>\"._(\"Total domains matching\").\": \".$cnt.\"</h3>\";\n\tprint \"<table border=0>\";\n\tprint \"<tbody>\";\n\tprint \"<tr>\";\n\tprint ($_SESSION['admintype']==0)?\"<th colspan=\\\"4\\\">\":\"<th colspan=\\\"2\\\">\";\n\tprint _(\"action\").\"</th>\";\n\tprint \"<th>\". _(\"domainname\").\"</th>\";\n\tif (!$DOMAIN_AS_PREFIX ) {\n\t    print \"<th>\"._(\"prefix\").\"</th>\";\n\t}\n\tprint \"<th>\"._(\"max Accounts\").\"</th>\";\n\tprint \"<th>\"._(\"Domain quota\").\"</th>\";\n\tprint \"<th>\"._(\"default quota per user\").\"</th>\";\n\tprint \"</tr>\";\n\n\tfor ($c=0;$c<$cnt;$c++) {\n\t\tif ($c%2==0){\n\t\t\t$cssrow=\"row1\";\n\t\t} else {\n\t\t\t$cssrow=\"row2\";\n\t\t}\n\n\t\t$row=$result->fetchRow(DB_FETCHMODE_ASSOC,$c);\n\t\t$domain = $row['domain_name'];\n\n\t\tprint \"<tr class=\\\"$cssrow\\\"> \\n\";\n\t\tif ($_SESSION['admintype']==0) {\n\t\t\tprint '<td><a href=\"index.php?action=editdomain&domain='.$domain.'\">'. _(\"Edit Domain\").\"</a></td>\\n\";\n\t\t\tprint '<td><a href=\"index.php?action=deletedomain&domain='.$domain.'\">'. _(\"Delete Domain\").\"</a></td>\\n\";\n\t\t}\n\t\tif ($row['transport'] == 'cyrus') {\n\t\t\tprint '<td><a href=\"index.php?action=accounts&domain='.$domain.'\">'. _(\"accounts\").\"</a></td>\\n\";\n\t\t} else {\n\t\t\tprint \"<td>\"._(\"accounts\").\"</td>\\n\";\n\t\t}\n\t\tif ($row['transport'] == 'cyrus') {\n\t\t\tprint '<td><a href=\\\"index.php?action=aliases&domain='.$domain.'\">'._(\"Aliases\").\"</a></td>\\n\";\n\t\t} else {\n\t\t\tprint \"<td>\"._(\"Aliases\").\"</td>\\n\";\n\t\t}\n\t\tprint \"<td>\";\n\t\tprint $domain;\n\t\tprint \"</td>\\n<td>\";\n\t\tif (!$DOMAIN_AS_PREFIX) {\n\t\t\t# Print the prefix\n\t\t\tprint $row['prefix'];\n\t\t\tprint \"</td>\\n<td align=\\\"right\\\">\";\n\t\t}\n\t\t# Print the maxaccount\n\t\tprint $row['maxaccounts'];\n\t\tprint \"</td>\\n<td align=\\\"right\\\">\";\n\t\tif (! $row['domainquota'] == 0) {\n\t\t\techo $row['domainquota'];\n\t\t} else {\n\t\t\tprint _(\"Quota not set\");\n\t\t}\n\t\tprint \"</td>\\n<td align=\\\"right\\\">\";\n\t\t# Print the quota\n\t\tprint $row['quota'];\n\t\tprint \"</td>\\n</tr>\\n\";\n\t}\n\tprint \"</tbody>\";\n\tprint \"</table>\";\n\n\t############ And now show the users matching the search query ###########\n\t$query = \"SELECT DISTINCT a.username, a.domain_name FROM virtual as v, accountuser as a WHERE ((v.username LIKE '%\".addslashes($_GET['searchstring']).\"%') OR (v.alias LIKE '%\".addslashes($_GET['searchstring']).\"%')) AND (v.username=a.username) AND \".$allowed_domains1.\"') ORDER BY username\";\n\t$result = $handle->query($query);\n\t$total = $result->numRows();\n\n\tprint \"<h3>\"._(\"Total users matching\").\": \".$total.\"</h3>\";\n\tif (empty($row_pos)) {\n\t\t$row_pos = 0;\n\t}\n        $query = \"SELECT DISTINCT a.* FROM virtual as v, accountuser as a WHERE ((v.username LIKE '%\".$_GET['searchstring'].\"%') OR (v.alias LIKE '%\".addslashes($_GET['searchstring']).\"%')) AND (v.username=a.username) AND \".$allowed_domains1.\"') ORDER BY username\";\n\t$result = $handle->limitQuery($query,$row_pos,10);\n\t$cnt = $result->numRows();\n\n\tprint \"<h4>\"._(\"Displaying from position\").\": \".$row_pos.\"</h4>\";\n\tif ($cnt!=0) {\n\t\tprint \"<table cellspacing=\\\"2\\\" cellpadding=\\\"0\\\"><tr>\";\n\n\t\t$prev = $row_pos -10;\n\t\t$next = $row_pos +10;\n\n\t\tif ($row_pos<10) {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"#\\\">\"._(\"Previous 10 entries\").\"</a></td>\";\n\t\t} else {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"index.php?action=search&row_pos=\".$prev.\"&searchstring=\".$searchstring.\"\\\">\"._(\"Previous 10 entries\").\"</a></td>\";\n\t\t}\n\t\tif ($next>$total) {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"#\\\">\"._(\"Next 10 entries\").\"</a></td>\";\n\t\t} else {\n\t\t\tprint \"<td class=\\\"navi\\\"><a class=\\\"navilink\\\" href=\\\"index.php?action=search&row_pos=\".$next.\"&searchstring=\".$searchstring.\"\\\">\"._(\"Next 10 entries\").\"</a></td>\";\n\t\t}\n\t\tprint \"</tr></table><p>\";\n\n\t\tprint \"<table border=\\\"0\\\">\\n\";\n\t\tprint \"<tbody>\";\n\t\tprint \"<tr>\";\n\t\tprint \"<th colspan=\\\"5\\\">\"._(\"action\").\"</th>\";\n\t\tprint \"<th>\"._(\"Email address\").\"</th>\";\n\t\tprint \"<th>\"._(\"Username\").\"</th>\";\n\t\tprint \"<th>\"._(\"Last login\").\"</th>\";\n\t\tprint \"<th>\"._(\"Quota used\").\"</th>\";\n\t\tprint \"<th>\"._(\"services\").\"</th>\";\n\t\tprint \"</tr>\";\n\n\t\tfor ($c=0;$c<$cnt;$c++) {\n\t\t\tif ($c%2==0){\n\t\t\t\t$cssrow=\"row1\";\n\t\t\t} else {\n\t\t\t\t$cssrow=\"row2\";\n\t\t\t}\n\n\t\t\t$row=$result->fetchRow(DB_FETCHMODE_ASSOC,$c);\n\t\t\t$username=$row['username'];\n\t\t\t$domain=$row['domain_name'];\n\t\t\t$services = array();\n\t\t\t$services['imap'] = $row['imap'];\n\t\t\t$services['pop'] = $row['pop'];\n\t\t\t$services['sieve'] = $row['sieve'];\n\t\t\t$services['smtpauth'] = $row['smtpauth'];\n\t\t\tprint \"\\n<tr class=\\\"$cssrow\\\">\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=editaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Edit email addresses\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=manageaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Edit account\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=forwardaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\". _(\"Forward\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=deleteaccount&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Delete account\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\"><a href=\\\"index.php?action=catch&domain=\".$domain.\"&username=\".$username.\"\\\">\"._(\"Set catch all\").\"</a></td>\";\n\t\t\tprint \"\\n<td valign=\\\"middle\\\">\";\n\t\t\t$query2 = \"SELECT alias,status FROM virtual WHERE username='\".$username.\"'\";\n\t\t\t$result2 = $handle->query($query2);\n\t\t\t$cnt2 = $result2->numRows();\n\n\t\t\tfor ($c2=0;$c2<$cnt2;$c2++){\n\t\t\t\t# Print All Emailadresses found for the account\n\t\t\t\t$row2 = $result2->fetchRow(DB_FETCHMODE_ASSOC, $c2);\n\t\t\t\tprint $row2['alias'].\"<br>\";\n\t\t\t}\n\t\t\t$query3 = \"SELECT dest FROM virtual WHERE alias='\".$username.\"' AND username=''\";\n\t\t\t$result3 = $handle->query($query3);\n\t\t\t$row = $result3->fetchRow(DB_FETCHMODE_ASSOC, 0);\n\t\t\tif (is_array($row)) {\n\t\t\t\tprint \"<br><b>\"._(\"Forwards\").\":</b><br><br>\";\n\t\t\t\t$forwards_tmp = preg_split('|,\\s*|', stripslashes($row['dest']));\n\t\t\t\t$forwards = array();\n\t\t\t\twhile (list(, $forward) = each($forwards_tmp)){\n\t\t\t\t\tif (strtolower($forward) != strtolower($username)){\n\t\t\t\t\t\t$forwards[] = htmlspecialchars(trim($forward));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$forwards[] = \"<b>\".htmlspecialchars(trim($forward)).\"</b>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\techo implode(\"<br>\", $forwards);\n\t\t\t}\n\t\t\tprint \"</td>\\n<td valign=\\\"middle\\\">\";\n\t\t\tprint $username;\n\t\t\tprint \"</td>\\n<td align=\\\"center\\\" valign=\\\"middle\\\">\";\n\t\t\t$query3 = \"SELECT * FROM log WHERE user='\".$username.\"' ORDER BY time DESC\";\n\t\t\t$result3 = $handle->query($query3);\n\t\t\tif (! DB::isError($result3)){\n\t\t\t\t$row3 = $result3->fetchRow(DB_FETCHMODE_ASSOC, 0);\n\t\t\t\t$lastlogin = $row3['time'];\n\t\t\t} else {\n\t\t\t\t$lastlogin = '';\n\t\t\t}\n\t\t\tif ($lastlogin == ''){\n\t\t\t\t$lastlogin=_(\"n/a\");\n\t\t\t}\n\t\t\tprint $lastlogin;\n\t\t\tprint \"</td>\\n<td valign=\\\"middle\\\">\";\n\t\t\tif ($DOMAIN_AS_PREFIX){\n\t    \t\t\t$quota = $cyr_conn->getquota(\"user/\" . $username);\n\t\t\t} else {\n\t    \t\t\t$quota = $cyr_conn->getquota(\"user.\" . $username);\n\t\t\t}\n\n\t\t\tif ($quota['used'] != \"NOT-SET\"){\n\t\t\t\t$q_used  = $quota['used'];\n\t\t\t\t$q_total = $quota['qmax'];\n\t\t\t\tif (!$q_total == 0) {\n\t\t\t\t\t$q_percent = 100*$q_used/$q_total;\n\t\t\t\t\tif ($q_percent >= $_SESSION['warnlevel']){\n\t\t\t\t\t\tprintf (\"<font color=red>\");\n\t\t\t\t\t}\n\t\t\t\t\tprintf (\"%d KBytes %s %d KBytes (%.2f%%)\",\n\t\t\t\t\t\t$quota['used']/1024, _(\"out of\"),\n\t\t\t\t\t\t$quota['qmax']/1024, $q_percent);\n\t\t\t\t\tif ($q_percent >= $_SESSION['warnlevel']){\n\t\t\t\t\t\tprintf (\"</font>\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprint _(\"Unable to retrieve quota\");\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tprint _(\"Quota not set\");\n\t\t\t}  \n\t\t\tprint \"&nbsp;</td>\\n\";\n\t\t\tprint '<td valign=\"middle\">';\n\t\t\tprint '<table border=0 align=\"center\">';\n\t\t\tif($services['imap']==1){\n\t\t\t\tprint \"<tr><td>imap</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprint \"<tr><td>imap</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($services['pop']==1){\n\t\t\t\tprint \"<tr><td>pop</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>pop</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($services['sieve']==1){\n\t\t\t\tprint \"<tr><td>sieve</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>sieve</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($services['smtpauth']==1){\n\t\t\t\tprint \"<tr><td>smtpauth</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>smtpauth</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tif($row2['status']==1){\n\t\t\t\tprint \"<tr><td>smtp</td><td><img src=\\\"images/checked.png\\\" alt=\\\"yes\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprint \"<tr><td>smtp</td><td><img src=\\\"images/false.png\\\" alt=\\\"no\\\" border=0></td></tr>\";\n\t\t\t}\n\t\t\tprint \"</table>\\n</td>\\n\";\n\t\t\tprint \"</tr>\\n\";\n\t\t}\n\t\tprint \"\\n</tbody>\\n\";\n\t\tprint \"</table>\\n\";\n\t}\n\telse{\n\t\tprint \"\\n\"._(\"No accounts found\").\"\\n<p>\";\n\t}\n\n\t################ And now show the matching aliases #######################\n\t$query3 = \"SELECT DISTINCT alias, username FROM virtual WHERE (((dest LIKE '%\".$_GET['searchstring'].\"%') OR (alias LIKE '%\".$_GET['searchstring'].\"%')) AND (dest <> username) AND (username<>'')) AND \".$allowed_domains3.\"') ORDER BY username\";\t\n\t$result3 = $handle->query($query3);\n\t$total = $result3->numRows();\n\tprint \"<h3>\"._(\"Total aliases matching\").\": \".$total.\"</h3>\";\n\tif ($total == 0) {\n\t\tprint _(\"No aliases found\");\n\t} else {\n?>\n        <table border=\"0\">\n                <tbody>\n                <tr>\n                        <th colspan=\"2\"><?php print _(\"action\");?></th>\n                        <th><?php print _(\"Email address\"); ?></th>\n                        <th><?php print _(\"Destination\"); ?></th>\n                </tr>\n<?php \n\t\tfor ($c = 0; $c < $total; $c++){\n\t\t\tif ($c%2==0){\n\t\t\t\t$cssrow=\"row1\";\n\t\t\t} else {\n\t\t\t\t$cssrow=\"row2\";\n\t\t\t}\n\t\t\t$row = $result3->fetchRow( DB_FETCHMODE_ASSOC, $c);\n\t\t\t$alias = $row['alias'];\n\t\t\t$domain = $row['username'];\n?>\n\t\t\t<tr class=\"<?php echo $cssrow; ?>\">\n                        <td><a href=\"index.php?action=editalias&alias=<?php echo $alias;?>&domain=<?php echo $domain;?>\"><?php print _(\"Edit Alias\"); ?></a></td>\n                        <td><a href=\"index.php?action=deletealias&alias=<?php echo $alias;?>&domain=<?php echo $domain;?>\"><?php print _(\"Delete Alias\"); ?></a></td>\n                        <td><?php echo $alias; ?></td>\n                        <td>\n<?php\n\t\t\t$query4 = \"SELECT dest FROM virtual WHERE alias='\".$alias.\"' AND username='\".$domain.\"'\";\n\t\t\t$result4 = $handle->limitQuery($query4, 0, 3);\n\t\t\t$num_dest = $result4->numRows ($result4);\n\t\t\tfor ($d=0; $d<$num_dest; $d++) {\n\t\t\t\t$row2 = $result4->fetchRow (DB_FETCHMODE_ASSOC, $d);\n\t\t\t\tif ($d!= 0) {\n\t\t\t\t\techo \", \";\n\t\t\t\t}\n\t\t\t\techo $row2['dest'];\n\t\t\t}\n\t\t\t$query5 = \"SELECT COUNT(dest) FROM virtual WHERE alias='\".$alias.\"' AND username='\".$domain.\"'\";\n\t\t\t$num_dests = $handle->getOne($query5);\n\t\t\tif ($num_dests>3) {\n\t\t\t\tprint \", ... \";\n\t\t\t}\n?>\n\t\t\t</td></tr>\n<?php\n\t\t}\n?>\n\t</table>\n\t<br>\n<?php\n\t}\n} else {\n?>\n\t<h3>\n\t\t<?php print $err_msg;?>\n\t</h3>\n\t<a href=\"index.php?action=browse\"><?php print _(\"Back\");?></a>\n<?php\n}\n?>\n\t</td>\n</tr>\n<!-- ##################################### End search.php #################################### -->\n"], "filenames": ["search.php"], "buggy_code_start_loc": [37], "buggy_code_end_loc": [117], "fixing_code_start_loc": [37], "fixing_code_end_loc": [117], "type": "CWE-89", "message": "A vulnerability classified as problematic has been found in web-cyradm. This affects an unknown part of the file search.php. The manipulation of the argument searchstring leads to sql injection. It is recommended to apply a patch to fix this issue. The identifier VDB-217449 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2007-10001", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-05T12:15:09.040", "lastModified": "2023-01-11T19:26:00.250", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in web-cyradm. This affects an unknown part of the file search.php. The manipulation of the argument searchstring leads to sql injection. It is recommended to apply a patch to fix this issue. The identifier VDB-217449 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:N/A:N", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 2.7}, "baseSeverity": "LOW", "exploitabilityScore": 5.1, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:web-cyradm_project:web-cyradm:-:*:*:*:*:*:*:*", "matchCriteriaId": "30E70EE7-4FE9-4436-A13B-2D1EAF830C20"}]}]}], "references": [{"url": "https://github.com/web-cyradm/web-cyradm/commit/3e8f0717f133907bb6a09cb674b05c5f273da3e1", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217449", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217449", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/web-cyradm/web-cyradm/commit/3e8f0717f133907bb6a09cb674b05c5f273da3e1"}}