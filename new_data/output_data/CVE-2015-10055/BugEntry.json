{"buggy_code": ["/*\nUSER ROUTES\n*/\nvar express = require('express');\nvar router = express.Router();\nvar mysql = require('mysql');\n\n\n/* GET home page. */\nrouter.get('/:id(\\\\d+)', function(req, res, next) {\n  res.json({hello: \"world\"});\n});\n\n/* GET all users */\nrouter.get('/all', function(req, res, next) {\n  res.json({hi: \"there\"});\n});\n\n/* POST create user */\nrouter.post('/new', function(req, res, next) {\n  console.log(req.body);\n\n  var username = req.body.username;\n  var password = req.body.password;\n\n  //Make sure both username and password are specified\n  if(!username || !password) {\n    res.json ({error: \"Please specify both username and password\"});\n    return;\n  }\n\n  var conn = mysql.createConnection({\n    host    : \"ec2-52-1-159-248.compute-1.amazonaws.com\",\n    user    : \"root\",\n    password: \"root\",\n    port    : 3306,\n    database: \"picture_this\",\n  });\n\n  //Open connection to database\n  conn.connect(function(err) {\n    if(err) {\n      console.error(err.stack);\n      res.json({error: \"Failed to connect to database\"})\n      conn.end();\n      return;\n    }\n    conn.query(\"INSERT INTO user (username, password) VALUES ('\"+username+\"', '\"+password+\"')\", function (err, result) {\n      if(err) {\n        //Duplicate code\n        if(err.code === \"ER_DUP_UNIQUE\") {\n          res.json({error: \"Username already exists.\"});\n        }else{\n          console.error(\"********Failed to insert user**********\");\n          console.error(err.code);\n          res.json({error: \"Failed to insert user to table\"});\n        }\n        return;\n      }\n      res.json({user_id: result.insertId});\n      console.log(result);\n    });\n    conn.end();\n  });\n\n\n});\n\nmodule.exports = router;\n"], "fixing_code": ["/*\nUSER ROUTES\n*/\nvar express = require('express');\nvar router = express.Router();\nvar mysql = require('mysql');\n\n\n/* GET home page. */\nrouter.get('/:id(\\\\d+)', function(req, res, next) {\n  res.json({hello: \"world\"});\n});\n\n/* GET all users */\nrouter.get('/all', function(req, res, next) {\n  res.json({hi: \"there\"});\n});\n\n/* POST create user */\nrouter.post('/new', function(req, res, next) {\n\n  var username = req.body.username;\n  var password = req.body.password;\n\n  //Make sure both username and password are specified\n  if(!username || !password) {\n    res.json ({error: \"Please specify both username and password\"});\n    return;\n  }\n\n  //SQL INJECTION SHALL NOT PASS!!!\n  var username = conn.escape(username);\n  var password = conn.escape(password);\n\n  var conn = mysql.createConnection({\n    host    : \"ec2-52-1-159-248.compute-1.amazonaws.com\",\n    user    : \"root\",\n    password: \"root\",\n    port    : 3306,\n    database: \"picture_this\",\n  });\n\n  //Open connection to database\n  conn.connect(function(err) {\n    if(err) {\n      console.error(err.stack);\n      res.json({error: \"Failed to connect to database\"})\n      conn.end();\n      return;\n    }\n    conn.query(\"INSERT INTO user (username, password) VALUES ('\"+username+\"', '\"+password+\"')\", function (err, result) {\n      if(err) {\n        //Duplicate code\n        if(err.code === \"ER_DUP_ENTRY\") {\n          res.json({error: \"Username already exists.\"});\n        }else{\n          console.error(\"********Failed to insert user**********\");\n          console.error(err.code);\n          res.json({error: \"Failed to insert user to table\"});\n        }\n        return;\n      }\n      res.json({user_id: result.insertId});\n      console.log(result);\n    });\n    conn.end();\n  });\n\n\n});\n\nmodule.exports = router;\n"], "filenames": ["routes/user.js"], "buggy_code_start_loc": [21], "buggy_code_end_loc": [52], "fixing_code_start_loc": [20], "fixing_code_end_loc": [55], "type": "CWE-89", "message": "A vulnerability was found in PictureThisWebServer and classified as critical. This issue affects the function router.post of the file routes/user.js. The manipulation of the argument username/password leads to sql injection. The name of the patch is 68b9dc346e88b494df00d88c7d058e96820e1479. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218399.", "other": {"cve": {"id": "CVE-2015-10055", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-16T18:15:10.310", "lastModified": "2023-01-24T19:35:21.713", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in PictureThisWebServer and classified as critical. This issue affects the function router.post of the file routes/user.js. The manipulation of the argument username/password leads to sql injection. The name of the patch is 68b9dc346e88b494df00d88c7d058e96820e1479. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218399."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:picturethiswebserver_project:picturethiswebserver:*:*:*:*:*:*:*:*", "versionEndExcluding": "2015-02-23", "matchCriteriaId": "CB5F950D-2AE8-4D6D-A320-C6ACDA959166"}]}]}], "references": [{"url": "https://github.com/jan-rodriguez/PictureThisWebServer/commit/68b9dc346e88b494df00d88c7d058e96820e1479", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/jan-rodriguez/PictureThisWebServer/pull/1", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.218399", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.218399", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jan-rodriguez/PictureThisWebServer/commit/68b9dc346e88b494df00d88c7d058e96820e1479"}}