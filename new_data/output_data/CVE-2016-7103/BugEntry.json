{"buggy_code": ["define( [\n\t\"jquery\",\n\t\"./helper\",\n\t\"ui/widgets/dialog\",\n\t\"ui/effects/effect-blind\",\n\t\"ui/effects/effect-explode\"\n], function( $, testHelper ) {\n\nmodule( \"dialog: options\" );\n\ntest( \"appendTo\", function() {\n\texpect( 16 );\n\tvar detached = $( \"<div>\" ),\n\t\telement = $( \"#dialog1\" ).dialog( {\n\t\t\tmodal: true\n\t\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], document.body, \"defaults to body\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], document.body, \"overlay defaults to body\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: \".wrap\",\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"first found element\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"overlay first found element\" );\n\tequal( $( \"#wrap2 .ui-dialog\" ).length, 0, \"only appends to one element\" );\n\tequal( $( \"#wrap2 .ui-widget-overlay\" ).length, 0, \"overlay only appends to one element\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: null,\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], document.body, \"null\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], document.body, \"overlay null\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tautoOpen: false,\n\t\tmodal: true\n\t} ).dialog( \"option\", \"appendTo\", \"#wrap1\" ).dialog( \"open\" );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"modified after init\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"overlay modified after init\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: detached,\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], detached[ 0 ], \"detached jQuery object\" );\n\tequal( detached.find( \".ui-widget-overlay\" ).parent()[ 0 ], detached[ 0 ], \"overlay detached jQuery object\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: detached[ 0 ],\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], detached[ 0 ], \"detached DOM element\" );\n\tequal( detached.find( \".ui-widget-overlay\" ).parent()[ 0 ], detached[ 0 ], \"overlay detached DOM element\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tautoOpen: false,\n\t\tmodal: true\n\t} ).dialog( \"option\", \"appendTo\", detached );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], detached[ 0 ], \"detached DOM element via option()\" );\n\tequal( detached.find( \".ui-widget-overlay\" ).length, 0, \"overlay detached DOM element via option()\" );\n\telement.dialog( \"destroy\" );\n} );\n\ntest( \"autoOpen\", function() {\n\texpect( 2 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { autoOpen: false } );\n\tok( !element.dialog( \"widget\" ).is( \":visible\" ), \".dialog({ autoOpen: false })\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { autoOpen: true } );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ), \".dialog({ autoOpen: true })\" );\n\telement.remove();\n} );\n\ntest( \"buttons\", function( assert ) {\n\texpect( 21 );\n\n\tvar btn, i, newButtons,\n\t\tbuttons = {\n\t\t\t\"Ok\": function( ev ) {\n\t\t\t\tok( true, \"button click fires callback\" );\n\t\t\t\tequal( this, element[ 0 ], \"context of callback\" );\n\t\t\t\tequal( ev.target, btn[ 0 ], \"event target\" );\n\t\t\t},\n\t\t\t\"Cancel\": function( ev ) {\n\t\t\t\tok( true, \"button click fires callback\" );\n\t\t\t\tequal( this, element[ 0 ], \"context of callback\" );\n\t\t\t\tequal( ev.target, btn[ 1 ], \"event target\" );\n\t\t\t}\n\t\t},\n\t\telement = $( \"<div></div>\" ).dialog( { buttons: buttons } );\n\n\tbtn = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( btn.length, 2, \"number of buttons\" );\n\n\ti = 0;\n\t$.each( buttons, function( key ) {\n\t\tequal( btn.eq( i ).text(), key, \"text of button \" + ( i + 1 ) );\n\t\ti++;\n\t} );\n\n\tassert.hasClasses( btn.parent(), \"ui-dialog-buttonset\" );\n\tassert.hasClasses( element.parent(), \"ui-dialog-buttons\" );\n\n\tbtn.trigger( \"click\" );\n\n\tnewButtons = {\n\t\t\"Close\": function( ev ) {\n\t\t\tok( true, \"button click fires callback\" );\n\t\t\tequal( this, element[ 0 ], \"context of callback\" );\n\t\t\tequal( ev.target, btn[ 0 ], \"event target\" );\n\t\t}\n\t};\n\n\tdeepEqual( element.dialog( \"option\", \"buttons\" ), buttons, \".dialog('option', 'buttons') getter\" );\n\telement.dialog( \"option\", \"buttons\", newButtons );\n\tdeepEqual( element.dialog( \"option\", \"buttons\" ), newButtons, \".dialog('option', 'buttons', ...) setter\" );\n\n\tbtn = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( btn.length, 1, \"number of buttons after setter\" );\n\tbtn.trigger( \"click\" );\n\n\ti = 0;\n\t$.each( newButtons, function( key ) {\n\t\tequal( btn.eq( i ).text(), key, \"text of button \" + ( i + 1 ) );\n\t\ti += 1;\n\t} );\n\n\telement.dialog( \"option\", \"buttons\", null );\n\tbtn = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( btn.length, 0, \"all buttons have been removed\" );\n\tequal( element.find( \".ui-dialog-buttonset\" ).length, 0, \"buttonset has been removed\" );\n\tassert.lacksClasses( element.parent(), \"ui-dialog-buttons\" );\n\telement.remove();\n} );\n\ntest( \"buttons - advanced\", function( assert ) {\n\texpect( 7 );\n\n\tvar buttons,\n\t\telement = $( \"<div></div>\" ).dialog( {\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: \"a button\",\n\t\t\t\t\t\"class\": \"additional-class\",\n\t\t\t\t\tid: \"my-button-id\",\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\tequal( this, element[ 0 ], \"correct context\" );\n\t\t\t\t\t},\n\t\t\t\t\ticon: \"ui-icon-cancel\",\n\t\t\t\t\tshowLabel: false\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\tbuttons = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( buttons.length, 1, \"correct number of buttons\" );\n\tequal( buttons.attr( \"id\" ), \"my-button-id\", \"correct id\" );\n\tequal( $.trim( buttons.text() ), \"a button\", \"correct label\" );\n\tassert.hasClasses( buttons, \"additional-class\" );\n\tdeepEqual( buttons.button( \"option\", \"icon\" ), \"ui-icon-cancel\" );\n\tequal( buttons.button( \"option\", \"showLabel\" ), false );\n\tbuttons.trigger( \"click\" );\n\n\telement.remove();\n} );\n\ntest( \"#9043: buttons with Array.prototype modification\", function() {\n\texpect( 1 );\n\tArray.prototype.test = $.noop;\n\tvar element = $( \"<div></div>\" ).dialog();\n\tequal( element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane\" ).length, 0,\n\t\t\"no button pane\" );\n\telement.remove();\n\tdelete Array.prototype.test;\n} );\n\ntest( \"closeOnEscape\", function() {\n\texpect( 6 );\n\tvar element = $( \"<div></div>\" ).dialog( { closeOnEscape: false } );\n\tok( true, \"closeOnEscape: false\" );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ) && !element.dialog( \"widget\" ).is( \":hidden\" ), \"dialog is open before ESC\" );\n\telement.simulate( \"keydown\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keypress\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keyup\", { keyCode: $.ui.keyCode.ESCAPE } );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ) && !element.dialog( \"widget\" ).is( \":hidden\" ), \"dialog is open after ESC\" );\n\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { closeOnEscape: true } );\n\tok( true, \"closeOnEscape: true\" );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ) && !element.dialog( \"widget\" ).is( \":hidden\" ), \"dialog is open before ESC\" );\n\telement.simulate( \"keydown\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keypress\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keyup\", { keyCode: $.ui.keyCode.ESCAPE } );\n\tok( element.dialog( \"widget\" ).is( \":hidden\" ) && !element.dialog( \"widget\" ).is( \":visible\" ), \"dialog is closed after ESC\" );\n} );\n\ntest( \"closeText\", function() {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"Close\",\n\t\t\t\"default close text\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { closeText: \"foo\" } );\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"foo\",\n\t\t\t\"closeText on init\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog().dialog( \"option\", \"closeText\", \"bar\" );\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"bar\",\n\t\t\t\"closeText via option method\" );\n\telement.remove();\n} );\n\ntest( \"draggable\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { draggable: false } );\n\n\t\ttestHelper.testDrag( element, 50, -50, 0, 0 );\n\t\telement.dialog( \"option\", \"draggable\", true );\n\t\ttestHelper.testDrag( element, 50, -50, 50, -50 );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { draggable: true } );\n\t\ttestHelper.testDrag( element, 50, -50, 50, -50 );\n\t\telement.dialog( \"option\", \"draggable\", false );\n\t\ttestHelper.testDrag( element, 50, -50, 0, 0 );\n\telement.remove();\n} );\n\ntest( \"height\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 150, \"default height\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { height: 237 } );\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 237, \"explicit height\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog();\n\t\telement.dialog( \"option\", \"height\", 238 );\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 238, \"explicit height set after init\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).css( \"padding\", \"20px\" )\n\t\t.dialog( { height: 240 } );\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 240, \"explicit height with padding\" );\n\telement.remove();\n} );\n\ntest( \"maxHeight\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { maxHeight: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-s\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 200, 1, \"maxHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxHeight: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-n\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 200, 1, \"maxHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxHeight: 200 } ).dialog( \"option\", \"maxHeight\", 300 );\n\t\ttestHelper.drag( element, \".ui-resizable-s\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 300, 1, \"maxHeight\" );\n\telement.remove();\n} );\n\ntest( \"maxWidth\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { maxWidth: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-e\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 200, 1, \"maxWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxWidth: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 200, 1, \"maxWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxWidth: 200 } ).dialog( \"option\", \"maxWidth\", 300 );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 300, 1, \"maxWidth\" );\n\telement.remove();\n} );\n\ntest( \"minHeight\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { minHeight: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-s\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 10, 1, \"minHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minHeight: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-n\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 10, 1, \"minHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minHeight: 10 } ).dialog( \"option\", \"minHeight\", 30 );\n\t\ttestHelper.drag( element, \".ui-resizable-n\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 30, 1, \"minHeight\" );\n\telement.remove();\n} );\n\ntest( \"minWidth\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { minWidth: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-e\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 10, 1, \"minWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minWidth: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 10, 1, \"minWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minWidth: 30 } ).dialog( \"option\", \"minWidth\", 30 );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 30, 1, \"minWidth\" );\n\telement.remove();\n} );\n\ntest( \"position, default center on window\", function( assert ) {\n\texpect( 2 );\n\n\t// Dialogs alter the window width and height in Firefox\n\t// so we collect that information before creating the dialog\n\t// Support: Firefox\n\tvar winWidth = $( window ).width(),\n\t\twinHeight = $( window ).height(),\n\t\telement = $( \"<div></div>\" ).dialog(),\n\t\tdialog = element.dialog( \"widget\" ),\n\t\toffset = dialog.offset();\n\tassert.close( offset.left, Math.round( winWidth / 2 - dialog.outerWidth() / 2 ) + $( window ).scrollLeft(), 1, \"dialog left position of center on window on initilization\" );\n\tassert.close( offset.top, Math.round( winHeight / 2 - dialog.outerHeight() / 2 ) + $( window ).scrollTop(), 1, \"dialog top position of center on window on initilization\" );\n\telement.remove();\n} );\n\ntest( \"position, right bottom at right bottom via ui.position args\", function( assert ) {\n\texpect( 2 );\n\n\t// Dialogs alter the window width and height in Firefox\n\t// so we collect that information before creating the dialog\n\t// Support: Firefox\n\tvar winWidth = $( window ).width(),\n\t\twinHeight = $( window ).height(),\n\t\telement = $( \"<div></div>\" ).dialog( {\n\t\t\tposition: {\n\t\t\t\tmy: \"right bottom\",\n\t\t\t\tat: \"right bottom\"\n\t\t\t}\n\t\t} ),\n\t\tdialog = element.dialog( \"widget\" ),\n\t\toffset = dialog.offset();\n\n\tassert.close( offset.left, winWidth - dialog.outerWidth() + $( window ).scrollLeft(), 1, \"dialog left position of right bottom at right bottom on initilization\" );\n\tassert.close( offset.top, winHeight - dialog.outerHeight() + $( window ).scrollTop(), 1, \"dialog top position of right bottom at right bottom on initilization\" );\n\telement.remove();\n} );\n\ntest( \"position, at another element\", function( assert ) {\n\texpect( 4 );\n\tvar parent = $( \"<div></div>\" ).css( {\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 400,\n\t\t\tleft: 600,\n\t\t\theight: 10,\n\t\t\twidth: 10\n\t\t} ).appendTo( \"body\" ),\n\n\t\telement = $( \"<div></div>\" ).dialog( {\n\t\t\tposition: {\n\t\t\t\tmy: \"left top\",\n\t\t\t\tat: \"left top\",\n\t\t\t\tof: parent,\n\t\t\t\tcollision: \"none\"\n\t\t\t}\n\t\t} ),\n\n\t\tdialog = element.dialog( \"widget\" ),\n\t\toffset = dialog.offset();\n\n\tassert.close( offset.left, 600, 1, \"dialog left position at another element on initilization\" );\n\tassert.close( offset.top, 400, 1, \"dialog top position at another element on initilization\" );\n\n\telement.dialog( \"option\", \"position\", {\n\t\t\tmy: \"left top\",\n\t\t\tat: \"right bottom\",\n\t\t\tof: parent,\n\t\t\tcollision: \"none\"\n\t} );\n\n\toffset = dialog.offset();\n\n\tassert.close( offset.left, 610, 1, \"dialog left position at another element via setting option\" );\n\tassert.close( offset.top, 410, 1, \"dialog top position at another element via setting option\" );\n\n\telement.remove();\n\tparent.remove();\n} );\n\ntest( \"resizable\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\ttestHelper.shouldResize( element, 50, 50, \"[default]\" );\n\t\telement.dialog( \"option\", \"resizable\", false );\n\t\ttestHelper.shouldResize( element, 0, 0, \"disabled after init\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { resizable: false } );\n\t\ttestHelper.shouldResize( element, 0, 0, \"disabled in init options\" );\n\t\telement.dialog( \"option\", \"resizable\", true );\n\t\ttestHelper.shouldResize( element, 50, 50, \"enabled after init\" );\n\telement.remove();\n} );\n\ntest( \"title\", function() {\n\texpect( 11 );\n\n\tfunction titleText() {\n\t\treturn element.dialog( \"widget\" ).find( \".ui-dialog-title\" ).html();\n\t}\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\n\t\t// some browsers return a non-breaking space and some return \"&nbsp;\"\n\t\t// so we generate a non-breaking space for comparison\n\t\tequal( titleText(), $( \"<span>&#160;</span>\" ).html(), \"[default]\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), null, \"option not changed\" );\n\telement.remove();\n\n\telement = $( \"<div title='foo'>\" ).dialog();\n\t\tequal( titleText(), \"foo\", \"title in element attribute\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), \"foo\", \"option updated from attribute\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { title: \"foo\" } );\n\t\tequal( titleText(), \"foo\", \"title in init options\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), \"foo\", \"opiton set from options hash\" );\n\telement.remove();\n\n\telement = $( \"<div title='foo'>\" ).dialog( { title: \"bar\" } );\n\t\tequal( titleText(), \"bar\", \"title in init options should override title in element attribute\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), \"bar\", \"opiton set from options hash\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog().dialog( \"option\", \"title\", \"foo\" );\n\t\tequal( titleText(), \"foo\", \"title after init\" );\n\telement.remove();\n\n\t// Make sure attroperties are properly ignored - #5742 - .attr() might return a DOMElement\n\telement = $( \"<form><input name='title'></form>\" ).dialog();\n\n\t\t// some browsers return a non-breaking space and some return \"&nbsp;\"\n\t\t// so we get the text to normalize to the actual non-breaking space\n\t\tequal( titleText(), $( \"<span>&#160;</span>\" ).html(), \"[default]\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), null, \"option not changed\" );\n\telement.remove();\n} );\n\ntest( \"width\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\tassert.close( element.dialog( \"widget\" ).width(), 300, 1, \"default width\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { width: 437 } );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 437, 1, \"explicit width\" );\n\t\telement.dialog( \"option\", \"width\", 438 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 438, 1, \"explicit width after init\" );\n\telement.remove();\n} );\n\ntest( \"#4826: setting resizable false toggles resizable on dialog\", function() {\n\texpect( 6 );\n\tvar i,\n\t\telement = $( \"<div></div>\" ).dialog( { resizable: false } );\n\n\ttestHelper.shouldResize( element, 0, 0, \"[default]\" );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\telement.dialog( \"close\" ).dialog( \"open\" );\n\t\ttestHelper.shouldResize( element, 0, 0, \"initialized with resizable false toggle (\" + ( i + 1 ) + \")\" );\n\t}\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { resizable: true } );\n\ttestHelper.shouldResize( element, 50, 50, \"[default]\" );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\telement.dialog( \"close\" ).dialog( \"option\", \"resizable\", false ).dialog( \"open\" );\n\t\ttestHelper.shouldResize( element, 0, 0, \"set option resizable false toggle (\" + ( i + 1 ) + \")\" );\n\t}\n\telement.remove();\n\n} );\n\nasyncTest( \"#8051 - 'Explode' dialog animation causes crash in IE 6, 7 and 8\", function() {\n\texpect( 1 );\n\tvar element = $( \"<div></div>\" ).dialog( {\n\t\tshow: \"explode\",\n\t\tfocus: function() {\n\t\t\tok( true, \"dialog opened with animation\" );\n\t\t\telement.remove();\n\t\t\tstart();\n\t\t}\n\t} );\n} );\n\nasyncTest( \"#4421 - Focus lost from dialog which uses show-effect\", function() {\n\texpect( 1 );\n\tvar element = $( \"<div></div>\" ).dialog( {\n\t\tshow: \"blind\",\n\t\tfocus: function() {\n\t\t\tequal( element.dialog( \"widget\" ).find( document.activeElement ).length, 1, \"dialog maintains focus\" );\n\t\t\telement.remove();\n\t\t\tstart();\n\t\t}\n\t} );\n} );\n\nasyncTest( \"Open followed by close during show effect\", function() {\n\texpect( 1 );\n\tvar element = $( \"<div></div>\" ).dialog( {\n\t\tshow: \"blind\",\n\t\tclose: function() {\n\t\t\tok( true, \"dialog closed properly during animation\" );\n\t\t\telement.remove();\n\t\t\tstart();\n\t\t}\n\t} );\n\n\tsetTimeout( function() {\n\t\telement.dialog( \"close\" );\n\t}, 100 );\n} );\n\n} );\n", "/*!\n * jQuery UI Dialog @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Dialog\n//>>group: Widgets\n//>>description: Displays customizable dialog windows.\n//>>docs: http://api.jqueryui.com/dialog/\n//>>demos: http://jqueryui.com/dialog/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/dialog.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./button\",\n\t\t\t\"./draggable\",\n\t\t\t\"./mouse\",\n\t\t\t\"./resizable\",\n\t\t\t\"../focusable\",\n\t\t\t\"../keycode\",\n\t\t\t\"../position\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../safe-blur\",\n\t\t\t\"../tabbable\",\n\t\t\t\"../unique-id\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.dialog\", {\n\tversion: \"@VERSION\",\n\toptions: {\n\t\tappendTo: \"body\",\n\t\tautoOpen: true,\n\t\tbuttons: [],\n\t\tclasses: {\n\t\t\t\"ui-dialog\": \"ui-corner-all\",\n\t\t\t\"ui-dialog-titlebar\": \"ui-corner-all\"\n\t\t},\n\t\tcloseOnEscape: true,\n\t\tcloseText: \"Close\",\n\t\tdraggable: true,\n\t\thide: null,\n\t\theight: \"auto\",\n\t\tmaxHeight: null,\n\t\tmaxWidth: null,\n\t\tminHeight: 150,\n\t\tminWidth: 150,\n\t\tmodal: false,\n\t\tposition: {\n\t\t\tmy: \"center\",\n\t\t\tat: \"center\",\n\t\t\tof: window,\n\t\t\tcollision: \"fit\",\n\n\t\t\t// Ensure the titlebar is always visible\n\t\t\tusing: function( pos ) {\n\t\t\t\tvar topOffset = $( this ).css( pos ).offset().top;\n\t\t\t\tif ( topOffset < 0 ) {\n\t\t\t\t\t$( this ).css( \"top\", pos.top - topOffset );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tresizable: true,\n\t\tshow: null,\n\t\ttitle: null,\n\t\twidth: 300,\n\n\t\t// Callbacks\n\t\tbeforeClose: null,\n\t\tclose: null,\n\t\tdrag: null,\n\t\tdragStart: null,\n\t\tdragStop: null,\n\t\tfocus: null,\n\t\topen: null,\n\t\tresize: null,\n\t\tresizeStart: null,\n\t\tresizeStop: null\n\t},\n\n\tsizeRelatedOptions: {\n\t\tbuttons: true,\n\t\theight: true,\n\t\tmaxHeight: true,\n\t\tmaxWidth: true,\n\t\tminHeight: true,\n\t\tminWidth: true,\n\t\twidth: true\n\t},\n\n\tresizableRelatedOptions: {\n\t\tmaxHeight: true,\n\t\tmaxWidth: true,\n\t\tminHeight: true,\n\t\tminWidth: true\n\t},\n\n\t_create: function() {\n\t\tthis.originalCss = {\n\t\t\tdisplay: this.element[ 0 ].style.display,\n\t\t\twidth: this.element[ 0 ].style.width,\n\t\t\tminHeight: this.element[ 0 ].style.minHeight,\n\t\t\tmaxHeight: this.element[ 0 ].style.maxHeight,\n\t\t\theight: this.element[ 0 ].style.height\n\t\t};\n\t\tthis.originalPosition = {\n\t\t\tparent: this.element.parent(),\n\t\t\tindex: this.element.parent().children().index( this.element )\n\t\t};\n\t\tthis.originalTitle = this.element.attr( \"title\" );\n\t\tif ( this.options.title == null && this.originalTitle != null ) {\n\t\t\tthis.options.title = this.originalTitle;\n\t\t}\n\n\t\t// Dialogs can't be disabled\n\t\tif ( this.options.disabled ) {\n\t\t\tthis.options.disabled = false;\n\t\t}\n\n\t\tthis._createWrapper();\n\n\t\tthis.element\n\t\t\t.show()\n\t\t\t.removeAttr( \"title\" )\n\t\t\t.appendTo( this.uiDialog );\n\n\t\tthis._addClass( \"ui-dialog-content\", \"ui-widget-content\" );\n\n\t\tthis._createTitlebar();\n\t\tthis._createButtonPane();\n\n\t\tif ( this.options.draggable && $.fn.draggable ) {\n\t\t\tthis._makeDraggable();\n\t\t}\n\t\tif ( this.options.resizable && $.fn.resizable ) {\n\t\t\tthis._makeResizable();\n\t\t}\n\n\t\tthis._isOpen = false;\n\n\t\tthis._trackFocus();\n\t},\n\n\t_init: function() {\n\t\tif ( this.options.autoOpen ) {\n\t\t\tthis.open();\n\t\t}\n\t},\n\n\t_appendTo: function() {\n\t\tvar element = this.options.appendTo;\n\t\tif ( element && ( element.jquery || element.nodeType ) ) {\n\t\t\treturn $( element );\n\t\t}\n\t\treturn this.document.find( element || \"body\" ).eq( 0 );\n\t},\n\n\t_destroy: function() {\n\t\tvar next,\n\t\t\toriginalPosition = this.originalPosition;\n\n\t\tthis._untrackInstance();\n\t\tthis._destroyOverlay();\n\n\t\tthis.element\n\t\t\t.removeUniqueId()\n\t\t\t.css( this.originalCss )\n\n\t\t\t// Without detaching first, the following becomes really slow\n\t\t\t.detach();\n\n\t\tthis.uiDialog.remove();\n\n\t\tif ( this.originalTitle ) {\n\t\t\tthis.element.attr( \"title\", this.originalTitle );\n\t\t}\n\n\t\tnext = originalPosition.parent.children().eq( originalPosition.index );\n\n\t\t// Don't try to place the dialog next to itself (#8613)\n\t\tif ( next.length && next[ 0 ] !== this.element[ 0 ] ) {\n\t\t\tnext.before( this.element );\n\t\t} else {\n\t\t\toriginalPosition.parent.append( this.element );\n\t\t}\n\t},\n\n\twidget: function() {\n\t\treturn this.uiDialog;\n\t},\n\n\tdisable: $.noop,\n\tenable: $.noop,\n\n\tclose: function( event ) {\n\t\tvar that = this;\n\n\t\tif ( !this._isOpen || this._trigger( \"beforeClose\", event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isOpen = false;\n\t\tthis._focusedElement = null;\n\t\tthis._destroyOverlay();\n\t\tthis._untrackInstance();\n\n\t\tif ( !this.opener.filter( \":focusable\" ).trigger( \"focus\" ).length ) {\n\n\t\t\t// Hiding a focused element doesn't trigger blur in WebKit\n\t\t\t// so in case we have nothing to focus on, explicitly blur the active element\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=47182\n\t\t\t$.ui.safeBlur( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\t\t}\n\n\t\tthis._hide( this.uiDialog, this.options.hide, function() {\n\t\t\tthat._trigger( \"close\", event );\n\t\t} );\n\t},\n\n\tisOpen: function() {\n\t\treturn this._isOpen;\n\t},\n\n\tmoveToTop: function() {\n\t\tthis._moveToTop();\n\t},\n\n\t_moveToTop: function( event, silent ) {\n\t\tvar moved = false,\n\t\t\tzIndices = this.uiDialog.siblings( \".ui-front:visible\" ).map( function() {\n\t\t\t\treturn +$( this ).css( \"z-index\" );\n\t\t\t} ).get(),\n\t\t\tzIndexMax = Math.max.apply( null, zIndices );\n\n\t\tif ( zIndexMax >= +this.uiDialog.css( \"z-index\" ) ) {\n\t\t\tthis.uiDialog.css( \"z-index\", zIndexMax + 1 );\n\t\t\tmoved = true;\n\t\t}\n\n\t\tif ( moved && !silent ) {\n\t\t\tthis._trigger( \"focus\", event );\n\t\t}\n\t\treturn moved;\n\t},\n\n\topen: function() {\n\t\tvar that = this;\n\t\tif ( this._isOpen ) {\n\t\t\tif ( this._moveToTop() ) {\n\t\t\t\tthis._focusTabbable();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isOpen = true;\n\t\tthis.opener = $( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\n\t\tthis._size();\n\t\tthis._position();\n\t\tthis._createOverlay();\n\t\tthis._moveToTop( null, true );\n\n\t\t// Ensure the overlay is moved to the top with the dialog, but only when\n\t\t// opening. The overlay shouldn't move after the dialog is open so that\n\t\t// modeless dialogs opened after the modal dialog stack properly.\n\t\tif ( this.overlay ) {\n\t\t\tthis.overlay.css( \"z-index\", this.uiDialog.css( \"z-index\" ) - 1 );\n\t\t}\n\n\t\tthis._show( this.uiDialog, this.options.show, function() {\n\t\t\tthat._focusTabbable();\n\t\t\tthat._trigger( \"focus\" );\n\t\t} );\n\n\t\t// Track the dialog immediately upon openening in case a focus event\n\t\t// somehow occurs outside of the dialog before an element inside the\n\t\t// dialog is focused (#10152)\n\t\tthis._makeFocusTarget();\n\n\t\tthis._trigger( \"open\" );\n\t},\n\n\t_focusTabbable: function() {\n\n\t\t// Set focus to the first match:\n\t\t// 1. An element that was focused previously\n\t\t// 2. First element inside the dialog matching [autofocus]\n\t\t// 3. Tabbable element inside the content element\n\t\t// 4. Tabbable element inside the buttonpane\n\t\t// 5. The close button\n\t\t// 6. The dialog itself\n\t\tvar hasFocus = this._focusedElement;\n\t\tif ( !hasFocus ) {\n\t\t\thasFocus = this.element.find( \"[autofocus]\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.element.find( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialogButtonPane.find( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialogTitlebarClose.filter( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialog;\n\t\t}\n\t\thasFocus.eq( 0 ).trigger( \"focus\" );\n\t},\n\n\t_keepFocus: function( event ) {\n\t\tfunction checkFocus() {\n\t\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\n\t\t\t\tisActive = this.uiDialog[ 0 ] === activeElement ||\n\t\t\t\t\t$.contains( this.uiDialog[ 0 ], activeElement );\n\t\t\tif ( !isActive ) {\n\t\t\t\tthis._focusTabbable();\n\t\t\t}\n\t\t}\n\t\tevent.preventDefault();\n\t\tcheckFocus.call( this );\n\n\t\t// support: IE\n\t\t// IE <= 8 doesn't prevent moving focus even with event.preventDefault()\n\t\t// so we check again later\n\t\tthis._delay( checkFocus );\n\t},\n\n\t_createWrapper: function() {\n\t\tthis.uiDialog = $( \"<div>\" )\n\t\t\t.hide()\n\t\t\t.attr( {\n\n\t\t\t\t// Setting tabIndex makes the div focusable\n\t\t\t\ttabIndex: -1,\n\t\t\t\trole: \"dialog\"\n\t\t\t} )\n\t\t\t.appendTo( this._appendTo() );\n\n\t\tthis._addClass( this.uiDialog, \"ui-dialog\", \"ui-widget ui-widget-content ui-front\" );\n\t\tthis._on( this.uiDialog, {\n\t\t\tkeydown: function( event ) {\n\t\t\t\tif ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\n\t\t\t\t\t\tevent.keyCode === $.ui.keyCode.ESCAPE ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.close( event );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prevent tabbing out of dialogs\n\t\t\t\tif ( event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar tabbables = this.uiDialog.find( \":tabbable\" ),\n\t\t\t\t\tfirst = tabbables.filter( \":first\" ),\n\t\t\t\t\tlast = tabbables.filter( \":last\" );\n\n\t\t\t\tif ( ( event.target === last[ 0 ] || event.target === this.uiDialog[ 0 ] ) && !event.shiftKey ) {\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tfirst.trigger( \"focus\" );\n\t\t\t\t\t} );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else if ( ( event.target === first[ 0 ] || event.target === this.uiDialog[ 0 ] ) && event.shiftKey ) {\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tlast.trigger( \"focus\" );\n\t\t\t\t\t} );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\tmousedown: function( event ) {\n\t\t\t\tif ( this._moveToTop( event ) ) {\n\t\t\t\t\tthis._focusTabbable();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// We assume that any existing aria-describedby attribute means\n\t\t// that the dialog content is marked up properly\n\t\t// otherwise we brute force the content as the description\n\t\tif ( !this.element.find( \"[aria-describedby]\" ).length ) {\n\t\t\tthis.uiDialog.attr( {\n\t\t\t\t\"aria-describedby\": this.element.uniqueId().attr( \"id\" )\n\t\t\t} );\n\t\t}\n\t},\n\n\t_createTitlebar: function() {\n\t\tvar uiDialogTitle;\n\n\t\tthis.uiDialogTitlebar = $( \"<div>\" );\n\t\tthis._addClass( this.uiDialogTitlebar,\n\t\t\t\"ui-dialog-titlebar\", \"ui-widget-header ui-helper-clearfix\" );\n\t\tthis._on( this.uiDialogTitlebar, {\n\t\t\tmousedown: function( event ) {\n\n\t\t\t\t// Don't prevent click on close button (#8838)\n\t\t\t\t// Focusing a dialog that is partially scrolled out of view\n\t\t\t\t// causes the browser to scroll it into view, preventing the click event\n\t\t\t\tif ( !$( event.target ).closest( \".ui-dialog-titlebar-close\" ) ) {\n\n\t\t\t\t\t// Dialog isn't getting focus when dragging (#8063)\n\t\t\t\t\tthis.uiDialog.trigger( \"focus\" );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Support: IE\n\t\t// Use type=\"button\" to prevent enter keypresses in textboxes from closing the\n\t\t// dialog in IE (#9312)\n\t\tthis.uiDialogTitlebarClose = $( \"<button type='button'></button>\" )\n\t\t\t.button( {\n\t\t\t\tlabel: this.options.closeText,\n\t\t\t\ticon: \"ui-icon-closethick\",\n\t\t\t\tshowLabel: false\n\t\t\t} )\n\t\t\t.appendTo( this.uiDialogTitlebar );\n\n\t\tthis._addClass( this.uiDialogTitlebarClose, \"ui-dialog-titlebar-close\" );\n\t\tthis._on( this.uiDialogTitlebarClose, {\n\t\t\tclick: function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.close( event );\n\t\t\t}\n\t\t} );\n\n\t\tuiDialogTitle = $( \"<span>\" ).uniqueId().prependTo( this.uiDialogTitlebar );\n\t\tthis._addClass( uiDialogTitle, \"ui-dialog-title\" );\n\t\tthis._title( uiDialogTitle );\n\n\t\tthis.uiDialogTitlebar.prependTo( this.uiDialog );\n\n\t\tthis.uiDialog.attr( {\n\t\t\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\n\t\t} );\n\t},\n\n\t_title: function( title ) {\n\t\tif ( this.options.title ) {\n\t\t\ttitle.text( this.options.title );\n\t\t} else {\n\t\t\ttitle.html( \"&#160;\" );\n\t\t}\n\t},\n\n\t_createButtonPane: function() {\n\t\tthis.uiDialogButtonPane = $( \"<div>\" );\n\t\tthis._addClass( this.uiDialogButtonPane, \"ui-dialog-buttonpane\",\n\t\t\t\"ui-widget-content ui-helper-clearfix\" );\n\n\t\tthis.uiButtonSet = $( \"<div>\" )\n\t\t\t.appendTo( this.uiDialogButtonPane );\n\t\tthis._addClass( this.uiButtonSet, \"ui-dialog-buttonset\" );\n\n\t\tthis._createButtons();\n\t},\n\n\t_createButtons: function() {\n\t\tvar that = this,\n\t\t\tbuttons = this.options.buttons;\n\n\t\t// If we already have a button pane, remove it\n\t\tthis.uiDialogButtonPane.remove();\n\t\tthis.uiButtonSet.empty();\n\n\t\tif ( $.isEmptyObject( buttons ) || ( $.isArray( buttons ) && !buttons.length ) ) {\n\t\t\tthis._removeClass( this.uiDialog, \"ui-dialog-buttons\" );\n\t\t\treturn;\n\t\t}\n\n\t\t$.each( buttons, function( name, props ) {\n\t\t\tvar click, buttonOptions;\n\t\t\tprops = $.isFunction( props ) ?\n\t\t\t\t{ click: props, text: name } :\n\t\t\t\tprops;\n\n\t\t\t// Default to a non-submitting button\n\t\t\tprops = $.extend( { type: \"button\" }, props );\n\n\t\t\t// Change the context for the click callback to be the main element\n\t\t\tclick = props.click;\n\t\t\tbuttonOptions = {\n\t\t\t\ticon: props.icon,\n\t\t\t\ticonPosition: props.iconPosition,\n\t\t\t\tshowLabel: props.showLabel\n\t\t\t};\n\n\t\t\tdelete props.click;\n\t\t\tdelete props.icon;\n\t\t\tdelete props.iconPosition;\n\t\t\tdelete props.showLabel;\n\n\t\t\t$( \"<button></button>\", props )\n\t\t\t\t.button( buttonOptions )\n\t\t\t\t.appendTo( that.uiButtonSet )\n\t\t\t\t.on( \"click\", function() {\n\t\t\t\t\tclick.apply( that.element[ 0 ], arguments );\n\t\t\t\t} );\n\t\t} );\n\t\tthis._addClass( this.uiDialog, \"ui-dialog-buttons\" );\n\t\tthis.uiDialogButtonPane.appendTo( this.uiDialog );\n\t},\n\n\t_makeDraggable: function() {\n\t\tvar that = this,\n\t\t\toptions = this.options;\n\n\t\tfunction filteredUi( ui ) {\n\t\t\treturn {\n\t\t\t\tposition: ui.position,\n\t\t\t\toffset: ui.offset\n\t\t\t};\n\t\t}\n\n\t\tthis.uiDialog.draggable( {\n\t\t\tcancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\n\t\t\thandle: \".ui-dialog-titlebar\",\n\t\t\tcontainment: \"document\",\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-dragging\" );\n\t\t\t\tthat._blockFrames();\n\t\t\t\tthat._trigger( \"dragStart\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tdrag: function( event, ui ) {\n\t\t\t\tthat._trigger( \"drag\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar left = ui.offset.left - that.document.scrollLeft(),\n\t\t\t\t\ttop = ui.offset.top - that.document.scrollTop();\n\n\t\t\t\toptions.position = {\n\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\n\t\t\t\t\tof: that.window\n\t\t\t\t};\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-dragging\" );\n\t\t\t\tthat._unblockFrames();\n\t\t\t\tthat._trigger( \"dragStop\", event, filteredUi( ui ) );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_makeResizable: function() {\n\t\tvar that = this,\n\t\t\toptions = this.options,\n\t\t\thandles = options.resizable,\n\n\t\t\t// .ui-resizable has position: relative defined in the stylesheet\n\t\t\t// but dialogs have to use absolute or fixed positioning\n\t\t\tposition = this.uiDialog.css( \"position\" ),\n\t\t\tresizeHandles = typeof handles === \"string\" ?\n\t\t\t\thandles :\n\t\t\t\t\"n,e,s,w,se,sw,ne,nw\";\n\n\t\tfunction filteredUi( ui ) {\n\t\t\treturn {\n\t\t\t\toriginalPosition: ui.originalPosition,\n\t\t\t\toriginalSize: ui.originalSize,\n\t\t\t\tposition: ui.position,\n\t\t\t\tsize: ui.size\n\t\t\t};\n\t\t}\n\n\t\tthis.uiDialog.resizable( {\n\t\t\tcancel: \".ui-dialog-content\",\n\t\t\tcontainment: \"document\",\n\t\t\talsoResize: this.element,\n\t\t\tmaxWidth: options.maxWidth,\n\t\t\tmaxHeight: options.maxHeight,\n\t\t\tminWidth: options.minWidth,\n\t\t\tminHeight: this._minHeight(),\n\t\t\thandles: resizeHandles,\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-resizing\" );\n\t\t\t\tthat._blockFrames();\n\t\t\t\tthat._trigger( \"resizeStart\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tresize: function( event, ui ) {\n\t\t\t\tthat._trigger( \"resize\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar offset = that.uiDialog.offset(),\n\t\t\t\t\tleft = offset.left - that.document.scrollLeft(),\n\t\t\t\t\ttop = offset.top - that.document.scrollTop();\n\n\t\t\t\toptions.height = that.uiDialog.height();\n\t\t\t\toptions.width = that.uiDialog.width();\n\t\t\t\toptions.position = {\n\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\n\t\t\t\t\tof: that.window\n\t\t\t\t};\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-resizing\" );\n\t\t\t\tthat._unblockFrames();\n\t\t\t\tthat._trigger( \"resizeStop\", event, filteredUi( ui ) );\n\t\t\t}\n\t\t} )\n\t\t\t.css( \"position\", position );\n\t},\n\n\t_trackFocus: function() {\n\t\tthis._on( this.widget(), {\n\t\t\tfocusin: function( event ) {\n\t\t\t\tthis._makeFocusTarget();\n\t\t\t\tthis._focusedElement = $( event.target );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_makeFocusTarget: function() {\n\t\tthis._untrackInstance();\n\t\tthis._trackingInstances().unshift( this );\n\t},\n\n\t_untrackInstance: function() {\n\t\tvar instances = this._trackingInstances(),\n\t\t\texists = $.inArray( this, instances );\n\t\tif ( exists !== -1 ) {\n\t\t\tinstances.splice( exists, 1 );\n\t\t}\n\t},\n\n\t_trackingInstances: function() {\n\t\tvar instances = this.document.data( \"ui-dialog-instances\" );\n\t\tif ( !instances ) {\n\t\t\tinstances = [];\n\t\t\tthis.document.data( \"ui-dialog-instances\", instances );\n\t\t}\n\t\treturn instances;\n\t},\n\n\t_minHeight: function() {\n\t\tvar options = this.options;\n\n\t\treturn options.height === \"auto\" ?\n\t\t\toptions.minHeight :\n\t\t\tMath.min( options.minHeight, options.height );\n\t},\n\n\t_position: function() {\n\n\t\t// Need to show the dialog to get the actual offset in the position plugin\n\t\tvar isVisible = this.uiDialog.is( \":visible\" );\n\t\tif ( !isVisible ) {\n\t\t\tthis.uiDialog.show();\n\t\t}\n\t\tthis.uiDialog.position( this.options.position );\n\t\tif ( !isVisible ) {\n\t\t\tthis.uiDialog.hide();\n\t\t}\n\t},\n\n\t_setOptions: function( options ) {\n\t\tvar that = this,\n\t\t\tresize = false,\n\t\t\tresizableOptions = {};\n\n\t\t$.each( options, function( key, value ) {\n\t\t\tthat._setOption( key, value );\n\n\t\t\tif ( key in that.sizeRelatedOptions ) {\n\t\t\t\tresize = true;\n\t\t\t}\n\t\t\tif ( key in that.resizableRelatedOptions ) {\n\t\t\t\tresizableOptions[ key ] = value;\n\t\t\t}\n\t\t} );\n\n\t\tif ( resize ) {\n\t\t\tthis._size();\n\t\t\tthis._position();\n\t\t}\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\n\t\t\tthis.uiDialog.resizable( \"option\", resizableOptions );\n\t\t}\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tvar isDraggable, isResizable,\n\t\t\tuiDialog = this.uiDialog;\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"appendTo\" ) {\n\t\t\tthis.uiDialog.appendTo( this._appendTo() );\n\t\t}\n\n\t\tif ( key === \"buttons\" ) {\n\t\t\tthis._createButtons();\n\t\t}\n\n\t\tif ( key === \"closeText\" ) {\n\t\t\tthis.uiDialogTitlebarClose.button( {\n\n\t\t\t\t// Ensure that we always pass a string\n\t\t\t\tlabel: \"\" + value\n\t\t\t} );\n\t\t}\n\n\t\tif ( key === \"draggable\" ) {\n\t\t\tisDraggable = uiDialog.is( \":data(ui-draggable)\" );\n\t\t\tif ( isDraggable && !value ) {\n\t\t\t\tuiDialog.draggable( \"destroy\" );\n\t\t\t}\n\n\t\t\tif ( !isDraggable && value ) {\n\t\t\t\tthis._makeDraggable();\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"position\" ) {\n\t\t\tthis._position();\n\t\t}\n\n\t\tif ( key === \"resizable\" ) {\n\n\t\t\t// currently resizable, becoming non-resizable\n\t\t\tisResizable = uiDialog.is( \":data(ui-resizable)\" );\n\t\t\tif ( isResizable && !value ) {\n\t\t\t\tuiDialog.resizable( \"destroy\" );\n\t\t\t}\n\n\t\t\t// Currently resizable, changing handles\n\t\t\tif ( isResizable && typeof value === \"string\" ) {\n\t\t\t\tuiDialog.resizable( \"option\", \"handles\", value );\n\t\t\t}\n\n\t\t\t// Currently non-resizable, becoming resizable\n\t\t\tif ( !isResizable && value !== false ) {\n\t\t\t\tthis._makeResizable();\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"title\" ) {\n\t\t\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\n\t\t}\n\t},\n\n\t_size: function() {\n\n\t\t// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\n\t\t// divs will both have width and height set, so we need to reset them\n\t\tvar nonContentHeight, minContentHeight, maxContentHeight,\n\t\t\toptions = this.options;\n\n\t\t// Reset content sizing\n\t\tthis.element.show().css( {\n\t\t\twidth: \"auto\",\n\t\t\tminHeight: 0,\n\t\t\tmaxHeight: \"none\",\n\t\t\theight: 0\n\t\t} );\n\n\t\tif ( options.minWidth > options.width ) {\n\t\t\toptions.width = options.minWidth;\n\t\t}\n\n\t\t// Reset wrapper sizing\n\t\t// determine the height of all the non-content elements\n\t\tnonContentHeight = this.uiDialog.css( {\n\t\t\theight: \"auto\",\n\t\t\twidth: options.width\n\t\t} )\n\t\t\t.outerHeight();\n\t\tminContentHeight = Math.max( 0, options.minHeight - nonContentHeight );\n\t\tmaxContentHeight = typeof options.maxHeight === \"number\" ?\n\t\t\tMath.max( 0, options.maxHeight - nonContentHeight ) :\n\t\t\t\"none\";\n\n\t\tif ( options.height === \"auto\" ) {\n\t\t\tthis.element.css( {\n\t\t\t\tminHeight: minContentHeight,\n\t\t\t\tmaxHeight: maxContentHeight,\n\t\t\t\theight: \"auto\"\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.element.height( Math.max( 0, options.height - nonContentHeight ) );\n\t\t}\n\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\n\t\t\tthis.uiDialog.resizable( \"option\", \"minHeight\", this._minHeight() );\n\t\t}\n\t},\n\n\t_blockFrames: function() {\n\t\tthis.iframeBlocks = this.document.find( \"iframe\" ).map( function() {\n\t\t\tvar iframe = $( this );\n\n\t\t\treturn $( \"<div>\" )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: iframe.outerWidth(),\n\t\t\t\t\theight: iframe.outerHeight()\n\t\t\t\t} )\n\t\t\t\t.appendTo( iframe.parent() )\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\n\t\t} );\n\t},\n\n\t_unblockFrames: function() {\n\t\tif ( this.iframeBlocks ) {\n\t\t\tthis.iframeBlocks.remove();\n\t\t\tdelete this.iframeBlocks;\n\t\t}\n\t},\n\n\t_allowInteraction: function( event ) {\n\t\tif ( $( event.target ).closest( \".ui-dialog\" ).length ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: Remove hack when datepicker implements\n\t\t// the .ui-front logic (#8989)\n\t\treturn !!$( event.target ).closest( \".ui-datepicker\" ).length;\n\t},\n\n\t_createOverlay: function() {\n\t\tif ( !this.options.modal ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We use a delay in case the overlay is created from an\n\t\t// event that we're going to be cancelling (#2804)\n\t\tvar isOpening = true;\n\t\tthis._delay( function() {\n\t\t\tisOpening = false;\n\t\t} );\n\n\t\tif ( !this.document.data( \"ui-dialog-overlays\" ) ) {\n\n\t\t\t// Prevent use of anchors and inputs\n\t\t\t// Using _on() for an event handler shared across many instances is\n\t\t\t// safe because the dialogs stack and must be closed in reverse order\n\t\t\tthis._on( this.document, {\n\t\t\t\tfocusin: function( event ) {\n\t\t\t\t\tif ( isOpening ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !this._allowInteraction( event ) ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis._trackingInstances()[ 0 ]._focusTabbable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tthis.overlay = $( \"<div>\" )\n\t\t\t.appendTo( this._appendTo() );\n\n\t\tthis._addClass( this.overlay, null, \"ui-widget-overlay ui-front\" );\n\t\tthis._on( this.overlay, {\n\t\t\tmousedown: \"_keepFocus\"\n\t\t} );\n\t\tthis.document.data( \"ui-dialog-overlays\",\n\t\t\t( this.document.data( \"ui-dialog-overlays\" ) || 0 ) + 1 );\n\t},\n\n\t_destroyOverlay: function() {\n\t\tif ( !this.options.modal ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.overlay ) {\n\t\t\tvar overlays = this.document.data( \"ui-dialog-overlays\" ) - 1;\n\n\t\t\tif ( !overlays ) {\n\t\t\t\tthis._off( this.document, \"focusin\" );\n\t\t\t\tthis.document.removeData( \"ui-dialog-overlays\" );\n\t\t\t} else {\n\t\t\t\tthis.document.data( \"ui-dialog-overlays\", overlays );\n\t\t\t}\n\n\t\t\tthis.overlay.remove();\n\t\t\tthis.overlay = null;\n\t\t}\n\t}\n} );\n\n// DEPRECATED\n// TODO: switch return back to widget declaration at top of file when this is removed\nif ( $.uiBackCompat !== false ) {\n\n\t// Backcompat for dialogClass option\n\t$.widget( \"ui.dialog\", $.ui.dialog, {\n\t\toptions: {\n\t\t\tdialogClass: \"\"\n\t\t},\n\t\t_createWrapper: function() {\n\t\t\tthis._super();\n\t\t\tthis.uiDialog.addClass( this.options.dialogClass );\n\t\t},\n\t\t_setOption: function( key, value ) {\n\t\t\tif ( key === \"dialogClass\" ) {\n\t\t\t\tthis.uiDialog\n\t\t\t\t\t.removeClass( this.options.dialogClass )\n\t\t\t\t\t.addClass( value );\n\t\t\t}\n\t\t\tthis._superApply( arguments );\n\t\t}\n\t} );\n}\n\nreturn $.ui.dialog;\n\n} ) );\n"], "fixing_code": ["define( [\n\t\"jquery\",\n\t\"./helper\",\n\t\"ui/widgets/dialog\",\n\t\"ui/effects/effect-blind\",\n\t\"ui/effects/effect-explode\"\n], function( $, testHelper ) {\n\nmodule( \"dialog: options\" );\n\ntest( \"appendTo\", function() {\n\texpect( 16 );\n\tvar detached = $( \"<div>\" ),\n\t\telement = $( \"#dialog1\" ).dialog( {\n\t\t\tmodal: true\n\t\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], document.body, \"defaults to body\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], document.body, \"overlay defaults to body\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: \".wrap\",\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"first found element\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"overlay first found element\" );\n\tequal( $( \"#wrap2 .ui-dialog\" ).length, 0, \"only appends to one element\" );\n\tequal( $( \"#wrap2 .ui-widget-overlay\" ).length, 0, \"overlay only appends to one element\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: null,\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], document.body, \"null\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], document.body, \"overlay null\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tautoOpen: false,\n\t\tmodal: true\n\t} ).dialog( \"option\", \"appendTo\", \"#wrap1\" ).dialog( \"open\" );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"modified after init\" );\n\tequal( $( \".ui-widget-overlay\" ).parent()[ 0 ], $( \"#wrap1\" )[ 0 ], \"overlay modified after init\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: detached,\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], detached[ 0 ], \"detached jQuery object\" );\n\tequal( detached.find( \".ui-widget-overlay\" ).parent()[ 0 ], detached[ 0 ], \"overlay detached jQuery object\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tappendTo: detached[ 0 ],\n\t\tmodal: true\n\t} );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], detached[ 0 ], \"detached DOM element\" );\n\tequal( detached.find( \".ui-widget-overlay\" ).parent()[ 0 ], detached[ 0 ], \"overlay detached DOM element\" );\n\telement.dialog( \"destroy\" );\n\n\telement.dialog( {\n\t\tautoOpen: false,\n\t\tmodal: true\n\t} ).dialog( \"option\", \"appendTo\", detached );\n\tequal( element.dialog( \"widget\" ).parent()[ 0 ], detached[ 0 ], \"detached DOM element via option()\" );\n\tequal( detached.find( \".ui-widget-overlay\" ).length, 0, \"overlay detached DOM element via option()\" );\n\telement.dialog( \"destroy\" );\n} );\n\ntest( \"autoOpen\", function() {\n\texpect( 2 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { autoOpen: false } );\n\tok( !element.dialog( \"widget\" ).is( \":visible\" ), \".dialog({ autoOpen: false })\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { autoOpen: true } );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ), \".dialog({ autoOpen: true })\" );\n\telement.remove();\n} );\n\ntest( \"buttons\", function( assert ) {\n\texpect( 21 );\n\n\tvar btn, i, newButtons,\n\t\tbuttons = {\n\t\t\t\"Ok\": function( ev ) {\n\t\t\t\tok( true, \"button click fires callback\" );\n\t\t\t\tequal( this, element[ 0 ], \"context of callback\" );\n\t\t\t\tequal( ev.target, btn[ 0 ], \"event target\" );\n\t\t\t},\n\t\t\t\"Cancel\": function( ev ) {\n\t\t\t\tok( true, \"button click fires callback\" );\n\t\t\t\tequal( this, element[ 0 ], \"context of callback\" );\n\t\t\t\tequal( ev.target, btn[ 1 ], \"event target\" );\n\t\t\t}\n\t\t},\n\t\telement = $( \"<div></div>\" ).dialog( { buttons: buttons } );\n\n\tbtn = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( btn.length, 2, \"number of buttons\" );\n\n\ti = 0;\n\t$.each( buttons, function( key ) {\n\t\tequal( btn.eq( i ).text(), key, \"text of button \" + ( i + 1 ) );\n\t\ti++;\n\t} );\n\n\tassert.hasClasses( btn.parent(), \"ui-dialog-buttonset\" );\n\tassert.hasClasses( element.parent(), \"ui-dialog-buttons\" );\n\n\tbtn.trigger( \"click\" );\n\n\tnewButtons = {\n\t\t\"Close\": function( ev ) {\n\t\t\tok( true, \"button click fires callback\" );\n\t\t\tequal( this, element[ 0 ], \"context of callback\" );\n\t\t\tequal( ev.target, btn[ 0 ], \"event target\" );\n\t\t}\n\t};\n\n\tdeepEqual( element.dialog( \"option\", \"buttons\" ), buttons, \".dialog('option', 'buttons') getter\" );\n\telement.dialog( \"option\", \"buttons\", newButtons );\n\tdeepEqual( element.dialog( \"option\", \"buttons\" ), newButtons, \".dialog('option', 'buttons', ...) setter\" );\n\n\tbtn = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( btn.length, 1, \"number of buttons after setter\" );\n\tbtn.trigger( \"click\" );\n\n\ti = 0;\n\t$.each( newButtons, function( key ) {\n\t\tequal( btn.eq( i ).text(), key, \"text of button \" + ( i + 1 ) );\n\t\ti += 1;\n\t} );\n\n\telement.dialog( \"option\", \"buttons\", null );\n\tbtn = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( btn.length, 0, \"all buttons have been removed\" );\n\tequal( element.find( \".ui-dialog-buttonset\" ).length, 0, \"buttonset has been removed\" );\n\tassert.lacksClasses( element.parent(), \"ui-dialog-buttons\" );\n\telement.remove();\n} );\n\ntest( \"buttons - advanced\", function( assert ) {\n\texpect( 7 );\n\n\tvar buttons,\n\t\telement = $( \"<div></div>\" ).dialog( {\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: \"a button\",\n\t\t\t\t\t\"class\": \"additional-class\",\n\t\t\t\t\tid: \"my-button-id\",\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\tequal( this, element[ 0 ], \"correct context\" );\n\t\t\t\t\t},\n\t\t\t\t\ticon: \"ui-icon-cancel\",\n\t\t\t\t\tshowLabel: false\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\tbuttons = element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane button\" );\n\tequal( buttons.length, 1, \"correct number of buttons\" );\n\tequal( buttons.attr( \"id\" ), \"my-button-id\", \"correct id\" );\n\tequal( $.trim( buttons.text() ), \"a button\", \"correct label\" );\n\tassert.hasClasses( buttons, \"additional-class\" );\n\tdeepEqual( buttons.button( \"option\", \"icon\" ), \"ui-icon-cancel\" );\n\tequal( buttons.button( \"option\", \"showLabel\" ), false );\n\tbuttons.trigger( \"click\" );\n\n\telement.remove();\n} );\n\ntest( \"#9043: buttons with Array.prototype modification\", function() {\n\texpect( 1 );\n\tArray.prototype.test = $.noop;\n\tvar element = $( \"<div></div>\" ).dialog();\n\tequal( element.dialog( \"widget\" ).find( \".ui-dialog-buttonpane\" ).length, 0,\n\t\t\"no button pane\" );\n\telement.remove();\n\tdelete Array.prototype.test;\n} );\n\ntest( \"closeOnEscape\", function() {\n\texpect( 6 );\n\tvar element = $( \"<div></div>\" ).dialog( { closeOnEscape: false } );\n\tok( true, \"closeOnEscape: false\" );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ) && !element.dialog( \"widget\" ).is( \":hidden\" ), \"dialog is open before ESC\" );\n\telement.simulate( \"keydown\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keypress\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keyup\", { keyCode: $.ui.keyCode.ESCAPE } );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ) && !element.dialog( \"widget\" ).is( \":hidden\" ), \"dialog is open after ESC\" );\n\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { closeOnEscape: true } );\n\tok( true, \"closeOnEscape: true\" );\n\tok( element.dialog( \"widget\" ).is( \":visible\" ) && !element.dialog( \"widget\" ).is( \":hidden\" ), \"dialog is open before ESC\" );\n\telement.simulate( \"keydown\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keypress\", { keyCode: $.ui.keyCode.ESCAPE } )\n\t\t.simulate( \"keyup\", { keyCode: $.ui.keyCode.ESCAPE } );\n\tok( element.dialog( \"widget\" ).is( \":hidden\" ) && !element.dialog( \"widget\" ).is( \":visible\" ), \"dialog is closed after ESC\" );\n} );\n\ntest( \"closeText\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"Close\",\n\t\t\t\"default close text\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { closeText: \"foo\" } );\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"foo\",\n\t\t\t\"closeText on init\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog().dialog( \"option\", \"closeText\", \"bar\" );\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"bar\",\n\t\t\t\"closeText via option method\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { closeText: \"<span>foo</span>\" } );\n\t\tequal( $.trim( element.dialog( \"widget\" ).find( \".ui-dialog-titlebar-close\" ).text() ), \"<span>foo</span>\",\n\t\t\t\"closeText is escaped\" );\n\telement.remove();\n} );\n\ntest( \"draggable\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { draggable: false } );\n\n\t\ttestHelper.testDrag( element, 50, -50, 0, 0 );\n\t\telement.dialog( \"option\", \"draggable\", true );\n\t\ttestHelper.testDrag( element, 50, -50, 50, -50 );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { draggable: true } );\n\t\ttestHelper.testDrag( element, 50, -50, 50, -50 );\n\t\telement.dialog( \"option\", \"draggable\", false );\n\t\ttestHelper.testDrag( element, 50, -50, 0, 0 );\n\telement.remove();\n} );\n\ntest( \"height\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 150, \"default height\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { height: 237 } );\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 237, \"explicit height\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog();\n\t\telement.dialog( \"option\", \"height\", 238 );\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 238, \"explicit height set after init\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).css( \"padding\", \"20px\" )\n\t\t.dialog( { height: 240 } );\n\t\tequal( element.dialog( \"widget\" ).outerHeight(), 240, \"explicit height with padding\" );\n\telement.remove();\n} );\n\ntest( \"maxHeight\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { maxHeight: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-s\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 200, 1, \"maxHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxHeight: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-n\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 200, 1, \"maxHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxHeight: 200 } ).dialog( \"option\", \"maxHeight\", 300 );\n\t\ttestHelper.drag( element, \".ui-resizable-s\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 300, 1, \"maxHeight\" );\n\telement.remove();\n} );\n\ntest( \"maxWidth\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { maxWidth: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-e\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 200, 1, \"maxWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxWidth: 200 } );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 200, 1, \"maxWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { maxWidth: 200 } ).dialog( \"option\", \"maxWidth\", 300 );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 300, 1, \"maxWidth\" );\n\telement.remove();\n} );\n\ntest( \"minHeight\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { minHeight: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-s\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 10, 1, \"minHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minHeight: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-n\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 10, 1, \"minHeight\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minHeight: 10 } ).dialog( \"option\", \"minHeight\", 30 );\n\t\ttestHelper.drag( element, \".ui-resizable-n\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).height(), 30, 1, \"minHeight\" );\n\telement.remove();\n} );\n\ntest( \"minWidth\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog( { minWidth: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-e\", -1000, -1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 10, 1, \"minWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minWidth: 10 } );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 10, 1, \"minWidth\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { minWidth: 30 } ).dialog( \"option\", \"minWidth\", 30 );\n\t\ttestHelper.drag( element, \".ui-resizable-w\", 1000, 1000 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 30, 1, \"minWidth\" );\n\telement.remove();\n} );\n\ntest( \"position, default center on window\", function( assert ) {\n\texpect( 2 );\n\n\t// Dialogs alter the window width and height in Firefox\n\t// so we collect that information before creating the dialog\n\t// Support: Firefox\n\tvar winWidth = $( window ).width(),\n\t\twinHeight = $( window ).height(),\n\t\telement = $( \"<div></div>\" ).dialog(),\n\t\tdialog = element.dialog( \"widget\" ),\n\t\toffset = dialog.offset();\n\tassert.close( offset.left, Math.round( winWidth / 2 - dialog.outerWidth() / 2 ) + $( window ).scrollLeft(), 1, \"dialog left position of center on window on initilization\" );\n\tassert.close( offset.top, Math.round( winHeight / 2 - dialog.outerHeight() / 2 ) + $( window ).scrollTop(), 1, \"dialog top position of center on window on initilization\" );\n\telement.remove();\n} );\n\ntest( \"position, right bottom at right bottom via ui.position args\", function( assert ) {\n\texpect( 2 );\n\n\t// Dialogs alter the window width and height in Firefox\n\t// so we collect that information before creating the dialog\n\t// Support: Firefox\n\tvar winWidth = $( window ).width(),\n\t\twinHeight = $( window ).height(),\n\t\telement = $( \"<div></div>\" ).dialog( {\n\t\t\tposition: {\n\t\t\t\tmy: \"right bottom\",\n\t\t\t\tat: \"right bottom\"\n\t\t\t}\n\t\t} ),\n\t\tdialog = element.dialog( \"widget\" ),\n\t\toffset = dialog.offset();\n\n\tassert.close( offset.left, winWidth - dialog.outerWidth() + $( window ).scrollLeft(), 1, \"dialog left position of right bottom at right bottom on initilization\" );\n\tassert.close( offset.top, winHeight - dialog.outerHeight() + $( window ).scrollTop(), 1, \"dialog top position of right bottom at right bottom on initilization\" );\n\telement.remove();\n} );\n\ntest( \"position, at another element\", function( assert ) {\n\texpect( 4 );\n\tvar parent = $( \"<div></div>\" ).css( {\n\t\t\tposition: \"absolute\",\n\t\t\ttop: 400,\n\t\t\tleft: 600,\n\t\t\theight: 10,\n\t\t\twidth: 10\n\t\t} ).appendTo( \"body\" ),\n\n\t\telement = $( \"<div></div>\" ).dialog( {\n\t\t\tposition: {\n\t\t\t\tmy: \"left top\",\n\t\t\t\tat: \"left top\",\n\t\t\t\tof: parent,\n\t\t\t\tcollision: \"none\"\n\t\t\t}\n\t\t} ),\n\n\t\tdialog = element.dialog( \"widget\" ),\n\t\toffset = dialog.offset();\n\n\tassert.close( offset.left, 600, 1, \"dialog left position at another element on initilization\" );\n\tassert.close( offset.top, 400, 1, \"dialog top position at another element on initilization\" );\n\n\telement.dialog( \"option\", \"position\", {\n\t\t\tmy: \"left top\",\n\t\t\tat: \"right bottom\",\n\t\t\tof: parent,\n\t\t\tcollision: \"none\"\n\t} );\n\n\toffset = dialog.offset();\n\n\tassert.close( offset.left, 610, 1, \"dialog left position at another element via setting option\" );\n\tassert.close( offset.top, 410, 1, \"dialog top position at another element via setting option\" );\n\n\telement.remove();\n\tparent.remove();\n} );\n\ntest( \"resizable\", function() {\n\texpect( 4 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\ttestHelper.shouldResize( element, 50, 50, \"[default]\" );\n\t\telement.dialog( \"option\", \"resizable\", false );\n\t\ttestHelper.shouldResize( element, 0, 0, \"disabled after init\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { resizable: false } );\n\t\ttestHelper.shouldResize( element, 0, 0, \"disabled in init options\" );\n\t\telement.dialog( \"option\", \"resizable\", true );\n\t\ttestHelper.shouldResize( element, 50, 50, \"enabled after init\" );\n\telement.remove();\n} );\n\ntest( \"title\", function() {\n\texpect( 11 );\n\n\tfunction titleText() {\n\t\treturn element.dialog( \"widget\" ).find( \".ui-dialog-title\" ).html();\n\t}\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\n\t\t// some browsers return a non-breaking space and some return \"&nbsp;\"\n\t\t// so we generate a non-breaking space for comparison\n\t\tequal( titleText(), $( \"<span>&#160;</span>\" ).html(), \"[default]\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), null, \"option not changed\" );\n\telement.remove();\n\n\telement = $( \"<div title='foo'>\" ).dialog();\n\t\tequal( titleText(), \"foo\", \"title in element attribute\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), \"foo\", \"option updated from attribute\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { title: \"foo\" } );\n\t\tequal( titleText(), \"foo\", \"title in init options\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), \"foo\", \"opiton set from options hash\" );\n\telement.remove();\n\n\telement = $( \"<div title='foo'>\" ).dialog( { title: \"bar\" } );\n\t\tequal( titleText(), \"bar\", \"title in init options should override title in element attribute\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), \"bar\", \"opiton set from options hash\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog().dialog( \"option\", \"title\", \"foo\" );\n\t\tequal( titleText(), \"foo\", \"title after init\" );\n\telement.remove();\n\n\t// Make sure attroperties are properly ignored - #5742 - .attr() might return a DOMElement\n\telement = $( \"<form><input name='title'></form>\" ).dialog();\n\n\t\t// some browsers return a non-breaking space and some return \"&nbsp;\"\n\t\t// so we get the text to normalize to the actual non-breaking space\n\t\tequal( titleText(), $( \"<span>&#160;</span>\" ).html(), \"[default]\" );\n\t\tequal( element.dialog( \"option\", \"title\" ), null, \"option not changed\" );\n\telement.remove();\n} );\n\ntest( \"width\", function( assert ) {\n\texpect( 3 );\n\n\tvar element = $( \"<div></div>\" ).dialog();\n\t\tassert.close( element.dialog( \"widget\" ).width(), 300, 1, \"default width\" );\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { width: 437 } );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 437, 1, \"explicit width\" );\n\t\telement.dialog( \"option\", \"width\", 438 );\n\t\tassert.close( element.dialog( \"widget\" ).width(), 438, 1, \"explicit width after init\" );\n\telement.remove();\n} );\n\ntest( \"#4826: setting resizable false toggles resizable on dialog\", function() {\n\texpect( 6 );\n\tvar i,\n\t\telement = $( \"<div></div>\" ).dialog( { resizable: false } );\n\n\ttestHelper.shouldResize( element, 0, 0, \"[default]\" );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\telement.dialog( \"close\" ).dialog( \"open\" );\n\t\ttestHelper.shouldResize( element, 0, 0, \"initialized with resizable false toggle (\" + ( i + 1 ) + \")\" );\n\t}\n\telement.remove();\n\n\telement = $( \"<div></div>\" ).dialog( { resizable: true } );\n\ttestHelper.shouldResize( element, 50, 50, \"[default]\" );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\telement.dialog( \"close\" ).dialog( \"option\", \"resizable\", false ).dialog( \"open\" );\n\t\ttestHelper.shouldResize( element, 0, 0, \"set option resizable false toggle (\" + ( i + 1 ) + \")\" );\n\t}\n\telement.remove();\n\n} );\n\nasyncTest( \"#8051 - 'Explode' dialog animation causes crash in IE 6, 7 and 8\", function() {\n\texpect( 1 );\n\tvar element = $( \"<div></div>\" ).dialog( {\n\t\tshow: \"explode\",\n\t\tfocus: function() {\n\t\t\tok( true, \"dialog opened with animation\" );\n\t\t\telement.remove();\n\t\t\tstart();\n\t\t}\n\t} );\n} );\n\nasyncTest( \"#4421 - Focus lost from dialog which uses show-effect\", function() {\n\texpect( 1 );\n\tvar element = $( \"<div></div>\" ).dialog( {\n\t\tshow: \"blind\",\n\t\tfocus: function() {\n\t\t\tequal( element.dialog( \"widget\" ).find( document.activeElement ).length, 1, \"dialog maintains focus\" );\n\t\t\telement.remove();\n\t\t\tstart();\n\t\t}\n\t} );\n} );\n\nasyncTest( \"Open followed by close during show effect\", function() {\n\texpect( 1 );\n\tvar element = $( \"<div></div>\" ).dialog( {\n\t\tshow: \"blind\",\n\t\tclose: function() {\n\t\t\tok( true, \"dialog closed properly during animation\" );\n\t\t\telement.remove();\n\t\t\tstart();\n\t\t}\n\t} );\n\n\tsetTimeout( function() {\n\t\telement.dialog( \"close\" );\n\t}, 100 );\n} );\n\n} );\n", "/*!\n * jQuery UI Dialog @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Dialog\n//>>group: Widgets\n//>>description: Displays customizable dialog windows.\n//>>docs: http://api.jqueryui.com/dialog/\n//>>demos: http://jqueryui.com/dialog/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/dialog.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./button\",\n\t\t\t\"./draggable\",\n\t\t\t\"./mouse\",\n\t\t\t\"./resizable\",\n\t\t\t\"../focusable\",\n\t\t\t\"../keycode\",\n\t\t\t\"../position\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../safe-blur\",\n\t\t\t\"../tabbable\",\n\t\t\t\"../unique-id\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.dialog\", {\n\tversion: \"@VERSION\",\n\toptions: {\n\t\tappendTo: \"body\",\n\t\tautoOpen: true,\n\t\tbuttons: [],\n\t\tclasses: {\n\t\t\t\"ui-dialog\": \"ui-corner-all\",\n\t\t\t\"ui-dialog-titlebar\": \"ui-corner-all\"\n\t\t},\n\t\tcloseOnEscape: true,\n\t\tcloseText: \"Close\",\n\t\tdraggable: true,\n\t\thide: null,\n\t\theight: \"auto\",\n\t\tmaxHeight: null,\n\t\tmaxWidth: null,\n\t\tminHeight: 150,\n\t\tminWidth: 150,\n\t\tmodal: false,\n\t\tposition: {\n\t\t\tmy: \"center\",\n\t\t\tat: \"center\",\n\t\t\tof: window,\n\t\t\tcollision: \"fit\",\n\n\t\t\t// Ensure the titlebar is always visible\n\t\t\tusing: function( pos ) {\n\t\t\t\tvar topOffset = $( this ).css( pos ).offset().top;\n\t\t\t\tif ( topOffset < 0 ) {\n\t\t\t\t\t$( this ).css( \"top\", pos.top - topOffset );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tresizable: true,\n\t\tshow: null,\n\t\ttitle: null,\n\t\twidth: 300,\n\n\t\t// Callbacks\n\t\tbeforeClose: null,\n\t\tclose: null,\n\t\tdrag: null,\n\t\tdragStart: null,\n\t\tdragStop: null,\n\t\tfocus: null,\n\t\topen: null,\n\t\tresize: null,\n\t\tresizeStart: null,\n\t\tresizeStop: null\n\t},\n\n\tsizeRelatedOptions: {\n\t\tbuttons: true,\n\t\theight: true,\n\t\tmaxHeight: true,\n\t\tmaxWidth: true,\n\t\tminHeight: true,\n\t\tminWidth: true,\n\t\twidth: true\n\t},\n\n\tresizableRelatedOptions: {\n\t\tmaxHeight: true,\n\t\tmaxWidth: true,\n\t\tminHeight: true,\n\t\tminWidth: true\n\t},\n\n\t_create: function() {\n\t\tthis.originalCss = {\n\t\t\tdisplay: this.element[ 0 ].style.display,\n\t\t\twidth: this.element[ 0 ].style.width,\n\t\t\tminHeight: this.element[ 0 ].style.minHeight,\n\t\t\tmaxHeight: this.element[ 0 ].style.maxHeight,\n\t\t\theight: this.element[ 0 ].style.height\n\t\t};\n\t\tthis.originalPosition = {\n\t\t\tparent: this.element.parent(),\n\t\t\tindex: this.element.parent().children().index( this.element )\n\t\t};\n\t\tthis.originalTitle = this.element.attr( \"title\" );\n\t\tif ( this.options.title == null && this.originalTitle != null ) {\n\t\t\tthis.options.title = this.originalTitle;\n\t\t}\n\n\t\t// Dialogs can't be disabled\n\t\tif ( this.options.disabled ) {\n\t\t\tthis.options.disabled = false;\n\t\t}\n\n\t\tthis._createWrapper();\n\n\t\tthis.element\n\t\t\t.show()\n\t\t\t.removeAttr( \"title\" )\n\t\t\t.appendTo( this.uiDialog );\n\n\t\tthis._addClass( \"ui-dialog-content\", \"ui-widget-content\" );\n\n\t\tthis._createTitlebar();\n\t\tthis._createButtonPane();\n\n\t\tif ( this.options.draggable && $.fn.draggable ) {\n\t\t\tthis._makeDraggable();\n\t\t}\n\t\tif ( this.options.resizable && $.fn.resizable ) {\n\t\t\tthis._makeResizable();\n\t\t}\n\n\t\tthis._isOpen = false;\n\n\t\tthis._trackFocus();\n\t},\n\n\t_init: function() {\n\t\tif ( this.options.autoOpen ) {\n\t\t\tthis.open();\n\t\t}\n\t},\n\n\t_appendTo: function() {\n\t\tvar element = this.options.appendTo;\n\t\tif ( element && ( element.jquery || element.nodeType ) ) {\n\t\t\treturn $( element );\n\t\t}\n\t\treturn this.document.find( element || \"body\" ).eq( 0 );\n\t},\n\n\t_destroy: function() {\n\t\tvar next,\n\t\t\toriginalPosition = this.originalPosition;\n\n\t\tthis._untrackInstance();\n\t\tthis._destroyOverlay();\n\n\t\tthis.element\n\t\t\t.removeUniqueId()\n\t\t\t.css( this.originalCss )\n\n\t\t\t// Without detaching first, the following becomes really slow\n\t\t\t.detach();\n\n\t\tthis.uiDialog.remove();\n\n\t\tif ( this.originalTitle ) {\n\t\t\tthis.element.attr( \"title\", this.originalTitle );\n\t\t}\n\n\t\tnext = originalPosition.parent.children().eq( originalPosition.index );\n\n\t\t// Don't try to place the dialog next to itself (#8613)\n\t\tif ( next.length && next[ 0 ] !== this.element[ 0 ] ) {\n\t\t\tnext.before( this.element );\n\t\t} else {\n\t\t\toriginalPosition.parent.append( this.element );\n\t\t}\n\t},\n\n\twidget: function() {\n\t\treturn this.uiDialog;\n\t},\n\n\tdisable: $.noop,\n\tenable: $.noop,\n\n\tclose: function( event ) {\n\t\tvar that = this;\n\n\t\tif ( !this._isOpen || this._trigger( \"beforeClose\", event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isOpen = false;\n\t\tthis._focusedElement = null;\n\t\tthis._destroyOverlay();\n\t\tthis._untrackInstance();\n\n\t\tif ( !this.opener.filter( \":focusable\" ).trigger( \"focus\" ).length ) {\n\n\t\t\t// Hiding a focused element doesn't trigger blur in WebKit\n\t\t\t// so in case we have nothing to focus on, explicitly blur the active element\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=47182\n\t\t\t$.ui.safeBlur( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\t\t}\n\n\t\tthis._hide( this.uiDialog, this.options.hide, function() {\n\t\t\tthat._trigger( \"close\", event );\n\t\t} );\n\t},\n\n\tisOpen: function() {\n\t\treturn this._isOpen;\n\t},\n\n\tmoveToTop: function() {\n\t\tthis._moveToTop();\n\t},\n\n\t_moveToTop: function( event, silent ) {\n\t\tvar moved = false,\n\t\t\tzIndices = this.uiDialog.siblings( \".ui-front:visible\" ).map( function() {\n\t\t\t\treturn +$( this ).css( \"z-index\" );\n\t\t\t} ).get(),\n\t\t\tzIndexMax = Math.max.apply( null, zIndices );\n\n\t\tif ( zIndexMax >= +this.uiDialog.css( \"z-index\" ) ) {\n\t\t\tthis.uiDialog.css( \"z-index\", zIndexMax + 1 );\n\t\t\tmoved = true;\n\t\t}\n\n\t\tif ( moved && !silent ) {\n\t\t\tthis._trigger( \"focus\", event );\n\t\t}\n\t\treturn moved;\n\t},\n\n\topen: function() {\n\t\tvar that = this;\n\t\tif ( this._isOpen ) {\n\t\t\tif ( this._moveToTop() ) {\n\t\t\t\tthis._focusTabbable();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isOpen = true;\n\t\tthis.opener = $( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\n\t\tthis._size();\n\t\tthis._position();\n\t\tthis._createOverlay();\n\t\tthis._moveToTop( null, true );\n\n\t\t// Ensure the overlay is moved to the top with the dialog, but only when\n\t\t// opening. The overlay shouldn't move after the dialog is open so that\n\t\t// modeless dialogs opened after the modal dialog stack properly.\n\t\tif ( this.overlay ) {\n\t\t\tthis.overlay.css( \"z-index\", this.uiDialog.css( \"z-index\" ) - 1 );\n\t\t}\n\n\t\tthis._show( this.uiDialog, this.options.show, function() {\n\t\t\tthat._focusTabbable();\n\t\t\tthat._trigger( \"focus\" );\n\t\t} );\n\n\t\t// Track the dialog immediately upon openening in case a focus event\n\t\t// somehow occurs outside of the dialog before an element inside the\n\t\t// dialog is focused (#10152)\n\t\tthis._makeFocusTarget();\n\n\t\tthis._trigger( \"open\" );\n\t},\n\n\t_focusTabbable: function() {\n\n\t\t// Set focus to the first match:\n\t\t// 1. An element that was focused previously\n\t\t// 2. First element inside the dialog matching [autofocus]\n\t\t// 3. Tabbable element inside the content element\n\t\t// 4. Tabbable element inside the buttonpane\n\t\t// 5. The close button\n\t\t// 6. The dialog itself\n\t\tvar hasFocus = this._focusedElement;\n\t\tif ( !hasFocus ) {\n\t\t\thasFocus = this.element.find( \"[autofocus]\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.element.find( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialogButtonPane.find( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialogTitlebarClose.filter( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialog;\n\t\t}\n\t\thasFocus.eq( 0 ).trigger( \"focus\" );\n\t},\n\n\t_keepFocus: function( event ) {\n\t\tfunction checkFocus() {\n\t\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\n\t\t\t\tisActive = this.uiDialog[ 0 ] === activeElement ||\n\t\t\t\t\t$.contains( this.uiDialog[ 0 ], activeElement );\n\t\t\tif ( !isActive ) {\n\t\t\t\tthis._focusTabbable();\n\t\t\t}\n\t\t}\n\t\tevent.preventDefault();\n\t\tcheckFocus.call( this );\n\n\t\t// support: IE\n\t\t// IE <= 8 doesn't prevent moving focus even with event.preventDefault()\n\t\t// so we check again later\n\t\tthis._delay( checkFocus );\n\t},\n\n\t_createWrapper: function() {\n\t\tthis.uiDialog = $( \"<div>\" )\n\t\t\t.hide()\n\t\t\t.attr( {\n\n\t\t\t\t// Setting tabIndex makes the div focusable\n\t\t\t\ttabIndex: -1,\n\t\t\t\trole: \"dialog\"\n\t\t\t} )\n\t\t\t.appendTo( this._appendTo() );\n\n\t\tthis._addClass( this.uiDialog, \"ui-dialog\", \"ui-widget ui-widget-content ui-front\" );\n\t\tthis._on( this.uiDialog, {\n\t\t\tkeydown: function( event ) {\n\t\t\t\tif ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\n\t\t\t\t\t\tevent.keyCode === $.ui.keyCode.ESCAPE ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.close( event );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prevent tabbing out of dialogs\n\t\t\t\tif ( event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar tabbables = this.uiDialog.find( \":tabbable\" ),\n\t\t\t\t\tfirst = tabbables.filter( \":first\" ),\n\t\t\t\t\tlast = tabbables.filter( \":last\" );\n\n\t\t\t\tif ( ( event.target === last[ 0 ] || event.target === this.uiDialog[ 0 ] ) && !event.shiftKey ) {\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tfirst.trigger( \"focus\" );\n\t\t\t\t\t} );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else if ( ( event.target === first[ 0 ] || event.target === this.uiDialog[ 0 ] ) && event.shiftKey ) {\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tlast.trigger( \"focus\" );\n\t\t\t\t\t} );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\tmousedown: function( event ) {\n\t\t\t\tif ( this._moveToTop( event ) ) {\n\t\t\t\t\tthis._focusTabbable();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// We assume that any existing aria-describedby attribute means\n\t\t// that the dialog content is marked up properly\n\t\t// otherwise we brute force the content as the description\n\t\tif ( !this.element.find( \"[aria-describedby]\" ).length ) {\n\t\t\tthis.uiDialog.attr( {\n\t\t\t\t\"aria-describedby\": this.element.uniqueId().attr( \"id\" )\n\t\t\t} );\n\t\t}\n\t},\n\n\t_createTitlebar: function() {\n\t\tvar uiDialogTitle;\n\n\t\tthis.uiDialogTitlebar = $( \"<div>\" );\n\t\tthis._addClass( this.uiDialogTitlebar,\n\t\t\t\"ui-dialog-titlebar\", \"ui-widget-header ui-helper-clearfix\" );\n\t\tthis._on( this.uiDialogTitlebar, {\n\t\t\tmousedown: function( event ) {\n\n\t\t\t\t// Don't prevent click on close button (#8838)\n\t\t\t\t// Focusing a dialog that is partially scrolled out of view\n\t\t\t\t// causes the browser to scroll it into view, preventing the click event\n\t\t\t\tif ( !$( event.target ).closest( \".ui-dialog-titlebar-close\" ) ) {\n\n\t\t\t\t\t// Dialog isn't getting focus when dragging (#8063)\n\t\t\t\t\tthis.uiDialog.trigger( \"focus\" );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Support: IE\n\t\t// Use type=\"button\" to prevent enter keypresses in textboxes from closing the\n\t\t// dialog in IE (#9312)\n\t\tthis.uiDialogTitlebarClose = $( \"<button type='button'></button>\" )\n\t\t\t.button( {\n\t\t\t\tlabel: $( \"<a>\" ).text( this.options.closeText ).html(),\n\t\t\t\ticon: \"ui-icon-closethick\",\n\t\t\t\tshowLabel: false\n\t\t\t} )\n\t\t\t.appendTo( this.uiDialogTitlebar );\n\n\t\tthis._addClass( this.uiDialogTitlebarClose, \"ui-dialog-titlebar-close\" );\n\t\tthis._on( this.uiDialogTitlebarClose, {\n\t\t\tclick: function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.close( event );\n\t\t\t}\n\t\t} );\n\n\t\tuiDialogTitle = $( \"<span>\" ).uniqueId().prependTo( this.uiDialogTitlebar );\n\t\tthis._addClass( uiDialogTitle, \"ui-dialog-title\" );\n\t\tthis._title( uiDialogTitle );\n\n\t\tthis.uiDialogTitlebar.prependTo( this.uiDialog );\n\n\t\tthis.uiDialog.attr( {\n\t\t\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\n\t\t} );\n\t},\n\n\t_title: function( title ) {\n\t\tif ( this.options.title ) {\n\t\t\ttitle.text( this.options.title );\n\t\t} else {\n\t\t\ttitle.html( \"&#160;\" );\n\t\t}\n\t},\n\n\t_createButtonPane: function() {\n\t\tthis.uiDialogButtonPane = $( \"<div>\" );\n\t\tthis._addClass( this.uiDialogButtonPane, \"ui-dialog-buttonpane\",\n\t\t\t\"ui-widget-content ui-helper-clearfix\" );\n\n\t\tthis.uiButtonSet = $( \"<div>\" )\n\t\t\t.appendTo( this.uiDialogButtonPane );\n\t\tthis._addClass( this.uiButtonSet, \"ui-dialog-buttonset\" );\n\n\t\tthis._createButtons();\n\t},\n\n\t_createButtons: function() {\n\t\tvar that = this,\n\t\t\tbuttons = this.options.buttons;\n\n\t\t// If we already have a button pane, remove it\n\t\tthis.uiDialogButtonPane.remove();\n\t\tthis.uiButtonSet.empty();\n\n\t\tif ( $.isEmptyObject( buttons ) || ( $.isArray( buttons ) && !buttons.length ) ) {\n\t\t\tthis._removeClass( this.uiDialog, \"ui-dialog-buttons\" );\n\t\t\treturn;\n\t\t}\n\n\t\t$.each( buttons, function( name, props ) {\n\t\t\tvar click, buttonOptions;\n\t\t\tprops = $.isFunction( props ) ?\n\t\t\t\t{ click: props, text: name } :\n\t\t\t\tprops;\n\n\t\t\t// Default to a non-submitting button\n\t\t\tprops = $.extend( { type: \"button\" }, props );\n\n\t\t\t// Change the context for the click callback to be the main element\n\t\t\tclick = props.click;\n\t\t\tbuttonOptions = {\n\t\t\t\ticon: props.icon,\n\t\t\t\ticonPosition: props.iconPosition,\n\t\t\t\tshowLabel: props.showLabel\n\t\t\t};\n\n\t\t\tdelete props.click;\n\t\t\tdelete props.icon;\n\t\t\tdelete props.iconPosition;\n\t\t\tdelete props.showLabel;\n\n\t\t\t$( \"<button></button>\", props )\n\t\t\t\t.button( buttonOptions )\n\t\t\t\t.appendTo( that.uiButtonSet )\n\t\t\t\t.on( \"click\", function() {\n\t\t\t\t\tclick.apply( that.element[ 0 ], arguments );\n\t\t\t\t} );\n\t\t} );\n\t\tthis._addClass( this.uiDialog, \"ui-dialog-buttons\" );\n\t\tthis.uiDialogButtonPane.appendTo( this.uiDialog );\n\t},\n\n\t_makeDraggable: function() {\n\t\tvar that = this,\n\t\t\toptions = this.options;\n\n\t\tfunction filteredUi( ui ) {\n\t\t\treturn {\n\t\t\t\tposition: ui.position,\n\t\t\t\toffset: ui.offset\n\t\t\t};\n\t\t}\n\n\t\tthis.uiDialog.draggable( {\n\t\t\tcancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\n\t\t\thandle: \".ui-dialog-titlebar\",\n\t\t\tcontainment: \"document\",\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-dragging\" );\n\t\t\t\tthat._blockFrames();\n\t\t\t\tthat._trigger( \"dragStart\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tdrag: function( event, ui ) {\n\t\t\t\tthat._trigger( \"drag\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar left = ui.offset.left - that.document.scrollLeft(),\n\t\t\t\t\ttop = ui.offset.top - that.document.scrollTop();\n\n\t\t\t\toptions.position = {\n\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\n\t\t\t\t\tof: that.window\n\t\t\t\t};\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-dragging\" );\n\t\t\t\tthat._unblockFrames();\n\t\t\t\tthat._trigger( \"dragStop\", event, filteredUi( ui ) );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_makeResizable: function() {\n\t\tvar that = this,\n\t\t\toptions = this.options,\n\t\t\thandles = options.resizable,\n\n\t\t\t// .ui-resizable has position: relative defined in the stylesheet\n\t\t\t// but dialogs have to use absolute or fixed positioning\n\t\t\tposition = this.uiDialog.css( \"position\" ),\n\t\t\tresizeHandles = typeof handles === \"string\" ?\n\t\t\t\thandles :\n\t\t\t\t\"n,e,s,w,se,sw,ne,nw\";\n\n\t\tfunction filteredUi( ui ) {\n\t\t\treturn {\n\t\t\t\toriginalPosition: ui.originalPosition,\n\t\t\t\toriginalSize: ui.originalSize,\n\t\t\t\tposition: ui.position,\n\t\t\t\tsize: ui.size\n\t\t\t};\n\t\t}\n\n\t\tthis.uiDialog.resizable( {\n\t\t\tcancel: \".ui-dialog-content\",\n\t\t\tcontainment: \"document\",\n\t\t\talsoResize: this.element,\n\t\t\tmaxWidth: options.maxWidth,\n\t\t\tmaxHeight: options.maxHeight,\n\t\t\tminWidth: options.minWidth,\n\t\t\tminHeight: this._minHeight(),\n\t\t\thandles: resizeHandles,\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-resizing\" );\n\t\t\t\tthat._blockFrames();\n\t\t\t\tthat._trigger( \"resizeStart\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tresize: function( event, ui ) {\n\t\t\t\tthat._trigger( \"resize\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar offset = that.uiDialog.offset(),\n\t\t\t\t\tleft = offset.left - that.document.scrollLeft(),\n\t\t\t\t\ttop = offset.top - that.document.scrollTop();\n\n\t\t\t\toptions.height = that.uiDialog.height();\n\t\t\t\toptions.width = that.uiDialog.width();\n\t\t\t\toptions.position = {\n\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\n\t\t\t\t\tof: that.window\n\t\t\t\t};\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-resizing\" );\n\t\t\t\tthat._unblockFrames();\n\t\t\t\tthat._trigger( \"resizeStop\", event, filteredUi( ui ) );\n\t\t\t}\n\t\t} )\n\t\t\t.css( \"position\", position );\n\t},\n\n\t_trackFocus: function() {\n\t\tthis._on( this.widget(), {\n\t\t\tfocusin: function( event ) {\n\t\t\t\tthis._makeFocusTarget();\n\t\t\t\tthis._focusedElement = $( event.target );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_makeFocusTarget: function() {\n\t\tthis._untrackInstance();\n\t\tthis._trackingInstances().unshift( this );\n\t},\n\n\t_untrackInstance: function() {\n\t\tvar instances = this._trackingInstances(),\n\t\t\texists = $.inArray( this, instances );\n\t\tif ( exists !== -1 ) {\n\t\t\tinstances.splice( exists, 1 );\n\t\t}\n\t},\n\n\t_trackingInstances: function() {\n\t\tvar instances = this.document.data( \"ui-dialog-instances\" );\n\t\tif ( !instances ) {\n\t\t\tinstances = [];\n\t\t\tthis.document.data( \"ui-dialog-instances\", instances );\n\t\t}\n\t\treturn instances;\n\t},\n\n\t_minHeight: function() {\n\t\tvar options = this.options;\n\n\t\treturn options.height === \"auto\" ?\n\t\t\toptions.minHeight :\n\t\t\tMath.min( options.minHeight, options.height );\n\t},\n\n\t_position: function() {\n\n\t\t// Need to show the dialog to get the actual offset in the position plugin\n\t\tvar isVisible = this.uiDialog.is( \":visible\" );\n\t\tif ( !isVisible ) {\n\t\t\tthis.uiDialog.show();\n\t\t}\n\t\tthis.uiDialog.position( this.options.position );\n\t\tif ( !isVisible ) {\n\t\t\tthis.uiDialog.hide();\n\t\t}\n\t},\n\n\t_setOptions: function( options ) {\n\t\tvar that = this,\n\t\t\tresize = false,\n\t\t\tresizableOptions = {};\n\n\t\t$.each( options, function( key, value ) {\n\t\t\tthat._setOption( key, value );\n\n\t\t\tif ( key in that.sizeRelatedOptions ) {\n\t\t\t\tresize = true;\n\t\t\t}\n\t\t\tif ( key in that.resizableRelatedOptions ) {\n\t\t\t\tresizableOptions[ key ] = value;\n\t\t\t}\n\t\t} );\n\n\t\tif ( resize ) {\n\t\t\tthis._size();\n\t\t\tthis._position();\n\t\t}\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\n\t\t\tthis.uiDialog.resizable( \"option\", resizableOptions );\n\t\t}\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tvar isDraggable, isResizable,\n\t\t\tuiDialog = this.uiDialog;\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"appendTo\" ) {\n\t\t\tthis.uiDialog.appendTo( this._appendTo() );\n\t\t}\n\n\t\tif ( key === \"buttons\" ) {\n\t\t\tthis._createButtons();\n\t\t}\n\n\t\tif ( key === \"closeText\" ) {\n\t\t\tthis.uiDialogTitlebarClose.button( {\n\n\t\t\t\t// Ensure that we always pass a string\n\t\t\t\tlabel: $( \"<a>\" ).text( \"\" + this.options.closeText ).html()\n\t\t\t} );\n\t\t}\n\n\t\tif ( key === \"draggable\" ) {\n\t\t\tisDraggable = uiDialog.is( \":data(ui-draggable)\" );\n\t\t\tif ( isDraggable && !value ) {\n\t\t\t\tuiDialog.draggable( \"destroy\" );\n\t\t\t}\n\n\t\t\tif ( !isDraggable && value ) {\n\t\t\t\tthis._makeDraggable();\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"position\" ) {\n\t\t\tthis._position();\n\t\t}\n\n\t\tif ( key === \"resizable\" ) {\n\n\t\t\t// currently resizable, becoming non-resizable\n\t\t\tisResizable = uiDialog.is( \":data(ui-resizable)\" );\n\t\t\tif ( isResizable && !value ) {\n\t\t\t\tuiDialog.resizable( \"destroy\" );\n\t\t\t}\n\n\t\t\t// Currently resizable, changing handles\n\t\t\tif ( isResizable && typeof value === \"string\" ) {\n\t\t\t\tuiDialog.resizable( \"option\", \"handles\", value );\n\t\t\t}\n\n\t\t\t// Currently non-resizable, becoming resizable\n\t\t\tif ( !isResizable && value !== false ) {\n\t\t\t\tthis._makeResizable();\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"title\" ) {\n\t\t\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\n\t\t}\n\t},\n\n\t_size: function() {\n\n\t\t// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\n\t\t// divs will both have width and height set, so we need to reset them\n\t\tvar nonContentHeight, minContentHeight, maxContentHeight,\n\t\t\toptions = this.options;\n\n\t\t// Reset content sizing\n\t\tthis.element.show().css( {\n\t\t\twidth: \"auto\",\n\t\t\tminHeight: 0,\n\t\t\tmaxHeight: \"none\",\n\t\t\theight: 0\n\t\t} );\n\n\t\tif ( options.minWidth > options.width ) {\n\t\t\toptions.width = options.minWidth;\n\t\t}\n\n\t\t// Reset wrapper sizing\n\t\t// determine the height of all the non-content elements\n\t\tnonContentHeight = this.uiDialog.css( {\n\t\t\theight: \"auto\",\n\t\t\twidth: options.width\n\t\t} )\n\t\t\t.outerHeight();\n\t\tminContentHeight = Math.max( 0, options.minHeight - nonContentHeight );\n\t\tmaxContentHeight = typeof options.maxHeight === \"number\" ?\n\t\t\tMath.max( 0, options.maxHeight - nonContentHeight ) :\n\t\t\t\"none\";\n\n\t\tif ( options.height === \"auto\" ) {\n\t\t\tthis.element.css( {\n\t\t\t\tminHeight: minContentHeight,\n\t\t\t\tmaxHeight: maxContentHeight,\n\t\t\t\theight: \"auto\"\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.element.height( Math.max( 0, options.height - nonContentHeight ) );\n\t\t}\n\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\n\t\t\tthis.uiDialog.resizable( \"option\", \"minHeight\", this._minHeight() );\n\t\t}\n\t},\n\n\t_blockFrames: function() {\n\t\tthis.iframeBlocks = this.document.find( \"iframe\" ).map( function() {\n\t\t\tvar iframe = $( this );\n\n\t\t\treturn $( \"<div>\" )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: iframe.outerWidth(),\n\t\t\t\t\theight: iframe.outerHeight()\n\t\t\t\t} )\n\t\t\t\t.appendTo( iframe.parent() )\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\n\t\t} );\n\t},\n\n\t_unblockFrames: function() {\n\t\tif ( this.iframeBlocks ) {\n\t\t\tthis.iframeBlocks.remove();\n\t\t\tdelete this.iframeBlocks;\n\t\t}\n\t},\n\n\t_allowInteraction: function( event ) {\n\t\tif ( $( event.target ).closest( \".ui-dialog\" ).length ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: Remove hack when datepicker implements\n\t\t// the .ui-front logic (#8989)\n\t\treturn !!$( event.target ).closest( \".ui-datepicker\" ).length;\n\t},\n\n\t_createOverlay: function() {\n\t\tif ( !this.options.modal ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We use a delay in case the overlay is created from an\n\t\t// event that we're going to be cancelling (#2804)\n\t\tvar isOpening = true;\n\t\tthis._delay( function() {\n\t\t\tisOpening = false;\n\t\t} );\n\n\t\tif ( !this.document.data( \"ui-dialog-overlays\" ) ) {\n\n\t\t\t// Prevent use of anchors and inputs\n\t\t\t// Using _on() for an event handler shared across many instances is\n\t\t\t// safe because the dialogs stack and must be closed in reverse order\n\t\t\tthis._on( this.document, {\n\t\t\t\tfocusin: function( event ) {\n\t\t\t\t\tif ( isOpening ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !this._allowInteraction( event ) ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis._trackingInstances()[ 0 ]._focusTabbable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tthis.overlay = $( \"<div>\" )\n\t\t\t.appendTo( this._appendTo() );\n\n\t\tthis._addClass( this.overlay, null, \"ui-widget-overlay ui-front\" );\n\t\tthis._on( this.overlay, {\n\t\t\tmousedown: \"_keepFocus\"\n\t\t} );\n\t\tthis.document.data( \"ui-dialog-overlays\",\n\t\t\t( this.document.data( \"ui-dialog-overlays\" ) || 0 ) + 1 );\n\t},\n\n\t_destroyOverlay: function() {\n\t\tif ( !this.options.modal ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.overlay ) {\n\t\t\tvar overlays = this.document.data( \"ui-dialog-overlays\" ) - 1;\n\n\t\t\tif ( !overlays ) {\n\t\t\t\tthis._off( this.document, \"focusin\" );\n\t\t\t\tthis.document.removeData( \"ui-dialog-overlays\" );\n\t\t\t} else {\n\t\t\t\tthis.document.data( \"ui-dialog-overlays\", overlays );\n\t\t\t}\n\n\t\t\tthis.overlay.remove();\n\t\t\tthis.overlay = null;\n\t\t}\n\t}\n} );\n\n// DEPRECATED\n// TODO: switch return back to widget declaration at top of file when this is removed\nif ( $.uiBackCompat !== false ) {\n\n\t// Backcompat for dialogClass option\n\t$.widget( \"ui.dialog\", $.ui.dialog, {\n\t\toptions: {\n\t\t\tdialogClass: \"\"\n\t\t},\n\t\t_createWrapper: function() {\n\t\t\tthis._super();\n\t\t\tthis.uiDialog.addClass( this.options.dialogClass );\n\t\t},\n\t\t_setOption: function( key, value ) {\n\t\t\tif ( key === \"dialogClass\" ) {\n\t\t\t\tthis.uiDialog\n\t\t\t\t\t.removeClass( this.options.dialogClass )\n\t\t\t\t\t.addClass( value );\n\t\t\t}\n\t\t\tthis._superApply( arguments );\n\t\t}\n\t} );\n}\n\nreturn $.ui.dialog;\n\n} ) );\n"], "filenames": ["tests/unit/dialog/options.js", "ui/widgets/dialog.js"], "buggy_code_start_loc": [209, 429], "buggy_code_end_loc": [223, 719], "fixing_code_start_loc": [209, 429], "fixing_code_end_loc": [229, 719], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in jQuery UI before 1.12.0 might allow remote attackers to inject arbitrary web script or HTML via the closeText parameter of the dialog function.", "other": {"cve": {"id": "CVE-2016-7103", "sourceIdentifier": "cve@mitre.org", "published": "2017-03-15T16:59:00.173", "lastModified": "2022-11-04T00:15:21.883", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in jQuery UI before 1.12.0 might allow remote attackers to inject arbitrary web script or HTML via the closeText parameter of the dialog function."}, {"lang": "es", "value": "Vulnerabilidad de XSS en la interfaz de usuario de jQuery en versiones anteriores a 1.12.0 podr\u00eda permitir a atacantes remotos inyectar secuencias de comandos web o HTML arbitrarios a trav\u00e9s del par\u00e1metro closeText de la funci\u00f3n dialog."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jquery:jquery_ui:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.10.0", "versionEndIncluding": "1.11.4", "matchCriteriaId": "34351BFB-ED7C-4B76-AFA8-B87E17BC0EC5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:jquery:jquery_ui:1.10.0:beta1:*:*:*:*:*:*", "matchCriteriaId": "3B1D0AC8-8EF9-4D08-992B-F4C6F3E4BEF4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:jquery:jquery_ui:1.10.0:rc1:*:*:*:*:*:*", "matchCriteriaId": "94C56275-5DCB-4B78-8EF3-675AD5A342FB"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oracle:application_express:*:*:*:*:*:*:*:*", "versionEndExcluding": "19.1", "matchCriteriaId": "90CFEC52-A574-493E-A2AC-0EC21851BBFA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:business_intelligence:12.2.1.3.0:*:*:*:enterprise:*:*:*", "matchCriteriaId": "77C3DD16-1D81-40E1-B312-50FBD275507C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:business_intelligence:12.2.1.4.0:*:*:*:enterprise:*:*:*", "matchCriteriaId": "81DAC8C0-D342-44B5-9432-6B88D389584F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:hospitality_cruise_fleet_management:9.0.11:*:*:*:*:*:*:*", "matchCriteriaId": "03C46CCD-B49F-405A-A0A0-E0DFBA60F0D5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:primavera_unifier:*:*:*:*:*:*:*:*", "versionStartIncluding": "16.0", "versionEndIncluding": "16.2", "matchCriteriaId": "6C060869-6873-4CC0-B140-C229818FDA5D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:primavera_unifier:*:*:*:*:*:*:*:*", "versionStartIncluding": "17.0", "versionEndIncluding": "17.12.4", "matchCriteriaId": "E4F41053-5656-4017-918F-AD5F31DCA453"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:primavera_unifier:*:*:*:*:*:*:*:*", "versionStartIncluding": "18.0", "versionEndIncluding": "18.8.4", "matchCriteriaId": "36FB86BE-67E5-4244-80B8-DBB54A4342F0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:weblogic_server:10.3.6.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "B40B13B7-68B3-4510-968C-6A730EB46462"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:weblogic_server:12.1.3.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "C93CC705-1F8C-4870-99E6-14BF264C3811"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:weblogic_server:12.2.1.3.0:*:*:*:*:*:*:*", "matchCriteriaId": "F14A818F-AA16-4438-A3E4-E64C9287AC66"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:30:*:*:*:*:*:*:*", "matchCriteriaId": "97A4B8DF-58DA-4AB6-A1F9-331B36409BA3"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netapp:snapcenter:-:*:*:*:*:*:*:*", "matchCriteriaId": "BDFB1169-41A0-4A86-8E4F-FDA9730B1E94"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:redhat:openstack:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "9DAA72A4-AC7D-4544-89D4-5B07961D5A95"}, {"vulnerable": true, "criteria": "cpe:2.3:a:redhat:openstack:8:*:*:*:*:*:*:*", "matchCriteriaId": "E8B8C725-34CF-4340-BE7B-37E58CF706D6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:redhat:openstack:9:*:*:*:*:*:*:*", "matchCriteriaId": "F40C26BE-56CB-4022-A1D8-3CA0A8F87F4B"}]}]}], "references": [{"url": "http://rhn.redhat.com/errata/RHSA-2016-2932.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2016-2933.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "http://rhn.redhat.com/errata/RHSA-2017-0161.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/104823", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/jquery/api.jqueryui.com/issues/281", "source": "cve@mitre.org", "tags": ["Exploit", "Patch", "Third Party Advisory"]}, {"url": "https://github.com/jquery/jquery-ui/commit/9644e7bae9116edaf8d37c5b38cb32b892f10ff6", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://jqueryui.com/changelog/1.12.0/", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f%40%3Cdev.drill.apache.org%3E", "source": "cve@mitre.org"}, {"url": "https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442%40%3Cdev.drill.apache.org%3E", "source": "cve@mitre.org"}, {"url": "https://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6%40%3Ccommits.roller.apache.org%3E", "source": "cve@mitre.org"}, {"url": "https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc%40%3Cissues.drill.apache.org%3E", "source": "cve@mitre.org"}, {"url": "https://lists.apache.org/thread.html/ff8dcfe29377088ab655fda9d585dccd5b1f07fabd94ae84fd60a7f8%40%3Ccommits.pulsar.apache.org%3E", "source": "cve@mitre.org"}, {"url": "https://lists.debian.org/debian-lts-announce/2022/01/msg00014.html", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E2I4UHPIW26FIALH7GGZ3IYUUA53VOOJ/", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HVKIOWSXL2RF2ULNAP7PHESYCFSZIJE3/", "source": "cve@mitre.org"}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SGSY236PYSFYIEBRGDERLA7OSY6D7XL4/", "source": "cve@mitre.org"}, {"url": "https://nodesecurity.io/advisories/127", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20190416-0007/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.drupal.org/sa-core-2022-002", "source": "cve@mitre.org"}, {"url": "https://www.oracle.com//security-alerts/cpujul2021.html", "source": "cve@mitre.org"}, {"url": "https://www.oracle.com/security-alerts/cpuApr2021.html", "source": "cve@mitre.org"}, {"url": "https://www.oracle.com/security-alerts/cpuapr2020.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/security-alerts/cpujan2022.html", "source": "cve@mitre.org"}, {"url": "https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.tenable.com/security/tns-2016-19", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jquery/jquery-ui/commit/9644e7bae9116edaf8d37c5b38cb32b892f10ff6"}}