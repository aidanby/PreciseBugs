{"buggy_code": ["<?php $modalHeaderTitle = erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Offline'); ?>\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/modal_header.tpl.php'));?>\n\n<p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Because of inactivity you went offline, click continue to go online.');?></p>\n\n<button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" aria-label=\"Close\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Continue');?></button>\n\n<a class=\"btn btn-secondary btn-warning float-right\" href=\"<?php echo erLhcoreClassDesign::baseurl('user/logout')?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Logout');?></a>\n\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/modal_footer.tpl.php'));?>", "<?php\n$currentUser = erLhcoreClassUser::instance();\nif ($currentUser->isLogged()) :\n$UserData = $currentUser->getUserData(true);\n\n// Just logout if force to logout\nif ($UserData->force_logout == 1) {\n    $UserData->force_logout = 0;\n    $UserData->updateThis(['update' => ['force_logout']]);\n    $currentUser->logout();\n}\n\n?>\n<li class=\"nav-item dropleft\">\n    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?></a>\n    <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"pl-2 pt-1 font-weight-bold\" ng-non-bindable>\n                    <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Hello')?>&nbsp;<?php echo erLhcoreClassDesign::shrt($UserData->name,10,'...',30,ENT_QUOTES)?>!\n                </div>\n            </div>\n            <?php if ($currentUser->hasAccessTo('lhuser','selfedit')) : ?>\n                <div class=\"col-6\">\n                    <a class=\"dropdown-item pl-2\" href=\"<?php echo erLhcoreClassDesign::baseurl('user/account')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Account')?>\"><i class=\"material-icons\">account_box</i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Account')?></a>\n                </div>\n            <?php endif; ?>\n            <div class=\"col-6\">\n                <a title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Toggle between dark and white themes');?>\" href=\"<?php echo erLhcoreClassDesign::baseurl('front/switchdashboard')?>/(action)/mode\" class=\"dropdown-item pl-2\"><span class=\"material-icons\">settings_brightness</span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Dark/bright');?></a>\n            </div>\n            <div class=\"col-6\">\n                <a class=\"dropdown-item pl-2\" href=\"<?php echo erLhcoreClassDesign::baseurl('user/logout')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Logout');?>\"><i class=\"material-icons\">exit_to_app</i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Logout');?></a>\n            </div>\n        </div>\n\n\n        <hr class=\"m-0\">\n\n        <?php include(erLhcoreClassDesign::designtpl('pagelayouts/parts/top_menu_chat_actions_pre.tpl.php'));?>\n\n        <?php\n\n        $soundData = erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data;\n\n        $soundMessageEnabled = erLhcoreClassModelUserSetting::getSetting('chat_message',(int)($soundData['new_message_sound_admin_enabled']));\n        $soundNewChatEnabled = erLhcoreClassModelUserSetting::getSetting('new_chat_sound',(int)($soundData['new_chat_sound_enabled']));\n\n        $canChangeOnlineStatus = false;\n        $currentUser = erLhcoreClassUser::instance();\n        if ( $currentUser->hasAccessTo('lhuser','changeonlinestatus') ) {\n            $canChangeOnlineStatus = true;\n            if ( !isset($UserData) ) {\n                $UserData = $currentUser->getUserData(true);\n            }\n        }\n\n        $canChangeVisibilityMode = false;\n        if ( $currentUser->hasAccessTo('lhuser','changevisibility') ) {\n            $canChangeVisibilityMode = true;\n            if ( !isset($UserData) ) {\n                $UserData = $currentUser->getUserData(true);\n            }\n        }\n\n        $canChangeAlwaysOnline = false;\n        if ( $currentUser->hasAccessTo('lhuser','changealwaysonline') ) {\n            $canChangeAlwaysOnline = true;\n            if ( !isset($UserData) ) {\n                $UserData = $currentUser->getUserData(true);\n            }\n        }\n\n        ?>\n\n        <?php if ($currentUser->hasAccessTo('lhchat','use') ) : ?>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/auto_uppercase/<?php echo erLhcoreClassModelUserSetting::getSetting('auto_uppercase',1) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('auto_uppercase',1) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Auto uppercase sentences');?></a>\n                </div>\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/no_scroll_bottom/<?php echo erLhcoreClassModelUserSetting::getSetting('no_scroll_bottom',0) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('no_scroll_bottom',0) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Do not scroll to the bottom on chat open');?></a>\n                </div>\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/auto_preload/<?php echo erLhcoreClassModelUserSetting::getSetting('auto_preload',0) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('auto_preload',0) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Auto preload previous visitor chat messages');?></a>\n                </div>\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/scroll_load/<?php echo erLhcoreClassModelUserSetting::getSetting('scroll_load',1) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('scroll_load',1) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Load previous message on scroll');?></a>\n                </div>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" onclick=\"lhinst.disableChatSoundAdmin($(this));event.stopPropagation()\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Enable/Disable sound about new messages from users');?>\"><i class=\"material-icons\" ><?php $soundMessageEnabled == 0 ? print 'volume_off' : print 'volume_up'?></i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','New messages');?></a>\n                </div>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" onclick=\"lhinst.disableNewChatSoundAdmin($(this));event.stopPropagation()\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Enable/Disable sound about new pending chats');?>\"><i class=\"material-icons\" ><?php $soundNewChatEnabled == 0 ? print 'volume_off' : print 'volume_up'?></i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','New chats');?></a>\n                </div>\n            </div>\n\n            <hr class=\"m-0\">\n\n            <?php if ($canChangeVisibilityMode || $canChangeOnlineStatus || $canChangeAlwaysOnline) : ?>\n            <div class=\"row\">\n                <?php if ($canChangeOnlineStatus == true) : ?>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" ng-click=\"lhc.changeOnline($event)\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Change my status to online/offline');?>\"><i id=\"online-offline-user\" class=\"material-icons ng-cloak\" >{{lhc.hideOnline == true ? 'flash_off' : 'flash_on'}}</i>{{lhc.hideOnline == true ? <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Offline'),ENT_QUOTES))?> : <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Online'),ENT_QUOTES))?>}}</a>\n                </div>\n                <?php endif;?>\n                <?php if ($canChangeAlwaysOnline == true) : ?>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Change my persistent status to online');?>\" ng-click=\"lhc.changeAlwaysOnline($event)\"><i class=\"material-icons ng-cloak\"  >{{lhc.hideOnline == true ? 'flash_off' : (lhc.alwaysOnline == true ? 'toggle_on' : 'toggle_off')}}</i>{{lhc.alwaysOnline == true ? <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Always online'),ENT_QUOTES))?> : <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Based on activity'),ENT_QUOTES))?>}}</a>\n                </div>\n                <?php endif; ?>\n                <?php if ($canChangeVisibilityMode == true) : ?>\n                    <div class=\"col-12\">\n                        <a href=\"#\" class=\"dropdown-item pl-2\" ng-click=\"lhc.changeVisibility($event)\"><i id=\"vi-in-user\" class=\"material-icons ng-cloak\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Change my visibility to visible/invisible');?>\" >{{lhc.hideInvisible == true ? 'visibility_off' : 'visibility'}}</i>{{lhc.hideInvisible == true ? <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Invisible'),ENT_QUOTES))?> : <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Visible'),ENT_QUOTES))?>}}</a>\n                    </div>\n                <?php endif;?>\n            </div>\n                <hr class=\"m-0\">\n            <?php endif; ?>\n\n\n        <?php endif;?>\n\n        <?php include(erLhcoreClassDesign::designtpl('pagelayouts/parts/top_menu_chat_actions_post_multiinclude.tpl.php'));?>\n\n\n    </div>\n</li>\n<?php unset($currentUser);unset($UserData);endif; ?>\n", "<?php\n\nheader('X-Frame-Options: DENY');\n\n$lhUser = erLhcoreClassUser::instance();\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.logout',array('user' => & $lhUser));\n\n$lhUser->logout();\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.after_logout',array('user' => & $lhUser));\n\nerLhcoreClassModule::redirect('user/login');\nexit;\n\n?>", "<?php\n\n$Module = array( \"name\" => \"Users, groups management\");\n\n$ViewList = array();\n\n$ViewList['login'] = array(\n    'params' => array(),\n    'uparams' => array('r','external_request','noaccess'),\n);\n\n$ViewList['autologin'] = array(\n    'params' => array('hash'),\n    'uparams' => array('r','u','l','t'),\n);\n\n$ViewList['autologinuser'] = array(\n    'params' => array('hash'),\n    'uparams' => array(),\n);\n\n$ViewList['logout'] = array(\n    'params' => array()\n);\n\n$ViewList['loginas'] = array(\n    'params' => array('id'),\n    'functions' => array( 'loginas' )\n);\n\n$ViewList['loginasuser'] = array(\n    'params' => array('id'),\n    'uparams' => array('hash', 'ts'),\n    'functions' => array(  )\n);\n\n$ViewList['account'] = array(\n    'params' => array(),\n    'uparams' => array('msg','action','csfr','tab'),\n    'functions' => array( 'selfedit' )\n);\n\n$ViewList['avatarbuilder'] = array(\n    'params' => array('id'),\n    'uparams' => array(),\n    'functions' => array( 'selfedit' )\n);\n\n$ViewList['userlist'] = array(\n    'params' => array(),\n    'uparams' => array('email' , 'name' , 'username' , 'surname', 'group_ids', 'disabled', 'export','timefrom','timeto','timefrom_minutes','timefrom_hours','timeto_hours','timeto_minutes'),\n    'functions' => array( 'userlist' ),\n    'multiple_arguments' => array('group_ids')\n);\n\n$ViewList['grouplist'] = array(\n    'params' => array(),\n    'functions' => array( 'grouplist' )\n);\n\n$ViewList['edit'] = array(\n    'params' => array('user_id'),\n    'uparams' => array('tab'),\n    'functions' => array( 'edituser' )\n);\n\n$ViewList['delete'] = array(\n    'params' => array('user_id'),\n    'uparams' => array('csfr'),\n    'functions' => array( 'deleteuser' )\n);\n\n$ViewList['new'] = array(\n    'params' => array(),\n    'uparams' => array('tab'),\n    'functions' => array( 'createuser' )\n);\n\n$ViewList['import'] = array(\n    'params' => array(),\n    'uparams' => array(),\n    'functions' => array( 'import' )\n);\n\n$ViewList['newgroup'] = array(\n    'params' => array(),\n    'functions' => array( 'creategroup', 'editgroup' )\n);\n\n$ViewList['editgroup'] = array(\n    'params' => array('group_id'),\n    'functions' => array( 'editgroup' )\n    );\n\n$ViewList['clonegroup'] = array(\n    'params' => array('group_id'),\n    'uparams' => array('csfr'),\n    'functions' => array( 'editgroup' )\n);\n\n$ViewList['groupassignuser'] = array(\n    'params' => array('group_id'),\n    'functions' => array( 'groupassignuser' )\n    );\n\n$ViewList['deletegroup'] = array(\n    'params' => array('group_id'),\n\t'uparams' => array('csfr'),\n    'functions' => array( 'deletegroup' )\n    );\n\n$ViewList['forgotpassword'] = array(\n    'params' => array(),\n);\n\n$ViewList['remindpassword'] = array(\n    'params' => array('hash'),\n);\n\n$ViewList['setsetting'] = array (\n\t\t'params' => array('identifier','value')\n);\n\n$ViewList['setsettingajax'] = array (\n\t\t'params' => array('identifier','value'),\n\t\t'uparams' => array('indifferent')\n);\n\n$ViewList['setsettingajaxraw'] = array (\n\t\t'params' => array('identifier')\n);\n\n$ViewList['setoffline'] = array (\n\t\t'functions' => array( 'changeonlinestatus' ),\n\t\t'params' => array('status')\n);\n\n$ViewList['setalwaysonline'] = array (\n\t\t'functions' => array( 'changealwaysonline' ),\n\t\t'params' => array('status')\n);\n\n$ViewList['setinactive'] = array (\n    'functions' => array( 'changeonlinestatus' ),\n    'params' => array('status')\n);\n\n$ViewList['wentinactive'] = array (\n    'functions' => array( 'changeonlinestatus' ),\n    'params' => array()\n);\n\n$ViewList['setinvisible'] = array (\n\t\t'functions' => array( 'changevisibility' ),\n\t\t'params' => array('status')\n);\n\n$ViewList['autologinconfig'] = array(\n    'params' => array(),\n    'uparams' => array('csfr'),\n    'functions' => array( 'userautologin' )\n);\n\n$ViewList['passwordrequirements'] = array(\n    'params' => array(),\n    'uparams' => array('csfr'),\n    'functions' => array( 'pswdsecurity' )\n);\n\n$ViewList['updatepassword'] = array(\n    'params' => array('user_id','ts','hash'),\n    'uparams' => array('csfr'),\n    'functions' => array( )\n);\n\n$ViewList['setopstatus'] = array(\n    'params' => array('user_id'),\n    'functions' => array('setopstatus' )\n);\n\n$FunctionList['groupassignuser'] = array('explain' => 'Allow user to assign user to group');\n$FunctionList['editgroup'] = array('explain' => 'Allow user to edit group');\n$FunctionList['creategroup'] = array('explain' => 'Allow user to create group');\n$FunctionList['deletegroup'] = array('explain' => 'Allow user to delete group');\n$FunctionList['createuser'] = array('explain' => 'Allow user to create another user');\n$FunctionList['deleteuser'] = array('explain' => 'Allow user to delete another user');\n$FunctionList['edituser'] = array('explain' => 'Allow user to edit another user');\n$FunctionList['editusergroupall'] = array('explain' => 'Allow user to edit another user groups even he is not a member of it.');\n$FunctionList['grouplist'] = array('explain' => 'Allow user to list group');\n$FunctionList['userlist'] = array('explain' => 'Allow user to list users');\n$FunctionList['selfedit'] = array('explain' => 'Allow user to edit his own data');\n\n\n// All department option\n$FunctionList['self_all_departments'] = array('explain' => 'Allow user to assign himself to all departments option');\n$FunctionList['edit_all_departments'] = array('explain' => 'Allow user to assign other users to all departments option');\n\n// Edit mode user\n$FunctionList['assign_all_department_individual'] = array('explain' => 'Allow user edit other users all individual departments');\n$FunctionList['assign_all_department_group'] = array('explain' => 'Allow user to assign other users to all department groups');\n\n$FunctionList['assign_to_own_department_individual'] = array('explain' => 'Allow user to change other users individual departments (only if operator belong to them)');\n$FunctionList['assign_to_own_department_group'] = array('explain' => 'Allow user to change other users departments groups (only if operator belong to them)');\n\n$FunctionList['see_user_assigned_departments'] = array('explain' => 'Allow user to see to other user assigned departments');\n$FunctionList['see_user_assigned_departments_groups'] = array('explain' => 'Allow user to see to other user assigned departments groups');\n\n// Self account\n$FunctionList['see_assigned_departments'] = array('explain' => 'Allow user to see departments assigned to him');\n$FunctionList['see_assigned_departments_groups'] = array('explain' => 'Allow user to see departments groups assigned to him');\n$FunctionList['editdepartaments'] = array('explain' => 'Allow user to edit his own responsible departments/departments groups');\n\n\n$FunctionList['userlistonline'] = array('explain' => 'Allow user to see logged operators list, only from his department');\n$FunctionList['userlistonlineall'] = array('explain' => 'Allow user to see logged operators list, not only from his department');\n$FunctionList['changeonlinestatus'] = array('explain' => 'Allow user to change his online status');\n$FunctionList['changeskypenick'] = array('explain' => 'Allow user to change/enter his skype nick');\n$FunctionList['personalcannedmsg'] = array('explain' => 'Allow user to have personal canned messages');\n$FunctionList['personalautoresponder'] = array('explain' => 'Allow user to have personal auto responder messages');\n$FunctionList['changevisibility'] = array('explain' => 'Allow user to change his visibility mode');\n$FunctionList['change_visibility_list'] = array('explain' => 'Allow user to choose what list should be visible by him, pending/active/unread/closed');\n$FunctionList['allowtochoosependingmode'] = array('explain' => 'Allow user to choose what pending chats he can see, only assigned to him or all.');\n$FunctionList['receivepermissionrequest'] = array('explain' => 'Allow user to choose should he receive other operators permissions requests');\n$FunctionList['userautologin'] = array('explain' => 'Allow user to configure autologin');\n$FunctionList['canseedepartmentstats'] = array('explain' => 'Allow user to see departments statistic');\n$FunctionList['canseealldepartmentstats'] = array('explain' => 'Allow user to see all departments statistic, not only from his departments');\n$FunctionList['import'] = array('explain' => 'Allow user to import users');\n$FunctionList['loginas'] = array('explain' => 'Allow user to login as other user');\n$FunctionList['passwordsecurity'] = array('explain' => 'Allow user to set password security requirements');\n$FunctionList['see_all'] = array('explain' => 'Allow user see all users/groups not only from his group/groups');\n$FunctionList['see_all_group_users'] = array('explain' => 'Allow user see all group users he belongs to.');\n$FunctionList['changealwaysonline'] = array('explain' => 'Allow user to change always online mode');\n$FunctionList['setopstatus'] = array('explain' => 'Allow user to change other user online status from online operators widget');\n$FunctionList['change_chat_nickname'] = array('explain' => 'Allow user to change his own chat nickname');\n$FunctionList['changephoto'] = array('explain' => 'Allow user to change his own photo/avatar');\n$FunctionList['change_job_title'] = array('explain' => 'Allow user to change his own job title');\n$FunctionList['change_core_attributes'] = array('explain' => 'Allow user to change his own username/password/e-mail/XMPP Username');\n$FunctionList['change_name_surname'] = array('explain' => 'Allow user to change his own name/surname');\n$FunctionList['pswdsecurity'] = array('explain' => 'Allow user to manage password requirements');\n$FunctionList['largeactivitytimeout'] = array('explain' => 'Allow user to choose a large inactivity timeout');\n\n?>"], "fixing_code": ["<?php $modalHeaderTitle = erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Offline'); ?>\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/modal_header.tpl.php'));?>\n\n<p><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Because of inactivity you went offline, click continue to go online.');?></p>\n\n<button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" aria-label=\"Close\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Continue');?></button>\n\n<a class=\"btn btn-secondary btn-warning float-right\" onclick=\"$(this).attr('href',$(this).attr('href')+'/(csfr)/'+confLH.csrf_token)\" href=\"<?php echo erLhcoreClassDesign::baseurl('user/logout')?>\"><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/wentinactive','Logout');?></a>\n\n<?php include(erLhcoreClassDesign::designtpl('lhkernel/modal_footer.tpl.php'));?>", "<?php\n$currentUser = erLhcoreClassUser::instance();\nif ($currentUser->isLogged()) :\n$UserData = $currentUser->getUserData(true);\n\n// Just logout if force to logout\nif ($UserData->force_logout == 1) {\n    $UserData->force_logout = 0;\n    $UserData->updateThis(['update' => ['force_logout']]);\n    $currentUser->logout();\n}\n\n?>\n<li class=\"nav-item dropleft\">\n    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?></a>\n    <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"pl-2 pt-1 font-weight-bold\" ng-non-bindable>\n                    <?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Hello')?>&nbsp;<?php echo erLhcoreClassDesign::shrt($UserData->name,10,'...',30,ENT_QUOTES)?>!\n                </div>\n            </div>\n            <?php if ($currentUser->hasAccessTo('lhuser','selfedit')) : ?>\n                <div class=\"col-6\">\n                    <a class=\"dropdown-item pl-2\" href=\"<?php echo erLhcoreClassDesign::baseurl('user/account')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Account')?>\"><i class=\"material-icons\">account_box</i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Account')?></a>\n                </div>\n            <?php endif; ?>\n            <div class=\"col-6\">\n                <a title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Toggle between dark and white themes');?>\" href=\"<?php echo erLhcoreClassDesign::baseurl('front/switchdashboard')?>/(action)/mode\" class=\"dropdown-item pl-2\"><span class=\"material-icons\">settings_brightness</span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Dark/bright');?></a>\n            </div>\n            <div class=\"col-6\">\n                <a class=\"dropdown-item pl-2\" onclick=\"$(this).attr('href',$(this).attr('href')+'/(csfr)/'+confLH.csrf_token)\" href=\"<?php echo erLhcoreClassDesign::baseurl('user/logout')?>\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Logout');?>\"><i class=\"material-icons\">exit_to_app</i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Logout');?></a>\n            </div>\n        </div>\n\n\n        <hr class=\"m-0\">\n\n        <?php include(erLhcoreClassDesign::designtpl('pagelayouts/parts/top_menu_chat_actions_pre.tpl.php'));?>\n\n        <?php\n\n        $soundData = erLhcoreClassModelChatConfig::fetch('sync_sound_settings')->data;\n\n        $soundMessageEnabled = erLhcoreClassModelUserSetting::getSetting('chat_message',(int)($soundData['new_message_sound_admin_enabled']));\n        $soundNewChatEnabled = erLhcoreClassModelUserSetting::getSetting('new_chat_sound',(int)($soundData['new_chat_sound_enabled']));\n\n        $canChangeOnlineStatus = false;\n        $currentUser = erLhcoreClassUser::instance();\n        if ( $currentUser->hasAccessTo('lhuser','changeonlinestatus') ) {\n            $canChangeOnlineStatus = true;\n            if ( !isset($UserData) ) {\n                $UserData = $currentUser->getUserData(true);\n            }\n        }\n\n        $canChangeVisibilityMode = false;\n        if ( $currentUser->hasAccessTo('lhuser','changevisibility') ) {\n            $canChangeVisibilityMode = true;\n            if ( !isset($UserData) ) {\n                $UserData = $currentUser->getUserData(true);\n            }\n        }\n\n        $canChangeAlwaysOnline = false;\n        if ( $currentUser->hasAccessTo('lhuser','changealwaysonline') ) {\n            $canChangeAlwaysOnline = true;\n            if ( !isset($UserData) ) {\n                $UserData = $currentUser->getUserData(true);\n            }\n        }\n\n        ?>\n\n        <?php if ($currentUser->hasAccessTo('lhchat','use') ) : ?>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/auto_uppercase/<?php echo erLhcoreClassModelUserSetting::getSetting('auto_uppercase',1) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('auto_uppercase',1) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Auto uppercase sentences');?></a>\n                </div>\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/no_scroll_bottom/<?php echo erLhcoreClassModelUserSetting::getSetting('no_scroll_bottom',0) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('no_scroll_bottom',0) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Do not scroll to the bottom on chat open');?></a>\n                </div>\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/auto_preload/<?php echo erLhcoreClassModelUserSetting::getSetting('auto_preload',0) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('auto_preload',0) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Auto preload previous visitor chat messages');?></a>\n                </div>\n                <div class=\"col-12\">\n                    <a href=\"<?php echo erLhcoreClassDesign::baseurl('user/setsetting')?>/scroll_load/<?php echo erLhcoreClassModelUserSetting::getSetting('scroll_load',1) == 0 ? 1 : 0?>\" class=\"dropdown-item pl-2\"><span class=\"material-icons\"><?php erLhcoreClassModelUserSetting::getSetting('scroll_load',1) ? print 'check' : print 'remove_done'?></span><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('user/account','Load previous message on scroll');?></a>\n                </div>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" onclick=\"lhinst.disableChatSoundAdmin($(this));event.stopPropagation()\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Enable/Disable sound about new messages from users');?>\"><i class=\"material-icons\" ><?php $soundMessageEnabled == 0 ? print 'volume_off' : print 'volume_up'?></i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','New messages');?></a>\n                </div>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" onclick=\"lhinst.disableNewChatSoundAdmin($(this));event.stopPropagation()\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Enable/Disable sound about new pending chats');?>\"><i class=\"material-icons\" ><?php $soundNewChatEnabled == 0 ? print 'volume_off' : print 'volume_up'?></i><?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','New chats');?></a>\n                </div>\n            </div>\n\n            <hr class=\"m-0\">\n\n            <?php if ($canChangeVisibilityMode || $canChangeOnlineStatus || $canChangeAlwaysOnline) : ?>\n            <div class=\"row\">\n                <?php if ($canChangeOnlineStatus == true) : ?>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" ng-click=\"lhc.changeOnline($event)\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Change my status to online/offline');?>\"><i id=\"online-offline-user\" class=\"material-icons ng-cloak\" >{{lhc.hideOnline == true ? 'flash_off' : 'flash_on'}}</i>{{lhc.hideOnline == true ? <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Offline'),ENT_QUOTES))?> : <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Online'),ENT_QUOTES))?>}}</a>\n                </div>\n                <?php endif;?>\n                <?php if ($canChangeAlwaysOnline == true) : ?>\n                <div class=\"col-6\">\n                    <a href=\"#\" class=\"dropdown-item pl-2\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Change my persistent status to online');?>\" ng-click=\"lhc.changeAlwaysOnline($event)\"><i class=\"material-icons ng-cloak\"  >{{lhc.hideOnline == true ? 'flash_off' : (lhc.alwaysOnline == true ? 'toggle_on' : 'toggle_off')}}</i>{{lhc.alwaysOnline == true ? <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Always online'),ENT_QUOTES))?> : <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Based on activity'),ENT_QUOTES))?>}}</a>\n                </div>\n                <?php endif; ?>\n                <?php if ($canChangeVisibilityMode == true) : ?>\n                    <div class=\"col-12\">\n                        <a href=\"#\" class=\"dropdown-item pl-2\" ng-click=\"lhc.changeVisibility($event)\"><i id=\"vi-in-user\" class=\"material-icons ng-cloak\" title=\"<?php echo erTranslationClassLhTranslation::getInstance()->getTranslation('chat/user_settings','Change my visibility to visible/invisible');?>\" >{{lhc.hideInvisible == true ? 'visibility_off' : 'visibility'}}</i>{{lhc.hideInvisible == true ? <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Invisible'),ENT_QUOTES))?> : <?php echo json_encode(htmlspecialchars_decode(erTranslationClassLhTranslation::getInstance()->getTranslation('pagelayout/pagelayout','Visible'),ENT_QUOTES))?>}}</a>\n                    </div>\n                <?php endif;?>\n            </div>\n                <hr class=\"m-0\">\n            <?php endif; ?>\n\n\n        <?php endif;?>\n\n        <?php include(erLhcoreClassDesign::designtpl('pagelayouts/parts/top_menu_chat_actions_post_multiinclude.tpl.php'));?>\n\n\n    </div>\n</li>\n<?php unset($currentUser);unset($UserData);endif; ?>\n", "<?php\n\nheader('X-Frame-Options: DENY');\n\n$lhUser = erLhcoreClassUser::instance();\n\nif (!$lhUser->isLogged() || !$lhUser->validateCSFRToken($Params['user_parameters_unordered']['csfr'])) {\n    die('Invalid CSFR Token');\n    exit;\n}\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.logout',array('user' => & $lhUser));\n\n$lhUser->logout();\n\nerLhcoreClassChatEventDispatcher::getInstance()->dispatch('user.after_logout',array('user' => & $lhUser));\n\n//erLhcoreClassModule::redirect('user/login');\nexit;\n\n?>", "<?php\n\n$Module = array( \"name\" => \"Users, groups management\");\n\n$ViewList = array();\n\n$ViewList['login'] = array(\n    'params' => array(),\n    'uparams' => array('r','external_request','noaccess'),\n);\n\n$ViewList['autologin'] = array(\n    'params' => array('hash'),\n    'uparams' => array('r','u','l','t'),\n);\n\n$ViewList['autologinuser'] = array(\n    'params' => array('hash'),\n    'uparams' => array(),\n);\n\n$ViewList['logout'] = array(\n    'params' => array(),\n    'uparams' => array('csfr')\n);\n\n$ViewList['loginas'] = array(\n    'params' => array('id'),\n    'functions' => array( 'loginas' )\n);\n\n$ViewList['loginasuser'] = array(\n    'params' => array('id'),\n    'uparams' => array('hash', 'ts'),\n    'functions' => array(  )\n);\n\n$ViewList['account'] = array(\n    'params' => array(),\n    'uparams' => array('msg','action','csfr','tab'),\n    'functions' => array( 'selfedit' )\n);\n\n$ViewList['avatarbuilder'] = array(\n    'params' => array('id'),\n    'uparams' => array(),\n    'functions' => array( 'selfedit' )\n);\n\n$ViewList['userlist'] = array(\n    'params' => array(),\n    'uparams' => array('email' , 'name' , 'username' , 'surname', 'group_ids', 'disabled', 'export','timefrom','timeto','timefrom_minutes','timefrom_hours','timeto_hours','timeto_minutes'),\n    'functions' => array( 'userlist' ),\n    'multiple_arguments' => array('group_ids')\n);\n\n$ViewList['grouplist'] = array(\n    'params' => array(),\n    'functions' => array( 'grouplist' )\n);\n\n$ViewList['edit'] = array(\n    'params' => array('user_id'),\n    'uparams' => array('tab'),\n    'functions' => array( 'edituser' )\n);\n\n$ViewList['delete'] = array(\n    'params' => array('user_id'),\n    'uparams' => array('csfr'),\n    'functions' => array( 'deleteuser' )\n);\n\n$ViewList['new'] = array(\n    'params' => array(),\n    'uparams' => array('tab'),\n    'functions' => array( 'createuser' )\n);\n\n$ViewList['import'] = array(\n    'params' => array(),\n    'uparams' => array(),\n    'functions' => array( 'import' )\n);\n\n$ViewList['newgroup'] = array(\n    'params' => array(),\n    'functions' => array( 'creategroup', 'editgroup' )\n);\n\n$ViewList['editgroup'] = array(\n    'params' => array('group_id'),\n    'functions' => array( 'editgroup' )\n    );\n\n$ViewList['clonegroup'] = array(\n    'params' => array('group_id'),\n    'uparams' => array('csfr'),\n    'functions' => array( 'editgroup' )\n);\n\n$ViewList['groupassignuser'] = array(\n    'params' => array('group_id'),\n    'functions' => array( 'groupassignuser' )\n    );\n\n$ViewList['deletegroup'] = array(\n    'params' => array('group_id'),\n\t'uparams' => array('csfr'),\n    'functions' => array( 'deletegroup' )\n    );\n\n$ViewList['forgotpassword'] = array(\n    'params' => array(),\n);\n\n$ViewList['remindpassword'] = array(\n    'params' => array('hash'),\n);\n\n$ViewList['setsetting'] = array (\n\t\t'params' => array('identifier','value')\n);\n\n$ViewList['setsettingajax'] = array (\n\t\t'params' => array('identifier','value'),\n\t\t'uparams' => array('indifferent')\n);\n\n$ViewList['setsettingajaxraw'] = array (\n\t\t'params' => array('identifier')\n);\n\n$ViewList['setoffline'] = array (\n\t\t'functions' => array( 'changeonlinestatus' ),\n\t\t'params' => array('status')\n);\n\n$ViewList['setalwaysonline'] = array (\n\t\t'functions' => array( 'changealwaysonline' ),\n\t\t'params' => array('status')\n);\n\n$ViewList['setinactive'] = array (\n    'functions' => array( 'changeonlinestatus' ),\n    'params' => array('status')\n);\n\n$ViewList['wentinactive'] = array (\n    'functions' => array( 'changeonlinestatus' ),\n    'params' => array()\n);\n\n$ViewList['setinvisible'] = array (\n\t\t'functions' => array( 'changevisibility' ),\n\t\t'params' => array('status')\n);\n\n$ViewList['autologinconfig'] = array(\n    'params' => array(),\n    'uparams' => array('csfr'),\n    'functions' => array( 'userautologin' )\n);\n\n$ViewList['passwordrequirements'] = array(\n    'params' => array(),\n    'uparams' => array('csfr'),\n    'functions' => array( 'pswdsecurity' )\n);\n\n$ViewList['updatepassword'] = array(\n    'params' => array('user_id','ts','hash'),\n    'uparams' => array('csfr'),\n    'functions' => array( )\n);\n\n$ViewList['setopstatus'] = array(\n    'params' => array('user_id'),\n    'functions' => array('setopstatus' )\n);\n\n$FunctionList['groupassignuser'] = array('explain' => 'Allow user to assign user to group');\n$FunctionList['editgroup'] = array('explain' => 'Allow user to edit group');\n$FunctionList['creategroup'] = array('explain' => 'Allow user to create group');\n$FunctionList['deletegroup'] = array('explain' => 'Allow user to delete group');\n$FunctionList['createuser'] = array('explain' => 'Allow user to create another user');\n$FunctionList['deleteuser'] = array('explain' => 'Allow user to delete another user');\n$FunctionList['edituser'] = array('explain' => 'Allow user to edit another user');\n$FunctionList['editusergroupall'] = array('explain' => 'Allow user to edit another user groups even he is not a member of it.');\n$FunctionList['grouplist'] = array('explain' => 'Allow user to list group');\n$FunctionList['userlist'] = array('explain' => 'Allow user to list users');\n$FunctionList['selfedit'] = array('explain' => 'Allow user to edit his own data');\n\n\n// All department option\n$FunctionList['self_all_departments'] = array('explain' => 'Allow user to assign himself to all departments option');\n$FunctionList['edit_all_departments'] = array('explain' => 'Allow user to assign other users to all departments option');\n\n// Edit mode user\n$FunctionList['assign_all_department_individual'] = array('explain' => 'Allow user edit other users all individual departments');\n$FunctionList['assign_all_department_group'] = array('explain' => 'Allow user to assign other users to all department groups');\n\n$FunctionList['assign_to_own_department_individual'] = array('explain' => 'Allow user to change other users individual departments (only if operator belong to them)');\n$FunctionList['assign_to_own_department_group'] = array('explain' => 'Allow user to change other users departments groups (only if operator belong to them)');\n\n$FunctionList['see_user_assigned_departments'] = array('explain' => 'Allow user to see to other user assigned departments');\n$FunctionList['see_user_assigned_departments_groups'] = array('explain' => 'Allow user to see to other user assigned departments groups');\n\n// Self account\n$FunctionList['see_assigned_departments'] = array('explain' => 'Allow user to see departments assigned to him');\n$FunctionList['see_assigned_departments_groups'] = array('explain' => 'Allow user to see departments groups assigned to him');\n$FunctionList['editdepartaments'] = array('explain' => 'Allow user to edit his own responsible departments/departments groups');\n\n\n$FunctionList['userlistonline'] = array('explain' => 'Allow user to see logged operators list, only from his department');\n$FunctionList['userlistonlineall'] = array('explain' => 'Allow user to see logged operators list, not only from his department');\n$FunctionList['changeonlinestatus'] = array('explain' => 'Allow user to change his online status');\n$FunctionList['changeskypenick'] = array('explain' => 'Allow user to change/enter his skype nick');\n$FunctionList['personalcannedmsg'] = array('explain' => 'Allow user to have personal canned messages');\n$FunctionList['personalautoresponder'] = array('explain' => 'Allow user to have personal auto responder messages');\n$FunctionList['changevisibility'] = array('explain' => 'Allow user to change his visibility mode');\n$FunctionList['change_visibility_list'] = array('explain' => 'Allow user to choose what list should be visible by him, pending/active/unread/closed');\n$FunctionList['allowtochoosependingmode'] = array('explain' => 'Allow user to choose what pending chats he can see, only assigned to him or all.');\n$FunctionList['receivepermissionrequest'] = array('explain' => 'Allow user to choose should he receive other operators permissions requests');\n$FunctionList['userautologin'] = array('explain' => 'Allow user to configure autologin');\n$FunctionList['canseedepartmentstats'] = array('explain' => 'Allow user to see departments statistic');\n$FunctionList['canseealldepartmentstats'] = array('explain' => 'Allow user to see all departments statistic, not only from his departments');\n$FunctionList['import'] = array('explain' => 'Allow user to import users');\n$FunctionList['loginas'] = array('explain' => 'Allow user to login as other user');\n$FunctionList['passwordsecurity'] = array('explain' => 'Allow user to set password security requirements');\n$FunctionList['see_all'] = array('explain' => 'Allow user see all users/groups not only from his group/groups');\n$FunctionList['see_all_group_users'] = array('explain' => 'Allow user see all group users he belongs to.');\n$FunctionList['changealwaysonline'] = array('explain' => 'Allow user to change always online mode');\n$FunctionList['setopstatus'] = array('explain' => 'Allow user to change other user online status from online operators widget');\n$FunctionList['change_chat_nickname'] = array('explain' => 'Allow user to change his own chat nickname');\n$FunctionList['changephoto'] = array('explain' => 'Allow user to change his own photo/avatar');\n$FunctionList['change_job_title'] = array('explain' => 'Allow user to change his own job title');\n$FunctionList['change_core_attributes'] = array('explain' => 'Allow user to change his own username/password/e-mail/XMPP Username');\n$FunctionList['change_name_surname'] = array('explain' => 'Allow user to change his own name/surname');\n$FunctionList['pswdsecurity'] = array('explain' => 'Allow user to manage password requirements');\n$FunctionList['largeactivitytimeout'] = array('explain' => 'Allow user to choose a large inactivity timeout');\n\n?>"], "filenames": ["lhc_web/design/defaulttheme/tpl/lhuser/wentinactive.tpl.php", "lhc_web/design/defaulttheme/tpl/pagelayouts/parts/user_box.tpl.php", "lhc_web/modules/lhuser/logout.php", "lhc_web/modules/lhuser/module.php"], "buggy_code_start_loc": [8, 33, 5, 23], "buggy_code_end_loc": [9, 34, 14, 24], "fixing_code_start_loc": [8, 33, 6, 23], "fixing_code_end_loc": [9, 34, 19, 25], "type": "CWE-352", "message": "livehelperchat is vulnerable to Cross-Site Request Forgery (CSRF)", "other": {"cve": {"id": "CVE-2021-4049", "sourceIdentifier": "security@huntr.dev", "published": "2021-12-07T11:15:08.087", "lastModified": "2021-12-08T14:55:08.133", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "livehelperchat is vulnerable to Cross-Site Request Forgery (CSRF)"}, {"lang": "es", "value": "livehelperchat es vulnerable a un ataque de tipo Cross-Site Request Forgery (CSRF)"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:livehelperchat:live_helper_chat:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.0", "matchCriteriaId": "9C340059-AF21-4164-8C85-B627CC108D5D"}]}]}], "references": [{"url": "https://github.com/livehelperchat/livehelperchat/commit/e7fe1aa6a087d4d21b2e8a0dadd2e08f42acbb57", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/62408fa4-2c16-4fcd-8b34-41fcdccb779e", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/livehelperchat/livehelperchat/commit/e7fe1aa6a087d4d21b2e8a0dadd2e08f42acbb57"}}