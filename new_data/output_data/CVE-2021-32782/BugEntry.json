{"buggy_code": ["/*\n * Circles - Bring cloud-users closer together.\n *\n * This file is licensed under the Affero General Public License version 3 or\n * later. See the COPYING file.\n *\n * @author Maxence Lange <maxence@artificial-owl.com>\n * @copyright 2017\n * @license GNU AGPL version 3 or any later version\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n(function() {\n\t/**\n\t * @class OCA.Circles.FileList\n\t * @augments OCA.Files.FileList\n\t *\n\t * @classdesc Circles file list.\n\t * Contains a list of files filtered by circles\n\t *\n\t * @param $el container element with existing markup for the #controls\n\t * and a table\n\t * @param [options] map of options, see other parameters\n\t * @param {Array.<string>} [options.circlesIds] array of system tag ids to\n\t * filter by\n\t */\n\tvar FileList = function($el, options) {\n\t\tthis.initialize($el, options);\n\t};\n\tFileList.prototype = _.extend({}, OCA.Files.FileList.prototype,\n\t\t/** @lends OCA.Circles.FileList.prototype */ {\n\t\tid: 'circlesfilter',\n\t\tappName: t('circles', 'Circles\\' files'),\n\n\t\t/**\n\t\t * Array of system tag ids to filter by\n\t\t *\n\t\t * @type Array.<string>\n\t\t */\n\t\t_circlesIds: [],\n\t\t_lastUsedTags: [],\n\n\t\t_clientSideSort: true,\n\t\t_allowSelection: false,\n\n\t\t_filterField: null,\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function($el, options) {\n\t\t\tOCA.Files.FileList.prototype.initialize.apply(this, arguments);\n\t\t\tif (this.initialized) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (options && options.circlesIds) {\n\t\t\t\tthis._circlesIds = options.circlesIds;\n\t\t\t}\n\n\t\t\tOC.Plugins.attach('OCA.Circles.FileList', this);\n\n\t\t\tvar $controls = this.$el.find('#controls').empty();\n\n\t\t\tthis._initFilterField($controls);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tthis.$filterField.remove();\n\n\t\t\tOCA.Files.FileList.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t_initFilterField: function($container) {\n\t\t\tvar self = this;\n\t\t\tthis.$filterField = $('<input type=\"hidden\" name=\"circles\"/>');\n\t\t\t$container.append(this.$filterField);\n\t\t\tthis.$filterField.select2({\n\t\t\t\tplaceholder: t('circles', 'Select circles to filter by'),\n\t\t\t\tallowClear: false,\n\t\t\t\tmultiple: true,\n\t\t\t\ttoggleSelect: true,\n\t\t\t\tseparator: ',',\n\t\t\t\tquery: _.bind(this._queryCirclesAutocomplete, this),\n\n\t\t\t\tid: function(circle) {\n\t\t\t\t\treturn circle.unique_id;\n\t\t\t\t},\n\n\t\t\t\tinitSelection: function(element, callback) {\n\t\t\t\t\tvar val = $(element).val().trim();\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tvar circleIds = val.split(','),\n\t\t\t\t\t\t\tcircles = [];\n\n\t\t\t\t\t\tOCA.Circles.api.listCircles(\"all\", '', 1, function(result) {\n\t\t\t\t\t\t\t_.each(circleIds, function(circleId) {\n\t\t\t\t\t\t\t\tvar circle = _.find(result.data,function(circleData) {\n\t\t\t\t\t\t\t\t\treturn circleData.unique_id == circleId;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (!_.isUndefined(circle)) {\n\t\t\t\t\t\t\t\t\tcircles.push(circle);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tcallback(circles);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback([]);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tformatResult: function (circle) {\n\t\t\t\t\treturn circle.name;\n\t\t\t\t},\n\n\t\t\t\tformatSelection: function (circle) {\n\t\t\t\t\treturn circle.name;\n\t\t\t\t\t//return OC.SystemTags.getDescriptiveTag(tag)[0].outerHTML;\n\t\t\t\t},\n\n\t\t\t\tsortResults: function(results) {\n\t\t\t\t\tresults.sort(function(a, b) {\n\t\t\t\t\t\tvar aLastUsed = self._lastUsedTags.indexOf(a.id);\n\t\t\t\t\t\tvar bLastUsed = self._lastUsedTags.indexOf(b.id);\n\n\t\t\t\t\t\tif (aLastUsed !== bLastUsed) {\n\t\t\t\t\t\t\tif (bLastUsed === -1) {\n\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (aLastUsed === -1) {\n\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn aLastUsed < bLastUsed ? -1 : 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Both not found\n\t\t\t\t\t\treturn OC.Util.naturalSortCompare(a.name, b.name);\n\t\t\t\t\t});\n\t\t\t\t\treturn results;\n\t\t\t\t},\n\n\t\t\t\tescapeMarkup: function(m) {\n\t\t\t\t\t// prevent double markup escape\n\t\t\t\t\treturn m;\n\t\t\t\t},\n\t\t\t\tformatNoMatches: function() {\n\t\t\t\t\treturn t('circles', 'No circles found');\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.$filterField.on('change', _.bind(this._onTagsChanged, this));\n\t\t\treturn this.$filterField;\n\t\t},\n\n\t\t/**\n\t\t * Autocomplete function for dropdown results\n\t\t *\n\t\t * @param {Object} query select2 query object\n\t\t */\n\t\t_queryCirclesAutocomplete: function(query) {\n\n\t\t\tOCA.Circles.api.listCircles(\"all\", query.term, 1, function(result) {\n\t\t\t\tquery.callback({\n\t\t\t\t\tresults: result.data\n\t\t\t\t});\n\t\t\t});\n\t\t\t/*\n\t\t\t OC.SystemTags.collection.fetch({\n\t\t\t success: function() {\n\t\t\t var results = OC.SystemTags.collection.filterByName(query.term);\n\n\t\t\t query.callback({\n\t\t\t results: _.invoke(results, 'toJSON')\n\t\t\t });\n\t\t\t }\n\t\t\t });\n\t\t\t */\n\t\t},\n\n\t\t/**\n\t\t * Event handler for when the URL changed\n\t\t */\n\t\t_onUrlChanged: function(e) {\n\t\t\tif (e.dir) {\n\t\t\t\tvar circles = _.filter(e.dir.split('/'), function(val) { return val.trim() !== ''; });\n\t\t\t\tthis.$filterField.select2('val', circles || []);\n\t\t\t\tthis._circlesIds = circles;\n\t\t\t\tthis.reload();\n\t\t\t}\n\t\t},\n\n\t\t_onTagsChanged: function(ev) {\n\t\t\tvar val = $(ev.target).val().trim();\n\t\t\tif (val !== '') {\n\t\t\t\tthis._circlesIds = val.split(',');\n\t\t\t} else {\n\t\t\t\tthis._circlesIds = [];\n\t\t\t}\n\n\t\t\tthis.$el.trigger(jQuery.Event('changeDirectory', {\n\t\t\t\tdir: this._circlesIds.join('/')\n\t\t\t}));\n\t\t\tthis.reload();\n\t\t},\n\n\t\tupdateEmptyContent: function() {\n\t\t\tvar dir = this.getCurrentDirectory();\n\t\t\tif (dir === '/') {\n\t\t\t\t// root has special permissions\n\t\t\t\tif (!this._circlesIds.length) {\n\t\t\t\t\t// no tags selected\n\t\t\t\t\tthis.$el.find('#emptycontent').html('<div class=\"icon-systemtags\"></div>' +\n\t\t\t\t\t\t'<h2>' + t('circles', 'Please select circles to filter by') + '</h2>');\n\t\t\t\t} else {\n\t\t\t\t\t// tags selected but no results\n\t\t\t\t\tthis.$el.find('#emptycontent').html('<div class=\"icon-systemtags\"></div>' +\n\t\t\t\t\t\t'<h2>' + t('circles', 'No files found for the selected circles') + '</h2>');\n\t\t\t\t}\n\t\t\t\tthis.$el.find('#emptycontent').toggleClass('hidden', !this.isEmpty);\n\t\t\t\tthis.$el.find('#filestable thead th').toggleClass('hidden', this.isEmpty);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tOCA.Files.FileList.prototype.updateEmptyContent.apply(this, arguments);\n\t\t\t}\n\t\t},\n\n\t\tgetDirectoryPermissions: function() {\n\t\t\treturn OC.PERMISSION_READ | OC.PERMISSION_DELETE;\n\t\t},\n\n\t\tupdateStorageStatistics: function() {\n\t\t\t// no op because it doesn't have\n\t\t\t// storage info like free space / used space\n\t\t},\n\n\t\treload: function() {\n\t\t\tif (!this._circlesIds.length) {\n\t\t\t\t// don't reload\n\t\t\t\tthis.updateEmptyContent();\n\t\t\t\tthis.setFiles([]);\n\t\t\t\treturn $.Deferred().resolve();\n\t\t\t}\n\n\t\t\tthis._selectedFiles = {};\n\t\t\tthis._selectionSummary.clear();\n\t\t\tif (this._currentFileModel) {\n\t\t\t\tthis._currentFileModel.off();\n\t\t\t}\n\t\t\tthis._currentFileModel = null;\n\t\t\tthis.$el.find('.select-all').prop('checked', false);\n\t\t\tthis.showMask();\n\t\t\tthis._reloadCall = this.filesClient.getFilteredFiles(\n\t\t\t\t{\n\t\t\t\t\tcirclesIds: this._circlesIds\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperties: this._getWebdavProperties()\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (this._detailsView) {\n\t\t\t\t// close sidebar\n\t\t\t\tthis._updateDetailsView(null);\n\t\t\t}\n\t\t\tvar callBack = this.reloadCallback.bind(this);\n\t\t\treturn this._reloadCall.then(callBack, callBack);\n\t\t},\n\n\t\treloadCallback: function(status, result) {\n\t\t\tif (result) {\n\t\t\t\t// prepend empty dir info because original handler\n\t\t\t\tresult.unshift({});\n\t\t\t}\n\n\t\t\treturn OCA.Files.FileList.prototype.reloadCallback.call(this, status, result);\n\t\t}\n\t});\n\n\tOCA.Circles.FileList = FileList;\n})();\n\n"], "fixing_code": ["/*\n * Circles - Bring cloud-users closer together.\n *\n * This file is licensed under the Affero General Public License version 3 or\n * later. See the COPYING file.\n *\n * @author Maxence Lange <maxence@artificial-owl.com>\n * @copyright 2017\n * @license GNU AGPL version 3 or any later version\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nfunction escapeHTML(text) {\n\treturn text.toString()\n\t\t.split('&').join('&amp;')\n\t\t.split('<').join('&lt;')\n\t\t.split('>').join('&gt;')\n\t\t.split('\"').join('&quot;')\n\t\t.split('\\'').join('&#039;')\n}\n\n(function() {\n\t/**\n\t * @class OCA.Circles.FileList\n\t * @augments OCA.Files.FileList\n\t *\n\t * @classdesc Circles file list.\n\t * Contains a list of files filtered by circles\n\t *\n\t * @param $el container element with existing markup for the #controls\n\t * and a table\n\t * @param [options] map of options, see other parameters\n\t * @param {Array.<string>} [options.circlesIds] array of system tag ids to\n\t * filter by\n\t */\n\tvar FileList = function($el, options) {\n\t\tthis.initialize($el, options);\n\t};\n\tFileList.prototype = _.extend({}, OCA.Files.FileList.prototype,\n\t\t/** @lends OCA.Circles.FileList.prototype */ {\n\t\tid: 'circlesfilter',\n\t\tappName: t('circles', 'Circles\\' files'),\n\n\t\t/**\n\t\t * Array of system tag ids to filter by\n\t\t *\n\t\t * @type Array.<string>\n\t\t */\n\t\t_circlesIds: [],\n\t\t_lastUsedTags: [],\n\n\t\t_clientSideSort: true,\n\t\t_allowSelection: false,\n\n\t\t_filterField: null,\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function($el, options) {\n\t\t\tOCA.Files.FileList.prototype.initialize.apply(this, arguments);\n\t\t\tif (this.initialized) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (options && options.circlesIds) {\n\t\t\t\tthis._circlesIds = options.circlesIds;\n\t\t\t}\n\n\t\t\tOC.Plugins.attach('OCA.Circles.FileList', this);\n\n\t\t\tvar $controls = this.$el.find('#controls').empty();\n\n\t\t\tthis._initFilterField($controls);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tthis.$filterField.remove();\n\n\t\t\tOCA.Files.FileList.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t_initFilterField: function($container) {\n\t\t\tvar self = this;\n\t\t\tthis.$filterField = $('<input type=\"hidden\" name=\"circles\"/>');\n\t\t\t$container.append(this.$filterField);\n\t\t\tthis.$filterField.select2({\n\t\t\t\tplaceholder: t('circles', 'Select circles to filter by'),\n\t\t\t\tallowClear: false,\n\t\t\t\tmultiple: true,\n\t\t\t\ttoggleSelect: true,\n\t\t\t\tseparator: ',',\n\t\t\t\tquery: _.bind(this._queryCirclesAutocomplete, this),\n\n\t\t\t\tid: function(circle) {\n\t\t\t\t\treturn circle.unique_id;\n\t\t\t\t},\n\n\t\t\t\tinitSelection: function(element, callback) {\n\t\t\t\t\tvar val = $(element).val().trim();\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tvar circleIds = val.split(','),\n\t\t\t\t\t\t\tcircles = [];\n\n\t\t\t\t\t\tOCA.Circles.api.listCircles(\"all\", '', 1, function(result) {\n\t\t\t\t\t\t\t_.each(circleIds, function(circleId) {\n\t\t\t\t\t\t\t\tvar circle = _.find(result.data,function(circleData) {\n\t\t\t\t\t\t\t\t\treturn circleData.unique_id == circleId;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (!_.isUndefined(circle)) {\n\t\t\t\t\t\t\t\t\tcircles.push(circle);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tcallback(circles);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback([]);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tformatResult: function (circle) {\n\t\t\t\t\treturn escapeHTML(circle.name);\n\t\t\t\t},\n\n\t\t\t\tformatSelection: function (circle) {\n\t\t\t\t\treturn escapeHTML(circle.name);\n\t\t\t\t},\n\n\t\t\t\tsortResults: function(results) {\n\t\t\t\t\tresults.sort(function(a, b) {\n\t\t\t\t\t\tvar aLastUsed = self._lastUsedTags.indexOf(a.id);\n\t\t\t\t\t\tvar bLastUsed = self._lastUsedTags.indexOf(b.id);\n\n\t\t\t\t\t\tif (aLastUsed !== bLastUsed) {\n\t\t\t\t\t\t\tif (bLastUsed === -1) {\n\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (aLastUsed === -1) {\n\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn aLastUsed < bLastUsed ? -1 : 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Both not found\n\t\t\t\t\t\treturn OC.Util.naturalSortCompare(a.name, b.name);\n\t\t\t\t\t});\n\t\t\t\t\treturn results;\n\t\t\t\t},\n\n\t\t\t\tescapeMarkup: function(m) {\n\t\t\t\t\t// prevent double markup escape\n\t\t\t\t\treturn m;\n\t\t\t\t},\n\t\t\t\tformatNoMatches: function() {\n\t\t\t\t\treturn t('circles', 'No circles found');\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.$filterField.on('change', _.bind(this._onTagsChanged, this));\n\t\t\treturn this.$filterField;\n\t\t},\n\n\t\t/**\n\t\t * Autocomplete function for dropdown results\n\t\t *\n\t\t * @param {Object} query select2 query object\n\t\t */\n\t\t_queryCirclesAutocomplete: function(query) {\n\n\t\t\tOCA.Circles.api.listCircles(\"all\", query.term, 1, function(result) {\n\t\t\t\tquery.callback({\n\t\t\t\t\tresults: result.data\n\t\t\t\t});\n\t\t\t});\n\t\t\t/*\n\t\t\t OC.SystemTags.collection.fetch({\n\t\t\t success: function() {\n\t\t\t var results = OC.SystemTags.collection.filterByName(query.term);\n\n\t\t\t query.callback({\n\t\t\t results: _.invoke(results, 'toJSON')\n\t\t\t });\n\t\t\t }\n\t\t\t });\n\t\t\t */\n\t\t},\n\n\t\t/**\n\t\t * Event handler for when the URL changed\n\t\t */\n\t\t_onUrlChanged: function(e) {\n\t\t\tif (e.dir) {\n\t\t\t\tvar circles = _.filter(e.dir.split('/'), function(val) { return val.trim() !== ''; });\n\t\t\t\tthis.$filterField.select2('val', circles || []);\n\t\t\t\tthis._circlesIds = circles;\n\t\t\t\tthis.reload();\n\t\t\t}\n\t\t},\n\n\t\t_onTagsChanged: function(ev) {\n\t\t\tvar val = $(ev.target).val().trim();\n\t\t\tif (val !== '') {\n\t\t\t\tthis._circlesIds = val.split(',');\n\t\t\t} else {\n\t\t\t\tthis._circlesIds = [];\n\t\t\t}\n\n\t\t\tthis.$el.trigger(jQuery.Event('changeDirectory', {\n\t\t\t\tdir: this._circlesIds.join('/')\n\t\t\t}));\n\t\t\tthis.reload();\n\t\t},\n\n\t\tupdateEmptyContent: function() {\n\t\t\tvar dir = this.getCurrentDirectory();\n\t\t\tif (dir === '/') {\n\t\t\t\t// root has special permissions\n\t\t\t\tif (!this._circlesIds.length) {\n\t\t\t\t\t// no tags selected\n\t\t\t\t\tthis.$el.find('#emptycontent').html('<div class=\"icon-systemtags\"></div>' +\n\t\t\t\t\t\t'<h2>' + t('circles', 'Please select circles to filter by') + '</h2>');\n\t\t\t\t} else {\n\t\t\t\t\t// tags selected but no results\n\t\t\t\t\tthis.$el.find('#emptycontent').html('<div class=\"icon-systemtags\"></div>' +\n\t\t\t\t\t\t'<h2>' + t('circles', 'No files found for the selected circles') + '</h2>');\n\t\t\t\t}\n\t\t\t\tthis.$el.find('#emptycontent').toggleClass('hidden', !this.isEmpty);\n\t\t\t\tthis.$el.find('#filestable thead th').toggleClass('hidden', this.isEmpty);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tOCA.Files.FileList.prototype.updateEmptyContent.apply(this, arguments);\n\t\t\t}\n\t\t},\n\n\t\tgetDirectoryPermissions: function() {\n\t\t\treturn OC.PERMISSION_READ | OC.PERMISSION_DELETE;\n\t\t},\n\n\t\tupdateStorageStatistics: function() {\n\t\t\t// no op because it doesn't have\n\t\t\t// storage info like free space / used space\n\t\t},\n\n\t\treload: function() {\n\t\t\tif (!this._circlesIds.length) {\n\t\t\t\t// don't reload\n\t\t\t\tthis.updateEmptyContent();\n\t\t\t\tthis.setFiles([]);\n\t\t\t\treturn $.Deferred().resolve();\n\t\t\t}\n\n\t\t\tthis._selectedFiles = {};\n\t\t\tthis._selectionSummary.clear();\n\t\t\tif (this._currentFileModel) {\n\t\t\t\tthis._currentFileModel.off();\n\t\t\t}\n\t\t\tthis._currentFileModel = null;\n\t\t\tthis.$el.find('.select-all').prop('checked', false);\n\t\t\tthis.showMask();\n\t\t\tthis._reloadCall = this.filesClient.getFilteredFiles(\n\t\t\t\t{\n\t\t\t\t\tcirclesIds: this._circlesIds\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperties: this._getWebdavProperties()\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (this._detailsView) {\n\t\t\t\t// close sidebar\n\t\t\t\tthis._updateDetailsView(null);\n\t\t\t}\n\t\t\tvar callBack = this.reloadCallback.bind(this);\n\t\t\treturn this._reloadCall.then(callBack, callBack);\n\t\t},\n\n\t\treloadCallback: function(status, result) {\n\t\t\tif (result) {\n\t\t\t\t// prepend empty dir info because original handler\n\t\t\t\tresult.unshift({});\n\t\t\t}\n\n\t\t\treturn OCA.Files.FileList.prototype.reloadCallback.call(this, status, result);\n\t\t}\n\t});\n\n\tOCA.Circles.FileList = FileList;\n})();\n\n"], "filenames": ["js/files/circles.files.list.js"], "buggy_code_start_loc": [24], "buggy_code_end_loc": [133], "fixing_code_start_loc": [25], "fixing_code_end_loc": [143], "type": "CWE-79", "message": "Nextcloud Circles is an open source social network built for the nextcloud ecosystem. In affected versions the Nextcloud Circles application is vulnerable to a stored Cross-Site Scripting (XSS) vulnerability. Due the strict Content-Security-Policy shipped with Nextcloud, this issue is not exploitable on modern browsers supporting Content-Security-Policy. It is recommended that the Nextcloud Circles application is upgraded to 0.21.3, 0.20.10 or 0.19.14 to resolve this issue. As a workaround users may use a browser that has support for Content-Security-Policy. A notable exemption is Internet Explorer which does not support CSP properly.", "other": {"cve": {"id": "CVE-2021-32782", "sourceIdentifier": "security-advisories@github.com", "published": "2021-09-07T20:15:07.603", "lastModified": "2021-09-10T19:59:26.357", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Nextcloud Circles is an open source social network built for the nextcloud ecosystem. In affected versions the Nextcloud Circles application is vulnerable to a stored Cross-Site Scripting (XSS) vulnerability. Due the strict Content-Security-Policy shipped with Nextcloud, this issue is not exploitable on modern browsers supporting Content-Security-Policy. It is recommended that the Nextcloud Circles application is upgraded to 0.21.3, 0.20.10 or 0.19.14 to resolve this issue. As a workaround users may use a browser that has support for Content-Security-Policy. A notable exemption is Internet Explorer which does not support CSP properly."}, {"lang": "es", "value": "Nextcloud Circles es una red social de c\u00f3digo abierto construida para el ecosistema nextcloud. En las versiones afectadas la aplicaci\u00f3n Nextcloud Circles es susceptible a una vulnerabilidad de tipo Cross-Site Scripting (XSS) almacenado. Debido a una estricta pol\u00edtica de seguridad de contenidos incluida en Nextcloud, este problema no es explotable en los navegadores modernos que soportan la pol\u00edtica de seguridad de contenidos. Es recomendado actualizar la aplicaci\u00f3n Nextcloud Circles a versiones 0.21.3, 0.20.10 o 0.19.14 para resolver este problema. Como soluci\u00f3n alternativa, los usuarios pueden usar un navegador que sea compatible con Content-Security-Policy. Una excepci\u00f3n notable es Internet Explorer, que no soporta CSP adecuadamente"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.3, "impactScore": 4.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nextcloud:circles:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.19.14", "matchCriteriaId": "BE45116B-2FBC-4582-8DA8-A7F2F422A96A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:nextcloud:circles:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.20.0", "versionEndExcluding": "0.20.10", "matchCriteriaId": "44019403-A42F-4090-B411-03BE616A95C5"}, {"vulnerable": true, "criteria": "cpe:2.3:a:nextcloud:circles:*:*:*:*:*:*:*:*", "versionStartIncluding": "0.21.0", "versionEndExcluding": "0.21.3", "matchCriteriaId": "C98B329D-422E-4CFD-9BB6-523D50E5767A"}]}]}], "references": [{"url": "https://github.com/nextcloud/circles/commit/dbb97a83ccb342c839a54f088aa19b8ba6844b0e", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/nextcloud/security-advisories/security/advisories/GHSA-hgpq-28gj-jrj9", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/1217606", "source": "security-advisories@github.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nextcloud/circles/commit/dbb97a83ccb342c839a54f088aa19b8ba6844b0e"}}