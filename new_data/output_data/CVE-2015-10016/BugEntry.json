{"buggy_code": ["<!DOCTYPE html>\n<html>\n<head>\n\t<title>Region Scripts</title>\n\t<style type=\"text/css\">\n\t\tbody\t\t{ font-family: 'Monaco'; font-size: 12px; }\n\t\ttable \t\t{ margin: auto; border-collapse: collapse;\n\t\t\t\t\t  border: 1px solid black; }\n\t\ttd\t\t\t{ border-right: 1px solid #aaa;\n\t\t\t\t\t  padding: 2px 4px 2px 4px; \n\t\t\t\t\t  text-align: left; }\n\t\ttr.root\t\t{ background: #ccd; }\n\t\ttr.prim\t\t{ background: #eee; }\n\t\ttr.root,\n\t\tth\t\t\t{ border-top: 1pt solid black; }\n\t\tth \t\t\t{ font-weight: bold;\n\t\t\t\t\t text-align: center; }\n\t</style>\n</head>\n\n\n<body>\n\n\n\t\t\n\n\n<?php\n\n\t// List all scripts in a region\n\t// Usage : script.php?region_name\n\t// Jeff Kelley, 2015\n\n\terror_reporting(E_ALL ^ E_NOTICE);\n\n\t// This function returns the database name for a given region.\n\t// Our grid uses one database per simulator, with port numbers\n\t// and database names following a regular scheme. The db name\n\t// is 'sim' appended with the two last digits of the server port.\n\t//\n\t// ADAPT THIS FOR YOUR GRID\n\n\tfunction DatabaseForRegion($region) {\n// \t\t$serverPort = $region['serverHttpPort'];\n// \t\treturn sprintf (\"sim%02d\", $serverPort-9000);\n\t\treturn 'opensim';\n\t}\n\n\t// This is the database name for ROBUST\n\t//\n\t// ADAPT THIS FOR YOUR GRID\n\t\n\t$robustDB = 'robust';\n\n\n\t/////////////////////////////\n\t// Nothing to change below //\n\t/////////////////////////////\n\n\n\t// Define functions sqlUser(), sqlPass(), sqlHost(), sqlBase()\n\t// Keep outside of main code to hide sensitive information\n\tinclude \"db_access.php\";\n\n\t// Connect to the database engine\n\t$link = new mysqli(sqlHost(),sqlUser(),sqlPass(),sqlBase());\n\tif ($link->connect_errno)\n\t\tdie('Connect Error: ' . $link->connect_errno . ' (' . $link->connect_error . ')');\n\n\t// Get region name from query string\n\t$region = urldecode ($_SERVER['QUERY_STRING']);\n\tif ($region=='') die (\"You must specify a region\");\n\n\t// Get region data\n\t$query  = \"SELECT * FROM $robustDB.regions WHERE regionName='$region';\";\n\t$answer = $link->query($query);\n\tif (!$answer->num_rows) die (\"Region $region not found\\n\");\n\n\t$region = $answer->fetch_assoc();\n\t$regionUuid = $region['uuid'];\n\t$regionDB = DatabaseForRegion ($region);\n\n\t// Get scripts inside region\n\n\t$query = \"SELECT\n\t\t\tprimitems.name AS itemName, primitems.primID,primitems.assetID,\n\t\t\tprims.Name AS primName, prims.LinkNumber, prims.SceneGroupID,\n\t\t\tprims.GroupPositionX, prims.GroupPositionY, prims.GroupPositionZ\n\t\t\tFROM $regionDB.primitems\n\t\t\tJOIN $regionDB.prims ON primitems.primID = prims.UUID\n\t\t\tWHERE prims.RegionUUID = '$regionUuid'\n\t\t\tAND   primitems.assetType=10\n\t\t\tORDER BY prims.SceneGroupID, prims.LinkNumber;\";\n\n\t$answer = $link->query($query);\n\t$prims  = $answer->fetch_all(MYSQLI_ASSOC);\n\n\t// Loop on prims\n\n\techo \"<table>\\n\";\n\n\techo \"<thead>\\n\";\n\techo \"<tr><th>Loc</th><th>Link</th><th>Prim</th><th>Script</th><th>UUID</th></tr>\\n\";\n\techo \"<thead>\\n\";\n\n\t$counter = 0;\n\t$currentGroup = '';\n\n\tforeach ($prims as $prim) {\n\t\t$counter++;\n\n\t\t$primloc = sprintf (\"%3d %3d %3d\", \n\t\t\t\t$prim['GroupPositionX'],\n\t\t\t\t$prim['GroupPositionY'],\n\t\t\t\t$prim['GroupPositionZ']\n\t\t\t\t);\n\n \t\t$groupID = $prim['SceneGroupID'];\n\t\t$assetID = $prim['assetID'];\n\n\t\t// If group has changed, find root\n\n\t\tif ($currentGroup != $groupID) {\n\t\t\t$currentGroup = $groupID;\n\n\t\t\t$query = \"SELECT name,\n\t\t\t\t\tLinkNumber,\n\t\t\t\t\tSceneGroupID,\n\t\t\t\t\tGroupPositionX,\n\t\t\t\t\tGroupPositionY,\n\t\t\t\t\tGroupPositionZ\n\t\t\t\t\tFROM $regionDB.prims\n\t\t\t\t\tWHERE SceneGroupID = '$groupID'\n\t\t\t\t\tAND   LinkNumber IN (0,1);\";\n\t\n\t\t\t$answer = $link->query($query);\n\t\t\t$root   = $answer->fetch_assoc();\n\n\t\t\t$rootloc = sprintf (\"%3d %3d %3d\", \n\t\t\t\t\t$root['GroupPositionX'],\n\t\t\t\t\t$root['GroupPositionY'],\n\t\t\t\t\t$root['GroupPositionZ']\n\t\t\t\t\t);\n\n\t\t\trow ('root',\n\t\t\t\t$primloc,\n\t\t\t\t$root['LinkNumber'],\n\t\t\t\t$root['name'],\n\t\t\t\t'',\n\t\t\t\t'');\n\t\t}\n\n\t\tif ($primloc != $rootloc)\n\t\t\techo \"Internal error, primloc != rootloc<br>\";\n\t\n\t\trow ('prim',\n\t\t\t'',\n\t\t\t$prim['LinkNumber'],\n\t\t\t$prim['primName'],\n\t\t\t$prim['itemName'],\n\t\t\t\"<a href=getasset.php?$assetID>$assetID</a>\");\n\t}\n\n\techo \"<tfoot>\\n\";\n\techo \"<tr><th colspan=5>Total scripts : $counter</th></tr>\\n\";\n\techo \"</tfoot>\\n\";\n\n\techo \"</table>\\n\";\n\n\n\tfunction row($class) {\n\t\techo \"<tr class=$class>\";\n\t \t$nargs = func_num_args();\n\t \tfor ($i=1; $i<$nargs; $i++) {\n\t\t \t$arg = func_get_arg($i);\n\t\t \techo \"<td>$arg</td>\";\n\t\t }\n\t\techo \"</tr>\\n\";\n \t}\n\n?>"], "fixing_code": ["<!DOCTYPE html>\n<html>\n<head>\n\t<title>Region Scripts</title>\n\t<style type=\"text/css\">\n\t\tbody\t\t{ font-family: 'Monaco'; font-size: 12px; }\n\t\ttable \t\t{ margin: auto; border-collapse: collapse;\n\t\t\t\t\t  border: 1px solid black; }\n\t\ttd\t\t\t{ border-right: 1px solid #aaa;\n\t\t\t\t\t  padding: 2px 4px 2px 4px; \n\t\t\t\t\t  text-align: left; }\n\t\ttr.root\t\t{ background: #ccd; }\n\t\ttr.prim\t\t{ background: #eee; }\n\t\ttr.root,\n\t\tth\t\t\t{ border-top: 1pt solid black; }\n\t\tth \t\t\t{ font-weight: bold;\n\t\t\t\t\t text-align: center; }\n\t</style>\n</head>\n\n\n<body>\n\n\n\t\t\n\n\n<?php\n\n\t// List all scripts in a region\n\t// Usage : script.php?region_name\n\t// Jeff Kelley, 2015\n\n\terror_reporting(E_ALL ^ E_NOTICE);\n\n\t// This function returns the database name for a given region.\n\t// Our grid uses one database per simulator, with port numbers\n\t// and database names following a regular scheme. The db name\n\t// is 'sim' appended with the two last digits of the server port.\n\t//\n\t// ADAPT THIS FOR YOUR GRID\n\n\tfunction DatabaseForRegion($region) {\n// \t\t$serverPort = $region['serverHttpPort'];\n// \t\treturn sprintf (\"sim%02d\", $serverPort-9000);\n\t\treturn 'opensim';\n\t}\n\n\t// This is the database name for ROBUST\n\t//\n\t// ADAPT THIS FOR YOUR GRID\n\t\n\t$robustDB = 'robust';\n\n\n\t/////////////////////////////\n\t// Nothing to change below //\n\t/////////////////////////////\n\n\n\t// Define functions sqlUser(), sqlPass(), sqlHost(), sqlBase()\n\t// Keep outside of main code to hide sensitive information\n\tinclude \"db_access.php\";\n\n\t// Connect to the database engine\n\t$link = new mysqli(sqlHost(),sqlUser(),sqlPass(),sqlBase());\n\tif ($link->connect_errno)\n\t\tdie('Connect Error: ' . $link->connect_errno . ' (' . $link->connect_error . ')');\n\n\t// Get region name from query string\n\t$region = urldecode ($_SERVER['QUERY_STRING']);\n\tif ($region=='') die (\"You must specify a region\");\n\t$region = mysql_real_escape_string($region);\n\n\t// Get region data\n\t$query  = \"SELECT * FROM $robustDB.regions WHERE regionName='$region';\";\n\t$answer = $link->query($query);\n\tif (!$answer->num_rows) die (\"Region $region not found\\n\");\n\n\t$region = $answer->fetch_assoc();\n\t$regionUuid = $region['uuid'];\n\t$regionDB = DatabaseForRegion ($region);\n\n\t// Get scripts inside region\n\n\t$query = \"SELECT\n\t\t\tprimitems.name AS itemName, primitems.primID,primitems.assetID,\n\t\t\tprims.Name AS primName, prims.LinkNumber, prims.SceneGroupID,\n\t\t\tprims.GroupPositionX, prims.GroupPositionY, prims.GroupPositionZ\n\t\t\tFROM $regionDB.primitems\n\t\t\tJOIN $regionDB.prims ON primitems.primID = prims.UUID\n\t\t\tWHERE prims.RegionUUID = '$regionUuid'\n\t\t\tAND   primitems.assetType=10\n\t\t\tORDER BY prims.SceneGroupID, prims.LinkNumber;\";\n\n\t$answer = $link->query($query);\n\t$prims  = $answer->fetch_all(MYSQLI_ASSOC);\n\n\t// Loop on prims\n\n\techo \"<table>\\n\";\n\n\techo \"<thead>\\n\";\n\techo \"<tr><th>Loc</th><th>Link</th><th>Prim</th><th>Script</th><th>UUID</th></tr>\\n\";\n\techo \"<thead>\\n\";\n\n\t$counter = 0;\n\t$currentGroup = '';\n\n\tforeach ($prims as $prim) {\n\t\t$counter++;\n\n\t\t$primloc = sprintf (\"%3d %3d %3d\", \n\t\t\t\t$prim['GroupPositionX'],\n\t\t\t\t$prim['GroupPositionY'],\n\t\t\t\t$prim['GroupPositionZ']\n\t\t\t\t);\n\n \t\t$groupID = $prim['SceneGroupID'];\n\t\t$assetID = $prim['assetID'];\n\n\t\t// If group has changed, find root\n\n\t\tif ($currentGroup != $groupID) {\n\t\t\t$currentGroup = $groupID;\n\n\t\t\t$query = \"SELECT name,\n\t\t\t\t\tLinkNumber,\n\t\t\t\t\tSceneGroupID,\n\t\t\t\t\tGroupPositionX,\n\t\t\t\t\tGroupPositionY,\n\t\t\t\t\tGroupPositionZ\n\t\t\t\t\tFROM $regionDB.prims\n\t\t\t\t\tWHERE SceneGroupID = '$groupID'\n\t\t\t\t\tAND   LinkNumber IN (0,1);\";\n\t\n\t\t\t$answer = $link->query($query);\n\t\t\t$root   = $answer->fetch_assoc();\n\n\t\t\t$rootloc = sprintf (\"%3d %3d %3d\", \n\t\t\t\t\t$root['GroupPositionX'],\n\t\t\t\t\t$root['GroupPositionY'],\n\t\t\t\t\t$root['GroupPositionZ']\n\t\t\t\t\t);\n\n\t\t\trow ('root',\n\t\t\t\t$primloc,\n\t\t\t\t$root['LinkNumber'],\n\t\t\t\t$root['name'],\n\t\t\t\t'',\n\t\t\t\t'');\n\t\t}\n\n\t\tif ($primloc != $rootloc)\n\t\t\techo \"Internal error, primloc != rootloc<br>\";\n\t\n\t\trow ('prim',\n\t\t\t'',\n\t\t\t$prim['LinkNumber'],\n\t\t\t$prim['primName'],\n\t\t\t$prim['itemName'],\n\t\t\t\"<a href=getasset.php?$assetID>$assetID</a>\");\n\t}\n\n\techo \"<tfoot>\\n\";\n\techo \"<tr><th colspan=5>Total scripts : $counter</th></tr>\\n\";\n\techo \"</tfoot>\\n\";\n\n\techo \"</table>\\n\";\n\n\n\tfunction row($class) {\n\t\techo \"<tr class=$class>\";\n\t \t$nargs = func_num_args();\n\t \tfor ($i=1; $i<$nargs; $i++) {\n\t\t \t$arg = func_get_arg($i);\n\t\t \techo \"<td>$arg</td>\";\n\t\t }\n\t\techo \"</tr>\\n\";\n \t}\n\n?>"], "filenames": ["regionscrits.php"], "buggy_code_start_loc": [72], "buggy_code_end_loc": [72], "fixing_code_start_loc": [73], "fixing_code_end_loc": [74], "type": "CWE-89", "message": "A vulnerability, which was classified as critical, has been found in jeff-kelley opensim-utils. Affected by this issue is the function DatabaseForRegion of the file regionscrits.php. The manipulation of the argument region leads to sql injection. The name of the patch is c29e5c729a833a29dbf5b1e505a0553fe154575e. It is recommended to apply a patch to fix this issue. VDB-217550 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10016", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-06T10:15:09.917", "lastModified": "2023-01-12T16:14:45.353", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as critical, has been found in jeff-kelley opensim-utils. Affected by this issue is the function DatabaseForRegion of the file regionscrits.php. The manipulation of the argument region leads to sql injection. The name of the patch is c29e5c729a833a29dbf5b1e505a0553fe154575e. It is recommended to apply a patch to fix this issue. VDB-217550 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:opensim-utils_project:opensim-utils:*:*:*:*:*:*:*:*", "versionEndExcluding": "12-14-2015", "matchCriteriaId": "72AE3628-5DCA-4162-87E0-500C5560C676"}]}]}], "references": [{"url": "https://github.com/jeff-kelley/opensim-utils/commit/c29e5c729a833a29dbf5b1e505a0553fe154575e", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217550", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217550", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jeff-kelley/opensim-utils/commit/c29e5c729a833a29dbf5b1e505a0553fe154575e"}}