{"buggy_code": ["## ---------------------------------------------------------------------------\n## See the NOTICE file distributed with this work for additional\n## information regarding copyright ownership.\n##\n## This is free software; you can redistribute it and/or modify it\n## under the terms of the GNU Lesser General Public License as\n## published by the Free Software Foundation; either version 2.1 of\n## the License, or (at your option) any later version.\n##\n## This software is distributed in the hope that it will be useful,\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n## Lesser General Public License for more details.\n##\n## You should have received a copy of the GNU Lesser General Public\n## License along with this software; if not, write to the Free\n## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n## 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n## ---------------------------------------------------------------------------\n#######################################################\n###              DELETE PAGE ACTION\n###              ------------------\n###\n#######################################################\n##\n#######################################################\n##                     GLOBALS\n#######################################################\n#set($fullmsg = '')\n#set($quote = '\"')\n#set($hasInlinks = false)\n#######################################################\n##                     DISPLAY\n#######################################################\n#set ($discard = $xwiki.jsfx.use('js/xwiki/delete.js'))\n#template('refactoringStatus_macros.vm')\n#template('refactoring_macros.vm')\n#template('xwikivars.vm')\n\n#controller()\n#macro(displayContent $deletecontent)\n#template(\"startpage.vm\")\n<div class=\"main\">\n  <div id=\"mainContentArea\">\n    #template(\"hierarchy.vm\")\n    #define($title)<a href=\"$doc.getURL('view')\">$!escapetool.xml($doc.plainTitle)</a>#end\n    #set($titleToDisplay = $services.localization.render('core.delete.title', [$title]))\n    <div class=\"xcontent\">\n      #template('contentheader.vm')\n      $deletecontent\n      <div class=\"clearfloats\"></div>\n    </div> ## xcontent\n  </div>## mainContentArea\n</div>## main\n#template(\"endpage.vm\")\n#end\n#######################################################\n##                    CONTROLLER\n#######################################################\n#macro(controller)\n  #if(\"$!{request.jobId}\" != '')\n    #set ($deleteJobStatus = $services.job.getJobStatus($request.jobId.split('/')))\n    ## A delete job is running\n    #if ($xcontext.action == 'get')\n      #outputDeleteJobStatusJSON($deleteJobStatus)\n    #else\n      #set ($content = \"#displayDeleteJobStatus($deleteJobStatus)\")\n      #displayContent($content)\n    #end\n  #else\n    #if(\"$!{request.id}\" != '')\n      ## request.id means that we are deleting a document from the recycle bin\n      #set ($content = \"#displayCompletelyDeleteConfirmMessage()\")\n      #displayContent($content)\n    #else\n      #set ($content = \"#displayConfirmationPage()\")\n      #displayContent($content)\n    #end\n  #end\n#end\n\n#macro (outputDeleteJobStatusJSON $deleteJobStatus)\n  #getJobStatusJSON($deleteJobStatus $json)\n  $response.setContentType('application/json')\n  $jsontool.serialize($json)\n#end\n\n#######################################################\n##            DISPLAY RUNNING JOB\n#######################################################\n#macro (displayDeleteJobStatus $deleteJobStatus)\n  #set ($discard = $xwiki.jsfx.use('uicomponents/job/job.js'))\n  ## TODO: allows question templates to inject the web resources they need\n  #set ($discard = $xwiki.linkx.use($services.webjars.url('org.xwiki.platform:xwiki-platform-tree-webjar', 'tree.min.css',\n    {'evaluate': true}), {'type': 'text/css', 'rel': 'stylesheet'}))\n  #set ($discard = $xwiki.jsfx.use(\"uicomponents/job/question/ExtensionBreakingQuestion.js\", true))\n  #set ($discard = $xwiki.jsfx.use(\"uicomponents/job/question/XClassBreakingQuestion.js\", true))\n  #set ($deleteJobState = $deleteJobStatus.state)\n  #set ($finished = $deleteJobState == 'FINISHED')\n  #set ($deleteJobRequest = $deleteJobStatus.request)\n  #set ($jobStatusURL = $doc.getURL('get', $escapetool.url({\n    'xpage': 'delete',\n    'jobId': $request.jobId,\n    'outputSyntax': 'plain'\n  })))\n  <div class=\"xcontent job-status\" data-url=\"$jobStatusURL\">\n  <h2>$services.localization.render('core.delete.waitmessage')</h2>\n  #if (!$finished)\n    #displayJobProgressBar($deleteJobStatus)\n    #displayJobQuestion($deleteJobStatus)\n  #else\n    #displayJobFinishedMessage($deleteJobStatus)\n  #end\n  #if ($isAdvancedUser || $isSuperAdmin)\n    #displayJobStatusLog($deleteJobStatus true)\n  #end\n  </div>\n#end\n\n#######################################################\n##            DISPLAY CONFIRMATION PAGE\n#######################################################\n#macro(displayConfirmationPage)\n  <form id=\"delete\" class=\"xform\" action=\"$doc.getURL('delete', \"$!{languageparams}\")\" method=\"post\">\n    #getChildren()\n    #displayNewTargetOption()\n    #getChildren_legacy()\n    #displayConfirmMessage()\n  </form>\n#end\n#######################################################\n##                  DISPLAY PANEL\n#######################################################\n#macro(displayPanel $panelId $panelClass $heading $body)\n  <div class=\"panel $!panelClass\">\n    <div class=\"panel-heading\">\n      $heading\n      <div class=\"pull-right\"><a class=\"panel-collapse-carret\" role=\"button\" data-toggle=\"collapse\" href=\"#$panelId\" aria-expanded=\"false\" aria-controls=\"$panelId\"><span class=\"caret\"></span></a></div>\n    </div>\n    <div class=\"panel-body collapse\" id=\"$panelId\">\n      $body\n    </div>\n  </div>\n#end\n#######################################################\n##                    CHILDREN\n#######################################################\n#macro(getChildren)\n  #if ($doc.documentReference.name == 'WebHome') ## terminal documents have no child\n    #set($childCountXWQL = \"WHERE doc.fullName LIKE :space AND doc.fullName <> :fullName\")\n    #set ($query = $services.query.xwql($childCountXWQL))\n    #set ($query = $query.bindValue('space').literal(\"${doc.space}.\").anyChars().query())\n    #set ($query = $query.bindValue('fullName', $doc.fullName))\n    ## Note: we don't use any filter since we display all documents including translations and hidden documents in the\n    ## table below.\n    #set($childCount = $query.count())\n    #if ($childCount > 0)\n      ## Check if we should propose by default to affect children when the only remaining children (after the delete) would be the WebPreferences document.\n      #set ($webPreferencesDocumentReference = $services.model.createDocumentReference('WebPreferences', $doc.documentReference.lastSpaceReference))\n      #if ($childCount == 1 && $xwiki.exists($webPreferencesDocumentReference))\n        #set ($forceAffectChildren = \" checked='checked'\")\n      #end\n      #define($heading)\n        <input name=\"affectChildren\" id=\"affectChildren\" type=\"checkbox\" $!{forceAffectChildren}/><label for=\"affectChildren\">$services.localization.render('core.delete.affectChildren')</label> ($childCount)\n      #end\n      #define($body)\n        ##\n        ## List the documents to be deleted using a livetable\n        ##\n        #set ($collist = ['doc.title', 'doc.location', 'doc.date', 'doc.author'])\n        #set ($colprops = {\n          'doc.title'    : { 'link' : 'view' },\n          'doc.location' : { 'type': 'text', 'filterable': true, 'html': true},\n          'doc.author'   : { 'link' : 'author' }\n        })\n        ## Note: we also display translations in the table since we want to show to the user all the pages that will\n        ## be deleted (including translations and hidden pages).\n        #set ($urlParameters = \"xpage=getdocuments&childrenOf=$escapetool.url($doc.space)&queryFilters=unique\")\n        #set ($options = { \n          'url' : \"$doc.getURL('get', $urlParameters)\",\n          'translationPrefix' : 'platform.index.',\n          'outputOnlyHtml' : true\n        })\n        #livetable('deleteSpaceIndex' $collist $colprops $options)\n      #end\n      #displayPanel('panel-children', 'panel-default', $heading, $body)\n    #end\n  #end\n#end\n#######################################################\n##                 LEGACY CHILDREN\n##\n## Get the children document based on the legacy\n## parent/child relationship.\n#######################################################\n#macro(getChildren_legacy)\n  #if($services.parentchild.isParentChildMechanismEnabled())\n    #set($childrenStatement = 'where doc.fullName <> :parentFullName and (doc.parent = :parentFullName or (doc.parent = :parentName and doc.space = :parentSpace))')\n    #set($childrenQuery = $services.query.xwql($childrenStatement))\n    #set($discard = $childrenQuery.bindValue('parentFullName', $doc.fullName).bindValue('parentName', $doc.documentReference.name).bindValue('parentSpace', $doc.space))\n    #set($children = $childrenQuery.addFilter('unique').execute())\n    #if($children && $children.size() > 0)\n      #define($heading)\n        <strong>Orphans</strong> ($children.size())\n      #end\n      #define($message)\n        <ul>\n          #foreach($docname in $children)\n            #set($rdoc = $xwiki.getDocument($docname).getTranslatedDocument())\n            <li><a href=\"$doc.getURL('view')\">$escapetool.xml($rdoc.getPlainTitle())</a></li>\n          #end\n        </ul>\n      #end\n      #set($body = $services.localization.render('core.delete.orphansWarning', [$message]))\n      #displayPanel('panel-legacy-children', 'panel-default', $heading, $body)\n    #end\n  #end\n#end\n#######################################################\n##                 DISPLAY NEW TARGET OPTION\n##\n## Display the possibility to select a new target for existing backlinks and / or to create an automatic redirect to a\n## different page.\n#######################################################\n#macro(displayNewTargetOption)\n  #set($links = $doc.getBacklinks())\n  #set ($hasInlinks = $links && $links.size() > 0)\n  #define($heading)\n    <strong>$escapetool.xml($services.localization.render('core.delete.backlinks'))</strong> ($links.size())\n  #end\n  #define($body)\n    <dl>\n      <dt>\n        <label for=\"newBacklinkTarget\">\n          $escapetool.xml($services.localization.render('core.delete.backlinkTarget.label'))\n        </label>\n        <span class=\"xHint\">$escapetool.xml($services.localization.render('core.delete.backlinkTarget.hint'))</span>\n      </dt>\n      <dd>\n        #set ($pagePickerParams = {\n          'id': 'newBacklinkTarget',\n          'name': 'newBacklinkTarget'\n        })\n        #pagePicker($pagePickerParams)\n      </dd>\n      ##------------\n      ## Links field\n      ##------------\n      #displayLinksCheckbox({\n        'label': 'core.delete.updateLinks.label',\n        'hint': 'core.delete.updateLinks.hint',\n        'disabled': true\n      })\n      #displayAutoRedirectCheckbox({\n        'label': 'core.delete.autoRedirect.label',\n        'hint': 'core.delete.autoRedirect.hint',\n        'disabled': true\n      })\n    </dl>\n  #end\n  $body\n#end\n#######################################################\n##              DISPLAY CONFIRM MESSAGE\n#######################################################\n#macro(displayConfirmMessage)\n  #if($xwiki.hasRecycleBin())\n    #if($services.refactoring.isRecycleBinSkippingAllowed())\n      <div class=\"xform\">\n        <dl>\n          <dt>\n            $escapetool.xml($services.localization.render('core.recycleBin.shouldSkip.label'))\n          </dt>\n          <dd>\n            <label class=\"xwiki-form-listclass\">\n              <input name=\"shouldSkipRecycleBin\" type=\"radio\" value=\"false\" checked/>\n              $escapetool.xml($services.localization.render('core.recycleBin.shouldSkip.no'))\n            </label>\n            <label class=\"xwiki-form-listclass\">\n              <input name=\"shouldSkipRecycleBin\" type=\"radio\" value=\"true\"/>\n              $escapetool.xml($services.localization.render('core.recycleBin.shouldSkip.yes'))\n            </label>\n          </dd>\n        </dl>\n      </div>\n    #else\n      #if($hasInlinks)\n        <p><strong>$escapetool.xml($services.localization.render('core.recyclebin.confirmWithInlinks'))</strong></p>\n      #else\n        <p>$escapetool.xml($services.localization.render('core.recyclebin.confirm'))</p>\n      #end\n    #end\n  #else\n    #if($hasInlinks)\n      <p><strong>$escapetool.xml($services.localization.render('core.delete.confirmWithInlinks'))</strong></p>\n    #else\n      <p>$escapetool.xml($services.localization.render('core.delete.confirm'))</p>\n    #end\n  #end\n  <div class=\"hidden\">\n    <input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" />\n    <input type=\"hidden\" name=\"confirm\" value=\"1\"/>\n    <input type=\"hidden\" name=\"async\" value=\"true\"/>\n    #if(\"$!{request.xredirect}\" != '')\n      <input type=\"hidden\" name=\"xredirect\" value=\"$!{escapetool.xml($request.xredirect)}\"/>\n    #end\n  </div>\n  <button class=\"btn btn-danger confirm\">$escapetool.xml($services.localization.render('delete'))</button>\n  #if(\"$!{request.xredirect}\" != '')\n    #set($cancelUrl = \"$request.xredirect\")\n  #else\n    #set($cancelUrl = $doc.getURL())\n  #end\n  <a class=\"btn btn-default cancel\" href=\"$!{escapetool.xml(${cancelUrl})}\">$escapetool.xml($services.localization.render('cancel'))</a>\n#end\n#######################################################\n##      DISPLAY DELETE COMPLETELY CONFIRM MESSAGE\n##\n## Display a confirmation message when the user wants \n## to delete a page from the recycle bin.\n#######################################################\n#macro(displayCompletelyDeleteConfirmMessage)\n  #xwikimessageboxstart($services.localization.render('core.delete') $services.localization.render('core.recyclebin.completelyDeleteConfirm'))\n    <form action=\"$xwiki.relativeRequestURL\" method=\"post\">\n      <div class=\"hidden\">\n        ## CSRF prevention\n        <input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" />\n        <input type=\"hidden\" name=\"confirm\" value=\"1\"/>\n        <input type=\"hidden\" name=\"id\" value=\"$!{escapetool.xml($request.id)}\"/>\n        #if(\"$!{request.xredirect}\" != '')\n          <input type=\"hidden\" name=\"xredirect\" value=\"$!{escapetool.xml($request.xredirect)}\"/>\n        #end\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"$services.localization.render('yes')\"/>\n      #if(\"$!{request.xredirect}\" != '')\n        #getSanitizedURLAttributeValue('a','href',$request.xredirect,$doc.getURL(),$cancelUrl)\n      #else\n        #set($cancelUrl = $escapetool.xml($doc.getURL()))\n      #end\n      <a class=\"btn btn-default\" href=\"$cancelUrl\">$services.localization.render('no')</a>\n    </form>\n  #xwikimessageboxend()\n#end\n"], "fixing_code": ["## ---------------------------------------------------------------------------\n## See the NOTICE file distributed with this work for additional\n## information regarding copyright ownership.\n##\n## This is free software; you can redistribute it and/or modify it\n## under the terms of the GNU Lesser General Public License as\n## published by the Free Software Foundation; either version 2.1 of\n## the License, or (at your option) any later version.\n##\n## This software is distributed in the hope that it will be useful,\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n## Lesser General Public License for more details.\n##\n## You should have received a copy of the GNU Lesser General Public\n## License along with this software; if not, write to the Free\n## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n## 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n## ---------------------------------------------------------------------------\n#######################################################\n###              DELETE PAGE ACTION\n###              ------------------\n###\n#######################################################\n##\n#######################################################\n##                     GLOBALS\n#######################################################\n#set($fullmsg = '')\n#set($quote = '\"')\n#set($hasInlinks = false)\n#######################################################\n##                     DISPLAY\n#######################################################\n#set ($discard = $xwiki.jsfx.use('js/xwiki/delete.js'))\n#template('refactoringStatus_macros.vm')\n#template('refactoring_macros.vm')\n#template('xwikivars.vm')\n\n#controller()\n#macro(displayContent $deletecontent)\n#template(\"startpage.vm\")\n<div class=\"main\">\n  <div id=\"mainContentArea\">\n    #template(\"hierarchy.vm\")\n    #define($title)<a href=\"$doc.getURL('view')\">$!escapetool.xml($doc.plainTitle)</a>#end\n    #set($titleToDisplay = $services.localization.render('core.delete.title', [$title]))\n    <div class=\"xcontent\">\n      #template('contentheader.vm')\n      $deletecontent\n      <div class=\"clearfloats\"></div>\n    </div> ## xcontent\n  </div>## mainContentArea\n</div>## main\n#template(\"endpage.vm\")\n#end\n#######################################################\n##                    CONTROLLER\n#######################################################\n#macro(controller)\n  #if(\"$!{request.jobId}\" != '')\n    #set ($deleteJobStatus = $services.job.getJobStatus($request.jobId.split('/')))\n    ## A delete job is running\n    #if ($xcontext.action == 'get')\n      #outputDeleteJobStatusJSON($deleteJobStatus)\n    #else\n      #set ($content = \"#displayDeleteJobStatus($deleteJobStatus)\")\n      #displayContent($content)\n    #end\n  #else\n    #if(\"$!{request.id}\" != '')\n      ## request.id means that we are deleting a document from the recycle bin\n      #set ($content = \"#displayCompletelyDeleteConfirmMessage()\")\n      #displayContent($content)\n    #else\n      #set ($content = \"#displayConfirmationPage()\")\n      #displayContent($content)\n    #end\n  #end\n#end\n\n#macro (outputDeleteJobStatusJSON $deleteJobStatus)\n  #getJobStatusJSON($deleteJobStatus $json)\n  $response.setContentType('application/json')\n  $jsontool.serialize($json)\n#end\n\n#######################################################\n##            DISPLAY RUNNING JOB\n#######################################################\n#macro (displayDeleteJobStatus $deleteJobStatus)\n  #set ($discard = $xwiki.jsfx.use('uicomponents/job/job.js'))\n  ## TODO: allows question templates to inject the web resources they need\n  #set ($discard = $xwiki.linkx.use($services.webjars.url('org.xwiki.platform:xwiki-platform-tree-webjar', 'tree.min.css',\n    {'evaluate': true}), {'type': 'text/css', 'rel': 'stylesheet'}))\n  #set ($discard = $xwiki.jsfx.use(\"uicomponents/job/question/ExtensionBreakingQuestion.js\", true))\n  #set ($discard = $xwiki.jsfx.use(\"uicomponents/job/question/XClassBreakingQuestion.js\", true))\n  #set ($deleteJobState = $deleteJobStatus.state)\n  #set ($finished = $deleteJobState == 'FINISHED')\n  #set ($deleteJobRequest = $deleteJobStatus.request)\n  #set ($jobStatusURL = $doc.getURL('get', $escapetool.url({\n    'xpage': 'delete',\n    'jobId': $request.jobId,\n    'outputSyntax': 'plain'\n  })))\n  <div class=\"xcontent job-status\" data-url=\"$jobStatusURL\">\n  <h2>$services.localization.render('core.delete.waitmessage')</h2>\n  #if (!$finished)\n    #displayJobProgressBar($deleteJobStatus)\n    #displayJobQuestion($deleteJobStatus)\n  #else\n    #displayJobFinishedMessage($deleteJobStatus)\n  #end\n  #if ($isAdvancedUser || $isSuperAdmin)\n    #displayJobStatusLog($deleteJobStatus true)\n  #end\n  </div>\n#end\n\n#######################################################\n##            DISPLAY CONFIRMATION PAGE\n#######################################################\n#macro(displayConfirmationPage)\n  <form id=\"delete\" class=\"xform\" action=\"$doc.getURL('delete', \"$!{languageparams}\")\" method=\"post\">\n    #getChildren()\n    #displayNewTargetOption()\n    #getChildren_legacy()\n    #displayConfirmMessage()\n  </form>\n#end\n#######################################################\n##                  DISPLAY PANEL\n#######################################################\n#macro(displayPanel $panelId $panelClass $heading $body)\n  <div class=\"panel $!panelClass\">\n    <div class=\"panel-heading\">\n      $heading\n      <div class=\"pull-right\"><a class=\"panel-collapse-carret\" role=\"button\" data-toggle=\"collapse\" href=\"#$panelId\" aria-expanded=\"false\" aria-controls=\"$panelId\"><span class=\"caret\"></span></a></div>\n    </div>\n    <div class=\"panel-body collapse\" id=\"$panelId\">\n      $body\n    </div>\n  </div>\n#end\n#######################################################\n##                    CHILDREN\n#######################################################\n#macro(getChildren)\n  #if ($doc.documentReference.name == 'WebHome') ## terminal documents have no child\n    #set($childCountXWQL = \"WHERE doc.fullName LIKE :space AND doc.fullName <> :fullName\")\n    #set ($query = $services.query.xwql($childCountXWQL))\n    #set ($query = $query.bindValue('space').literal(\"${doc.space}.\").anyChars().query())\n    #set ($query = $query.bindValue('fullName', $doc.fullName))\n    ## Note: we don't use any filter since we display all documents including translations and hidden documents in the\n    ## table below.\n    #set($childCount = $query.count())\n    #if ($childCount > 0)\n      ## Check if we should propose by default to affect children when the only remaining children (after the delete) would be the WebPreferences document.\n      #set ($webPreferencesDocumentReference = $services.model.createDocumentReference('WebPreferences', $doc.documentReference.lastSpaceReference))\n      #if ($childCount == 1 && $xwiki.exists($webPreferencesDocumentReference))\n        #set ($forceAffectChildren = \" checked='checked'\")\n      #end\n      #define($heading)\n        <input name=\"affectChildren\" id=\"affectChildren\" type=\"checkbox\" $!{forceAffectChildren}/><label for=\"affectChildren\">$services.localization.render('core.delete.affectChildren')</label> ($childCount)\n      #end\n      #define($body)\n        ##\n        ## List the documents to be deleted using a livetable\n        ##\n        #set ($collist = ['doc.title', 'doc.location', 'doc.date', 'doc.author'])\n        #set ($colprops = {\n          'doc.title'    : { 'link' : 'view' },\n          'doc.location' : { 'type': 'text', 'filterable': true, 'html': true},\n          'doc.author'   : { 'link' : 'author' }\n        })\n        ## Note: we also display translations in the table since we want to show to the user all the pages that will\n        ## be deleted (including translations and hidden pages).\n        #set ($urlParameters = \"xpage=getdocuments&childrenOf=$escapetool.url($doc.space)&queryFilters=unique\")\n        #set ($options = { \n          'url' : \"$doc.getURL('get', $urlParameters)\",\n          'translationPrefix' : 'platform.index.',\n          'outputOnlyHtml' : true\n        })\n        #livetable('deleteSpaceIndex' $collist $colprops $options)\n      #end\n      #displayPanel('panel-children', 'panel-default', $heading, $body)\n    #end\n  #end\n#end\n#######################################################\n##                 LEGACY CHILDREN\n##\n## Get the children document based on the legacy\n## parent/child relationship.\n#######################################################\n#macro(getChildren_legacy)\n  #if($services.parentchild.isParentChildMechanismEnabled())\n    #set($childrenStatement = 'where doc.fullName <> :parentFullName and (doc.parent = :parentFullName or (doc.parent = :parentName and doc.space = :parentSpace))')\n    #set($childrenQuery = $services.query.xwql($childrenStatement))\n    #set($discard = $childrenQuery.bindValue('parentFullName', $doc.fullName).bindValue('parentName', $doc.documentReference.name).bindValue('parentSpace', $doc.space))\n    #set($children = $childrenQuery.addFilter('unique').execute())\n    #if($children && $children.size() > 0)\n      #define($heading)\n        <strong>Orphans</strong> ($children.size())\n      #end\n      #define($message)\n        <ul>\n          #foreach($docname in $children)\n            #set($rdoc = $xwiki.getDocument($docname).getTranslatedDocument())\n            <li><a href=\"$doc.getURL('view')\">$escapetool.xml($rdoc.getPlainTitle())</a></li>\n          #end\n        </ul>\n      #end\n      #set($body = $services.localization.render('core.delete.orphansWarning', [$message]))\n      #displayPanel('panel-legacy-children', 'panel-default', $heading, $body)\n    #end\n  #end\n#end\n#######################################################\n##                 DISPLAY NEW TARGET OPTION\n##\n## Display the possibility to select a new target for existing backlinks and / or to create an automatic redirect to a\n## different page.\n#######################################################\n#macro(displayNewTargetOption)\n  #set($links = $doc.getBacklinks())\n  #set ($hasInlinks = $links && $links.size() > 0)\n  #define($heading)\n    <strong>$escapetool.xml($services.localization.render('core.delete.backlinks'))</strong> ($links.size())\n  #end\n  #define($body)\n    <dl>\n      <dt>\n        <label for=\"newBacklinkTarget\">\n          $escapetool.xml($services.localization.render('core.delete.backlinkTarget.label'))\n        </label>\n        <span class=\"xHint\">$escapetool.xml($services.localization.render('core.delete.backlinkTarget.hint'))</span>\n      </dt>\n      <dd>\n        #set ($pagePickerParams = {\n          'id': 'newBacklinkTarget',\n          'name': 'newBacklinkTarget'\n        })\n        #pagePicker($pagePickerParams)\n      </dd>\n      ##------------\n      ## Links field\n      ##------------\n      #displayLinksCheckbox({\n        'label': 'core.delete.updateLinks.label',\n        'hint': 'core.delete.updateLinks.hint',\n        'disabled': true\n      })\n      #displayAutoRedirectCheckbox({\n        'label': 'core.delete.autoRedirect.label',\n        'hint': 'core.delete.autoRedirect.hint',\n        'disabled': true\n      })\n    </dl>\n  #end\n  $body\n#end\n#######################################################\n##              DISPLAY CONFIRM MESSAGE\n#######################################################\n#macro(displayConfirmMessage)\n  #if($xwiki.hasRecycleBin())\n    #if($services.refactoring.isRecycleBinSkippingAllowed())\n      <div class=\"xform\">\n        <dl>\n          <dt>\n            $escapetool.xml($services.localization.render('core.recycleBin.shouldSkip.label'))\n          </dt>\n          <dd>\n            <label class=\"xwiki-form-listclass\">\n              <input name=\"shouldSkipRecycleBin\" type=\"radio\" value=\"false\" checked/>\n              $escapetool.xml($services.localization.render('core.recycleBin.shouldSkip.no'))\n            </label>\n            <label class=\"xwiki-form-listclass\">\n              <input name=\"shouldSkipRecycleBin\" type=\"radio\" value=\"true\"/>\n              $escapetool.xml($services.localization.render('core.recycleBin.shouldSkip.yes'))\n            </label>\n          </dd>\n        </dl>\n      </div>\n    #else\n      #if($hasInlinks)\n        <p><strong>$escapetool.xml($services.localization.render('core.recyclebin.confirmWithInlinks'))</strong></p>\n      #else\n        <p>$escapetool.xml($services.localization.render('core.recyclebin.confirm'))</p>\n      #end\n    #end\n  #else\n    #if($hasInlinks)\n      <p><strong>$escapetool.xml($services.localization.render('core.delete.confirmWithInlinks'))</strong></p>\n    #else\n      <p>$escapetool.xml($services.localization.render('core.delete.confirm'))</p>\n    #end\n  #end\n  <div class=\"hidden\">\n    <input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" />\n    <input type=\"hidden\" name=\"confirm\" value=\"1\"/>\n    <input type=\"hidden\" name=\"async\" value=\"true\"/>\n    #if(\"$!{request.xredirect}\" != '')\n      <input type=\"hidden\" name=\"xredirect\" value=\"$!{escapetool.xml($request.xredirect)}\"/>\n    #end\n  </div>\n  <button class=\"btn btn-danger confirm\">$escapetool.xml($services.localization.render('delete'))</button>\n  #if(\"$!{request.xredirect}\" != '')\n    #getSanitizedURLAttributeValue('a','href',$request.xredirect,$doc.getURL(),$cancelUrl)\n  #else\n    #set($cancelUrl = $escapetool.xml($doc.getURL()))\n  #end\n  <a class=\"btn btn-default cancel\" href=\"$!{escapetool.xml(${cancelUrl})}\">$escapetool.xml($services.localization.render('cancel'))</a>\n#end\n#######################################################\n##      DISPLAY DELETE COMPLETELY CONFIRM MESSAGE\n##\n## Display a confirmation message when the user wants \n## to delete a page from the recycle bin.\n#######################################################\n#macro(displayCompletelyDeleteConfirmMessage)\n  #xwikimessageboxstart($services.localization.render('core.delete') $services.localization.render('core.recyclebin.completelyDeleteConfirm'))\n    <form action=\"$xwiki.relativeRequestURL\" method=\"post\">\n      <div class=\"hidden\">\n        ## CSRF prevention\n        <input type=\"hidden\" name=\"form_token\" value=\"$!{services.csrf.getToken()}\" />\n        <input type=\"hidden\" name=\"confirm\" value=\"1\"/>\n        <input type=\"hidden\" name=\"id\" value=\"$!{escapetool.xml($request.id)}\"/>\n        #if(\"$!{request.xredirect}\" != '')\n          <input type=\"hidden\" name=\"xredirect\" value=\"$!{escapetool.xml($request.xredirect)}\"/>\n        #end\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"$services.localization.render('yes')\"/>\n      #if(\"$!{request.xredirect}\" != '')\n        #getSanitizedURLAttributeValue('a','href',$request.xredirect,$doc.getURL(),$cancelUrl)\n      #else\n        #set($cancelUrl = $escapetool.xml($doc.getURL()))\n      #end\n      <a class=\"btn btn-default\" href=\"$cancelUrl\">$services.localization.render('no')</a>\n    </form>\n  #xwikimessageboxend()\n#end\n"], "filenames": ["xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-resources/src/main/resources/flamingo/delete.vm"], "buggy_code_start_loc": [310], "buggy_code_end_loc": [313], "fixing_code_start_loc": [310], "fixing_code_end_loc": [313], "type": "CWE-79", "message": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Users are able to forge an URL with a payload allowing to inject Javascript in the page (XSS). It's possible to exploit the delete template to perform a XSS, e.g. by using URL such as: > xwiki/bin/get/FlamingoThemes/Cerulean?xpage=xpart&vm=delete.vm&xredirect=javascript:alert(document.domain). This vulnerability exists since XWiki 6.0-rc-1. The vulnerability has been patched in XWiki 14.10.6 and 15.1. Note that a partial patch has been provided in 14.10.5 but wasn't enough to entirely fix the vulnerability. \n", "other": {"cve": {"id": "CVE-2023-35156", "sourceIdentifier": "security-advisories@github.com", "published": "2023-06-23T19:15:09.263", "lastModified": "2023-06-30T07:16:12.873", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Users are able to forge an URL with a payload allowing to inject Javascript in the page (XSS). It's possible to exploit the delete template to perform a XSS, e.g. by using URL such as: > xwiki/bin/get/FlamingoThemes/Cerulean?xpage=xpart&vm=delete.vm&xredirect=javascript:alert(document.domain). This vulnerability exists since XWiki 6.0-rc-1. The vulnerability has been patched in XWiki 14.10.6 and 15.1. Note that a partial patch has been provided in 14.10.5 but wasn't enough to entirely fix the vulnerability. \n"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.6, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.8, "impactScore": 6.0}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-87"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "6.0.1", "versionEndExcluding": "14.10.6", "matchCriteriaId": "F56232C9-4691-4BD9-9445-E0DF6269F68C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:6.0:milestone1:*:*:*:*:*:*", "matchCriteriaId": "BB5A2AAA-7E88-4FE0-AD86-4B5824BAE5E4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:6.0:milestone2:*:*:*:*:*:*", "matchCriteriaId": "3CC808F2-F5CE-4AB0-A828-521221897AD2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:15.0:*:*:*:*:*:*:*", "matchCriteriaId": "8F9D9551-B148-44B6-A5B3-889E6E7B72E8"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-platform/commit/13875a6437d4525ac4aeea25918f2d2dffac9ee1", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/xwiki/xwiki-platform/commit/24ec12890ac7fa6daec8d0b3435cfcba11362fd5", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/xwiki/xwiki-platform/commit/e80d22d193df364b07bab7925572720f91a8984a", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-834c-x29c-f42c", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-20341", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-20583", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-20672", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-platform/commit/13875a6437d4525ac4aeea25918f2d2dffac9ee1"}}