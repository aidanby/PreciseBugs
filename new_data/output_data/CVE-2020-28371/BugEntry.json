{"buggy_code": ["/* Copyright (c) 2008-2015, Avian Contributors\n\n   Permission to use, copy, modify, and/or distribute this software\n   for any purpose with or without fee is hereby granted, provided\n   that the above copyright notice and this permission notice appear\n   in all copies.\n\n   There is NO WARRANTY for this software.  See license.txt for\n   details. */\n\npackage java.io;\n\npublic class FileOutputStream extends OutputStream {\n  //   static {\n  //     System.loadLibrary(\"natives\");\n  //   }\n\n  private int fd;\n\n  public FileOutputStream(FileDescriptor fd) {\n    this.fd = fd.value;\n  }\n\n  public FileOutputStream(String path) throws IOException {\n    this(path, false);\n  }\n\n  public FileOutputStream(String path, boolean append) throws IOException {\n    fd = open(path, append);\n  }\n  \n\n  public FileOutputStream(File file) throws IOException {\n    this(file.getPath());\n  }\n\n  private static native int open(String path, boolean append) throws IOException;\n\n  private static native void write(int fd, int c) throws IOException;\n\n  private static native void write(int fd, byte[] b, int offset, int length)\n    throws IOException;\n\n  private static native void close(int fd) throws IOException;\n\n  public void write(int c) throws IOException {\n    write(fd, c);\n  }\n\n  public void write(byte[] b, int offset, int length) throws IOException {\n    if (b == null) {\n      throw new NullPointerException();\n    }\n\n    if (offset < 0 || offset + length > b.length) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n\n    write(fd, b, offset, length);\n  }\n\n  public void close() throws IOException {\n    if (fd != -1) {\n      close(fd);\n      fd = -1;\n    }\n  }\n}\n"], "fixing_code": ["/* Copyright (c) 2008-2015, Avian Contributors\n\n   Permission to use, copy, modify, and/or distribute this software\n   for any purpose with or without fee is hereby granted, provided\n   that the above copyright notice and this permission notice appear\n   in all copies.\n\n   There is NO WARRANTY for this software.  See license.txt for\n   details. */\n\npackage java.io;\n\npublic class FileOutputStream extends OutputStream {\n  //   static {\n  //     System.loadLibrary(\"natives\");\n  //   }\n\n  private int fd;\n\n  public FileOutputStream(FileDescriptor fd) {\n    this.fd = fd.value;\n  }\n\n  public FileOutputStream(String path) throws IOException {\n    this(path, false);\n  }\n\n  public FileOutputStream(String path, boolean append) throws IOException {\n    fd = open(path, append);\n  }\n  \n\n  public FileOutputStream(File file) throws IOException {\n    this(file.getPath());\n  }\n\n  private static native int open(String path, boolean append) throws IOException;\n\n  private static native void write(int fd, int c) throws IOException;\n\n  private static native void write(int fd, byte[] b, int offset, int length)\n    throws IOException;\n\n  private static native void close(int fd) throws IOException;\n\n  public void write(int c) throws IOException {\n    write(fd, c);\n  }\n\n  public void write(byte[] b, int offset, int length) throws IOException {\n    if (b == null) {\n      throw new NullPointerException();\n    }\n\n    if (offset < 0 || length < 0 || length > b.length || offset > b.length - length) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n\n    write(fd, b, offset, length);\n  }\n\n  public void close() throws IOException {\n    if (fd != -1) {\n      close(fd);\n      fd = -1;\n    }\n  }\n}\n"], "filenames": ["classpath/java/io/FileOutputStream.java"], "buggy_code_start_loc": [55], "buggy_code_end_loc": [56], "fixing_code_start_loc": [55], "fixing_code_end_loc": [56], "type": "CWE-190", "message": "** UNSUPPORTED WHEN ASSIGNED ** An issue was discovered in ReadyTalk Avian 1.2.0 before 2020-10-27. The FileOutputStream.write() method in FileOutputStream.java has a boundary check to prevent out-of-bounds memory read/write operations. However, an integer overflow leads to bypassing this check and achieving the out-of-bounds access. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.", "other": {"cve": {"id": "CVE-2020-28371", "sourceIdentifier": "cve@mitre.org", "published": "2020-11-09T22:15:13.333", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "** UNSUPPORTED WHEN ASSIGNED ** An issue was discovered in ReadyTalk Avian 1.2.0 before 2020-10-27. The FileOutputStream.write() method in FileOutputStream.java has a boundary check to prevent out-of-bounds memory read/write operations. However, an integer overflow leads to bypassing this check and achieving the out-of-bounds access. NOTE: This vulnerability only affects products that are no longer supported by the maintainer."}, {"lang": "es", "value": "** NO COMPATIBLE CUANDO SE ASIGN\u00d3 ** Se detect\u00f3 un problema en ReadyTalk Avian versi\u00f3n 1.2.0 antes del 27-10-2020.&#xa0;El m\u00e9todo FileOutputStream.write() en  el archivo FileOutputStream.java presenta una verificaci\u00f3n de l\u00edmites para evitar operaciones de lectura/escritura de memoria fuera de l\u00edmites.&#xa0;Sin embargo, un desbordamiento de enteros conduce a omitir esta verificaci\u00f3n y lograr el acceso fuera de l\u00edmites.&#xa0;NOTA: Esta vulnerabilidad solo afecta a los productos que ya no son compatibles con el mantenedor"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-190"}, {"lang": "en", "value": "CWE-787"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:readytalk:avian:1.2.0:*:*:*:*:*:*:*", "matchCriteriaId": "E0BC8EBC-CAAD-47D3-81D6-5B0AD9A6F0A6"}]}]}], "references": [{"url": "https://github.com/ReadyTalk/avian/commit/0871979b298add320ca63f65060acb7532c8a0dd", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/ReadyTalk/avian/pull/572", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ReadyTalk/avian/commit/0871979b298add320ca63f65060acb7532c8a0dd"}}