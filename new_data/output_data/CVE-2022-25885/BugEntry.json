{"buggy_code": ["# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Changed\n\n- Fixes missing buffer information for recrypt typescript definition\n\n## [2.5.0] - 2022-06-23\n\n### Added\n\n- Electron 17.2.0, 17.3, 17.4\n- Typescript definitions\n- Add test for recrypt with streams\n\n## [2.4.0] - 2022-06-08\n\n### Added\n\n- Electron 18.1, 18.2, 18.3\n- Electron 19.0\n\n### Changed\n\n- Update npm dist url to the new url for electron builds\n\n## [2.3.0] - 2022-05-04\n\n### Added\n\n- Builds for node and electron with arm64 on darwin (Apple M1)\n- Add electron 18\n\n## [2.2.0] - 2022-03-05\n\n### Changed\n\n- Update PDFWriter dependency to the newest available versoin\n\n### Added\n\n- Electron version: 17.0, 17.1\n- NodeJs 17.6.0\n\n## [2.1.0] - 2021-12-03\n\n### Added\n\n- Electron versions: 16.0, 15.3, 15.2, 14.2, 13.6, 13.3\n\n## [2.0.0] - 2021-10-22\n\n### Removed\n\n- Electron 2.0.7\n- Node 6.14.1 and 7.10.1\n\n### Added\n\n- Add Electron 13.3.0\n- Documentation (copy of  the wiki)\n- Add Electron 13.2.3\n- Add Electron 13.5.0\n- Add Electron 14.0.1\n- Add Electron 14.1.0\n- Add Electron 15.0.0\n- Add Electron 15.1.2\n- Add Node 16.11.1\n\n### Fixed\n\n- Dependency to node-pre-gyp moved from deprecated to scoped package\n\n## [1.10.0] - 2021-07-12\n\n### Added\n\n- Add Electron 13.1\n- Disable NEON on arm builds\n\n## [1.9.0] - 2021-06-30\n\n### Fixed\n\n* Yarn v2 incompatibiliy\n* Build issues on mac OS big sur\n\n## [1.8.0] - 2021-05-28\n\n### Added\n\n- Add Electron 13.0\n- Add missing typescript declaration of the PDFWStreamForBuffer\n- Add Electron 11.4\n- Add electron 10.4\n\n## [1.7.0] - 2021-03-08\n\n### Added\n\n* More electron 11.x releases\n* Add electron 12.0.0\n* Add electron 10.2, 10.3\n* Add electron 9.4, 9.3\n\n## [1.6.0] - 2021-02-17\n\n### Fixed\n\n* Update the g++ compiler from 4.8 to 5.4 (default on xenial) for linux builds\n* Changed builds from travis and app veyor to github\n\n### Added\n\n* Electron 11\n* Added Node 15\n\n## [1.5.1] - 2020-10-10\n\n### Added\n\n* Added manual workflow to reduce release errors\n\n### Fixed\n\n* Huge package size as npm publish does not use .gitignore or .npmignore locally\n\n## [1.5.0] - 2020-10-10\n\n### Added\n\n* Electron 7.3, 8.3, 8.4, 8.5 and 9.3\n\n## [1.4.3] - 2020-10-09\n\n### Fixed\n\n* Return code fixed for builds on app veyor.\n* Winwdows builds successfully with electron 10.x\n* NPM version on app veyor fixed to build electron 2.x again\n\n### Added\n\n* Add electron 10.1.3\n\n## [1.4.2] - 2020-08-27\n\n### Added\n\n* Add electron 10.0\n\n## [1.4.1] - 2020-08-13\n\nThis is a special release no code has been changed.\nThe packaged module included (in version muhammara@1.4.0) a bundled dependency with a\ndebug output.\n\n### Fixed\n\n* Removed debug output from packaged dependency `node-pre-gyp`\n\n\n## [1.4.0] - 2020-08-10\n\n### Added\n\n* Add electron 9.2\n\n## [1.3.0] - 2020-08-06\n\n### Added\n\n* Add electron-9.1 pre built\n\n### Fixed\n\n* Add missing typescript declaration files to published packages\n\n## [1.2.0] - 2020-06-01\n\n### Fixed\n\n* Updated freetype to 2.10.0\n* Updated libpng dependency to 1.6.37\n* Updated libaesgm dependency\n* Update libjpeg dependency to 9d\n* Updated libtiff dependency to 3.9.7\n\n## [1.1.0] - 2020-05-27\n\n### Added\n\n* Added infos about being hummusjs drop in replacement\n* Added electron v9.0.0\n\n### Fixed\n\n* Updated dependencies and dev dependencies\n\n## [1.0.1] - 2020-05-08\n\n### Fixed\n\n* Fixed readme to include infos about muhammaraJS and hummus\n* Fixed node-pre-gyp binary download links\n\n### Removed\n\n* Unecessary dependency on aws-sdk\n\n## [1.0.0] - 2020-05-07\n\nBasically this is [HummusJS v1.0.108](https://github.com/galkahana/HummusJS/commit/772bd561f02433bf1a602135f53c7c17f8072450)\nwith the following changes.\n\n### Added\n\n* Store releases @github\n* Listen for tags instead of a commit message\n* Added node v13, v14, electron 6.1, 7.1, 7.2, 8.0, 8.1, 8.2\n\n### Fixed\n\n* Updated v8:GET / v8:SET calls which are incompatible with newer node version (>13)\n\n### Removed\n\n* Dropped support for electron 1.8\n\n\n* Initial release\n\n[Unreleased]: https://github.com/julianhille/MuhammaraJS/compare/2.5.0...HEAD\n[2.5.0]: https://github.com/julianhille/MuhammaraJS/compare/2.4.0...2.5.0\n[2.4.0]: https://github.com/julianhille/MuhammaraJS/compare/2.3.0...2.4.0\n[2.3.0]: https://github.com/julianhille/MuhammaraJS/compare/2.2.0...2.3.0\n[2.2.0]: https://github.com/julianhille/MuhammaraJS/compare/2.1.0...2.2.0\n[2.1.0]: https://github.com/julianhille/MuhammaraJS/compare/2.0.0...2.1.0\n[2.0.0]: https://github.com/julianhille/MuhammaraJS/compare/1.10.0...2.0.0\n[1.10.0]: https://github.com/julianhille/MuhammaraJS/compare/1.9.0...1.10.0\n[1.9.0]: https://github.com/julianhille/MuhammaraJS/compare/1.8.0...1.9.0\n[1.8.0]: https://github.com/julianhille/MuhammaraJS/compare/1.7.0...1.8.0\n[1.7.0]: https://github.com/julianhille/MuhammaraJS/compare/1.6.0...1.7.0\n[1.6.0]: https://github.com/julianhille/MuhammaraJS/compare/1.5.1...1.6.0\n[1.5.1]: https://github.com/julianhille/MuhammaraJS/compare/1.5.0...1.5.1\n[1.5.0]: https://github.com/julianhille/MuhammaraJS/compare/1.4.3...1.5.0\n[1.4.3]: https://github.com/julianhille/MuhammaraJS/compare/1.4.2...1.4.3\n[1.4.3]: https://github.com/julianhille/MuhammaraJS/compare/1.4.2...1.4.3\n[1.4.3]: https://github.com/julianhille/MuhammaraJS/compare/1.4.2...1.4.3\n[1.4.2]: https://github.com/julianhille/MuhammaraJS/compare/1.4.1...1.4.2\n[1.4.1]: https://github.com/julianhille/MuhammaraJS/compare/1.4.0...1.4.1\n[1.4.0]: https://github.com/julianhille/MuhammaraJS/compare/1.3.0...1.4.0\n[1.3.0]: https://github.com/julianhille/MuhammaraJS/compare/1.2.0...1.3.0\n[1.2.0]: https://github.com/julianhille/MuhammaraJS/compare/1.1.0...1.2.0\n[1.1.0]: https://github.com/julianhille/MuhammaraJS/compare/1.0.1...1.1.0\n[1.0.1]: https://github.com/julianhille/MuhammaraJS/compare/1.0.0...1.0.1\n[1.0.0]: https://github.com/julianhille/MuhammaraJS/tree/1.0.0\n", "/*\n Source File : ObjectByteWriterWithPosition.h\n \n \n Copyright 2013 Gal Kahana HummusJS\n \n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n \n http://www.apache.org/licenses/LICENSE-2.0\n \n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n \n */\n#include \"ObjectByteWriterWithPosition.h\"\n\nusing namespace v8;\n\nObjectByteWriterWithPosition::ObjectByteWriterWithPosition(Local<Object> inObject)\n{\n\tCREATE_ISOLATE_CONTEXT;\n\n\tSET_PERSISTENT_OBJECT(mObject, Object, inObject);\n}\n\nObjectByteWriterWithPosition::~ObjectByteWriterWithPosition()\n{\n\tDISPOSE_PERSISTENT(mObject);\n}\n\nIOBasicTypes::LongBufferSizeType ObjectByteWriterWithPosition::Write(const IOBasicTypes::Byte* inBuffer,IOBasicTypes::LongBufferSizeType inBufferSize)\n{\n\tCREATE_ISOLATE_CONTEXT;\n\tCREATE_ESCAPABLE_SCOPE;\n\n    Local<Object> anArray = NEW_ARRAY((int)inBufferSize);\n    for(int i=0;i<(int)inBufferSize;++i)\n        anArray->Set(GET_CURRENT_CONTEXT, NEW_NUMBER(i),NEW_NUMBER(inBuffer[i]));\n    \n\tLocal<Value> value = OBJECT_FROM_PERSISTENT(mObject)->Get(GET_CURRENT_CONTEXT, NEW_STRING(\"write\")).ToLocalChecked();\n    if(value->IsUndefined() || !value->IsFunction())\n    {\n\t\tTHROW_EXCEPTION(\"write is not a function, it should be you know...\");\n        return 0;\n    }\n    Local<Function> func = Local<Function>::Cast(value);\n    \n    Local<Value> args[1];\n    args[0] = anArray;\n    \n\tLocal<Value> result = func->Call(GET_CURRENT_CONTEXT,  OBJECT_FROM_PERSISTENT(mObject), 1, args).ToLocalChecked();\n    if(result.IsEmpty())\n    {\n\t\tTHROW_EXCEPTION(\"wrong return value. it's empty. return the number of written characters\");\n\t\treturn 0;\n    }\n    else if(result->IsNumber())\n    {\n        return TO_UINT32(result)->Value();\n    }\n    else\n    {\n\t\tTHROW_EXCEPTION(\"wrong return value. write should return the number of written characters\");\n\t\treturn 0;\n    }\n}\n\nIOBasicTypes::LongFilePositionType ObjectByteWriterWithPosition::GetCurrentPosition()\n{\n\tCREATE_ISOLATE_CONTEXT;\n\tCREATE_ESCAPABLE_SCOPE;\n\n\tLocal<Value> value = OBJECT_FROM_PERSISTENT(mObject)->Get(GET_CURRENT_CONTEXT, NEW_STRING(\"getCurrentPosition\")).ToLocalChecked();\n    if(value->IsUndefined())\n        return true;\n    Local<Function> func = Local<Function>::Cast(value);\n    \n\treturn TO_NUMBER(func->Call(GET_CURRENT_CONTEXT, OBJECT_FROM_PERSISTENT(mObject), 0, NULL).ToLocalChecked())->Value();\n}", "var muhammara = require('../muhammara');\n\ndescribe('BasicModificationWithStreams', function() {\n\tit('should complete without error', function() {\n\t\tvar inStream = new muhammara.PDFRStreamForFile(__dirname + '/TestMaterials/MultipleChange.pdf');\n\t\tvar outStream = new muhammara.PDFWStreamForFile(__dirname + '/output/BasicModificationWithStreams.pdf');\n\t\tvar pdfWriter = muhammara.createWriterToModify(inStream,outStream);\n\t\tvar pageModifier = new muhammara.PDFPageModifier(pdfWriter, 0);\n\n\t\tpageModifier.startContext().getContext().writeText('Some added Text', 75, 805, {\n\t\t\tfont: pdfWriter.getFontForFile(__dirname + '/TestMaterials/fonts/Couri.ttf'),\n\t\t\tsize:14,\n\t\t\tcolorspace:'gray',\n\t\t\tcolor:0x00\n\t\t});\n\t\tpageModifier.endContext().writePage();\n\n\t\tpdfWriter.end();\n\t\toutStream.close();\n\t\tinStream.close();\n\t});\n});\n"], "fixing_code": ["# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Changed\n\n- Fixes hard crash to exception when creating a stream with null object and calling createWriter with it\n- Fixes missing buffer information for recrypt typescript definition\n\n## [2.5.0] - 2022-06-23\n\n### Added\n\n- Electron 17.2.0, 17.3, 17.4\n- Typescript definitions\n- Add test for recrypt with streams\n\n## [2.4.0] - 2022-06-08\n\n### Added\n\n- Electron 18.1, 18.2, 18.3\n- Electron 19.0\n\n### Changed\n\n- Update npm dist url to the new url for electron builds\n\n## [2.3.0] - 2022-05-04\n\n### Added\n\n- Builds for node and electron with arm64 on darwin (Apple M1)\n- Add electron 18\n\n## [2.2.0] - 2022-03-05\n\n### Changed\n\n- Update PDFWriter dependency to the newest available versoin\n\n### Added\n\n- Electron version: 17.0, 17.1\n- NodeJs 17.6.0\n\n## [2.1.0] - 2021-12-03\n\n### Added\n\n- Electron versions: 16.0, 15.3, 15.2, 14.2, 13.6, 13.3\n\n## [2.0.0] - 2021-10-22\n\n### Removed\n\n- Electron 2.0.7\n- Node 6.14.1 and 7.10.1\n\n### Added\n\n- Add Electron 13.3.0\n- Documentation (copy of  the wiki)\n- Add Electron 13.2.3\n- Add Electron 13.5.0\n- Add Electron 14.0.1\n- Add Electron 14.1.0\n- Add Electron 15.0.0\n- Add Electron 15.1.2\n- Add Node 16.11.1\n\n### Fixed\n\n- Dependency to node-pre-gyp moved from deprecated to scoped package\n\n## [1.10.0] - 2021-07-12\n\n### Added\n\n- Add Electron 13.1\n- Disable NEON on arm builds\n\n## [1.9.0] - 2021-06-30\n\n### Fixed\n\n* Yarn v2 incompatibiliy\n* Build issues on mac OS big sur\n\n## [1.8.0] - 2021-05-28\n\n### Added\n\n- Add Electron 13.0\n- Add missing typescript declaration of the PDFWStreamForBuffer\n- Add Electron 11.4\n- Add electron 10.4\n\n## [1.7.0] - 2021-03-08\n\n### Added\n\n* More electron 11.x releases\n* Add electron 12.0.0\n* Add electron 10.2, 10.3\n* Add electron 9.4, 9.3\n\n## [1.6.0] - 2021-02-17\n\n### Fixed\n\n* Update the g++ compiler from 4.8 to 5.4 (default on xenial) for linux builds\n* Changed builds from travis and app veyor to github\n\n### Added\n\n* Electron 11\n* Added Node 15\n\n## [1.5.1] - 2020-10-10\n\n### Added\n\n* Added manual workflow to reduce release errors\n\n### Fixed\n\n* Huge package size as npm publish does not use .gitignore or .npmignore locally\n\n## [1.5.0] - 2020-10-10\n\n### Added\n\n* Electron 7.3, 8.3, 8.4, 8.5 and 9.3\n\n## [1.4.3] - 2020-10-09\n\n### Fixed\n\n* Return code fixed for builds on app veyor.\n* Winwdows builds successfully with electron 10.x\n* NPM version on app veyor fixed to build electron 2.x again\n\n### Added\n\n* Add electron 10.1.3\n\n## [1.4.2] - 2020-08-27\n\n### Added\n\n* Add electron 10.0\n\n## [1.4.1] - 2020-08-13\n\nThis is a special release no code has been changed.\nThe packaged module included (in version muhammara@1.4.0) a bundled dependency with a\ndebug output.\n\n### Fixed\n\n* Removed debug output from packaged dependency `node-pre-gyp`\n\n\n## [1.4.0] - 2020-08-10\n\n### Added\n\n* Add electron 9.2\n\n## [1.3.0] - 2020-08-06\n\n### Added\n\n* Add electron-9.1 pre built\n\n### Fixed\n\n* Add missing typescript declaration files to published packages\n\n## [1.2.0] - 2020-06-01\n\n### Fixed\n\n* Updated freetype to 2.10.0\n* Updated libpng dependency to 1.6.37\n* Updated libaesgm dependency\n* Update libjpeg dependency to 9d\n* Updated libtiff dependency to 3.9.7\n\n## [1.1.0] - 2020-05-27\n\n### Added\n\n* Added infos about being hummusjs drop in replacement\n* Added electron v9.0.0\n\n### Fixed\n\n* Updated dependencies and dev dependencies\n\n## [1.0.1] - 2020-05-08\n\n### Fixed\n\n* Fixed readme to include infos about muhammaraJS and hummus\n* Fixed node-pre-gyp binary download links\n\n### Removed\n\n* Unecessary dependency on aws-sdk\n\n## [1.0.0] - 2020-05-07\n\nBasically this is [HummusJS v1.0.108](https://github.com/galkahana/HummusJS/commit/772bd561f02433bf1a602135f53c7c17f8072450)\nwith the following changes.\n\n### Added\n\n* Store releases @github\n* Listen for tags instead of a commit message\n* Added node v13, v14, electron 6.1, 7.1, 7.2, 8.0, 8.1, 8.2\n\n### Fixed\n\n* Updated v8:GET / v8:SET calls which are incompatible with newer node version (>13)\n\n### Removed\n\n* Dropped support for electron 1.8\n\n\n* Initial release\n\n[Unreleased]: https://github.com/julianhille/MuhammaraJS/compare/2.5.0...HEAD\n[2.5.0]: https://github.com/julianhille/MuhammaraJS/compare/2.4.0...2.5.0\n[2.4.0]: https://github.com/julianhille/MuhammaraJS/compare/2.3.0...2.4.0\n[2.3.0]: https://github.com/julianhille/MuhammaraJS/compare/2.2.0...2.3.0\n[2.2.0]: https://github.com/julianhille/MuhammaraJS/compare/2.1.0...2.2.0\n[2.1.0]: https://github.com/julianhille/MuhammaraJS/compare/2.0.0...2.1.0\n[2.0.0]: https://github.com/julianhille/MuhammaraJS/compare/1.10.0...2.0.0\n[1.10.0]: https://github.com/julianhille/MuhammaraJS/compare/1.9.0...1.10.0\n[1.9.0]: https://github.com/julianhille/MuhammaraJS/compare/1.8.0...1.9.0\n[1.8.0]: https://github.com/julianhille/MuhammaraJS/compare/1.7.0...1.8.0\n[1.7.0]: https://github.com/julianhille/MuhammaraJS/compare/1.6.0...1.7.0\n[1.6.0]: https://github.com/julianhille/MuhammaraJS/compare/1.5.1...1.6.0\n[1.5.1]: https://github.com/julianhille/MuhammaraJS/compare/1.5.0...1.5.1\n[1.5.0]: https://github.com/julianhille/MuhammaraJS/compare/1.4.3...1.5.0\n[1.4.3]: https://github.com/julianhille/MuhammaraJS/compare/1.4.2...1.4.3\n[1.4.3]: https://github.com/julianhille/MuhammaraJS/compare/1.4.2...1.4.3\n[1.4.3]: https://github.com/julianhille/MuhammaraJS/compare/1.4.2...1.4.3\n[1.4.2]: https://github.com/julianhille/MuhammaraJS/compare/1.4.1...1.4.2\n[1.4.1]: https://github.com/julianhille/MuhammaraJS/compare/1.4.0...1.4.1\n[1.4.0]: https://github.com/julianhille/MuhammaraJS/compare/1.3.0...1.4.0\n[1.3.0]: https://github.com/julianhille/MuhammaraJS/compare/1.2.0...1.3.0\n[1.2.0]: https://github.com/julianhille/MuhammaraJS/compare/1.1.0...1.2.0\n[1.1.0]: https://github.com/julianhille/MuhammaraJS/compare/1.0.1...1.1.0\n[1.0.1]: https://github.com/julianhille/MuhammaraJS/compare/1.0.0...1.0.1\n[1.0.0]: https://github.com/julianhille/MuhammaraJS/tree/1.0.0\n", "/*\n Source File : ObjectByteWriterWithPosition.h\n \n \n Copyright 2013 Gal Kahana HummusJS\n \n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n \n http://www.apache.org/licenses/LICENSE-2.0\n \n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n \n */\n#include \"ObjectByteWriterWithPosition.h\"\n\nusing namespace v8;\n\nObjectByteWriterWithPosition::ObjectByteWriterWithPosition(Local<Object> inObject)\n{\n\tCREATE_ISOLATE_CONTEXT;\n\n\tSET_PERSISTENT_OBJECT(mObject, Object, inObject);\n}\n\nObjectByteWriterWithPosition::~ObjectByteWriterWithPosition()\n{\n\tDISPOSE_PERSISTENT(mObject);\n}\n\nIOBasicTypes::LongBufferSizeType ObjectByteWriterWithPosition::Write(const IOBasicTypes::Byte* inBuffer,IOBasicTypes::LongBufferSizeType inBufferSize)\n{\n\tCREATE_ISOLATE_CONTEXT;\n\tCREATE_ESCAPABLE_SCOPE;\n\n    Local<Object> anArray = NEW_ARRAY((int)inBufferSize);\n    for(int i=0;i<(int)inBufferSize;++i)\n        anArray->Set(GET_CURRENT_CONTEXT, NEW_NUMBER(i),NEW_NUMBER(inBuffer[i]));\n    \n\tLocal<Value> value = OBJECT_FROM_PERSISTENT(mObject)->Get(GET_CURRENT_CONTEXT, NEW_STRING(\"write\")).ToLocalChecked();\n    if(value->IsUndefined() || !value->IsFunction())\n    {\n\t\tTHROW_EXCEPTION(\"write is not a function, it should be you know...\");\n        return 0;\n    }\n    Local<Function> func = Local<Function>::Cast(value);\n    \n    Local<Value> args[1];\n    args[0] = anArray;\n    MaybeLocal<Value> maybe;\n    TryCatch try_catch(Isolate::GetCurrent());\n\n    maybe = func->Call(GET_CURRENT_CONTEXT,  OBJECT_FROM_PERSISTENT(mObject), 1, args);\n    Local <Value> result;\n\n    if (!maybe.ToLocal(&result)) {\n       try_catch.ReThrow();\n       return 0;\n    }\n    if(result.IsEmpty())\n    {\n        THROW_EXCEPTION(\"wrong return value. it's empty. return the number of written characters\");\n        return 0;\n    }\n    else if(result->IsNumber())\n    {\n        return TO_UINT32(result)->Value();\n    }\n    else\n    {\n        THROW_EXCEPTION(\"wrong return value. write should return the number of written characters\");\n        return 0;\n    }\n}\n\nIOBasicTypes::LongFilePositionType ObjectByteWriterWithPosition::GetCurrentPosition()\n{\n\tCREATE_ISOLATE_CONTEXT;\n\tCREATE_ESCAPABLE_SCOPE;\n\n\tLocal<Value> value = OBJECT_FROM_PERSISTENT(mObject)->Get(GET_CURRENT_CONTEXT, NEW_STRING(\"getCurrentPosition\")).ToLocalChecked();\n    if(value->IsUndefined())\n        return true;\n    Local<Function> func = Local<Function>::Cast(value);\n    \n\treturn TO_NUMBER(func->Call(GET_CURRENT_CONTEXT, OBJECT_FROM_PERSISTENT(mObject), 0, NULL).ToLocalChecked())->Value();\n}\n", "var muhammara = require('../muhammara');\nconst chai = require('chai');\n\ndescribe('BasicModificationWithStreams', function() {\n\tit('should complete without error', function() {\n\t\tvar inStream = new muhammara.PDFRStreamForFile(__dirname + '/TestMaterials/MultipleChange.pdf');\n\t\tvar outStream = new muhammara.PDFWStreamForFile(__dirname + '/output/BasicModificationWithStreams.pdf');\n\t\tvar pdfWriter = muhammara.createWriterToModify(inStream,outStream);\n\t\tvar pageModifier = new muhammara.PDFPageModifier(pdfWriter, 0);\n\n\t\tpageModifier.startContext().getContext().writeText('Some added Text', 75, 805, {\n\t\t\tfont: pdfWriter.getFontForFile(__dirname + '/TestMaterials/fonts/Couri.ttf'),\n\t\t\tsize:14,\n\t\t\tcolorspace:'gray',\n\t\t\tcolor:0x00\n\t\t});\n\t\tpageModifier.endContext().writePage();\n\t\tpdfWriter.end();\n\t\toutStream.close();\n\t\tinStream.close();\n\t});\n\n\tit('null for stream should throw an error and not crash', function () {\n\t\tvar res = new muhammara.PDFStreamForResponse(null)\n\t\tchai.expect(\n\t\t\tmuhammara.createWriter.bind(undefined, res)\n\t\t).to.throw(/Cannot read propert.*(write)?.* of null/)\n\t})\n});\n"], "filenames": ["CHANGELOG.md", "src/ObjectByteWriterWithPosition.cpp", "tests/BasicModificationWithStreams.js"], "buggy_code_start_loc": [11, 55, 1], "buggy_code_end_loc": [11, 85, 21], "fixing_code_start_loc": [12, 55, 2], "fixing_code_end_loc": [13, 93, 29], "type": "NVD-CWE-noinfo", "message": "The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.", "other": {"cve": {"id": "CVE-2022-25885", "sourceIdentifier": "report@snyk.io", "published": "2022-11-01T05:15:09.810", "lastModified": "2022-11-01T19:20:57.707", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:muhammara_project:muhammara:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "2.6.0", "matchCriteriaId": "7E8836C1-85F5-4C9B-B050-A9B7E569CCBB"}]}]}], "references": [{"url": "https://github.com/galkahana/HummusJS/issues/439", "source": "report@snyk.io", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/julianhille/MuhammaraJS/issues/188", "source": "report@snyk.io", "tags": ["Exploit", "Issue Tracking", "Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}, {"url": "https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137", "source": "report@snyk.io", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c"}}