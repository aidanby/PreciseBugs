{"buggy_code": ["<?php\n/*\n\tFusionPBX\n\tVersion: MPL 1.1\n\n\tThe contents of this file are subject to the Mozilla Public License Version\n\t1.1 (the \"License\"); you may not use this file except in compliance with\n\tthe License. You may obtain a copy of the License at\n\thttp://www.mozilla.org/MPL/\n\n\tSoftware distributed under the License is distributed on an \"AS IS\" basis,\n\tWITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n\tfor the specific language governing rights and limitations under the\n\tLicense.\n\n\tThe Original Code is FusionPBX\n\n\tThe Initial Developer of the Original Code is\n\tMark J Crane <markjcrane@fusionpbx.com>\n\tPortions created by the Initial Developer are Copyright (C) 2008-2019\n\tthe Initial Developer. All Rights Reserved.\n\n\tContributor(s):\n\tMark J Crane <markjcrane@fusionpbx.com>\n*/\n\n//includes\n\tinclude \"root.php\";\n\trequire_once \"resources/require.php\";\n\trequire_once \"resources/check_auth.php\";\n\n//check permissions\n\tif (permission_exists('operator_panel_view')) {\n\t\t//access granted\n\t}\n\telse {\n\t\techo \"access denied\";\n\t\texit;\n\t}\n\n//add multi-lingual support\n\t$language = new text;\n\t$text = $language->get(null,'app/basic_operator_panel');\n\n//get the call activity\n\t$operator_panel = new basic_operator_panel;\n\t$activity = $operator_panel->call_activity();\n\tif (is_array($activity)) {\n\t\tforeach ($activity as $extension => $fields) {\n\t\t\tif (substr_count($fields['call_group'], ',')) {\n\t\t\t\t$tmp = explode(',', $fields['call_group']);\n\t\t\t\tif (is_array($tmp)) foreach ($tmp as $tmp_index => $tmp_value) {\n\t\t\t\t\tif (trim($tmp_value) == '') { unset($tmp[$tmp_index]); }\n\t\t\t\t\telse { $groups[] = $tmp_value; }\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($fields['call_group'] != '') {\n\t\t\t\t$groups[] = $fields['call_group'];\n\t\t\t}\n\t\t}\n\t}\n\tif (is_array($groups)) {\n\t\t$groups = array_unique($groups);\n\t\tsort($groups); \n\t}\n\n//prevent warnings\n\tif (!is_array($_SESSION['user']['extensions'])) {\n\t\t$_SESSION['user']['extensions'] = array();\n\t}\n\n\n$onhover_pause_refresh = \" onmouseover='refresh_stop();' onmouseout='refresh_start();'\";\n\necho \"<table width='100%'>\";\necho \"\t<tr>\";\necho \"\t\t<td valign='top' align='left' width='50%' nowrap>\";\necho \"\t\t\t<b>\".$text['title-operator_panel'].\"</b>\";\necho \"\t\t</td>\";\necho \"\t\t<td valign='top' align='center' nowrap>\";\n\nif (sizeof($_SESSION['user']['extensions']) > 0) {\n\t$status_options[1]['status'] = \"Available\";\n\t$status_options[1]['label'] = $text['label-status_available'];\n\t$status_options[1]['style'] = \"op_btn_status_available\";\n\tif (permission_exists('operator_panel_on_demand')) {\n\t\t$status_options[2]['status'] = \"Available (On Demand)\";\n\t\t$status_options[2]['label'] = $text['label-status_on_demand'];\n\t\t$status_options[2]['style'] = \"op_btn_status_available_on_demand\";\n\t}\n\t$status_options[3]['status'] = \"On Break\";\n\t$status_options[3]['label'] = $text['label-status_on_break'];\n\t$status_options[3]['style'] = \"op_btn_status_on_break\";\n\t$status_options[4]['status'] = \"Do Not Disturb\";\n\t$status_options[4]['label'] = $text['label-status_do_not_disturb'];\n\t$status_options[4]['style'] = \"op_btn_status_do_not_disturb\";\n\t$status_options[5]['status'] = \"Logged Out\";\n\t$status_options[5]['label'] = $text['label-status_logged_out'];\n\t$status_options[5]['style'] = \"op_btn_status_logged_out\";\n\n\tif (is_array($status_options)) foreach ($status_options as $status_option) {\n\t\techo \"\t<input type='button' id='\".$status_option['style'].\"' class='btn' value=\\\"\".$status_option['label'].\"\\\" onclick=\\\"send_cmd('index.php?status='+escape('\".$status_option['status'].\"')); this.disabled='disabled'; refresh_start();\\\" \".$onhover_pause_refresh.\">\\n\";\n\t}\n}\n\necho \"\t\t</td>\";\necho \"\t\t<td valign='top' align='right' width='50%' nowrap>\";\necho \"\t\t\t<table cellpadding='0' cellspacing='0' border='0'>\";\necho \"\t\t\t\t<tr>\";\necho \"\t\t\t\t\t<td valign='middle' nowrap='nowrap' style='padding-right: 15px' id='refresh_state'>\";\necho \"\t\t\t\t\t\t<img src='resources/images/refresh_active.gif' style='width: 16px; height: 16px; border: none; margin-top: 3px; cursor: pointer;' onclick='refresh_stop();' alt=\\\"\".$text['label-refresh_pause'].\"\\\" title=\\\"\".$text['label-refresh_pause'].\"\\\">\";\necho \"\t\t\t\t\t</td>\";\n\nif (permission_exists('operator_panel_eavesdrop')) {\n\techo \"\t\t\t\t<td valign='top' nowrap='nowrap'>\";\n\tif (sizeof($_SESSION['user']['extensions']) > 1) {\n\t\techo \"\t\t\t\t<input type='hidden' id='eavesdrop_dest' value=\\\"\".(($_REQUEST['eavesdrop_dest'] == '') ? $_SESSION['user']['extension'][0]['destination'] : $_REQUEST['eavesdrop_dest']).\"\\\">\";\n\t\techo \"\t\t\t\t<img src='resources/images/eavesdrop.png' style='width: 12px; height: 12px; border: none; margin: 0px 5px; cursor: help;' title='\".$text['description-eavesdrop_destination'].\"' align='absmiddle'>\";\n\t\techo \"\t\t\t\t<select class='formfld' style='margin-right: 5px;' align='absmiddle' onchange=\\\"document.getElementById('eavesdrop_dest').value = this.options[this.selectedIndex].value; refresh_start();\\\" onfocus='refresh_stop();'>\\n\";\n\t\tif (is_array($_SESSION['user']['extensions'])) foreach ($_SESSION['user']['extensions'] as $user_extension) {\n\t\t\techo \"\t\t\t\t<option value='\".$user_extension.\"' \".(($_REQUEST['eavesdrop_dest'] == $user_extension) ? \"selected\" : null).\">\".$user_extension.\"</option>\\n\";\n\t\t}\n\t\techo \"\t\t\t\t</select>\\n\";\n\t}\n\telse if (sizeof($_SESSION['user']['extensions']) == 1) {\n\t\techo \"\t\t\t\t<input type='hidden' id='eavesdrop_dest' value=\\\"\".$_SESSION['user']['extension'][0]['destination'].\"\\\">\";\n\t}\n\techo \"\t\t\t\t</td>\";\n}\n\nif (sizeof($groups) > 0) {\n\techo \"\t\t\t\t<td valign='top' nowrap='nowrap'>\";\n\techo \"\t\t\t\t\t<input type='hidden' id='group' value=\\\"\".$_REQUEST['group'].\"\\\">\";\n\tif (sizeof($groups) > 5) {\n\t\t//show select box\n\t\techo \"\t\t\t\t<select class='formfld' onchange=\\\"document.getElementById('group').value = this.options[this.selectedIndex].value; refresh_start();\\\" onfocus='refresh_stop();'>\\n\";\n\t\techo \"\t\t\t\t\t<option value='' \".(($_REQUEST['group'] == '') ? \"selected\" : null).\">\".$text['label-call_group'].\"</option>\";\n\t\techo \"\t\t\t\t\t<option value=''>\".$text['button-all'].\"</option>\";\n\t\tif (is_array($groups)) foreach ($groups as $group) {\n\t\t\techo \"\t\t\t\t<option value='\".$group.\"' \".(($_REQUEST['group'] == $group) ? \"selected\" : null).\">\".$group.\"</option>\\n\";\n\t\t}\n\t\techo \"\t\t\t\t</select>\\n\";\n\t}\n\telse {\n\t\t//show buttons\n\t\techo \"\t\t\t\t<input type='button' class='btn' title=\\\"\".$text['label-call_group'].\"\\\" value=\\\"\".$text['button-all'].\"\\\" onclick=\\\"document.getElementById('group').value = '';\\\" \".$onhover_pause_refresh.\">\";\n\t\tif (is_array($groups)) foreach ($groups as $group) {\n\t\t\techo \"\t\t\t<input type='button' class='btn' title=\\\"\".$text['label-call_group'].\"\\\" value=\\\"\".$group.\"\\\" \".(($_REQUEST['group'] == $group) ? \"disabled='disabled'\" : null).\" onclick=\\\"document.getElementById('group').value = this.value;\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t}\n\techo \"\t\t\t\t</td>\";\n}\n\necho \"\t\t\t\t</tr>\";\necho \"\t\t\t</table>\";\n\necho \"\t\t</td>\";\necho \"\t</tr>\";\necho \"</table>\";\necho \"<br>\";\n\nif (is_array($activity)) foreach ($activity as $extension => $ext) {\n\tunset($block);\n\n\t//filter by group, if defined\n\tif ($_REQUEST['group'] != '' && substr_count($ext['call_group'], $_REQUEST['group']) == 0 && !in_array($extension, $_SESSION['user']['extensions'])) { continue; }\n\n\t//check if feature code being called\n\t$format_number = (substr($ext['dest'], 0, 1) == '*') ? false : true;\n\n\t//determine extension state, direction icon, and displayed name/number for caller/callee\n\tif ($ext['state'] == 'CS_EXECUTE') {\n\t\tif (($ext['callstate'] == 'RINGING' || $ext['callstate'] == 'EARLY' || $ext['callstate'] == 'RING_WAIT') && $ext['direction'] == 'inbound') {\n\t\t\t$ext_state = 'ringing';\n\t\t}\n\t\telse if ($ext['callstate'] == 'ACTIVE' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'active';\n\t\t}\n\t\telse if ($ext['callstate'] == 'RING_WAIT' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'ringing';\n\t\t}\n\t\telse if ($ext['callstate'] == 'ACTIVE' && $ext['direction'] == 'inbound') {\n\t\t\t$ext_state = 'active';\n\t\t}\n\t\tif (!$format_number) {\n\t\t\t$call_name = 'System';\n\t\t\t$call_number = $ext['dest'];\n\t\t}\n\t\telse {\n\t\t\t$call_name = $activity[$ext['dest']]['effective_caller_id_name'];\n\t\t\t$call_number = format_phone($ext['dest']);\n\t\t}\n\t\t$dir_icon = 'outbound';\n\t}\n\telse if ($ext['state'] == 'CS_HIBERNATE') {\n\t\tif ($ext['callstate'] == 'ACTIVE') {\n\t\t\t$ext_state = 'active';\n\t\t\tif ($ext['direction'] == 'inbound') {\n\t\t\t\t$call_name = $activity[$ext['dest']]['effective_caller_id_name'];\n\t\t\t\t$call_number = format_phone($ext['dest']);\n\t\t\t\t$dir_icon = 'outbound';\n\t\t\t}\n\t\t\telse if ($ext['direction'] == 'outbound') {\n\t\t\t\t$call_name = $activity[$ext['cid_num']]['effective_caller_id_name'];\n\t\t\t\t$call_number = format_phone($ext['cid_num']);\n\t\t\t\t$dir_icon = 'inbound';\n\t\t\t}\n\t\t}\n\t}\n\telse if ($ext['state'] == 'CS_CONSUME_MEDIA' || $ext['state'] == 'CS_EXCHANGE_MEDIA') {\n\t\tif ($ext['state'] == 'CS_CONSUME_MEDIA' && $ext['callstate'] == 'RINGING' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'ringing';\n\t\t}\n\t\telse if ($ext['state'] == 'CS_EXCHANGE_MEDIA' && $ext['callstate'] == 'ACTIVE' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'active';\n\t\t}\n\t\t$dir_icon = 'inbound';\n\t\t$call_name = $activity[$ext['cid_num']]['effective_caller_id_name'];\n\t\t$call_number = format_phone($ext['cid_num']);\n\t}\n\telse {\n\t\tunset($ext_state, $dir_icon, $call_name, $call_number);\n\t}\n\n\t//determine block style by state (if any)\n\t$style = ($ext_state != '') ? \"op_state_\".$ext_state : null;\n\n\t//determine the call identifier passed on drop\n\tif ($ext['uuid'] == $ext['call_uuid'] && $ext['variable_bridge_uuid'] == '') { // transfer an outbound internal call\n\t\t$call_identifier = $activity[$call_number]['uuid'];\n\t}\n\telse if (($ext['variable_call_direction'] == 'outbound' || $ext['variable_call_direction'] == 'local') && $ext['variable_bridge_uuid'] != '') { // transfer an outbound external call\n\t\t$call_identifier = $ext['variable_bridge_uuid'];\n\t}\n\telse {\n\t\tif( $ext['call_uuid'] ) {\n\t\t\t$call_identifier = $ext['call_uuid']; // transfer all other call types\n\t\t}\n\t\telse {\n\t\t\t$call_identifier = $ext['uuid']; // e.g. voice menus\n\t\t}\n\t}\n\n\t//determine extension draggable state\n\tif (permission_exists('operator_panel_manage')) {\n\t\tif (!in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\t//other extension\n\t\t\tif ($ext_state == \"ringing\") {\n\t\t\t\tif ($_GET['vd_ext_from'] == '' && $dir_icon == 'inbound') {\n\t\t\t\t\t$draggable = true; // selectable - is ringing and not outbound so can transfer away the call (can set as vd_ext_from)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$draggable = false; // unselectable - is ringing so can't send a call to the ext (can't set as vd_ext_to)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($ext_state == 'active') {\n\t\t\t\t$draggable = false; // unselectable - on a call already so can't transfer or send a call to the ext (can't set as vd_ext_from or vd_ext_to)\n\t\t\t}\n\t\t\telse { // idle\n\t\t\t\tif ($_GET['vd_ext_from'] == '') {\n\t\t\t\t\t$draggable = false; // unselectable - is idle, but can't initiate a call from the ext as is not assigned to user (can't set as vd_ext_from)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$draggable = true; // selectable - is idle, so can transfer a call in to ext (can set as vd_ext_to).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//user extension\n\t\t\tif ($ext['uuid'] != '' && $ext['uuid'] == $ext['call_uuid'] && $ext['variable_bridge_uuid'] == '') {\n\t\t\t\t$draggable = false;\n\t\t\t}\n\t\t\telse if ($ext_state == 'ringing' && $ext['variable_call_direction'] == 'local') {\n\t\t\t\t$draggable = false;\n\t\t\t}\n\t\t\telse if ($ext_state != '' && !$format_number) {\n\t\t\t\t$draggable = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$draggable = true;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t$draggable = false;\n\t}\n\n\t//determine extension (user) status\n\t$ext_status = (in_array($extension, $_SESSION['user']['extensions'])) ? $ext_user_status[$_SESSION['user_uuid']] : $ext_user_status[$ext['user_uuid']];\n\tswitch ($ext_status) {\n\t\tcase \"Available\" :\n\t\t\t$status_icon = \"available\";\n\t\t\t$status_hover = $text['label-status_available'];\n\t\t\tbreak;\n\t\tcase \"Available (On Demand)\" :\n\t\t\t$status_icon = \"available_on_demand\";\n\t\t\t$status_hover = $text['label-status_available_on_demand'];\n\t\t\tbreak;\n\t\tcase \"On Break\" :\n\t\t\t$status_icon = \"on_break\";\n\t\t\t$status_hover = $text['label-status_on_break'];\n\t\t\tbreak;\n\t\tcase \"Do Not Disturb\" :\n\t\t\t$status_icon = \"do_not_disturb\";\n\t\t\t$status_hover = $text['label-status_do_not_disturb'];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\t$status_icon = \"logged_out\";\n\t\t\t$status_hover = $text['label-status_logged_out_or_unknown'];\n\t}\n\n\t$block .= \"<div id='\".$extension.\"' class='op_ext \".$style.\"' \".(($_GET['vd_ext_from'] == $extension || $_GET['vd_ext_to'] == $extension) ? \"style='border-style: dotted;'\" : null).\" \".(($ext_state != 'active' && $ext_state != 'ringing') ? \"ondrop='drop(event, this.id);' ondragover='allowDrop(event, this.id);' ondragleave='discardDrop(event, this.id);'\" : null).\">\"; // DRAG TO\n\t$block .= \"<table class='op_ext \".$style.\"'>\";\n\t$block .= \"\t<tr>\";\n\t$block .= \"\t\t<td class='op_ext_icon'>\";\n\t$block .= \"\t\t\t<span name='\".$extension.\"'>\"; // DRAG FROM\n\t$block .= \t\t\t\t\"<img id='\".$call_identifier.\"' class='op_ext_icon' src='resources/images/status_\".$status_icon.\".png' title='\".$status_hover.\"' \".(($draggable) ? \"draggable='true' ondragstart=\\\"drag(event, this.parentNode.getAttribute('name'));\\\" onclick=\\\"virtual_drag('\".$call_identifier.\"', '\".$extension.\"');\\\"\" : \"onfocus='this.blur();' draggable='false' style='cursor: not-allowed;'\").\">\";\n\t$block .= \t\t\t\"</span>\";\n\t$block .= \"\t\t</td>\";\n\t$block .= \"\t\t<td class='op_ext_info \".$style.\"'>\";\n\tif ($dir_icon != '') {\n\t\t$block .= \"\t\t\t<img src='resources/images/\".$dir_icon.\".png' align='right' style='margin-top: 3px; margin-right: 1px; width: 12px; height: 12px; cursor: help;' draggable='false' alt=\\\"\".$text['label-call_direction'].\"\\\" title=\\\"\".$text['label-call_direction'].\"\\\">\";\n\t}\n\t$block .= \"\t\t\t<span class='op_user_info'>\";\n\tif ($ext['effective_caller_id_name'] != '' && $ext['effective_caller_id_name'] != $extension) {\n\t\t$block .= \"\t\t\t<strong class='strong'>\".$ext['effective_caller_id_name'].\"</strong> (\".$extension.\")\";\n\t}\n\telse {\n\t\t$block .= \"\t\t\t<strong class='strong'>\".$extension.\"</strong>\";\n\t}\n\t$block .= \"\t\t\t</span><br>\";\n\tif ($ext_state != '') {\n\t\t$block .= \"\t\t<span class='op_caller_info'>\";\n\t\t$block .= \"\t\t\t<table align='right'><tr><td style='text-align: right;'>\";\n\t\t$block .= \"\t\t\t\t<span class='op_call_info'>\".$ext['call_length'].\"</span><br>\";\n\t\t$block .= \"\t\t\t\t<span class='call_control'>\";\n\t\t//record\n\t\tif (permission_exists('operator_panel_record') && $ext_state == 'active') {\n\t\t\t$call_identifier_record = $ext['call_uuid'];\n\t\t\t$rec_file = $_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$call_identifier_record.\".wav\";\n\t\t\tif (file_exists($rec_file)) {\n\t\t\t\t$block .= \t\t\"<img src='resources/images/recording.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: help;' title=\\\"\".$text['label-recording'].\"\\\" \".$onhover_pause_refresh.\">\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$block .= \t\t\"<img src='resources/images/record.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' title=\\\"\".$text['label-record'].\"\\\" onclick=\\\"record_call('\".$call_identifier_record.\"');\\\" \".$onhover_pause_refresh.\">\";\n\t\t\t}\n\t\t}\n\t\t//eavesdrop\n\t\tif (permission_exists('operator_panel_eavesdrop') && $ext_state == 'active' && sizeof($_SESSION['user']['extensions']) > 0 && !in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\t$block .= \t\t\t\"<img src='resources/images/eavesdrop.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' title='\".$text['label-eavesdrop'].\"' onclick=\\\"eavesdrop_call('\".$ext['destination'].\"','\".$call_identifier.\"');\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t\t//hangup\n\t\tif (permission_exists('operator_panel_hangup') || in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\tif ($ext['variable_bridge_uuid'] == '' && $ext_state == 'ringing') {\n\t\t\t\t$call_identifier_hangup_uuid = $ext['uuid'];\n\t\t\t}\n\t\t\telse if ($dir_icon == 'outbound') {\n\t\t\t\t$call_identifier_hangup_uuid = $ext['uuid'];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$call_identifier_hangup_uuid = $call_identifier;\n\t\t\t}\n\t\t\t$block .= \t\t\t\"<img src='resources/images/kill.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' title='\".$text['label-hangup'].\"' onclick=\\\"hangup_call('\".$call_identifier_hangup_uuid.\"');\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t\t$block .=\t\t\t\t\"</span>\";\n\t\t//transfer\n\t\tif (in_array($extension, $_SESSION['user']['extensions']) && $ext_state == 'active') {\n\t\t\t$block .= \t\t\t\"<img id='destination_control_\".$extension.\"_transfer' class='destination_control' src='resources/images/keypad_transfer.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' onclick=\\\"toggle_destination('\".$extension.\"', 'transfer');\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t\t$block .= \"\t\t\t</td></tr></table>\";\n\t\tif (permission_exists('operator_panel_call_details')) {\n\t\t\t$block .= \"\t\t\t<span id='op_caller_details_\".$extension.\"'><strong>\".escape($call_name).\"</strong><br>\".escape($call_number).\"</span>\";\n\t\t}\n\t\t$block .= \"\t\t</span>\";\n\t\t//transfer\n\t\tif (in_array($extension, $_SESSION['user']['extensions']) && $ext_state == 'active') {\n\t\t\t$call_identifier_transfer = $ext['variable_bridge_uuid'];\n\t\t\t$block .= \"\t\t<form id='frm_destination_\".$extension.\"_transfer' onsubmit=\\\"go_destination('\".$extension.\"', document.getElementById('destination_\".$extension.\"_transfer').value, 'transfer', '\".$call_identifier_transfer.\"'); return false;\\\">\";\n\t\t\t$block .= \"\t\t\t<input type='text' class='formfld' id='destination_\".$extension.\"_transfer' style='width: 100px; min-width: 100px; max-width: 100px; margin-top: 3px; text-align: center; display: none;' onblur=\\\"toggle_destination('\".$extension.\"', 'transfer');\\\">\";\n\t\t\t$block .= \"\t\t</form>\\n\";\n\t\t}\n\t}\n\telse {\n\t\t//call\n\t\tif (in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\t$block .= \"\t\t<img id='destination_control_\".$extension.\"_call' class='destination_control' src='resources/images/keypad_call.png' style='width: 12px; height: 12px; border: none; margin-top: 26px; margin-right: 1px; cursor: pointer;' align='right' onclick=\\\"toggle_destination('\".$extension.\"', 'call');\\\" \".$onhover_pause_refresh.\">\";\n\t\t\t$block .= \"\t\t<form id='frm_destination_\".$extension.\"_call' onsubmit=\\\"go_destination('\".$extension.\"', document.getElementById('destination_\".$extension.\"_call').value, 'call'); return false;\\\">\";\n\t\t\t$block .= \"\t\t\t<input type='text' class='formfld' id='destination_\".$extension.\"_call' style='width: 100px; min-width: 100px; max-width: 100px; margin-top: 10px; text-align: center; display: none;' onblur=\\\"toggle_destination('\".$extension.\"', 'call');\\\">\";\n\t\t\t$block .= \"\t\t</form>\\n\";\n\t\t}\n\t}\n\t$block .= \"\t\t</td>\";\n\t$block .= \"\t</tr>\";\n\t$block .= \"</table>\";\n\n\tif (if_group(\"superadmin\") && isset($_GET['debug'])) {\n\t\t$block .= \"<span style='font-size: 10px;'>\";\n\t\t$block .= \"From ID<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: maroon'>\".$extension.\"</strong><br>\";\n\t\t$block .= \"uuid<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: \".($call_identifier == $ext['uuid'] ? 'blue' : 'black').\";'>\".$ext['uuid'].\"</strong><br>\";\n\t\t$block .= \"call_uuid<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: \".($call_identifier == $ext['call_uuid'] ? 'blue' : 'black').\";'>\".$ext['call_uuid'].\"</strong><br>\";\n\t\t$block .= \"variable_bridge_uuid<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: \".($call_identifier == $ext['variable_bridge_uuid'] ? 'blue' : 'black').\";'>\".$ext['variable_bridge_uuid'].\"</strong><br>\";\n\t\t$block .= \"direction<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['direction'].\"</strong><br>\";\n\t\t$block .= \"variable_call_direction<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['variable_call_direction'].\"</strong><br>\";\n\t\t$block .= \"state<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['state'].\"</strong><br>\";\n\t\t$block .= \"cid_num<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['cid_num'].\"</strong><br>\";\n\t\t$block .= \"dest<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['dest'].\"</strong><br>\";\n\t\t$block .= \"context<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['context'].\"</strong><br>\";\n\t\t$block .= \"presence_id<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['presence_id'].\"</strong><br>\";\n\t\t$block .= \"callstate<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".$ext['callstate'].\"</strong><br>\";\n\t\t$block .= \"</span>\";\n\t}\n\t$block .= \"</div>\";\n\n\tif (in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t$user_extensions[] = $block;\n\t}\n\telse {\n\t\t$other_extensions[] = $block;\n\t}\n}\n\n\nif (sizeof($user_extensions) > 0) {\n\techo \"<table width='100%'><tr><td>\";\n\tif (is_array($user_extensions)) foreach ($user_extensions as $ext_block) {\n\t\techo $ext_block;\n\t}\n\techo \"</td></tr></table>\";\n}\n\nif ($_REQUEST['group'] != '') {\n\tif (sizeof($user_extensions) > 0) { echo \"<br>\"; }\n\techo \"<strong style='color: black;'>\".ucwords($_REQUEST['group']).\"</strong>\";\n\techo \"<br><br>\";\n}\nelse if (sizeof($user_extensions) > 0) {\n\techo \"<br>\";\n\techo \"<strong style='color: black;'>\".$text['label-other_extensions'].\"</strong>\";\n\techo \"<br><br>\";\n}\n\nif (sizeof($other_extensions) > 0) {\n\techo \"<table width='100%'><tr><td>\";\n\tif (is_array($other_extensions)) foreach ($other_extensions as $ext_block) {\n\t\techo $ext_block;\n\t}\n\techo \"</td></tr></table>\";\n}\nelse {\n\techo $text['label-no_extensions_found'];\n}\necho \"<br><br>\";\n\n/*\nif (if_group(\"superadmin\") && isset($_GET['debug'])) {\n\techo '$activity<br>';\n\techo \"<textarea style='width: 100%; height: 600px; overflow: scroll;' onfocus='refresh_stop();' onblur='refresh_start();'>\";\n\tprint_r($activity);\n\techo \"</textarea>\";\n\techo \"<br><br>\";\n\n\techo '$_SESSION<br>';\n\techo \"<textarea style='width: 100%; height: 600px; overflow: scroll;' onfocus='refresh_stop();' onblur='refresh_start();'>\";\n\tprint_r($_SESSION);\n\techo \"</textarea>\";\n}\n*/\n\n?>\n"], "fixing_code": ["<?php\n/*\n\tFusionPBX\n\tVersion: MPL 1.1\n\n\tThe contents of this file are subject to the Mozilla Public License Version\n\t1.1 (the \"License\"); you may not use this file except in compliance with\n\tthe License. You may obtain a copy of the License at\n\thttp://www.mozilla.org/MPL/\n\n\tSoftware distributed under the License is distributed on an \"AS IS\" basis,\n\tWITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n\tfor the specific language governing rights and limitations under the\n\tLicense.\n\n\tThe Original Code is FusionPBX\n\n\tThe Initial Developer of the Original Code is\n\tMark J Crane <markjcrane@fusionpbx.com>\n\tPortions created by the Initial Developer are Copyright (C) 2008-2019\n\tthe Initial Developer. All Rights Reserved.\n\n\tContributor(s):\n\tMark J Crane <markjcrane@fusionpbx.com>\n*/\n\n//includes\n\tinclude \"root.php\";\n\trequire_once \"resources/require.php\";\n\trequire_once \"resources/check_auth.php\";\n\n//check permissions\n\tif (permission_exists('operator_panel_view')) {\n\t\t//access granted\n\t}\n\telse {\n\t\techo \"access denied\";\n\t\texit;\n\t}\n\n//add multi-lingual support\n\t$language = new text;\n\t$text = $language->get(null,'app/basic_operator_panel');\n\n//get the call activity\n\t$operator_panel = new basic_operator_panel;\n\t$activity = $operator_panel->call_activity();\n\tif (is_array($activity)) {\n\t\tforeach ($activity as $extension => $fields) {\n\t\t\tif (substr_count($fields['call_group'], ',')) {\n\t\t\t\t$tmp = explode(',', $fields['call_group']);\n\t\t\t\tif (is_array($tmp)) foreach ($tmp as $tmp_index => $tmp_value) {\n\t\t\t\t\tif (trim($tmp_value) == '') { unset($tmp[$tmp_index]); }\n\t\t\t\t\telse { $groups[] = $tmp_value; }\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($fields['call_group'] != '') {\n\t\t\t\t$groups[] = $fields['call_group'];\n\t\t\t}\n\t\t}\n\t}\n\tif (is_array($groups)) {\n\t\t$groups = array_unique($groups);\n\t\tsort($groups); \n\t}\n\n//prevent warnings\n\tif (!is_array($_SESSION['user']['extensions'])) {\n\t\t$_SESSION['user']['extensions'] = array();\n\t}\n\n\n$onhover_pause_refresh = \" onmouseover='refresh_stop();' onmouseout='refresh_start();'\";\n\necho \"<table width='100%'>\";\necho \"\t<tr>\";\necho \"\t\t<td valign='top' align='left' width='50%' nowrap>\";\necho \"\t\t\t<b>\".$text['title-operator_panel'].\"</b>\";\necho \"\t\t</td>\";\necho \"\t\t<td valign='top' align='center' nowrap>\";\n\nif (sizeof($_SESSION['user']['extensions']) > 0) {\n\t$status_options[1]['status'] = \"Available\";\n\t$status_options[1]['label'] = $text['label-status_available'];\n\t$status_options[1]['style'] = \"op_btn_status_available\";\n\tif (permission_exists('operator_panel_on_demand')) {\n\t\t$status_options[2]['status'] = \"Available (On Demand)\";\n\t\t$status_options[2]['label'] = $text['label-status_on_demand'];\n\t\t$status_options[2]['style'] = \"op_btn_status_available_on_demand\";\n\t}\n\t$status_options[3]['status'] = \"On Break\";\n\t$status_options[3]['label'] = $text['label-status_on_break'];\n\t$status_options[3]['style'] = \"op_btn_status_on_break\";\n\t$status_options[4]['status'] = \"Do Not Disturb\";\n\t$status_options[4]['label'] = $text['label-status_do_not_disturb'];\n\t$status_options[4]['style'] = \"op_btn_status_do_not_disturb\";\n\t$status_options[5]['status'] = \"Logged Out\";\n\t$status_options[5]['label'] = $text['label-status_logged_out'];\n\t$status_options[5]['style'] = \"op_btn_status_logged_out\";\n\n\tif (is_array($status_options)) foreach ($status_options as $status_option) {\n\t\techo \"\t<input type='button' id='\".$status_option['style'].\"' class='btn' value=\\\"\".$status_option['label'].\"\\\" onclick=\\\"send_cmd('index.php?status='+escape('\".$status_option['status'].\"')); this.disabled='disabled'; refresh_start();\\\" \".$onhover_pause_refresh.\">\\n\";\n\t}\n}\n\necho \"\t\t</td>\";\necho \"\t\t<td valign='top' align='right' width='50%' nowrap>\";\necho \"\t\t\t<table cellpadding='0' cellspacing='0' border='0'>\";\necho \"\t\t\t\t<tr>\";\necho \"\t\t\t\t\t<td valign='middle' nowrap='nowrap' style='padding-right: 15px' id='refresh_state'>\";\necho \"\t\t\t\t\t\t<img src='resources/images/refresh_active.gif' style='width: 16px; height: 16px; border: none; margin-top: 3px; cursor: pointer;' onclick='refresh_stop();' alt=\\\"\".$text['label-refresh_pause'].\"\\\" title=\\\"\".$text['label-refresh_pause'].\"\\\">\";\necho \"\t\t\t\t\t</td>\";\n\nif (permission_exists('operator_panel_eavesdrop')) {\n\techo \"\t\t\t\t<td valign='top' nowrap='nowrap'>\";\n\tif (sizeof($_SESSION['user']['extensions']) > 1) {\n\t\techo \"\t\t\t\t<input type='hidden' id='eavesdrop_dest' value=\\\"\".(($_REQUEST['eavesdrop_dest'] == '') ? $_SESSION['user']['extension'][0]['destination'] : escape($_REQUEST['eavesdrop_dest'])).\"\\\">\";\n\t\techo \"\t\t\t\t<img src='resources/images/eavesdrop.png' style='width: 12px; height: 12px; border: none; margin: 0px 5px; cursor: help;' title='\".$text['description-eavesdrop_destination'].\"' align='absmiddle'>\";\n\t\techo \"\t\t\t\t<select class='formfld' style='margin-right: 5px;' align='absmiddle' onchange=\\\"document.getElementById('eavesdrop_dest').value = this.options[this.selectedIndex].value; refresh_start();\\\" onfocus='refresh_stop();'>\\n\";\n\t\tif (is_array($_SESSION['user']['extensions'])) foreach ($_SESSION['user']['extensions'] as $user_extension) {\n\t\t\techo \"\t\t\t\t<option value='\".escape($user_extension).\"' \".(($_REQUEST['eavesdrop_dest'] == $user_extension) ? \"selected\" : null).\">\".escape($user_extension).\"</option>\\n\";\n\t\t}\n\t\techo \"\t\t\t\t</select>\\n\";\n\t}\n\telse if (sizeof($_SESSION['user']['extensions']) == 1) {\n\t\techo \"\t\t\t\t<input type='hidden' id='eavesdrop_dest' value=\\\"\".escape($_SESSION['user']['extension'][0]['destination']).\"\\\">\";\n\t}\n\techo \"\t\t\t\t</td>\";\n}\n\nif (sizeof($groups) > 0) {\n\techo \"\t\t\t\t<td valign='top' nowrap='nowrap'>\";\n\techo \"\t\t\t\t\t<input type='hidden' id='group' value=\\\"\".escape($_REQUEST['group']).\"\\\">\";\n\tif (sizeof($groups) > 5) {\n\t\t//show select box\n\t\techo \"\t\t\t\t<select class='formfld' onchange=\\\"document.getElementById('group').value = this.options[this.selectedIndex].value; refresh_start();\\\" onfocus='refresh_stop();'>\\n\";\n\t\techo \"\t\t\t\t\t<option value='' \".(($_REQUEST['group'] == '') ? \"selected\" : null).\">\".$text['label-call_group'].\"</option>\";\n\t\techo \"\t\t\t\t\t<option value=''>\".$text['button-all'].\"</option>\";\n\t\tif (is_array($groups)) foreach ($groups as $group) {\n\t\t\techo \"\t\t\t\t<option value='\".escape($group).\"' \".(($_REQUEST['group'] == $group) ? \"selected\" : null).\">\".escape($group).\"</option>\\n\";\n\t\t}\n\t\techo \"\t\t\t\t</select>\\n\";\n\t}\n\telse {\n\t\t//show buttons\n\t\techo \"\t\t\t\t<input type='button' class='btn' title=\\\"\".$text['label-call_group'].\"\\\" value=\\\"\".$text['button-all'].\"\\\" onclick=\\\"document.getElementById('group').value = '';\\\" \".$onhover_pause_refresh.\">\";\n\t\tif (is_array($groups)) foreach ($groups as $group) {\n\t\t\techo \"\t\t\t<input type='button' class='btn' title=\\\"\".$text['label-call_group'].\"\\\" value=\\\"\".escape($group).\"\\\" \".(($_REQUEST['group'] == $group) ? \"disabled='disabled'\" : null).\" onclick=\\\"document.getElementById('group').value = this.value;\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t}\n\techo \"\t\t\t\t</td>\";\n}\n\necho \"\t\t\t\t</tr>\";\necho \"\t\t\t</table>\";\n\necho \"\t\t</td>\";\necho \"\t</tr>\";\necho \"</table>\";\necho \"<br>\";\n\nif (is_array($activity)) foreach ($activity as $extension => $ext) {\n\tunset($block);\n\n\t//filter by group, if defined\n\tif ($_REQUEST['group'] != '' && substr_count($ext['call_group'], $_REQUEST['group']) == 0 && !in_array($extension, $_SESSION['user']['extensions'])) { continue; }\n\n\t//check if feature code being called\n\t$format_number = (substr($ext['dest'], 0, 1) == '*') ? false : true;\n\n\t//determine extension state, direction icon, and displayed name/number for caller/callee\n\tif ($ext['state'] == 'CS_EXECUTE') {\n\t\tif (($ext['callstate'] == 'RINGING' || $ext['callstate'] == 'EARLY' || $ext['callstate'] == 'RING_WAIT') && $ext['direction'] == 'inbound') {\n\t\t\t$ext_state = 'ringing';\n\t\t}\n\t\telse if ($ext['callstate'] == 'ACTIVE' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'active';\n\t\t}\n\t\telse if ($ext['callstate'] == 'RING_WAIT' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'ringing';\n\t\t}\n\t\telse if ($ext['callstate'] == 'ACTIVE' && $ext['direction'] == 'inbound') {\n\t\t\t$ext_state = 'active';\n\t\t}\n\t\tif (!$format_number) {\n\t\t\t$call_name = 'System';\n\t\t\t$call_number = $ext['dest'];\n\t\t}\n\t\telse {\n\t\t\t$call_name = $activity[$ext['dest']]['effective_caller_id_name'];\n\t\t\t$call_number = format_phone($ext['dest']);\n\t\t}\n\t\t$dir_icon = 'outbound';\n\t}\n\telse if ($ext['state'] == 'CS_HIBERNATE') {\n\t\tif ($ext['callstate'] == 'ACTIVE') {\n\t\t\t$ext_state = 'active';\n\t\t\tif ($ext['direction'] == 'inbound') {\n\t\t\t\t$call_name = $activity[$ext['dest']]['effective_caller_id_name'];\n\t\t\t\t$call_number = format_phone($ext['dest']);\n\t\t\t\t$dir_icon = 'outbound';\n\t\t\t}\n\t\t\telse if ($ext['direction'] == 'outbound') {\n\t\t\t\t$call_name = $activity[$ext['cid_num']]['effective_caller_id_name'];\n\t\t\t\t$call_number = format_phone($ext['cid_num']);\n\t\t\t\t$dir_icon = 'inbound';\n\t\t\t}\n\t\t}\n\t}\n\telse if ($ext['state'] == 'CS_CONSUME_MEDIA' || $ext['state'] == 'CS_EXCHANGE_MEDIA') {\n\t\tif ($ext['state'] == 'CS_CONSUME_MEDIA' && $ext['callstate'] == 'RINGING' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'ringing';\n\t\t}\n\t\telse if ($ext['state'] == 'CS_EXCHANGE_MEDIA' && $ext['callstate'] == 'ACTIVE' && $ext['direction'] == 'outbound') {\n\t\t\t$ext_state = 'active';\n\t\t}\n\t\t$dir_icon = 'inbound';\n\t\t$call_name = $activity[$ext['cid_num']]['effective_caller_id_name'];\n\t\t$call_number = format_phone($ext['cid_num']);\n\t}\n\telse {\n\t\tunset($ext_state, $dir_icon, $call_name, $call_number);\n\t}\n\n\t//determine block style by state (if any)\n\t$style = ($ext_state != '') ? \"op_state_\".$ext_state : null;\n\n\t//determine the call identifier passed on drop\n\tif ($ext['uuid'] == $ext['call_uuid'] && $ext['variable_bridge_uuid'] == '') { // transfer an outbound internal call\n\t\t$call_identifier = $activity[$call_number]['uuid'];\n\t}\n\telse if (($ext['variable_call_direction'] == 'outbound' || $ext['variable_call_direction'] == 'local') && $ext['variable_bridge_uuid'] != '') { // transfer an outbound external call\n\t\t$call_identifier = $ext['variable_bridge_uuid'];\n\t}\n\telse {\n\t\tif( $ext['call_uuid'] ) {\n\t\t\t$call_identifier = $ext['call_uuid']; // transfer all other call types\n\t\t}\n\t\telse {\n\t\t\t$call_identifier = $ext['uuid']; // e.g. voice menus\n\t\t}\n\t}\n\n\t//determine extension draggable state\n\tif (permission_exists('operator_panel_manage')) {\n\t\tif (!in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\t//other extension\n\t\t\tif ($ext_state == \"ringing\") {\n\t\t\t\tif ($_GET['vd_ext_from'] == '' && $dir_icon == 'inbound') {\n\t\t\t\t\t$draggable = true; // selectable - is ringing and not outbound so can transfer away the call (can set as vd_ext_from)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$draggable = false; // unselectable - is ringing so can't send a call to the ext (can't set as vd_ext_to)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ($ext_state == 'active') {\n\t\t\t\t$draggable = false; // unselectable - on a call already so can't transfer or send a call to the ext (can't set as vd_ext_from or vd_ext_to)\n\t\t\t}\n\t\t\telse { // idle\n\t\t\t\tif ($_GET['vd_ext_from'] == '') {\n\t\t\t\t\t$draggable = false; // unselectable - is idle, but can't initiate a call from the ext as is not assigned to user (can't set as vd_ext_from)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$draggable = true; // selectable - is idle, so can transfer a call in to ext (can set as vd_ext_to).\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//user extension\n\t\t\tif ($ext['uuid'] != '' && $ext['uuid'] == $ext['call_uuid'] && $ext['variable_bridge_uuid'] == '') {\n\t\t\t\t$draggable = false;\n\t\t\t}\n\t\t\telse if ($ext_state == 'ringing' && $ext['variable_call_direction'] == 'local') {\n\t\t\t\t$draggable = false;\n\t\t\t}\n\t\t\telse if ($ext_state != '' && !$format_number) {\n\t\t\t\t$draggable = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$draggable = true;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t$draggable = false;\n\t}\n\n\t//determine extension (user) status\n\t$ext_status = (in_array($extension, $_SESSION['user']['extensions'])) ? $ext_user_status[$_SESSION['user_uuid']] : $ext_user_status[$ext['user_uuid']];\n\tswitch ($ext_status) {\n\t\tcase \"Available\" :\n\t\t\t$status_icon = \"available\";\n\t\t\t$status_hover = $text['label-status_available'];\n\t\t\tbreak;\n\t\tcase \"Available (On Demand)\" :\n\t\t\t$status_icon = \"available_on_demand\";\n\t\t\t$status_hover = $text['label-status_available_on_demand'];\n\t\t\tbreak;\n\t\tcase \"On Break\" :\n\t\t\t$status_icon = \"on_break\";\n\t\t\t$status_hover = $text['label-status_on_break'];\n\t\t\tbreak;\n\t\tcase \"Do Not Disturb\" :\n\t\t\t$status_icon = \"do_not_disturb\";\n\t\t\t$status_hover = $text['label-status_do_not_disturb'];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\t$status_icon = \"logged_out\";\n\t\t\t$status_hover = $text['label-status_logged_out_or_unknown'];\n\t}\n\n\t$block .= \"<div id='\".escape($extension).\"' class='op_ext \".$style.\"' \".(($_GET['vd_ext_from'] == $extension || $_GET['vd_ext_to'] == $extension) ? \"style='border-style: dotted;'\" : null).\" \".(($ext_state != 'active' && $ext_state != 'ringing') ? \"ondrop='drop(event, this.id);' ondragover='allowDrop(event, this.id);' ondragleave='discardDrop(event, this.id);'\" : null).\">\"; // DRAG TO\n\t$block .= \"<table class='op_ext \".$style.\"'>\";\n\t$block .= \"\t<tr>\";\n\t$block .= \"\t\t<td class='op_ext_icon'>\";\n\t$block .= \"\t\t\t<span name='\".escape($extension).\"'>\"; // DRAG FROM\n\t$block .= \t\t\t\t\"<img id='\".escape($call_identifier).\"' class='op_ext_icon' src='resources/images/status_\".$status_icon.\".png' title='\".$status_hover.\"' \".(($draggable) ? \"draggable='true' ondragstart=\\\"drag(event, this.parentNode.getAttribute('name'));\\\" onclick=\\\"virtual_drag('\".escape($call_identifier).\"', '\".escape($extension).\"');\\\"\" : \"onfocus='this.blur();' draggable='false' style='cursor: not-allowed;'\").\">\";\n\t$block .= \t\t\t\"</span>\";\n\t$block .= \"\t\t</td>\";\n\t$block .= \"\t\t<td class='op_ext_info \".$style.\"'>\";\n\tif ($dir_icon != '') {\n\t\t$block .= \"\t\t\t<img src='resources/images/\".$dir_icon.\".png' align='right' style='margin-top: 3px; margin-right: 1px; width: 12px; height: 12px; cursor: help;' draggable='false' alt=\\\"\".$text['label-call_direction'].\"\\\" title=\\\"\".$text['label-call_direction'].\"\\\">\";\n\t}\n\t$block .= \"\t\t\t<span class='op_user_info'>\";\n\tif ($ext['effective_caller_id_name'] != '' && escape($ext['effective_caller_id_name']) != $extension) {\n\t\t$block .= \"\t\t\t<strong class='strong'>\".escape($ext['effective_caller_id_name']).\"</strong> (\".escape($extension).\")\";\n\t}\n\telse {\n\t\t$block .= \"\t\t\t<strong class='strong'>\".escape($extension).\"</strong>\";\n\t}\n\t$block .= \"\t\t\t</span><br>\";\n\tif ($ext_state != '') {\n\t\t$block .= \"\t\t<span class='op_caller_info'>\";\n\t\t$block .= \"\t\t\t<table align='right'><tr><td style='text-align: right;'>\";\n\t\t$block .= \"\t\t\t\t<span class='op_call_info'>\".escape($ext['call_length']).\"</span><br>\";\n\t\t$block .= \"\t\t\t\t<span class='call_control'>\";\n\t\t//record\n\t\tif (permission_exists('operator_panel_record') && $ext_state == 'active') {\n\t\t\t$call_identifier_record = $ext['call_uuid'];\n\t\t\t$rec_file = $_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".escape($call_identifier_record).\".wav\";\n\t\t\tif (file_exists($rec_file)) {\n\t\t\t\t$block .= \t\t\"<img src='resources/images/recording.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: help;' title=\\\"\".$text['label-recording'].\"\\\" \".$onhover_pause_refresh.\">\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$block .= \t\t\"<img src='resources/images/record.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' title=\\\"\".$text['label-record'].\"\\\" onclick=\\\"record_call('\".$call_identifier_record.\"');\\\" \".$onhover_pause_refresh.\">\";\n\t\t\t}\n\t\t}\n\t\t//eavesdrop\n\t\tif (permission_exists('operator_panel_eavesdrop') && $ext_state == 'active' && sizeof($_SESSION['user']['extensions']) > 0 && !in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\t$block .= \t\t\t\"<img src='resources/images/eavesdrop.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' title='\".$text['label-eavesdrop'].\"' onclick=\\\"eavesdrop_call('\".escape($ext['destination']).\"','\".escape($call_identifier).\"');\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t\t//hangup\n\t\tif (permission_exists('operator_panel_hangup') || in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\tif ($ext['variable_bridge_uuid'] == '' && $ext_state == 'ringing') {\n\t\t\t\t$call_identifier_hangup_uuid = $ext['uuid'];\n\t\t\t}\n\t\t\telse if ($dir_icon == 'outbound') {\n\t\t\t\t$call_identifier_hangup_uuid = $ext['uuid'];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$call_identifier_hangup_uuid = $call_identifier;\n\t\t\t}\n\t\t\t$block .= \t\t\t\"<img src='resources/images/kill.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' title='\".$text['label-hangup'].\"' onclick=\\\"hangup_call('\".escape($call_identifier_hangup_uuid).\"');\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t\t$block .=\t\t\t\t\"</span>\";\n\t\t//transfer\n\t\tif (in_array($extension, $_SESSION['user']['extensions']) && $ext_state == 'active') {\n\t\t\t$block .= \t\t\t\"<img id='destination_control_\".escape($extension).\"_transfer' class='destination_control' src='resources/images/keypad_transfer.png' style='width: 12px; height: 12px; border: none; margin: 4px 0px 0px 5px; cursor: pointer;' onclick=\\\"toggle_destination('\".escape($extension).\"', 'transfer');\\\" \".$onhover_pause_refresh.\">\";\n\t\t}\n\t\t$block .= \"\t\t\t</td></tr></table>\";\n\t\tif (permission_exists('operator_panel_call_details')) {\n\t\t\t$block .= \"\t\t\t<span id='op_caller_details_\".escape($extension).\"'><strong>\".escape($call_name).\"</strong><br>\".escape($call_number).\"</span>\";\n\t\t}\n\t\t$block .= \"\t\t</span>\";\n\t\t//transfer\n\t\tif (in_array($extension, $_SESSION['user']['extensions']) && $ext_state == 'active') {\n\t\t\t$call_identifier_transfer = $ext['variable_bridge_uuid'];\n\t\t\t$block .= \"\t\t<form id='frm_destination_\".escape($extension).\"_transfer' onsubmit=\\\"go_destination('\".escape($extension).\"', document.getElementById('destination_\".escape($extension).\"_transfer').value, 'transfer', '\".escape($call_identifier_transfer).\"'); return false;\\\">\";\n\t\t\t$block .= \"\t\t\t<input type='text' class='formfld' id='destination_\".escape($extension).\"_transfer' style='width: 100px; min-width: 100px; max-width: 100px; margin-top: 3px; text-align: center; display: none;' onblur=\\\"toggle_destination('\".escape($extension).\"', 'transfer');\\\">\";\n\t\t\t$block .= \"\t\t</form>\\n\";\n\t\t}\n\t}\n\telse {\n\t\t//call\n\t\tif (in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t\t$block .= \"\t\t<img id='destination_control_\".escape($extension).\"_call' class='destination_control' src='resources/images/keypad_call.png' style='width: 12px; height: 12px; border: none; margin-top: 26px; margin-right: 1px; cursor: pointer;' align='right' onclick=\\\"toggle_destination('\".escape($extension).\"', 'call');\\\" \".$onhover_pause_refresh.\">\";\n\t\t\t$block .= \"\t\t<form id='frm_destination_\".escape($extension).\"_call' onsubmit=\\\"go_destination('\".escape($extension).\"', document.getElementById('destination_\".escape($extension).\"_call').value, 'call'); return false;\\\">\";\n\t\t\t$block .= \"\t\t\t<input type='text' class='formfld' id='destination_\".escape($extension).\"_call' style='width: 100px; min-width: 100px; max-width: 100px; margin-top: 10px; text-align: center; display: none;' onblur=\\\"toggle_destination('\".escape($extension).\"', 'call');\\\">\";\n\t\t\t$block .= \"\t\t</form>\\n\";\n\t\t}\n\t}\n\t$block .= \"\t\t</td>\";\n\t$block .= \"\t</tr>\";\n\t$block .= \"</table>\";\n\n\tif (if_group(\"superadmin\") && isset($_GET['debug'])) {\n\t\t$block .= \"<span style='font-size: 10px;'>\";\n\t\t$block .= \"From ID<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: maroon'>\".escape($extension).\"</strong><br>\";\n\t\t$block .= \"uuid<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: \".($call_identifier == $ext['uuid'] ? 'blue' : 'black').\";'>\".escape($ext['uuid']).\"</strong><br>\";\n\t\t$block .= \"call_uuid<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: \".($call_identifier == $ext['call_uuid'] ? 'blue' : 'black').\";'>\".escape($ext['call_uuid']).\"</strong><br>\";\n\t\t$block .= \"variable_bridge_uuid<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: \".($call_identifier == $ext['variable_bridge_uuid'] ? 'blue' : 'black').\";'>\".escape($ext['variable_bridge_uuid']).\"</strong><br>\";\n\t\t$block .= \"direction<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['direction']).\"</strong><br>\";\n\t\t$block .= \"variable_call_direction<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['variable_call_direction']).\"</strong><br>\";\n\t\t$block .= \"state<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['state']).\"</strong><br>\";\n\t\t$block .= \"cid_num<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['cid_num']).\"</strong><br>\";\n\t\t$block .= \"dest<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['dest']).\"</strong><br>\";\n\t\t$block .= \"context<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['context']).\"</strong><br>\";\n\t\t$block .= \"presence_id<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['presence_id']).\"</strong><br>\";\n\t\t$block .= \"callstate<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong style='color: black;'>\".escape($ext['callstate']).\"</strong><br>\";\n\t\t$block .= \"</span>\";\n\t}\n\t$block .= \"</div>\";\n\n\tif (in_array($extension, $_SESSION['user']['extensions'])) {\n\t\t$user_extensions[] = $block;\n\t}\n\telse {\n\t\t$other_extensions[] = $block;\n\t}\n}\n\n\nif (sizeof($user_extensions) > 0) {\n\techo \"<table width='100%'><tr><td>\";\n\tif (is_array($user_extensions)) foreach ($user_extensions as $ext_block) {\n\t\techo $ext_block;\n\t}\n\techo \"</td></tr></table>\";\n}\n\nif ($_REQUEST['group'] != '') {\n\tif (sizeof($user_extensions) > 0) { echo \"<br>\"; }\n\techo \"<strong style='color: black;'>\".ucwords(escape($_REQUEST['group'])).\"</strong>\";\n\techo \"<br><br>\";\n}\nelse if (sizeof($user_extensions) > 0) {\n\techo \"<br>\";\n\techo \"<strong style='color: black;'>\".$text['label-other_extensions'].\"</strong>\";\n\techo \"<br><br>\";\n}\n\nif (sizeof($other_extensions) > 0) {\n\techo \"<table width='100%'><tr><td>\";\n\tif (is_array($other_extensions)) foreach ($other_extensions as $ext_block) {\n\t\techo $ext_block;\n\t}\n\techo \"</td></tr></table>\";\n}\nelse {\n\techo $text['label-no_extensions_found'];\n}\necho \"<br><br>\";\n\n/*\nif (if_group(\"superadmin\") && isset($_GET['debug'])) {\n\techo '$activity<br>';\n\techo \"<textarea style='width: 100%; height: 600px; overflow: scroll;' onfocus='refresh_stop();' onblur='refresh_start();'>\";\n\tprint_r($activity);\n\techo \"</textarea>\";\n\techo \"<br><br>\";\n\n\techo '$_SESSION<br>';\n\techo \"<textarea style='width: 100%; height: 600px; overflow: scroll;' onfocus='refresh_stop();' onblur='refresh_start();'>\";\n\tprint_r($_SESSION);\n\techo \"</textarea>\";\n}\n*/\n\n?>\n"], "filenames": ["app/basic_operator_panel/resources/content.php"], "buggy_code_start_loc": [117], "buggy_code_end_loc": [434], "fixing_code_start_loc": [117], "fixing_code_end_loc": [434], "type": "CWE-79", "message": "In FusionPBX up to v4.5.7, the file app\\basic_operator_panel\\resources\\content.php uses an unsanitized \"eavesdrop_dest\" variable coming from the URL, which is reflected on 3 occasions in HTML, leading to XSS.", "other": {"cve": {"id": "CVE-2019-16988", "sourceIdentifier": "cve@mitre.org", "published": "2019-10-21T16:15:18.273", "lastModified": "2023-02-03T21:34:31.880", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In FusionPBX up to v4.5.7, the file app\\basic_operator_panel\\resources\\content.php uses an unsanitized \"eavesdrop_dest\" variable coming from the URL, which is reflected on 3 occasions in HTML, leading to XSS."}, {"lang": "es", "value": "En FusionPBX versiones hasta v4.5.7, el archivo app\\basic_operator_panel\\resources\\content.php utiliza una variable \"eavesdrop_dest\" no saneada que proviene de la URL, que es reflejada en 3 ocasiones en HTML, conllevando a una vulnerabilidad de tipo XSS."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fusionpbx:fusionpbx:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.5.7", "matchCriteriaId": "A5A0C1F9-8032-46C6-8DD4-DB91FACF7330"}]}]}], "references": [{"url": "https://github.com/fusionpbx/fusionpbx/commit/7fec1014ff0d08e36be6a3f7664edb3a9df7b4ac", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://resp3ctblog.wordpress.com/2019/10/19/fusionpbx-xss-18/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fusionpbx/fusionpbx/commit/7fec1014ff0d08e36be6a3f7664edb3a9df7b4ac"}}