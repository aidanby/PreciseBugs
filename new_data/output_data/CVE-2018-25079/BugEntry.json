{"buggy_code": ["\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * Matcher.\n */\n\nvar matcher = /^(?:\\w+:)?\\/\\/([^\\s\\.]+\\.\\S{2}|localhost[\\:?\\d]*)\\S*$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  return matcher.test(string);\n}\n", "\ntry {\n  var url = require('is-url');\n} catch (e) {\n  var url = require('..');\n}\n\nvar assert = require('assert');\n\ndescribe('is-url', function () {\n  describe('valid', function () {\n    it('http://google.com', function () {\n      assert(url('http://google.com'));\n    });\n\n    it('https://google.com', function () {\n      assert(url('https://google.com'));\n    });\n\n    it('ftp://google.com', function () {\n      assert(url('ftp://google.com'));\n    });\n\n    it('http://www.google.com', function () {\n      assert(url('http://www.google.com'));\n    });\n\n    it('http://google.com/something', function () {\n      assert(url('http://google.com/something'));\n    });\n\n    it('http://google.com?q=query', function () {\n      assert(url('http://google.com?q=query'));\n    });\n\n    it('http://google.com#hash', function () {\n      assert(url('http://google.com#hash'));\n    });\n\n    it('http://google.com/something?q=query#hash', function () {\n      assert(url('http://google.com/something?q=query#hash'));\n    });\n\n    it('http://google.co.uk', function () {\n      assert(url('http://google.co.uk'));\n    });\n\n    it('http://www.google.co.uk', function () {\n      assert(url('http://www.google.co.uk'));\n    });\n\n    it('http://google.cat', function () {\n      assert(url('http://google.cat'));\n    });\n\n    it('https://d1f4470da51b49289906b3d6cbd65074@app.getsentry.com/13176', function () {\n      assert(url('https://d1f4470da51b49289906b3d6cbd65074@app.getsentry.com/13176'));\n    });\n\n    it('http://0.0.0.0', function () {\n      assert(url('http://0.0.0.0'));\n    });\n\n    it('http://localhost', function () {\n      assert(url('http://localhost'));\n    });\n\n    it('postgres://u:p@example.com:5702/db', function () {\n      assert(url('postgres://u:p@example.com:5702/db'));\n    });\n\n    it('redis://:123@174.129.42.52:13271', function () {\n      assert(url('redis://:123@174.129.42.52:13271'));\n    });\n\n    it('mongodb://u:p@example.com:10064/db', function () {\n      assert(url('mongodb://u:p@example.com:10064/db'));\n    });\n\n    it('ws://chat.example.com/games', function () {\n      assert(url('ws://chat.example.com/games'));\n    });\n\n    it('wss://secure.example.com/biz', function () {\n      assert(url('wss://secure.example.com/biz'));\n    });\n\n    it('http://localhost:4000', function () {\n      assert(url('http://localhost:4000'));\n    });\n\n    it('http://localhost:342/a/path', function () {\n      assert(url('http://localhost:342/a/path'));\n    });\n\n    it('//google.com', function () {\n      assert(url('//google.com'));\n    });\n  });\n\n  describe('invalid', function () {\n    it('http://', function () {\n      assert(!url('http://'));\n    });\n\n    it('http://google', function () {\n      assert(!url('http://google'));\n    });\n\n    it('http://google.', function () {\n      assert(!url('http://google.'));\n    });\n\n    it('google', function () {\n      assert(!url('google'));\n    });\n\n    it('google.com', function () {\n      assert(!url('google.com'));\n    });\n  });\n});\n"], "fixing_code": ["\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  var match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n", "\ntry {\n  var url = require('is-url');\n} catch (e) {\n  var url = require('..');\n}\n\nvar assert = require('assert');\n\ndescribe('is-url', function () {\n  describe('valid', function () {\n    it('http://google.com', function () {\n      assert(url('http://google.com'));\n    });\n\n    it('https://google.com', function () {\n      assert(url('https://google.com'));\n    });\n\n    it('ftp://google.com', function () {\n      assert(url('ftp://google.com'));\n    });\n\n    it('http://www.google.com', function () {\n      assert(url('http://www.google.com'));\n    });\n\n    it('http://google.com/something', function () {\n      assert(url('http://google.com/something'));\n    });\n\n    it('http://google.com?q=query', function () {\n      assert(url('http://google.com?q=query'));\n    });\n\n    it('http://google.com#hash', function () {\n      assert(url('http://google.com#hash'));\n    });\n\n    it('http://google.com/something?q=query#hash', function () {\n      assert(url('http://google.com/something?q=query#hash'));\n    });\n\n    it('http://google.co.uk', function () {\n      assert(url('http://google.co.uk'));\n    });\n\n    it('http://www.google.co.uk', function () {\n      assert(url('http://www.google.co.uk'));\n    });\n\n    it('http://google.cat', function () {\n      assert(url('http://google.cat'));\n    });\n\n    it('https://d1f4470da51b49289906b3d6cbd65074@app.getsentry.com/13176', function () {\n      assert(url('https://d1f4470da51b49289906b3d6cbd65074@app.getsentry.com/13176'));\n    });\n\n    it('http://0.0.0.0', function () {\n      assert(url('http://0.0.0.0'));\n    });\n\n    it('http://localhost', function () {\n      assert(url('http://localhost'));\n    });\n\n    it('postgres://u:p@example.com:5702/db', function () {\n      assert(url('postgres://u:p@example.com:5702/db'));\n    });\n\n    it('redis://:123@174.129.42.52:13271', function () {\n      assert(url('redis://:123@174.129.42.52:13271'));\n    });\n\n    it('mongodb://u:p@example.com:10064/db', function () {\n      assert(url('mongodb://u:p@example.com:10064/db'));\n    });\n\n    it('ws://chat.example.com/games', function () {\n      assert(url('ws://chat.example.com/games'));\n    });\n\n    it('wss://secure.example.com/biz', function () {\n      assert(url('wss://secure.example.com/biz'));\n    });\n\n    it('http://localhost:4000', function () {\n      assert(url('http://localhost:4000'));\n    });\n\n    it('http://localhost:342/a/path', function () {\n      assert(url('http://localhost:342/a/path'));\n    });\n\n    it('//google.com', function () {\n      assert(url('//google.com'));\n    });\n  });\n\n  describe('invalid', function () {\n    it('http://', function () {\n      assert(!url('http://'));\n    });\n\n    it('http://google', function () {\n      assert(!url('http://google'));\n    });\n\n    it('http://google.', function () {\n      assert(!url('http://google.'));\n    });\n\n    it('google', function () {\n      assert(!url('google'));\n    });\n\n    it('google.com', function () {\n      assert(!url('google.com'));\n    });\n  });\n\n  describe('redos', function () {\n    it('redos exploit', function () {\n      // Invalid. This should be discovered in under 1 second.\n      var attackString = 'a://localhost' + '9'.repeat(100000) + '\\t';\n      var before = process.hrtime();\n      assert(!url(attackString), 'attackString was valid');\n      var elapsed = process.hrtime(before);\n      assert(elapsed[0] < 1, 'attackString took ' + elapsed[0] + ' > 1 seconds');\n    });\n  });\n});\n"], "filenames": ["index.js", "test/index.js"], "buggy_code_start_loc": [9, 121], "buggy_code_end_loc": [23, 121], "fixing_code_start_loc": [9, 122], "fixing_code_end_loc": [43, 133], "type": "CWE-1333", "message": "A vulnerability was found in Segmentio is-url up to 1.2.2. It has been rated as problematic. Affected by this issue is some unknown functionality of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. Upgrading to version 1.2.3 is able to address this issue. The name of the patch is 149550935c63a98c11f27f694a7c4a9479e53794. It is recommended to upgrade the affected component. VDB-220058 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2018-25079", "sourceIdentifier": "cna@vuldb.com", "published": "2023-02-04T04:15:08.867", "lastModified": "2023-02-14T01:47:21.173", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in Segmentio is-url up to 1.2.2. It has been rated as problematic. Affected by this issue is some unknown functionality of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. Upgrading to version 1.2.3 is able to address this issue. The name of the patch is 149550935c63a98c11f27f694a7c4a9479e53794. It is recommended to upgrade the affected component. VDB-220058 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1333"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:segment:is-url:*:*:*:*:*:node.js:*:*", "versionEndIncluding": "1.2.2", "matchCriteriaId": "1CD34CB3-052B-4C71-A54C-6E5F3B111066"}]}]}], "references": [{"url": "https://github.com/segmentio/is-url/commit/149550935c63a98c11f27f694a7c4a9479e53794", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/segmentio/is-url/pull/18", "source": "cna@vuldb.com", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://github.com/segmentio/is-url/releases/tag/v1.2.3", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.220058", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.220058", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/segmentio/is-url/commit/149550935c63a98c11f27f694a7c4a9479e53794"}}