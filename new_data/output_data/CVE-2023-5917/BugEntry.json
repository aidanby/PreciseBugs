{"buggy_code": ["<?php\n/**\n*\n* This file is part of the phpBB Forum Software package.\n*\n* @copyright (c) phpBB Limited <https://www.phpbb.com>\n* @license GNU General Public License, version 2 (GPL-2.0)\n*\n* For full copyright and license information, please see\n* the docs/CREDITS.txt file.\n*\n*/\n\n/**\n* @ignore\n*/\nif (!defined('IN_PHPBB'))\n{\n\texit;\n}\n\n/**\n  * @todo {smilies} check regular expressions for special char replacements (stored specialchared in db)\n  */\nclass acp_icons\n{\n\tvar $u_action;\n\n\tfunction main($id, $mode)\n\t{\n\t\tglobal $db, $user, $template, $cache;\n\t\tglobal $config, $phpbb_root_path;\n\t\tglobal $request, $phpbb_container;\n\n\t\t$user->add_lang('acp/posting');\n\n\t\t// Set up general vars\n\t\t$action = $request->variable('action', '');\n\t\t$action = (isset($_POST['add'])) ? 'add' : $action;\n\t\t$action = (isset($_POST['edit'])) ? 'edit' : $action;\n\t\t$action = (isset($_POST['import'])) ? 'import' : $action;\n\t\t$icon_id = $request->variable('id', 0);\n\t\t$submit = $request->is_set_post('submit', false);\n\n\t\t$form_key = 'acp_icons';\n\t\tadd_form_key($form_key);\n\n\t\t$mode = ($mode == 'smilies') ? 'smilies' : 'icons';\n\n\t\t$this->tpl_name = 'acp_icons';\n\n\t\t// What are we working on?\n\t\tswitch ($mode)\n\t\t{\n\t\t\tcase 'smilies':\n\t\t\t\t$table = SMILIES_TABLE;\n\t\t\t\t$lang = 'SMILIES';\n\t\t\t\t$fields = 'smiley';\n\t\t\t\t$img_path = $config['smilies_path'];\n\t\t\tbreak;\n\n\t\t\tcase 'icons':\n\t\t\t\t$table = ICONS_TABLE;\n\t\t\t\t$lang = 'ICONS';\n\t\t\t\t$fields = 'icons';\n\t\t\t\t$img_path = $config['icons_path'];\n\t\t\tbreak;\n\t\t}\n\n\t\t$this->page_title = 'ACP_' . $lang;\n\n\t\t// Clear some arrays\n\t\t$_images = $_paks = array();\n\t\t$notice = '';\n\n\t\t// Grab file list of paks and images\n\t\tif ($action == 'edit' || $action == 'add' || $action == 'import')\n\t\t{\n\t\t\t$imglist = filelist($phpbb_root_path . $img_path, '');\n\n\t\t\tforeach ($imglist as $path => $img_ary)\n\t\t\t{\n\t\t\t\tif (empty($img_ary))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tasort($img_ary, SORT_STRING);\n\n\t\t\t\tforeach ($img_ary as $img)\n\t\t\t\t{\n\t\t\t\t\t$img_size = getimagesize($phpbb_root_path . $img_path . '/' . $path . $img);\n\n\t\t\t\t\tif ($img_size)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!$img_size[0] || !$img_size[1] || strlen($img) > 255)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust the width and height to be lower than 128px while perserving the aspect ratio (for icons)\n\t\t\t\t\t\tif ($mode == 'icons')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($img_size[0] > 127 && $img_size[0] > $img_size[1])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$img_size[1] = (int) ($img_size[1] * (127 / $img_size[0]));\n\t\t\t\t\t\t\t\t$img_size[0] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($img_size[1] > 127)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$img_size[0] = (int) ($img_size[0] * (127 / $img_size[1]));\n\t\t\t\t\t\t\t\t$img_size[1] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// getimagesize can't read the dimensions of the SVG files\n\t\t\t\t\t\t// https://bugs.php.net/bug.php?id=71517\n\t\t\t\t\t\t$xml_get = simplexml_load_file($phpbb_root_path . $img_path . '/' . $path . $img);\n\n\t\t\t\t\t\t$svg_width = intval($xml_get['width']);\n\t\t\t\t\t\t$svg_height = intval($xml_get['height']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$_images[$path . $img]['file'] = $path . $img;\n\n\t\t\t\t\t// Give SVG a fallback on failure\n\t\t\t\t\t$_images[$path . $img]['width'] = $img_size ? $img_size[0] : ($svg_width ?: 32);\n\t\t\t\t\t$_images[$path . $img]['height'] = $img_size ? $img_size[1] : ($svg_height ?: 32);\n\t\t\t\t}\n\t\t\t}\n\t\t\tunset($imglist);\n\n\t\t\tif ($dir = @opendir($phpbb_root_path . $img_path))\n\t\t\t{\n\t\t\t\twhile (($file = readdir($dir)) !== false)\n\t\t\t\t{\n\t\t\t\t\tif (is_file($phpbb_root_path . $img_path . '/' . $file) && preg_match('#\\.pak$#i', $file))\n\t\t\t\t\t{\n\t\t\t\t\t\t$_paks[] = $file;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclosedir($dir);\n\n\t\t\t\tif (!empty($_paks))\n\t\t\t\t{\n\t\t\t\t\tasort($_paks, SORT_STRING);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// What shall we do today? Oops, I believe that's trademarked ...\n\t\tswitch ($action)\n\t\t{\n\t\t\tcase 'edit':\n\t\t\t\tunset($_images);\n\t\t\t\t$_images = array();\n\n\t\t\t// no break;\n\n\t\t\tcase 'add':\n\n\t\t\t\t$smilies = $default_row = array();\n\t\t\t\t$smiley_options = $order_list = $add_order_list = '';\n\n\t\t\t\tif ($action == 'add' && $mode == 'smilies')\n\t\t\t\t{\n\t\t\t\t\t$sql = 'SELECT *\n\t\t\t\t\t\tFROM ' . SMILIES_TABLE . '\n\t\t\t\t\t\tORDER BY smiley_order';\n\t\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (empty($smilies[$row['smiley_url']]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$smilies[$row['smiley_url']] = $row;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t\tif (count($smilies))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach ($smilies as $row)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$selected = false;\n\n\t\t\t\t\t\t\tif (!$smiley_options)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$selected = true;\n\t\t\t\t\t\t\t\t$default_row = $row;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$smiley_options .= '<option value=\"' . $row['smiley_url'] . '\"' . (($selected) ? ' selected=\"selected\"' : '') . '>' . $row['smiley_url'] . '</option>';\n\n\t\t\t\t\t\t\t$template->assign_block_vars('smile', array(\n\t\t\t\t\t\t\t\t'SMILEY_URL'\t=> addslashes($row['smiley_url']),\n\t\t\t\t\t\t\t\t'CODE'\t\t\t=> addslashes($row['code']),\n\t\t\t\t\t\t\t\t'EMOTION'\t\t=> addslashes($row['emotion']),\n\t\t\t\t\t\t\t\t'WIDTH'\t\t\t=> $row['smiley_width'],\n\t\t\t\t\t\t\t\t'HEIGHT'\t\t=> $row['smiley_height'],\n\t\t\t\t\t\t\t\t'ORDER'\t\t\t=> $row['smiley_order'] + 1,\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$sql = \"SELECT *\n\t\t\t\t\tFROM $table\n\t\t\t\t\tORDER BY {$fields}_order \" . (($icon_id || $action == 'add') ? 'DESC' : 'ASC');\n\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t$data = array();\n\t\t\t\t$after = false;\n\t\t\t\t$order_lists = array('', '');\n\t\t\t\t$add_order_lists = array('', '');\n\t\t\t\t$display_count = 0;\n\n\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t{\n\t\t\t\t\tif ($action == 'add')\n\t\t\t\t\t{\n\t\t\t\t\t\tunset($_images[$row[$fields . '_url']]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($row[$fields . '_id'] == $icon_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$after = true;\n\t\t\t\t\t\t$data[$row[$fields . '_url']] = $row;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($action == 'edit' && !$icon_id)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$data[$row[$fields . '_url']] = $row;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$selected = '';\n\t\t\t\t\t\tif (!empty($after))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$selected = ' selected=\"selected\"';\n\t\t\t\t\t\t\t$after = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($row['display_on_posting'])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$display_count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$after_txt = ($mode == 'smilies') ? $row['code'] : $row['icons_url'];\n\t\t\t\t\t\t$order_lists[$row['display_on_posting']] = '<option value=\"' . ($row[$fields . '_order'] + 1) . '\"' . $selected . '>' . sprintf($user->lang['AFTER_' . $lang], ' -&gt; ' . $after_txt) . '</option>' . $order_lists[$row['display_on_posting']];\n\n\t\t\t\t\t\tif (!empty($default_row))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$add_order_lists[$row['display_on_posting']] = '<option value=\"' . ($row[$fields . '_order'] + 1) . '\"' . (($row[$fields . '_id'] == $default_row['smiley_id']) ? ' selected=\"selected\"' : '') . '>' . sprintf($user->lang['AFTER_' . $lang], ' -&gt; ' . $after_txt) . '</option>' . $add_order_lists[$row['display_on_posting']];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t$order_list = '<option value=\"1\"' . ((!isset($after)) ? ' selected=\"selected\"' : '') . '>' . $user->lang['FIRST'] . '</option>';\n\t\t\t\t$add_order_list = '<option value=\"1\">' . $user->lang['FIRST'] . '</option>';\n\n\t\t\t\tif ($action == 'add')\n\t\t\t\t{\n\t\t\t\t\t$data = $_images;\n\t\t\t\t}\n\n\t\t\t\t$colspan = (($mode == 'smilies') ? 7 : 6);\n\t\t\t\t$colspan += ($icon_id) ? 1 : 0;\n\t\t\t\t$colspan += ($action == 'add') ? 2 : 0;\n\n\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t'S_EDIT'\t\t=> true,\n\t\t\t\t\t'S_SMILIES'\t\t=> ($mode == 'smilies') ? true : false,\n\t\t\t\t\t'S_ADD'\t\t\t=> ($action == 'add') ? true : false,\n\n\t\t\t\t\t'S_ORDER_LIST_DISPLAY'\t\t=> $order_list . $order_lists[1],\n\t\t\t\t\t'S_ORDER_LIST_UNDISPLAY'\t=> $order_list . $order_lists[0],\n\t\t\t\t\t'S_ORDER_LIST_DISPLAY_COUNT'\t=> $display_count + 1,\n\n\t\t\t\t\t'L_TITLE'\t\t=> $user->lang['ACP_' . $lang],\n\t\t\t\t\t'L_EXPLAIN'\t\t=> $user->lang['ACP_' . $lang . '_EXPLAIN'],\n\t\t\t\t\t'L_CONFIG'\t\t=> $user->lang[$lang . '_CONFIG'],\n\t\t\t\t\t'L_URL'\t\t\t=> $user->lang[$lang . '_URL'],\n\t\t\t\t\t'L_LOCATION'\t=> $user->lang[$lang . '_LOCATION'],\n\t\t\t\t\t'L_WIDTH'\t\t=> $user->lang[$lang . '_WIDTH'],\n\t\t\t\t\t'L_HEIGHT'\t\t=> $user->lang[$lang . '_HEIGHT'],\n\t\t\t\t\t'L_ORDER'\t\t=> $user->lang[$lang . '_ORDER'],\n\t\t\t\t\t'L_NO_ICONS'\t=> $user->lang['NO_' . $lang . '_' . strtoupper($action)],\n\n\t\t\t\t\t'COLSPAN'\t\t=> $colspan,\n\t\t\t\t\t'ID'\t\t\t=> $icon_id,\n\n\t\t\t\t\t'U_BACK'\t\t=> $this->u_action,\n\t\t\t\t\t'U_ACTION'\t\t=> $this->u_action . '&amp;action=' . (($action == 'add') ? 'create' : 'modify'),\n\t\t\t\t));\n\n\t\t\t\tforeach ($data as $img => $img_row)\n\t\t\t\t{\n\t\t\t\t\t$template->assign_block_vars('items', array(\n\t\t\t\t\t\t'IMG'\t\t=> $img,\n\t\t\t\t\t\t'A_IMG'\t\t=> addslashes($img),\n\t\t\t\t\t\t'IMG_SRC'\t=> $phpbb_root_path . $img_path . '/' . $img,\n\n\t\t\t\t\t\t'CODE'\t\t=> ($mode == 'smilies' && isset($img_row['code'])) ? $img_row['code'] : '',\n\t\t\t\t\t\t'EMOTION'\t=> ($mode == 'smilies' && isset($img_row['emotion'])) ? $img_row['emotion'] : '',\n\n\t\t\t\t\t\t'S_ID'\t\t\t\t=> (isset($img_row[$fields . '_id'])) ? true : false,\n\t\t\t\t\t\t'ID'\t\t\t\t=> (isset($img_row[$fields . '_id'])) ? $img_row[$fields . '_id'] : 0,\n\t\t\t\t\t\t'WIDTH'\t\t\t\t=> (!empty($img_row[$fields .'_width'])) ? $img_row[$fields .'_width'] : $img_row['width'],\n\t\t\t\t\t\t'HEIGHT'\t\t\t=> (!empty($img_row[$fields .'_height'])) ? $img_row[$fields .'_height'] : $img_row['height'],\n\t\t\t\t\t\t'TEXT_ALT'\t\t    => ($mode == 'icons' && !empty($img_row['icons_alt'])) ? $img_row['icons_alt'] : $img,\n\t\t\t\t\t\t'ALT'\t\t\t    => ($mode == 'icons' && !empty($img_row['icons_alt'])) ? $img_row['icons_alt'] : '',\n\t\t\t\t\t\t'POSTING_CHECKED'\t=> (!empty($img_row['display_on_posting']) || $action == 'add') ? ' checked=\"checked\"' : '',\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\t// Ok, another row for adding an addition code for a pre-existing image...\n\t\t\t\tif ($action == 'add' && $mode == 'smilies' && count($smilies))\n\t\t\t\t{\n\t\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t\t'S_ADD_CODE'\t\t=> true,\n\n\t\t\t\t\t\t'S_IMG_OPTIONS'\t\t=> $smiley_options,\n\n\t\t\t\t\t\t'S_ADD_ORDER_LIST_DISPLAY'\t\t=> $add_order_list . $add_order_lists[1],\n\t\t\t\t\t\t'S_ADD_ORDER_LIST_UNDISPLAY'\t=> $add_order_list . $add_order_lists[0],\n\n\t\t\t\t\t\t'IMG_SRC'\t\t\t=> $phpbb_root_path . $img_path . '/' . $default_row['smiley_url'],\n\t\t\t\t\t\t'IMG_PATH'\t\t\t=> $img_path,\n\n\t\t\t\t\t\t'CODE'\t\t\t\t=> $default_row['code'],\n\t\t\t\t\t\t'EMOTION'\t\t\t=> $default_row['emotion'],\n\n\t\t\t\t\t\t'WIDTH'\t\t\t\t=> $default_row['smiley_width'],\n\t\t\t\t\t\t'HEIGHT'\t\t\t=> $default_row['smiley_height'],\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\tbreak;\n\n\t\t\tcase 'create':\n\t\t\tcase 'modify':\n\n\t\t\t\tif (!check_form_key($form_key))\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t// Get items to create/modify\n\t\t\t\t$images = (isset($_POST['image'])) ? array_keys($request->variable('image', array('' => 0))) : array();\n\n\t\t\t\t// Now really get the items\n\t\t\t\t$image_id\t\t= (isset($_POST['id'])) ? $request->variable('id', array('' => 0)) : array();\n\t\t\t\t$image_order\t= (isset($_POST['order'])) ? $request->variable('order', array('' => 0)) : array();\n\t\t\t\t$image_width\t= (isset($_POST['width'])) ? $request->variable('width', array('' => 0)) : array();\n\t\t\t\t$image_height\t= (isset($_POST['height'])) ? $request->variable('height', array('' => 0)) : array();\n\t\t\t\t$image_add\t\t= (isset($_POST['add_img'])) ? $request->variable('add_img', array('' => 0)) : array();\n\t\t\t\t$image_emotion\t= $request->variable('emotion', array('' => ''), true);\n\t\t\t\t$image_code\t\t= $request->variable('code', array('' => ''), true);\n\t\t\t\t$image_alt\t\t= ($request->is_set_post('alt')) ? $request->variable('alt', array('' => ''), true) : array();\n\t\t\t\t$image_display_on_posting = (isset($_POST['display_on_posting'])) ? $request->variable('display_on_posting', array('' => 0)) : array();\n\n\t\t\t\t// Ok, add the relevant bits if we are adding new codes to existing emoticons...\n\t\t\t\tif ($request->variable('add_additional_code', false, false, \\phpbb\\request\\request_interface::POST))\n\t\t\t\t{\n\t\t\t\t\t$add_image\t\t\t= $request->variable('add_image', '');\n\t\t\t\t\t$add_code\t\t\t= $request->variable('add_code', '', true);\n\t\t\t\t\t$add_emotion\t\t= $request->variable('add_emotion', '', true);\n\n\t\t\t\t\tif ($add_image && $add_emotion && $add_code)\n\t\t\t\t\t{\n\t\t\t\t\t\t$images[] = $add_image;\n\t\t\t\t\t\t$image_add[$add_image] = true;\n\n\t\t\t\t\t\t$image_code[$add_image] = $add_code;\n\t\t\t\t\t\t$image_emotion[$add_image] = $add_emotion;\n\t\t\t\t\t\t$image_width[$add_image] = $request->variable('add_width', 0);\n\t\t\t\t\t\t$image_height[$add_image] = $request->variable('add_height', 0);\n\n\t\t\t\t\t\tif ($request->variable('add_display_on_posting', false, false, \\phpbb\\request\\request_interface::POST))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$image_display_on_posting[$add_image] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$image_order[$add_image] = $request->variable('add_order', 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($mode == 'smilies' && $action == 'create')\n\t\t\t\t{\n\t\t\t\t\t$smiley_count = $this->item_count($table);\n\n\t\t\t\t\t$addable_smileys_count = count($images);\n\t\t\t\t\tforeach ($images as $image)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!isset($image_add[$image]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t--$addable_smileys_count;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($smiley_count + $addable_smileys_count > SMILEY_LIMIT)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang('TOO_MANY_SMILIES', SMILEY_LIMIT) . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$icons_updated = 0;\n\t\t\t\t$errors = array();\n\t\t\t\tforeach ($images as $image)\n\t\t\t\t{\n\t\t\t\t\tif ($mode == 'smilies' && ($image_emotion[$image] == '' || $image_code[$image] == ''))\n\t\t\t\t\t{\n\t\t\t\t\t\t$errors[$image] = 'SMILIE_NO_' . (($image_emotion[$image] == '') ? 'EMOTION' : 'CODE');\n\t\t\t\t\t}\n\t\t\t\t\telse if ($action == 'create' && !isset($image_add[$image]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// skip images where add wasn't checked\n\t\t\t\t\t}\n\t\t\t\t\telse if (!file_exists($phpbb_root_path . $img_path . '/' . $image))\n\t\t\t\t\t{\n\t\t\t\t\t\t$errors[$image] = 'SMILIE_NO_FILE';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($image_width[$image] == 0 || $image_height[$image] == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_size = getimagesize($phpbb_root_path . $img_path . '/' . $image);\n\t\t\t\t\t\t\t$image_width[$image] = $img_size[0];\n\t\t\t\t\t\t\t$image_height[$image] = $img_size[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Adjust image width/height for icons\n\t\t\t\t\t\tif ($mode == 'icons')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($image_width[$image] > 127 && $image_width[$image] > $image_height[$image])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$image_height[$image] = (int) ($image_height[$image] * (127 / $image_width[$image]));\n\t\t\t\t\t\t\t\t$image_width[$image] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($image_height[$image] > 127)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$image_width[$image] = (int) ($image_width[$image] * (127 / $image_height[$image]));\n\t\t\t\t\t\t\t\t$image_height[$image] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$img_sql = array(\n\t\t\t\t\t\t\t$fields . '_url'\t\t=> $image,\n\t\t\t\t\t\t\t$fields . '_width'\t\t=> $image_width[$image],\n\t\t\t\t\t\t\t$fields . '_height'\t\t=> $image_height[$image],\n\t\t\t\t\t\t\t'display_on_posting'\t=> (isset($image_display_on_posting[$image])) ? 1 : 0,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_sql = array_merge($img_sql, array(\n\t\t\t\t\t\t\t\t'emotion'\t=> $image_emotion[$image],\n\t\t\t\t\t\t\t\t'code'\t\t=> $image_code[$image])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($mode == 'icons')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_sql = array_merge($img_sql, array(\n\t\t\t\t\t\t\t\t'icons_alt'\t=> $image_alt[$image])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Image_order holds the 'new' order value\n\t\t\t\t\t\tif (!empty($image_order[$image]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_sql = array_merge($img_sql, array(\n\t\t\t\t\t\t\t\t$fields . '_order'\t=>\t$image_order[$image])\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Since we always add 'after' an item, we just need to increase all following + the current by one\n\t\t\t\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\t\t\t\tSET {$fields}_order = {$fields}_order + 1\n\t\t\t\t\t\t\t\tWHERE {$fields}_order >= {$image_order[$image]}\";\n\t\t\t\t\t\t\t$db->sql_query($sql);\n\n\t\t\t\t\t\t\t// If we adjust the order, we need to adjust all other orders too - they became inaccurate...\n\t\t\t\t\t\t\tforeach ($image_order as $_image => $_order)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ($_image == $image)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($_order >= $image_order[$image])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$image_order[$_image]++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($action == 'modify'  && !empty($image_id[$image]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\t\t\t\tSET \" . $db->sql_build_array('UPDATE', $img_sql) . \"\n\t\t\t\t\t\t\t\tWHERE {$fields}_id = \" . $image_id[$image];\n\t\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t\t$icons_updated++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($action !== 'modify')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$sql = \"INSERT INTO $table \" . $db->sql_build_array('INSERT', $img_sql);\n\t\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t\t$icons_updated++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\t$level = ($icons_updated) ? E_USER_NOTICE : E_USER_WARNING;\n\t\t\t\t$errormsgs = '';\n\t\t\t\tforeach ($errors as $img => $error)\n\t\t\t\t{\n\t\t\t\t\t$errormsgs .= '<br />' . sprintf($user->lang[$error], $img);\n\t\t\t\t}\n\t\t\t\tif ($action == 'modify')\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang($lang . '_EDITED', $icons_updated) . $errormsgs . adm_back_link($this->u_action), $level);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang($lang . '_ADDED', $icons_updated) . $errormsgs . adm_back_link($this->u_action), $level);\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'import':\n\n\t\t\t\t$pak = $request->variable('pak', '');\n\t\t\t\t$current = $request->variable('current', '');\n\n\t\t\t\tif ($pak != '')\n\t\t\t\t{\n\t\t\t\t\t$order = 0;\n\n\t\t\t\t\tif (!check_form_key($form_key))\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!($pak_ary = @file($phpbb_root_path . $img_path . '/' . $pak)))\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['PAK_FILE_NOT_READABLE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Make sure the pak_ary is valid\n\t\t\t\t\tforeach ($pak_ary as $pak_entry)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (preg_match_all(\"#'(.*?)', ?#\", $pak_entry, $data))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((count($data[1]) != 4 && $mode == 'icons') ||\n\t\t\t\t\t\t\t\t((count($data[1]) != 6 || (empty($data[1][4]) || empty($data[1][5]))) && $mode == 'smilies' ))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttrigger_error($user->lang['WRONG_PAK_TYPE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang['WRONG_PAK_TYPE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// The user has already selected a smilies_pak file\n\t\t\t\t\tif ($current == 'delete')\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch ($db->get_sql_layer())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'sqlite3':\n\t\t\t\t\t\t\t\t$db->sql_query('DELETE FROM ' . $table);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$db->sql_query('TRUNCATE TABLE ' . $table);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch ($mode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'smilies':\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'icons':\n\t\t\t\t\t\t\t\t// Reset all icon_ids\n\t\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . TOPICS_TABLE . ' SET icon_id = 0');\n\t\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . POSTS_TABLE . ' SET icon_id = 0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$cur_img = array();\n\n\t\t\t\t\t\t$field_sql = ($mode == 'smilies') ? 'code' : 'icons_url';\n\n\t\t\t\t\t\t$sql = \"SELECT $field_sql\n\t\t\t\t\t\t\tFROM $table\";\n\t\t\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t++$order;\n\t\t\t\t\t\t\t$cur_img[$row[$field_sql]] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$db->sql_freeresult($result);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t{\n\t\t\t\t\t\t$smiley_count = $this->item_count($table);\n\t\t\t\t\t\tif ($smiley_count + count($pak_ary) > SMILEY_LIMIT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang('TOO_MANY_SMILIES', SMILEY_LIMIT) . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tforeach ($pak_ary as $pak_entry)\n\t\t\t\t\t{\n\t\t\t\t\t\t$data = array();\n\t\t\t\t\t\tif (preg_match_all(\"#'(.*?)', ?#\", $pak_entry, $data))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((count($data[1]) != 4 && $mode == 'icons') ||\n\t\t\t\t\t\t\t\t(count($data[1]) != 6 && $mode == 'smilies'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttrigger_error($user->lang['WRONG_PAK_TYPE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Stripslash here because it got addslashed before... (on export)\n\t\t\t\t\t\t\t$img = stripslashes($data[1][0]);\n\t\t\t\t\t\t\t$width = stripslashes($data[1][1]);\n\t\t\t\t\t\t\t$height = stripslashes($data[1][2]);\n\t\t\t\t\t\t\t$display_on_posting = stripslashes($data[1][3]);\n\n\t\t\t\t\t\t\tif (isset($data[1][4]) && isset($data[1][5]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$emotion = stripslashes($data[1][4]);\n\t\t\t\t\t\t\t\t$code = stripslashes($data[1][5]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($current == 'replace' &&\n\t\t\t\t\t\t\t\t(($mode == 'smilies' && !empty($cur_img[$code])) ||\n\t\t\t\t\t\t\t\t($mode == 'icons' && !empty($cur_img[$img]))))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$replace_sql = ($mode == 'smilies') ? $code : $img;\n\t\t\t\t\t\t\t\t$sql = array(\n\t\t\t\t\t\t\t\t\t$fields . '_url'\t\t=> $img,\n\t\t\t\t\t\t\t\t\t$fields . '_height'\t\t=> (int) $height,\n\t\t\t\t\t\t\t\t\t$fields . '_width'\t\t=> (int) $width,\n\t\t\t\t\t\t\t\t\t'display_on_posting'\t=> (int) $display_on_posting,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$sql = array_merge($sql, array(\n\t\t\t\t\t\t\t\t\t\t'emotion'\t\t\t\t=> $emotion,\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$sql = \"UPDATE $table SET \" . $db->sql_build_array('UPDATE', $sql) . \"\n\t\t\t\t\t\t\t\t\tWHERE $field_sql = '\" . $db->sql_escape($replace_sql) . \"'\";\n\t\t\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t++$order;\n\n\t\t\t\t\t\t\t\t$sql = array(\n\t\t\t\t\t\t\t\t\t$fields . '_url'\t=> $img,\n\t\t\t\t\t\t\t\t\t$fields . '_height'\t=> (int) $height,\n\t\t\t\t\t\t\t\t\t$fields . '_width'\t=> (int) $width,\n\t\t\t\t\t\t\t\t\t$fields . '_order'\t=> (int) $order,\n\t\t\t\t\t\t\t\t\t'display_on_posting'=> (int) $display_on_posting,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$sql = array_merge($sql, array(\n\t\t\t\t\t\t\t\t\t\t'code'\t\t\t\t=> $code,\n\t\t\t\t\t\t\t\t\t\t'emotion'\t\t\t=> $emotion,\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$db->sql_query(\"INSERT INTO $table \" . $db->sql_build_array('INSERT', $sql));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\t\ttrigger_error($user->lang[$lang . '_IMPORT_SUCCESS'] . adm_back_link($this->u_action));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pak_options = '';\n\n\t\t\t\t\tforeach ($_paks as $pak)\n\t\t\t\t\t{\n\t\t\t\t\t\t$pak_options .= '<option value=\"' . $pak . '\">' . htmlspecialchars($pak, ENT_COMPAT) . '</option>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t\t'S_CHOOSE_PAK'\t\t=> true,\n\t\t\t\t\t\t'S_PAK_OPTIONS'\t\t=> $pak_options,\n\n\t\t\t\t\t\t'L_TITLE'\t\t\t=> $user->lang['ACP_' . $lang],\n\t\t\t\t\t\t'L_EXPLAIN'\t\t\t=> $user->lang['ACP_' . $lang . '_EXPLAIN'],\n\t\t\t\t\t\t'L_NO_PAK_OPTIONS'\t=> $user->lang['NO_' . $lang . '_PAK'],\n\t\t\t\t\t\t'L_CURRENT'\t\t\t=> $user->lang['CURRENT_' . $lang],\n\t\t\t\t\t\t'L_CURRENT_EXPLAIN'\t=> $user->lang['CURRENT_' . $lang . '_EXPLAIN'],\n\t\t\t\t\t\t'L_IMPORT_SUBMIT'\t=> $user->lang['IMPORT_' . $lang],\n\n\t\t\t\t\t\t'U_BACK'\t\t=> $this->u_action,\n\t\t\t\t\t\t'U_ACTION'\t\t=> $this->u_action . '&amp;action=import',\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase 'export':\n\n\t\t\t\t$this->page_title = 'EXPORT_' . $lang;\n\t\t\t\t$this->tpl_name = 'message_body';\n\n\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t'MESSAGE_TITLE'\t\t=> $user->lang['EXPORT_' . $lang],\n\t\t\t\t\t'MESSAGE_TEXT'\t\t=> sprintf($user->lang['EXPORT_' . $lang . '_EXPLAIN'], '<a href=\"' . $this->u_action . '&amp;action=send&amp;hash=' . generate_link_hash('acp_icons') . '\">', '</a>'),\n\n\t\t\t\t\t'S_USER_NOTICE'\t\t=> true,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\treturn;\n\n\t\t\tbreak;\n\n\t\t\tcase 'send':\n\n\t\t\t\tif (!check_link_hash($request->variable('hash', ''), 'acp_icons'))\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t$sql = \"SELECT *\n\t\t\t\t\tFROM $table\n\t\t\t\t\tORDER BY {$fields}_order\";\n\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t$pak = '';\n\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t{\n\t\t\t\t\t$pak .= \"'\" . addslashes($row[$fields . '_url']) . \"', \";\n\t\t\t\t\t$pak .= \"'\" . addslashes($row[$fields . '_width']) . \"', \";\n\t\t\t\t\t$pak .= \"'\" . addslashes($row[$fields . '_height']) . \"', \";\n\t\t\t\t\t$pak .= \"'\" . addslashes($row['display_on_posting']) . \"', \";\n\n\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t{\n\t\t\t\t\t\t$pak .= \"'\" . addslashes($row['emotion']) . \"', \";\n\t\t\t\t\t\t$pak .= \"'\" . addslashes($row['code']) . \"', \";\n\t\t\t\t\t}\n\n\t\t\t\t\t$pak .= \"\\n\";\n\t\t\t\t}\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif ($pak != '')\n\t\t\t\t{\n\t\t\t\t\tgarbage_collection();\n\n\t\t\t\t\theader('Cache-Control: public');\n\n\t\t\t\t\t// Send out the Headers\n\t\t\t\t\theader('Content-Type: text/x-delimtext; name=\"' . $mode . '.pak\"');\n\t\t\t\t\theader('Content-Disposition: inline; filename=\"' . $mode . '.pak\"');\n\t\t\t\t\techo $pak;\n\n\t\t\t\t\tflush();\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['NO_' . strtoupper($fields) . '_EXPORT'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'delete':\n\n\t\t\t\tif (confirm_box(true))\n\t\t\t\t{\n\t\t\t\t\t$sql = \"DELETE FROM $table\n\t\t\t\t\t\tWHERE {$fields}_id = $icon_id\";\n\t\t\t\t\t$db->sql_query($sql);\n\n\t\t\t\t\tswitch ($mode)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'smilies':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'icons':\n\t\t\t\t\t\t\t// Reset appropriate icon_ids\n\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . TOPICS_TABLE . \"\n\t\t\t\t\t\t\t\tSET icon_id = 0\n\t\t\t\t\t\t\t\tWHERE icon_id = $icon_id\");\n\n\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . POSTS_TABLE . \"\n\t\t\t\t\t\t\t\tSET icon_id = 0\n\t\t\t\t\t\t\t\tWHERE icon_id = $icon_id\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$notice = $user->lang[$lang . '_DELETED'];\n\n\t\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\t\tif ($request->is_ajax())\n\t\t\t\t\t{\n\t\t\t\t\t\t$json_response = new \\phpbb\\json_response;\n\t\t\t\t\t\t$json_response->send(array(\n\t\t\t\t\t\t\t'MESSAGE_TITLE'\t=> $user->lang['INFORMATION'],\n\t\t\t\t\t\t\t'MESSAGE_TEXT'\t=> $notice,\n\t\t\t\t\t\t\t'REFRESH_DATA'\t=> array(\n\t\t\t\t\t\t\t\t'time'\t=> 3\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconfirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields(array(\n\t\t\t\t\t\t'i'\t\t\t=> $id,\n\t\t\t\t\t\t'mode'\t\t=> $mode,\n\t\t\t\t\t\t'id'\t\t=> $icon_id,\n\t\t\t\t\t\t'action'\t=> 'delete',\n\t\t\t\t\t)));\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'move_up':\n\t\t\tcase 'move_down':\n\n\t\t\t\tif (!check_link_hash($request->variable('hash', ''), 'acp_icons'))\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t// Get current order id...\n\t\t\t\t$sql = \"SELECT {$fields}_order as current_order\n\t\t\t\t\tFROM $table\n\t\t\t\t\tWHERE {$fields}_id = $icon_id\";\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$current_order = (int) $db->sql_fetchfield('current_order');\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif ($current_order == 0 && $action == 'move_up')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// on move_down, switch position with next order_id...\n\t\t\t\t// on move_up, switch position with previous order_id...\n\t\t\t\t$switch_order_id = ($action == 'move_down') ? $current_order + 1 : $current_order - 1;\n\n\t\t\t\t//\n\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\tSET {$fields}_order = $current_order\n\t\t\t\t\tWHERE {$fields}_order = $switch_order_id\n\t\t\t\t\t\tAND {$fields}_id <> $icon_id\";\n\t\t\t\t$db->sql_query($sql);\n\t\t\t\t$move_executed = (bool) $db->sql_affectedrows();\n\n\t\t\t\t// Only update the other entry too if the previous entry got updated\n\t\t\t\tif ($move_executed)\n\t\t\t\t{\n\t\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\t\tSET {$fields}_order = $switch_order_id\n\t\t\t\t\t\tWHERE {$fields}_order = $current_order\n\t\t\t\t\t\t\tAND {$fields}_id = $icon_id\";\n\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t}\n\n\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\tif ($request->is_ajax())\n\t\t\t\t{\n\t\t\t\t\t$json_response = new \\phpbb\\json_response;\n\t\t\t\t\t$json_response->send(array(\n\t\t\t\t\t\t'success'\t=> $move_executed,\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// By default, check that image_order is valid and fix it if necessary\n\t\t$sql = \"SELECT {$fields}_id AS order_id, {$fields}_order AS fields_order\n\t\t\tFROM $table\n\t\t\tORDER BY display_on_posting DESC, {$fields}_order\";\n\t\t$result = $db->sql_query($sql);\n\n\t\tif ($row = $db->sql_fetchrow($result))\n\t\t{\n\t\t\t$order = 0;\n\t\t\tdo\n\t\t\t{\n\t\t\t\t++$order;\n\t\t\t\tif ($row['fields_order'] != $order)\n\t\t\t\t{\n\t\t\t\t\t$db->sql_query(\"UPDATE $table\n\t\t\t\t\t\tSET {$fields}_order = $order\n\t\t\t\t\t\tWHERE {$fields}_id = \" . $row['order_id']);\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ($row = $db->sql_fetchrow($result));\n\t\t}\n\t\t$db->sql_freeresult($result);\n\n\t\t$template->assign_vars(array(\n\t\t\t'L_TITLE'\t\t\t=> $user->lang['ACP_' . $lang],\n\t\t\t'L_EXPLAIN'\t\t\t=> $user->lang['ACP_' . $lang . '_EXPLAIN'],\n\t\t\t'L_IMPORT'\t\t\t=> $user->lang['IMPORT_' . $lang],\n\t\t\t'L_EXPORT'\t\t\t=> $user->lang['EXPORT_' . $lang],\n\t\t\t'L_NOT_DISPLAYED'\t=> $user->lang[$lang . '_NOT_DISPLAYED'],\n\t\t\t'L_ICON_ADD'\t\t=> $user->lang['ADD_' . $lang],\n\t\t\t'L_ICON_EDIT'\t\t=> $user->lang['EDIT_' . $lang],\n\n\t\t\t'NOTICE'\t\t\t=> $notice,\n\t\t\t'COLSPAN'\t\t\t=> ($mode == 'smilies') ? 5 : 3,\n\n\t\t\t'S_SMILIES'\t\t\t=> ($mode == 'smilies') ? true : false,\n\n\t\t\t'U_ACTION'\t\t\t=> $this->u_action,\n\t\t\t'U_IMPORT'\t\t\t=> $this->u_action . '&amp;action=import',\n\t\t\t'U_EXPORT'\t\t\t=> $this->u_action . '&amp;action=export',\n\t\t\t)\n\t\t);\n\n\t\t/* @var $pagination \\phpbb\\pagination */\n\t\t$pagination = $phpbb_container->get('pagination');\n\t\t$pagination_start = $request->variable('start', 0);\n\t\t$spacer = false;\n\n\t\t$item_count = $this->item_count($table);\n\n\t\t$sql = \"SELECT *\n\t\t\tFROM $table\n\t\t\tORDER BY {$fields}_order ASC\";\n\t\t$result = $db->sql_query_limit($sql, $config['smilies_per_page'], $pagination_start);\n\n\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t{\n\t\t\t$alt_text = ($mode == 'smilies') ? $row['code'] : (($mode == 'icons' && !empty($row['icons_alt'])) ? $row['icons_alt'] : $row['icons_url']);\n\n\t\t\t$template->assign_block_vars('items', array(\n\t\t\t\t'S_SPACER'\t\t=> (!$spacer && !$row['display_on_posting']) ? true : false,\n\t\t\t\t'ALT_TEXT'\t\t=> $alt_text,\n\t\t\t\t'IMG_SRC'\t\t=> $phpbb_root_path . $img_path . '/' . $row[$fields . '_url'],\n\t\t\t\t'WIDTH'\t\t\t=> $row[$fields . '_width'],\n\t\t\t\t'HEIGHT'\t\t=> $row[$fields . '_height'],\n\t\t\t\t'CODE'\t\t\t=> (isset($row['code'])) ? $row['code'] : '',\n\t\t\t\t'EMOTION'\t\t=> (isset($row['emotion'])) ? $row['emotion'] : '',\n\t\t\t\t'U_EDIT'\t\t=> $this->u_action . '&amp;action=edit&amp;id=' . $row[$fields . '_id'],\n\t\t\t\t'U_DELETE'\t\t=> $this->u_action . '&amp;action=delete&amp;id=' . $row[$fields . '_id'],\n\t\t\t\t'U_MOVE_UP'\t\t=> $this->u_action . '&amp;action=move_up&amp;id=' . $row[$fields . '_id'] . '&amp;start=' . $pagination_start . '&amp;hash=' . generate_link_hash('acp_icons'),\n\t\t\t\t'U_MOVE_DOWN'\t=> $this->u_action . '&amp;action=move_down&amp;id=' . $row[$fields . '_id'] . '&amp;start=' . $pagination_start . '&amp;hash=' . generate_link_hash('acp_icons'),\n\t\t\t));\n\n\t\t\tif (!$spacer && !$row['display_on_posting'])\n\t\t\t{\n\t\t\t\t$spacer = true;\n\t\t\t}\n\t\t}\n\t\t$db->sql_freeresult($result);\n\n\t\t$pagination->generate_template_pagination($this->u_action, 'pagination', 'start', $item_count, $config['smilies_per_page'], $pagination_start);\n\t}\n\n\t/**\n\t * Returns the count of smilies or icons in the database\n\t *\n\t * @param string $table The table of items to count.\n\t * @return int number of items\n\t */\n\t/* private */ function item_count($table)\n\t{\n\t\tglobal $db;\n\n\t\t$sql = \"SELECT COUNT(*) AS item_count\n\t\t\tFROM $table\";\n\t\t$result = $db->sql_query($sql);\n\t\t$item_count = (int) $db->sql_fetchfield('item_count');\n\t\t$db->sql_freeresult($result);\n\n\t\treturn $item_count;\n\t}\n}\n"], "fixing_code": ["<?php\n/**\n*\n* This file is part of the phpBB Forum Software package.\n*\n* @copyright (c) phpBB Limited <https://www.phpbb.com>\n* @license GNU General Public License, version 2 (GPL-2.0)\n*\n* For full copyright and license information, please see\n* the docs/CREDITS.txt file.\n*\n*/\n\n/**\n* @ignore\n*/\nif (!defined('IN_PHPBB'))\n{\n\texit;\n}\n\n/**\n  * @todo {smilies} check regular expressions for special char replacements (stored specialchared in db)\n  */\nclass acp_icons\n{\n\tvar $u_action;\n\n\tfunction main($id, $mode)\n\t{\n\t\tglobal $db, $user, $template, $cache;\n\t\tglobal $config, $phpbb_root_path;\n\t\tglobal $request, $phpbb_container;\n\n\t\t$user->add_lang('acp/posting');\n\n\t\t// Set up general vars\n\t\t$action = $request->variable('action', '');\n\t\t$action = (isset($_POST['add'])) ? 'add' : $action;\n\t\t$action = (isset($_POST['edit'])) ? 'edit' : $action;\n\t\t$action = (isset($_POST['import'])) ? 'import' : $action;\n\t\t$icon_id = $request->variable('id', 0);\n\t\t$submit = $request->is_set_post('submit', false);\n\n\t\t$form_key = 'acp_icons';\n\t\tadd_form_key($form_key);\n\n\t\t$mode = ($mode == 'smilies') ? 'smilies' : 'icons';\n\n\t\t$this->tpl_name = 'acp_icons';\n\n\t\t// What are we working on?\n\t\tswitch ($mode)\n\t\t{\n\t\t\tcase 'smilies':\n\t\t\t\t$table = SMILIES_TABLE;\n\t\t\t\t$lang = 'SMILIES';\n\t\t\t\t$fields = 'smiley';\n\t\t\t\t$img_path = $config['smilies_path'];\n\t\t\tbreak;\n\n\t\t\tcase 'icons':\n\t\t\t\t$table = ICONS_TABLE;\n\t\t\t\t$lang = 'ICONS';\n\t\t\t\t$fields = 'icons';\n\t\t\t\t$img_path = $config['icons_path'];\n\t\t\tbreak;\n\t\t}\n\n\t\t$this->page_title = 'ACP_' . $lang;\n\n\t\t// Clear some arrays\n\t\t$_images = $_paks = array();\n\t\t$notice = '';\n\n\t\t// Grab file list of paks and images\n\t\tif ($action == 'edit' || $action == 'add' || $action == 'import')\n\t\t{\n\t\t\t$imglist = filelist($phpbb_root_path . $img_path, '');\n\n\t\t\tforeach ($imglist as $path => $img_ary)\n\t\t\t{\n\t\t\t\tif (empty($img_ary))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tasort($img_ary, SORT_STRING);\n\n\t\t\t\tforeach ($img_ary as $img)\n\t\t\t\t{\n\t\t\t\t\t$img_size = getimagesize($phpbb_root_path . $img_path . '/' . $path . $img);\n\n\t\t\t\t\tif ($img_size)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!$img_size[0] || !$img_size[1] || strlen($img) > 255)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust the width and height to be lower than 128px while perserving the aspect ratio (for icons)\n\t\t\t\t\t\tif ($mode == 'icons')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($img_size[0] > 127 && $img_size[0] > $img_size[1])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$img_size[1] = (int) ($img_size[1] * (127 / $img_size[0]));\n\t\t\t\t\t\t\t\t$img_size[0] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($img_size[1] > 127)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$img_size[0] = (int) ($img_size[0] * (127 / $img_size[1]));\n\t\t\t\t\t\t\t\t$img_size[1] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// getimagesize can't read the dimensions of the SVG files\n\t\t\t\t\t\t// https://bugs.php.net/bug.php?id=71517\n\t\t\t\t\t\t$xml_get = simplexml_load_file($phpbb_root_path . $img_path . '/' . $path . $img);\n\n\t\t\t\t\t\t$svg_width = intval($xml_get['width']);\n\t\t\t\t\t\t$svg_height = intval($xml_get['height']);\n\t\t\t\t\t}\n\n\t\t\t\t\t$_images[$path . $img]['file'] = $path . $img;\n\n\t\t\t\t\t// Give SVG a fallback on failure\n\t\t\t\t\t$_images[$path . $img]['width'] = $img_size ? $img_size[0] : ($svg_width ?: 32);\n\t\t\t\t\t$_images[$path . $img]['height'] = $img_size ? $img_size[1] : ($svg_height ?: 32);\n\t\t\t\t}\n\t\t\t}\n\t\t\tunset($imglist);\n\n\t\t\tif ($dir = @opendir($phpbb_root_path . $img_path))\n\t\t\t{\n\t\t\t\twhile (($file = readdir($dir)) !== false)\n\t\t\t\t{\n\t\t\t\t\tif (is_file($phpbb_root_path . $img_path . '/' . $file) && preg_match('#\\.pak$#i', $file))\n\t\t\t\t\t{\n\t\t\t\t\t\t$_paks[] = $file;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclosedir($dir);\n\n\t\t\t\tif (!empty($_paks))\n\t\t\t\t{\n\t\t\t\t\tasort($_paks, SORT_STRING);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// What shall we do today? Oops, I believe that's trademarked ...\n\t\tswitch ($action)\n\t\t{\n\t\t\tcase 'edit':\n\t\t\t\tunset($_images);\n\t\t\t\t$_images = array();\n\n\t\t\t// no break;\n\n\t\t\tcase 'add':\n\n\t\t\t\t$smilies = $default_row = array();\n\t\t\t\t$smiley_options = $order_list = $add_order_list = '';\n\n\t\t\t\tif ($action == 'add' && $mode == 'smilies')\n\t\t\t\t{\n\t\t\t\t\t$sql = 'SELECT *\n\t\t\t\t\t\tFROM ' . SMILIES_TABLE . '\n\t\t\t\t\t\tORDER BY smiley_order';\n\t\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (empty($smilies[$row['smiley_url']]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$smilies[$row['smiley_url']] = $row;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t\tif (count($smilies))\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach ($smilies as $row)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$selected = false;\n\n\t\t\t\t\t\t\tif (!$smiley_options)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$selected = true;\n\t\t\t\t\t\t\t\t$default_row = $row;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$smiley_options .= '<option value=\"' . $row['smiley_url'] . '\"' . (($selected) ? ' selected=\"selected\"' : '') . '>' . $row['smiley_url'] . '</option>';\n\n\t\t\t\t\t\t\t$template->assign_block_vars('smile', array(\n\t\t\t\t\t\t\t\t'SMILEY_URL'\t=> addslashes($row['smiley_url']),\n\t\t\t\t\t\t\t\t'CODE'\t\t\t=> addslashes($row['code']),\n\t\t\t\t\t\t\t\t'EMOTION'\t\t=> addslashes($row['emotion']),\n\t\t\t\t\t\t\t\t'WIDTH'\t\t\t=> $row['smiley_width'],\n\t\t\t\t\t\t\t\t'HEIGHT'\t\t=> $row['smiley_height'],\n\t\t\t\t\t\t\t\t'ORDER'\t\t\t=> $row['smiley_order'] + 1,\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$sql = \"SELECT *\n\t\t\t\t\tFROM $table\n\t\t\t\t\tORDER BY {$fields}_order \" . (($icon_id || $action == 'add') ? 'DESC' : 'ASC');\n\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t$data = array();\n\t\t\t\t$after = false;\n\t\t\t\t$order_lists = array('', '');\n\t\t\t\t$add_order_lists = array('', '');\n\t\t\t\t$display_count = 0;\n\n\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t{\n\t\t\t\t\tif ($action == 'add')\n\t\t\t\t\t{\n\t\t\t\t\t\tunset($_images[$row[$fields . '_url']]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($row[$fields . '_id'] == $icon_id)\n\t\t\t\t\t{\n\t\t\t\t\t\t$after = true;\n\t\t\t\t\t\t$data[$row[$fields . '_url']] = $row;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($action == 'edit' && !$icon_id)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$data[$row[$fields . '_url']] = $row;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$selected = '';\n\t\t\t\t\t\tif (!empty($after))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$selected = ' selected=\"selected\"';\n\t\t\t\t\t\t\t$after = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($row['display_on_posting'])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$display_count++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$after_txt = ($mode == 'smilies') ? $row['code'] : $row['icons_url'];\n\t\t\t\t\t\t$order_lists[$row['display_on_posting']] = '<option value=\"' . ($row[$fields . '_order'] + 1) . '\"' . $selected . '>' . sprintf($user->lang['AFTER_' . $lang], ' -&gt; ' . $after_txt) . '</option>' . $order_lists[$row['display_on_posting']];\n\n\t\t\t\t\t\tif (!empty($default_row))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$add_order_lists[$row['display_on_posting']] = '<option value=\"' . ($row[$fields . '_order'] + 1) . '\"' . (($row[$fields . '_id'] == $default_row['smiley_id']) ? ' selected=\"selected\"' : '') . '>' . sprintf($user->lang['AFTER_' . $lang], ' -&gt; ' . $after_txt) . '</option>' . $add_order_lists[$row['display_on_posting']];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\t$order_list = '<option value=\"1\"' . ((!isset($after)) ? ' selected=\"selected\"' : '') . '>' . $user->lang['FIRST'] . '</option>';\n\t\t\t\t$add_order_list = '<option value=\"1\">' . $user->lang['FIRST'] . '</option>';\n\n\t\t\t\tif ($action == 'add')\n\t\t\t\t{\n\t\t\t\t\t$data = $_images;\n\t\t\t\t}\n\n\t\t\t\t$colspan = (($mode == 'smilies') ? 7 : 6);\n\t\t\t\t$colspan += ($icon_id) ? 1 : 0;\n\t\t\t\t$colspan += ($action == 'add') ? 2 : 0;\n\n\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t'S_EDIT'\t\t=> true,\n\t\t\t\t\t'S_SMILIES'\t\t=> ($mode == 'smilies') ? true : false,\n\t\t\t\t\t'S_ADD'\t\t\t=> ($action == 'add') ? true : false,\n\n\t\t\t\t\t'S_ORDER_LIST_DISPLAY'\t\t=> $order_list . $order_lists[1],\n\t\t\t\t\t'S_ORDER_LIST_UNDISPLAY'\t=> $order_list . $order_lists[0],\n\t\t\t\t\t'S_ORDER_LIST_DISPLAY_COUNT'\t=> $display_count + 1,\n\n\t\t\t\t\t'L_TITLE'\t\t=> $user->lang['ACP_' . $lang],\n\t\t\t\t\t'L_EXPLAIN'\t\t=> $user->lang['ACP_' . $lang . '_EXPLAIN'],\n\t\t\t\t\t'L_CONFIG'\t\t=> $user->lang[$lang . '_CONFIG'],\n\t\t\t\t\t'L_URL'\t\t\t=> $user->lang[$lang . '_URL'],\n\t\t\t\t\t'L_LOCATION'\t=> $user->lang[$lang . '_LOCATION'],\n\t\t\t\t\t'L_WIDTH'\t\t=> $user->lang[$lang . '_WIDTH'],\n\t\t\t\t\t'L_HEIGHT'\t\t=> $user->lang[$lang . '_HEIGHT'],\n\t\t\t\t\t'L_ORDER'\t\t=> $user->lang[$lang . '_ORDER'],\n\t\t\t\t\t'L_NO_ICONS'\t=> $user->lang['NO_' . $lang . '_' . strtoupper($action)],\n\n\t\t\t\t\t'COLSPAN'\t\t=> $colspan,\n\t\t\t\t\t'ID'\t\t\t=> $icon_id,\n\n\t\t\t\t\t'U_BACK'\t\t=> $this->u_action,\n\t\t\t\t\t'U_ACTION'\t\t=> $this->u_action . '&amp;action=' . (($action == 'add') ? 'create' : 'modify'),\n\t\t\t\t));\n\n\t\t\t\tforeach ($data as $img => $img_row)\n\t\t\t\t{\n\t\t\t\t\t$template->assign_block_vars('items', array(\n\t\t\t\t\t\t'IMG'\t\t=> $img,\n\t\t\t\t\t\t'A_IMG'\t\t=> addslashes($img),\n\t\t\t\t\t\t'IMG_SRC'\t=> $phpbb_root_path . $img_path . '/' . $img,\n\n\t\t\t\t\t\t'CODE'\t\t=> ($mode == 'smilies' && isset($img_row['code'])) ? $img_row['code'] : '',\n\t\t\t\t\t\t'EMOTION'\t=> ($mode == 'smilies' && isset($img_row['emotion'])) ? $img_row['emotion'] : '',\n\n\t\t\t\t\t\t'S_ID'\t\t\t\t=> (isset($img_row[$fields . '_id'])) ? true : false,\n\t\t\t\t\t\t'ID'\t\t\t\t=> (isset($img_row[$fields . '_id'])) ? $img_row[$fields . '_id'] : 0,\n\t\t\t\t\t\t'WIDTH'\t\t\t\t=> (!empty($img_row[$fields .'_width'])) ? $img_row[$fields .'_width'] : $img_row['width'],\n\t\t\t\t\t\t'HEIGHT'\t\t\t=> (!empty($img_row[$fields .'_height'])) ? $img_row[$fields .'_height'] : $img_row['height'],\n\t\t\t\t\t\t'TEXT_ALT'\t\t    => ($mode == 'icons' && !empty($img_row['icons_alt'])) ? $img_row['icons_alt'] : $img,\n\t\t\t\t\t\t'ALT'\t\t\t    => ($mode == 'icons' && !empty($img_row['icons_alt'])) ? $img_row['icons_alt'] : '',\n\t\t\t\t\t\t'POSTING_CHECKED'\t=> (!empty($img_row['display_on_posting']) || $action == 'add') ? ' checked=\"checked\"' : '',\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\t// Ok, another row for adding an addition code for a pre-existing image...\n\t\t\t\tif ($action == 'add' && $mode == 'smilies' && count($smilies))\n\t\t\t\t{\n\t\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t\t'S_ADD_CODE'\t\t=> true,\n\n\t\t\t\t\t\t'S_IMG_OPTIONS'\t\t=> $smiley_options,\n\n\t\t\t\t\t\t'S_ADD_ORDER_LIST_DISPLAY'\t\t=> $add_order_list . $add_order_lists[1],\n\t\t\t\t\t\t'S_ADD_ORDER_LIST_UNDISPLAY'\t=> $add_order_list . $add_order_lists[0],\n\n\t\t\t\t\t\t'IMG_SRC'\t\t\t=> $phpbb_root_path . $img_path . '/' . $default_row['smiley_url'],\n\t\t\t\t\t\t'IMG_PATH'\t\t\t=> $img_path,\n\n\t\t\t\t\t\t'CODE'\t\t\t\t=> $default_row['code'],\n\t\t\t\t\t\t'EMOTION'\t\t\t=> $default_row['emotion'],\n\n\t\t\t\t\t\t'WIDTH'\t\t\t\t=> $default_row['smiley_width'],\n\t\t\t\t\t\t'HEIGHT'\t\t\t=> $default_row['smiley_height'],\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\tbreak;\n\n\t\t\tcase 'create':\n\t\t\tcase 'modify':\n\n\t\t\t\tif (!check_form_key($form_key))\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t// Get items to create/modify\n\t\t\t\t$images = (isset($_POST['image'])) ? array_keys($request->variable('image', array('' => 0))) : array();\n\n\t\t\t\t// Now really get the items\n\t\t\t\t$image_id\t\t= (isset($_POST['id'])) ? $request->variable('id', array('' => 0)) : array();\n\t\t\t\t$image_order\t= (isset($_POST['order'])) ? $request->variable('order', array('' => 0)) : array();\n\t\t\t\t$image_width\t= (isset($_POST['width'])) ? $request->variable('width', array('' => 0)) : array();\n\t\t\t\t$image_height\t= (isset($_POST['height'])) ? $request->variable('height', array('' => 0)) : array();\n\t\t\t\t$image_add\t\t= (isset($_POST['add_img'])) ? $request->variable('add_img', array('' => 0)) : array();\n\t\t\t\t$image_emotion\t= $request->variable('emotion', array('' => ''), true);\n\t\t\t\t$image_code\t\t= $request->variable('code', array('' => ''), true);\n\t\t\t\t$image_alt\t\t= ($request->is_set_post('alt')) ? $request->variable('alt', array('' => ''), true) : array();\n\t\t\t\t$image_display_on_posting = (isset($_POST['display_on_posting'])) ? $request->variable('display_on_posting', array('' => 0)) : array();\n\n\t\t\t\t// Ok, add the relevant bits if we are adding new codes to existing emoticons...\n\t\t\t\tif ($request->variable('add_additional_code', false, false, \\phpbb\\request\\request_interface::POST))\n\t\t\t\t{\n\t\t\t\t\t$add_image\t\t\t= $request->variable('add_image', '');\n\t\t\t\t\t$add_code\t\t\t= $request->variable('add_code', '', true);\n\t\t\t\t\t$add_emotion\t\t= $request->variable('add_emotion', '', true);\n\n\t\t\t\t\tif ($add_image && $add_emotion && $add_code)\n\t\t\t\t\t{\n\t\t\t\t\t\t$images[] = $add_image;\n\t\t\t\t\t\t$image_add[$add_image] = true;\n\n\t\t\t\t\t\t$image_code[$add_image] = $add_code;\n\t\t\t\t\t\t$image_emotion[$add_image] = $add_emotion;\n\t\t\t\t\t\t$image_width[$add_image] = $request->variable('add_width', 0);\n\t\t\t\t\t\t$image_height[$add_image] = $request->variable('add_height', 0);\n\n\t\t\t\t\t\tif ($request->variable('add_display_on_posting', false, false, \\phpbb\\request\\request_interface::POST))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$image_display_on_posting[$add_image] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$image_order[$add_image] = $request->variable('add_order', 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ($mode == 'smilies' && $action == 'create')\n\t\t\t\t{\n\t\t\t\t\t$smiley_count = $this->item_count($table);\n\n\t\t\t\t\t$addable_smileys_count = count($images);\n\t\t\t\t\tforeach ($images as $image)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!isset($image_add[$image]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t--$addable_smileys_count;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($smiley_count + $addable_smileys_count > SMILEY_LIMIT)\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang('TOO_MANY_SMILIES', SMILEY_LIMIT) . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$icons_updated = 0;\n\t\t\t\t$errors = array();\n\t\t\t\tforeach ($images as $image)\n\t\t\t\t{\n\t\t\t\t\tif ($mode == 'smilies' && ($image_emotion[$image] == '' || $image_code[$image] == ''))\n\t\t\t\t\t{\n\t\t\t\t\t\t$errors[$image] = 'SMILIE_NO_' . (($image_emotion[$image] == '') ? 'EMOTION' : 'CODE');\n\t\t\t\t\t}\n\t\t\t\t\telse if ($action == 'create' && !isset($image_add[$image]))\n\t\t\t\t\t{\n\t\t\t\t\t\t// skip images where add wasn't checked\n\t\t\t\t\t}\n\t\t\t\t\telse if (!file_exists($phpbb_root_path . $img_path . '/' . $image))\n\t\t\t\t\t{\n\t\t\t\t\t\t$errors[$image] = 'SMILIE_NO_FILE';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($image_width[$image] == 0 || $image_height[$image] == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_size = getimagesize($phpbb_root_path . $img_path . '/' . $image);\n\t\t\t\t\t\t\t$image_width[$image] = $img_size[0];\n\t\t\t\t\t\t\t$image_height[$image] = $img_size[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Adjust image width/height for icons\n\t\t\t\t\t\tif ($mode == 'icons')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($image_width[$image] > 127 && $image_width[$image] > $image_height[$image])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$image_height[$image] = (int) ($image_height[$image] * (127 / $image_width[$image]));\n\t\t\t\t\t\t\t\t$image_width[$image] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($image_height[$image] > 127)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$image_width[$image] = (int) ($image_width[$image] * (127 / $image_height[$image]));\n\t\t\t\t\t\t\t\t$image_height[$image] = 127;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$img_sql = array(\n\t\t\t\t\t\t\t$fields . '_url'\t\t=> $image,\n\t\t\t\t\t\t\t$fields . '_width'\t\t=> $image_width[$image],\n\t\t\t\t\t\t\t$fields . '_height'\t\t=> $image_height[$image],\n\t\t\t\t\t\t\t'display_on_posting'\t=> (isset($image_display_on_posting[$image])) ? 1 : 0,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_sql = array_merge($img_sql, array(\n\t\t\t\t\t\t\t\t'emotion'\t=> $image_emotion[$image],\n\t\t\t\t\t\t\t\t'code'\t\t=> $image_code[$image])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($mode == 'icons')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_sql = array_merge($img_sql, array(\n\t\t\t\t\t\t\t\t'icons_alt'\t=> $image_alt[$image])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Image_order holds the 'new' order value\n\t\t\t\t\t\tif (!empty($image_order[$image]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$img_sql = array_merge($img_sql, array(\n\t\t\t\t\t\t\t\t$fields . '_order'\t=>\t$image_order[$image])\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Since we always add 'after' an item, we just need to increase all following + the current by one\n\t\t\t\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\t\t\t\tSET {$fields}_order = {$fields}_order + 1\n\t\t\t\t\t\t\t\tWHERE {$fields}_order >= {$image_order[$image]}\";\n\t\t\t\t\t\t\t$db->sql_query($sql);\n\n\t\t\t\t\t\t\t// If we adjust the order, we need to adjust all other orders too - they became inaccurate...\n\t\t\t\t\t\t\tforeach ($image_order as $_image => $_order)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ($_image == $image)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ($_order >= $image_order[$image])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$image_order[$_image]++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($action == 'modify'  && !empty($image_id[$image]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\t\t\t\tSET \" . $db->sql_build_array('UPDATE', $img_sql) . \"\n\t\t\t\t\t\t\t\tWHERE {$fields}_id = \" . $image_id[$image];\n\t\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t\t$icons_updated++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($action !== 'modify')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$sql = \"INSERT INTO $table \" . $db->sql_build_array('INSERT', $img_sql);\n\t\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t\t$icons_updated++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\t$level = ($icons_updated) ? E_USER_NOTICE : E_USER_WARNING;\n\t\t\t\t$errormsgs = '';\n\t\t\t\tforeach ($errors as $img => $error)\n\t\t\t\t{\n\t\t\t\t\t$errormsgs .= '<br />' . sprintf($user->lang[$error], $img);\n\t\t\t\t}\n\t\t\t\tif ($action == 'modify')\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang($lang . '_EDITED', $icons_updated) . $errormsgs . adm_back_link($this->u_action), $level);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang($lang . '_ADDED', $icons_updated) . $errormsgs . adm_back_link($this->u_action), $level);\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'import':\n\n\t\t\t\t$pak = $request->variable('pak', '');\n\t\t\t\t$current = $request->variable('current', '');\n\n\t\t\t\tif ($pak != '')\n\t\t\t\t{\n\t\t\t\t\t$order = 0;\n\n\t\t\t\t\tif (!check_form_key($form_key))\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!($pak_ary = @file($phpbb_root_path . $img_path . '/' . utf8_basename($pak))))\n\t\t\t\t\t{\n\t\t\t\t\t\ttrigger_error($user->lang['PAK_FILE_NOT_READABLE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Make sure the pak_ary is valid\n\t\t\t\t\tforeach ($pak_ary as $pak_entry)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (preg_match_all(\"#'(.*?)', ?#\", $pak_entry, $data))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((count($data[1]) != 4 && $mode == 'icons') ||\n\t\t\t\t\t\t\t\t((count($data[1]) != 6 || (empty($data[1][4]) || empty($data[1][5]))) && $mode == 'smilies' ))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttrigger_error($user->lang['WRONG_PAK_TYPE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang['WRONG_PAK_TYPE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// The user has already selected a smilies_pak file\n\t\t\t\t\tif ($current == 'delete')\n\t\t\t\t\t{\n\t\t\t\t\t\tswitch ($db->get_sql_layer())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'sqlite3':\n\t\t\t\t\t\t\t\t$db->sql_query('DELETE FROM ' . $table);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t$db->sql_query('TRUNCATE TABLE ' . $table);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch ($mode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcase 'smilies':\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'icons':\n\t\t\t\t\t\t\t\t// Reset all icon_ids\n\t\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . TOPICS_TABLE . ' SET icon_id = 0');\n\t\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . POSTS_TABLE . ' SET icon_id = 0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$cur_img = array();\n\n\t\t\t\t\t\t$field_sql = ($mode == 'smilies') ? 'code' : 'icons_url';\n\n\t\t\t\t\t\t$sql = \"SELECT $field_sql\n\t\t\t\t\t\t\tFROM $table\";\n\t\t\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t++$order;\n\t\t\t\t\t\t\t$cur_img[$row[$field_sql]] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$db->sql_freeresult($result);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t{\n\t\t\t\t\t\t$smiley_count = $this->item_count($table);\n\t\t\t\t\t\tif ($smiley_count + count($pak_ary) > SMILEY_LIMIT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttrigger_error($user->lang('TOO_MANY_SMILIES', SMILEY_LIMIT) . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tforeach ($pak_ary as $pak_entry)\n\t\t\t\t\t{\n\t\t\t\t\t\t$data = array();\n\t\t\t\t\t\tif (preg_match_all(\"#'(.*?)', ?#\", $pak_entry, $data))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ((count($data[1]) != 4 && $mode == 'icons') ||\n\t\t\t\t\t\t\t\t(count($data[1]) != 6 && $mode == 'smilies'))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttrigger_error($user->lang['WRONG_PAK_TYPE'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Stripslash here because it got addslashed before... (on export)\n\t\t\t\t\t\t\t$img = stripslashes($data[1][0]);\n\t\t\t\t\t\t\t$width = stripslashes($data[1][1]);\n\t\t\t\t\t\t\t$height = stripslashes($data[1][2]);\n\t\t\t\t\t\t\t$display_on_posting = stripslashes($data[1][3]);\n\n\t\t\t\t\t\t\tif (isset($data[1][4]) && isset($data[1][5]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$emotion = stripslashes($data[1][4]);\n\t\t\t\t\t\t\t\t$code = stripslashes($data[1][5]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($current == 'replace' &&\n\t\t\t\t\t\t\t\t(($mode == 'smilies' && !empty($cur_img[$code])) ||\n\t\t\t\t\t\t\t\t($mode == 'icons' && !empty($cur_img[$img]))))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$replace_sql = ($mode == 'smilies') ? $code : $img;\n\t\t\t\t\t\t\t\t$sql = array(\n\t\t\t\t\t\t\t\t\t$fields . '_url'\t\t=> utf8_substr(rawurlencode($img), 0, 50),\n\t\t\t\t\t\t\t\t\t$fields . '_height'\t\t=> (int) $height,\n\t\t\t\t\t\t\t\t\t$fields . '_width'\t\t=> (int) $width,\n\t\t\t\t\t\t\t\t\t'display_on_posting'\t=> (int) $display_on_posting,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$sql = array_merge($sql, array(\n\t\t\t\t\t\t\t\t\t\t'emotion'\t\t\t\t=> $emotion,\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$sql = \"UPDATE $table SET \" . $db->sql_build_array('UPDATE', $sql) . \"\n\t\t\t\t\t\t\t\t\tWHERE $field_sql = '\" . $db->sql_escape($replace_sql) . \"'\";\n\t\t\t\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t++$order;\n\n\t\t\t\t\t\t\t\t$sql = array(\n\t\t\t\t\t\t\t\t\t$fields . '_url'\t=> utf8_substr(rawurlencode($img), 0, 50),\n\t\t\t\t\t\t\t\t\t$fields . '_height'\t=> (int) $height,\n\t\t\t\t\t\t\t\t\t$fields . '_width'\t=> (int) $width,\n\t\t\t\t\t\t\t\t\t$fields . '_order'\t=> (int) $order,\n\t\t\t\t\t\t\t\t\t'display_on_posting'=> (int) $display_on_posting,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$sql = array_merge($sql, array(\n\t\t\t\t\t\t\t\t\t\t'code'\t\t\t\t=> $code,\n\t\t\t\t\t\t\t\t\t\t'emotion'\t\t\t=> $emotion,\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$db->sql_query(\"INSERT INTO $table \" . $db->sql_build_array('INSERT', $sql));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\t\ttrigger_error($user->lang[$lang . '_IMPORT_SUCCESS'] . adm_back_link($this->u_action));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$pak_options = '';\n\n\t\t\t\t\tforeach ($_paks as $pak)\n\t\t\t\t\t{\n\t\t\t\t\t\t$pak_options .= '<option value=\"' . $pak . '\">' . htmlspecialchars($pak, ENT_COMPAT) . '</option>';\n\t\t\t\t\t}\n\n\t\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t\t'S_CHOOSE_PAK'\t\t=> true,\n\t\t\t\t\t\t'S_PAK_OPTIONS'\t\t=> $pak_options,\n\n\t\t\t\t\t\t'L_TITLE'\t\t\t=> $user->lang['ACP_' . $lang],\n\t\t\t\t\t\t'L_EXPLAIN'\t\t\t=> $user->lang['ACP_' . $lang . '_EXPLAIN'],\n\t\t\t\t\t\t'L_NO_PAK_OPTIONS'\t=> $user->lang['NO_' . $lang . '_PAK'],\n\t\t\t\t\t\t'L_CURRENT'\t\t\t=> $user->lang['CURRENT_' . $lang],\n\t\t\t\t\t\t'L_CURRENT_EXPLAIN'\t=> $user->lang['CURRENT_' . $lang . '_EXPLAIN'],\n\t\t\t\t\t\t'L_IMPORT_SUBMIT'\t=> $user->lang['IMPORT_' . $lang],\n\n\t\t\t\t\t\t'U_BACK'\t\t=> $this->u_action,\n\t\t\t\t\t\t'U_ACTION'\t\t=> $this->u_action . '&amp;action=import',\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase 'export':\n\n\t\t\t\t$this->page_title = 'EXPORT_' . $lang;\n\t\t\t\t$this->tpl_name = 'message_body';\n\n\t\t\t\t$template->assign_vars(array(\n\t\t\t\t\t'MESSAGE_TITLE'\t\t=> $user->lang['EXPORT_' . $lang],\n\t\t\t\t\t'MESSAGE_TEXT'\t\t=> sprintf($user->lang['EXPORT_' . $lang . '_EXPLAIN'], '<a href=\"' . $this->u_action . '&amp;action=send&amp;hash=' . generate_link_hash('acp_icons') . '\">', '</a>'),\n\n\t\t\t\t\t'S_USER_NOTICE'\t\t=> true,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\treturn;\n\n\t\t\tbreak;\n\n\t\t\tcase 'send':\n\n\t\t\t\tif (!check_link_hash($request->variable('hash', ''), 'acp_icons'))\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t$sql = \"SELECT *\n\t\t\t\t\tFROM $table\n\t\t\t\t\tORDER BY {$fields}_order\";\n\t\t\t\t$result = $db->sql_query($sql);\n\n\t\t\t\t$pak = '';\n\t\t\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t\t\t{\n\t\t\t\t\t$pak .= \"'\" . addslashes($row[$fields . '_url']) . \"', \";\n\t\t\t\t\t$pak .= \"'\" . addslashes($row[$fields . '_width']) . \"', \";\n\t\t\t\t\t$pak .= \"'\" . addslashes($row[$fields . '_height']) . \"', \";\n\t\t\t\t\t$pak .= \"'\" . addslashes($row['display_on_posting']) . \"', \";\n\n\t\t\t\t\tif ($mode == 'smilies')\n\t\t\t\t\t{\n\t\t\t\t\t\t$pak .= \"'\" . addslashes($row['emotion']) . \"', \";\n\t\t\t\t\t\t$pak .= \"'\" . addslashes($row['code']) . \"', \";\n\t\t\t\t\t}\n\n\t\t\t\t\t$pak .= \"\\n\";\n\t\t\t\t}\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif ($pak != '')\n\t\t\t\t{\n\t\t\t\t\tgarbage_collection();\n\n\t\t\t\t\theader('Cache-Control: public');\n\n\t\t\t\t\t// Send out the Headers\n\t\t\t\t\theader('Content-Type: text/x-delimtext; name=\"' . $mode . '.pak\"');\n\t\t\t\t\theader('Content-Disposition: inline; filename=\"' . $mode . '.pak\"');\n\t\t\t\t\techo $pak;\n\n\t\t\t\t\tflush();\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['NO_' . strtoupper($fields) . '_EXPORT'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'delete':\n\n\t\t\t\tif (confirm_box(true))\n\t\t\t\t{\n\t\t\t\t\t$sql = \"DELETE FROM $table\n\t\t\t\t\t\tWHERE {$fields}_id = $icon_id\";\n\t\t\t\t\t$db->sql_query($sql);\n\n\t\t\t\t\tswitch ($mode)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'smilies':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'icons':\n\t\t\t\t\t\t\t// Reset appropriate icon_ids\n\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . TOPICS_TABLE . \"\n\t\t\t\t\t\t\t\tSET icon_id = 0\n\t\t\t\t\t\t\t\tWHERE icon_id = $icon_id\");\n\n\t\t\t\t\t\t\t$db->sql_query('UPDATE ' . POSTS_TABLE . \"\n\t\t\t\t\t\t\t\tSET icon_id = 0\n\t\t\t\t\t\t\t\tWHERE icon_id = $icon_id\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$notice = $user->lang[$lang . '_DELETED'];\n\n\t\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\t\tif ($request->is_ajax())\n\t\t\t\t\t{\n\t\t\t\t\t\t$json_response = new \\phpbb\\json_response;\n\t\t\t\t\t\t$json_response->send(array(\n\t\t\t\t\t\t\t'MESSAGE_TITLE'\t=> $user->lang['INFORMATION'],\n\t\t\t\t\t\t\t'MESSAGE_TEXT'\t=> $notice,\n\t\t\t\t\t\t\t'REFRESH_DATA'\t=> array(\n\t\t\t\t\t\t\t\t'time'\t=> 3\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconfirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields(array(\n\t\t\t\t\t\t'i'\t\t\t=> $id,\n\t\t\t\t\t\t'mode'\t\t=> $mode,\n\t\t\t\t\t\t'id'\t\t=> $icon_id,\n\t\t\t\t\t\t'action'\t=> 'delete',\n\t\t\t\t\t)));\n\t\t\t\t}\n\n\t\t\tbreak;\n\n\t\t\tcase 'move_up':\n\t\t\tcase 'move_down':\n\n\t\t\t\tif (!check_link_hash($request->variable('hash', ''), 'acp_icons'))\n\t\t\t\t{\n\t\t\t\t\ttrigger_error($user->lang['FORM_INVALID'] . adm_back_link($this->u_action), E_USER_WARNING);\n\t\t\t\t}\n\n\t\t\t\t// Get current order id...\n\t\t\t\t$sql = \"SELECT {$fields}_order as current_order\n\t\t\t\t\tFROM $table\n\t\t\t\t\tWHERE {$fields}_id = $icon_id\";\n\t\t\t\t$result = $db->sql_query($sql);\n\t\t\t\t$current_order = (int) $db->sql_fetchfield('current_order');\n\t\t\t\t$db->sql_freeresult($result);\n\n\t\t\t\tif ($current_order == 0 && $action == 'move_up')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// on move_down, switch position with next order_id...\n\t\t\t\t// on move_up, switch position with previous order_id...\n\t\t\t\t$switch_order_id = ($action == 'move_down') ? $current_order + 1 : $current_order - 1;\n\n\t\t\t\t//\n\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\tSET {$fields}_order = $current_order\n\t\t\t\t\tWHERE {$fields}_order = $switch_order_id\n\t\t\t\t\t\tAND {$fields}_id <> $icon_id\";\n\t\t\t\t$db->sql_query($sql);\n\t\t\t\t$move_executed = (bool) $db->sql_affectedrows();\n\n\t\t\t\t// Only update the other entry too if the previous entry got updated\n\t\t\t\tif ($move_executed)\n\t\t\t\t{\n\t\t\t\t\t$sql = \"UPDATE $table\n\t\t\t\t\t\tSET {$fields}_order = $switch_order_id\n\t\t\t\t\t\tWHERE {$fields}_order = $current_order\n\t\t\t\t\t\t\tAND {$fields}_id = $icon_id\";\n\t\t\t\t\t$db->sql_query($sql);\n\t\t\t\t}\n\n\t\t\t\t$cache->destroy('_icons');\n\t\t\t\t$cache->destroy('sql', $table);\n\t\t\t\t$phpbb_container->get('text_formatter.cache')->invalidate();\n\n\t\t\t\tif ($request->is_ajax())\n\t\t\t\t{\n\t\t\t\t\t$json_response = new \\phpbb\\json_response;\n\t\t\t\t\t$json_response->send(array(\n\t\t\t\t\t\t'success'\t=> $move_executed,\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\t// By default, check that image_order is valid and fix it if necessary\n\t\t$sql = \"SELECT {$fields}_id AS order_id, {$fields}_order AS fields_order\n\t\t\tFROM $table\n\t\t\tORDER BY display_on_posting DESC, {$fields}_order\";\n\t\t$result = $db->sql_query($sql);\n\n\t\tif ($row = $db->sql_fetchrow($result))\n\t\t{\n\t\t\t$order = 0;\n\t\t\tdo\n\t\t\t{\n\t\t\t\t++$order;\n\t\t\t\tif ($row['fields_order'] != $order)\n\t\t\t\t{\n\t\t\t\t\t$db->sql_query(\"UPDATE $table\n\t\t\t\t\t\tSET {$fields}_order = $order\n\t\t\t\t\t\tWHERE {$fields}_id = \" . $row['order_id']);\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ($row = $db->sql_fetchrow($result));\n\t\t}\n\t\t$db->sql_freeresult($result);\n\n\t\t$template->assign_vars(array(\n\t\t\t'L_TITLE'\t\t\t=> $user->lang['ACP_' . $lang],\n\t\t\t'L_EXPLAIN'\t\t\t=> $user->lang['ACP_' . $lang . '_EXPLAIN'],\n\t\t\t'L_IMPORT'\t\t\t=> $user->lang['IMPORT_' . $lang],\n\t\t\t'L_EXPORT'\t\t\t=> $user->lang['EXPORT_' . $lang],\n\t\t\t'L_NOT_DISPLAYED'\t=> $user->lang[$lang . '_NOT_DISPLAYED'],\n\t\t\t'L_ICON_ADD'\t\t=> $user->lang['ADD_' . $lang],\n\t\t\t'L_ICON_EDIT'\t\t=> $user->lang['EDIT_' . $lang],\n\n\t\t\t'NOTICE'\t\t\t=> $notice,\n\t\t\t'COLSPAN'\t\t\t=> ($mode == 'smilies') ? 5 : 3,\n\n\t\t\t'S_SMILIES'\t\t\t=> ($mode == 'smilies') ? true : false,\n\n\t\t\t'U_ACTION'\t\t\t=> $this->u_action,\n\t\t\t'U_IMPORT'\t\t\t=> $this->u_action . '&amp;action=import',\n\t\t\t'U_EXPORT'\t\t\t=> $this->u_action . '&amp;action=export',\n\t\t\t)\n\t\t);\n\n\t\t/* @var $pagination \\phpbb\\pagination */\n\t\t$pagination = $phpbb_container->get('pagination');\n\t\t$pagination_start = $request->variable('start', 0);\n\t\t$spacer = false;\n\n\t\t$item_count = $this->item_count($table);\n\n\t\t$sql = \"SELECT *\n\t\t\tFROM $table\n\t\t\tORDER BY {$fields}_order ASC\";\n\t\t$result = $db->sql_query_limit($sql, $config['smilies_per_page'], $pagination_start);\n\n\t\twhile ($row = $db->sql_fetchrow($result))\n\t\t{\n\t\t\t$alt_text = ($mode == 'smilies') ? $row['code'] : (($mode == 'icons' && !empty($row['icons_alt'])) ? $row['icons_alt'] : $row['icons_url']);\n\n\t\t\t$template->assign_block_vars('items', array(\n\t\t\t\t'S_SPACER'\t\t=> (!$spacer && !$row['display_on_posting']) ? true : false,\n\t\t\t\t'ALT_TEXT'\t\t=> $alt_text,\n\t\t\t\t'IMG_SRC'\t\t=> $phpbb_root_path . $img_path . '/' . $row[$fields . '_url'],\n\t\t\t\t'WIDTH'\t\t\t=> $row[$fields . '_width'],\n\t\t\t\t'HEIGHT'\t\t=> $row[$fields . '_height'],\n\t\t\t\t'CODE'\t\t\t=> (isset($row['code'])) ? $row['code'] : '',\n\t\t\t\t'EMOTION'\t\t=> (isset($row['emotion'])) ? $row['emotion'] : '',\n\t\t\t\t'U_EDIT'\t\t=> $this->u_action . '&amp;action=edit&amp;id=' . $row[$fields . '_id'],\n\t\t\t\t'U_DELETE'\t\t=> $this->u_action . '&amp;action=delete&amp;id=' . $row[$fields . '_id'],\n\t\t\t\t'U_MOVE_UP'\t\t=> $this->u_action . '&amp;action=move_up&amp;id=' . $row[$fields . '_id'] . '&amp;start=' . $pagination_start . '&amp;hash=' . generate_link_hash('acp_icons'),\n\t\t\t\t'U_MOVE_DOWN'\t=> $this->u_action . '&amp;action=move_down&amp;id=' . $row[$fields . '_id'] . '&amp;start=' . $pagination_start . '&amp;hash=' . generate_link_hash('acp_icons'),\n\t\t\t));\n\n\t\t\tif (!$spacer && !$row['display_on_posting'])\n\t\t\t{\n\t\t\t\t$spacer = true;\n\t\t\t}\n\t\t}\n\t\t$db->sql_freeresult($result);\n\n\t\t$pagination->generate_template_pagination($this->u_action, 'pagination', 'start', $item_count, $config['smilies_per_page'], $pagination_start);\n\t}\n\n\t/**\n\t * Returns the count of smilies or icons in the database\n\t *\n\t * @param string $table The table of items to count.\n\t * @return int number of items\n\t */\n\t/* private */ function item_count($table)\n\t{\n\t\tglobal $db;\n\n\t\t$sql = \"SELECT COUNT(*) AS item_count\n\t\t\tFROM $table\";\n\t\t$result = $db->sql_query($sql);\n\t\t$item_count = (int) $db->sql_fetchfield('item_count');\n\t\t$db->sql_freeresult($result);\n\n\t\treturn $item_count;\n\t}\n}\n"], "filenames": ["phpBB/includes/acp/acp_icons.php"], "buggy_code_start_loc": [553], "buggy_code_end_loc": [680], "fixing_code_start_loc": [553], "fixing_code_end_loc": [680], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in phpBB up to 3.3.10. This issue affects the function main of the file phpBB/includes/acp/acp_icons.php of the component Smiley Pack Handler. The manipulation of the argument pak leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.3.11 is able to address this issue. The patch is named ccf6e6c255d38692d72fcb613b113e6eaa240aac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-244307.", "other": {"cve": {"id": "CVE-2023-5917", "sourceIdentifier": "cna@vuldb.com", "published": "2023-11-02T11:15:14.630", "lastModified": "2024-02-29T01:42:29.630", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in phpBB up to 3.3.10. This issue affects the function main of the file phpBB/includes/acp/acp_icons.php of the component Smiley Pack Handler. The manipulation of the argument pak leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.3.11 is able to address this issue. The patch is named ccf6e6c255d38692d72fcb613b113e6eaa240aac. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-244307."}, {"lang": "es", "value": "Una vulnerabilidad fue encontrada en phpBB hasta 3.3.10 y clasificada como problem\u00e1tica. Este problema afecta la funci\u00f3n principal del archivo phpBB/includes/acp/acp_icons.php del componente Smiley Pack Handler. La manipulaci\u00f3n del paquete de argumentos conduce a cross site scripting. El ataque puede iniciarse de forma remota. La actualizaci\u00f3n a la versi\u00f3n 3.3.11 puede solucionar este problema. El parche se llama ccf6e6c255d38692d72fcb613b113e6eaa240aac. Se recomienda actualizar el componente afectado. El identificador asociado de esta vulnerabilidad es VDB-244307."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 2.4, "baseSeverity": "LOW"}, "exploitabilityScore": 0.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:M/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "MULTIPLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.3}, "baseSeverity": "LOW", "exploitabilityScore": 6.4, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpbb:phpbb:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.3.11", "matchCriteriaId": "F4BB950E-CE3F-4EB3-B09D-EA1F60221A10"}]}]}], "references": [{"url": "https://github.com/phpbb/phpbb/commit/ccf6e6c255d38692d72fcb613b113e6eaa240aac", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/phpbb/phpbb/releases/tag/release-3.3.11", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.244307", "source": "cna@vuldb.com", "tags": ["Permissions Required", "VDB Entry"]}, {"url": "https://vuldb.com/?id.244307", "source": "cna@vuldb.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://www.phpbb.com/", "source": "cna@vuldb.com", "tags": ["Product"]}, {"url": "https://www.phpbb.com/community/viewtopic.php?t=2646991", "source": "cna@vuldb.com", "tags": ["Release Notes"]}]}, "github_commit_url": "https://github.com/phpbb/phpbb/commit/ccf6e6c255d38692d72fcb613b113e6eaa240aac"}}