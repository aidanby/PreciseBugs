{"buggy_code": ["$(function ($) {\n\t'use strict';\n\n\tvar mybbCmd = {\n\t\talign: ['left', 'center', 'right', 'justify'],\n\t\tfsStr: ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'],\n\t\tfSize: [9, 12, 15, 17, 23, 31],\n\t\tvideo: {\n\t\t\t'Dailymotion': {\n\t\t\t\t'match': /(dailymotion\\.com\\/video\\/|dai\\.ly\\/)([^\\/]+)/,\n\t\t\t\t'url': '//www.dailymotion.com/embed/video/',\n\t\t\t\t'html': '<iframe frameborder=\"0\" width=\"480\" height=\"270\" src=\"{url}\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Facebook': {\n\t\t\t\t'match': /facebook\\.com\\/(?:photo.php\\?v=|video\\/video.php\\?v=|video\\/embed\\?video_id=|v\\/?)(\\d+)/,\n\t\t\t\t'url': 'https://www.facebook.com/video/embed?video_id=',\n\t\t\t\t'html': '<iframe src=\"{url}\" width=\"625\" height=\"350\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Liveleak': {\n\t\t\t\t'match': /liveleak\\.com\\/(?:view\\?[a-z]=)([^\\/]+)/,\n\t\t\t\t'url': 'http://www.liveleak.com/ll_embed?i=',\n\t\t\t\t'html': '<iframe width=\"500\" height=\"300\" src=\"{url}\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'MetaCafe': {\n\t\t\t\t'match': /metacafe\\.com\\/watch\\/([^\\/]+)/,\n\t\t\t\t'url': 'http://www.metacafe.com/embed/',\n\t\t\t\t'html': '<iframe src=\"{url}\" width=\"440\" height=\"248\" frameborder=0 data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Mixer': {\n\t\t\t\t'match': /mixer\\.com\\/([^\\/]+)/,\n\t\t\t\t'url': '//mixer.com/embed/player/',\n\t\t\t\t'html': '<iframe allowfullscreen=\"true\" src=\"{url}\" width=\"620\" height=\"349\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Vimeo': {\n\t\t\t\t'match': /vimeo.com\\/(\\d+)($|\\/)/,\n\t\t\t\t'url': '//player.vimeo.com/video/',\n\t\t\t\t'html': '<iframe src=\"{url}\" width=\"500\" height=\"281\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Youtube': {\n\t\t\t\t'match': /(?:v=|v\\/|embed\\/|youtu\\.be\\/)(.{11})/,\n\t\t\t\t'url': '//www.youtube.com/embed/',\n\t\t\t\t'html': '<iframe width=\"560\" height=\"315\" src=\"{url}\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Twitch': {\n\t\t\t\t'match': /twitch\\.tv\\/(?:[\\w+_-]+)\\/v\\/(\\d+)/,\n\t\t\t\t'url': '//player.twitch.tv/?video=v',\n\t\t\t\t'html': '<iframe src=\"{url}\" frameborder=\"0\" scrolling=\"no\" height=\"378\" width=\"620\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t}\n\t\t}\n\t};\n\n\t// Add custom MyBB CSS\n\t$('<style type=\"text/css\">' +\n\t\t'.sceditor-dropdown { text-align: ' + ($('body').css('direction') === 'rtl' ? 'right' : 'left') + '; }' +\n\t\t'</style>').appendTo('body');\n\n\t// Update editor to use align= as alignment\n\t$.sceditor.formats.bbcode\n\t\t.set('align', {\n\t\t\thtml: function (element, attrs, content) {\n\t\t\t\treturn '<div align=\"' + (attrs.defaultattr || 'left') + '\">' + content + '</div>';\n\t\t\t},\n\t\t\tisInline: false\n\t\t});\n\t$.each(mybbCmd.align, function (i, val) {\n\t\t$.sceditor.formats.bbcode.set(val, {\n\t\t\tformat: '[align=' + val + ']{0}[/align]'\n\t\t});\n\t\t$.sceditor.command\n\t\t\t.set(val, {\n\t\t\t\ttxtExec: ['[align=' + val + ']', '[/align]']\n\t\t\t});\n\t});\n\n\t// Update font to support MyBB's BBCode dialect\n\t$.sceditor.formats.bbcode\n\t\t.set('list', {\n\t\t\thtml: function (element, attrs, content) {\n\t\t\t\tvar type = (attrs.defaultattr === '1' ? 'ol' : 'ul');\n\n\t\t\t\tif (attrs.defaultattr === 'a')\n\t\t\t\t\ttype = 'ol type=\"a\"';\n\n\t\t\t\treturn '<' + type + '>' + content + '</' + type + '>';\n\t\t\t},\n\n\t\t\tbreakAfter: false\n\t\t})\n\t\t.set('ul', {\n\t\t\tformat: '[list]{0}[/list]'\n\t\t})\n\t\t.set('ol', {\n\t\t\tformat: function ($elm, content) {\n\t\t\t\tvar type = ($($elm).attr('type') === 'a' ? 'a' : '1');\n\n\t\t\t\treturn '[list=' + type + ']' + content + '[/list]';\n\t\t\t}\n\t\t})\n\t\t.set('li', {\n\t\t\tformat: '[*]{0}',\n\t\t\texcludeClosing: true\n\t\t})\n\t\t.set('*', {\n\t\t\texcludeClosing: true,\n\t\t\tisInline: true\n\t\t});\n\n\t$.sceditor.command\n\t\t.set('bulletlist', {\n\t\t\ttxtExec: function (caller, selected) {\n\t\t\t\tvar content = '';\n\n\t\t\t\t$.each(selected.split(/\\r?\\n/), function () {\n\t\t\t\t\tcontent += (content ? '\\n' : '') +\n\t\t\t\t\t\t'[*]' + this;\n\t\t\t\t});\n\n\t\t\t\tthis.insertText('[list]\\n' + content + '\\n[/list]');\n\t\t\t}\n\t\t})\n\t\t.set('orderedlist', {\n\t\t\ttxtExec: function (caller, selected) {\n\t\t\t\tvar content = '';\n\n\t\t\t\t$.each(selected.split(/\\r?\\n/), function () {\n\t\t\t\t\tcontent += (content ? '\\n' : '') +\n\t\t\t\t\t\t'[*]' + this;\n\t\t\t\t});\n\n\t\t\t\tthis.insertText('[list=1]\\n' + content + '\\n[/list]');\n\t\t\t}\n\t\t});\n\n\t// Update size tag to use xx-small-xx-large instead of 1-7\n\t$.sceditor.formats.bbcode.set('size', {\n\t\tformat: function ($elm, content) {\n\t\t\tvar fontSize,\n\t\t\t\tsize = $($elm).attr('size');\n\n\t\t\tif (!size) {\n\t\t\t\tfontSize = $($elm).css('fontSize');\n\t\t\t\t// Most browsers return px value but IE returns 1-7\n\t\t\t\tif (fontSize.indexOf('px') > -1) {\n\t\t\t\t\t// convert size to an int\n\t\t\t\t\tfontSize = parseInt(fontSize);\n\t\t\t\t\tsize = 1;\n\t\t\t\t\t$.each(mybbCmd.fSize, function (i, val) {\n\t\t\t\t\t\tif (fontSize > val) size = i + 2;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsize = (~~fontSize) + 1;\n\t\t\t\t}\n\t\t\t\tsize = (size >= 7) ? mybbCmd.fsStr[6] : ((size <= 1) ? mybbCmd.fsStr[0] : mybbCmd.fsStr[size - 1]);\n\t\t\t} else {\n\t\t\t\tsize = mybbCmd.fsStr[size - 1];\n\t\t\t}\n\t\t\treturn '[size=' + size + ']' + content + '[/size]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar size = $.inArray(attrs.defaultattr, mybbCmd.fsStr) + 1;\n\t\t\tif (!isNaN(attrs.defaultattr)) {\n\t\t\t\tsize = attrs.defaultattr;\n\t\t\t\tif (size > 7)\n\t\t\t\t\tsize = 7;\n\t\t\t\tif (size < 1)\n\t\t\t\t\tsize = 1;\n\t\t\t}\n\t\t\tif (size < 0) {\n\t\t\t\tsize = 0;\n\t\t\t}\n\t\t\treturn '<font data-scefontsize=\"' + attrs.defaultattr + '\" size=\"' + size + '\">' + content + '</font>';\n\t\t}\n\t});\n\n\t$.sceditor.command.set('size', {\n\t\t_dropDown: function (editor, caller, callback) {\n\t\t\tvar content = $('<div />'),\n\t\t\t\tclickFunc = function (e) {\n\t\t\t\t\tcallback($(this).data('size'));\n\t\t\t\t\teditor.closeDropDown(true);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t};\n\n\t\t\tfor (var i = 1; i <= 7; i++)\n\t\t\t\tcontent.append($('<a class=\"sceditor-fontsize-option\" data-size=\"' + i + '\" href=\"#\"><font size=\"' + i + '\">' + i + '</font></a>').on('click', clickFunc));\n\n\t\t\teditor.createDropDown(caller, 'fontsize-picker', content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\tvar editor = this;\n\n\t\t\t$.sceditor.command.get('size')._dropDown(\n\t\t\t\teditor,\n\t\t\t\tcaller,\n\t\t\t\tfunction (fontSize) {\n\t\t\t\t\teditor.execCommand('fontsize', fontSize);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\ttxtExec: function (caller) {\n\t\t\tvar editor = this;\n\n\t\t\t$.sceditor.command.get('size')._dropDown(\n\t\t\t\teditor,\n\t\t\t\tcaller,\n\t\t\t\tfunction (size) {\n\t\t\t\t\tsize = (~~size);\n\t\t\t\t\tsize = (size > 7) ? 7 : ((size < 1) ? 1 : size);\n\t\t\t\t\teditor.insertText('[size=' + mybbCmd.fsStr[size - 1] + ']', '[/size]');\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\t// Update quote to support pid and dateline\n\t$.sceditor.formats.bbcode.set('quote', {\n\t\tformat: function (element, content) {\n\t\t\tvar author = '',\n\t\t\t\t$elm = $(element),\n\t\t\t\t$cite = $elm.children('cite').first();\n\t\t\t$cite.html($cite.text());\n\n\t\t\tif ($cite.length === 1 || $elm.data('author')) {\n\t\t\t\tauthor = $cite.text() || $elm.data('author');\n\n\t\t\t\t$elm.data('author', author);\n\t\t\t\t$cite.remove();\n\n\t\t\t\tcontent = this.elementToBbcode(element);\n\t\t\t\tauthor = '=' + author.replace(/(^\\s+|\\s+$)/g, '');\n\n\t\t\t\t$elm.prepend($cite);\n\t\t\t}\n\n\t\t\tif ($elm.data('pid'))\n\t\t\t\tauthor += \" pid='\" + $elm.data('pid') + \"'\";\n\n\t\t\tif ($elm.data('dateline'))\n\t\t\t\tauthor += \" dateline='\" + $elm.data('dateline') + \"'\";\n\n\t\t\treturn '[quote' + author + ']' + content + '[/quote]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar data = '';\n\n\t\t\tif (attrs.pid)\n\t\t\t\tdata += ' data-pid=\"' + attrs.pid + '\"';\n\n\t\t\tif (attrs.dateline)\n\t\t\t\tdata += ' data-dateline=\"' + attrs.dateline + '\"';\n\n\t\t\tif (typeof attrs.defaultattr !== \"undefined\")\n\t\t\t\tcontent = '<cite>' + attrs.defaultattr.replace(/ /g, '&nbsp;') + '</cite>' + content;\n\n\t\t\treturn '<blockquote' + data + '>' + content + '</blockquote>';\n\t\t},\n\t\tquoteType: function (val, name) {\n\t\t\tvar quoteChar = val.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n\t\t\treturn quoteChar + val + quoteChar;\n\t\t},\n\t\tbreakStart: true,\n\t\tbreakEnd: true\n\t});\n\n\t// Update font tag to allow limiting to only first in stack\n\t$.sceditor.formats.bbcode.set('font', {\n\t\tformat: function (element, content) {\n\t\t\tvar font;\n\t\t\tif (element.nodeName.toLowerCase() !== 'font' || !(font = $(element).attr('face')))\n\t\t\t\tfont = $(element).css('font-family');\n\n\n\t\t\tif (typeof font == 'string' && font != '' && font != 'defaultattr') {\n\t\t\t\treturn '[font=' + this.stripQuotes(font) + ']' + content + '[/font]';\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tif (typeof attrs.defaultattr == 'string' && attrs.defaultattr != '' && attrs.defaultattr != '{defaultattr}') {\n\t\t\t\treturn '<font face=\"' +\n\t\t\t\t\tattrs.defaultattr +\n\t\t\t\t\t'\">' + content + '</font>';\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}\n\t});\n\n\t// Add MyBB PHP command\n\t$.sceditor.formats.bbcode.set('php', {\n\t\tallowsEmpty: true,\n\t\tisInline: false,\n\t\tallowedChildren: ['#', '#newline'],\n\t\tformat: '[php]{0}[/php]',\n\t\thtml: '<code class=\"phpcodeblock\">{0}</code>'\n\t});\n\n\t$.sceditor.command.set(\"php\", {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"php\">' + editor._('PHP') + ':</label> ' +\n\t\t\t\t'<textarea type=\"text\" id=\"php\"></textarea>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t$content.find('#php').trigger('focus');\n\t\t\t}, 100);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar val = $content.find('#php').val(),\n\t\t\t\t\tbefore = '[php]',\n\t\t\t\t\tend = '[/php]';\n\n\t\t\t\tif (val) {\n\t\t\t\t\tbefore = before + val + end;\n\t\t\t\t\tend = null;\n\t\t\t\t}\n\n\t\t\t\teditor.insert(before, end);\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertphp', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\tif ($.trim(this.getRangeHelper().selectedRange())) {\n\t\t\t\tthis.insert('[php]', '[/php]');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.sceditor.command.get('php')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: ['[php]', '[/php]'],\n\t\ttooltip: \"PHP\"\n\t});\n\n\t// Update code to support PHP\n\t$.sceditor.formats.bbcode.set('code', {\n\t\tallowsEmpty: true,\n\t\ttags: {\n\t\t\tcode: null\n\t\t},\n\t\tisInline: false,\n\t\tallowedChildren: ['#', '#newline'],\n\t\tformat: function (element, content) {\n\t\t\tif ($(element).hasClass('phpcodeblock')) {\n\t\t\t\treturn '[php]' + content + '[/php]';\n\t\t\t}\n\t\t\treturn '[code]' + content + '[/code]';\n\t\t},\n\t\thtml: '<code>{0}</code>'\n\t});\n\n\t$.sceditor.command.set(\"code\", {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"code\">' + editor._('Code') + ':</label> ' +\n\t\t\t\t'<textarea type=\"text\" id=\"code\"></textarea>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t$content.find('#code').trigger('focus');\n\t\t\t}, 100);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar val = $content.find('#code').val(),\n\t\t\t\t\tbefore = '[code]',\n\t\t\t\t\tend = '[/code]';\n\n\t\t\t\tif (val) {\n\t\t\t\t\tbefore = before + val + end;\n\t\t\t\t\tend = null;\n\t\t\t\t}\n\n\t\t\t\teditor.insert(before, end);\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertcode', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\tif ($.trim(this.getRangeHelper().selectedRange())) {\n\t\t\t\tthis.insert('[code]', '[/code]');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.sceditor.command.get('code')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: ['[code]', '[/code]'],\n\t});\n\n\t// Update email to support description\n\t$.sceditor.command.set('email', {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"email\">' + editor._('E-mail:') + '</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"email\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"des\">' + editor._('Description (optional):') + '</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"des\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar val = $content.find('#email').val(),\n\t\t\t\t\tdescription = $content.find('#des').val();\n\n\t\t\t\tif (val) {\n\t\t\t\t\t// needed for IE to reset the last range\n\t\t\t\t\t$(editor).trigger('focus');\n\n\t\t\t\t\tif (!editor.getRangeHelper().selectedHtml() || description) {\n\t\t\t\t\t\tif (!description)\n\t\t\t\t\t\t\tdescription = val;\n\n\t\t\t\t\t\teditor.insert('[email=' + val + ']' + description + '[/email]');\n\t\t\t\t\t} else\n\t\t\t\t\t\teditor.execCommand('createlink', 'mailto:' + val);\n\t\t\t\t}\n\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertemail', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\t$.sceditor.command.get('email')._dropDown(this, caller);\n\t\t}\n\t});\n\n\t// Add MyBB video command\n\t$.sceditor.formats.bbcode.set('video', {\n\t\tallowsEmpty: true,\n\t\tallowedChildren: ['#', '#newline'],\n\t\ttags: {\n\t\t\tiframe: {\n\t\t\t\t'data-mybb-vt': null\n\t\t\t}\n\t\t},\n\t\tformat: function ($element, content) {\n\t\t\treturn '[video=' + $($element).data('mybb-vt') + ']' + $($element).data('mybb-vsrc') + '[/video]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar params = mybbCmd.video[Object.keys(mybbCmd.video).find(key => key.toLowerCase() === attrs.defaultattr)];\n\t\t\tvar matches, url;\n\t\t\tvar n = (attrs.defaultattr == 'dailymotion') ? 2 : 1;\n\t\t\tif (typeof params !== \"undefined\") {\n\t\t\t\tmatches = content.match(params['match']);\n\t\t\t\turl = matches ? params['url'] + matches[n] : false;\n\t\t\t}\n\t\t\tif (url) {\n\t\t\t\treturn params['html'].replace('{url}', url).replace('{src}', content).replace('{type}', attrs.defaultattr);\n\t\t\t}\n\t\t\treturn $.sceditor.escapeEntities(token.val + content + (token.closing ? token.closing.val : ''));\n\t\t}\n\t});\n\n\t$.sceditor.command.set('video', {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content, videourl, videotype, videoOpts;\n\n\t\t\t$.each(mybbCmd.video, function (provider, data) {\n\t\t\t\tvideoOpts += '<option value=\"' + provider.toLowerCase() + '\">' + editor._(provider) + '</option>';\n\t\t\t});\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"videotype\">' + editor._('Video Type:') + '</label> ' +\n\t\t\t\t'<select id=\"videotype\">' + videoOpts + '</select>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"link\">' + editor._('Video URL:') + '</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"videourl\" value=\"http://\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvideourl = $content.find('#videourl').val();\n\t\t\t\tvideotype = $content.find('#videotype').val();\n\n\t\t\t\tif (videourl !== '' && videourl !== 'http://')\n\t\t\t\t\teditor.insert('[video=' + videotype + ']' + videourl + '[/video]');\n\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertvideo', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\t$.sceditor.command.get('video')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: function (caller) {\n\t\t\t$.sceditor.command.get('video')._dropDown(this, caller);\n\t\t},\n\t\ttooltip: 'Insert a video'\n\t});\n\n\t// Update image command to support MyBB syntax\n\t$.sceditor.formats.bbcode.set('img', {\n\t\tformat: function (element, content) {\n\t\t\tif ($(element).data('sceditor-emoticon'))\n\t\t\t\treturn content;\n\n\t\t\tvar url = $(element).attr('src'),\n\t\t\t\twidth = $(element).attr('width'),\n\t\t\t\theight = $(element).attr('height'),\n\t\t\t\talign = $(element).data('scealign');\n\n\t\t\tvar attrs = width !== undefined && height !== undefined && width > 0 && height > 0\n\t\t\t\t? '=' + width + 'x' + height\n\t\t\t\t: ''\n\t\t\t;\n\n\t\t\tif (align === 'left' || align === 'right')\n\t\t\t\tattrs += ' align='+align\n\n\t\t\treturn '[img' + attrs + ']' + url + '[/img]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar\twidth, height, match,\n\t\t\t\talign = attrs.align,\n\t\t\t\tattribs = '';\n\n\t\t\t// handle [img=340x240]url[/img]\n\t\t\tif (attrs.defaultattr) {\n\t\t\t\tmatch = attrs.defaultattr.split(/x/i);\n\n\t\t\t\twidth  = match[0];\n\t\t\t\theight = (match.length === 2 ? match[1] : match[0]);\n\n\t\t\t\tif (width !== undefined && height !== undefined && width > 0 && height > 0) {\n\t\t\t\t\tattribs +=\n\t\t\t\t\t\t' width=\"' + $.sceditor.escapeEntities(width, true) + '\"' +\n\t\t\t\t\t\t' height=\"' + $.sceditor.escapeEntities(height, true) + '\"';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (align === 'left' || align === 'right')\n\t\t\t\tattribs += ' style=\"float: ' + align + '\" data-scealign=\"' + align + '\"';\n\n\t\t\treturn '<img' + attribs +\n\t\t\t\t' src=\"' + $.sceditor.escapeUriScheme(content) + '\" />';\n\t\t}\n\t})\n\n\t$.sceditor.command.set('image', {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"image\">' + editor._('URL') + ':</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"image\" placeholder=\"https://\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"width\">' + editor._('Width (optional)') + ':</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"width\" size=\"2\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"height\">' + editor._('Height (optional)') + ':</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"height\" size=\"2\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar url = $content.find('#image').val(),\n\t\t\t\t\twidth = $content.find('#width').val(),\n\t\t\t\t\theight = $content.find('#height').val()\n\t\t\t\t;\n\n\t\t\t\tvar attrs = width !== undefined && height !== undefined && width > 0 && height > 0\n\t\t\t\t\t? '=' + width + 'x' + height\n\t\t\t\t\t: ''\n\t\t\t\t;\n\n\t\t\t\tif (url)\n\t\t\t\t\teditor.insert('[img' + attrs + ']' + url + '[/img]');\n\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertimage', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\t$.sceditor.command.get('image')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: function (caller) {\n\t\t\t$.sceditor.command.get('image')._dropDown(this, caller);\n\t\t},\n\t});\n\n\t// Remove last bits of table, superscript/subscript, youtube and ltr/rtl support\n\t$.sceditor.command\n\t\t.remove('table').remove('subscript').remove('superscript').remove('youtube').remove('ltr').remove('rtl');\n\n\t$.sceditor.formats.bbcode\n\t\t.remove('table').remove('tr').remove('th').remove('td').remove('sub').remove('sup').remove('youtube').remove('ltr').remove('rtl');\n\n\t// Remove code and quote if in partial mode\n\tif (partialmode) {\n\t\t$.sceditor.formats.bbcode.remove('code').remove('php').remove('quote').remove('video').remove('img');\n\t\t$.sceditor.command\n\t\t\t.set('quote', {\n\t\t\t\texec: function () {\n\t\t\t\t\tthis.insert('[quote]', '[/quote]');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t// Fix url code\n\t$.sceditor.formats.bbcode.set('url', {\n\t\thtml: function (token, attrs, content) {\n\n\t\t\tif (!attrs.defaultattr)\n\t\t\t\tattrs.defaultattr = content;\n\n\t\t\treturn '<a href=\"' + $.sceditor.escapeUriScheme($.sceditor.escapeEntities(attrs.defaultattr)) + '\">' + content + '</a>';\n\t\t}\n\t});\n});\n"], "fixing_code": ["$(function ($) {\n\t'use strict';\n\n\tvar mybbCmd = {\n\t\talign: ['left', 'center', 'right', 'justify'],\n\t\tfsStr: ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'],\n\t\tfSize: [9, 12, 15, 17, 23, 31],\n\t\tvideo: {\n\t\t\t'Dailymotion': {\n\t\t\t\t'match': /(dailymotion\\.com\\/video\\/|dai\\.ly\\/)([^\\/]+)/,\n\t\t\t\t'url': '//www.dailymotion.com/embed/video/',\n\t\t\t\t'html': '<iframe frameborder=\"0\" width=\"480\" height=\"270\" src=\"{url}\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Facebook': {\n\t\t\t\t'match': /facebook\\.com\\/(?:photo.php\\?v=|video\\/video.php\\?v=|video\\/embed\\?video_id=|v\\/?)(\\d+)/,\n\t\t\t\t'url': 'https://www.facebook.com/video/embed?video_id=',\n\t\t\t\t'html': '<iframe src=\"{url}\" width=\"625\" height=\"350\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Liveleak': {\n\t\t\t\t'match': /liveleak\\.com\\/(?:view\\?[a-z]=)([^\\/]+)/,\n\t\t\t\t'url': 'http://www.liveleak.com/ll_embed?i=',\n\t\t\t\t'html': '<iframe width=\"500\" height=\"300\" src=\"{url}\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'MetaCafe': {\n\t\t\t\t'match': /metacafe\\.com\\/watch\\/([^\\/]+)/,\n\t\t\t\t'url': 'http://www.metacafe.com/embed/',\n\t\t\t\t'html': '<iframe src=\"{url}\" width=\"440\" height=\"248\" frameborder=0 data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Mixer': {\n\t\t\t\t'match': /mixer\\.com\\/([^\\/]+)/,\n\t\t\t\t'url': '//mixer.com/embed/player/',\n\t\t\t\t'html': '<iframe allowfullscreen=\"true\" src=\"{url}\" width=\"620\" height=\"349\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Vimeo': {\n\t\t\t\t'match': /vimeo.com\\/(\\d+)($|\\/)/,\n\t\t\t\t'url': '//player.vimeo.com/video/',\n\t\t\t\t'html': '<iframe src=\"{url}\" width=\"500\" height=\"281\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Youtube': {\n\t\t\t\t'match': /(?:v=|v\\/|embed\\/|youtu\\.be\\/)(.{11})/,\n\t\t\t\t'url': '//www.youtube.com/embed/',\n\t\t\t\t'html': '<iframe width=\"560\" height=\"315\" src=\"{url}\" frameborder=\"0\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t},\n\t\t\t'Twitch': {\n\t\t\t\t'match': /twitch\\.tv\\/(?:[\\w+_-]+)\\/v\\/(\\d+)/,\n\t\t\t\t'url': '//player.twitch.tv/?video=v',\n\t\t\t\t'html': '<iframe src=\"{url}\" frameborder=\"0\" scrolling=\"no\" height=\"378\" width=\"620\" data-mybb-vt=\"{type}\" data-mybb-vsrc=\"{src}\"></iframe>'\n\t\t\t}\n\t\t}\n\t};\n\n\t// Add custom MyBB CSS\n\t$('<style type=\"text/css\">' +\n\t\t'.sceditor-dropdown { text-align: ' + ($('body').css('direction') === 'rtl' ? 'right' : 'left') + '; }' +\n\t\t'</style>').appendTo('body');\n\n\t// Update editor to use align= as alignment\n\t$.sceditor.formats.bbcode\n\t\t.set('align', {\n\t\t\thtml: function (element, attrs, content) {\n\t\t\t\treturn '<div align=\"' + ($.sceditor.escapeEntities(attrs.defaultattr) || 'left') + '\">' + content + '</div>';\n\t\t\t},\n\t\t\tisInline: false\n\t\t});\n\t$.each(mybbCmd.align, function (i, val) {\n\t\t$.sceditor.formats.bbcode.set(val, {\n\t\t\tformat: '[align=' + val + ']{0}[/align]'\n\t\t});\n\t\t$.sceditor.command\n\t\t\t.set(val, {\n\t\t\t\ttxtExec: ['[align=' + val + ']', '[/align]']\n\t\t\t});\n\t});\n\n\t// Update font to support MyBB's BBCode dialect\n\t$.sceditor.formats.bbcode\n\t\t.set('list', {\n\t\t\thtml: function (element, attrs, content) {\n\t\t\t\tvar type = (attrs.defaultattr === '1' ? 'ol' : 'ul');\n\n\t\t\t\tif (attrs.defaultattr === 'a')\n\t\t\t\t\ttype = 'ol type=\"a\"';\n\n\t\t\t\treturn '<' + type + '>' + content + '</' + type + '>';\n\t\t\t},\n\n\t\t\tbreakAfter: false\n\t\t})\n\t\t.set('ul', {\n\t\t\tformat: '[list]{0}[/list]'\n\t\t})\n\t\t.set('ol', {\n\t\t\tformat: function ($elm, content) {\n\t\t\t\tvar type = ($($elm).attr('type') === 'a' ? 'a' : '1');\n\n\t\t\t\treturn '[list=' + type + ']' + content + '[/list]';\n\t\t\t}\n\t\t})\n\t\t.set('li', {\n\t\t\tformat: '[*]{0}',\n\t\t\texcludeClosing: true\n\t\t})\n\t\t.set('*', {\n\t\t\texcludeClosing: true,\n\t\t\tisInline: true\n\t\t});\n\n\t$.sceditor.command\n\t\t.set('bulletlist', {\n\t\t\ttxtExec: function (caller, selected) {\n\t\t\t\tvar content = '';\n\n\t\t\t\t$.each(selected.split(/\\r?\\n/), function () {\n\t\t\t\t\tcontent += (content ? '\\n' : '') +\n\t\t\t\t\t\t'[*]' + this;\n\t\t\t\t});\n\n\t\t\t\tthis.insertText('[list]\\n' + content + '\\n[/list]');\n\t\t\t}\n\t\t})\n\t\t.set('orderedlist', {\n\t\t\ttxtExec: function (caller, selected) {\n\t\t\t\tvar content = '';\n\n\t\t\t\t$.each(selected.split(/\\r?\\n/), function () {\n\t\t\t\t\tcontent += (content ? '\\n' : '') +\n\t\t\t\t\t\t'[*]' + this;\n\t\t\t\t});\n\n\t\t\t\tthis.insertText('[list=1]\\n' + content + '\\n[/list]');\n\t\t\t}\n\t\t});\n\n\t// Update size tag to use xx-small-xx-large instead of 1-7\n\t$.sceditor.formats.bbcode.set('size', {\n\t\tformat: function ($elm, content) {\n\t\t\tvar fontSize,\n\t\t\t\tsize = $($elm).attr('size');\n\n\t\t\tif (!size) {\n\t\t\t\tfontSize = $($elm).css('fontSize');\n\t\t\t\t// Most browsers return px value but IE returns 1-7\n\t\t\t\tif (fontSize.indexOf('px') > -1) {\n\t\t\t\t\t// convert size to an int\n\t\t\t\t\tfontSize = parseInt(fontSize);\n\t\t\t\t\tsize = 1;\n\t\t\t\t\t$.each(mybbCmd.fSize, function (i, val) {\n\t\t\t\t\t\tif (fontSize > val) size = i + 2;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsize = (~~fontSize) + 1;\n\t\t\t\t}\n\t\t\t\tsize = (size >= 7) ? mybbCmd.fsStr[6] : ((size <= 1) ? mybbCmd.fsStr[0] : mybbCmd.fsStr[size - 1]);\n\t\t\t} else {\n\t\t\t\tsize = mybbCmd.fsStr[size - 1];\n\t\t\t}\n\t\t\treturn '[size=' + size + ']' + content + '[/size]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar size = $.inArray(attrs.defaultattr, mybbCmd.fsStr) + 1;\n\t\t\tif (!isNaN(attrs.defaultattr)) {\n\t\t\t\tsize = attrs.defaultattr;\n\t\t\t\tif (size > 7)\n\t\t\t\t\tsize = 7;\n\t\t\t\tif (size < 1)\n\t\t\t\t\tsize = 1;\n\t\t\t}\n\t\t\tif (size < 0) {\n\t\t\t\tsize = 0;\n\t\t\t}\n\t\t\treturn '<font data-scefontsize=\"' + $.sceditor.escapeEntities(attrs.defaultattr) + '\" size=\"' + size + '\">' + content + '</font>';\n\t\t}\n\t});\n\n\t$.sceditor.command.set('size', {\n\t\t_dropDown: function (editor, caller, callback) {\n\t\t\tvar content = $('<div />'),\n\t\t\t\tclickFunc = function (e) {\n\t\t\t\t\tcallback($(this).data('size'));\n\t\t\t\t\teditor.closeDropDown(true);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t};\n\n\t\t\tfor (var i = 1; i <= 7; i++)\n\t\t\t\tcontent.append($('<a class=\"sceditor-fontsize-option\" data-size=\"' + i + '\" href=\"#\"><font size=\"' + i + '\">' + i + '</font></a>').on('click', clickFunc));\n\n\t\t\teditor.createDropDown(caller, 'fontsize-picker', content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\tvar editor = this;\n\n\t\t\t$.sceditor.command.get('size')._dropDown(\n\t\t\t\teditor,\n\t\t\t\tcaller,\n\t\t\t\tfunction (fontSize) {\n\t\t\t\t\teditor.execCommand('fontsize', fontSize);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\ttxtExec: function (caller) {\n\t\t\tvar editor = this;\n\n\t\t\t$.sceditor.command.get('size')._dropDown(\n\t\t\t\teditor,\n\t\t\t\tcaller,\n\t\t\t\tfunction (size) {\n\t\t\t\t\tsize = (~~size);\n\t\t\t\t\tsize = (size > 7) ? 7 : ((size < 1) ? 1 : size);\n\t\t\t\t\teditor.insertText('[size=' + mybbCmd.fsStr[size - 1] + ']', '[/size]');\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\t// Update quote to support pid and dateline\n\t$.sceditor.formats.bbcode.set('quote', {\n\t\tformat: function (element, content) {\n\t\t\tvar author = '',\n\t\t\t\t$elm = $(element),\n\t\t\t\t$cite = $elm.children('cite').first();\n\n\t\t\tif ($cite.length === 1 || $elm.data('author')) {\n\t\t\t\tauthor = $cite.text() || $elm.data('author');\n\n\t\t\t\t$elm.data('author', author);\n\t\t\t\t$cite.remove();\n\n\t\t\t\tcontent = this.elementToBbcode(element);\n\t\t\t\tauthor = '=' + author.replace(/(^\\s+|\\s+$)/g, '');\n\n\t\t\t\t$elm.prepend($cite);\n\t\t\t}\n\n\t\t\tif ($elm.data('pid'))\n\t\t\t\tauthor += \" pid='\" + $elm.data('pid') + \"'\";\n\n\t\t\tif ($elm.data('dateline'))\n\t\t\t\tauthor += \" dateline='\" + $elm.data('dateline') + \"'\";\n\n\t\t\treturn '[quote' + author + ']' + content + '[/quote]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar data = '';\n\n\t\t\tif (attrs.pid)\n\t\t\t\tdata += ' data-pid=\"' + $.sceditor.escapeEntities(attrs.pid) + '\"';\n\n\t\t\tif (attrs.dateline)\n\t\t\t\tdata += ' data-dateline=\"' + $.sceditor.escapeEntities(attrs.dateline) + '\"';\n\n\t\t\tif (typeof attrs.defaultattr !== \"undefined\")\n\t\t\t\tcontent = '<cite>' + $.sceditor.escapeEntities(attrs.defaultattr).replace(/ /g, '&nbsp;') + '</cite>' + content;\n\n\t\t\treturn '<blockquote' + data + '>' + content + '</blockquote>';\n\t\t},\n\t\tquoteType: function (val, name) {\n\t\t\tvar quoteChar = val.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n\t\t\treturn quoteChar + val + quoteChar;\n\t\t},\n\t\tbreakStart: true,\n\t\tbreakEnd: true\n\t});\n\n\t// Update font tag to allow limiting to only first in stack\n\t$.sceditor.formats.bbcode.set('font', {\n\t\tformat: function (element, content) {\n\t\t\tvar font;\n\t\t\tif (element.nodeName.toLowerCase() !== 'font' || !(font = $(element).attr('face')))\n\t\t\t\tfont = $(element).css('font-family');\n\n\n\t\t\tif (typeof font == 'string' && font != '' && font != 'defaultattr') {\n\t\t\t\treturn '[font=' + this.stripQuotes(font) + ']' + content + '[/font]';\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tif (typeof attrs.defaultattr == 'string' && attrs.defaultattr != '' && attrs.defaultattr != '{defaultattr}') {\n\t\t\t\treturn '<font face=\"' +\n\t\t\t\t\t$.sceditor.escapeEntities(attrs.defaultattr) +\n\t\t\t\t\t'\">' + content + '</font>';\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}\n\t});\n\n\t// Add MyBB PHP command\n\t$.sceditor.formats.bbcode.set('php', {\n\t\tallowsEmpty: true,\n\t\tisInline: false,\n\t\tallowedChildren: ['#', '#newline'],\n\t\tformat: '[php]{0}[/php]',\n\t\thtml: '<code class=\"phpcodeblock\">{0}</code>'\n\t});\n\n\t$.sceditor.command.set(\"php\", {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"php\">' + editor._('PHP') + ':</label> ' +\n\t\t\t\t'<textarea type=\"text\" id=\"php\"></textarea>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t$content.find('#php').trigger('focus');\n\t\t\t}, 100);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar val = $content.find('#php').val(),\n\t\t\t\t\tbefore = '[php]',\n\t\t\t\t\tend = '[/php]';\n\n\t\t\t\tif (val) {\n\t\t\t\t\tbefore = before + val + end;\n\t\t\t\t\tend = null;\n\t\t\t\t}\n\n\t\t\t\teditor.insert(before, end);\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertphp', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\tif ($.trim(this.getRangeHelper().selectedRange())) {\n\t\t\t\tthis.insert('[php]', '[/php]');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.sceditor.command.get('php')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: ['[php]', '[/php]'],\n\t\ttooltip: \"PHP\"\n\t});\n\n\t// Update code to support PHP\n\t$.sceditor.formats.bbcode.set('code', {\n\t\tallowsEmpty: true,\n\t\ttags: {\n\t\t\tcode: null\n\t\t},\n\t\tisInline: false,\n\t\tallowedChildren: ['#', '#newline'],\n\t\tformat: function (element, content) {\n\t\t\tif ($(element).hasClass('phpcodeblock')) {\n\t\t\t\treturn '[php]' + content + '[/php]';\n\t\t\t}\n\t\t\treturn '[code]' + content + '[/code]';\n\t\t},\n\t\thtml: '<code>{0}</code>'\n\t});\n\n\t$.sceditor.command.set(\"code\", {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"code\">' + editor._('Code') + ':</label> ' +\n\t\t\t\t'<textarea type=\"text\" id=\"code\"></textarea>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t$content.find('#code').trigger('focus');\n\t\t\t}, 100);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar val = $content.find('#code').val(),\n\t\t\t\t\tbefore = '[code]',\n\t\t\t\t\tend = '[/code]';\n\n\t\t\t\tif (val) {\n\t\t\t\t\tbefore = before + val + end;\n\t\t\t\t\tend = null;\n\t\t\t\t}\n\n\t\t\t\teditor.insert(before, end);\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertcode', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\tif ($.trim(this.getRangeHelper().selectedRange())) {\n\t\t\t\tthis.insert('[code]', '[/code]');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.sceditor.command.get('code')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: ['[code]', '[/code]'],\n\t});\n\n\t// Update email to support description\n\t$.sceditor.command.set('email', {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"email\">' + editor._('E-mail:') + '</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"email\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"des\">' + editor._('Description (optional):') + '</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"des\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar val = $content.find('#email').val(),\n\t\t\t\t\tdescription = $content.find('#des').val();\n\n\t\t\t\tif (val) {\n\t\t\t\t\t// needed for IE to reset the last range\n\t\t\t\t\t$(editor).trigger('focus');\n\n\t\t\t\t\tif (!editor.getRangeHelper().selectedHtml() || description) {\n\t\t\t\t\t\tif (!description)\n\t\t\t\t\t\t\tdescription = val;\n\n\t\t\t\t\t\teditor.insert('[email=' + val + ']' + description + '[/email]');\n\t\t\t\t\t} else\n\t\t\t\t\t\teditor.execCommand('createlink', 'mailto:' + val);\n\t\t\t\t}\n\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertemail', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\t$.sceditor.command.get('email')._dropDown(this, caller);\n\t\t}\n\t});\n\n\t// Add MyBB video command\n\t$.sceditor.formats.bbcode.set('video', {\n\t\tallowsEmpty: true,\n\t\tallowedChildren: ['#', '#newline'],\n\t\ttags: {\n\t\t\tiframe: {\n\t\t\t\t'data-mybb-vt': null\n\t\t\t}\n\t\t},\n\t\tformat: function ($element, content) {\n\t\t\treturn '[video=' + $($element).data('mybb-vt') + ']' + $($element).data('mybb-vsrc') + '[/video]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar params = mybbCmd.video[Object.keys(mybbCmd.video).find(key => key.toLowerCase() === attrs.defaultattr)];\n\t\t\tvar matches, url;\n\t\t\tvar n = (attrs.defaultattr == 'dailymotion') ? 2 : 1;\n\t\t\tif (typeof params !== \"undefined\") {\n\t\t\t\tmatches = content.match(params['match']);\n\t\t\t\turl = matches ? params['url'] + matches[n] : false;\n\t\t\t}\n\t\t\tif (url) {\n\t\t\t\treturn params['html'].replace('{url}', url).replace('{src}', content).replace('{type}', attrs.defaultattr);\n\t\t\t}\n\t\t\treturn $.sceditor.escapeEntities(token.val + content + (token.closing ? token.closing.val : ''));\n\t\t}\n\t});\n\n\t$.sceditor.command.set('video', {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content, videourl, videotype, videoOpts;\n\n\t\t\t$.each(mybbCmd.video, function (provider, data) {\n\t\t\t\tvideoOpts += '<option value=\"' + provider.toLowerCase() + '\">' + editor._(provider) + '</option>';\n\t\t\t});\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"videotype\">' + editor._('Video Type:') + '</label> ' +\n\t\t\t\t'<select id=\"videotype\">' + videoOpts + '</select>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"link\">' + editor._('Video URL:') + '</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"videourl\" value=\"http://\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div><input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" /></div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvideourl = $content.find('#videourl').val();\n\t\t\t\tvideotype = $content.find('#videotype').val();\n\n\t\t\t\tif (videourl !== '' && videourl !== 'http://')\n\t\t\t\t\teditor.insert('[video=' + videotype + ']' + videourl + '[/video]');\n\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertvideo', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\t$.sceditor.command.get('video')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: function (caller) {\n\t\t\t$.sceditor.command.get('video')._dropDown(this, caller);\n\t\t},\n\t\ttooltip: 'Insert a video'\n\t});\n\n\t// Update image command to support MyBB syntax\n\t$.sceditor.formats.bbcode.set('img', {\n\t\tformat: function (element, content) {\n\t\t\tif ($(element).data('sceditor-emoticon'))\n\t\t\t\treturn content;\n\n\t\t\tvar url = $(element).attr('src'),\n\t\t\t\twidth = $(element).attr('width'),\n\t\t\t\theight = $(element).attr('height'),\n\t\t\t\talign = $(element).data('scealign');\n\n\t\t\tvar attrs = width !== undefined && height !== undefined && width > 0 && height > 0\n\t\t\t\t? '=' + width + 'x' + height\n\t\t\t\t: ''\n\t\t\t;\n\n\t\t\tif (align === 'left' || align === 'right')\n\t\t\t\tattrs += ' align='+align\n\n\t\t\treturn '[img' + attrs + ']' + url + '[/img]';\n\t\t},\n\t\thtml: function (token, attrs, content) {\n\t\t\tvar\twidth, height, match,\n\t\t\t\talign = attrs.align,\n\t\t\t\tattribs = '';\n\n\t\t\t// handle [img=340x240]url[/img]\n\t\t\tif (attrs.defaultattr) {\n\t\t\t\tmatch = attrs.defaultattr.split(/x/i);\n\n\t\t\t\twidth  = match[0];\n\t\t\t\theight = (match.length === 2 ? match[1] : match[0]);\n\n\t\t\t\tif (width !== undefined && height !== undefined && width > 0 && height > 0) {\n\t\t\t\t\tattribs +=\n\t\t\t\t\t\t' width=\"' + $.sceditor.escapeEntities(width, true) + '\"' +\n\t\t\t\t\t\t' height=\"' + $.sceditor.escapeEntities(height, true) + '\"';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (align === 'left' || align === 'right')\n\t\t\t\tattribs += ' style=\"float: ' + align + '\" data-scealign=\"' + align + '\"';\n\n\t\t\treturn '<img' + attribs +\n\t\t\t\t' src=\"' + $.sceditor.escapeUriScheme(content) + '\" />';\n\t\t}\n\t})\n\n\t$.sceditor.command.set('image', {\n\t\t_dropDown: function (editor, caller) {\n\t\t\tvar $content;\n\n\t\t\t$content = $(\n\t\t\t\t'<div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"image\">' + editor._('URL') + ':</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"image\" placeholder=\"https://\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"width\">' + editor._('Width (optional)') + ':</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"width\" size=\"2\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<label for=\"height\">' + editor._('Height (optional)') + ':</label> ' +\n\t\t\t\t'<input type=\"text\" id=\"height\" size=\"2\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t'<input type=\"button\" class=\"button\" value=\"' + editor._('Insert') + '\" />' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\n\t\t\t$content.find('.button').on('click', function (e) {\n\t\t\t\tvar url = $content.find('#image').val(),\n\t\t\t\t\twidth = $content.find('#width').val(),\n\t\t\t\t\theight = $content.find('#height').val()\n\t\t\t\t;\n\n\t\t\t\tvar attrs = width !== undefined && height !== undefined && width > 0 && height > 0\n\t\t\t\t\t? '=' + width + 'x' + height\n\t\t\t\t\t: ''\n\t\t\t\t;\n\n\t\t\t\tif (url)\n\t\t\t\t\teditor.insert('[img' + attrs + ']' + url + '[/img]');\n\n\t\t\t\teditor.closeDropDown(true);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\teditor.createDropDown(caller, 'insertimage', $content.get(0));\n\t\t},\n\t\texec: function (caller) {\n\t\t\t$.sceditor.command.get('image')._dropDown(this, caller);\n\t\t},\n\t\ttxtExec: function (caller) {\n\t\t\t$.sceditor.command.get('image')._dropDown(this, caller);\n\t\t},\n\t});\n\n\t// Remove last bits of table, superscript/subscript, youtube and ltr/rtl support\n\t$.sceditor.command\n\t\t.remove('table').remove('subscript').remove('superscript').remove('youtube').remove('ltr').remove('rtl');\n\n\t$.sceditor.formats.bbcode\n\t\t.remove('table').remove('tr').remove('th').remove('td').remove('sub').remove('sup').remove('youtube').remove('ltr').remove('rtl');\n\n\t// Remove code and quote if in partial mode\n\tif (partialmode) {\n\t\t$.sceditor.formats.bbcode.remove('code').remove('php').remove('quote').remove('video').remove('img');\n\t\t$.sceditor.command\n\t\t\t.set('quote', {\n\t\t\t\texec: function () {\n\t\t\t\t\tthis.insert('[quote]', '[/quote]');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t// Fix url code\n\t$.sceditor.formats.bbcode.set('url', {\n\t\thtml: function (token, attrs, content) {\n\n\t\t\tif (!attrs.defaultattr)\n\t\t\t\tattrs.defaultattr = content;\n\n\t\t\treturn '<a href=\"' + $.sceditor.escapeUriScheme($.sceditor.escapeEntities(attrs.defaultattr)) + '\">' + content + '</a>';\n\t\t}\n\t});\n});\n"], "filenames": ["jscripts/bbcodes_sceditor.js"], "buggy_code_start_loc": [61], "buggy_code_end_loc": [284], "fixing_code_start_loc": [61], "fixing_code_end_loc": [283], "type": "CWE-79", "message": "In MyBB before version 1.8.24, the custom MyCode (BBCode) for the visual editor doesn't escape input properly when rendering HTML, resulting in a DOM-based XSS vulnerability. The weakness can be exploited by pointing a victim to a page where the visual editor is active (e.g. as a post or Private Message) and operates on a maliciously crafted MyCode message. This may occur on pages where message content is pre-filled using a GET/POST parameter, or on reply pages where a previously saved malicious message is quoted. After upgrading MyBB to 1.8.24, make sure to update the version attribute in the `codebuttons` template for non-default themes to serve the latest version of the patched `jscripts/bbcodes_sceditor.js` file.", "other": {"cve": {"id": "CVE-2020-15139", "sourceIdentifier": "security-advisories@github.com", "published": "2020-08-10T22:15:14.223", "lastModified": "2020-08-13T15:58:27.337", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "In MyBB before version 1.8.24, the custom MyCode (BBCode) for the visual editor doesn't escape input properly when rendering HTML, resulting in a DOM-based XSS vulnerability. The weakness can be exploited by pointing a victim to a page where the visual editor is active (e.g. as a post or Private Message) and operates on a maliciously crafted MyCode message. This may occur on pages where message content is pre-filled using a GET/POST parameter, or on reply pages where a previously saved malicious message is quoted. After upgrading MyBB to 1.8.24, make sure to update the version attribute in the `codebuttons` template for non-default themes to serve the latest version of the patched `jscripts/bbcodes_sceditor.js` file."}, {"lang": "es", "value": "En MyBB anterior a la versi\u00f3n 1.8.24, el MyCode (BBCode) personalizado para el editor visual no escapa la entrada correctamente cuando renderiza HTML, lo que genera una vulnerabilidad de tipo XSS basada en DOM. La debilidad puede ser explotada se\u00f1alando a la v\u00edctima a una p\u00e1gina donde el editor visual est\u00e1 activo (por ejemplo, como una publicaci\u00f3n o un Mensaje Privado) y opera en un mensaje MyCode dise\u00f1ado con fines maliciosos. Esto puede ocurrir en p\u00e1ginas donde el contenido del mensaje se rellena previamente usando un par\u00e1metro GET/POST, o en p\u00e1ginas de respuesta donde un mensaje malicioso previamente guardado es citado. Despu\u00e9s de actualizar MyBB a la versi\u00f3n 1.8.24, aseg\u00farese de actualizar el atributo de versi\u00f3n en la plantilla \"codebuttons\" para que los temas no predeterminados sirvan la \u00faltima versi\u00f3n del archivo \"jscripts/bbcodes_sceditor.js\" parcheado"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:mybb:mybb:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.8.24", "matchCriteriaId": "C4357014-50F7-4CE1-A839-1853651C2685"}]}]}], "references": [{"url": "https://github.com/mybb/mybb/commit/37ad29dcd25489a37bdd89ebac761f22492558b0", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/mybb/mybb/security/advisories/GHSA-37h7-vfv6-f8rj", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://mybb.com/versions/1.8.24/", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/mybb/mybb/commit/37ad29dcd25489a37bdd89ebac761f22492558b0"}}