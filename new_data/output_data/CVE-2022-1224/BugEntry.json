{"buggy_code": ["<?php\n\n/**\n *\tGenerate hostfile dump for /etc/hosts\n *********************************/\n\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Sections\t= new Sections ($Database);\n$Subnets\t= new Subnets ($Database);\n$Addresses\t= new Addresses ($Database);\n$Tools\t\t= new Tools ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n\n//set filename\n$filename = \"phpipam_hosts_\". date(\"Y-m-d\");\n\n//fetch all addresses with hostname set\n$hosts = $Tools->fetch_addresses_for_export();\n\n//loop\nif(sizeof($hosts)>0) {\n\t//details\n\t$m=0;\n\tforeach($hosts as $host) {\n\t\t//fetch subnet and section details on change!\n\t\tif(@$hosts[$m-1]->subnetId!=$hosts[$m]->subnetId) {\n\t\t\t$subnet  = (array) $Subnets->fetch_subnet(null, $host->subnetId);\n\t\t\t$section = (array) $Sections->fetch_section(null, $subnet['sectionId']);\n\n\t\t\t//first print subnet and section details\n\t\t\t$res[] = \"# $subnet[description] (\".$Subnets->transform_to_dotted($subnet['subnet']).\"/$subnet[mask]) - $section[description]\";\n\t\t}\n\n\t\t//than address details\n\t\t$diff = 17 - strlen($Subnets->transform_to_dotted($host->ip_addr));\t//for print offset\n\t\t$diff>0 ? : $diff = 3;\t\t\t\t\t\t\t\t\t\t\t\t//IPv6 print offset\n\n\t\t$res[] = $Subnets->transform_to_dotted($host->ip_addr).str_repeat(\" \", $diff).\"$host->hostname\";\n\n\t\t//break\n\t\tif($hosts[$m]->subnetId!=@$hosts[$m+1]->subnetId) {\n\t\t$res[] = \"\";\n\t\t}\n\n\t\t$m++;\t\t//next index\n\t}\n}\n\n# join content\n$content = implode(\"\\n\", $res);\n\n\n# headers\nheader(\"Cache-Control: private\");\nheader(\"Content-Description: File Transfer\");\nheader('Content-type: application/octet-stream');\nheader('Content-Disposition: attachment; filename=\"'. $filename .'\"');\n\nprint($content);", "<?php\n\n/**\n *\tGenerate XLS file\n *********************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n\n# verify that user is logged in\n$User->check_user_session();\n\n$mysqldump = Config::get('mysqldump_cli_binary', '/usr/bin/mysqldump');\n\nif ( !file_exists($mysqldump) ) {\n    $filename = \"error_message.txt\";\n\n    $content  = _(\"Unable to locate executable: \").$mysqldump.\"\\n\";\n    $content .= _(\"Please configure \\$mysqldump_cli_binary in config.php\\n\");\n} else {\n    $filename = \"phpipam_MySQL_dump_\". date(\"Y-m-d\") .\".sql\";\n\n    $db = Config::get('db');\n\n    $command      = \"$mysqldump --opt -h '\". $db['host'] .\"' -u '\". $db['user'] .\"' -p'\". $db['pass'] .\"' '\". $db['name'] .\"'\";\n    $command_safe = \"$mysqldump --opt -h '\". $db['host'] .\"' -u '\". \"<REDACTED>\" .\"' -p'\". \"<REDACTED>\" .\"' '\". $db['name'] .\"'\";\n\n    $content  = \"# phpipam Database dump \\n\";\n    $content .= \"#    command executed: $command_safe \\n\";\n    $content .= \"# --------------------- \\n\\n\";\n    $content .= shell_exec($command);\n}\n\nheader(\"Cache-Control: private\");\nheader(\"Content-Description: File Transfer\");\nheader(\"Content-Type: application/octet-stream\");\nheader('Content-Disposition: attachment; filename=\"'. $filename .'\"');\nheader(\"Content-Length: \" . strlen($content));\n\nprint($content);\n", "<?php\n\n/**\n *\tGenerate XLS file\n *********************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\nrequire( dirname(__FILE__) . '/../../../functions/PEAR/Spreadsheet/Excel/Writer.php');\n\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Sections\t= new Sections ($Database);\n$Subnets\t= new Subnets ($Database);\n$Addresses\t= new Addresses ($Database);\n$Tools\t\t= new Tools ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n\n\n// Create a workbook\n$filename = \"phpipam_IP_adress_export_\". date(\"Y-m-d\") .\".xls\";\n$workbook = new Spreadsheet_Excel_Writer();\n$workbook->setVersion(8);\n\n//fetch sections, and for each section write new tab, inside tab write all values!\n$sections = $Sections->fetch_sections();\n\n//we need to reformat state!\n$ip_types = $Addresses->addresses_types_fetch();\n//fetch devices and reorder\n$devices = $Tools->fetch_all_objects(\"devices\", \"hostname\");\n$devices_indexed = array();\nif ($devices!==false) {\n    foreach($devices as $d) {\n    \t$devices_indexed[$d->id] = $d;\n    }\n}\n\n\n\n//get all custom fields!\n# fetch custom fields\n$myFields = $Tools->fetch_custom_fields('ipaddresses');\n$myFieldsSize = sizeof($myFields);\n\n$colSize = 8 + $myFieldsSize;\n\n//formatting headers\n$format_header = $workbook->addFormat();\n$format_header->setBold();\n$format_header->setColor('white');\n$format_header->setFgColor('black');\n\n//formatting titles\n$format_title = $workbook->addFormat();\n$format_title->setColor('black');\n$format_title->setFgColor(22);\t\t\t//light gray\n$format_title->setBottom(2);\n$format_title->setLeft(1);\n$format_title->setRight(1);\n$format_title->setTop(1);\n$format_title->setAlign('left');\n\n//formatting content - borders around IP addresses\n$format_right = $workbook->addFormat();\n$format_right->setRight(1);\n$format_left = $workbook->addFormat();\n$format_left->setLeft(1);\n$format_top = $workbook->addFormat();\n$format_top->setTop(1);\n\n\nforeach ($sections as $section) {\n\t//cast\n\t$section = (array) $section;\n\t// Create a worksheet\n\t$worksheet_name = $Tools->shorten_text($section['name'], 30);\n\t$worksheet =& $workbook->addWorksheet($worksheet_name);\n\t$worksheet->setInputEncoding(\"utf-8\");\n\n\t//get all subnets in this section\n\t$subnets = $Subnets->fetch_section_subnets ($section['id']);\n\n\t$lineCount = 0;\n\t//Write titles\n\tforeach ($subnets as $subnet) {\n\t\t//cast\n\t\t$subnet = (array) $subnet;\n\t\t//ignore folders!\n\t\tif($subnet['isFolder']!=\"1\") {\n\t\t\t//vlan details\n\t\t\t$vlan = (array) $Tools->fetch_object(\"vlans\", \"vlanId\", $subnet['vlanId']);\n\t\t\tif(strlen($vlan['number']) > 0) {\n\t\t\t\t$vlanText = \" (vlan: \" . $vlan['number'];\n\t\t\t\tif(strlen($vlan['name']) > 0) {\n\t\t\t\t\t$vlanText .= ' - '. $vlan['name'] . ')';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$vlanText .= \")\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$vlanText = \"\";\n\t\t\t}\n\n\t\t\t$worksheet->write($lineCount, 0, $Subnets->transform_to_dotted($subnet['subnet']) . \"/\" .$subnet['mask'] . \" - \" . $subnet['description'] . $vlanText, $format_header );\n\t\t\t$worksheet->mergeCells($lineCount, 0, $lineCount, $colSize);\n\n\t\t\t$lineCount++;\n\n\t\t\t//IP addresses in subnet\n\t\t\t$ipaddresses = $Addresses->fetch_subnet_addresses ($subnet['id']);\n\n\t\t\t//write headers\n\t\t\t$worksheet->write($lineCount, 0, _('ip address' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 1, _('ip state' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 2, _('description' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 3, _('hostname' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 4, _('mac' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 5, _('owner' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 6, _('device' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 7, _('port' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 8, _('note' ),$format_title);\n\t\t\t$m = 9;\n\t\t\t//custom\n\t\t\tif(sizeof($myFields) > 0) {\n\t\t\t\tforeach($myFields as $myField) {\n\t\t\t\t\t$worksheet->write($lineCount, $m, $myField['name'] ,$format_title);\n\t\t\t\t\t$m++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$lineCount++;\n\n\t\t\tif(is_array($ipaddresses) && sizeof($ipaddresses) > 0) {\n\n\t\t\tforeach ($ipaddresses as $ip) {\n\t\t\t\t//cast\n\t\t\t\t$ip = (array) $ip;\n\n\t\t\t\t//reformat state\n\t\t\t\tif(@$ip_types[$ip['state']]['showtag']==1) \t{ $ip['state'] = $ip_types[$ip['state']]['type']; }\n\t\t\t\telse\t\t\t\t\t\t\t\t\t\t{ $ip['state'] = \"\"; }\n\n\t\t\t\t//change switch ID to name\n\t\t\t\t$ip['switch'] = is_null($ip['switch'])||strlen($ip['switch'])==0||$ip['switch']==0 ? \"\" : $devices_indexed[$ip['switch']]->hostname;\n\n\t\t\t\t$worksheet->write($lineCount, 0, $Subnets->transform_to_dotted($ip['ip_addr']), $format_left);\n\t\t\t\t$worksheet->write($lineCount, 1, $ip['state']);\n\t\t\t\t$worksheet->write($lineCount, 2, $ip['description']);\n\t\t\t\t$worksheet->write($lineCount, 3, $ip['hostname']);\n\t\t\t\t$worksheet->write($lineCount, 4, $ip['mac']);\n\t\t\t\t$worksheet->write($lineCount, 5, $ip['owner']);\n\t\t\t\t$worksheet->write($lineCount, 6, $ip['switch']);\n\t\t\t\t$worksheet->write($lineCount, 7, $ip['port']);\n\t\t\t\t$worksheet->write($lineCount, 8, $ip['note']);\n\t\t\t\t//custom\n\t\t\t\t$m = 9;\n\t\t\t\tif(sizeof($myFields) > 0) {\n\t\t\t\t\tforeach($myFields as $myField) {\n\t\t\t\t\t\t$worksheet->write($lineCount, $m, $ip[$myField['name']]);\n\t\t\t\t\t\t$m++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$lineCount++;\n\t\t\t}\n\n\t\t}\n\t\t\telse {\n\t\t\t\t$worksheet->write($lineCount, 0, _('No hosts'));\n\t\t\t\t$lineCount++;\n\t\t\t}\n\n\t\t\t//new line\n\t\t\t$lineCount++;\n\t\t}\n\t}\n}\n\n// sending HTTP headers\n$workbook->send($filename);\n\n// Let's send the file\n$workbook->close();", "<?php\n\n# required functions\nif(!is_object(@$User)) {\n\trequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\t# classes\n\t$Database\t= new Database_PDO;\n\t$User \t\t= new User ($Database);\n\t$Tools \t\t= new Tools ($Database);\n\t$Log\t\t= new Logging ($Database);\n\t$Result\t\t= new Result ();\n}\n\n# user must be authenticated\n$User->check_user_session ();\n\n# if direct request that redirect to tools page\nif($_SERVER['HTTP_X_REQUESTED_WITH']!=\"XMLHttpRequest\")\t{\n\theader(\"Location: \".create_link(\"tools\",\"logs\"));\n}\n\n# if syslog print\nif ($User->settings->log==\"syslog\") {\n\t$Result->show(\"warning\", _(\"Log files are sent to syslog\"));\n}\nelse {\n\t# print last 5 access logs\n\t$logs = $Log->fetch_logs(5, NULL, NULL, NULL, \"on\", \"off\", \"off\");\n\tif (!is_array($logs)) { $logs = array(); }\n\n\tprint \"<table class='table table-condensed table-hover table-top'>\";\n\n\t# headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('Severity').\"</th>\";\n\tprint \"\t<th>\"._('Command').\"</th>\";\n\tprint \"\t<th>\"._('Date').\"</th>\";\n\tprint \"\t<th>\"._('Username').\"</th>\";\n\tprint \"</tr>\";\n\n\t# logs\n\tforeach($logs as $log) {\n\t\t# cast\n\t\t$log = (array) $log;\n\t\t# reformat severity\n\t\tif($log['severity'] == 0)\t\t{ $log['severityText'] = _(\"Info\"); }\n\t\telse if($log['severity'] == 1)\t{ $log['severityText'] = _(\"Warn\"); }\n\t\telse if($log['severity'] == 2)\t{ $log['severityText'] = _(\"Err\"); }\n\n\t\tprint \"<tr>\";\n\t\tprint \"\t<td><span class='severity$log[severity]'>$log[severityText]</span></td>\";\n\t\tprint \"\t<td><a class='openLogDetail' data-logid='$log[id]'>$log[command]</a></td>\";\n\t\tprint \"\t<td>$log[date]</td>\";\n\t\tprint \"\t<td>$log[username]</td>\";\n\n\t\tprint \"</tr>\";\n\t}\n\n\tprint \"</table>\";\n\n\t# print if none\n\tif(sizeof($logs) == 0) {\n\t\tprint \"<blockquote style='margin-top:20px;margin-left:20px;'>\";\n\t\tprint \"<p>\"._(\"No logs available\").\"</p>\";\n\t\tprint \"</blockquote>\";\n\t}\n}\n?>", "<?php\n\n# required functions\nif(!is_object(@$User)) {\n\trequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\t# classes\n\t$Database\t= new Database_PDO;\n\t$User \t\t= new User ($Database);\n\t$Tools \t\t= new Tools ($Database);\n\t$Log\t\t= new Logging ($Database);\n\t$Result\t\t= new Result ();\n}\n\n# user must be authenticated\n$User->check_user_session ();\n\n# if direct request that redirect to tools page\nif($_SERVER['HTTP_X_REQUESTED_WITH']!=\"XMLHttpRequest\")\t{\n\theader(\"Location: \".create_link(\"tools\",\"logs\"));\n}\n\n# if syslog print\nif ($User->settings->log==\"syslog\") {\n\t$Result->show(\"warning\", _(\"Log files are sent to syslog\"));\n}\nelse {\n\t# print last 5 access logs\n\t$logs = $Log->fetch_logs(5, NULL, NULL, NULL, \"off\", \"on\", \"on\");\n\tif (!is_array($logs)) { $logs = array(); }\n\n\tprint \"<table class='table table-condensed table-hover table-top'>\";\n\n\t# headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('Severity').\"</th>\";\n\tprint \"\t<th>\"._('Command').\"</th>\";\n\tprint \"\t<th>\"._('Date').\"</th>\";\n\tprint \"\t<th>\"._('Username').\"</th>\";\n\tprint \"</tr>\";\n\n\t# logs\n\tforeach($logs as $log) {\n\t\t# cast\n\t\t$log = (array) $log;\n\t\t# reformat severity\n\t\tif($log['severity'] == 0)\t\t{ $log['severityText'] = _(\"Info\"); }\n\t\telse if($log['severity'] == 1)\t{ $log['severityText'] = _(\"Warn\"); }\n\t\telse if($log['severity'] == 2)\t{ $log['severityText'] = _(\"Err\"); }\n\n\t\tprint \"<tr>\";\n\t\tprint \"\t<td><span class='severity$log[severity]'>$log[severityText]</span></td>\";\n\t\tprint \"\t<td><a class='openLogDetail' data-logid='$log[id]'>$log[command]</a></td>\";\n\t\tprint \"\t<td>$log[date]</td>\";\n\t\tprint \"\t<td>$log[username]</td>\";\n\n\t\tprint \"</tr>\";\n\t}\n\n\tprint \"</table>\";\n\n\t# print if none\n\tif(sizeof($logs) == 0) {\n\t\tprint \"<blockquote style='margin-top:20px;margin-left:20px;'>\";\n\t\tprint \"<p>\"._(\"No logs available\").\"</p>\";\n\t\tprint \"</blockquote>\";\n\t}\n}\n?>", "<?php\n\n/**\n *\tGenerate XLS file for subnet\n *********************************/\n\n# include required scripts\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\nrequire( dirname(__FILE__) . '/../../../functions/PEAR/Spreadsheet/Excel/Writer.php');\n\n# initialize required objects\n$Database \t= new Database_PDO;\n$Result\t\t= new Result;\n$User\t\t= new User ($Database);\n$Subnets\t= new Subnets ($Database);\n$Tools\t    = new Tools ($Database);\n$Addresses\t= new Addresses ($Database);\n\n# verify that user is logged in\n$User->check_user_session();\n\n# we dont need any errors!\nini_set('display_errors', 0);\nini_set('display_startup_errors', 0);\nerror_reporting(E_ALL ^ E_NOTICE ^ E_STRICT);\n\n# fetch subnet details\n$subnet = (array) $Tools->fetch_object (\"subnets\", \"id\", $_GET['subnetId']);\n# fetch all IP addresses in subnet\n$addresses = $Addresses->fetch_subnet_addresses ($_GET['subnetId'], \"ip_addr\", \"asc\");\nif (!is_array($addresses)) { $addresses = array(); }\n# get all custom fields\n$custom_fields = $Tools->fetch_custom_fields ('ipaddresses');\n\n\n# Create a workbook\n$filename = isset($_GET['filename'])&&strlen(@$_GET['filename'])>0 ? $_GET['filename'] : \"phpipam_subnet_export.xls\";\n$workbook = new Spreadsheet_Excel_Writer();\n$workbook->setVersion(8);\n\n//formatting headers\n$format_header =& $workbook->addFormat();\n$format_header->setBold();\n$format_header->setColor('black');\n$format_header->setSize(12);\n\n//format vlan\n$format_vlan =& $workbook->addFormat();\n$format_vlan->setColor('black');\n$format_vlan->setSize(11);\n\n\n//formatting titles\n$format_title =& $workbook->addFormat();\n$format_title->setColor('black');\n$format_title->setFgColor(22);\t\t\t//light gray\n$format_title->setBottom(1);\n$format_title->setTop(1);\n$format_title->setAlign('left');\n\n//formatting content - borders around IP addresses\n$format_right =& $workbook->addFormat();\n$format_right->setRight(1);\n$format_left =& $workbook->addFormat();\n$format_left->setLeft(1);\n$format_top =& $workbook->addFormat();\n$format_top->setTop(1);\n\n\n// Create a worksheet\n$worksheet_name = strlen($subnet['description']) > 30 ? substr($subnet['description'],0,27).'...' : $subnet['description'];\n$worksheet =& $workbook->addWorksheet($worksheet_name);\n$worksheet->setInputEncoding(\"utf-8\");\n\n$lineCount = 0;\n$rowCount  = 0;\n\n# Write title - subnet details\n$worksheet->write($lineCount, $rowCount, $subnet['description'], $format_header );\n$lineCount++;\n$worksheet->write($lineCount, $rowCount, $Subnets->transform_address($subnet['subnet'],\"dotted\") . \"/\" .$subnet['mask'], $format_header );\n$lineCount++;\n\n# write VLAN details\n$vlan = $Tools->fetch_object(\"vlans\", \"vlanId\", $subnet['vlanId']);\nif($vlan!=false) {\n\t$vlan = (array) $vlan;\n\t$vlan_text = strlen($vlan['name'])>0 ? \"vlan: $vlan[number] - $vlan[name]\" : \"vlan: $vlan[number]\";\n\n\t$worksheet->write($lineCount, $rowCount, $vlan_text, $format_vlan );\n\t$lineCount++;\n}\n$lineCount++;\n\n//set row count\n$rowCount = 0;\n\n//write headers\nif( (isset($_GET['ip_addr'])) && ($_GET['ip_addr'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('ip address') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['state'])) && ($_GET['state'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('ip state') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['description'])) && ($_GET['description'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('description') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['hostname'])) && ($_GET['hostname'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('hostname') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['firewallAddressObject'])) && ($_GET['firewallAddressObject'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('fw object') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['mac'])) && ($_GET['mac'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('mac') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['owner'])) && ($_GET['owner'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('owner') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['switch'])) && ($_GET['switch'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('device') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['port'])) && ($_GET['port'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('port') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['note'])) && ($_GET['note'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('note') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['location'])) && ($_GET['location'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('location') ,$format_title);\n\t$rowCount++;\n}\n\n//custom\nif(sizeof($custom_fields) > 0) {\n\tforeach($custom_fields as $myField) {\n\t\t//set temp name - replace space with three ___\n\t\t$myField['nameTemp'] = str_replace(\" \", \"___\", $myField['name']);\n\n\t\tif( (isset($_GET[$myField['nameTemp']])) && ($_GET[$myField['nameTemp']] == \"on\") ) {\n\t\t\t$worksheet->write($lineCount, $rowCount, $myField['name'] ,$format_title);\n\t\t\t$rowCount++;\n\t\t}\n\t}\n}\n\n\n$lineCount++;\n\n\n//we need to reformat state!\n$ip_types = $Addresses->addresses_types_fetch();\n//fetch devices and reorder\n$devices = $Tools->fetch_all_objects(\"devices\", \"hostname\");\n$devices_indexed = array();\nif ($devices!==false) {\n\tforeach($devices as $d) {\n\t\t$devices_indexed[$d->id] = (object) $d;\n\t}\n}\n//add blank\n$devices_indexed[0] = new StdClass ();\n$devices_indexed[0]->hostname = 0;\n\n//fetch locations and reorder\n$locations = $Tools->fetch_all_objects(\"locations\", \"id\");\n$locations_indexed = array();\nif ($locations!==false) {\n\tforeach($locations as $d) {\n\t\t$locations_indexed[$d->id] = (object) $d;\n\t}\n}\n//add blank\n$locations_indexed[0] = new StdClass ();\n$locations_indexed[0]->name = 0;\n\n//write all IP addresses\nforeach ($addresses as $ip) {\n\t$ip = (array) $ip;\n\n\t//reset row count\n\t$rowCount = 0;\n\n\t//change switch ID to name\n\t$ip['switch']   = is_null($ip['switch'])||strlen($ip['switch'])==0||$ip['switch']==0||!isset($devices_indexed[$ip['switch']]) ? \"\" : $devices_indexed[$ip['switch']]->hostname;\n\t$ip['location'] = is_null($ip['location'])||strlen($ip['location'])==0||$ip['location']==0||!isset($locations_indexed[$ip['location']]) ? \"\" : $locations_indexed[$ip['location']]->name;\n\n\tif( (isset($_GET['ip_addr'])) && ($_GET['ip_addr'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $Subnets->transform_address($ip['ip_addr'],\"dotted\"), $format_left);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['state'])) && ($_GET['state'] == \"on\") ) {\n\t\tif(@$ip_types[$ip['state']]['showtag']==1) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip_types[$ip['state']]['type']);\n\t\t}\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['description'])) && ($_GET['description'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['description']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['hostname'])) && ($_GET['hostname'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['hostname']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['firewallAddressObject'])) && ($_GET['firewallAddressObject'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['firewallAddressObject']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['mac'])) && ($_GET['mac'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['mac']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['owner'])) && ($_GET['owner'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['owner']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['switch'])) && ($_GET['switch'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['switch']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['port'])) && ($_GET['port'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['port']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['note'])) && ($_GET['note'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['note']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['location'])) && ($_GET['location'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['location']);\n\t\t$rowCount++;\n\t}\n\n\t//custom\n\tif(sizeof($custom_fields) > 0) {\n\t\tforeach($custom_fields as $myField) {\n\t\t\t//set temp name - replace space with three ___\n\t\t\t$myField['nameTemp'] = str_replace(\" \", \"___\", $myField['name']);\n\n\t\t\tif( (isset($_GET[$myField['nameTemp']])) && ($_GET[$myField['nameTemp']] == \"on\") ) {\n\t\t\t\t$worksheet->write($lineCount, $rowCount, $ip[$myField['name']]);\n\t\t\t\t$rowCount++;\n\t\t\t}\n\t\t}\n\t}\n\n\t$lineCount++;\n}\n\n\n//new line\n$lineCount++;\n\n// sending HTTP headers\n$workbook->send($filename);\n\n// Let's send the file\n$workbook->close();\n\n?>", "<script type=\"text/javascript\">\n$(document).ready(function() {\n\tif ($(\"[rel=tooltip]\").length) { $(\"[rel=tooltip]\").tooltip(); }\n\n\treturn false;\n});\n</script>\n\n\n<table id=\"logs\" class=\"table sorted nosearch nopagination table-condensed table-hover table-top\" style=\"margin-top:10px;\" data-cookie-id-table=\"show_logs\">\n\n<?php\n\n/**\n * Script to print selected logs\n **********************************/\n\n/* required functions */\nif(!isset($User) || !is_object($User)) {\n\n\t/* functions */\n\trequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n\t# initialize user object\n\t$Database \t= new Database_PDO;\n\t$User \t\t= new User ($Database);\n\t$Tools\t \t= new Tools ($Database);\n\t$Result \t= new Result ();\n\t$Log\t\t= new Logging ($Database);\n\n\t# verify that user is logged in\n\t$User->check_user_session();\n}\n\n# if nothing is provided display all\nif ( empty($_POST['Informational']) && empty($_POST['Notice']) && empty($_POST['Warning']) ) {\n    $_POST['Informational'] = \"Informational\";\n    $_POST['Notice']        = \"Notice\";\n    $_POST['Warning']       = \"Warning\";\n}\n?>\n\n<!-- print headers -->\n<thead>\n<tr>\n    <th class=\"date\" style=\"width:130px;white-space:nowrap\"><?php print _('Date'); ?></th>\n    <th><?php print _('Severity'); ?></th>\n    <th><?php print _('Username'); ?></th>\n    <th><?php print _('IP address'); ?></th>\n    <th><?php print _('Event'); ?></th>\n    <th></th>\n</tr>\n</thead>\n\n<tbody>\n<!-- print logs -->\n<?php\n\n//fetch 40 logs at once\n$logCount = 40;\n\n//set severity queries\n$informational = @$_POST['Informational']==\"Informational\" ? \"on\" : \"off\";\n$notice \t   = @$_POST['Notice']==\"Notice\" ? \"on\" : \"off\";\n$warning \t   = @$_POST['Warning']==\"Warning\" ? \"on\" : \"off\";\n\n//get highest lastId */\n$highestId = $Log->log_fetch_highest_id();\nif(empty($_POST['lastId']) || ($_POST['lastId'] == \"undefined\")) \t{ $_POST['lastId'] = $highestId; }\n\n//set empty direction\nif(!isset($_POST['direction'])) \t\t\t\t\t\t\t\t\t{ $_POST['direction'] = \"\"; }\n\n/* get requested logs */\n$logs = $Log->fetch_logs($logCount, $_POST['direction'], $_POST['lastId'], $highestId, $informational, $notice, $warning);\nif (!is_array($logs)) { $logs = array(); }\n\n$x = 0;\nforeach ($logs as $log) {\n\t//cast\n\t$log = (array) $log;\n\n    //set classes based on severity\n    if ($log['severity'] == 0) {\n        $log['severityText'] = _(\"Informational\");\n        $color = \"success\";\n    }\n    elseif ($log['severity'] == 1) {\n        $log['severityText'] = _(\"Notice\");\n        $color = \"warning\";\n    }\n    elseif ($log['severity'] == 2) {\n        $log['severityText'] = _(\"Warning\");\n        $color = \"danger\";\n    }\n    else {\n        $log['severityText'] = _(\"Unknown\");\n        $color = \"info\";\n    }\n\n\t/* reformat details */\n\t$log['details'] = str_replace(\"\\\"\", \"'\", $log['details']);\n\n    print '<tr class=\"'.$color.' '. $log['severityText'] .'\" id=\"'. $log['id'] .'\">'. \"\\n\";\n \tprint '\t<td class=\"date\">'. $log['date']     .'</td>'. \"\\n\";\n    print '\t<td class=\"severity\"><span>'. $log['severity'] .'</span>'. $log['severityText'] .'</td>'. \"\\n\";\n\tprint '\t<td class=\"username\">'. $log['username'] .'</td>'. \"\\n\";\n\tprint '\t<td class=\"ipaddr\">'. $log['ipaddr'] .'</td>'. \"\\n\";\n    print '\t<td class=\"command\"><a href=\"\" class=\"openLogDetail\" data-logid=\"'.$log['id'].'\">'. $log['command']  .'</a></td>'. \"\\n\";\n    print '\t<td class=\"detailed\">';\n    /* details */\n    if(!empty($log['details'])) { print '\t<i class=\"fa fa-comment fa-gray\" rel=\"tooltip\" data-html=\"true\" data-placement=\"left\" title=\"<b>'._('Event details').'</b>:<hr>'. $log['details'] .'\"></i></td>'. \"\\n\"; }\n    print '\t</td>'. \"\\n\";\n\tprint '</tr>'. \"\\n\";\n}\n?>\n</tbody>\n</table>\t<!-- end filter table -->\n\n\n<?php if(sizeof($logs)== 0) { $Result->show(\"info\", _('No logs available').\"!\", true); } ?>", "<?php\n\n/**\n *\tphpIPAM Admin class\n */\n\nclass Admin extends Common_functions {\n\n\n\t/**\n\t * (array of objects) to store users, user id is array index\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $users;\n\n\t/**\n\t * (array of objects) to store groups, group id is array index\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $groups;\n\n\t/**\n\t * id of last edited/added table\n\t *\n\t * (default value: null)\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $lastId = null;\n\n\t/**\n\t * if admin user is required to connect. Can be overridden\n\t *\n\t * (default value: true)\n\t *\n\t * @var bool\n\t * @access private\n\t */\n\tprivate $admin_required = true;\n\n\t/**\n\t * User\n\t *\n\t * @var mixed\n\t * @access protected\n\t */\n\tprotected $User;\n\n\n\n\n\n\n\t/**\n\t * __construct function.\n\t *\n\t * @access public\n\t * @param Database_PDO $database\n\t * @param bool $admin_required (default: true)\n\t */\n\tpublic function __construct (Database_PDO $database, $admin_required = true) {\n\t\tparent::__construct();\n\n\t\t# initialize database object\n\t\t$this->Database = $database;\n\t\t# initialize Result\n\t\t$this->Result = new Result ();\n\t\t# set admin flag\n\t\t$this->set_admin_required ($admin_required);\n\t\t# verify that user is admin\n\t\t$this->is_admin ();\n\t\t# Log object\n\t\t$this->Log = new Logging ($this->Database);\n\t}\n\n\t/**\n\t * Saves last insert ID on object modification.\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function save_last_insert_id () {\n\t\t$this->lastId = $this->Database->lastInsertId();\n\t}\n\n\t/**\n\t * Sets admin required flag if needed\n\t *\n\t * @access public\n\t * @param boolean $bool\n\t * @return void\n\t */\n\tpublic function set_admin_required ($bool) {\n\t\t$this->admin_required = is_bool($bool) ? $bool : true;\n\t}\n\n\t/**\n\t * Checks if current user is admin\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function is_admin () {\n\t\t// user not required for cli\n\t\tif (php_sapi_name()!=\"cli\") {\n\t\t\t# initialize user class\n\t\t\t$this->User = new User ($this->Database);\n    \t\t# save settings\n    \t\t$this->settings = $this->User->settings;\n    \t\t# if required die !\n    \t\tif($this->User->is_admin(false)!==true && $this->admin_required===true) {\n    \t\t\t// popup ?\n    \t\t\tif(@$_SERVER['HTTP_X_REQUESTED_WITH'] == \"XMLHttpRequest\") \t{ $this->Result->show(\"danger\", _(\"Administrative privileges required\"),true, true); }\n    \t\t\telse \t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $this->Result->show(\"danger\", _(\"Administrative privileges required\"),true); }\n    \t\t}\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t *\t@general update methods\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Modify database object\n\t *\n\t * @param string $table\n\t * @param string $action\n\t * @param string|array $field\n\t * @param array $values\n\t * @param array $values_log\n\t * @return void\n\t */\n\tpublic function object_modify ($table, $action=null, $field=\"id\", $values = [], $values_log = []) {\n\t\tif (!is_string($table) || strlen($table) == 0) return false;\n\t\t# strip tags\n\t\t$values     = $this->strip_input_tags ($values);\n\t\t$values_log = $this->strip_input_tags ($values_log);\n\n\t\t# if empty values_log inherit from values to preserve old functionality\n\t\tif(sizeof($values_log)==0)\t{ $values_log = $values; }\n\n\t\t# execute based on action\n\t\tif($action==\"add\")\t\t\t\t\t{ return $this->object_add ($table, $values, $values_log); }\n\t\telseif($action==\"edit\")\t\t\t\t{ return $this->object_edit ($table, $field, $values, $values_log); }\n\t\telseif($action==\"edit-multiple\")\t{ return $this->object_edit_multiple ($table, $field, $values); }\t\t//$field = array of ids\n\t\telseif($action==\"delete\")\t\t\t{ return $this->object_delete ($table, $field, $values[$field]); }\n\t\telse\t\t\t\t\t\t\t\t{ return $this->Result->show(\"danger\", _(\"Invalid action\"), true); }\n\t}\n\n\t/**\n\t * Create new database object\n\t *\n\t *\t\t$values are all values that should be passed to create object\n\t *\n\t * @access private\n\t * @param mixed $table\n\t * @param mixed $values\n\t * @param array $values_log\t\t//log variables\n\t * @return boolean\n\t */\n\tprivate function object_add ($table, $values, $values_log) {\n\t\t# null empty values\n\t\t$values = $this->reformat_empty_array_fields ($values, null);\n\n\t\t# execute\n\t\ttry { $this->Database->insertObject($table, $values); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\t$this->Log->write( \"$table object creation\", \"Failed to create new $table database object<hr>\".$e->getMessage().\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table object creation\", \"New $table database object created<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Edit object in table by specified object id\n\t *\n\t *\t\t$values are all values that should be passed to edit object,\n\t *\t\tid will be used to match field to update.\n\t *\n\t * @access private\n\t * @param mixed $table\t\t\t//name of table to update\n\t * @param array $values\t\t\t//update variables\n\t * @param array $values_log\t\t//log variables\n\t * @return boolean\n\t */\n\tprivate function object_edit ($table, $key=\"id\", $values, $values_log = []) {\n\t\t# null empty values\n\t\t$values = $this->reformat_empty_array_fields ($values, null);\n\n\t\t# execute\n\t\ttry { $this->Database->updateObject($table, $values, $key); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\t$this->Log->write( \"$table object $values[$key] edit\", \"Failed to edit object $key=$values[$key] in $table<hr>\".$e->getMessage().\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table object $values[$key] edit\", \"Object $key=$values[$key] in $table edited<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Edit multiple objects in table by specified object id\n\t *\n\t *\t\t$values are all values that should be passed to edit object,\n\t *\t\tids will be used to match fields to update.\n\t *\n\t * @access private\n\t * @param mixed $table\t\t\t//name of table to update\n\t * @param array $values\t\t\t//update variables\n\t * @param string $ids\n\t * @return boolean\n\t */\n\tprivate function object_edit_multiple ($table, $ids, $values) {\n\t\t# null empty values\n\t\t$values = $this->reformat_empty_array_fields ($values, null);\n\n\t\t# execute\n\t\ttry { $this->Database->updateMultipleObjects($table, $ids, $values); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\t$this->Log->write( \"$table multiple objects edit\", \"Failed to edit multiple objects in $table<hr>\".$e->getMessage().\"<hr>\".$this->array_to_log($ids).\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values, \"NULL\")), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table multiple objects edit\", \"Multiple objects in $table edited<hr>\".$this->array_to_log($ids).\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values, \"NULL\")), 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Delete object in table by specified object id\n\t *\n\t * @access private\n\t * @param mixed $table\t\t//table to update\n\t * @param string $field\t\t//field selection (where $field = $id)\n\t * @param mixed $id\t\t\t//field identifier\n\t * @return boolean\n\t */\n\tprivate function object_delete ($table, $field=\"id\", $id) {\n\t\t# execute\n\t\ttry { $this->Database->deleteRow($table, $field, $id); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Log->write( \"$table object $id delete\", \"Failed to delete object $field=$id in $table<hr>\".$e->getMessage(), 2);\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table object $id edit\", \"Object $field=$id in $table deleted.\", 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes or replaces all old object references\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $old_value\n\t * @param mixed $new_value (Default: NULL)\n\t * @return null|false\n\t */\n\tpublic function remove_object_references ($table, $field, $old_value, $new_value = NULL) {\n\t\t$table = $this->Database->escape($table);\n\t\t$field = $this->Database->escape($field);\n\n\t\ttry { $this->Database->runQuery(\"update `$table` set `$field` = ? where `$field` = ?;\", array($new_value, $old_value)); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Resets or replaces all old object references\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $old_value\n\t * @param mixed $new_value\n\t * @return null|false\n\t */\n\tpublic function update_object_references ($table, $field, $old_value, $new_value) {\n\t\t$table = $this->Database->escape($table);\n\t\t$field = $this->Database->escape($field);\n\n\t\ttry { $this->Database->runQuery(\"update `$table` set `$field` = ? where `$field` = ?;\", array($new_value, $old_value)); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Empties table\n\t *\n\t * @access public\n\t * @param mixed $table (default: null)\n\t * @return boolean\n\t */\n\tpublic function truncate_table ($table = null) {\n\t\t# null table\n\t\tif(is_null($table)||strlen($table)==0) return false;\n\t\telse {\n\t\t\ttry { $this->Database->emptyTable($table); }\n\t\t\tcatch (Exception $e) {\n\t\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t# result\n\t\t\treturn true;\n\t\t}\n\t}\n\n\n\n\n\n\n\t/**\n\t *\t@group methods\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Parse user groups\n\t *\n\t *\tinput:  array of group ids\n\t *\toutput: array of groups ( \"id\"=>array($group) )\n\t *\n\t * @access public\n\t * @param mixed $group_ids\n\t * @return void\n\t */\n\tpublic function groups_parse ($group_ids) {\n\t\t$out = array ();\n\t\t// check\n\t\tif(!is_null($group_ids)) {\n\t\t\tif(sizeof($group_ids)>0) {\n\t\t    \tforeach($group_ids as $g_id) {\n\t\t    \t\t$group = $this->fetch_object (\"userGroups\", \"g_id\", $g_id);\n\t\t    \t\t$out[$group->g_id] = (array) $group;\n\t\t    \t}\n\t\t    }\n\t\t}\n\t    # return array of groups\n\t    return $out;\n\t}\n\n\n\t/**\n\t * Parse user groups\n\t *\n\t *\tinput:  array of group ids\n\t *\toutput: array of ids (  \"id\"=>id )\n\t *\n\t * @access public\n\t * @param mixed $group_ids\n\t * @return void\n\t */\n\tpublic function groups_parse_ids ($group_ids) {\n\t\t$out = array ();\n\t\t// check\n\t\tif(!is_null($group_ids)) {\n\t\t\tif(sizeof($group_ids) >0) {\n\t\t\t    foreach($group_ids as $g_id) {\n\t\t    \t\t$group = $this->fetch_object (\"userGroups\", \"g_id\", $g_id);\n\t\t    \t\t$out[$group->g_id] = $group->g_id;\n\t\t    \t}\n\t\t    }\n\t\t}\n\t    # return array of group ids\n\t    return $out;\n\t}\n\n\t/**\n\t * Fetches all users that are in group\n\t *\n\t * @access public\n\t * @return array of user ids\n\t */\n\tpublic function group_fetch_users ($group_id) {\n\t\t$out = array ();\n\t\t# get all users\n\t\t$users = $this->fetch_all_objects(\"users\");\n\t\t# check if $gid in array\n\t\tif($users!==false) {\n\t\t\tforeach($users as $u) {\n\t\t\t\t$group_array = json_decode($u->groups, true);\n\t\t\t\t$group_array = $this->groups_parse($group_array);\n\n\t\t\t\tif(sizeof($group_array)>0) {\n\t\t\t\t\tforeach($group_array as $group) {\n\t\t\t\t\t\tif(in_array($group_id, $group)) {\n\t\t\t\t\t\t\t$out[] = $u->id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# return\n\t\treturn isset($out) ? $out : array();\n\t}\n\n\t/**\n\t * Fetches all users that are not admins and are not in group\n\t *\n\t * @access public\n\t * @param mixed $group_id\n\t * @return void\n\t */\n\tpublic function group_fetch_missing_users ($group_id) {\n\t\t$out = array ();\n\t\t# get all users\n\t\t$users = $this->fetch_all_objects(\"users\");\n\n\t\t# check if $gid in array\n\t\tif($users!==false) {\n\t\t\tforeach($users as $u) {\n\t\t\t\tif($u->role != \"Administrator\") {\n\t\t\t\t\t$g = json_decode($u->groups, true);\n\t\t\t\t\tif(!@in_array($group_id, $g)) { $out[] = $u->id; }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# return\n\t\treturn $out;\n\t}\n\n\t/**\n\t * This function adds new group access to user account\n\t *\n\t * @access private\n\t * @param mixed $gid\n\t * @param mixed $uid\n\t * @return boolean\n\t */\n\tpublic function add_group_to_user ($gid, $uid) {\n\t\t# get old groups\n\t\t$user = $this->fetch_object (\"users\", \"id\", $uid);\n\n\t\t# append new group\n\t\t$g = json_decode($user->groups, true);\n\t\t$g[$gid] = $gid;\n\t\t$g = json_encode($g);\n\n\t\t# update\n\t\tif(!$this->update_user_groups($uid, $g)) { return false; }\n\t\telse\t\t\t\t\t\t\t\t\t { return true; }\n\t}\n\n\t/**\n\t * This function removes group from users account.\n\t *\n\t * @access public\n\t * @param mixed $gid\n\t * @param mixed $uid\n\t * @return boolean\n\t */\n\tpublic function remove_group_from_user($gid, $uid) {\n\t\t# get old groups\n\t\t$user = $this->fetch_object (\"users\", \"id\", $uid);\n\n\t\t# remove group\n\t\t$g = json_decode($user->groups, true);\n\t\tunset($g[$gid]);\n\t\t$g = json_encode($g);\n\n\t\t# update\n\t\tif(!$this->update_user_groups($uid, $g)) \t{ return false; }\n\t\telse\t\t\t\t\t\t\t\t\t\t{ return true; }\n\t}\n\n\n\t/**\n\t * Update groups for specified user\n\t *\n\t * @access public\n\t * @param mixed $uid\n\t * @param string $groups\n\t * @return void\n\t */\n\tpublic function update_user_groups ($uid, $groups) {\n\t    return $this->object_modify (\"users\", \"edit\", \"id\", array(\"id\"=>$uid, \"groups\"=>$groups));\n\t}\n\n\t/**\n\t * Update group permissions for section\n\t *\n\t * @access public\n\t * @param mixed $sid\n\t * @param string $groups\n\t * @return void\n\t */\n\tpublic function update_section_groups($sid, $groups) {\n\t    return $this->object_modify (\"sections\", \"edit\", \"id\", array(\"id\"=>$sid, \"permissions\"=>$groups));\n\t}\n\n\t/**\n\t * Removes all users from specified group on group delete\n\t *\n\t * @access public\n\t * @param int $gid\t//group id\n\t * @return boolean\n\t */\n\tpublic function remove_group_from_users($gid) {\n\t\t# get all users\n\t\t$users = $this->fetch_all_objects(\"users\");\n\t\t# check if $gid in array\n\t\tif($users!==false) {\n\t\t\tforeach($users as $u) {\n\t\t\t\t$g  = json_decode($u->groups, true);\n\t\t\t\t$go = $g;\n\t\t\t\t$g  = $this->groups_parse($g);\n\t\t\t\t# check\n\t\t\t\tif(sizeof($g)>0) {\n\t\t\t\t\tforeach($g as $gr) {\n\t\t\t\t\t\tif(in_array($gid, $gr)) {\n\t\t\t\t\t\t\tunset($go[$gid]);\n\t\t\t\t\t\t\t$ng = json_encode($go);\n\t\t\t\t\t\t\t$this->update_user_groups($u->id,$ng);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes group ID from all section permissions\n\t *\n\t * @access public\n\t * @param mixed $gid\n\t * @return boolean\n\t */\n\tpublic function remove_group_from_sections ($gid) {\n\t\t# get all sections\n\t\t$sections = $this->fetch_all_objects (\"sections\", \"id\");\n\t\t# check if $gid in array\n\t\tforeach($sections as $s) {\n\t\t\t$g = json_decode($s->permissions, true);\n\n\t\t\tif(sizeof($g)>0) {\n\t\t\t\tif(array_key_exists($gid, $g)) {\n\t\t\t\t\tunset($g[$gid]);\n\t\t\t\t\t$ng = json_encode($g);\n\t\t\t\t\t$this->update_section_groups($s->id,$ng);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t *\t@search/replace fields\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Replace fields\n\t *\n\t * @access public\n\t * @param mixed $field\n\t * @param mixed $search\n\t * @param mixed $replace\n\t * @return void\n\t */\n\tpublic function replace_fields ($field, $search, $replace) {\n\t\t$field = $this->Database->escape($field);\n\n\t\t# check number of items\n\t\t$count = $this->count_database_objects (\"ipaddresses\", $field, \"%$search%\", true);\n\t\t# if some exist update\n\t\tif($count>0) {\n\t\t\t# update\n\t\t    try { $this->Database->runQuery(\"update `ipaddresses` set `$field` = replace(`$field`, ?, ?);\", array($search, $replace)); }\n\t\t    catch (Exception $e) {\n\t\t\t    $this->Result->show(\"danger alert-absolute\", _(\"Error: \").$e->getMessage(), true);\n\t\t    }\n\t\t    # ok, print count\n\t\t    $this->Result->show(\"success alert-absolute\", _('Replaced').' '. $count .' '._('items successfully').'!', false);\n\t\t}\n\t\telse {\n\t\t\t$this->Result->show(\"info alert-absolute\", _(\"No records found to replace\"), false);\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t *\t@custom field methods\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Valid custom field database types\n\t * @return array\n\t */\n\tpublic function valid_custom_field_types() {\n\t\treturn [\"varchar\"  =>\"varchar\",\n\t\t\t\t\"integer\"  =>\"int\",\n\t\t\t\t\"boolean\"  =>\"bool\",\n\t\t\t\t\"text\"     =>\"text\",\n\t\t\t\t\"date\"     =>\"date\",\n\t\t\t\t\"datetime\" =>\"datetime\",\n\t\t\t\t\"set\"      =>\"set\",\n\t\t\t\t\"enum\"     =>\"enum\"];\n\t}\n\n\t/**\n\t * Updates custom field definition\n\t *\n\t * @access public\n\t * @param array $field\n\t * @return bool\n\t */\n\tpublic function update_custom_field_definition ($field) {\n\t\tif (!in_array($field['fieldType'], $this->valid_custom_field_types())) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \")._(\"Invalid custom field type\"));\n\t\t\treturn false;\n\t\t}\n\n\t    # set type definition and size of needed\n\t    if($field['fieldType']==\"bool\" || $field['fieldType']==\"text\" || $field['fieldType']==\"date\" || $field['fieldType']==\"datetime\")\t{ $field['ftype'] = $field['fieldType']; }\n\t    else\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $field['ftype'] = $field['fieldType'].\"(\".$field['fieldSize'].\")\"; }\n\n\t    # default value null\n\t    $field['fieldDefault'] = strlen($field['fieldDefault'])==0 ? NULL : $field['fieldDefault'];\n\n\t    # character set if needed\n\t    if($field['fieldType']==\"varchar\" || $field['fieldType']==\"text\" || $field['fieldType']==\"set\" || $field['fieldType']==\"enum\")\t{ $charset = \"CHARACTER SET utf8\"; }\n\t    else\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $charset = \"\"; }\n\n\t    # escape fields\n\t    $field['table'] \t\t= $this->Database->escape($field['table']);\n\t    $field['name'] \t\t\t= $this->Database->escape($field['name']);\n\t    $field['oldname'] \t\t= $this->Database->escape($field['oldname']);\n\t    # strip values\n\t    $field['action'] \t\t= $this->strip_input_tags($field['action']);\n\t    $field['Comment'] \t\t= $this->strip_input_tags($field['Comment']);\n\n\t    # add name prefix to distinguish custom fields\n\t    if($field['action']==\"edit\" || $field['action']==\"add\") {\n\t\t    if(strpos($field['name'], \"custom_\")!==0) { $field['name'] = \"custom_\".$field['name']; }\n\t\t}\n\n\t    # set update query\n\t    if($field['action']==\"delete\") \t\t\t\t\t\t\t\t{ $query  = \"ALTER TABLE `$field[table]` DROP `$field[oldname]`;\"; }\n\t    else if ($field['action']==\"edit\"&&@$field['NULL']==\"NO\") \t{ $query  = \"ALTER TABLE `$field[table]` CHANGE COLUMN `$field[oldname]` `$field[name]` $field[ftype] $charset DEFAULT :default NOT NULL COMMENT :comment;\"; }\n\t    else if ($field['action']==\"edit\") \t\t\t\t\t\t\t{ $query  = \"ALTER TABLE `$field[table]` CHANGE COLUMN `$field[oldname]` `$field[name]` $field[ftype] $charset DEFAULT :default COMMENT :comment;\"; }\n\t    else if ($field['action']==\"add\"&&@$field['NULL']==\"NO\") \t{ $query  = \"ALTER TABLE `$field[table]` ADD COLUMN \t`$field[name]` \t\t\t\t\t$field[ftype] $charset DEFAULT :default NOT NULL COMMENT :comment;\"; }\n\t    else if ($field['action']==\"add\")\t\t\t\t\t\t\t{ $query  = \"ALTER TABLE `$field[table]` ADD COLUMN \t`$field[name]` \t\t\t\t\t$field[ftype] $charset DEFAULT :default NULL COMMENT :comment;\"; }\n\t    else {\n\t\t    return false;\n\t    }\n\n\t    # set parametized values\n\t    $params = array();\n\t    if (strpos($query, \":default\")>0)\t$params['default'] = $field['fieldDefault'];\n\t    if (strpos($query, \":comment\")>0)\t$params['comment'] = $field['Comment'];\n\n\t\t# execute\n\t\ttry { $res = $this->Database->runQuery($query, $params); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t        $this->Log->write( \"Custom field $field[action]\", \"Custom Field $field[action] failed ($field[name])<hr>\".$this->array_to_log($field), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# field updated\n        $this->Log->write( \"Custom field $field[action]\", \"Custom Field $field[action] success ($field[name])<hr>\".$this->array_to_log($field), 0);\n\t    return true;\n\t}\n\n\t/**\n\t * Save custom fields that should be hidden from normal display\n\t *\n\t * @access public\n\t * @param mixed $table\t\t\t\t//name of custom fields table\n\t * @param mixed $filtered_fields\t//array of field to hide for this table\n\t * @return boolean\n\t */\n\tpublic function save_custom_fields_filter ($table, $filtered_fields) {\n\t\t# old custom fields, save them to array\n\t\t$hidden_array = strlen($this->settings->hiddenCustomFields)>0 ? json_decode($this->settings->hiddenCustomFields, true) : array();\n\n\t\t# set new array for table\n\t\tif(is_null($filtered_fields))\t{ unset($hidden_array[$table]); }\n\t\telse\t\t\t\t\t\t\t{ $hidden_array[$table]=$filtered_fields; }\n\n\t\t# encode to json\n\t\t$hidden_json = json_encode($hidden_array, JSON_UNESCAPED_UNICODE);\n\n\t\t# update database\n\t    try { $this->object_edit (\"settings\", $key=\"id\", array(\"id\"=>1,\"hiddenCustomFields\"=>$hidden_json)); }\n\t    catch (Exception $e) {\n\t\t    $this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), true);\n\t    }\n\t    # ok\n\t\treturn true;\n\t}\n\n\t/**\n\t * Reorders custom fields\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $next\n\t * @param mixed $current\n\t * @return boolean\n\t */\n\tpublic function reorder_custom_fields ($table, $next, $current) {\n\t    $table = $this->Database->escape($table);\n\t    $next = $this->Database->escape($next);\n\t    $current = $this->Database->escape($current);\n\t    # get current field details\n\t    $Tools = new Tools ($this->Database);\n\t    $old = (array) $Tools->fetch_full_field_definition ($table, $current);\n\n\t    # set update request\n\t    if($old['Null']==\"NO\")\t{ $query  = 'ALTER TABLE `'.$table.'` MODIFY COLUMN `'. $current .'` '.$old['Type'].' NOT NULL COMMENT \"'.$old['Comment'].'\" AFTER `'. $next .'`;'; }\n\t    else\t\t\t\t\t{ $query  = 'ALTER TABLE `'.$table.'` MODIFY COLUMN `'. $current .'` '.$old['Type'].' DEFAULT NULL COMMENT \"'.$old['Comment'].'\" AFTER `'. $next .'`;'; }\n\n\t\t# execute\n\t\ttry { $res = $this->Database->runQuery($query); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t\t# ok\n\t    return true;\n\t}\n\n}", "<?php\n\n/**\n *\n *\tClass for printing outputs and saving logs to database\n *\n *\tSeverity indexes:\n *\t\t0 = success\n *\t\t1 = warning\n *\t\t2 = error\n *\n */\n\nclass Result extends Common_functions {\n\n\t/**\n\t *  what to do when failed - result shows result, exception throws exception (for API)\n\t *\n\t * (default value: \"result\")\n\t *\n\t * @var string\n\t * @access public\n\t */\n\tpublic $exit_method = \"result\";\n\n\t/**\n\t * Die flag\n\t *\n\t * (default value: false)\n\t *\n\t * @var bool\n\t * @access public\n\t */\n\tpublic $die = false;\n\n\t/**\n\t * Show result\n\t *\n\t * @access public\n\t * @param string $class (default: \"muted\")\t\t\t\tresult class - danger, success, warning, info\n\t * @param string|array|object $text (default: \"No value provided\")\ttext to display\n\t * @param bool $die (default: false)\t\t\t\t\tcontrols stop of php execution\n\t * @param bool $popup (default: false)\t\t\t\t\tprint result as popup\n\t * @param bool $inline (default: false)\t\t\t\t\treturn, not print\n\t * @param bool $popup2 (default: false)\t\t\t\t\tclose for JS for popup2\n\t * @param bool $reload (default: false)\t\t\t\t\treload\n\t * @return void\n\t */\n\tpublic function show($class=\"muted\", $text=\"No value provided\", $die=false, $popup=false, $inline = false, $popup2 = false, $reload = false) {\n\n\t\t# set die\n\t\t$this->die = $die;\n\n\t\t# API - throw exception\n\t\tif($this->exit_method == \"exception\")  {\n\t\t\t# ok, just return success\n\t\t\tif ($class==\"success\") \t\t{ return true; }\n\t\t\telse\t\t\t\t\t\t{ return $this->throw_exception ($text); }\n\t\t}\n\t\telse {\n\t\t\t# cli or GUI\n\t\t\tif (php_sapi_name()==\"cli\") { print $this->show_cli_message ($text); }\n\t\t\telse {\n\t\t\t\t# return or print\n\t\t\t\tif ($inline) \t\t\t{ return $this->show_message ($class, $text, $popup, $popup2, $reload); }\n\t\t\t\telse\t\t\t\t\t{ print  $this->show_message ($class, $text, $popup, $popup2, $reload); }\n\t\t\t}\n\n\t\t\t# die\n\t\t\tif($this->die===true)\t{die(); }\n\t\t}\n\t}\n\n\t/**\n\t * Alias for show method for backwards compatibility\n\t *\n\t * @access public\n\t * @param string|array|object $text (default: \"No value provided\")\n\t * @param bool $die (default: false)\n\t * @return void\n\t */\n\tpublic function show_cli ($text=\"No value provided\", $die=false) {\n\t\t$this->show(false, $text, $die, false, false, false);\n\t}\n\n\t/**\n\t * Shows result for cli functions\n\t *\n\t * @access public\n\t * @param string $text (default: \"No value provided\")\n\t * @return void\n\t */\n\tpublic function show_cli_message ($text=\"No value provided\") {\n\t\t// array - join\n\t\tif (is_array($text) && sizeof($text)>0) {\n\t\t\t// 1 element\n\t\t\tif(sizeof( $text )==1) {\n\t\t\t\t$text = $text[0];\n\t\t\t}\n\t\t\t// multiple - format\n\t\t\telse {\n\t\t\t\tforeach( $text as $l ) { $out[] = \"\\t* $l\"; }\n\t\t\t\t// join\n\t\t\t\t$text = implode(\"\\n\", $out);\n\t\t\t}\n\t\t}\n\t\t# print\n\t\treturn $text.\"\\n\";\n\t}\n\n\t/**\n\t * Show GUI result\n\t *\n\t * @access public\n\t * @param mixed $class\n\t * @param string|array|object $text\n\t * @param mixed $popup\n\t * @param mixed $popup2\n\t * @param bool $reload\n\t * @return void\n\t */\n\tpublic function show_message ($class, $text, $popup, $popup2, $reload) {\n    \t// to array if object\n    \tif (is_object($text))   { $text = (array) $text; }\n\t\t// format if array\n\t\tif(is_array($text)) {\n\t\t\t// single value\n\t\t\tif(sizeof( $text )==1) {\n\t\t\t\t$out = $text;\n\t\t\t}\n\t\t\t// multiple values\n\t\t\telse {\n\t\t\t\t$out[] = \"<ul>\";\n\t\t\t\tforeach( $text as $l ) { $out[] = \"<li>$l</li>\"; }\n\t\t\t\t$out[] = \"</ul>\";\n\t\t\t}\n\t\t\t// join\n\t\t\t$text = implode(\"\\n\", $out);\n\t\t}\n\n\t\t# print popup or normal\n\t\tif($popup===false) {\n\t\t\treturn \"<div class='alert alert-\".$class.\"'>\".$text.\"</div>\";\n\t\t}\n\t\telse {\n\t\t\t// set close class for JS\n\t\t\t$pclass = $popup2===false ? \"hidePopups\" : \"hidePopup2\";\n\t\t\t// change danger to error for popup\n\t\t\t$htext = $class===\"danger\" ? \"error\" : $class;\n\n\t\t\t$out[] = '<div class=\"pHeader\">'._(ucwords($htext)).'</div>';\n\t\t\t$out[] = '<div class=\"pContent\">';\n\t\t\t$out[] = '<div class=\"alert alert-'.$class.'\">'.$text.'</div>';\n\t\t\t$out[] = '</div>';\n\t\t\t// reload\n\t\t\tif($reload===true)\n\t\t\t$out[] = '<div class=\"pFooter\"><button class=\"btn btn-sm btn-default hidePopupsReload '.$pclass.'\">'._('Close').'</button></div>';\n\t\t\telse\n\t\t\t$out[] = '<div class=\"pFooter\"><button class=\"btn btn-sm btn-default '.$pclass.'\">'._('Close').'</button></div>';\n\n\t\t\t// return\n\t\t\treturn implode(\"\\n\", $out);\n\t\t}\n\t}\n\n\t/**\n\t * Exists with exception for API\n\t *\n\t * @access public\n\t * @param mixed $content\n\t * @return void\n\t */\n\tpublic function throw_exception ($content) {\n\t\t// include Exceptions class for API\n\t\tinclude_once( dirname(__FILE__) . '../../../api/controllers/Responses.php' );\n\t\t// initialize exceptions\n\t\t$Exceptions = new Responses ();\n\t\t// throw error\n\t\t$Exceptions->throw_exception(500, $content);\n\t}\n\n\t/**\n\t * __destruct function\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function __destruct() {\n\t\t// exit if required\n\t\tif ($this->die === true)\t{ die(); }\n\t}\n}\n", "== 1.4.6\n\n    Bugfixes:\n    ----------------------------\n    + Require unique subnets not working as intended (#3529);\n\n== 1.4.5\n\n    Bugfixes:\n    ----------------------------\n    + Fix for SAML/2FA login redirection after timeout (#3492);\n    + php_sessions table doesn't exist error when upgrading (#3417);\n    + RFC 6265 compliant cookies (#3452);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injection in edit-bgp-mapping-search.php;\n    + Stored XSS in the \"Site title\" parameter;\n    + XSS while uploading CVS files;\n    + XSS (reflected) in 'find subnets';\n\n== 1.4.4\n\n    Bugfixes:\n    ----------------------------\n    + Allow UTF-8 in instruction widgets (#3360);\n    + Exclude IPv6 from Ping and Discovery scans (#3354);\n\n    Security Fixes:\n    ----------------------------\n    + XSS (reflected) in IP calculator (#3351);\n    + XSS in pass-change/result.php (#3373);\n\n== 1.4.3\n\n    Bugfixes:\n    ----------------------------\n    + FPing discovery marks all addresses as alive (#2888);\n    + SNMP, number of discovered hosts exceed maximum warning (#3279);\n\n    Security Fixes:\n    ----------------------------\n    + PHP session ID fixation (#3342);\n\n== 1.4.2\n\n    Enhancements, changes:\n    ----------------------------\n    + SameSite attribute enabled for site cookies;\n\n    Bugfixes:\n    ----------------------------\n    + Fix generated functions/upgrade_queries.php queries (#3130);\n    + Table layout not aligned (#3105,#3113);\n    + Invalid scan type () error (#2785);\n    + Invalid CSRF cookie editing rack items (#2556);\n    + MySQL 8.0 compatibility (#3036);\n\n    Security Fixes:\n    ----------------------------\n    + Upgraded jQuery to 3.5.1 (#3119);\n    + Stored XSS in instructions widgets (#3025);\n\n== 1.4.1\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade queries issues from 1.3.2 to 1.4;\n    + Fixed boolean printout in footer (#2625);\n    + Fixed BGP Admin isn't working (#2631);\n    + MySQL 8.0 compatibility. (#2646,#2239);\n    + Table layout not aligned (#2656);\n    + Improve scanning requirement checks (#1183);\n    + PDNS Add/Edit DNS record not working for normal users (#2686);\n    + Unable to save settings with link addresses = text custom field (#2702);\n    + Kea MAC address display issue (#2704);\n    + Returned custom fields to devices table (#2572);\n    + Invalid scan agent key warning;\n    + Subnet filter issue when IP contains 0 octet. (#2748);\n    + Add VLAN button not working (#2741);\n    + Incorrect subnet links in /tools/vrf/ view. (#2774);\n    + Location data missing in exports. (#2833);\n    + Check mysqldump path when exporting database;\n    + Current rack position missing when editing a device. (#2545);\n    + Misc html fixes (#3026,#3081,#3082);\n    + API:\n        + Fixed /user/ calls for SSL with app code (static app code);\n        + Address IP field not displayed when using filter_by (#2934);\n        + Addresses first_free & Subnets first/last_subnet thread safety (#2960);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injections processing `tableName` (#2738);\n    + SQL injections processing `ftype` (#2751);\n    + All circuits map, PHP object injection (#2937);\n\n== 1.4.0\n\n    New features:\n    ------------\n    + Configurable password policy;\n    + Sessions can be now stored in database (#516);\n    + Two-factor authentication - otp (Google Authenticator);\n    + Customers module (#694);\n    + Routing module (BGP) (#2135);\n    + Search for free subnet inside whole section;\n\n    Enhancements, changes:\n    ----------------------------\n    + Circuits enhancements (Virtual Circuits);\n    + Dropped support for 32bit systems;\n    + PHP 5.4 is now required;\n    + Added compressed actions dropdown;\n    + SNMP module no longer requires MIB files;\n    + Performance enhancements running under Azure/Amazon;\n    + Added option to disable user (#1327);\n    + Added policy NAT option;\n    + Added custom NAT fields;\n    + Rack module enhancements (#1325):\n        + Dynamic rack sizes;\n        + Top-down / Bottom-up racks;\n        + Custom rack devices independent of devices (power, patch panel);\n    + Customized user permissions for modules:\n        + VLAN module;\n        + VRF module;\n        + PowerDNS module;\n        + Circuits module;\n        + Customers module;\n        + Devices module;\n        + Rack module;\n        + NAT module;\n        + PSTN module;\n        + Locations module;\n    + API:\n        + New API security type - SSL with app code (static app code);\n        + New config.php option $api_allow_unsafe to allow non-SSL API queries;\n        + Added last access field to api;\n        + Add Mac Search for Addresses controller (#2005);\n        + New overlapping API call;\n        + New global API parameter filter_match = full,partial,regex;\n        + Add Tools API customers submodule;\n        + Fix filtered results to always return data as array (#2558);\n    + Widgets:\n        + New user instruction widget (#2383);\n\n    Translations:\n    ----------------------------\n    + Japanese (ja_JP) translation added;\n    + Traditional Chinese (zh_TW) translation added;\n\n    Bugfixes:\n    ----------------------------\n    + Fix appended \" U\" in Rack description (#2046);\n    + Fix Bandwidth calculator - 400 Bad Request. (#1807);\n    + Fix bad DNS reverse zone for /23 subnet (#666);\n    + Fix Add missing standard field (#2153);\n    + Fix Consistency of VARCHAR Size on 'owner' column across tables (#2136);\n    + Fix Subnet details - Filter button missing when compressed range is used (#2353);\n    + Fix slow page load times with linked addresses (#2324);\n    + Fix \" - is required\" error when adding IPs with an empty IP filter set (#2334);\n    + Fix column 'masterSubnetId' cannot be null error when adding subnets (#1977);\n    + Fix logical circuits add/delete errors (#2381);\n    + Fix adding new VLANs to an empty L2Domain (#2400);\n    + Fix Nested child subnets with \"na\" permissions visible (#2223);\n    + Fix translations containing apostrophes break functionality (#2504);\n    + Set requestedAuthnContext to false for SAML (#2457);\n    + API:\n        + Fix inconsistent API success value returned (#2045);\n        + Fix filter_by functionality (#2392);\n        + Fix PATCH functionality (#2470, #2481);\n\n    Security Fixes:\n    ----------------------------\n    + Hide SNMP community (#2197);\n    + Hide LDAP/AD/Radius username / password and secret from logs and syslog (#2006);\n    + XSS in phpipamredirect cookie (#2338);\n    + XSS in print-user.php, CSRF in user-edit.php (#2326);\n    + Possible SQL injection in nat/item-add-submit.php (#2344);\n    + Fixed possible file inclusion in editing authentication methods;\n    + XSS in subnet-scan-telnet.php, CSRF in subnet-scan-execute.php (#2327);\n\n== 1.3.2\n\n    Enhancements, changes:\n    ----------------------------\n    + Dark theme added;\n    + Full php7.2 compatibility;\n    + url_rewrite has changed, please use new rewrite scheme (https://phpipam.net/news/new_rewrite_scheme/);\n    + Search for matching subnet in all VRFs feature enabled when importing addresses;\n    + Added new config option to show custom fields separated from standard fields when editing IP address;\n    + Added Required fields subpage to define IP address fields that must be filled in;\n    + Performance + bug fixes (#1660, #1657);\n    + MasterSubnet dropdown list is dynamically generated via AJAX call;\n    + Bandwidth calculator;\n    + Support 8U rack sizes. (#1891);\n    + API:\n        + New last_subnet API calls (#1655);\n\n    Translations:\n    ----------------------------\n    + German translation updated to verson 1.3.1;\n    + French translations updated. (#1881);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed uncaught error if vlan number exceeds max permitted (#1455);\n    + Fixed Illegal string offset 'dns_name' in pingCheck.php errors (#1461);\n    + Performance fix for subnet_dropdown_print_available (#1562);\n    + Fixed logo updater for apache v2.4 (#1582);\n    + Fixed section names containing spaces are not included in exports (#1566);\n    + Allow DNS wildcard records (#1571);\n    + Fixed slow mac address vendor decoding for subnet detail view (#1658);\n    + Performance fix for detecting overlapping subnets. (#1052, #1426, #1533);\n    + Performance fix for slow mac address vendor decoding (#1658);\n    + Performance fix for subnet API first_subnet & all_subnets calls;\n    + Performance fix for delegating subnet permissions;\n    + Convert to UTF-8 encoding on import/export to preserve dialectics (#1659, #1700, #1728);\n    + Importing IPs loose Mac Addresses (#1607);\n    + Section names containing spaces are not included in exports. (#1566);\n    + Bug with section and dashboard (#1593);\n    + Fixed improper contents in plain text part of notification e-mails (#1707);\n    + Reduce size of email notifications (#1643);\n    + PHP 5.3 compatibility fixes (#1594, #1730);\n    + PHP 7.2 compatibility fixes (#1683, #1714);\n    + Fixed notification e-mails contain a broken link. (#1708);\n    + Allow dots to be used in domain names. (#1747);\n    + Use multi-byte compatible functions when shortening text. (#1753);\n    + Scan subnet reports/selects invalid php path. (#1757);\n    + Small code refactoring (#1699);\n    + Rack device start position overwritten. (#1545);\n    + Sections with folders returns no subnets using API. (#1883);\n    + Add custom_ prefix to Prefix controller custom fields. (#1836);\n    + Non-Admins missing the button to Add circuit. (#1902);\n    + Wrong field name of deviceTypes table when checking device type. (#1910);\n    + SNMPv3 improvements;\n    + Misc IPv6 fixes;\n\n    Security Fixes:\n    ----------------------------\n    + Code injection in Name field. (#1667);\n    + XSS (reflected) in SubnetID param. (#1702);\n    + CSRF enables open mail relay. (#1703);\n    + Reflected XSS requiring user interaction on search. (#1705);\n    + XSS reflected via CSRF in preview.php. (#1706);\n    + Reflected XSS via CSV upload. (#1742);\n    + Reflected XSS on 'mac' parameter. (#1903);\n\n== 1.3.1\n\n    New features:\n    ------------\n    + Circuits module (circuits, providers, map, ...) (#731);\n\n    Enhancements, changes:\n    ----------------------------\n    + Racks:\n        + Automatic location assignment when device added to rack (#1230);\n        + Rack map showing map of all racks in location;\n        + Rack back side;\n    + Compact menu layout (per-user setting, showing only icons);\n    + Network to network static nat;\n    + Selectable logo size (from config.php) (#952);\n    + Added default option for permissions propagations (#1351);\n    + API:\n        + Added Circuits controller;\n        + Encrypyted requests can now also be form-encoded (#1191);\n        + Introduce mcrypt AES compatibility (#1516);\n        + Fixed field ip not displayed when filters applied (#1529);\n    + New resolve hostnames option for subnet (#1222):\n        + Updates hostnames via pingCheck.php script (if parameter set for subnet);\n        + Updates hostnames via resolveIPaddresses.php script (if parameter set for subnet);\n        + On-the-fly empty hostname update if resolved (if parameter set for subnet and enabled globally);\n        + Added this infor to tools > scanned networks;\n    + Added custom_ prefix to custom field names to avoid duplication with custom fields (#1387);\n    + Added option to hide IP requests for unauthenticated users on login page (#1394);\n    + Performance optimizations for locations and subnet usage calculation;\n    + Added user groups custom fields;\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.3;\n    + German translation updated to verson 1.3;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed RACK images not displayed if not root location (#1204);\n    + Fixed import gateway ip (#1240);\n    + Fixed JSON_UNESCAPED_UNICODE for PHP 5.3 (#1135, #1245);\n    + Rename class Thread to PingThread to avoid naming conflict with pthreads Thread class (#1254);\n    + Fixed custom fields integer on subnet (#1266);\n    + Fixed Import Ip-adress doesnt update location (#1284);\n    + Fixed json_error for logo upload (#1256);\n    + Fixed CSRF error when moving orphaned addresses (#1303);\n    + Fixed VRF fetching via API by Id;\n    + Fixed map issues when quotes are in name/description (#1384);\n    + Fixed item not removed from NAT when deleted (#1378);\n    + Fixed Error when error_reporting = E_ALL about strict standards when importing IP addresses (#1372);\n    + Fixed Apostrophe errors in text custom fields (#1375);\n    + Fixed API error when creating address under folder (#1507);\n    + Fixed SNMPv3 (#1119);\n\n    Security Fixes:\n    ----------------------------\n    + Fixed XSS issues (#1403, #1521, #1500);\n\n== 1.3.0\n\n    New features:\n    ------------\n    + Multicast module (RFC1112, RFC2464) with IP to MAC mapping and multicast networks overview;\n    + Threshold module for subnets;\n    + Racks module (Rack drawing) for devices;\n    + Address linking by selected field;\n    + Custom logo for site and mails;\n    + PSTN number management module;\n    + SNMP module:\n        + Subnets discovery from route table (all subnets, nested subnets, add new subnet);\n        + Hosts discovery scans via ARP check/interface check;\n        + Hosts discovery scans via ARP + MAC address check (detects interface);\n        + VLAN discovery;\n        + VRF discovery;\n        + Status update scans via ARP check;\n    + NAT module\n        + Source / static / destination NAT;\n        + Linking subnet to NAT\n        + Show bindings under tools and next to IP address / subnet\n    + Locations module\n        + Map devices / racks / subnets to location;\n        + Google maps integration;\n    + SAML2 authentication (SSO)\n\n    Enhancements, changes:\n    ----------------------------\n    + Folders can now contain addresses;\n    + API:\n        - Api v1 removed;\n        + If subnet gateway defined gatewayId is returned in subnet details;\n        + Automatically added nameservers to subnet results;\n        + Added subnet usage result for each subnet in section;\n        + Added custom fields for all controllers;\n        + New subnets automatically get parent permissions;\n        + Added IP calculation to subnet;\n        + Changed all not_found when searching objects to 404 and all invalid parameters to 409 (conflict);\n        + If new item is created id will be available in response field \u201cid\u201d;\n        + New parameter $time_response in api/index.php that will return execution time in field \u201ctime\";\n        + Extensive first_free subnet calls search speedup;\n        + POST transaction locking;\n        + All first_free and first_address responses are now \"data\" instead of \"ip\" and \"subnet\" for consistency;\n        + Subnet splitting now copies over custom fields values by default (user custom_fields=no to revert);\n        + Added API option to nest custom_fields to assure correct structure;\n        + Added option to show/hide links in api by default for each app;\n        + Changed API http response codes;\n        + New methods:\n            + users:\n                GET    /user/expires/                         // returns token expiration date\n                GET    /user/token-expires/                   // returns token expiration date\n                GET    /user/users/                           // returns all users (rwa app permissions required)\n                GET    /user/admins/                          // returns all admin users (rwa app permissions required)\n            + addresses:\n                GET    /addresses/first_free/{subnetId}/      // returns first available address (subnetId can be provided with parameters)\n                GET    /addresses/{ip}/{subnetId}/            // returns IP address from subnet\n                GET    /addresses/search/{hostname}/          // Will search addresses by hostname\n                DELETE /addresses/{ip}/{subnetId}/            // deletes IP address from subnet\n                POST   /addresses/first_free/{subnetId}/      // will search for first free address in subnet, creating new address\n            + subnets:\n                GET    /subnets/{id}/addresses/{ip}/          // returns IP address from subnet\n                GET    /subnets/{id}/first_free/              // returns first free address in subnet\n                GET    /subnets/{id}/first_subnet/{mask}/     // returns first available subnets with specified mask\n                GET    /subnets/{id}/all_subnets/{mask}/      // returns all available subnets with specified mask\n                POST   /subnets/{id}/first_subnet/{mask}/     // creates first free subnet under master with specified mask\n                DELETE /subnets/{id}/permissions/             // removes permissions\n                PATCH  /subnets/{id}/permissions/             // sets subnet permissions (?grouname1=ro&groupname2=3&43=1)\n        + New controller Prefix;\n        + New controller Devices;\n        + New subcontrollers:\n            + /tools/nat/\n            + /tools/racks/\n            + /tools/locations/\n    + Widgets:\n        + New threshold widget;\n        + New inactive hosts widget;\n        + New Locations widget;\n    + PowerDNS:\n        + Default domain for PTR records (if hostname is not set);\n        + When removing IP address additional option that removes all associated PDNS records (ip and hostname);\n    + Permit normal users to manage VLANs / VRFs;\n    + Inactive (offline) hosts tools page;\n    + MAC address normalization;\n    + jQuery tables;\n    + Permission delegation now only delegates changes not whole permission set;\n    + Users with RWA permission can manage IP requests and receive IP request mails + changelog mails for subnet;\n    + IPv4 subnet link to IPv6 for dual-stack info;\n    + Removed inacessible DNS servers if timeout to prevent page load timeouts;\n    + Added option to only show supernets to limit pageload [#844 #816 #736];\n    + Added last scan info to subnet details;\n    + Added option to update address tags when address state change occurs (pingCheck) [#840];\n    + Added mantaneance mode;\n    + Added inactive addresses removal script;\n    + Subnet overlapping now checked also inside folders to prevernt duplicates;\n    + Subnet overlapping now checked also between sections if VRF defined;\n    + Added new settings directive that requires unique subnets accross sections;\n    + Added index check in verify database to detect and fix possible missing DB indexes;\n    + Added MAC address vendor display option;\n\n    Bugfixes:\n    ----------------------------\n    + PowerDNS regenerate PTR records now only updates current subnet (before whole zone);\n    + Fixed visual bug on 32-bit systems;\n    + Normal users with RWA permissions can scan subnets;\n    + Changed default timestamp from 0000-00-00 00:00:00 to 1970-01-01 00:00:01 to avoid SQL install errors if strict mode;\n    + Fixed https access on non-standard ports;\n    + Extended username to 255 chars for LDAP logins;\n    + Fixed search export invalid encoding and data may have been lost XLS file error;\n    + Fixed invalid character encoding in API responses;\n    + PowerDNS records cannot be created on slave zone;\n    + Fixed subnet resizing bug if subnet contained slaves;\n    + Added separate CSRF cookies for each address/subnet/pstn object;\n    + Deleted items are now shown and searchable from changelog;\n\n== 1.20.1\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.2;\n    + German translation updated to verson 1.2;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade bug that selected invalid auth method for AD/LDAP users;\n    + Fixed LDAP problems after 1.2 upgrade;\n    + Fixed PowerDNS Slave with multiple masters delimiter error;\n    + Fixed PowerDNS PTR records not being updated automatically;\n    + Fixed csrf cookie bug when editing folder;\n    + Fixed csrf cookie bug when truncationg subnet;\n    + Fixed invalid code for API crypt method;\n    + Fixed strange headings font display in Firefox;\n    + Fixed invalid proxy settings in config.dist.php;\n    + Fixed search same hostnames in db link form address table;\n    + Fixed import subnet bug caused by fw object;\n    + Fixed Subnet Import (Preview button > no action);\n\n== 1.20\n\n    New features:\n    ------------\n    + Added multiple simultaneous authentication methods (Apache, AD, LDAP, Radius, NetIQ);\n    + Added fping scanning support;\n    + Added selectable scanning type (ping/pear/fping);\n    + Added L2 domains;\n    + Added option to define address as default GW for subnet;\n    + Added customizable address tags with compressed option;\n    + Added temporary subnet / address shares;\n    + Added quick subnet masks;\n    + Added nameserver sets per subnets (jonashauge);\n    + Added optional syslog as log location;\n    + REST API:\n        + documentation: http://phpipam.net/api-documentation/\n        + API v2, old v1 support added\n        + Complete rewrite of all API calls;\n        + New security models (crypt, ssl, none);\n        + Support for custom fields;\n        + JSON / XML output\n        + Full read/write controllers (Sections, Subnets/Folders, Addresses, Vlans, Vrfs);\n    + PowerDNS integration:\n        + Automatic reverse records creation (PTR) - IPv4 and IPv6;\n        + Automatic SOA, NS record creation;\n        + DNS domain management;\n    + Added Scan agents to scan subnets remotely;\n    + Added firewall zone mappings and module;\n    + Added per-subnet DNS resolvers;\n    + Added option to mark subnet as utilized (full);\n\n    Enhancements:\n    ----------------------------\n    + All tables are now InnoDB by default;\n    + Upgraded jQuery to 2.1.3;\n    + All functions rewritten to classes/methods;\n    + Parametized all SQL queries, moved from MySQLI to PDO;\n    + Added VLAN/VRF to search and to search results export;\n    + Redesigned admin and tools menu;\n    + Added scanned/discovered subnets to tools for faster overview;\n    + Per-user display settings;\n    + New widget - tools shortcuts;\n    + New widget - IP calculator;\n    + New widget - request IP address;\n    + Clickable links for subnet fields;\n    + Custom VRF fields;\n    + Subnets can be now linked to devices;\n    + Import/export enhancements;\n    + Fast user switching for admins to impersonate user;\n    + Opened folders and subnets in tree menu are saved on page reload;\n    + RWA users can now process IP requests;\n    + Added auto-suggest for possible slave subnets;\n    + SSL option for MySQL connections;\n    + Enum custom field support;\n    + Added password reset script;\n    + Set sections to display VRF in;\n\n    Security Fixes:\n    ----------------------------\n    + Parametized all MySQL querries;\n    + Fixed plainpass being logged on user update;\n    + Fixed XSS exploit on /error/;\n    + Added CSRF protection to forms;\n\n    Translations:\n    ----------------------------\n    + Added Czech translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed bug with SSL/TLS smtp servers;\n    + Fixed visual subnet display issues on 32bit systems;\n    + Fixed IPv6 split subnets bug;\n    + Fixed /31 ping bug scanning out of boundaries;\n    + Fixed nested broadcast not counted to used percentage;\n    + Fixed invalid redirect after timeout;\n    + Fixed discovery script index overridden;\n    + Fixed dashboard graphs links to subnets;\n    + Fixed Invalid ID on subnet scan of large subnets;\n\n== 1.1.010\n\n    Bugfixes:\n    ----------------------------\n    + Fixed login fails with LDAP when escape characters are in password;\n    + Fixed login not working with spaces in password for AD login;\n    + Fixed Ivalid action when adding vlans from subnet popup menu;\n    + Fixed custom fields not appearing properly on IP request editing;\n    + Fixed Invalid ID error for IP address details on sorting;\n    + Fixed warnings if no VLAN search results are present;\n    + Fixed test mail not sending;\n    + Fixed unable to login if $phpsessname not defined;\n    + Fixed unable to login after upgrade;\n\n== 1.1\n\n    Enhancements:\n    ----------------------------\n    + Caching of SQL results to avoid multiple queries;\n    + Reduced number of DB queries;\n    + Added selected mail notifications to admins to be notified on IP/subnet change;\n    + Added new subnetId index to ipaddresses table that significantly improves network loading;\n    + Now using only 1 network connection towards MySQL server;\n    + Updated pagination;\n    + mod_rewrite no longer required, selectable URL structure under settings;\n    + Added option not to display free ranges;\n    + Added option to set maximum VLAN number;\n    + Selectable custom fields to be visible/hidden in tables view and updated device/VLAN view;\n    + Added additional confirmation before section, subnet, folder and IP address deletion;\n    + New script added for cron checks that discovers new hosts for selected networks;\n    + Added inactivity timeout to settings;\n    + Changed install procedure and updated install scripts;\n    + Added PEAR check for installation;\n    + Added free range disaply for VLANs;\n    + Addes SSL/TLS option for SMTP mail;\n    + API:\n        + Bugfixes;\n        + Added API admin permissions;\n        + read/delete actions for IP addresses;\n        + read/delete actions for Vlans;\n        + read/delete actions for VRFs;\n\n    Security Fixes:\n    ----------------------------\n    + Fixed known command injection vulnerabilities in the scan functions;\n    + Fixed known SQL injection vulnerabilities;\n    + Fixed known XSS vulnerabilities;\n    + Fixed known action XSS events;\n    + Moved to crypt method for storing password in database with salting;\n    + Added option to force user to change pass after first login;\n    + Admin password must be changed after installation;\n    + Added captcha code request after 5x unsuccesfull login to prevent brute-force attacks;\n\n    Translations:\n    ----------------------------\n    + Added es_ES translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed top 10 widgets not escaping strings;\n    + Fixed section parent can be set to self that caused section to disapear;\n    + Fixed username instead of password being sent to smtp server;\n    + Fixed IE search bug with workaround;\n    + Fixed subnet and bcast not showing on strict mode disabled;\n    + Fixed top subnets missing on dashboard for non-admin users;\n    + Fixed bug when installation was silently failing bacause pf missing _() function (missing gettext extension)\n    + Fixed device custom field not populated on adding device;\n    + Fixed XLS export silently failed when description longer than 31 characters;\n    + Fixed overlapping check not working;\n    + Fixed subnet free space calcultation;\n    + Fixed visual subnet display not showing on /31 and /32 networks;\n    + Fixed custom fields display on folder edit;\n    + Fixed unable to edit IP addresses when fields are sorted;\n    + Fixde ordering of custom fields defaults to varchar 256;\n    + Fixed IPv6 subnet / broadcast calculation bug and next subnet suggestion;\n\n== 1.0\n\n    New features:\n    ----------------------------\n    + IP address page with IP address details and IP history (Changelog);\n    + IP address changelog, subnet and section changelogs with full changelog under tools;\n    + Favourite subnets for quick access;\n    + Adding subnets from free space with automatic mask provided;\n    + Automatic database validity check after upgrading and automatic field/table fix under administration;\n    + Automatic weekly check for new phpipam version;\n\n    Enhancements:\n    ----------------------------\n    + Bootstrap 3;\n    + UI enhancements;\n    + Improved views based on browser width;\n    + Widget order can now be set;\n    + Widgets can be reordered (dragged) directly on dashboard;\n    + Subnet can now be splitted to max 256 new subnets (16 before);\n    + Scan settings are moved to Administration;\n    + Widget management has moved to administration, which allows creation of new widgets;\n    + Improved ICMP error detection;\n    + Mail settings can now be set on gui (localhost / smtp);\n    + Popup windows are now draggable;\n    + VLAN adding in the fly enhancements;\n    + Master section now shows all subnets in subsections;\n    + Tools > devices redone;\n    + DeviceTypes can now be edited/set/added;\n    + Ping subnet enhancements;\n    + Custom field types are now defineable (int/varchar/date/datetime/text/bool/set);\n    + Date and timepicker popups if type = date/datetime;\n    + For `set` and boolean custom fields dropdown is presented that users can pick;\n\n    + Favourite subnets widget;\n    + IP requests widget;\n    + Changelog widget;\n\n    Translations:\n    ----------------------------\n    + Added Brazil translation (Michel Braga Guimar\u00e3es);\n\n    Bugfixes:\n    --------\n    + UI fixes;\n    + Fixed bug where last page of IP addresses was inaccessible;\n    + IP address state change is now sent to all admins;\n    + Fixed subnet displaying as 0.0.0.0/0 in details;\n    + Fixed links to subnets form vlans and vrfs;\n    + Fixed search result showing all folders if searched item is not IP address;\n    + Fixed disapearing section when L2 section was selected as master section;\n    + Fixed device ID showing in mail notification instead of hostname;\n    + Fixed device ID showing in search results and export instead of hostname;\n    + Fixed search for subnet name returned no results;\n    + Fixed apostophe in IP address description throws SQL error for scan results and XLS import;\n    + Fixed requester email gets cut if longer than 32 chars;\n    + Fixed admin folder edit appearing as subnet;\n    + Fixed missing device/port in import;\n    + Fixed master section delete did not delete subsections and belonging subnets/ips;\n    + Fixed online status was not updated when running Ping status scans;\n    + Fixed Folder name not appearing when deleting folder;\n\n== 0.9\n\n    New features:\n    ----------------------------\n    + Support for ICMP network discovery;\n    + Cron script to check status for selected subnets/hosts with threading suport (pcntl php extension required);\n    + ICMP check IP status in demand;\n    + Compressed (grouped) DHCP IP ranges;\n    + API server version 0.1;\n    + Option to show and group subnets by VLAN in subnets list;\n    + Option to show and group subnets by VRF in subnets list;\n    + Added subsections;\n    + Added AD username search;\n    + Added folders;\n\n    Enhancements:\n    ----------------------------\n    + Added error catching/displaying for ajax-loaded php scripts;\n    + Added default language for login/requests display and new users;\n    + Added direct links to different pages in IP address table;\n    + Subnets can now be edited directly from nested subnets list;\n    + When adding nested subnets default vlan/vrf is selected from parent;\n    + Added Section ordering;\n    + Added per/section subnet ordering (overrides dafault form settings);\n    + Clicking on section now shows all subnets and belonging details;\n    + If session timeouts after re-login last requested page will be opened;\n    + Searh for IP address now returns also subnet, even if IP is not existing;\n    + Per-user selection of widgets to display;\n    + Added description and required field checkbox for custom IP/Subnet Fields;\n    + Added custom device fields;\n    + Mails are now sent through phpmailer;\n    + Admin user cannot be deleted;\n\n    Translations:\n    ----------------------------\n    + Added French translation (Denis Darr\u00e9);\n    + Added Dutch translation (Michiel Visser);\n    + Added German translation (Carsten Br\u00fcckner);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed wrong VLAN display in tools;\n    + Fixed subnet/section links from VLANS if base not /;\n    + Fixed warning in apache log on subnet editing if no VRFs are configured;\n    + Fixed admin menu off-screen overflow;\n    + Fixed firefox error when selectiong rights for section/subnets was not possible;\n    + Fixed subnet description in Cyrillic problem;\n    + Fixed errors on no permissions for user;\n    + Fixed Inaccurate Free Space Calculation (and Chart);\n    + Fixed VLAN permissions where VLAN was not displayed;\n\n== 0.8\n\n    New features:\n    ----------------------------\n    + New group and permission management;\n    + Support for translations;\n    + Subnet resizing;\n    + Subnet splitting into smaller subnets;\n    + Added free space display for nested subnets;\n    + Added visual display of subnet usage per IP address;\n    + Added truncate network option that deletes all IP addresses in subnet;\n    + Added button the updates subnet with RIPE information;\n\n    Enhancements:\n    ----------------------------\n    + Added add nested subnet under subnet details to simplify master subnet selection in hierarchy;\n    + Added edit subnet link from search results;\n    + Added reverse IPv6 DNS entries to IPCalc (Vincent Boisard);\n    + Added option for plain-text emails;\n    + Added ckEditor to write instructions;\n    + StrictMode is not set globally anymore but set per section;\n    + Added custom user fields;\n    + Added option to verify that hostname is unique;\n    + Improved MySQL exception handling;\n    + Added mod_rewrite error detection on installation and upgrade;\n    + Added hostname validation;\n    + Added Hostfile dump of IP addresses;\n    + Search also searches in custom fields;\n    + jQuery updated to v 1.9.1;\n\n    Bugfixes:\n    ------------------------\n    + Fixed overlay on second popup;\n    + Fixed IE search bug;\n    + Fixed support for non-standard ports;\n    + Fixed permitting overlapping subnets if vrfs are different;\n    + Fixed dates in logging appearing in 12h format;\n    + Fixed broken subnets link in tools > subnets if installation is not at document root;\n    + Fixed error when adding new subnet if checkboxes are not selected in newer MySQL servers;\n    + Fixed bad display of multilined navigation bar;\n    + Fixed wrong output of tools > VLAN list when using Duplicate VLANs;\n    + Fixed wrong link for upgrade script;\n    + On VRF change all child subnets are updated also;\n    + Fixed wrong maximum on dashboard top10 percentage;\n    + Fixed Adding a vlan while editing a subnet resets the edit subnet form;\n    + Fixed wrong free space calculation for nested subnets;\n    + Fixed IP use statistics not cumulative up the hierarchy if subnes has slaves;\n\n== 0.7\n\n    New features:\n    ----------------------------\n    + Completely rewritten UI using twitter's bootstrap as base;\n    + Using mod_rewrite apache module to handle GET requests (new install requitements!);\n    + Unlimited number of subnetting levels;\n    + OpenLDAP authentication support;\n    + New URL structure;\n    + Sorting of IP addresses;\n    + Custom subnet fields;\n    + Custom VLAN fields and admin option to allow duplicate VLAN names (metro area VLANs);\n    + Script to automatically update IP <-> hostname, run via cron (functions/scripts/resolveIPaddresses.php);\n    + Show Subnet name instead of subnet IP address option;\n    + Strict mode option in config files that controlls overlapping checks;\n    + New subnet menu;\n    + Added printLimit feature to break IP addresses into pages;\n\n    Enhancements:\n    ----------------------------\n    + Lots of UI changes;\n    + Less Ajax usage to display websites and details;\n    + Hierarchy display under subnet details (breadcrumbs);\n    + Search results covering VLANs;\n    + Custom IP fields ordering;\n    + VLAN creation from adding/editing subnets;\n    + IP addresses can now be edited;\n    + Collapsed switch list;\n    + Removing VLANs also removes references from subnet list;\n    + Removing VRFs also removes references from subnet list;\n    + Logs for admin on dashboard;\n    + Search via GET;\n    + Support for range networks (allows use of subnet and broadcast as IP);\n    + Import of custom IP fields;\n    + Abiility to move subnets between sections;\n    + Improved display of nested subnets now shows all IP addresses from nested subnets and orphaned IPs;\n    + Hides display of custom fields in subnet if none is filled in whole subnet;\n    + Replaced Highcharts with Flot because of licencing issues;\n\n    Bugfixes:\n    ------------------------\n    + Fixed error with missing custom IP fields when adding new IP address;\n    + Fixed bug when deleteing root subnet only deleted directly nested subnets (now whole tree);\n    + Fixed checkboxes not working in various browsers;\n    + Fixed change in switch details causing IP address associations to switch to be lost;\n    + Fixed subnet description display in under subnet administration;\n    + Fixed depricated error when showing XLS files;\n    + Fixed error when custom fields were not updated on adding IP address;\n    + Fixed error when custom fields were with spaces in name were not updated;\n    + Fixed error when providing already requested IP address;\n    + Search available also to viewer user types;\n    + Fixed /127 and /128 IPv6 subnets;\n    + Fixed /31 and /32 IPv4 subnets;\n    + Significally reduced php processing for dashboard statistics;\n    + Fixed importing of if quote is present;\n\n== 0.6\n\n    New features:\n    ----------------------------\n    + Selectable IP address list display fields;\n    + Custom IP address fields;\n    + Search and replace IP fields function;\n    + Full page width theme;\n\n    Enhancements:\n    ----------------------------\n    + Independant VLAN management;\n    + Added additional level of subnet nesting;\n    + Added option to clear and export log files;\n    + Export of search results to XLS;\n    + Clickable search results;\n    + Selectable export fields when exporting subnet;\n    + Subnet can be deleted from ip address edit subnet;\n    + IP Requests for locked subnets and viewer users can be placed from ip address list;\n    + jQuery updated to v 1.7.1;\n    + HighCharts updated to v 2.2.0;\n\n    Bugfixes:\n    ------------------------\n    + Upgrade is supported only for versions 0.4 and higher;\n    + Fixed broken UTF-8 support;\n    + Fixed wrong logging when authenticating via AD;\n    + Fixed issues where external attacker might get information about internal hosts through resolvedns script;\n    + Fixed wrong subnet nesting under administration/manage subnets;\n    + Fixed editing subnet can be outside of its own root subnet;\n    + Fixed errors when adding new switch auto-adds itselt to all hosts without no switch defined;\n    + Fixed removing switch not removed in ip address list;\n    + Vlan1 can now be used;\n    + Fixed mail sending settings with missing information;\n    + Fixed errors on adding switch with no sections;\n    + Fixed version check;\n    + Removed masterSubnets from subnets available for IP requests;\n    + Fixed error when non-admin user could not open dashboard;\n    + Added how subnet list switch when list hidden;\n\n== 0.5\n\n    New features:\n    -------------\n    + Importing subnets from RIPE by AS in admin section;\n    + Added switch management and changed switch logic;\n    + Added VRF support;\n    + Added AD domain authentication;\n    + Added MAC address field to ip address;\n    + Added database table and belonging fields check under admin;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Added DNS resolving when editing/adding IP address;\n    + Added IE compatibility meta tag and IE UI improvements for IE >= 8;\n    + Search returns also subnets and MAC searches;\n    + Added mac address and IP status to XLS import/export scripts;\n    + jQuery update from 1.6.2 to 1.7;\n    + Highcharts update from 2.1.2 to 2.1.8;\n\n    + Fixed dashboard errors if no IPv4/IPv6 subnets configured;\n    + Fixed errors with viewing / modifying IP addresses for Operator users;\n    + Fixed session cookie error on hosts;\n    + Fixed error when saving settings;\n    + Fixed instructions errors when inserting html code;\n    + Fixed first free IP address not displaying in IP request;\n\n\n== 0.4\n\n    New features:\n    -------------\n    + Massive add / edit / delete by specifying IP range (e.g. 10.10.0.1 - 10.10.0.254);\n    + Database upgrade / install from browser -> simplified installation/update procedure;\n    + New usertype viewer - can only view IP address list;\n    + Subnets can now be edited directly from IP address list;\n    + Option to lock subnet for writing to no-admin users;\n    + Device and Host list;\n    + Option to specify which subnet can have IP requests when editing / adding subnet if module is enabled;\n    + Latest version check on admin page;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Fixed overspanning of multiple sections;\n    + Admin menu and add subnet now shown only to admins;\n    + Fixed VLAN table to show nesting and IP request option and statistics;\n    + Fixed subnet table to show nesting and IP request option;\n    + Subnet Adding shows only master subnets in section not in all sections;\n    + Tooltips and button hovers are now in separate javascript file;\n    + Graphs show only subnets with non-0 ip addresses;\n    + Various code enhancements + improved error handling;\n    + Fixed URL links not updating after few clicks;\n    + If loading slave subnet directly the subnet menu drops down and shows active slave subnet;\n    + Clicking on master shubnet shows all nested subnets and statistics;\n    + Redesigned log table;\n    + Fixed search;\n\n== 0.3\n\n    New features:\n    -------------\n    + Subnet nesting - you can now have master subnet and normal subnets belonging to it;\n    + Server settings are now moved to database and can be set under admin menu (database settings & debugging remain in config.php);\n    + Request IP module on login page with email notification;\n    + Confirm/reject IP address request from admin page with mail notification;\n    + Admin dashboard notification of new requests;\n    + Autocomplete of owner and Switch name from all available when adding/editing IP address;\n    + New settings quick access on button hover;\n    + Option to export each subnet indivudually;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + jQuery update from 1.6 to 1.6.2;\n    + VLANs are now grouped by section;\n    + Direct access to subnet from vlan table;\n    + UI enhancements;\n    + Fixed user editing bug where user update broke password;\n    + Fixed password in new account notification;\n    + Fixed percentage display on Dashboard;\n    + IPv6 calculator /64 limit fixed;\n    + Changed tooltip effect to appear instantly for smoother display;\n    + Login functions are now separate file;\n\n\n== 0.2 (First public version)\n\n    Bugfixes / enhancements:\n    ------------------------\n    + now also works with php 5.2;\n    + fixed empty fields in xls import;\n    + passwords are now stored in md5 hash;\n    + high numbers for free/used IP addresses (mainly IPv6) are now represented in k/m/G values to improve readibility;\n    + fixed log search bug;\n    + cursor not displayed as link on images and non-href links;\n    + same add image on all pages;\n    + fixed IP mail notification apperance;\n    + UI enhancements and bugfixes;\n    + Fixed some javascript bugs;\n    + Minified javascript to make loading faster;\n    + adding new ip address now automatically provides first available IP address in subnet;\n\n    New features:\n    -------------\n    + added switch / port fields to IP addresses;\n    + hide subets on request to get better view;\n    + Informational tooltips added + option to disable them in config file if someone finds them annoying;\n    + export whole IP address database to XLS file from admin menu;\n    + create MySQL database dump from admin menu;\n    + added IP instructions for users, that can be edited from admin menu;\n\n\n== 0.1 (First test version)\n"], "fixing_code": ["<?php\n\n/**\n *\tGenerate hostfile dump for /etc/hosts\n *********************************/\n\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Sections\t= new Sections ($Database);\n$Subnets\t= new Subnets ($Database);\n$Addresses\t= new Addresses ($Database);\n$Tools\t\t= new Tools ($Database);\n$Admin\t\t= new Admin ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n\n//set filename\n$filename = \"phpipam_hosts_\". date(\"Y-m-d\");\n\n//fetch all addresses with hostname set\n$hosts = $Tools->fetch_addresses_for_export();\n\n//loop\nif(sizeof($hosts)>0) {\n\t//details\n\t$m=0;\n\tforeach($hosts as $host) {\n\t\t//fetch subnet and section details on change!\n\t\tif(@$hosts[$m-1]->subnetId!=$hosts[$m]->subnetId) {\n\t\t\t$subnet  = (array) $Subnets->fetch_subnet(null, $host->subnetId);\n\t\t\t$section = (array) $Sections->fetch_section(null, $subnet['sectionId']);\n\n\t\t\t//first print subnet and section details\n\t\t\t$res[] = \"# $subnet[description] (\".$Subnets->transform_to_dotted($subnet['subnet']).\"/$subnet[mask]) - $section[description]\";\n\t\t}\n\n\t\t//than address details\n\t\t$diff = 17 - strlen($Subnets->transform_to_dotted($host->ip_addr));\t//for print offset\n\t\t$diff>0 ? : $diff = 3;\t\t\t\t\t\t\t\t\t\t\t\t//IPv6 print offset\n\n\t\t$res[] = $Subnets->transform_to_dotted($host->ip_addr).str_repeat(\" \", $diff).\"$host->hostname\";\n\n\t\t//break\n\t\tif($hosts[$m]->subnetId!=@$hosts[$m+1]->subnetId) {\n\t\t$res[] = \"\";\n\t\t}\n\n\t\t$m++;\t\t//next index\n\t}\n}\n\n# join content\n$content = implode(\"\\n\", $res);\n\n\n# headers\nheader(\"Cache-Control: private\");\nheader(\"Content-Description: File Transfer\");\nheader('Content-type: application/octet-stream');\nheader('Content-Disposition: attachment; filename=\"'. $filename .'\"');\n\nprint($content);", "<?php\n\n/**\n *\tGenerate XLS file\n *********************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Admin\t\t= new Admin ($Database);\n\n# verify that user is logged in\n$User->check_user_session();\n\n$mysqldump = Config::get('mysqldump_cli_binary', '/usr/bin/mysqldump');\n\nif ( !file_exists($mysqldump) ) {\n    $filename = \"error_message.txt\";\n\n    $content  = _(\"Unable to locate executable: \").$mysqldump.\"\\n\";\n    $content .= _(\"Please configure \\$mysqldump_cli_binary in config.php\\n\");\n} else {\n    $filename = \"phpipam_MySQL_dump_\". date(\"Y-m-d\") .\".sql\";\n\n    $db = Config::get('db');\n\n    $command      = \"$mysqldump --opt -h '\". $db['host'] .\"' -u '\". $db['user'] .\"' -p'\". $db['pass'] .\"' '\". $db['name'] .\"'\";\n    $command_safe = \"$mysqldump --opt -h '\". $db['host'] .\"' -u '\". \"<REDACTED>\" .\"' -p'\". \"<REDACTED>\" .\"' '\". $db['name'] .\"'\";\n\n    $content  = \"# phpipam Database dump \\n\";\n    $content .= \"#    command executed: $command_safe \\n\";\n    $content .= \"# --------------------- \\n\\n\";\n    $content .= shell_exec($command);\n}\n\nheader(\"Cache-Control: private\");\nheader(\"Content-Description: File Transfer\");\nheader(\"Content-Type: application/octet-stream\");\nheader('Content-Disposition: attachment; filename=\"'. $filename .'\"');\nheader(\"Content-Length: \" . strlen($content));\n\nprint($content);\n", "<?php\n\n/**\n *\tGenerate XLS file\n *********************************/\n\n/* functions */\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\nrequire( dirname(__FILE__) . '/../../../functions/PEAR/Spreadsheet/Excel/Writer.php');\n\n\n# initialize user object\n$Database \t= new Database_PDO;\n$User \t\t= new User ($Database);\n$Sections\t= new Sections ($Database);\n$Subnets\t= new Subnets ($Database);\n$Addresses\t= new Addresses ($Database);\n$Tools\t\t= new Tools ($Database);\n$Admin\t\t= new Admin ($Database);\n$Result \t= new Result ();\n\n# verify that user is logged in\n$User->check_user_session();\n\n\n\n// Create a workbook\n$filename = \"phpipam_IP_adress_export_\". date(\"Y-m-d\") .\".xls\";\n$workbook = new Spreadsheet_Excel_Writer();\n$workbook->setVersion(8);\n\n//fetch sections, and for each section write new tab, inside tab write all values!\n$sections = $Sections->fetch_sections();\n\n//we need to reformat state!\n$ip_types = $Addresses->addresses_types_fetch();\n//fetch devices and reorder\n$devices = $Tools->fetch_all_objects(\"devices\", \"hostname\");\n$devices_indexed = array();\nif ($devices!==false) {\n    foreach($devices as $d) {\n    \t$devices_indexed[$d->id] = $d;\n    }\n}\n\n\n\n//get all custom fields!\n# fetch custom fields\n$myFields = $Tools->fetch_custom_fields('ipaddresses');\n$myFieldsSize = sizeof($myFields);\n\n$colSize = 8 + $myFieldsSize;\n\n//formatting headers\n$format_header = $workbook->addFormat();\n$format_header->setBold();\n$format_header->setColor('white');\n$format_header->setFgColor('black');\n\n//formatting titles\n$format_title = $workbook->addFormat();\n$format_title->setColor('black');\n$format_title->setFgColor(22);\t\t\t//light gray\n$format_title->setBottom(2);\n$format_title->setLeft(1);\n$format_title->setRight(1);\n$format_title->setTop(1);\n$format_title->setAlign('left');\n\n//formatting content - borders around IP addresses\n$format_right = $workbook->addFormat();\n$format_right->setRight(1);\n$format_left = $workbook->addFormat();\n$format_left->setLeft(1);\n$format_top = $workbook->addFormat();\n$format_top->setTop(1);\n\n\nforeach ($sections as $section) {\n\t//cast\n\t$section = (array) $section;\n\t// Create a worksheet\n\t$worksheet_name = $Tools->shorten_text($section['name'], 30);\n\t$worksheet =& $workbook->addWorksheet($worksheet_name);\n\t$worksheet->setInputEncoding(\"utf-8\");\n\n\t//get all subnets in this section\n\t$subnets = $Subnets->fetch_section_subnets ($section['id']);\n\n\t$lineCount = 0;\n\t//Write titles\n\tforeach ($subnets as $subnet) {\n\t\t//cast\n\t\t$subnet = (array) $subnet;\n\t\t//ignore folders!\n\t\tif($subnet['isFolder']!=\"1\") {\n\t\t\t//vlan details\n\t\t\t$vlan = (array) $Tools->fetch_object(\"vlans\", \"vlanId\", $subnet['vlanId']);\n\t\t\tif(strlen($vlan['number']) > 0) {\n\t\t\t\t$vlanText = \" (vlan: \" . $vlan['number'];\n\t\t\t\tif(strlen($vlan['name']) > 0) {\n\t\t\t\t\t$vlanText .= ' - '. $vlan['name'] . ')';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$vlanText .= \")\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$vlanText = \"\";\n\t\t\t}\n\n\t\t\t$worksheet->write($lineCount, 0, $Subnets->transform_to_dotted($subnet['subnet']) . \"/\" .$subnet['mask'] . \" - \" . $subnet['description'] . $vlanText, $format_header );\n\t\t\t$worksheet->mergeCells($lineCount, 0, $lineCount, $colSize);\n\n\t\t\t$lineCount++;\n\n\t\t\t//IP addresses in subnet\n\t\t\t$ipaddresses = $Addresses->fetch_subnet_addresses ($subnet['id']);\n\n\t\t\t//write headers\n\t\t\t$worksheet->write($lineCount, 0, _('ip address' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 1, _('ip state' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 2, _('description' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 3, _('hostname' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 4, _('mac' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 5, _('owner' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 6, _('device' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 7, _('port' ),$format_title);\n\t\t\t$worksheet->write($lineCount, 8, _('note' ),$format_title);\n\t\t\t$m = 9;\n\t\t\t//custom\n\t\t\tif(sizeof($myFields) > 0) {\n\t\t\t\tforeach($myFields as $myField) {\n\t\t\t\t\t$worksheet->write($lineCount, $m, $myField['name'] ,$format_title);\n\t\t\t\t\t$m++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$lineCount++;\n\n\t\t\tif(is_array($ipaddresses) && sizeof($ipaddresses) > 0) {\n\n\t\t\tforeach ($ipaddresses as $ip) {\n\t\t\t\t//cast\n\t\t\t\t$ip = (array) $ip;\n\n\t\t\t\t//reformat state\n\t\t\t\tif(@$ip_types[$ip['state']]['showtag']==1) \t{ $ip['state'] = $ip_types[$ip['state']]['type']; }\n\t\t\t\telse\t\t\t\t\t\t\t\t\t\t{ $ip['state'] = \"\"; }\n\n\t\t\t\t//change switch ID to name\n\t\t\t\t$ip['switch'] = is_null($ip['switch'])||strlen($ip['switch'])==0||$ip['switch']==0 ? \"\" : $devices_indexed[$ip['switch']]->hostname;\n\n\t\t\t\t$worksheet->write($lineCount, 0, $Subnets->transform_to_dotted($ip['ip_addr']), $format_left);\n\t\t\t\t$worksheet->write($lineCount, 1, $ip['state']);\n\t\t\t\t$worksheet->write($lineCount, 2, $ip['description']);\n\t\t\t\t$worksheet->write($lineCount, 3, $ip['hostname']);\n\t\t\t\t$worksheet->write($lineCount, 4, $ip['mac']);\n\t\t\t\t$worksheet->write($lineCount, 5, $ip['owner']);\n\t\t\t\t$worksheet->write($lineCount, 6, $ip['switch']);\n\t\t\t\t$worksheet->write($lineCount, 7, $ip['port']);\n\t\t\t\t$worksheet->write($lineCount, 8, $ip['note']);\n\t\t\t\t//custom\n\t\t\t\t$m = 9;\n\t\t\t\tif(sizeof($myFields) > 0) {\n\t\t\t\t\tforeach($myFields as $myField) {\n\t\t\t\t\t\t$worksheet->write($lineCount, $m, $ip[$myField['name']]);\n\t\t\t\t\t\t$m++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$lineCount++;\n\t\t\t}\n\n\t\t}\n\t\t\telse {\n\t\t\t\t$worksheet->write($lineCount, 0, _('No hosts'));\n\t\t\t\t$lineCount++;\n\t\t\t}\n\n\t\t\t//new line\n\t\t\t$lineCount++;\n\t\t}\n\t}\n}\n\n// sending HTTP headers\n$workbook->send($filename);\n\n// Let's send the file\n$workbook->close();", "<?php\n\n# required functions\nif(!is_object(@$User)) {\n\trequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\t# classes\n\t$Database\t= new Database_PDO;\n\t$User \t\t= new User ($Database);\n\t$Tools \t\t= new Tools ($Database);\n\t$Log\t\t= new Logging ($Database);\n\t$Admin\t\t= new Admin ($Database);\n\t$Result\t\t= new Result ();\n}\n\n# user must be authenticated\n$User->check_user_session ();\n\n# if direct request that redirect to tools page\nif($_SERVER['HTTP_X_REQUESTED_WITH']!=\"XMLHttpRequest\")\t{\n\theader(\"Location: \".create_link(\"tools\",\"logs\"));\n}\n\n# if syslog print\nif ($User->settings->log==\"syslog\") {\n\t$Result->show(\"warning\", _(\"Log files are sent to syslog\"));\n}\nelse {\n\t# print last 5 access logs\n\t$logs = $Log->fetch_logs(5, NULL, NULL, NULL, \"on\", \"off\", \"off\");\n\tif (!is_array($logs)) { $logs = array(); }\n\n\tprint \"<table class='table table-condensed table-hover table-top'>\";\n\n\t# headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('Severity').\"</th>\";\n\tprint \"\t<th>\"._('Command').\"</th>\";\n\tprint \"\t<th>\"._('Date').\"</th>\";\n\tprint \"\t<th>\"._('Username').\"</th>\";\n\tprint \"</tr>\";\n\n\t# logs\n\tforeach($logs as $log) {\n\t\t# cast\n\t\t$log = (array) $log;\n\t\t# reformat severity\n\t\tif($log['severity'] == 0)\t\t{ $log['severityText'] = _(\"Info\"); }\n\t\telse if($log['severity'] == 1)\t{ $log['severityText'] = _(\"Warn\"); }\n\t\telse if($log['severity'] == 2)\t{ $log['severityText'] = _(\"Err\"); }\n\n\t\tprint \"<tr>\";\n\t\tprint \"\t<td><span class='severity$log[severity]'>$log[severityText]</span></td>\";\n\t\tprint \"\t<td><a class='openLogDetail' data-logid='$log[id]'>$log[command]</a></td>\";\n\t\tprint \"\t<td>$log[date]</td>\";\n\t\tprint \"\t<td>$log[username]</td>\";\n\n\t\tprint \"</tr>\";\n\t}\n\n\tprint \"</table>\";\n\n\t# print if none\n\tif(sizeof($logs) == 0) {\n\t\tprint \"<blockquote style='margin-top:20px;margin-left:20px;'>\";\n\t\tprint \"<p>\"._(\"No logs available\").\"</p>\";\n\t\tprint \"</blockquote>\";\n\t}\n}\n?>", "<?php\n\n# required functions\nif(!is_object(@$User)) {\n\trequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\t# classes\n\t$Database\t= new Database_PDO;\n\t$User \t\t= new User ($Database);\n\t$Tools \t\t= new Tools ($Database);\n\t$Log\t\t= new Logging ($Database);\n\t$Admin\t\t= new Admin ($Database);\n\t$Result\t\t= new Result ();\n}\n\n# user must be authenticated\n$User->check_user_session ();\n\n# if direct request that redirect to tools page\nif($_SERVER['HTTP_X_REQUESTED_WITH']!=\"XMLHttpRequest\")\t{\n\theader(\"Location: \".create_link(\"tools\",\"logs\"));\n}\n\n# if syslog print\nif ($User->settings->log==\"syslog\") {\n\t$Result->show(\"warning\", _(\"Log files are sent to syslog\"));\n}\nelse {\n\t# print last 5 access logs\n\t$logs = $Log->fetch_logs(5, NULL, NULL, NULL, \"off\", \"on\", \"on\");\n\tif (!is_array($logs)) { $logs = array(); }\n\n\tprint \"<table class='table table-condensed table-hover table-top'>\";\n\n\t# headers\n\tprint \"<tr>\";\n\tprint \"\t<th>\"._('Severity').\"</th>\";\n\tprint \"\t<th>\"._('Command').\"</th>\";\n\tprint \"\t<th>\"._('Date').\"</th>\";\n\tprint \"\t<th>\"._('Username').\"</th>\";\n\tprint \"</tr>\";\n\n\t# logs\n\tforeach($logs as $log) {\n\t\t# cast\n\t\t$log = (array) $log;\n\t\t# reformat severity\n\t\tif($log['severity'] == 0)\t\t{ $log['severityText'] = _(\"Info\"); }\n\t\telse if($log['severity'] == 1)\t{ $log['severityText'] = _(\"Warn\"); }\n\t\telse if($log['severity'] == 2)\t{ $log['severityText'] = _(\"Err\"); }\n\n\t\tprint \"<tr>\";\n\t\tprint \"\t<td><span class='severity$log[severity]'>$log[severityText]</span></td>\";\n\t\tprint \"\t<td><a class='openLogDetail' data-logid='$log[id]'>$log[command]</a></td>\";\n\t\tprint \"\t<td>$log[date]</td>\";\n\t\tprint \"\t<td>$log[username]</td>\";\n\n\t\tprint \"</tr>\";\n\t}\n\n\tprint \"</table>\";\n\n\t# print if none\n\tif(sizeof($logs) == 0) {\n\t\tprint \"<blockquote style='margin-top:20px;margin-left:20px;'>\";\n\t\tprint \"<p>\"._(\"No logs available\").\"</p>\";\n\t\tprint \"</blockquote>\";\n\t}\n}\n?>", "<?php\n\n/**\n *\tGenerate XLS file for subnet\n *********************************/\n\n# include required scripts\nrequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\nrequire( dirname(__FILE__) . '/../../../functions/PEAR/Spreadsheet/Excel/Writer.php');\n\n# initialize required objects\n$Database \t= new Database_PDO;\n$Result\t\t= new Result;\n$User\t\t= new User ($Database);\n$Subnets\t= new Subnets ($Database);\n$Tools\t    = new Tools ($Database);\n$Addresses\t= new Addresses ($Database);\n\n# verify that user is logged in\n$User->check_user_session();\n\n# we dont need any errors!\nini_set('display_errors', 0);\nini_set('display_startup_errors', 0);\nerror_reporting(E_ALL ^ E_NOTICE ^ E_STRICT);\n\n# fetch subnet details\n$subnet = $Tools->fetch_object(\"subnets\", \"id\", $_GET['subnetId']);\nif (!is_object($subnet) || $Subnets->check_permission($User->user, $_GET['subnetId'], $subnet) == User::ACCESS_NONE) {\n\t$Result->fatal_http_error(404, _(\"Subnet not found\"));\n}\n$subnet = (array) $subnet;\n\n# fetch all IP addresses in subnet\n$addresses = $Addresses->fetch_subnet_addresses ($_GET['subnetId'], \"ip_addr\", \"asc\") ? : [];\n\n# get all custom fields\n$custom_fields = $Tools->fetch_custom_fields ('ipaddresses');\n\n\n# Create a workbook\n$filename = isset($_GET['filename'])&&strlen(@$_GET['filename'])>0 ? $_GET['filename'] : \"phpipam_subnet_export.xls\";\n$workbook = new Spreadsheet_Excel_Writer();\n$workbook->setVersion(8);\n\n//formatting headers\n$format_header =& $workbook->addFormat();\n$format_header->setBold();\n$format_header->setColor('black');\n$format_header->setSize(12);\n\n//format vlan\n$format_vlan =& $workbook->addFormat();\n$format_vlan->setColor('black');\n$format_vlan->setSize(11);\n\n\n//formatting titles\n$format_title =& $workbook->addFormat();\n$format_title->setColor('black');\n$format_title->setFgColor(22);\t\t\t//light gray\n$format_title->setBottom(1);\n$format_title->setTop(1);\n$format_title->setAlign('left');\n\n//formatting content - borders around IP addresses\n$format_right =& $workbook->addFormat();\n$format_right->setRight(1);\n$format_left =& $workbook->addFormat();\n$format_left->setLeft(1);\n$format_top =& $workbook->addFormat();\n$format_top->setTop(1);\n\n\n// Create a worksheet\n$worksheet_name = strlen($subnet['description']) > 30 ? substr($subnet['description'],0,27).'...' : $subnet['description'];\n$worksheet =& $workbook->addWorksheet($worksheet_name);\n$worksheet->setInputEncoding(\"utf-8\");\n\n$lineCount = 0;\n$rowCount  = 0;\n\n# Write title - subnet details\n$worksheet->write($lineCount, $rowCount, $subnet['description'], $format_header );\n$lineCount++;\n$worksheet->write($lineCount, $rowCount, $Subnets->transform_address($subnet['subnet'],\"dotted\") . \"/\" .$subnet['mask'], $format_header );\n$lineCount++;\n\n# write VLAN details\n$vlan = $Tools->fetch_object(\"vlans\", \"vlanId\", $subnet['vlanId']);\nif($vlan!=false) {\n\t$vlan = (array) $vlan;\n\t$vlan_text = strlen($vlan['name'])>0 ? \"vlan: $vlan[number] - $vlan[name]\" : \"vlan: $vlan[number]\";\n\n\t$worksheet->write($lineCount, $rowCount, $vlan_text, $format_vlan );\n\t$lineCount++;\n}\n$lineCount++;\n\n//set row count\n$rowCount = 0;\n\n//write headers\nif( (isset($_GET['ip_addr'])) && ($_GET['ip_addr'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('ip address') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['state'])) && ($_GET['state'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('ip state') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['description'])) && ($_GET['description'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('description') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['hostname'])) && ($_GET['hostname'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('hostname') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['firewallAddressObject'])) && ($_GET['firewallAddressObject'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('fw object') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['mac'])) && ($_GET['mac'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('mac') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['owner'])) && ($_GET['owner'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('owner') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['switch'])) && ($_GET['switch'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('device') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['port'])) && ($_GET['port'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('port') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['note'])) && ($_GET['note'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('note') ,$format_title);\n\t$rowCount++;\n}\nif( (isset($_GET['location'])) && ($_GET['location'] == \"on\") ) {\n\t$worksheet->write($lineCount, $rowCount, _('location') ,$format_title);\n\t$rowCount++;\n}\n\n//custom\nif(sizeof($custom_fields) > 0) {\n\tforeach($custom_fields as $myField) {\n\t\t//set temp name - replace space with three ___\n\t\t$myField['nameTemp'] = str_replace(\" \", \"___\", $myField['name']);\n\n\t\tif( (isset($_GET[$myField['nameTemp']])) && ($_GET[$myField['nameTemp']] == \"on\") ) {\n\t\t\t$worksheet->write($lineCount, $rowCount, $myField['name'] ,$format_title);\n\t\t\t$rowCount++;\n\t\t}\n\t}\n}\n\n\n$lineCount++;\n\n\n//we need to reformat state!\n$ip_types = $Addresses->addresses_types_fetch();\n//fetch devices and reorder\n$devices = $Tools->fetch_all_objects(\"devices\", \"hostname\");\n$devices_indexed = array();\nif ($devices!==false) {\n\tforeach($devices as $d) {\n\t\t$devices_indexed[$d->id] = (object) $d;\n\t}\n}\n//add blank\n$devices_indexed[0] = new StdClass ();\n$devices_indexed[0]->hostname = 0;\n\n//fetch locations and reorder\n$locations = $Tools->fetch_all_objects(\"locations\", \"id\");\n$locations_indexed = array();\nif ($locations!==false) {\n\tforeach($locations as $d) {\n\t\t$locations_indexed[$d->id] = (object) $d;\n\t}\n}\n//add blank\n$locations_indexed[0] = new StdClass ();\n$locations_indexed[0]->name = 0;\n\n//write all IP addresses\nforeach ($addresses as $ip) {\n\t$ip = (array) $ip;\n\n\t//reset row count\n\t$rowCount = 0;\n\n\t//change switch ID to name\n\t$ip['switch']   = is_null($ip['switch'])||strlen($ip['switch'])==0||$ip['switch']==0||!isset($devices_indexed[$ip['switch']]) ? \"\" : $devices_indexed[$ip['switch']]->hostname;\n\t$ip['location'] = is_null($ip['location'])||strlen($ip['location'])==0||$ip['location']==0||!isset($locations_indexed[$ip['location']]) ? \"\" : $locations_indexed[$ip['location']]->name;\n\n\tif( (isset($_GET['ip_addr'])) && ($_GET['ip_addr'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $Subnets->transform_address($ip['ip_addr'],\"dotted\"), $format_left);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['state'])) && ($_GET['state'] == \"on\") ) {\n\t\tif(@$ip_types[$ip['state']]['showtag']==1) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip_types[$ip['state']]['type']);\n\t\t}\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['description'])) && ($_GET['description'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['description']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['hostname'])) && ($_GET['hostname'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['hostname']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['firewallAddressObject'])) && ($_GET['firewallAddressObject'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['firewallAddressObject']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['mac'])) && ($_GET['mac'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['mac']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['owner'])) && ($_GET['owner'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['owner']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['switch'])) && ($_GET['switch'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['switch']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['port'])) && ($_GET['port'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['port']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['note'])) && ($_GET['note'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['note']);\n\t\t$rowCount++;\n\t}\n\tif( (isset($_GET['location'])) && ($_GET['location'] == \"on\") ) {\n\t\t$worksheet->write($lineCount, $rowCount, $ip['location']);\n\t\t$rowCount++;\n\t}\n\n\t//custom\n\tif(sizeof($custom_fields) > 0) {\n\t\tforeach($custom_fields as $myField) {\n\t\t\t//set temp name - replace space with three ___\n\t\t\t$myField['nameTemp'] = str_replace(\" \", \"___\", $myField['name']);\n\n\t\t\tif( (isset($_GET[$myField['nameTemp']])) && ($_GET[$myField['nameTemp']] == \"on\") ) {\n\t\t\t\t$worksheet->write($lineCount, $rowCount, $ip[$myField['name']]);\n\t\t\t\t$rowCount++;\n\t\t\t}\n\t\t}\n\t}\n\n\t$lineCount++;\n}\n\n\n//new line\n$lineCount++;\n\n// sending HTTP headers\n$workbook->send($filename);\n\n// Let's send the file\n$workbook->close();\n\n?>", "<script type=\"text/javascript\">\n$(document).ready(function() {\n\tif ($(\"[rel=tooltip]\").length) { $(\"[rel=tooltip]\").tooltip(); }\n\n\treturn false;\n});\n</script>\n\n\n<table id=\"logs\" class=\"table sorted nosearch nopagination table-condensed table-hover table-top\" style=\"margin-top:10px;\" data-cookie-id-table=\"show_logs\">\n\n<?php\n\n/**\n * Script to print selected logs\n **********************************/\n\n/* required functions */\nif(!isset($User) || !is_object($User)) {\n\n\t/* functions */\n\trequire_once( dirname(__FILE__) . '/../../../functions/functions.php' );\n\n\t# initialize user object\n\t$Database \t= new Database_PDO;\n\t$User \t\t= new User ($Database);\n\t$Tools\t \t= new Tools ($Database);\n\t$Admin\t\t= new Admin ($Database);\n\t$Result \t= new Result ();\n\t$Log\t\t= new Logging ($Database);\n\n\t# verify that user is logged in\n\t$User->check_user_session();\n}\n\n# if nothing is provided display all\nif ( empty($_POST['Informational']) && empty($_POST['Notice']) && empty($_POST['Warning']) ) {\n    $_POST['Informational'] = \"Informational\";\n    $_POST['Notice']        = \"Notice\";\n    $_POST['Warning']       = \"Warning\";\n}\n?>\n\n<!-- print headers -->\n<thead>\n<tr>\n    <th class=\"date\" style=\"width:130px;white-space:nowrap\"><?php print _('Date'); ?></th>\n    <th><?php print _('Severity'); ?></th>\n    <th><?php print _('Username'); ?></th>\n    <th><?php print _('IP address'); ?></th>\n    <th><?php print _('Event'); ?></th>\n    <th></th>\n</tr>\n</thead>\n\n<tbody>\n<!-- print logs -->\n<?php\n\n//fetch 40 logs at once\n$logCount = 40;\n\n//set severity queries\n$informational = @$_POST['Informational']==\"Informational\" ? \"on\" : \"off\";\n$notice \t   = @$_POST['Notice']==\"Notice\" ? \"on\" : \"off\";\n$warning \t   = @$_POST['Warning']==\"Warning\" ? \"on\" : \"off\";\n\n//get highest lastId */\n$highestId = $Log->log_fetch_highest_id();\nif(empty($_POST['lastId']) || ($_POST['lastId'] == \"undefined\")) \t{ $_POST['lastId'] = $highestId; }\n\n//set empty direction\nif(!isset($_POST['direction'])) \t\t\t\t\t\t\t\t\t{ $_POST['direction'] = \"\"; }\n\n/* get requested logs */\n$logs = $Log->fetch_logs($logCount, $_POST['direction'], $_POST['lastId'], $highestId, $informational, $notice, $warning);\nif (!is_array($logs)) { $logs = array(); }\n\n$x = 0;\nforeach ($logs as $log) {\n\t//cast\n\t$log = (array) $log;\n\n    //set classes based on severity\n    if ($log['severity'] == 0) {\n        $log['severityText'] = _(\"Informational\");\n        $color = \"success\";\n    }\n    elseif ($log['severity'] == 1) {\n        $log['severityText'] = _(\"Notice\");\n        $color = \"warning\";\n    }\n    elseif ($log['severity'] == 2) {\n        $log['severityText'] = _(\"Warning\");\n        $color = \"danger\";\n    }\n    else {\n        $log['severityText'] = _(\"Unknown\");\n        $color = \"info\";\n    }\n\n\t/* reformat details */\n\t$log['details'] = str_replace(\"\\\"\", \"'\", $log['details']);\n\n    print '<tr class=\"'.$color.' '. $log['severityText'] .'\" id=\"'. $log['id'] .'\">'. \"\\n\";\n \tprint '\t<td class=\"date\">'. $log['date']     .'</td>'. \"\\n\";\n    print '\t<td class=\"severity\"><span>'. $log['severity'] .'</span>'. $log['severityText'] .'</td>'. \"\\n\";\n\tprint '\t<td class=\"username\">'. $log['username'] .'</td>'. \"\\n\";\n\tprint '\t<td class=\"ipaddr\">'. $log['ipaddr'] .'</td>'. \"\\n\";\n    print '\t<td class=\"command\"><a href=\"\" class=\"openLogDetail\" data-logid=\"'.$log['id'].'\">'. $log['command']  .'</a></td>'. \"\\n\";\n    print '\t<td class=\"detailed\">';\n    /* details */\n    if(!empty($log['details'])) { print '\t<i class=\"fa fa-comment fa-gray\" rel=\"tooltip\" data-html=\"true\" data-placement=\"left\" title=\"<b>'._('Event details').'</b>:<hr>'. $log['details'] .'\"></i></td>'. \"\\n\"; }\n    print '\t</td>'. \"\\n\";\n\tprint '</tr>'. \"\\n\";\n}\n?>\n</tbody>\n</table>\t<!-- end filter table -->\n\n\n<?php if(sizeof($logs)== 0) { $Result->show(\"info\", _('No logs available').\"!\", true); } ?>", "<?php\n\n/**\n *\tphpIPAM Admin class\n */\n\nclass Admin extends Common_functions {\n\n\n\t/**\n\t * (array of objects) to store users, user id is array index\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $users;\n\n\t/**\n\t * (array of objects) to store groups, group id is array index\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $groups;\n\n\t/**\n\t * id of last edited/added table\n\t *\n\t * (default value: null)\n\t *\n\t * @var mixed\n\t * @access public\n\t */\n\tpublic $lastId = null;\n\n\t/**\n\t * if admin user is required to connect. Can be overridden\n\t *\n\t * (default value: true)\n\t *\n\t * @var bool\n\t * @access private\n\t */\n\tprivate $admin_required = true;\n\n\t/**\n\t * User\n\t *\n\t * @var mixed\n\t * @access protected\n\t */\n\tprotected $User;\n\n\n\n\n\n\n\t/**\n\t * __construct function.\n\t *\n\t * @access public\n\t * @param Database_PDO $database\n\t * @param bool $admin_required (default: true)\n\t */\n\tpublic function __construct (Database_PDO $database, $admin_required = true) {\n\t\tparent::__construct();\n\n\t\t# initialize database object\n\t\t$this->Database = $database;\n\t\t# initialize Result\n\t\t$this->Result = new Result ();\n\t\t# set admin flag\n\t\t$this->set_admin_required ($admin_required);\n\t\t# verify that user is admin\n\t\t$this->is_admin ();\n\t\t# Log object\n\t\t$this->Log = new Logging ($this->Database);\n\t}\n\n\t/**\n\t * Saves last insert ID on object modification.\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function save_last_insert_id () {\n\t\t$this->lastId = $this->Database->lastInsertId();\n\t}\n\n\t/**\n\t * Sets admin required flag if needed\n\t *\n\t * @access public\n\t * @param boolean $bool\n\t * @return void\n\t */\n\tpublic function set_admin_required ($bool) {\n\t\t$this->admin_required = is_bool($bool) ? $bool : true;\n\t}\n\n\t/**\n\t * Checks if current user is admin\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function is_admin () {\n\t\t// user not required for cli\n\t\tif (php_sapi_name() != \"cli\") {\n\t\t\t# initialize user class\n\t\t\t$this->User = new User($this->Database);\n\t\t\t# save settings\n\t\t\t$this->settings = $this->User->settings;\n\t\t\t# if required die !\n\t\t\tif ($this->User->is_admin(false) !== true && $this->admin_required === true) {\n\t\t\t\t$this->Result->fatal_http_error(403, _(\"Administrative privileges required\"));\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t *\t@general update methods\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Modify database object\n\t *\n\t * @param string $table\n\t * @param string $action\n\t * @param string|array $field\n\t * @param array $values\n\t * @param array $values_log\n\t * @return void\n\t */\n\tpublic function object_modify ($table, $action=null, $field=\"id\", $values = [], $values_log = []) {\n\t\tif (!is_string($table) || strlen($table) == 0) return false;\n\t\t# strip tags\n\t\t$values     = $this->strip_input_tags ($values);\n\t\t$values_log = $this->strip_input_tags ($values_log);\n\n\t\t# if empty values_log inherit from values to preserve old functionality\n\t\tif(sizeof($values_log)==0)\t{ $values_log = $values; }\n\n\t\t# execute based on action\n\t\tif($action==\"add\")\t\t\t\t\t{ return $this->object_add ($table, $values, $values_log); }\n\t\telseif($action==\"edit\")\t\t\t\t{ return $this->object_edit ($table, $field, $values, $values_log); }\n\t\telseif($action==\"edit-multiple\")\t{ return $this->object_edit_multiple ($table, $field, $values); }\t\t//$field = array of ids\n\t\telseif($action==\"delete\")\t\t\t{ return $this->object_delete ($table, $field, $values[$field]); }\n\t\telse\t\t\t\t\t\t\t\t{ return $this->Result->show(\"danger\", _(\"Invalid action\"), true); }\n\t}\n\n\t/**\n\t * Create new database object\n\t *\n\t *\t\t$values are all values that should be passed to create object\n\t *\n\t * @access private\n\t * @param mixed $table\n\t * @param mixed $values\n\t * @param array $values_log\t\t//log variables\n\t * @return boolean\n\t */\n\tprivate function object_add ($table, $values, $values_log) {\n\t\t# null empty values\n\t\t$values = $this->reformat_empty_array_fields ($values, null);\n\n\t\t# execute\n\t\ttry { $this->Database->insertObject($table, $values); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\t$this->Log->write( \"$table object creation\", \"Failed to create new $table database object<hr>\".$e->getMessage().\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table object creation\", \"New $table database object created<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Edit object in table by specified object id\n\t *\n\t *\t\t$values are all values that should be passed to edit object,\n\t *\t\tid will be used to match field to update.\n\t *\n\t * @access private\n\t * @param mixed $table\t\t\t//name of table to update\n\t * @param array $values\t\t\t//update variables\n\t * @param array $values_log\t\t//log variables\n\t * @return boolean\n\t */\n\tprivate function object_edit ($table, $key=\"id\", $values, $values_log = []) {\n\t\t# null empty values\n\t\t$values = $this->reformat_empty_array_fields ($values, null);\n\n\t\t# execute\n\t\ttry { $this->Database->updateObject($table, $values, $key); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\t$this->Log->write( \"$table object $values[$key] edit\", \"Failed to edit object $key=$values[$key] in $table<hr>\".$e->getMessage().\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table object $values[$key] edit\", \"Object $key=$values[$key] in $table edited<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values_log, \"NULL\")), 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Edit multiple objects in table by specified object id\n\t *\n\t *\t\t$values are all values that should be passed to edit object,\n\t *\t\tids will be used to match fields to update.\n\t *\n\t * @access private\n\t * @param mixed $table\t\t\t//name of table to update\n\t * @param array $values\t\t\t//update variables\n\t * @param string $ids\n\t * @return boolean\n\t */\n\tprivate function object_edit_multiple ($table, $ids, $values) {\n\t\t# null empty values\n\t\t$values = $this->reformat_empty_array_fields ($values, null);\n\n\t\t# execute\n\t\ttry { $this->Database->updateMultipleObjects($table, $ids, $values); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\t$this->Log->write( \"$table multiple objects edit\", \"Failed to edit multiple objects in $table<hr>\".$e->getMessage().\"<hr>\".$this->array_to_log($ids).\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values, \"NULL\")), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table multiple objects edit\", \"Multiple objects in $table edited<hr>\".$this->array_to_log($ids).\"<hr>\".$this->array_to_log($this->reformat_empty_array_fields ($values, \"NULL\")), 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Delete object in table by specified object id\n\t *\n\t * @access private\n\t * @param mixed $table\t\t//table to update\n\t * @param string $field\t\t//field selection (where $field = $id)\n\t * @param mixed $id\t\t\t//field identifier\n\t * @return boolean\n\t */\n\tprivate function object_delete ($table, $field=\"id\", $id) {\n\t\t# execute\n\t\ttry { $this->Database->deleteRow($table, $field, $id); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Log->write( \"$table object $id delete\", \"Failed to delete object $field=$id in $table<hr>\".$e->getMessage(), 2);\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t\t# save ID\n\t\t$this->save_last_insert_id ();\n\t\t# ok\n\t\t$this->Log->write( \"$table object $id edit\", \"Object $field=$id in $table deleted.\", 0);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes or replaces all old object references\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $old_value\n\t * @param mixed $new_value (Default: NULL)\n\t * @return null|false\n\t */\n\tpublic function remove_object_references ($table, $field, $old_value, $new_value = NULL) {\n\t\t$table = $this->Database->escape($table);\n\t\t$field = $this->Database->escape($field);\n\n\t\ttry { $this->Database->runQuery(\"update `$table` set `$field` = ? where `$field` = ?;\", array($new_value, $old_value)); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Resets or replaces all old object references\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $field\n\t * @param mixed $old_value\n\t * @param mixed $new_value\n\t * @return null|false\n\t */\n\tpublic function update_object_references ($table, $field, $old_value, $new_value) {\n\t\t$table = $this->Database->escape($table);\n\t\t$field = $this->Database->escape($field);\n\n\t\ttry { $this->Database->runQuery(\"update `$table` set `$field` = ? where `$field` = ?;\", array($new_value, $old_value)); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Empties table\n\t *\n\t * @access public\n\t * @param mixed $table (default: null)\n\t * @return boolean\n\t */\n\tpublic function truncate_table ($table = null) {\n\t\t# null table\n\t\tif(is_null($table)||strlen($table)==0) return false;\n\t\telse {\n\t\t\ttry { $this->Database->emptyTable($table); }\n\t\t\tcatch (Exception $e) {\n\t\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t# result\n\t\t\treturn true;\n\t\t}\n\t}\n\n\n\n\n\n\n\t/**\n\t *\t@group methods\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Parse user groups\n\t *\n\t *\tinput:  array of group ids\n\t *\toutput: array of groups ( \"id\"=>array($group) )\n\t *\n\t * @access public\n\t * @param mixed $group_ids\n\t * @return void\n\t */\n\tpublic function groups_parse ($group_ids) {\n\t\t$out = array ();\n\t\t// check\n\t\tif(!is_null($group_ids)) {\n\t\t\tif(sizeof($group_ids)>0) {\n\t\t    \tforeach($group_ids as $g_id) {\n\t\t    \t\t$group = $this->fetch_object (\"userGroups\", \"g_id\", $g_id);\n\t\t    \t\t$out[$group->g_id] = (array) $group;\n\t\t    \t}\n\t\t    }\n\t\t}\n\t    # return array of groups\n\t    return $out;\n\t}\n\n\n\t/**\n\t * Parse user groups\n\t *\n\t *\tinput:  array of group ids\n\t *\toutput: array of ids (  \"id\"=>id )\n\t *\n\t * @access public\n\t * @param mixed $group_ids\n\t * @return void\n\t */\n\tpublic function groups_parse_ids ($group_ids) {\n\t\t$out = array ();\n\t\t// check\n\t\tif(!is_null($group_ids)) {\n\t\t\tif(sizeof($group_ids) >0) {\n\t\t\t    foreach($group_ids as $g_id) {\n\t\t    \t\t$group = $this->fetch_object (\"userGroups\", \"g_id\", $g_id);\n\t\t    \t\t$out[$group->g_id] = $group->g_id;\n\t\t    \t}\n\t\t    }\n\t\t}\n\t    # return array of group ids\n\t    return $out;\n\t}\n\n\t/**\n\t * Fetches all users that are in group\n\t *\n\t * @access public\n\t * @return array of user ids\n\t */\n\tpublic function group_fetch_users ($group_id) {\n\t\t$out = array ();\n\t\t# get all users\n\t\t$users = $this->fetch_all_objects(\"users\");\n\t\t# check if $gid in array\n\t\tif($users!==false) {\n\t\t\tforeach($users as $u) {\n\t\t\t\t$group_array = json_decode($u->groups, true);\n\t\t\t\t$group_array = $this->groups_parse($group_array);\n\n\t\t\t\tif(sizeof($group_array)>0) {\n\t\t\t\t\tforeach($group_array as $group) {\n\t\t\t\t\t\tif(in_array($group_id, $group)) {\n\t\t\t\t\t\t\t$out[] = $u->id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# return\n\t\treturn isset($out) ? $out : array();\n\t}\n\n\t/**\n\t * Fetches all users that are not admins and are not in group\n\t *\n\t * @access public\n\t * @param mixed $group_id\n\t * @return void\n\t */\n\tpublic function group_fetch_missing_users ($group_id) {\n\t\t$out = array ();\n\t\t# get all users\n\t\t$users = $this->fetch_all_objects(\"users\");\n\n\t\t# check if $gid in array\n\t\tif($users!==false) {\n\t\t\tforeach($users as $u) {\n\t\t\t\tif($u->role != \"Administrator\") {\n\t\t\t\t\t$g = json_decode($u->groups, true);\n\t\t\t\t\tif(!@in_array($group_id, $g)) { $out[] = $u->id; }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t# return\n\t\treturn $out;\n\t}\n\n\t/**\n\t * This function adds new group access to user account\n\t *\n\t * @access private\n\t * @param mixed $gid\n\t * @param mixed $uid\n\t * @return boolean\n\t */\n\tpublic function add_group_to_user ($gid, $uid) {\n\t\t# get old groups\n\t\t$user = $this->fetch_object (\"users\", \"id\", $uid);\n\n\t\t# append new group\n\t\t$g = json_decode($user->groups, true);\n\t\t$g[$gid] = $gid;\n\t\t$g = json_encode($g);\n\n\t\t# update\n\t\tif(!$this->update_user_groups($uid, $g)) { return false; }\n\t\telse\t\t\t\t\t\t\t\t\t { return true; }\n\t}\n\n\t/**\n\t * This function removes group from users account.\n\t *\n\t * @access public\n\t * @param mixed $gid\n\t * @param mixed $uid\n\t * @return boolean\n\t */\n\tpublic function remove_group_from_user($gid, $uid) {\n\t\t# get old groups\n\t\t$user = $this->fetch_object (\"users\", \"id\", $uid);\n\n\t\t# remove group\n\t\t$g = json_decode($user->groups, true);\n\t\tunset($g[$gid]);\n\t\t$g = json_encode($g);\n\n\t\t# update\n\t\tif(!$this->update_user_groups($uid, $g)) \t{ return false; }\n\t\telse\t\t\t\t\t\t\t\t\t\t{ return true; }\n\t}\n\n\n\t/**\n\t * Update groups for specified user\n\t *\n\t * @access public\n\t * @param mixed $uid\n\t * @param string $groups\n\t * @return void\n\t */\n\tpublic function update_user_groups ($uid, $groups) {\n\t    return $this->object_modify (\"users\", \"edit\", \"id\", array(\"id\"=>$uid, \"groups\"=>$groups));\n\t}\n\n\t/**\n\t * Update group permissions for section\n\t *\n\t * @access public\n\t * @param mixed $sid\n\t * @param string $groups\n\t * @return void\n\t */\n\tpublic function update_section_groups($sid, $groups) {\n\t    return $this->object_modify (\"sections\", \"edit\", \"id\", array(\"id\"=>$sid, \"permissions\"=>$groups));\n\t}\n\n\t/**\n\t * Removes all users from specified group on group delete\n\t *\n\t * @access public\n\t * @param int $gid\t//group id\n\t * @return boolean\n\t */\n\tpublic function remove_group_from_users($gid) {\n\t\t# get all users\n\t\t$users = $this->fetch_all_objects(\"users\");\n\t\t# check if $gid in array\n\t\tif($users!==false) {\n\t\t\tforeach($users as $u) {\n\t\t\t\t$g  = json_decode($u->groups, true);\n\t\t\t\t$go = $g;\n\t\t\t\t$g  = $this->groups_parse($g);\n\t\t\t\t# check\n\t\t\t\tif(sizeof($g)>0) {\n\t\t\t\t\tforeach($g as $gr) {\n\t\t\t\t\t\tif(in_array($gid, $gr)) {\n\t\t\t\t\t\t\tunset($go[$gid]);\n\t\t\t\t\t\t\t$ng = json_encode($go);\n\t\t\t\t\t\t\t$this->update_user_groups($u->id,$ng);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes group ID from all section permissions\n\t *\n\t * @access public\n\t * @param mixed $gid\n\t * @return boolean\n\t */\n\tpublic function remove_group_from_sections ($gid) {\n\t\t# get all sections\n\t\t$sections = $this->fetch_all_objects (\"sections\", \"id\");\n\t\t# check if $gid in array\n\t\tforeach($sections as $s) {\n\t\t\t$g = json_decode($s->permissions, true);\n\n\t\t\tif(sizeof($g)>0) {\n\t\t\t\tif(array_key_exists($gid, $g)) {\n\t\t\t\t\tunset($g[$gid]);\n\t\t\t\t\t$ng = json_encode($g);\n\t\t\t\t\t$this->update_section_groups($s->id,$ng);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t *\t@search/replace fields\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Replace fields\n\t *\n\t * @access public\n\t * @param mixed $field\n\t * @param mixed $search\n\t * @param mixed $replace\n\t * @return void\n\t */\n\tpublic function replace_fields ($field, $search, $replace) {\n\t\t$field = $this->Database->escape($field);\n\n\t\t# check number of items\n\t\t$count = $this->count_database_objects (\"ipaddresses\", $field, \"%$search%\", true);\n\t\t# if some exist update\n\t\tif($count>0) {\n\t\t\t# update\n\t\t    try { $this->Database->runQuery(\"update `ipaddresses` set `$field` = replace(`$field`, ?, ?);\", array($search, $replace)); }\n\t\t    catch (Exception $e) {\n\t\t\t    $this->Result->show(\"danger alert-absolute\", _(\"Error: \").$e->getMessage(), true);\n\t\t    }\n\t\t    # ok, print count\n\t\t    $this->Result->show(\"success alert-absolute\", _('Replaced').' '. $count .' '._('items successfully').'!', false);\n\t\t}\n\t\telse {\n\t\t\t$this->Result->show(\"info alert-absolute\", _(\"No records found to replace\"), false);\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t *\t@custom field methods\n\t *\t--------------------------------\n\t */\n\n\t/**\n\t * Valid custom field database types\n\t * @return array\n\t */\n\tpublic function valid_custom_field_types() {\n\t\treturn [\"varchar\"  =>\"varchar\",\n\t\t\t\t\"integer\"  =>\"int\",\n\t\t\t\t\"boolean\"  =>\"bool\",\n\t\t\t\t\"text\"     =>\"text\",\n\t\t\t\t\"date\"     =>\"date\",\n\t\t\t\t\"datetime\" =>\"datetime\",\n\t\t\t\t\"set\"      =>\"set\",\n\t\t\t\t\"enum\"     =>\"enum\"];\n\t}\n\n\t/**\n\t * Updates custom field definition\n\t *\n\t * @access public\n\t * @param array $field\n\t * @return bool\n\t */\n\tpublic function update_custom_field_definition ($field) {\n\t\tif (!in_array($field['fieldType'], $this->valid_custom_field_types())) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \")._(\"Invalid custom field type\"));\n\t\t\treturn false;\n\t\t}\n\n\t    # set type definition and size of needed\n\t    if($field['fieldType']==\"bool\" || $field['fieldType']==\"text\" || $field['fieldType']==\"date\" || $field['fieldType']==\"datetime\")\t{ $field['ftype'] = $field['fieldType']; }\n\t    else\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $field['ftype'] = $field['fieldType'].\"(\".$field['fieldSize'].\")\"; }\n\n\t    # default value null\n\t    $field['fieldDefault'] = strlen($field['fieldDefault'])==0 ? NULL : $field['fieldDefault'];\n\n\t    # character set if needed\n\t    if($field['fieldType']==\"varchar\" || $field['fieldType']==\"text\" || $field['fieldType']==\"set\" || $field['fieldType']==\"enum\")\t{ $charset = \"CHARACTER SET utf8\"; }\n\t    else\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $charset = \"\"; }\n\n\t    # escape fields\n\t    $field['table'] \t\t= $this->Database->escape($field['table']);\n\t    $field['name'] \t\t\t= $this->Database->escape($field['name']);\n\t    $field['oldname'] \t\t= $this->Database->escape($field['oldname']);\n\t    # strip values\n\t    $field['action'] \t\t= $this->strip_input_tags($field['action']);\n\t    $field['Comment'] \t\t= $this->strip_input_tags($field['Comment']);\n\n\t    # add name prefix to distinguish custom fields\n\t    if($field['action']==\"edit\" || $field['action']==\"add\") {\n\t\t    if(strpos($field['name'], \"custom_\")!==0) { $field['name'] = \"custom_\".$field['name']; }\n\t\t}\n\n\t    # set update query\n\t    if($field['action']==\"delete\") \t\t\t\t\t\t\t\t{ $query  = \"ALTER TABLE `$field[table]` DROP `$field[oldname]`;\"; }\n\t    else if ($field['action']==\"edit\"&&@$field['NULL']==\"NO\") \t{ $query  = \"ALTER TABLE `$field[table]` CHANGE COLUMN `$field[oldname]` `$field[name]` $field[ftype] $charset DEFAULT :default NOT NULL COMMENT :comment;\"; }\n\t    else if ($field['action']==\"edit\") \t\t\t\t\t\t\t{ $query  = \"ALTER TABLE `$field[table]` CHANGE COLUMN `$field[oldname]` `$field[name]` $field[ftype] $charset DEFAULT :default COMMENT :comment;\"; }\n\t    else if ($field['action']==\"add\"&&@$field['NULL']==\"NO\") \t{ $query  = \"ALTER TABLE `$field[table]` ADD COLUMN \t`$field[name]` \t\t\t\t\t$field[ftype] $charset DEFAULT :default NOT NULL COMMENT :comment;\"; }\n\t    else if ($field['action']==\"add\")\t\t\t\t\t\t\t{ $query  = \"ALTER TABLE `$field[table]` ADD COLUMN \t`$field[name]` \t\t\t\t\t$field[ftype] $charset DEFAULT :default NULL COMMENT :comment;\"; }\n\t    else {\n\t\t    return false;\n\t    }\n\n\t    # set parametized values\n\t    $params = array();\n\t    if (strpos($query, \":default\")>0)\t$params['default'] = $field['fieldDefault'];\n\t    if (strpos($query, \":comment\")>0)\t$params['comment'] = $field['Comment'];\n\n\t\t# execute\n\t\ttry { $res = $this->Database->runQuery($query, $params); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t        $this->Log->write( \"Custom field $field[action]\", \"Custom Field $field[action] failed ($field[name])<hr>\".$this->array_to_log($field), 2);\n\t\t\treturn false;\n\t\t}\n\t\t# field updated\n        $this->Log->write( \"Custom field $field[action]\", \"Custom Field $field[action] success ($field[name])<hr>\".$this->array_to_log($field), 0);\n\t    return true;\n\t}\n\n\t/**\n\t * Save custom fields that should be hidden from normal display\n\t *\n\t * @access public\n\t * @param mixed $table\t\t\t\t//name of custom fields table\n\t * @param mixed $filtered_fields\t//array of field to hide for this table\n\t * @return boolean\n\t */\n\tpublic function save_custom_fields_filter ($table, $filtered_fields) {\n\t\t# old custom fields, save them to array\n\t\t$hidden_array = strlen($this->settings->hiddenCustomFields)>0 ? json_decode($this->settings->hiddenCustomFields, true) : array();\n\n\t\t# set new array for table\n\t\tif(is_null($filtered_fields))\t{ unset($hidden_array[$table]); }\n\t\telse\t\t\t\t\t\t\t{ $hidden_array[$table]=$filtered_fields; }\n\n\t\t# encode to json\n\t\t$hidden_json = json_encode($hidden_array, JSON_UNESCAPED_UNICODE);\n\n\t\t# update database\n\t    try { $this->object_edit (\"settings\", $key=\"id\", array(\"id\"=>1,\"hiddenCustomFields\"=>$hidden_json)); }\n\t    catch (Exception $e) {\n\t\t    $this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), true);\n\t    }\n\t    # ok\n\t\treturn true;\n\t}\n\n\t/**\n\t * Reorders custom fields\n\t *\n\t * @access public\n\t * @param mixed $table\n\t * @param mixed $next\n\t * @param mixed $current\n\t * @return boolean\n\t */\n\tpublic function reorder_custom_fields ($table, $next, $current) {\n\t    $table = $this->Database->escape($table);\n\t    $next = $this->Database->escape($next);\n\t    $current = $this->Database->escape($current);\n\t    # get current field details\n\t    $Tools = new Tools ($this->Database);\n\t    $old = (array) $Tools->fetch_full_field_definition ($table, $current);\n\n\t    # set update request\n\t    if($old['Null']==\"NO\")\t{ $query  = 'ALTER TABLE `'.$table.'` MODIFY COLUMN `'. $current .'` '.$old['Type'].' NOT NULL COMMENT \"'.$old['Comment'].'\" AFTER `'. $next .'`;'; }\n\t    else\t\t\t\t\t{ $query  = 'ALTER TABLE `'.$table.'` MODIFY COLUMN `'. $current .'` '.$old['Type'].' DEFAULT NULL COMMENT \"'.$old['Comment'].'\" AFTER `'. $next .'`;'; }\n\n\t\t# execute\n\t\ttry { $res = $this->Database->runQuery($query); }\n\t\tcatch (Exception $e) {\n\t\t\t$this->Result->show(\"danger\", _(\"Error: \").$e->getMessage(), false);\n\t\t\treturn false;\n\t\t}\n\t\t# ok\n\t    return true;\n\t}\n\n}", "<?php\n\n/**\n *\n *\tClass for printing outputs and saving logs to database\n *\n *\tSeverity indexes:\n *\t\t0 = success\n *\t\t1 = warning\n *\t\t2 = error\n *\n */\n\nclass Result extends Common_functions {\n\n\t/**\n\t *  what to do when failed - result shows result, exception throws exception (for API)\n\t *\n\t * (default value: \"result\")\n\t *\n\t * @var string\n\t * @access public\n\t */\n\tpublic $exit_method = \"result\";\n\n\t/**\n\t * Die flag\n\t *\n\t * (default value: false)\n\t *\n\t * @var bool\n\t * @access public\n\t */\n\tpublic $die = false;\n\n\t/**\n\t * Show result\n\t *\n\t * @access public\n\t * @param string $class (default: \"muted\")\t\t\t\tresult class - danger, success, warning, info\n\t * @param string|array|object $text (default: \"No value provided\")\ttext to display\n\t * @param bool $die (default: false)\t\t\t\t\tcontrols stop of php execution\n\t * @param bool $popup (default: false)\t\t\t\t\tprint result as popup\n\t * @param bool $inline (default: false)\t\t\t\t\treturn, not print\n\t * @param bool $popup2 (default: false)\t\t\t\t\tclose for JS for popup2\n\t * @param bool $reload (default: false)\t\t\t\t\treload\n\t * @return void\n\t */\n\tpublic function show($class=\"muted\", $text=\"No value provided\", $die=false, $popup=false, $inline = false, $popup2 = false, $reload = false) {\n\n\t\t# set die\n\t\t$this->die = $die;\n\n\t\t# API - throw exception\n\t\tif($this->exit_method == \"exception\")  {\n\t\t\t# ok, just return success\n\t\t\tif ($class==\"success\") \t\t{ return true; }\n\t\t\telse\t\t\t\t\t\t{ return $this->throw_exception ($text); }\n\t\t}\n\t\telse {\n\t\t\t# cli or GUI\n\t\t\tif (php_sapi_name()==\"cli\") { print $this->show_cli_message ($text); }\n\t\t\telse {\n\t\t\t\t# return or print\n\t\t\t\tif ($inline) \t\t\t{ return $this->show_message ($class, $text, $popup, $popup2, $reload); }\n\t\t\t\telse\t\t\t\t\t{ print  $this->show_message ($class, $text, $popup, $popup2, $reload); }\n\t\t\t}\n\n\t\t\t# die\n\t\t\tif($this->die===true)\t{die(); }\n\t\t}\n\t}\n\n\t/**\n\t * Return HTTP status code and message. eg 404 not found/permission denied error\n\t *\n\t * @param int $code\n\t * @param string $message\n\t * @return void\n\t */\n\tpublic function fatal_http_error($code, $message = \"\") {\n\t\thttp_response_code($code);\n\t\tif (isset($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == \"XMLHttpRequest\") {\n\t\t\t$this->show(\"danger\", $message, true, true);\n\t\t} else {\n\t\t\t$this->show(\"danger\", $message, true);\n\t\t}\n\t}\n\n\t/**\n\t * Alias for show method for backwards compatibility\n\t *\n\t * @access public\n\t * @param string|array|object $text (default: \"No value provided\")\n\t * @param bool $die (default: false)\n\t * @return void\n\t */\n\tpublic function show_cli ($text=\"No value provided\", $die=false) {\n\t\t$this->show(false, $text, $die, false, false, false);\n\t}\n\n\t/**\n\t * Shows result for cli functions\n\t *\n\t * @access public\n\t * @param string $text (default: \"No value provided\")\n\t * @return void\n\t */\n\tpublic function show_cli_message ($text=\"No value provided\") {\n\t\t// array - join\n\t\tif (is_array($text) && sizeof($text)>0) {\n\t\t\t// 1 element\n\t\t\tif(sizeof( $text )==1) {\n\t\t\t\t$text = $text[0];\n\t\t\t}\n\t\t\t// multiple - format\n\t\t\telse {\n\t\t\t\tforeach( $text as $l ) { $out[] = \"\\t* $l\"; }\n\t\t\t\t// join\n\t\t\t\t$text = implode(\"\\n\", $out);\n\t\t\t}\n\t\t}\n\t\t# print\n\t\treturn $text.\"\\n\";\n\t}\n\n\t/**\n\t * Show GUI result\n\t *\n\t * @access public\n\t * @param mixed $class\n\t * @param string|array|object $text\n\t * @param mixed $popup\n\t * @param mixed $popup2\n\t * @param bool $reload\n\t * @return void\n\t */\n\tpublic function show_message ($class, $text, $popup, $popup2, $reload) {\n    \t// to array if object\n    \tif (is_object($text))   { $text = (array) $text; }\n\t\t// format if array\n\t\tif(is_array($text)) {\n\t\t\t// single value\n\t\t\tif(sizeof( $text )==1) {\n\t\t\t\t$out = $text;\n\t\t\t}\n\t\t\t// multiple values\n\t\t\telse {\n\t\t\t\t$out[] = \"<ul>\";\n\t\t\t\tforeach( $text as $l ) { $out[] = \"<li>$l</li>\"; }\n\t\t\t\t$out[] = \"</ul>\";\n\t\t\t}\n\t\t\t// join\n\t\t\t$text = implode(\"\\n\", $out);\n\t\t}\n\n\t\t# print popup or normal\n\t\tif($popup===false) {\n\t\t\treturn \"<div class='alert alert-\".$class.\"'>\".$text.\"</div>\";\n\t\t}\n\t\telse {\n\t\t\t// set close class for JS\n\t\t\t$pclass = $popup2===false ? \"hidePopups\" : \"hidePopup2\";\n\t\t\t// change danger to error for popup\n\t\t\t$htext = $class===\"danger\" ? \"error\" : $class;\n\n\t\t\t$out[] = '<div class=\"pHeader\">'._(ucwords($htext)).'</div>';\n\t\t\t$out[] = '<div class=\"pContent\">';\n\t\t\t$out[] = '<div class=\"alert alert-'.$class.'\">'.$text.'</div>';\n\t\t\t$out[] = '</div>';\n\t\t\t// reload\n\t\t\tif($reload===true)\n\t\t\t$out[] = '<div class=\"pFooter\"><button class=\"btn btn-sm btn-default hidePopupsReload '.$pclass.'\">'._('Close').'</button></div>';\n\t\t\telse\n\t\t\t$out[] = '<div class=\"pFooter\"><button class=\"btn btn-sm btn-default '.$pclass.'\">'._('Close').'</button></div>';\n\n\t\t\t// return\n\t\t\treturn implode(\"\\n\", $out);\n\t\t}\n\t}\n\n\t/**\n\t * Exists with exception for API\n\t *\n\t * @access public\n\t * @param mixed $content\n\t * @return void\n\t */\n\tpublic function throw_exception ($content) {\n\t\t// include Exceptions class for API\n\t\tinclude_once( dirname(__FILE__) . '../../../api/controllers/Responses.php' );\n\t\t// initialize exceptions\n\t\t$Exceptions = new Responses ();\n\t\t// throw error\n\t\t$Exceptions->throw_exception(500, $content);\n\t}\n\n\t/**\n\t * __destruct function\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function __destruct() {\n\t\t// exit if required\n\t\tif ($this->die === true)\t{ die(); }\n\t}\n}\n", "== 1.4.6\n\n    Security Fixes:\n    ----------------------------\n    + Incorrect privilege assignments (#3506);\n\n    Bugfixes:\n    ----------------------------\n    + Require unique subnets not working as intended (#3529);\n\n== 1.4.5\n\n    Bugfixes:\n    ----------------------------\n    + Fix for SAML/2FA login redirection after timeout (#3492);\n    + php_sessions table doesn't exist error when upgrading (#3417);\n    + RFC 6265 compliant cookies (#3452);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injection in edit-bgp-mapping-search.php;\n    + Stored XSS in the \"Site title\" parameter;\n    + XSS while uploading CVS files;\n    + XSS (reflected) in 'find subnets';\n\n== 1.4.4\n\n    Bugfixes:\n    ----------------------------\n    + Allow UTF-8 in instruction widgets (#3360);\n    + Exclude IPv6 from Ping and Discovery scans (#3354);\n\n    Security Fixes:\n    ----------------------------\n    + XSS (reflected) in IP calculator (#3351);\n    + XSS in pass-change/result.php (#3373);\n\n== 1.4.3\n\n    Bugfixes:\n    ----------------------------\n    + FPing discovery marks all addresses as alive (#2888);\n    + SNMP, number of discovered hosts exceed maximum warning (#3279);\n\n    Security Fixes:\n    ----------------------------\n    + PHP session ID fixation (#3342);\n\n== 1.4.2\n\n    Enhancements, changes:\n    ----------------------------\n    + SameSite attribute enabled for site cookies;\n\n    Bugfixes:\n    ----------------------------\n    + Fix generated functions/upgrade_queries.php queries (#3130);\n    + Table layout not aligned (#3105,#3113);\n    + Invalid scan type () error (#2785);\n    + Invalid CSRF cookie editing rack items (#2556);\n    + MySQL 8.0 compatibility (#3036);\n\n    Security Fixes:\n    ----------------------------\n    + Upgraded jQuery to 3.5.1 (#3119);\n    + Stored XSS in instructions widgets (#3025);\n\n== 1.4.1\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade queries issues from 1.3.2 to 1.4;\n    + Fixed boolean printout in footer (#2625);\n    + Fixed BGP Admin isn't working (#2631);\n    + MySQL 8.0 compatibility. (#2646,#2239);\n    + Table layout not aligned (#2656);\n    + Improve scanning requirement checks (#1183);\n    + PDNS Add/Edit DNS record not working for normal users (#2686);\n    + Unable to save settings with link addresses = text custom field (#2702);\n    + Kea MAC address display issue (#2704);\n    + Returned custom fields to devices table (#2572);\n    + Invalid scan agent key warning;\n    + Subnet filter issue when IP contains 0 octet. (#2748);\n    + Add VLAN button not working (#2741);\n    + Incorrect subnet links in /tools/vrf/ view. (#2774);\n    + Location data missing in exports. (#2833);\n    + Check mysqldump path when exporting database;\n    + Current rack position missing when editing a device. (#2545);\n    + Misc html fixes (#3026,#3081,#3082);\n    + API:\n        + Fixed /user/ calls for SSL with app code (static app code);\n        + Address IP field not displayed when using filter_by (#2934);\n        + Addresses first_free & Subnets first/last_subnet thread safety (#2960);\n\n    Security Fixes:\n    ----------------------------\n    + SQL injections processing `tableName` (#2738);\n    + SQL injections processing `ftype` (#2751);\n    + All circuits map, PHP object injection (#2937);\n\n== 1.4.0\n\n    New features:\n    ------------\n    + Configurable password policy;\n    + Sessions can be now stored in database (#516);\n    + Two-factor authentication - otp (Google Authenticator);\n    + Customers module (#694);\n    + Routing module (BGP) (#2135);\n    + Search for free subnet inside whole section;\n\n    Enhancements, changes:\n    ----------------------------\n    + Circuits enhancements (Virtual Circuits);\n    + Dropped support for 32bit systems;\n    + PHP 5.4 is now required;\n    + Added compressed actions dropdown;\n    + SNMP module no longer requires MIB files;\n    + Performance enhancements running under Azure/Amazon;\n    + Added option to disable user (#1327);\n    + Added policy NAT option;\n    + Added custom NAT fields;\n    + Rack module enhancements (#1325):\n        + Dynamic rack sizes;\n        + Top-down / Bottom-up racks;\n        + Custom rack devices independent of devices (power, patch panel);\n    + Customized user permissions for modules:\n        + VLAN module;\n        + VRF module;\n        + PowerDNS module;\n        + Circuits module;\n        + Customers module;\n        + Devices module;\n        + Rack module;\n        + NAT module;\n        + PSTN module;\n        + Locations module;\n    + API:\n        + New API security type - SSL with app code (static app code);\n        + New config.php option $api_allow_unsafe to allow non-SSL API queries;\n        + Added last access field to api;\n        + Add Mac Search for Addresses controller (#2005);\n        + New overlapping API call;\n        + New global API parameter filter_match = full,partial,regex;\n        + Add Tools API customers submodule;\n        + Fix filtered results to always return data as array (#2558);\n    + Widgets:\n        + New user instruction widget (#2383);\n\n    Translations:\n    ----------------------------\n    + Japanese (ja_JP) translation added;\n    + Traditional Chinese (zh_TW) translation added;\n\n    Bugfixes:\n    ----------------------------\n    + Fix appended \" U\" in Rack description (#2046);\n    + Fix Bandwidth calculator - 400 Bad Request. (#1807);\n    + Fix bad DNS reverse zone for /23 subnet (#666);\n    + Fix Add missing standard field (#2153);\n    + Fix Consistency of VARCHAR Size on 'owner' column across tables (#2136);\n    + Fix Subnet details - Filter button missing when compressed range is used (#2353);\n    + Fix slow page load times with linked addresses (#2324);\n    + Fix \" - is required\" error when adding IPs with an empty IP filter set (#2334);\n    + Fix column 'masterSubnetId' cannot be null error when adding subnets (#1977);\n    + Fix logical circuits add/delete errors (#2381);\n    + Fix adding new VLANs to an empty L2Domain (#2400);\n    + Fix Nested child subnets with \"na\" permissions visible (#2223);\n    + Fix translations containing apostrophes break functionality (#2504);\n    + Set requestedAuthnContext to false for SAML (#2457);\n    + API:\n        + Fix inconsistent API success value returned (#2045);\n        + Fix filter_by functionality (#2392);\n        + Fix PATCH functionality (#2470, #2481);\n\n    Security Fixes:\n    ----------------------------\n    + Hide SNMP community (#2197);\n    + Hide LDAP/AD/Radius username / password and secret from logs and syslog (#2006);\n    + XSS in phpipamredirect cookie (#2338);\n    + XSS in print-user.php, CSRF in user-edit.php (#2326);\n    + Possible SQL injection in nat/item-add-submit.php (#2344);\n    + Fixed possible file inclusion in editing authentication methods;\n    + XSS in subnet-scan-telnet.php, CSRF in subnet-scan-execute.php (#2327);\n\n== 1.3.2\n\n    Enhancements, changes:\n    ----------------------------\n    + Dark theme added;\n    + Full php7.2 compatibility;\n    + url_rewrite has changed, please use new rewrite scheme (https://phpipam.net/news/new_rewrite_scheme/);\n    + Search for matching subnet in all VRFs feature enabled when importing addresses;\n    + Added new config option to show custom fields separated from standard fields when editing IP address;\n    + Added Required fields subpage to define IP address fields that must be filled in;\n    + Performance + bug fixes (#1660, #1657);\n    + MasterSubnet dropdown list is dynamically generated via AJAX call;\n    + Bandwidth calculator;\n    + Support 8U rack sizes. (#1891);\n    + API:\n        + New last_subnet API calls (#1655);\n\n    Translations:\n    ----------------------------\n    + German translation updated to verson 1.3.1;\n    + French translations updated. (#1881);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed uncaught error if vlan number exceeds max permitted (#1455);\n    + Fixed Illegal string offset 'dns_name' in pingCheck.php errors (#1461);\n    + Performance fix for subnet_dropdown_print_available (#1562);\n    + Fixed logo updater for apache v2.4 (#1582);\n    + Fixed section names containing spaces are not included in exports (#1566);\n    + Allow DNS wildcard records (#1571);\n    + Fixed slow mac address vendor decoding for subnet detail view (#1658);\n    + Performance fix for detecting overlapping subnets. (#1052, #1426, #1533);\n    + Performance fix for slow mac address vendor decoding (#1658);\n    + Performance fix for subnet API first_subnet & all_subnets calls;\n    + Performance fix for delegating subnet permissions;\n    + Convert to UTF-8 encoding on import/export to preserve dialectics (#1659, #1700, #1728);\n    + Importing IPs loose Mac Addresses (#1607);\n    + Section names containing spaces are not included in exports. (#1566);\n    + Bug with section and dashboard (#1593);\n    + Fixed improper contents in plain text part of notification e-mails (#1707);\n    + Reduce size of email notifications (#1643);\n    + PHP 5.3 compatibility fixes (#1594, #1730);\n    + PHP 7.2 compatibility fixes (#1683, #1714);\n    + Fixed notification e-mails contain a broken link. (#1708);\n    + Allow dots to be used in domain names. (#1747);\n    + Use multi-byte compatible functions when shortening text. (#1753);\n    + Scan subnet reports/selects invalid php path. (#1757);\n    + Small code refactoring (#1699);\n    + Rack device start position overwritten. (#1545);\n    + Sections with folders returns no subnets using API. (#1883);\n    + Add custom_ prefix to Prefix controller custom fields. (#1836);\n    + Non-Admins missing the button to Add circuit. (#1902);\n    + Wrong field name of deviceTypes table when checking device type. (#1910);\n    + SNMPv3 improvements;\n    + Misc IPv6 fixes;\n\n    Security Fixes:\n    ----------------------------\n    + Code injection in Name field. (#1667);\n    + XSS (reflected) in SubnetID param. (#1702);\n    + CSRF enables open mail relay. (#1703);\n    + Reflected XSS requiring user interaction on search. (#1705);\n    + XSS reflected via CSRF in preview.php. (#1706);\n    + Reflected XSS via CSV upload. (#1742);\n    + Reflected XSS on 'mac' parameter. (#1903);\n\n== 1.3.1\n\n    New features:\n    ------------\n    + Circuits module (circuits, providers, map, ...) (#731);\n\n    Enhancements, changes:\n    ----------------------------\n    + Racks:\n        + Automatic location assignment when device added to rack (#1230);\n        + Rack map showing map of all racks in location;\n        + Rack back side;\n    + Compact menu layout (per-user setting, showing only icons);\n    + Network to network static nat;\n    + Selectable logo size (from config.php) (#952);\n    + Added default option for permissions propagations (#1351);\n    + API:\n        + Added Circuits controller;\n        + Encrypyted requests can now also be form-encoded (#1191);\n        + Introduce mcrypt AES compatibility (#1516);\n        + Fixed field ip not displayed when filters applied (#1529);\n    + New resolve hostnames option for subnet (#1222):\n        + Updates hostnames via pingCheck.php script (if parameter set for subnet);\n        + Updates hostnames via resolveIPaddresses.php script (if parameter set for subnet);\n        + On-the-fly empty hostname update if resolved (if parameter set for subnet and enabled globally);\n        + Added this infor to tools > scanned networks;\n    + Added custom_ prefix to custom field names to avoid duplication with custom fields (#1387);\n    + Added option to hide IP requests for unauthenticated users on login page (#1394);\n    + Performance optimizations for locations and subnet usage calculation;\n    + Added user groups custom fields;\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.3;\n    + German translation updated to verson 1.3;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed RACK images not displayed if not root location (#1204);\n    + Fixed import gateway ip (#1240);\n    + Fixed JSON_UNESCAPED_UNICODE for PHP 5.3 (#1135, #1245);\n    + Rename class Thread to PingThread to avoid naming conflict with pthreads Thread class (#1254);\n    + Fixed custom fields integer on subnet (#1266);\n    + Fixed Import Ip-adress doesnt update location (#1284);\n    + Fixed json_error for logo upload (#1256);\n    + Fixed CSRF error when moving orphaned addresses (#1303);\n    + Fixed VRF fetching via API by Id;\n    + Fixed map issues when quotes are in name/description (#1384);\n    + Fixed item not removed from NAT when deleted (#1378);\n    + Fixed Error when error_reporting = E_ALL about strict standards when importing IP addresses (#1372);\n    + Fixed Apostrophe errors in text custom fields (#1375);\n    + Fixed API error when creating address under folder (#1507);\n    + Fixed SNMPv3 (#1119);\n\n    Security Fixes:\n    ----------------------------\n    + Fixed XSS issues (#1403, #1521, #1500);\n\n== 1.3.0\n\n    New features:\n    ------------\n    + Multicast module (RFC1112, RFC2464) with IP to MAC mapping and multicast networks overview;\n    + Threshold module for subnets;\n    + Racks module (Rack drawing) for devices;\n    + Address linking by selected field;\n    + Custom logo for site and mails;\n    + PSTN number management module;\n    + SNMP module:\n        + Subnets discovery from route table (all subnets, nested subnets, add new subnet);\n        + Hosts discovery scans via ARP check/interface check;\n        + Hosts discovery scans via ARP + MAC address check (detects interface);\n        + VLAN discovery;\n        + VRF discovery;\n        + Status update scans via ARP check;\n    + NAT module\n        + Source / static / destination NAT;\n        + Linking subnet to NAT\n        + Show bindings under tools and next to IP address / subnet\n    + Locations module\n        + Map devices / racks / subnets to location;\n        + Google maps integration;\n    + SAML2 authentication (SSO)\n\n    Enhancements, changes:\n    ----------------------------\n    + Folders can now contain addresses;\n    + API:\n        - Api v1 removed;\n        + If subnet gateway defined gatewayId is returned in subnet details;\n        + Automatically added nameservers to subnet results;\n        + Added subnet usage result for each subnet in section;\n        + Added custom fields for all controllers;\n        + New subnets automatically get parent permissions;\n        + Added IP calculation to subnet;\n        + Changed all not_found when searching objects to 404 and all invalid parameters to 409 (conflict);\n        + If new item is created id will be available in response field \u201cid\u201d;\n        + New parameter $time_response in api/index.php that will return execution time in field \u201ctime\";\n        + Extensive first_free subnet calls search speedup;\n        + POST transaction locking;\n        + All first_free and first_address responses are now \"data\" instead of \"ip\" and \"subnet\" for consistency;\n        + Subnet splitting now copies over custom fields values by default (user custom_fields=no to revert);\n        + Added API option to nest custom_fields to assure correct structure;\n        + Added option to show/hide links in api by default for each app;\n        + Changed API http response codes;\n        + New methods:\n            + users:\n                GET    /user/expires/                         // returns token expiration date\n                GET    /user/token-expires/                   // returns token expiration date\n                GET    /user/users/                           // returns all users (rwa app permissions required)\n                GET    /user/admins/                          // returns all admin users (rwa app permissions required)\n            + addresses:\n                GET    /addresses/first_free/{subnetId}/      // returns first available address (subnetId can be provided with parameters)\n                GET    /addresses/{ip}/{subnetId}/            // returns IP address from subnet\n                GET    /addresses/search/{hostname}/          // Will search addresses by hostname\n                DELETE /addresses/{ip}/{subnetId}/            // deletes IP address from subnet\n                POST   /addresses/first_free/{subnetId}/      // will search for first free address in subnet, creating new address\n            + subnets:\n                GET    /subnets/{id}/addresses/{ip}/          // returns IP address from subnet\n                GET    /subnets/{id}/first_free/              // returns first free address in subnet\n                GET    /subnets/{id}/first_subnet/{mask}/     // returns first available subnets with specified mask\n                GET    /subnets/{id}/all_subnets/{mask}/      // returns all available subnets with specified mask\n                POST   /subnets/{id}/first_subnet/{mask}/     // creates first free subnet under master with specified mask\n                DELETE /subnets/{id}/permissions/             // removes permissions\n                PATCH  /subnets/{id}/permissions/             // sets subnet permissions (?grouname1=ro&groupname2=3&43=1)\n        + New controller Prefix;\n        + New controller Devices;\n        + New subcontrollers:\n            + /tools/nat/\n            + /tools/racks/\n            + /tools/locations/\n    + Widgets:\n        + New threshold widget;\n        + New inactive hosts widget;\n        + New Locations widget;\n    + PowerDNS:\n        + Default domain for PTR records (if hostname is not set);\n        + When removing IP address additional option that removes all associated PDNS records (ip and hostname);\n    + Permit normal users to manage VLANs / VRFs;\n    + Inactive (offline) hosts tools page;\n    + MAC address normalization;\n    + jQuery tables;\n    + Permission delegation now only delegates changes not whole permission set;\n    + Users with RWA permission can manage IP requests and receive IP request mails + changelog mails for subnet;\n    + IPv4 subnet link to IPv6 for dual-stack info;\n    + Removed inacessible DNS servers if timeout to prevent page load timeouts;\n    + Added option to only show supernets to limit pageload [#844 #816 #736];\n    + Added last scan info to subnet details;\n    + Added option to update address tags when address state change occurs (pingCheck) [#840];\n    + Added mantaneance mode;\n    + Added inactive addresses removal script;\n    + Subnet overlapping now checked also inside folders to prevernt duplicates;\n    + Subnet overlapping now checked also between sections if VRF defined;\n    + Added new settings directive that requires unique subnets accross sections;\n    + Added index check in verify database to detect and fix possible missing DB indexes;\n    + Added MAC address vendor display option;\n\n    Bugfixes:\n    ----------------------------\n    + PowerDNS regenerate PTR records now only updates current subnet (before whole zone);\n    + Fixed visual bug on 32-bit systems;\n    + Normal users with RWA permissions can scan subnets;\n    + Changed default timestamp from 0000-00-00 00:00:00 to 1970-01-01 00:00:01 to avoid SQL install errors if strict mode;\n    + Fixed https access on non-standard ports;\n    + Extended username to 255 chars for LDAP logins;\n    + Fixed search export invalid encoding and data may have been lost XLS file error;\n    + Fixed invalid character encoding in API responses;\n    + PowerDNS records cannot be created on slave zone;\n    + Fixed subnet resizing bug if subnet contained slaves;\n    + Added separate CSRF cookies for each address/subnet/pstn object;\n    + Deleted items are now shown and searchable from changelog;\n\n== 1.20.1\n\n    Translations:\n    ----------------------------\n    + French translation updated to verson 1.2;\n    + German translation updated to verson 1.2;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed upgrade bug that selected invalid auth method for AD/LDAP users;\n    + Fixed LDAP problems after 1.2 upgrade;\n    + Fixed PowerDNS Slave with multiple masters delimiter error;\n    + Fixed PowerDNS PTR records not being updated automatically;\n    + Fixed csrf cookie bug when editing folder;\n    + Fixed csrf cookie bug when truncationg subnet;\n    + Fixed invalid code for API crypt method;\n    + Fixed strange headings font display in Firefox;\n    + Fixed invalid proxy settings in config.dist.php;\n    + Fixed search same hostnames in db link form address table;\n    + Fixed import subnet bug caused by fw object;\n    + Fixed Subnet Import (Preview button > no action);\n\n== 1.20\n\n    New features:\n    ------------\n    + Added multiple simultaneous authentication methods (Apache, AD, LDAP, Radius, NetIQ);\n    + Added fping scanning support;\n    + Added selectable scanning type (ping/pear/fping);\n    + Added L2 domains;\n    + Added option to define address as default GW for subnet;\n    + Added customizable address tags with compressed option;\n    + Added temporary subnet / address shares;\n    + Added quick subnet masks;\n    + Added nameserver sets per subnets (jonashauge);\n    + Added optional syslog as log location;\n    + REST API:\n        + documentation: http://phpipam.net/api-documentation/\n        + API v2, old v1 support added\n        + Complete rewrite of all API calls;\n        + New security models (crypt, ssl, none);\n        + Support for custom fields;\n        + JSON / XML output\n        + Full read/write controllers (Sections, Subnets/Folders, Addresses, Vlans, Vrfs);\n    + PowerDNS integration:\n        + Automatic reverse records creation (PTR) - IPv4 and IPv6;\n        + Automatic SOA, NS record creation;\n        + DNS domain management;\n    + Added Scan agents to scan subnets remotely;\n    + Added firewall zone mappings and module;\n    + Added per-subnet DNS resolvers;\n    + Added option to mark subnet as utilized (full);\n\n    Enhancements:\n    ----------------------------\n    + All tables are now InnoDB by default;\n    + Upgraded jQuery to 2.1.3;\n    + All functions rewritten to classes/methods;\n    + Parametized all SQL queries, moved from MySQLI to PDO;\n    + Added VLAN/VRF to search and to search results export;\n    + Redesigned admin and tools menu;\n    + Added scanned/discovered subnets to tools for faster overview;\n    + Per-user display settings;\n    + New widget - tools shortcuts;\n    + New widget - IP calculator;\n    + New widget - request IP address;\n    + Clickable links for subnet fields;\n    + Custom VRF fields;\n    + Subnets can be now linked to devices;\n    + Import/export enhancements;\n    + Fast user switching for admins to impersonate user;\n    + Opened folders and subnets in tree menu are saved on page reload;\n    + RWA users can now process IP requests;\n    + Added auto-suggest for possible slave subnets;\n    + SSL option for MySQL connections;\n    + Enum custom field support;\n    + Added password reset script;\n    + Set sections to display VRF in;\n\n    Security Fixes:\n    ----------------------------\n    + Parametized all MySQL querries;\n    + Fixed plainpass being logged on user update;\n    + Fixed XSS exploit on /error/;\n    + Added CSRF protection to forms;\n\n    Translations:\n    ----------------------------\n    + Added Czech translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed bug with SSL/TLS smtp servers;\n    + Fixed visual subnet display issues on 32bit systems;\n    + Fixed IPv6 split subnets bug;\n    + Fixed /31 ping bug scanning out of boundaries;\n    + Fixed nested broadcast not counted to used percentage;\n    + Fixed invalid redirect after timeout;\n    + Fixed discovery script index overridden;\n    + Fixed dashboard graphs links to subnets;\n    + Fixed Invalid ID on subnet scan of large subnets;\n\n== 1.1.010\n\n    Bugfixes:\n    ----------------------------\n    + Fixed login fails with LDAP when escape characters are in password;\n    + Fixed login not working with spaces in password for AD login;\n    + Fixed Ivalid action when adding vlans from subnet popup menu;\n    + Fixed custom fields not appearing properly on IP request editing;\n    + Fixed Invalid ID error for IP address details on sorting;\n    + Fixed warnings if no VLAN search results are present;\n    + Fixed test mail not sending;\n    + Fixed unable to login if $phpsessname not defined;\n    + Fixed unable to login after upgrade;\n\n== 1.1\n\n    Enhancements:\n    ----------------------------\n    + Caching of SQL results to avoid multiple queries;\n    + Reduced number of DB queries;\n    + Added selected mail notifications to admins to be notified on IP/subnet change;\n    + Added new subnetId index to ipaddresses table that significantly improves network loading;\n    + Now using only 1 network connection towards MySQL server;\n    + Updated pagination;\n    + mod_rewrite no longer required, selectable URL structure under settings;\n    + Added option not to display free ranges;\n    + Added option to set maximum VLAN number;\n    + Selectable custom fields to be visible/hidden in tables view and updated device/VLAN view;\n    + Added additional confirmation before section, subnet, folder and IP address deletion;\n    + New script added for cron checks that discovers new hosts for selected networks;\n    + Added inactivity timeout to settings;\n    + Changed install procedure and updated install scripts;\n    + Added PEAR check for installation;\n    + Added free range disaply for VLANs;\n    + Addes SSL/TLS option for SMTP mail;\n    + API:\n        + Bugfixes;\n        + Added API admin permissions;\n        + read/delete actions for IP addresses;\n        + read/delete actions for Vlans;\n        + read/delete actions for VRFs;\n\n    Security Fixes:\n    ----------------------------\n    + Fixed known command injection vulnerabilities in the scan functions;\n    + Fixed known SQL injection vulnerabilities;\n    + Fixed known XSS vulnerabilities;\n    + Fixed known action XSS events;\n    + Moved to crypt method for storing password in database with salting;\n    + Added option to force user to change pass after first login;\n    + Admin password must be changed after installation;\n    + Added captcha code request after 5x unsuccesfull login to prevent brute-force attacks;\n\n    Translations:\n    ----------------------------\n    + Added es_ES translation;\n\n    Bugfixes:\n    ----------------------------\n    + Fixed top 10 widgets not escaping strings;\n    + Fixed section parent can be set to self that caused section to disapear;\n    + Fixed username instead of password being sent to smtp server;\n    + Fixed IE search bug with workaround;\n    + Fixed subnet and bcast not showing on strict mode disabled;\n    + Fixed top subnets missing on dashboard for non-admin users;\n    + Fixed bug when installation was silently failing bacause pf missing _() function (missing gettext extension)\n    + Fixed device custom field not populated on adding device;\n    + Fixed XLS export silently failed when description longer than 31 characters;\n    + Fixed overlapping check not working;\n    + Fixed subnet free space calcultation;\n    + Fixed visual subnet display not showing on /31 and /32 networks;\n    + Fixed custom fields display on folder edit;\n    + Fixed unable to edit IP addresses when fields are sorted;\n    + Fixde ordering of custom fields defaults to varchar 256;\n    + Fixed IPv6 subnet / broadcast calculation bug and next subnet suggestion;\n\n== 1.0\n\n    New features:\n    ----------------------------\n    + IP address page with IP address details and IP history (Changelog);\n    + IP address changelog, subnet and section changelogs with full changelog under tools;\n    + Favourite subnets for quick access;\n    + Adding subnets from free space with automatic mask provided;\n    + Automatic database validity check after upgrading and automatic field/table fix under administration;\n    + Automatic weekly check for new phpipam version;\n\n    Enhancements:\n    ----------------------------\n    + Bootstrap 3;\n    + UI enhancements;\n    + Improved views based on browser width;\n    + Widget order can now be set;\n    + Widgets can be reordered (dragged) directly on dashboard;\n    + Subnet can now be splitted to max 256 new subnets (16 before);\n    + Scan settings are moved to Administration;\n    + Widget management has moved to administration, which allows creation of new widgets;\n    + Improved ICMP error detection;\n    + Mail settings can now be set on gui (localhost / smtp);\n    + Popup windows are now draggable;\n    + VLAN adding in the fly enhancements;\n    + Master section now shows all subnets in subsections;\n    + Tools > devices redone;\n    + DeviceTypes can now be edited/set/added;\n    + Ping subnet enhancements;\n    + Custom field types are now defineable (int/varchar/date/datetime/text/bool/set);\n    + Date and timepicker popups if type = date/datetime;\n    + For `set` and boolean custom fields dropdown is presented that users can pick;\n\n    + Favourite subnets widget;\n    + IP requests widget;\n    + Changelog widget;\n\n    Translations:\n    ----------------------------\n    + Added Brazil translation (Michel Braga Guimar\u00e3es);\n\n    Bugfixes:\n    --------\n    + UI fixes;\n    + Fixed bug where last page of IP addresses was inaccessible;\n    + IP address state change is now sent to all admins;\n    + Fixed subnet displaying as 0.0.0.0/0 in details;\n    + Fixed links to subnets form vlans and vrfs;\n    + Fixed search result showing all folders if searched item is not IP address;\n    + Fixed disapearing section when L2 section was selected as master section;\n    + Fixed device ID showing in mail notification instead of hostname;\n    + Fixed device ID showing in search results and export instead of hostname;\n    + Fixed search for subnet name returned no results;\n    + Fixed apostophe in IP address description throws SQL error for scan results and XLS import;\n    + Fixed requester email gets cut if longer than 32 chars;\n    + Fixed admin folder edit appearing as subnet;\n    + Fixed missing device/port in import;\n    + Fixed master section delete did not delete subsections and belonging subnets/ips;\n    + Fixed online status was not updated when running Ping status scans;\n    + Fixed Folder name not appearing when deleting folder;\n\n== 0.9\n\n    New features:\n    ----------------------------\n    + Support for ICMP network discovery;\n    + Cron script to check status for selected subnets/hosts with threading suport (pcntl php extension required);\n    + ICMP check IP status in demand;\n    + Compressed (grouped) DHCP IP ranges;\n    + API server version 0.1;\n    + Option to show and group subnets by VLAN in subnets list;\n    + Option to show and group subnets by VRF in subnets list;\n    + Added subsections;\n    + Added AD username search;\n    + Added folders;\n\n    Enhancements:\n    ----------------------------\n    + Added error catching/displaying for ajax-loaded php scripts;\n    + Added default language for login/requests display and new users;\n    + Added direct links to different pages in IP address table;\n    + Subnets can now be edited directly from nested subnets list;\n    + When adding nested subnets default vlan/vrf is selected from parent;\n    + Added Section ordering;\n    + Added per/section subnet ordering (overrides dafault form settings);\n    + Clicking on section now shows all subnets and belonging details;\n    + If session timeouts after re-login last requested page will be opened;\n    + Searh for IP address now returns also subnet, even if IP is not existing;\n    + Per-user selection of widgets to display;\n    + Added description and required field checkbox for custom IP/Subnet Fields;\n    + Added custom device fields;\n    + Mails are now sent through phpmailer;\n    + Admin user cannot be deleted;\n\n    Translations:\n    ----------------------------\n    + Added French translation (Denis Darr\u00e9);\n    + Added Dutch translation (Michiel Visser);\n    + Added German translation (Carsten Br\u00fcckner);\n\n    Bugfixes:\n    ----------------------------\n    + Fixed wrong VLAN display in tools;\n    + Fixed subnet/section links from VLANS if base not /;\n    + Fixed warning in apache log on subnet editing if no VRFs are configured;\n    + Fixed admin menu off-screen overflow;\n    + Fixed firefox error when selectiong rights for section/subnets was not possible;\n    + Fixed subnet description in Cyrillic problem;\n    + Fixed errors on no permissions for user;\n    + Fixed Inaccurate Free Space Calculation (and Chart);\n    + Fixed VLAN permissions where VLAN was not displayed;\n\n== 0.8\n\n    New features:\n    ----------------------------\n    + New group and permission management;\n    + Support for translations;\n    + Subnet resizing;\n    + Subnet splitting into smaller subnets;\n    + Added free space display for nested subnets;\n    + Added visual display of subnet usage per IP address;\n    + Added truncate network option that deletes all IP addresses in subnet;\n    + Added button the updates subnet with RIPE information;\n\n    Enhancements:\n    ----------------------------\n    + Added add nested subnet under subnet details to simplify master subnet selection in hierarchy;\n    + Added edit subnet link from search results;\n    + Added reverse IPv6 DNS entries to IPCalc (Vincent Boisard);\n    + Added option for plain-text emails;\n    + Added ckEditor to write instructions;\n    + StrictMode is not set globally anymore but set per section;\n    + Added custom user fields;\n    + Added option to verify that hostname is unique;\n    + Improved MySQL exception handling;\n    + Added mod_rewrite error detection on installation and upgrade;\n    + Added hostname validation;\n    + Added Hostfile dump of IP addresses;\n    + Search also searches in custom fields;\n    + jQuery updated to v 1.9.1;\n\n    Bugfixes:\n    ------------------------\n    + Fixed overlay on second popup;\n    + Fixed IE search bug;\n    + Fixed support for non-standard ports;\n    + Fixed permitting overlapping subnets if vrfs are different;\n    + Fixed dates in logging appearing in 12h format;\n    + Fixed broken subnets link in tools > subnets if installation is not at document root;\n    + Fixed error when adding new subnet if checkboxes are not selected in newer MySQL servers;\n    + Fixed bad display of multilined navigation bar;\n    + Fixed wrong output of tools > VLAN list when using Duplicate VLANs;\n    + Fixed wrong link for upgrade script;\n    + On VRF change all child subnets are updated also;\n    + Fixed wrong maximum on dashboard top10 percentage;\n    + Fixed Adding a vlan while editing a subnet resets the edit subnet form;\n    + Fixed wrong free space calculation for nested subnets;\n    + Fixed IP use statistics not cumulative up the hierarchy if subnes has slaves;\n\n== 0.7\n\n    New features:\n    ----------------------------\n    + Completely rewritten UI using twitter's bootstrap as base;\n    + Using mod_rewrite apache module to handle GET requests (new install requitements!);\n    + Unlimited number of subnetting levels;\n    + OpenLDAP authentication support;\n    + New URL structure;\n    + Sorting of IP addresses;\n    + Custom subnet fields;\n    + Custom VLAN fields and admin option to allow duplicate VLAN names (metro area VLANs);\n    + Script to automatically update IP <-> hostname, run via cron (functions/scripts/resolveIPaddresses.php);\n    + Show Subnet name instead of subnet IP address option;\n    + Strict mode option in config files that controlls overlapping checks;\n    + New subnet menu;\n    + Added printLimit feature to break IP addresses into pages;\n\n    Enhancements:\n    ----------------------------\n    + Lots of UI changes;\n    + Less Ajax usage to display websites and details;\n    + Hierarchy display under subnet details (breadcrumbs);\n    + Search results covering VLANs;\n    + Custom IP fields ordering;\n    + VLAN creation from adding/editing subnets;\n    + IP addresses can now be edited;\n    + Collapsed switch list;\n    + Removing VLANs also removes references from subnet list;\n    + Removing VRFs also removes references from subnet list;\n    + Logs for admin on dashboard;\n    + Search via GET;\n    + Support for range networks (allows use of subnet and broadcast as IP);\n    + Import of custom IP fields;\n    + Abiility to move subnets between sections;\n    + Improved display of nested subnets now shows all IP addresses from nested subnets and orphaned IPs;\n    + Hides display of custom fields in subnet if none is filled in whole subnet;\n    + Replaced Highcharts with Flot because of licencing issues;\n\n    Bugfixes:\n    ------------------------\n    + Fixed error with missing custom IP fields when adding new IP address;\n    + Fixed bug when deleteing root subnet only deleted directly nested subnets (now whole tree);\n    + Fixed checkboxes not working in various browsers;\n    + Fixed change in switch details causing IP address associations to switch to be lost;\n    + Fixed subnet description display in under subnet administration;\n    + Fixed depricated error when showing XLS files;\n    + Fixed error when custom fields were not updated on adding IP address;\n    + Fixed error when custom fields were with spaces in name were not updated;\n    + Fixed error when providing already requested IP address;\n    + Search available also to viewer user types;\n    + Fixed /127 and /128 IPv6 subnets;\n    + Fixed /31 and /32 IPv4 subnets;\n    + Significally reduced php processing for dashboard statistics;\n    + Fixed importing of if quote is present;\n\n== 0.6\n\n    New features:\n    ----------------------------\n    + Selectable IP address list display fields;\n    + Custom IP address fields;\n    + Search and replace IP fields function;\n    + Full page width theme;\n\n    Enhancements:\n    ----------------------------\n    + Independant VLAN management;\n    + Added additional level of subnet nesting;\n    + Added option to clear and export log files;\n    + Export of search results to XLS;\n    + Clickable search results;\n    + Selectable export fields when exporting subnet;\n    + Subnet can be deleted from ip address edit subnet;\n    + IP Requests for locked subnets and viewer users can be placed from ip address list;\n    + jQuery updated to v 1.7.1;\n    + HighCharts updated to v 2.2.0;\n\n    Bugfixes:\n    ------------------------\n    + Upgrade is supported only for versions 0.4 and higher;\n    + Fixed broken UTF-8 support;\n    + Fixed wrong logging when authenticating via AD;\n    + Fixed issues where external attacker might get information about internal hosts through resolvedns script;\n    + Fixed wrong subnet nesting under administration/manage subnets;\n    + Fixed editing subnet can be outside of its own root subnet;\n    + Fixed errors when adding new switch auto-adds itselt to all hosts without no switch defined;\n    + Fixed removing switch not removed in ip address list;\n    + Vlan1 can now be used;\n    + Fixed mail sending settings with missing information;\n    + Fixed errors on adding switch with no sections;\n    + Fixed version check;\n    + Removed masterSubnets from subnets available for IP requests;\n    + Fixed error when non-admin user could not open dashboard;\n    + Added how subnet list switch when list hidden;\n\n== 0.5\n\n    New features:\n    -------------\n    + Importing subnets from RIPE by AS in admin section;\n    + Added switch management and changed switch logic;\n    + Added VRF support;\n    + Added AD domain authentication;\n    + Added MAC address field to ip address;\n    + Added database table and belonging fields check under admin;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Added DNS resolving when editing/adding IP address;\n    + Added IE compatibility meta tag and IE UI improvements for IE >= 8;\n    + Search returns also subnets and MAC searches;\n    + Added mac address and IP status to XLS import/export scripts;\n    + jQuery update from 1.6.2 to 1.7;\n    + Highcharts update from 2.1.2 to 2.1.8;\n\n    + Fixed dashboard errors if no IPv4/IPv6 subnets configured;\n    + Fixed errors with viewing / modifying IP addresses for Operator users;\n    + Fixed session cookie error on hosts;\n    + Fixed error when saving settings;\n    + Fixed instructions errors when inserting html code;\n    + Fixed first free IP address not displaying in IP request;\n\n\n== 0.4\n\n    New features:\n    -------------\n    + Massive add / edit / delete by specifying IP range (e.g. 10.10.0.1 - 10.10.0.254);\n    + Database upgrade / install from browser -> simplified installation/update procedure;\n    + New usertype viewer - can only view IP address list;\n    + Subnets can now be edited directly from IP address list;\n    + Option to lock subnet for writing to no-admin users;\n    + Device and Host list;\n    + Option to specify which subnet can have IP requests when editing / adding subnet if module is enabled;\n    + Latest version check on admin page;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + Fixed overspanning of multiple sections;\n    + Admin menu and add subnet now shown only to admins;\n    + Fixed VLAN table to show nesting and IP request option and statistics;\n    + Fixed subnet table to show nesting and IP request option;\n    + Subnet Adding shows only master subnets in section not in all sections;\n    + Tooltips and button hovers are now in separate javascript file;\n    + Graphs show only subnets with non-0 ip addresses;\n    + Various code enhancements + improved error handling;\n    + Fixed URL links not updating after few clicks;\n    + If loading slave subnet directly the subnet menu drops down and shows active slave subnet;\n    + Clicking on master shubnet shows all nested subnets and statistics;\n    + Redesigned log table;\n    + Fixed search;\n\n== 0.3\n\n    New features:\n    -------------\n    + Subnet nesting - you can now have master subnet and normal subnets belonging to it;\n    + Server settings are now moved to database and can be set under admin menu (database settings & debugging remain in config.php);\n    + Request IP module on login page with email notification;\n    + Confirm/reject IP address request from admin page with mail notification;\n    + Admin dashboard notification of new requests;\n    + Autocomplete of owner and Switch name from all available when adding/editing IP address;\n    + New settings quick access on button hover;\n    + Option to export each subnet indivudually;\n\n    Bugfixes / enhancements:\n    ------------------------\n    + jQuery update from 1.6 to 1.6.2;\n    + VLANs are now grouped by section;\n    + Direct access to subnet from vlan table;\n    + UI enhancements;\n    + Fixed user editing bug where user update broke password;\n    + Fixed password in new account notification;\n    + Fixed percentage display on Dashboard;\n    + IPv6 calculator /64 limit fixed;\n    + Changed tooltip effect to appear instantly for smoother display;\n    + Login functions are now separate file;\n\n\n== 0.2 (First public version)\n\n    Bugfixes / enhancements:\n    ------------------------\n    + now also works with php 5.2;\n    + fixed empty fields in xls import;\n    + passwords are now stored in md5 hash;\n    + high numbers for free/used IP addresses (mainly IPv6) are now represented in k/m/G values to improve readibility;\n    + fixed log search bug;\n    + cursor not displayed as link on images and non-href links;\n    + same add image on all pages;\n    + fixed IP mail notification apperance;\n    + UI enhancements and bugfixes;\n    + Fixed some javascript bugs;\n    + Minified javascript to make loading faster;\n    + adding new ip address now automatically provides first available IP address in subnet;\n\n    New features:\n    -------------\n    + added switch / port fields to IP addresses;\n    + hide subets on request to get better view;\n    + Informational tooltips added + option to disable them in config file if someone finds them annoying;\n    + export whole IP address database to XLS file from admin menu;\n    + create MySQL database dump from admin menu;\n    + added IP instructions for users, that can be edited from admin menu;\n\n\n== 0.1 (First test version)\n"], "filenames": ["app/admin/import-export/generate-hosts.php", "app/admin/import-export/generate-mysql.php", "app/admin/import-export/generate-xls.php", "app/dashboard/widgets/access_logs.php", "app/dashboard/widgets/error_logs.php", "app/subnets/addresses/export-subnet.php", "app/tools/logs/show-logs.php", "functions/classes/class.Admin.php", "functions/classes/class.Result.php", "misc/CHANGELOG"], "buggy_code_start_loc": [17, 12, 18, 10, 10, 28, 27, 110, 74, 1], "buggy_code_end_loc": [17, 12, 18, 10, 10, 32, 27, 121, 74, 1], "fixing_code_start_loc": [18, 13, 19, 11, 11, 28, 28, 110, 75, 2], "fixing_code_end_loc": [19, 14, 20, 12, 12, 37, 29, 119, 91, 6], "type": "CWE-863", "message": "Improper Authorization in GitHub repository phpipam/phpipam prior to 1.4.6.", "other": {"cve": {"id": "CVE-2022-1224", "sourceIdentifier": "security@huntr.dev", "published": "2022-04-04T11:15:08.067", "lastModified": "2022-04-11T16:42:06.027", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Authorization in GitHub repository phpipam/phpipam prior to 1.4.6."}, {"lang": "es", "value": "Una Autorizaci\u00f3n Inapropiada en el repositorio de GitHub phpipam/phpipam versiones anteriores a 1.4.6"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 6.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:N/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-863"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-285"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:phpipam:phpipam:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.4.6", "matchCriteriaId": "18904167-103A-48E2-A8A6-075986A292B9"}]}]}], "references": [{"url": "https://github.com/phpipam/phpipam/commit/f6a49fd9f93b7d7e0a4fbf1d35338502eed35953", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/cd9e1508-5682-427e-a921-14b4f520b85a", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/phpipam/phpipam/commit/f6a49fd9f93b7d7e0a4fbf1d35338502eed35953"}}