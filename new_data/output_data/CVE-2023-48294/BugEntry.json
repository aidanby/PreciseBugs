{"buggy_code": ["<?php\n\nuse LibreNMS\\Config;\nuse LibreNMS\\Data\\Graphing\\GraphParameters;\nuse LibreNMS\\Enum\\ImageFormat;\n\ntry {\n    if (isset($vars['device'])) {\n        $device = is_numeric($vars['device'])\n            ? device_by_id_cache($vars['device'])\n            : device_by_name($vars['device']);\n        if (empty($device['device_id'])) {\n            throw new \\LibreNMS\\Exceptions\\RrdGraphException('Device not found');\n        }\n        DeviceCache::setPrimary($device['device_id']);\n    }\n\n    // variables for included graphs\n    $graph_params = new GraphParameters($vars);\n    // set php variables for legacy graphs\n    $type = $graph_params->type;\n    $subtype = $graph_params->subtype;\n    $height = $graph_params->height;\n    $width = $graph_params->width;\n    $from = $graph_params->from;\n    $to = $graph_params->to;\n    $period = $graph_params->period;\n    $prev_from = $graph_params->prev_from;\n    $inverse = $graph_params->inverse;\n    $in = $graph_params->in;\n    $out = $graph_params->out;\n    $float_precision = $graph_params->float_precision;\n    $title = $graph_params->visible('title');\n    $nototal = ! $graph_params->visible('total');\n    $nodetails = ! $graph_params->visible('details');\n    $noagg = ! $graph_params->visible('aggregate');\n    $rrd_options = '';\n    $env = [];\n\n    if (session('preferences.timezone')) {\n        $env['TZ'] = session('preferences.timezone');\n    }\n\n    require Config::get('install_dir') . \"/includes/html/graphs/$type/auth.inc.php\";\n\n    if ($auth && is_customoid_graph($type, $subtype)) {\n        $unit = $vars['unit'];\n        include Config::get('install_dir') . '/includes/html/graphs/customoid/customoid.inc.php';\n    } elseif ($auth && is_file(Config::get('install_dir') . \"/includes/html/graphs/$type/$subtype.inc.php\")) {\n        include Config::get('install_dir') . \"/includes/html/graphs/$type/$subtype.inc.php\";\n    } else {\n        graph_error(\"$type*$subtype Graph Template Missing\", \"$type*$subtype\");\n    }\n\n    if ($auth === null) {\n        // We are unauthenticated :(\n        graph_error('No Authorization', 'No Auth');\n\n        return;\n    }\n\n    $rrd_options = $graph_params . ' ' . $rrd_options;\n\n    // command output requested\n    if (! empty($command_only)) {\n        echo \"<div class='infobox'>\";\n        echo \"<p style='font-size: 16px; font-weight: bold;'>RRDTool Command</p>\";\n        echo \"<pre class='rrd-pre'>\";\n        echo escapeshellcmd('rrdtool ' . Rrd::buildCommand('graph', Config::get('temp_dir') . '/' . strgen(), $rrd_options));\n        echo '</pre>';\n        try {\n            Rrd::graph($rrd_options, $env);\n        } catch (\\LibreNMS\\Exceptions\\RrdGraphException $e) {\n            echo \"<p style='font-size: 16px; font-weight: bold;'>RRDTool Output</p>\";\n            echo \"<pre class='rrd-pre'>\";\n            echo $e->getMessage();\n            echo '</pre>';\n        }\n        echo '</div>';\n\n        return;\n    }\n\n    if (empty($rrd_options)) {\n        graph_error('Graph Definition Error', 'Def Error');\n\n        return;\n    }\n\n    // Generating the graph!\n    $image_data = Rrd::graph($rrd_options, $env);\n\n    // output the graph\n    if (\\LibreNMS\\Util\\Debug::isEnabled()) {\n        echo '<img src=\"data:' . ImageFormat::forGraph()->contentType() . ';base64,' . base64_encode($image_data) . '\" alt=\"graph\" />';\n    } else {\n        header('Content-type: ' . ImageFormat::forGraph()->contentType());\n        echo (isset($vars['output']) && $vars['output'] === 'base64') ? base64_encode($image_data) : $image_data;\n    }\n} catch (\\LibreNMS\\Exceptions\\RrdGraphException $e) {\n    if (\\LibreNMS\\Util\\Debug::isEnabled()) {\n        throw $e;\n    }\n\n    if (isset($rrd_filename) && ! Rrd::checkRrdExists($rrd_filename)) {\n        graph_error('No Data file ' . basename($rrd_filename), 'No Data');\n    } else {\n        graph_error('Error Drawing Graph: ' . $e->getMessage(), 'Draw Error');\n    }\n}\n"], "fixing_code": ["<?php\n\nuse LibreNMS\\Config;\nuse LibreNMS\\Data\\Graphing\\GraphParameters;\nuse LibreNMS\\Enum\\ImageFormat;\n\ntry {\n    if (isset($vars['device'])) {\n        $device = is_numeric($vars['device'])\n            ? device_by_id_cache($vars['device'])\n            : device_by_name($vars['device']);\n        if (isset($device['device_id'])) {\n            DeviceCache::setPrimary($device['device_id']);\n        }\n    }\n\n    // variables for included graphs\n    $graph_params = new GraphParameters($vars);\n    // set php variables for legacy graphs\n    $type = $graph_params->type;\n    $subtype = $graph_params->subtype;\n    $height = $graph_params->height;\n    $width = $graph_params->width;\n    $from = $graph_params->from;\n    $to = $graph_params->to;\n    $period = $graph_params->period;\n    $prev_from = $graph_params->prev_from;\n    $inverse = $graph_params->inverse;\n    $in = $graph_params->in;\n    $out = $graph_params->out;\n    $float_precision = $graph_params->float_precision;\n    $title = $graph_params->visible('title');\n    $nototal = ! $graph_params->visible('total');\n    $nodetails = ! $graph_params->visible('details');\n    $noagg = ! $graph_params->visible('aggregate');\n    $rrd_options = '';\n    $env = [];\n\n    if (session('preferences.timezone')) {\n        $env['TZ'] = session('preferences.timezone');\n    }\n\n    require Config::get('install_dir') . \"/includes/html/graphs/$type/auth.inc.php\";\n\n    if ($auth && is_customoid_graph($type, $subtype)) {\n        $unit = $vars['unit'];\n        include Config::get('install_dir') . '/includes/html/graphs/customoid/customoid.inc.php';\n    } elseif ($auth && is_file(Config::get('install_dir') . \"/includes/html/graphs/$type/$subtype.inc.php\")) {\n        include Config::get('install_dir') . \"/includes/html/graphs/$type/$subtype.inc.php\";\n    } else {\n        graph_error(\"$type*$subtype Graph Template Missing\", \"$type*$subtype\");\n    }\n\n    if ($auth === null) {\n        // We are unauthenticated :(\n        graph_error('No Authorization', 'No Auth');\n\n        return;\n    }\n\n    // check after auth\n    if (isset($vars['device']) && empty($device['device_id'])) {\n        throw new \\LibreNMS\\Exceptions\\RrdGraphException('Device not found');\n    }\n\n    $rrd_options = $graph_params . ' ' . $rrd_options;\n\n    // command output requested\n    if (! empty($command_only)) {\n        echo \"<div class='infobox'>\";\n        echo \"<p style='font-size: 16px; font-weight: bold;'>RRDTool Command</p>\";\n        echo \"<pre class='rrd-pre'>\";\n        echo escapeshellcmd('rrdtool ' . Rrd::buildCommand('graph', Config::get('temp_dir') . '/' . strgen(), $rrd_options));\n        echo '</pre>';\n        try {\n            Rrd::graph($rrd_options, $env);\n        } catch (\\LibreNMS\\Exceptions\\RrdGraphException $e) {\n            echo \"<p style='font-size: 16px; font-weight: bold;'>RRDTool Output</p>\";\n            echo \"<pre class='rrd-pre'>\";\n            echo $e->getMessage();\n            echo '</pre>';\n        }\n        echo '</div>';\n\n        return;\n    }\n\n    if (empty($rrd_options)) {\n        graph_error('Graph Definition Error', 'Def Error');\n\n        return;\n    }\n\n    // Generating the graph!\n    $image_data = Rrd::graph($rrd_options, $env);\n\n    // output the graph\n    if (\\LibreNMS\\Util\\Debug::isEnabled()) {\n        echo '<img src=\"data:' . ImageFormat::forGraph()->contentType() . ';base64,' . base64_encode($image_data) . '\" alt=\"graph\" />';\n    } else {\n        header('Content-type: ' . ImageFormat::forGraph()->contentType());\n        echo (isset($vars['output']) && $vars['output'] === 'base64') ? base64_encode($image_data) : $image_data;\n    }\n} catch (\\LibreNMS\\Exceptions\\RrdGraphException $e) {\n    if (\\LibreNMS\\Util\\Debug::isEnabled()) {\n        throw $e;\n    }\n\n    if (isset($rrd_filename) && ! Rrd::checkRrdExists($rrd_filename)) {\n        graph_error('No Data file ' . basename($rrd_filename), 'No Data');\n    } else {\n        graph_error('Error Drawing Graph: ' . $e->getMessage(), 'Draw Error');\n    }\n}\n"], "filenames": ["includes/html/graphs/graph.inc.php"], "buggy_code_start_loc": [12], "buggy_code_end_loc": [59], "fixing_code_start_loc": [12], "fixing_code_end_loc": [64], "type": "NVD-CWE-noinfo", "message": "LibreNMS is an auto-discovering PHP/MySQL/SNMP based network monitoring which includes support for a wide range of network hardware and operating systems. In affected versions of LibreNMS when a user accesses their device dashboard, one request is sent to `graph.php` to access graphs generated on the particular Device. This request can be accessed by a low privilege user and they can enumerate devices on librenms with their id or hostname. Leveraging this vulnerability a low privilege user can see all devices registered by admin users. This vulnerability has been addressed in commit `489978a923` which has been included in release version 23.11.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.", "other": {"cve": {"id": "CVE-2023-48294", "sourceIdentifier": "security-advisories@github.com", "published": "2023-11-17T22:15:08.010", "lastModified": "2023-11-29T20:53:09.650", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "LibreNMS is an auto-discovering PHP/MySQL/SNMP based network monitoring which includes support for a wide range of network hardware and operating systems. In affected versions of LibreNMS when a user accesses their device dashboard, one request is sent to `graph.php` to access graphs generated on the particular Device. This request can be accessed by a low privilege user and they can enumerate devices on librenms with their id or hostname. Leveraging this vulnerability a low privilege user can see all devices registered by admin users. This vulnerability has been addressed in commit `489978a923` which has been included in release version 23.11.0. Users are advised to upgrade. There are no known workarounds for this vulnerability."}, {"lang": "es", "value": "LibreNMS es un monitor de red basado en PHP/MySQL/SNMP con descubrimiento autom\u00e1tico que incluye soporte para una amplia gama de hardware de red y sistemas operativos. En las versiones afectadas de LibreNMS, cuando un usuario accede al panel de su dispositivo, se env\u00eda una solicitud a `graph.php` para acceder a los gr\u00e1ficos generados en el dispositivo en particular. Un usuario con privilegios bajos puede acceder a esta solicitud y puede enumerar dispositivos en librenms con su identificaci\u00f3n o nombre de host. Aprovechando esta vulnerabilidad, un usuario con privilegios bajos puede ver todos los dispositivos registrados por los usuarios administradores. Esta vulnerabilidad se solucion\u00f3 en el commit `489978a923` que se incluy\u00f3 en la versi\u00f3n 23.11.0. Se recomienda a los usuarios que actualicen. No se conocen workarounds para esta vulnerabilidad."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-200"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:librenms:librenms:*:*:*:*:*:*:*:*", "versionEndExcluding": "23.11.0", "matchCriteriaId": "24B09F58-7CE2-470F-8F5B-6771753682A6"}]}]}], "references": [{"url": "https://github.com/librenms/librenms/blob/fa93034edd40c130c2ff00667ca2498d84be6e69/html/graph.php#L19C1-L25C2", "source": "security-advisories@github.com", "tags": ["Product"]}, {"url": "https://github.com/librenms/librenms/commit/489978a923ed52aa243d3419889ca298a8a6a7cf", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/librenms/librenms/security/advisories/GHSA-fpq5-4vwm-78x4", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/librenms/librenms/commit/489978a923ed52aa243d3419889ca298a8a6a7cf"}}