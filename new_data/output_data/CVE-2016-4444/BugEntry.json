{"buggy_code": ["#\n# Copyright (C) 2006-2011 Red Hat, Inc.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n#\n\nimport selinux\nfrom stat import *\nimport gettext\ntranslation=gettext.translation('setroubleshoot-plugins', fallback=True)\n_=translation.gettext\n\nfrom setroubleshoot.util import *\nfrom setroubleshoot.Plugin import Plugin\n\nclass plugin(Plugin):\n    summary =_('''\n    SELinux is preventing $SOURCE_PATH from loading $TARGET_PATH which requires text relocation.\n    ''')\n    \n    problem_description = _('''\n    The $SOURCE application attempted to load $TARGET_PATH which\n    requires text relocation.  This is a potential security problem.\n    Most libraries do not need this permission. Libraries are\n    sometimes coded incorrectly and request this permission.  The\n    <a href=\"http://people.redhat.com/drepper/selinux-mem.html\">SELinux Memory Protection Tests</a>\n    web page explains how to remove this requirement.  You can configure\n    SELinux temporarily to allow $TARGET_PATH to use relocation as a\n    workaround, until the library is fixed. Please file a \nbug report.\n    ''')\n    \n    unsafe_problem_description = _('''\n    The $SOURCE application attempted to load $TARGET_PATH which\n    requires text relocation.  This is a potential security problem.\n    Most libraries should not need this permission.   The   \n    <a href=\"http://people.redhat.com/drepper/selinux-mem.html\">\n    SELinux Memory Protection Tests</a>\n    web page explains this check.  This tool examined the library and it looks \n    like it was built correctly. So setroubleshoot can not determine if this \n    application is compromized or not.  This could be a serious issue. Your \n    system may very well be compromised.\n\n    Contact your security administrator and report this issue.\n\n    ''')\n    \n    unsafe_fix_description = \"Contact your security administrator and report this issue.\" \n\n    fix_description = _('''\n    If you trust $TARGET_PATH to run correctly, you can change the\n    file context to textrel_shlib_t. \"chcon -t textrel_shlib_t\n    '$TARGET_PATH'\"\n    You must also change the default file context files on the system in order to preserve them even on a full relabel.  \"semanage fcontext -a -t textrel_shlib_t '$FIX_TARGET_PATH'\"\n    \n    ''')\n\n    unsafe_then_text = \"\"\"\nsetroubleshoot examined '$FIX_TARGET_PATH' to make sure it was built correctly, but can not determine if this application has been compromized.  This alert could be a serious issue and your system could be compromised.\n\"\"\"\n    unsafe_do_text = \"Contact your security administrator and report this issue.\" \n\n    then_text = \"You need to change the label on '$FIX_TARGET_PATH'\"\n    do_text = \"\"\"# semanage fcontext -a -t textrel_shlib_t '$FIX_TARGET_PATH'\n# restorecon -v '$FIX_TARGET_PATH'\"\"\"\n\n    def get_then_text(self, avc, args):\n        if len(args) > 0:\n            return self.unsafe_then_text\n        return self.then_text\n\n    def get_do_text(self, avc, args):\n        if len(args) > 0:\n            return self.unsafe_do_text\n        return self.do_text\n\n    def __init__(self):\n        Plugin.__init__(self,__name__)\n        self.set_priority(10)\n\n    def analyze(self, avc):\n        import commands\n        if avc.has_any_access_in(['execmod']):\n            # MATCH\n            if (commands.getstatusoutput(\"eu-readelf -d %s | fgrep -q TEXTREL\" % avc.tpath)[0] == 1):\n                return self.report((\"unsafe\"))\n\n            mcon = selinux.matchpathcon(avc.tpath.strip('\"'), S_IFREG)[1]\n            if mcon.split(\":\")[2] == \"lib_t\":\n                return self.report()\n        return None\n"], "fixing_code": ["#\n# Copyright (C) 2006-2011 Red Hat, Inc.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n#\n\nimport selinux\nfrom stat import *\nimport gettext\ntranslation=gettext.translation('setroubleshoot-plugins', fallback=True)\n_=translation.gettext\n\nfrom setroubleshoot.util import *\nfrom setroubleshoot.Plugin import Plugin\n\nclass plugin(Plugin):\n    summary =_('''\n    SELinux is preventing $SOURCE_PATH from loading $TARGET_PATH which requires text relocation.\n    ''')\n    \n    problem_description = _('''\n    The $SOURCE application attempted to load $TARGET_PATH which\n    requires text relocation.  This is a potential security problem.\n    Most libraries do not need this permission. Libraries are\n    sometimes coded incorrectly and request this permission.  The\n    <a href=\"http://people.redhat.com/drepper/selinux-mem.html\">SELinux Memory Protection Tests</a>\n    web page explains how to remove this requirement.  You can configure\n    SELinux temporarily to allow $TARGET_PATH to use relocation as a\n    workaround, until the library is fixed. Please file a \nbug report.\n    ''')\n    \n    unsafe_problem_description = _('''\n    The $SOURCE application attempted to load $TARGET_PATH which\n    requires text relocation.  This is a potential security problem.\n    Most libraries should not need this permission.   The   \n    <a href=\"http://people.redhat.com/drepper/selinux-mem.html\">\n    SELinux Memory Protection Tests</a>\n    web page explains this check.  This tool examined the library and it looks \n    like it was built correctly. So setroubleshoot can not determine if this \n    application is compromized or not.  This could be a serious issue. Your \n    system may very well be compromised.\n\n    Contact your security administrator and report this issue.\n\n    ''')\n    \n    unsafe_fix_description = \"Contact your security administrator and report this issue.\" \n\n    fix_description = _('''\n    If you trust $TARGET_PATH to run correctly, you can change the\n    file context to textrel_shlib_t. \"chcon -t textrel_shlib_t\n    '$TARGET_PATH'\"\n    You must also change the default file context files on the system in order to preserve them even on a full relabel.  \"semanage fcontext -a -t textrel_shlib_t '$FIX_TARGET_PATH'\"\n    \n    ''')\n\n    unsafe_then_text = \"\"\"\nsetroubleshoot examined '$FIX_TARGET_PATH' to make sure it was built correctly, but can not determine if this application has been compromized.  This alert could be a serious issue and your system could be compromised.\n\"\"\"\n    unsafe_do_text = \"Contact your security administrator and report this issue.\" \n\n    then_text = \"You need to change the label on '$FIX_TARGET_PATH'\"\n    do_text = \"\"\"# semanage fcontext -a -t textrel_shlib_t '$FIX_TARGET_PATH'\n# restorecon -v '$FIX_TARGET_PATH'\"\"\"\n\n    def get_then_text(self, avc, args):\n        if len(args) > 0:\n            return self.unsafe_then_text\n        return self.then_text\n\n    def get_do_text(self, avc, args):\n        if len(args) > 0:\n            return self.unsafe_do_text\n        return self.do_text\n\n    def __init__(self):\n        Plugin.__init__(self,__name__)\n        self.set_priority(10)\n\n    def analyze(self, avc):\n        import subprocess\n        if avc.has_any_access_in(['execmod']):\n            # MATCH\n            # from https://docs.python.org/2.7/library/subprocess.html#replacing-shell-pipeline\n            p1 = subprocess.Popen(['eu-readelf', '-d', avc.tpath], stdout=subprocess.PIPE)\n            p2 = subprocess.Popen([\"fgrep\", \"-q\", \"TEXTREL\"], stdin=p1.stdout, stdout=subprocess.PIPE)\n            p1.stdout.close()  # Allow p1 to receive a SIGPIPE if p2 exits.\n            p1.wait()\n            p2.wait()\n            if p2.returncode == 1:\n                return self.report((\"unsafe\"))\n\n            mcon = selinux.matchpathcon(avc.tpath.strip('\"'), S_IFREG)[1]\n            if mcon.split(\":\")[2] == \"lib_t\":\n                return self.report()\n        return None\n"], "filenames": ["plugins/src/allow_execmod.py"], "buggy_code_start_loc": [94], "buggy_code_end_loc": [98], "fixing_code_start_loc": [94], "fixing_code_end_loc": [104], "type": "CWE-77", "message": "The allow_execmod plugin for setroubleshoot before 3.2.23 allows local users to execute arbitrary commands by triggering an execmod SELinux denial with a crafted binary filename, related to the commands.getstatusoutput function.", "other": {"cve": {"id": "CVE-2016-4444", "sourceIdentifier": "secalert@redhat.com", "published": "2017-04-11T18:59:00.213", "lastModified": "2017-04-17T12:47:32.183", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The allow_execmod plugin for setroubleshoot before 3.2.23 allows local users to execute arbitrary commands by triggering an execmod SELinux denial with a crafted binary filename, related to the commands.getstatusoutput function."}, {"lang": "es", "value": "El complemento allow_execmod para setroubleshoot en versiones anteriores a 3.2.23 permite a los usuarios locales ejecutar comandos arbitrarios al activar una denegaci\u00f3n de SELinux de execmod con un nombre de archivo binario manipulado, relacionado con la funci\u00f3n commands.getstatusoutput."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.0, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.0, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:M/Au:N/C:C/I:C/A:C", "accessVector": "LOCAL", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 6.9}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.4, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:setroubleshoot_project:setroubleshoot:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.2.22", "matchCriteriaId": "5C62A645-0382-4719-99D0-2247C4EAA2A0"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_desktop:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "33C068A4-3780-4EAB-A937-6082DF847564"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_hpc_node:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "3C84489B-B08C-4854-8A12-D01B6E45CF79"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_server:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "51EF4996-72F4-4FA4-814F-F5991E7A8318"}, {"vulnerable": true, "criteria": "cpe:2.3:o:redhat:enterprise_linux_workstation:7.0:*:*:*:*:*:*:*", "matchCriteriaId": "825ECE2D-E232-46E0-A047-074B34DB1E97"}]}]}], "references": [{"url": "http://seclists.org/oss-sec/2016/q2/575", "source": "secalert@redhat.com", "tags": ["Exploit", "Mailing List", "Patch", "Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/91476", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securitytracker.com/id/1036144", "source": "secalert@redhat.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://access.redhat.com/errata/RHSA-2016:1293", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1332644", "source": "secalert@redhat.com", "tags": ["Issue Tracking", "Patch"]}, {"url": "https://github.com/fedora-selinux/setroubleshoot/commit/5cd60033ea7f5bdf8c19c27b23ea2d773d9b09f5", "source": "secalert@redhat.com", "tags": ["Patch"]}, {"url": "https://rhn.redhat.com/errata/RHSA-2016-1267.html", "source": "secalert@redhat.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fedora-selinux/setroubleshoot/commit/5cd60033ea7f5bdf8c19c27b23ea2d773d9b09f5"}}