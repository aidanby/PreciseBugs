{"buggy_code": ["/**\n* When a file is added, should call this method\n* \n* @param $parent\n* @param currentButtonId: button ID for input[type=file].active\n*/\nfunction refreshFilelist($parent, currentButtonId){\n    var files = $(\"input[type=file]\", $parent);\n\n    var filesHtml = \"\";\n    var filesLength = 0;\n    $(files).each(function() {\n        if(!$(this)[0].files.length){\n            return;\n        }\n        $(this).attr(\"id\", \"file-upload-\"+filesLength)\n        var name = escapeHtml($(this)[0].files[0].name);\n        \n        filesHtml += \"<li >\\\n            <div class='file-name'>\"+name+\"</div>\\\n            <a href='#' class='remove-file' data-id='file-upload-\"+filesLength+\"'><i class='fa fa-remove'></i></a>\\\n        </li>\";\n        filesLength++;\n    });\n    $parent.find('.file-list').html(filesHtml);\n    var totalFilesLength = $('.exist-files > li', $parent).length + filesLength;\n    if(totalFilesLength > 1){\n        $msg = \"<span class='file-count'>\" + totalFilesLength + \"</span> Files Added\"; \n    }else{ \n        $msg = \"<span class='file-count'>\" + totalFilesLength + \"</span> File Added\"; \n    }\n    $parent.find('.file-count-html').html($msg);\n\n    var name = $parent.find('.file_name').data('file');\n    if(!name)\n        name = \"file\";\n\n    if(currentButtonId){\n        $parent.prepend($('<input id=\"'+currentButtonId+'\" name=\"'+name+'[]\" class=\"hidden-file-upload active\" type=\"file\">'))\n    }\n    \n}\n/**\n* HTMLSPECIALCHARS\n* \n* @param text\n*/\nfunction escapeHtml(text) {\n  var map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;'\n  };\n\n  return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\n}\n/**\n* popup when click \"Score Using CVSS\"\n* \n* @param parent\n*/\nfunction popupcvss(parent)\n{\n    parentOfScores = parent;\n    \n    var cve_id = $(\"#reference_id\", parent).val();\n    var pattern = /cve\\-\\d{4}-\\d{4}/i;\n\n    // If the field is a CVE ID\n    if (cve_id !== undefined && cve_id.match(pattern))\n    {\n        my_window = window.open(BASE_URL + '/management/cvss_rating.php?cve_id='+ cve_id ,'popupwindow','width=850,height=680,menu=0,status=0');\n    }\n    else my_window = window.open(BASE_URL + '/management/cvss_rating.php','popupwindow','width=850,height=680,menu=0,status=0');\n    \n}\n\n/**\n* popup when click \"Score Using DREAD\"\n* \n*/\nfunction popupdread(parent)\n{\n    parentOfScores = parent;\n    my_window = window.open(BASE_URL + '/management/dread_rating.php','popupwindow','width=660,height=500,menu=0,status=0');\n}\n\n/**\n* popup when click \"Score Using OWASP\"\n* \n*/\nfunction popupowasp(parent)\n{\n    parentOfScores = parent;\n    my_window = window.open(BASE_URL + '/management/owasp_rating.php','popupwindow','width=665,height=570,menu=0,status=0');\n}\n\n/**\n* popup when click \"Score Using Contributing Risk\"\n* \n*/\nfunction popupcontributingrisk(parent)\n{\n    parentOfScores = parent;\n    my_window = window.open(BASE_URL + '/management/contributingrisk_rating.php','popupwindow','width=665,height=570,menu=0,status=0');\n}\n\nfunction closepopup()\n    {\n    if(false == my_window.closed)\n    {\n        my_window.close ();\n    }\n    else\n    {\n        alert('Window already closed!');\n    }\n}\n\n/**\n* Create and Update the risk scoring chart\n* \n* @param risk_id\n*/\nfunction riskScoringChart(renderTo, risk_id, risk_levels){\n    var backgroundColor = \"#f5f5f5\";\n    // Creates stops array\n    var stops = [\n        [0, backgroundColor],\n    ];\n    \n    risk_levels.sort(function(a, b){\n        if(Number(a.value) > Number(b.value) ){\n            return -1;\n        }\n        if(Number(a.value) < Number(b.value) ){\n            return 1;\n        }\n    })\n    risk_levels.push({value: 0, color: \"#fff\"});\n    \n    var to = 10;\n    var plotBands = [];\n    for(var i=0; i<risk_levels.length; i++){\n        var risk_level = risk_levels[i];\n        plotBands.push({\n            color: risk_level.color,\n            to: to,\n            from: Number(risk_level.value),\n        })\n        to = Number(risk_level.value);\n    }\n    // For all plots, change Date axis to local timezone\n    Highcharts.setOptions({                                            \n        global : {\n            useUTC : false\n        }\n    });\n    var chartObj = new Highcharts.Chart( {\n        chart: {\n            renderTo: renderTo,\n            type: 'spline',\n        },\n        title: {\n            text: $('#_RiskScoringHistory').length ? $(\"#_RiskScoringHistory\").val() : 'Risk Scoring History'\n        },\n        yAxis: [{\n            title: {\n                text: $('#_RiskScore').length ? $('#_RiskScore').val() : \"Risk Score\"\n            },\n            min: 0, \n            max: 10,\n            gridLineWidth: 0, \n            plotBands: plotBands,\n        }],\n        xAxis: [{\n            type: 'datetime',\n            dateTimeLabelFormats: { // don't display the dummy year\n                millisecond: '%Y-%m-%d<br/>%H:%M:%S',\n                second: '%Y-%m-%d<br/>%H:%M:%S',\n                minute: '%Y-%m-%d<br/>%H:%M',\n                hour: '%Y-%m-%d<br/>%H:%M',\n                day: '%Y-%m-%d<br/>%H:%M',\n                month: '%Y-%m-%d<br/>%H:%M',\n                year: '%Y-%m-%d<br/>%H:%M'\n            },\n            title: {\n                text: $(\"#_DateAndTime\").val() ? $(\"#_DateAndTime\").val() : \"Date and time\"\n            }\n        }],\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle'\n        },\n        plotOptions: {\n            spline: {\n                marker: {\n                    enabled: true\n                }\n            }                    \n        },\n        series: [\n            {name: $('#_RiskScore').length ? $('#_RiskScore').val() : \"Inherent Risk\" },\n            {name: $('#_ResidualRiskScore').length ? $('#_ResidualRiskScore').val() : \"ResidualRisk Score\" },\n        ]\n\n    });\n    \n\n    chartObj.showLoading('<img src=\"../images/progress.gif\">');\n    $.ajax({\n        type: \"GET\",\n        url: BASE_URL + \"/api/management/risk/residual_scoring_history?id=\" + risk_id,\n        dataType: 'json',\n        success: function(data){\n            var residual_histories = data.data;\n            var residualChartData = [];\n            for(var i=0; i<residual_histories.length; i++){\n                // var date = new Date(histories[i].last_update.replace(/\\s/, 'T'));\n                // Added the three lines below to make the timestamp work properly with Safari\n                var parts = residual_histories[i].last_update.split(/[ \\/:-]/g);\n                var dateFormatted = parts[1] + \"/\" + parts[2] + \"/\" + parts[0] + \" \" + parts[3] + \":\" + parts[4] + \":\" + parts[5];\n                var date = new Date(dateFormatted);\n                residualChartData.push([date.getTime(), Number(residual_histories[i].residual_risk)]);\n            }\n            \n            chartObj.series[1].setData(residualChartData)\n            chartObj.hideLoading();\n            \n        },\n        error: function(xhr,status,error){\n            if(xhr.responseJSON && xhr.responseJSON.status_message){\n                showAlertsFromArray(xhr.responseJSON.status_message);\n            }\n        }\n    })\n    $.ajax({\n        type: \"GET\",\n        url: BASE_URL + \"/api/management/risk/scoring_history?id=\" + risk_id,\n        dataType: 'json',\n        success: function(data){\n            var histories = data.data;\n            var chartData = [];\n            for(var i=0; i<histories.length; i++){\n                // var date = new Date(histories[i].last_update.replace(/\\s/, 'T'));\n                // Added the three lines below to make the timestamp work properly with Safari\n                var parts = histories[i].last_update.split(/[ \\/:-]/g);\n                var dateFormatted = parts[1] + \"/\" + parts[2] + \"/\" + parts[0] + \" \" + parts[3] + \":\" + parts[4] + \":\" + parts[5];\n                var date = new Date(dateFormatted);\n                chartData.push([date.getTime(), Number(histories[i].calculated_risk)]);\n            }\n            \n            chartObj.series[0].setData(chartData)\n\n            chartObj.hideLoading();\n            \n        },\n        error: function(xhr,status,error){\n            if(xhr.responseJSON && xhr.responseJSON.status_message){\n                showAlertsFromArray(xhr.responseJSON.status_message);\n            }\n        }\n    })\n}\n\nfunction alert(message){\n    var modal_container_id = \"alert-modal\";\n    if(!$(\"#\" + modal_container_id).length){\n        var modal_html = '';\n        modal_html += '<div id=\"' + modal_container_id + '\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">';\n            modal_html += '<div class=\"modal-body\">';\n\n              modal_html += '<div class=\"form-group text-center message-container\">';\n                modal_html += '<label class=\"message\">'+message+'</label>'\n              modal_html += '</div>';\n\n              modal_html += '<div class=\"form-group text-center\">';\n                modal_html += '<button class=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">OK</button>';\n              modal_html += '</div>';\n            modal_html += '</div>';\n        modal_html += '</div>';\n        $(\"body\").append(modal_html);\n    }\n    \n    $(\"#\" + modal_container_id+\" .message\").html(message);\n    \n    $(\"#\" + modal_container_id).modal('show');\n}\n\nfunction confirm(message, callback){\n    var modal_container_id = \"confirm-modal\";\n    if(!$(\"#\" + modal_container_id).length){\n        var modal_html = '';\n        modal_html += '<div id=\"' + modal_container_id + '\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">';\n            modal_html += '<div class=\"modal-body\">';\n\n              modal_html += '<div class=\"form-group text-center message-container\">';\n                modal_html += '<label class=\"message\">'+message+'</label>'\n              modal_html += '</div>';\n\n              modal_html += '<div class=\"form-group text-center\">';\n                modal_html += '<button class=\"btn btn-default \" data-dismiss=\"modal\" aria-hidden=\"true\" >Cancel</button>';\n                modal_html += '&nbsp;&nbsp;&nbsp;';\n                modal_html += '<button class=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\" onclick=\"'+ callback +'\">Yes</button>';\n              modal_html += '</div>';\n            modal_html += '</div>';\n        modal_html += '</div>';\n        $(\"body\").append(modal_html);\n    }\n    \n    $(\"#\" + modal_container_id+\" .message\").html(message);\n    \n    $(\"#\" + modal_container_id).modal('show');\n}\n\nfunction checkAndSetValidation(container)\n{\n    var issue_els = [];\n    $(\"input, select, textarea\", container).each(function(){\n        if($(this).prop('required') && (!$.trim($(this).val()) || (Array.isArray($(this).val()) && $(this).val().length==0) ) ){\n            issue_els.push($(this));\n        }\n    })\n    // If issue elements exist, stop progress\n    if(issue_els.length > 0)\n    {\n        var error_messages = [];\n        issue_els.reverse();\n        for(var key in issue_els){\n            var issue_el = issue_els[key];\n            \n            if(issue_el.parent().hasClass(\"multiselect-native-select\")){\n                issue_el.parent().find(\"button.multiselect\").addClass(\"error\")\n                issue_el.parent().find(\"button.multiselect\").focus()\n            }else{\n                issue_el.addClass(\"error\");\n                issue_el.focus()\n            }\n            var message = field_required_lang.replace(\"_XXX_\", issue_el.attr(\"title\"))\n            showAlertFromMessage(message, false)\n        }\n        return false;\n    }\n    else\n    {\n        return true;\n    }\n}\n\nvar loading={\n    show:function(el)\n    {\n        this.getID(el).style.display='';\n    },\n    hide:function(el)\n    {\n        this.getID(el).style.display='none';\n    },\n    getID:function(el)\n    {\n        return document.getElementById(el);\n    }\n}\n\n$(document).ready(function(){\n    if(jQuery.ui !== undefined){\n        jQuery.ui.autocomplete.prototype._resizeMenu = function () {\n            var ul = this.menu.element;\n            ul.outerWidth(this.element.outerWidth());\n        }                \n    }\n\n    $(document).on('click', '.exist-files .remove-file', function(event) {\n        event.preventDefault();\n        var $parent = $(this).parents('.file-uploader');\n        var fileCount = Number($parent.find('.file-count').html()) - 1\n        $parent.find('.file-count').html(fileCount)\n        $(this).parent().remove();\n    })\n    \n    $(document).on('click', '.file-list .remove-file', function(event) {\n        event.preventDefault();\n        var id = $(this).data('id');\n        var $parent = $(this).parents('.file-uploader');\n        $(\"#\"+id, $parent).remove();\n        refreshFilelist($parent)\n    })\n    \n    $(document).on('change', '.hidden-file-upload.active', function(event) {\n        var $parent = $(this).parents('.file-uploader');\n        $(this).removeClass(\"active\")\n        var currentButtonId = $(this).attr('id');\n        \n        refreshFilelist($parent, currentButtonId)\n\n    });\n    \n    $('body').on('click', '.show-score-overtime', function(e){\n        e.preventDefault();\n        var tabContainer = $(this).parents('.risk-session');\n            \n        $.ajax({\n            type: \"GET\",\n            url: BASE_URL + \"/api/risk_levels\",\n            dataType: 'json',\n            success: function(result){\n                var risk_id = $('.large-text', tabContainer).html();\n                $('.score-overtime-container', tabContainer).show();\n\n                var risk_levels = result.data.risk_levels;\n                riskScoringChart($('.score-overtime-chart', tabContainer)[0], risk_id, risk_levels);\n\n                $('.hide-score-overtime', tabContainer).show();\n                $('.show-score-overtime', tabContainer).hide();\n            },\n            error: function(xhr,status,error){\n                if(xhr.responseJSON && xhr.responseJSON.status_message){\n                    showAlertsFromArray(xhr.responseJSON.status_message);\n                }\n            }\n        })\n        \n        return false;\n    })\n\n    $('body').on('click', '.hide-score-overtime', function(e){\n        e.preventDefault();\n\n        var tabContainer = $(this).parents('.risk-session');\n        var risk_id = $('.large-text', tabContainer).html();\n\n        $('.score-overtime-container', tabContainer).hide();\n        $('.hide-score-overtime', tabContainer).hide();\n        $('.show-score-overtime', tabContainer).show();\n\n        return false;\n    })\n    if($('#tab-container .datepicker').length){\n        $('#tab-container .datepicker').datepicker();\n    }\n    \n    if($(\"#tab-container .multiselect\").length){\n        $(\"#tab-container .multiselect\").multiselect({buttonWidth: '100%'});\n    }\n    \n})\n"], "fixing_code": ["/**\n* When a file is added, should call this method\n* \n* @param $parent\n* @param currentButtonId: button ID for input[type=file].active\n*/\nfunction refreshFilelist($parent, currentButtonId){\n    var files = $(\"input[type=file]\", $parent);\n\n    var filesHtml = \"\";\n    var filesLength = 0;\n    $(files).each(function() {\n        if(!$(this)[0].files.length){\n            return;\n        }\n        $(this).attr(\"id\", \"file-upload-\"+filesLength)\n        var name = escapeHtml($(this)[0].files[0].name);\n        \n        filesHtml += \"<li >\\\n            <div class='file-name'>\"+name+\"</div>\\\n            <a href='#' class='remove-file' data-id='file-upload-\"+filesLength+\"'><i class='fa fa-remove'></i></a>\\\n        </li>\";\n        filesLength++;\n    });\n    $parent.find('.file-list').html(filesHtml);\n    var totalFilesLength = $('.exist-files > li', $parent).length + filesLength;\n    if(totalFilesLength > 1){\n        $msg = \"<span class='file-count'>\" + totalFilesLength + \"</span> Files Added\"; \n    }else{ \n        $msg = \"<span class='file-count'>\" + totalFilesLength + \"</span> File Added\"; \n    }\n    $parent.find('.file-count-html').html($msg);\n\n    var name = $parent.find('.file_name').data('file');\n    if(!name)\n        name = \"file\";\n\n    if(currentButtonId){\n        $parent.prepend($('<input id=\"'+currentButtonId+'\" name=\"'+name+'[]\" class=\"hidden-file-upload active\" type=\"file\">'))\n    }\n    \n}\n/**\n* HTMLSPECIALCHARS\n* \n* @param text\n*/\nfunction escapeHtml(text) {\n  var map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;'\n  };\n\n  return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\n}\n/**\n* popup when click \"Score Using CVSS\"\n* \n* @param parent\n*/\nfunction popupcvss(parent)\n{\n    parentOfScores = parent;\n    \n    var cve_id = $(\"#reference_id\", parent).val();\n    var pattern = /cve\\-\\d{4}-\\d{4}/i;\n\n    // If the field is a CVE ID\n    if (cve_id !== undefined && cve_id.match(pattern))\n    {\n        my_window = window.open(BASE_URL + '/management/cvss_rating.php?cve_id='+ cve_id ,'popupwindow','width=850,height=680,menu=0,status=0');\n    }\n    else my_window = window.open(BASE_URL + '/management/cvss_rating.php','popupwindow','width=850,height=680,menu=0,status=0');\n    \n}\n\n/**\n* popup when click \"Score Using DREAD\"\n* \n*/\nfunction popupdread(parent)\n{\n    parentOfScores = parent;\n    my_window = window.open(BASE_URL + '/management/dread_rating.php','popupwindow','width=660,height=500,menu=0,status=0');\n}\n\n/**\n* popup when click \"Score Using OWASP\"\n* \n*/\nfunction popupowasp(parent)\n{\n    parentOfScores = parent;\n    my_window = window.open(BASE_URL + '/management/owasp_rating.php','popupwindow','width=665,height=570,menu=0,status=0');\n}\n\n/**\n* popup when click \"Score Using Contributing Risk\"\n* \n*/\nfunction popupcontributingrisk(parent)\n{\n    parentOfScores = parent;\n    my_window = window.open(BASE_URL + '/management/contributingrisk_rating.php','popupwindow','width=665,height=570,menu=0,status=0');\n}\n\nfunction closepopup()\n    {\n    if(false == my_window.closed)\n    {\n        my_window.close ();\n    }\n    else\n    {\n        alert('Window already closed!');\n    }\n}\n\n/**\n* Create and Update the risk scoring chart\n* \n* @param risk_id\n*/\nfunction riskScoringChart(renderTo, risk_id, risk_levels){\n    var backgroundColor = \"#f5f5f5\";\n    // Creates stops array\n    var stops = [\n        [0, backgroundColor],\n    ];\n    \n    risk_levels.sort(function(a, b){\n        if(Number(a.value) > Number(b.value) ){\n            return -1;\n        }\n        if(Number(a.value) < Number(b.value) ){\n            return 1;\n        }\n    })\n    risk_levels.push({value: 0, color: \"#fff\"});\n    \n    var to = 10;\n    var plotBands = [];\n    for(var i=0; i<risk_levels.length; i++){\n        var risk_level = risk_levels[i];\n        plotBands.push({\n            color: risk_level.color,\n            to: to,\n            from: Number(risk_level.value),\n        })\n        to = Number(risk_level.value);\n    }\n    // For all plots, change Date axis to local timezone\n    Highcharts.setOptions({                                            \n        global : {\n            useUTC : false\n        }\n    });\n    var chartObj = new Highcharts.Chart( {\n        chart: {\n            renderTo: renderTo,\n            type: 'spline',\n        },\n        title: {\n            text: $('#_RiskScoringHistory').length ? $(\"#_RiskScoringHistory\").val() : 'Risk Scoring History'\n        },\n        yAxis: [{\n            title: {\n                text: $('#_RiskScore').length ? $('#_RiskScore').val() : \"Risk Score\"\n            },\n            min: 0, \n            max: 10,\n            gridLineWidth: 0, \n            plotBands: plotBands,\n        }],\n        xAxis: [{\n            type: 'datetime',\n            dateTimeLabelFormats: { // don't display the dummy year\n                millisecond: '%Y-%m-%d<br/>%H:%M:%S',\n                second: '%Y-%m-%d<br/>%H:%M:%S',\n                minute: '%Y-%m-%d<br/>%H:%M',\n                hour: '%Y-%m-%d<br/>%H:%M',\n                day: '%Y-%m-%d<br/>%H:%M',\n                month: '%Y-%m-%d<br/>%H:%M',\n                year: '%Y-%m-%d<br/>%H:%M'\n            },\n            title: {\n                text: $(\"#_DateAndTime\").val() ? $(\"#_DateAndTime\").val() : \"Date and time\"\n            }\n        }],\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle'\n        },\n        plotOptions: {\n            spline: {\n                marker: {\n                    enabled: true\n                }\n            }                    \n        },\n        series: [\n            {name: $('#_RiskScore').length ? $('#_RiskScore').val() : \"Inherent Risk\" },\n            {name: $('#_ResidualRiskScore').length ? $('#_ResidualRiskScore').val() : \"ResidualRisk Score\" },\n        ]\n\n    });\n    \n\n    chartObj.showLoading('<img src=\"../images/progress.gif\">');\n    $.ajax({\n        type: \"GET\",\n        url: BASE_URL + \"/api/management/risk/residual_scoring_history?id=\" + risk_id,\n        dataType: 'json',\n        success: function(data){\n            var residual_histories = data.data;\n            var residualChartData = [];\n            for(var i=0; i<residual_histories.length; i++){\n                // var date = new Date(histories[i].last_update.replace(/\\s/, 'T'));\n                // Added the three lines below to make the timestamp work properly with Safari\n                var parts = residual_histories[i].last_update.split(/[ \\/:-]/g);\n                var dateFormatted = parts[1] + \"/\" + parts[2] + \"/\" + parts[0] + \" \" + parts[3] + \":\" + parts[4] + \":\" + parts[5];\n                var date = new Date(dateFormatted);\n                residualChartData.push([date.getTime(), Number(residual_histories[i].residual_risk)]);\n            }\n            \n            chartObj.series[1].setData(residualChartData)\n            chartObj.hideLoading();\n            \n        },\n        error: function(xhr,status,error){\n            if(xhr.responseJSON && xhr.responseJSON.status_message){\n                showAlertsFromArray(xhr.responseJSON.status_message);\n            }\n        }\n    })\n    $.ajax({\n        type: \"GET\",\n        url: BASE_URL + \"/api/management/risk/scoring_history?id=\" + risk_id,\n        dataType: 'json',\n        success: function(data){\n            var histories = data.data;\n            var chartData = [];\n            for(var i=0; i<histories.length; i++){\n                // var date = new Date(histories[i].last_update.replace(/\\s/, 'T'));\n                // Added the three lines below to make the timestamp work properly with Safari\n                var parts = histories[i].last_update.split(/[ \\/:-]/g);\n                var dateFormatted = parts[1] + \"/\" + parts[2] + \"/\" + parts[0] + \" \" + parts[3] + \":\" + parts[4] + \":\" + parts[5];\n                var date = new Date(dateFormatted);\n                chartData.push([date.getTime(), Number(histories[i].calculated_risk)]);\n            }\n            \n            chartObj.series[0].setData(chartData)\n\n            chartObj.hideLoading();\n            \n        },\n        error: function(xhr,status,error){\n            if(xhr.responseJSON && xhr.responseJSON.status_message){\n                showAlertsFromArray(xhr.responseJSON.status_message);\n            }\n        }\n    })\n}\n\nfunction alert(message){\n    var modal_container_id = \"alert-modal\";\n    if(!$(\"#\" + modal_container_id).length){\n        var modal_html = '';\n        modal_html += '<div id=\"' + modal_container_id + '\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">';\n            modal_html += '<div class=\"modal-body\">';\n\n              modal_html += '<div class=\"form-group text-center message-container\">';\n                modal_html += '<label class=\"message\">'+message+'</label>'\n              modal_html += '</div>';\n\n              modal_html += '<div class=\"form-group text-center\">';\n                modal_html += '<button class=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\">OK</button>';\n              modal_html += '</div>';\n            modal_html += '</div>';\n        modal_html += '</div>';\n        $(\"body\").append(modal_html);\n    }\n    \n    $(\"#\" + modal_container_id+\" .message\").html(message);\n    \n    $(\"#\" + modal_container_id).modal('show');\n}\n\nfunction confirm(message, callback){\n    var modal_container_id = \"confirm-modal\";\n    if(!$(\"#\" + modal_container_id).length){\n        var modal_html = '';\n        modal_html += '<div id=\"' + modal_container_id + '\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">';\n            modal_html += '<div class=\"modal-body\">';\n\n              modal_html += '<div class=\"form-group text-center message-container\">';\n                modal_html += '<label class=\"message\">'+message+'</label>'\n              modal_html += '</div>';\n\n              modal_html += '<div class=\"form-group text-center\">';\n                modal_html += '<button class=\"btn btn-default \" data-dismiss=\"modal\" aria-hidden=\"true\" >Cancel</button>';\n                modal_html += '&nbsp;&nbsp;&nbsp;';\n                modal_html += '<button class=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\" onclick=\"'+ callback +'\">Yes</button>';\n              modal_html += '</div>';\n            modal_html += '</div>';\n        modal_html += '</div>';\n        $(\"body\").append(modal_html);\n    }\n    \n    $(\"#\" + modal_container_id+\" .message\").html(message);\n    \n    $(\"#\" + modal_container_id).modal('show');\n}\n\nfunction checkAndSetValidation(container)\n{\n    var issue_els = [];\n    $(\"input, select, textarea\", container).each(function(){\n        if($(this).prop('required') && (!$.trim($(this).val()) || (Array.isArray($(this).val()) && $(this).val().length==0) ) ){\n            issue_els.push($(this));\n        }\n    })\n    // If issue elements exist, stop progress\n    if(issue_els.length > 0)\n    {\n        var error_messages = [];\n        issue_els.reverse();\n        for(var key in issue_els){\n            var issue_el = issue_els[key];\n            \n            if(issue_el.parent().hasClass(\"multiselect-native-select\")){\n                issue_el.parent().find(\"button.multiselect\").addClass(\"error\")\n                issue_el.parent().find(\"button.multiselect\").focus()\n            }else{\n                issue_el.addClass(\"error\");\n                issue_el.focus()\n            }\n\n            // We have to make sure that no html gets through to toastr as it's displaying what it gets 'as is';\n            var escaped = $(\"<div/>\").text(issue_el.attr(\"title\")).html();\n            var message = field_required_lang.replace(\"_XXX_\", escaped);\n\n            showAlertFromMessage(message, false)\n        }\n        return false;\n    }\n    else\n    {\n        return true;\n    }\n}\n\nvar loading={\n    show:function(el)\n    {\n        this.getID(el).style.display='';\n    },\n    hide:function(el)\n    {\n        this.getID(el).style.display='none';\n    },\n    getID:function(el)\n    {\n        return document.getElementById(el);\n    }\n}\n\n$(document).ready(function(){\n    if(jQuery.ui !== undefined){\n        jQuery.ui.autocomplete.prototype._resizeMenu = function () {\n            var ul = this.menu.element;\n            ul.outerWidth(this.element.outerWidth());\n        }                \n    }\n\n    $(document).on('click', '.exist-files .remove-file', function(event) {\n        event.preventDefault();\n        var $parent = $(this).parents('.file-uploader');\n        var fileCount = Number($parent.find('.file-count').html()) - 1\n        $parent.find('.file-count').html(fileCount)\n        $(this).parent().remove();\n    })\n    \n    $(document).on('click', '.file-list .remove-file', function(event) {\n        event.preventDefault();\n        var id = $(this).data('id');\n        var $parent = $(this).parents('.file-uploader');\n        $(\"#\"+id, $parent).remove();\n        refreshFilelist($parent)\n    })\n    \n    $(document).on('change', '.hidden-file-upload.active', function(event) {\n        var $parent = $(this).parents('.file-uploader');\n        $(this).removeClass(\"active\")\n        var currentButtonId = $(this).attr('id');\n        \n        refreshFilelist($parent, currentButtonId)\n\n    });\n    \n    $('body').on('click', '.show-score-overtime', function(e){\n        e.preventDefault();\n        var tabContainer = $(this).parents('.risk-session');\n            \n        $.ajax({\n            type: \"GET\",\n            url: BASE_URL + \"/api/risk_levels\",\n            dataType: 'json',\n            success: function(result){\n                var risk_id = $('.large-text', tabContainer).html();\n                $('.score-overtime-container', tabContainer).show();\n\n                var risk_levels = result.data.risk_levels;\n                riskScoringChart($('.score-overtime-chart', tabContainer)[0], risk_id, risk_levels);\n\n                $('.hide-score-overtime', tabContainer).show();\n                $('.show-score-overtime', tabContainer).hide();\n            },\n            error: function(xhr,status,error){\n                if(xhr.responseJSON && xhr.responseJSON.status_message){\n                    showAlertsFromArray(xhr.responseJSON.status_message);\n                }\n            }\n        })\n        \n        return false;\n    })\n\n    $('body').on('click', '.hide-score-overtime', function(e){\n        e.preventDefault();\n\n        var tabContainer = $(this).parents('.risk-session');\n        var risk_id = $('.large-text', tabContainer).html();\n\n        $('.score-overtime-container', tabContainer).hide();\n        $('.hide-score-overtime', tabContainer).hide();\n        $('.show-score-overtime', tabContainer).show();\n\n        return false;\n    })\n    if($('#tab-container .datepicker').length){\n        $('#tab-container .datepicker').datepicker();\n    }\n    \n    if($(\"#tab-container .multiselect\").length){\n        $(\"#tab-container .multiselect\").multiselect({buttonWidth: '100%'});\n    }\n    \n})\n"], "filenames": ["simplerisk/js/common.js"], "buggy_code_start_loc": [342], "buggy_code_end_loc": [343], "fixing_code_start_loc": [342], "fixing_code_end_loc": [347], "type": "CWE-79", "message": "A vulnerability has been found in SimpleRisk and classified as problematic. This vulnerability affects the function checkAndSetValidation of the file simplerisk/js/common.js. The manipulation of the argument title leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 20220306-001 is able to address this issue. The name of the patch is 591405b4ed160fbefc1dca1e55c5745079a7bb48. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216472.", "other": {"cve": {"id": "CVE-2021-4269", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-21T19:15:13.547", "lastModified": "2022-12-27T22:49:27.050", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability has been found in SimpleRisk and classified as problematic. This vulnerability affects the function checkAndSetValidation of the file simplerisk/js/common.js. The manipulation of the argument title leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 20220306-001 is able to address this issue. The name of the patch is 591405b4ed160fbefc1dca1e55c5745079a7bb48. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216472."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "cna@vuldb.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-707"}, {"lang": "en", "value": "CWE-74"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:simplerisk:simplerisk:*:*:*:*:*:*:*:*", "versionEndExcluding": "20220306-001", "matchCriteriaId": "48FD1CF6-8E42-463C-B0C8-4F4B8BD3BF5F"}]}]}], "references": [{"url": "https://github.com/simplerisk/code/commit/591405b4ed160fbefc1dca1e55c5745079a7bb48", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/simplerisk/code/releases/tag/20220306-001", "source": "cna@vuldb.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216472", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/simplerisk/code/commit/591405b4ed160fbefc1dca1e55c5745079a7bb48"}}