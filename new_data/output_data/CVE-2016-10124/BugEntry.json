{"buggy_code": ["<!--\n\nlxc: linux Container library\n\n(C) Copyright IBM Corp. 2007, 2008\n\nAuthors:\nDaniel Lezcano <daniel.lezcano at free.fr>\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\n-->\n\n\n<!DOCTYPE refentry PUBLIC @docdtd@ [\n\n<!ENTITY commonoptions SYSTEM \"@builddir@/common_options.sgml\">\n<!ENTITY seealso SYSTEM \"@builddir@/see_also.sgml\">\n]>\n\n<refentry>\n\n  <docinfo><date>@LXC_GENERATE_DATE@</date></docinfo>\n\n  <refmeta>\n    <refentrytitle>lxc-attach</refentrytitle>\n    <manvolnum>1</manvolnum>\n  </refmeta>\n\n  <refnamediv>\n    <refname>lxc-attach</refname>\n\n    <refpurpose>\n      start a process inside a running container.\n    </refpurpose>\n  </refnamediv>\n\n  <refsynopsisdiv>\n    <cmdsynopsis>\n      <command>lxc-attach</command>\n      <arg choice=\"req\">-n <replaceable>name</replaceable></arg>\n      <arg choice=\"opt\">-a <replaceable>arch</replaceable></arg>\n      <arg choice=\"opt\">-e</arg>\n      <arg choice=\"opt\">-s <replaceable>namespaces</replaceable></arg>\n      <arg choice=\"opt\">-R</arg>\n      <arg choice=\"opt\">--keep-env</arg>\n      <arg choice=\"opt\">--clear-env</arg>\n      <arg choice=\"opt\">-- <replaceable>command</replaceable></arg>\n    </cmdsynopsis>\n  </refsynopsisdiv>\n\n  <refsect1>\n    <title>Description</title>\n\n    <para>\n      <command>lxc-attach</command> runs the specified\n      <replaceable>command</replaceable> inside the container\n      specified by <replaceable>name</replaceable>. The container\n      has to be running already.\n    </para>\n    <para>\n      If no <replaceable>command</replaceable> is specified, the\n      current default shell of the user running\n      <command>lxc-attach</command> will be looked up inside the\n      container and executed. This will fail if no such user exists\n      inside the container or the container does not have a working\n      nsswitch mechanism.\n    </para>\n\n  </refsect1>\n\n  <refsect1>\n\n    <title>Options</title>\n\n    <variablelist>\n\n      <varlistentry>\n\t<term>\n\t  <option>-a, --arch <replaceable>arch</replaceable></option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Specify the architecture which the kernel should appear to be\n\t    running as to the command executed. This option will accept the\n\t    same settings as the <option>lxc.arch</option> option in\n\t    container configuration files, see\n\t    <citerefentry>\n\t      <refentrytitle><filename>lxc.conf</filename></refentrytitle>\n\t      <manvolnum>5</manvolnum>\n\t    </citerefentry>. By default, the current archictecture of the\n\t    running container will be used.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>\n      -e, --elevated-privileges <replaceable>privileges</replaceable>\n    </option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Do not drop privileges when running\n\t    <replaceable>command</replaceable> inside the container. If\n\t    this option is specified, the new process will\n\t    <emphasis>not</emphasis> be added to the container's cgroup(s)\n\t    and it will not drop its capabilities before executing.\n\t  </para>\n    <para>\n      You may specify privileges, in case you do not want to elevate all of\n      them, as a pipe-separated list, e.g.\n      <replaceable>CGROUP|LSM</replaceable>. Allowed values are\n      <replaceable>CGROUP</replaceable>, <replaceable>CAP</replaceable> and\n      <replaceable>LSM</replaceable> representing cgroup, capabilities and\n      restriction privileges respectively.\n    </para>\n\t  <para>\n\t    <emphasis>Warning:</emphasis> This may leak privileges into the\n\t    container if the command starts subprocesses that remain active\n\t    after the main process that was attached is terminated. The\n\t    (re-)starting of daemons inside the container is problematic,\n\t    especially if the daemon starts a lot of subprocesses such as\n\t    <command>cron</command> or <command>sshd</command>.\n\t    <emphasis>Use with great care.</emphasis>\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>-s, --namespaces <replaceable>namespaces</replaceable></option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Specify the namespaces to attach to, as a pipe-separated list,\n\t    e.g. <replaceable>NETWORK|IPC</replaceable>. Allowed values are\n\t    <replaceable>MOUNT</replaceable>, <replaceable>PID</replaceable>,\n\t    <replaceable>UTSNAME</replaceable>, <replaceable>IPC</replaceable>,\n\t    <replaceable>USER </replaceable> and\n\t    <replaceable>NETWORK</replaceable>. This allows one to change\n\t    the context of the process to e.g. the network namespace of the\n\t    container while retaining the other namespaces as those of the\n\t    host.\n\t  </para>\n\t  <para>\n\t    <emphasis>Important:</emphasis> This option implies\n\t    <option>-e</option>.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>-R, --remount-sys-proc</option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    When using <option>-s</option> and the mount namespace is not\n\t    included, this flag will cause <command>lxc-attach</command>\n\t    to remount <replaceable>/proc</replaceable> and\n\t    <replaceable>/sys</replaceable> to reflect the current other\n\t    namespace contexts.\n\t  </para>\n\t  <para>\n\t    Please see the <emphasis>Notes</emphasis> section for more\n\t    details.\n\t  </para>\n\t  <para>\n\t    This option will be ignored if one tries to attach to the\n\t    mount namespace anyway.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>--keep-env</option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Keep the current environment for attached programs. This is\n\t    the current default behaviour (as of version 0.9), but is\n\t    is likely to change in the future, since this may leak\n\t    undesirable information into the container. If you rely on\n\t    the environment being available for the attached program,\n\t    please use this option to be future-proof. In addition to\n\t    current environment variables, container=lxc will be set.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>--clear-env</option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Clear the environment before attaching, so no undesired\n\t    environment variables leak into the container. The variable\n\t    container=lxc will be the only environment with which the\n\t    attached program starts.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n     </variablelist>\n\n  </refsect1>\n\n  &commonoptions;\n\n  <refsect1>\n    <title>Examples</title>\n      <para>\n        To spawn a new shell running inside an existing container, use\n        <programlisting>\n          lxc-attach -n container\n        </programlisting>\n      </para>\n      <para>\n        To restart the cron service of a running Debian container, use\n        <programlisting>\n          lxc-attach -n container -- /etc/init.d/cron restart\n        </programlisting>\n      </para>\n      <para>\n        To deactivate the network link eth1 of a running container that\n        does not have the NET_ADMIN capability, use either the\n        <option>-e</option> option to use increased capabilities,\n        assuming the <command>ip</command> tool is installed:\n        <programlisting>\n          lxc-attach -n container -e -- /sbin/ip link delete eth1\n        </programlisting>\n        Or, alternatively, use the <option>-s</option> to use the\n        tools installed on the host outside the container:\n        <programlisting>\n          lxc-attach -n container -s NETWORK -- /sbin/ip link delete eth1\n        </programlisting>\n      </para>\n  </refsect1>\n\n  <refsect1>\n    <title>Compatibility</title>\n    <para>\n      Attaching completely (including the pid and mount namespaces) to a\n      container requires a kernel of version 3.8 or higher, or a\n      patched kernel, please see the lxc website for\n      details. <command>lxc-attach</command> will fail in that case if\n      used with an unpatched kernel of version 3.7 and prior.\n    </para>\n    <para>\n      Nevertheless, it will succeed on an unpatched kernel of version 3.0\n      or higher if the <option>-s</option> option is used to restrict the\n      namespaces that the process is to be attached to to one or more of\n      <replaceable>NETWORK</replaceable>, <replaceable>IPC</replaceable>\n      and <replaceable>UTSNAME</replaceable>.\n    </para>\n    <para>\n      Attaching to user namespaces is supported by kernel 3.8 or higher\n      with enabling user namespace.\n    </para>\n  </refsect1>\n\n  <refsect1>\n    <title>Notes</title>\n    <para>\n      The Linux <replaceable>/proc</replaceable> and\n      <replaceable>/sys</replaceable> filesystems contain information\n      about some quantities that are affected by namespaces, such as\n      the directories named after process ids in\n      <replaceable>/proc</replaceable> or the network interface information\n      in <replaceable>/sys/class/net</replaceable>. The namespace of the\n      process mounting the pseudo-filesystems determines what information\n      is shown, <emphasis>not</emphasis> the namespace of the process\n      accessing <replaceable>/proc</replaceable> or\n      <replaceable>/sys</replaceable>.\n    </para>\n    <para>\n      If one uses the <option>-s</option> option to only attach to\n      the pid namespace of a container, but not its mount namespace\n      (which will contain the <replaceable>/proc</replaceable> of the\n      container and not the host), the contents of <option>/proc</option>\n      will reflect that of the host and not the container. Analogously,\n      the same issue occurs when reading the contents of\n      <replaceable>/sys/class/net</replaceable> and attaching to just\n      the network namespace.\n    </para>\n    <para>\n      To work around this problem, the <option>-R</option> flag provides\n      the option to remount <replaceable>/proc</replaceable> and\n      <replaceable>/sys</replaceable> in order for them to reflect the\n      network/pid namespace context of the attached process. In order\n      not to interfere with the host's actual filesystem, the mount\n      namespace will be unshared (like <command>lxc-unshare</command>\n      does) before this is done, esentially giving the process a new\n      mount namespace, which is identical to the hosts's mount namespace\n      except for the <replaceable>/proc</replaceable> and\n      <replaceable>/sys</replaceable> filesystems.\n    </para>\n  </refsect1>\n\n  <refsect1>\n    <title>Security</title>\n    <para>\n      The <option>-e</option> and <option>-s</option> options should\n      be used with care, as it may break the isolation of the containers\n      if used improperly.\n    </para>\n  </refsect1>\n\n  &seealso;\n\n  <refsect1>\n    <title>Author</title>\n    <para>Daniel Lezcano <email>daniel.lezcano@free.fr</email></para>\n  </refsect1>\n\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\nsgml-shorttag:t\nsgml-minimize-attributes:nil\nsgml-always-quote-attributes:t\nsgml-indent-step:2\nsgml-indent-data:t\nsgml-parent-document:nil\nsgml-default-dtd-file:nil\nsgml-exposed-tags:nil\nsgml-local-catalogs:nil\nsgml-local-ecat-files:nil\nEnd:\n-->\n"], "fixing_code": ["<!--\n\nlxc: linux Container library\n\n(C) Copyright IBM Corp. 2007, 2008\n\nAuthors:\nDaniel Lezcano <daniel.lezcano at free.fr>\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\n-->\n\n\n<!DOCTYPE refentry PUBLIC @docdtd@ [\n\n<!ENTITY commonoptions SYSTEM \"@builddir@/common_options.sgml\">\n<!ENTITY seealso SYSTEM \"@builddir@/see_also.sgml\">\n]>\n\n<refentry>\n\n  <docinfo><date>@LXC_GENERATE_DATE@</date></docinfo>\n\n  <refmeta>\n    <refentrytitle>lxc-attach</refentrytitle>\n    <manvolnum>1</manvolnum>\n  </refmeta>\n\n  <refnamediv>\n    <refname>lxc-attach</refname>\n\n    <refpurpose>\n      start a process inside a running container.\n    </refpurpose>\n  </refnamediv>\n\n  <refsynopsisdiv>\n    <cmdsynopsis>\n      <command>lxc-attach</command>\n      <arg choice=\"req\">-n <replaceable>name</replaceable></arg>\n      <arg choice=\"opt\">-a <replaceable>arch</replaceable></arg>\n      <arg choice=\"opt\">-e</arg>\n      <arg choice=\"opt\">-s <replaceable>namespaces</replaceable></arg>\n      <arg choice=\"opt\">-R</arg>\n      <arg choice=\"opt\">--keep-env</arg>\n      <arg choice=\"opt\">--clear-env</arg>\n      <arg choice=\"opt\">-- <replaceable>command</replaceable></arg>\n    </cmdsynopsis>\n  </refsynopsisdiv>\n\n  <refsect1>\n    <title>Description</title>\n\n    <para>\n      <command>lxc-attach</command> runs the specified\n      <replaceable>command</replaceable> inside the container\n      specified by <replaceable>name</replaceable>. The container\n      has to be running already.\n    </para>\n    <para>\n      If no <replaceable>command</replaceable> is specified, the\n      current default shell of the user running\n      <command>lxc-attach</command> will be looked up inside the\n      container and executed. This will fail if no such user exists\n      inside the container or the container does not have a working\n      nsswitch mechanism.\n    </para>\n    <para>\n    Previous versions of <command>lxc-attach</command> simply attached to the\n    specified namespaces of a container and ran a shell or the specified\n    command without allocating a pseudo terminal. This made them vulnerable to\n    input faking via a TIOCSTI <command>ioctl</command> call after switching\n    between userspace execution contexts with different privilegel levels. Newer\n    versions of <command>lxc-attach</command> will try to allocate a pseudo\n    terminal master/slave pair and attach any standard file descriptors which\n    refer to a terminal to the slave side of the pseudo terminal before\n    executing a shell or command. <command>lxc-attach</command> will first try\n    to allocate a pseudo terminal in the container. Should this fail it will try\n    to allocate a pseudo terminal on the host before finally giving up. Note,\n    that if none of the standard file descriptors refer to a terminal\n    <command>lxc-attach</command> will not try to allocate a pseudo terminal.\n    Instead it will simply attach to the containers namespaces and run a shell\n    or the specified command.\n    </para>\n\n  </refsect1>\n\n  <refsect1>\n\n    <title>Options</title>\n\n    <variablelist>\n\n      <varlistentry>\n\t<term>\n\t  <option>-a, --arch <replaceable>arch</replaceable></option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Specify the architecture which the kernel should appear to be\n\t    running as to the command executed. This option will accept the\n\t    same settings as the <option>lxc.arch</option> option in\n\t    container configuration files, see\n\t    <citerefentry>\n\t      <refentrytitle><filename>lxc.conf</filename></refentrytitle>\n\t      <manvolnum>5</manvolnum>\n\t    </citerefentry>. By default, the current archictecture of the\n\t    running container will be used.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>\n      -e, --elevated-privileges <replaceable>privileges</replaceable>\n    </option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Do not drop privileges when running\n\t    <replaceable>command</replaceable> inside the container. If\n\t    this option is specified, the new process will\n\t    <emphasis>not</emphasis> be added to the container's cgroup(s)\n\t    and it will not drop its capabilities before executing.\n\t  </para>\n    <para>\n      You may specify privileges, in case you do not want to elevate all of\n      them, as a pipe-separated list, e.g.\n      <replaceable>CGROUP|LSM</replaceable>. Allowed values are\n      <replaceable>CGROUP</replaceable>, <replaceable>CAP</replaceable> and\n      <replaceable>LSM</replaceable> representing cgroup, capabilities and\n      restriction privileges respectively.\n    </para>\n\t  <para>\n\t    <emphasis>Warning:</emphasis> This may leak privileges into the\n\t    container if the command starts subprocesses that remain active\n\t    after the main process that was attached is terminated. The\n\t    (re-)starting of daemons inside the container is problematic,\n\t    especially if the daemon starts a lot of subprocesses such as\n\t    <command>cron</command> or <command>sshd</command>.\n\t    <emphasis>Use with great care.</emphasis>\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>-s, --namespaces <replaceable>namespaces</replaceable></option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Specify the namespaces to attach to, as a pipe-separated list,\n\t    e.g. <replaceable>NETWORK|IPC</replaceable>. Allowed values are\n\t    <replaceable>MOUNT</replaceable>, <replaceable>PID</replaceable>,\n\t    <replaceable>UTSNAME</replaceable>, <replaceable>IPC</replaceable>,\n\t    <replaceable>USER </replaceable> and\n\t    <replaceable>NETWORK</replaceable>. This allows one to change\n\t    the context of the process to e.g. the network namespace of the\n\t    container while retaining the other namespaces as those of the\n\t    host.\n\t  </para>\n\t  <para>\n\t    <emphasis>Important:</emphasis> This option implies\n\t    <option>-e</option>.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>-R, --remount-sys-proc</option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    When using <option>-s</option> and the mount namespace is not\n\t    included, this flag will cause <command>lxc-attach</command>\n\t    to remount <replaceable>/proc</replaceable> and\n\t    <replaceable>/sys</replaceable> to reflect the current other\n\t    namespace contexts.\n\t  </para>\n\t  <para>\n\t    Please see the <emphasis>Notes</emphasis> section for more\n\t    details.\n\t  </para>\n\t  <para>\n\t    This option will be ignored if one tries to attach to the\n\t    mount namespace anyway.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>--keep-env</option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Keep the current environment for attached programs. This is\n\t    the current default behaviour (as of version 0.9), but is\n\t    is likely to change in the future, since this may leak\n\t    undesirable information into the container. If you rely on\n\t    the environment being available for the attached program,\n\t    please use this option to be future-proof. In addition to\n\t    current environment variables, container=lxc will be set.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n      <varlistentry>\n\t<term>\n\t  <option>--clear-env</option>\n\t</term>\n\t<listitem>\n\t  <para>\n\t    Clear the environment before attaching, so no undesired\n\t    environment variables leak into the container. The variable\n\t    container=lxc will be the only environment with which the\n\t    attached program starts.\n\t  </para>\n\t</listitem>\n      </varlistentry>\n\n     </variablelist>\n\n  </refsect1>\n\n  &commonoptions;\n\n  <refsect1>\n    <title>Examples</title>\n      <para>\n        To spawn a new shell running inside an existing container, use\n        <programlisting>\n          lxc-attach -n container\n        </programlisting>\n      </para>\n      <para>\n        To restart the cron service of a running Debian container, use\n        <programlisting>\n          lxc-attach -n container -- /etc/init.d/cron restart\n        </programlisting>\n      </para>\n      <para>\n        To deactivate the network link eth1 of a running container that\n        does not have the NET_ADMIN capability, use either the\n        <option>-e</option> option to use increased capabilities,\n        assuming the <command>ip</command> tool is installed:\n        <programlisting>\n          lxc-attach -n container -e -- /sbin/ip link delete eth1\n        </programlisting>\n        Or, alternatively, use the <option>-s</option> to use the\n        tools installed on the host outside the container:\n        <programlisting>\n          lxc-attach -n container -s NETWORK -- /sbin/ip link delete eth1\n        </programlisting>\n      </para>\n  </refsect1>\n\n  <refsect1>\n    <title>Compatibility</title>\n    <para>\n      Attaching completely (including the pid and mount namespaces) to a\n      container requires a kernel of version 3.8 or higher, or a\n      patched kernel, please see the lxc website for\n      details. <command>lxc-attach</command> will fail in that case if\n      used with an unpatched kernel of version 3.7 and prior.\n    </para>\n    <para>\n      Nevertheless, it will succeed on an unpatched kernel of version 3.0\n      or higher if the <option>-s</option> option is used to restrict the\n      namespaces that the process is to be attached to to one or more of\n      <replaceable>NETWORK</replaceable>, <replaceable>IPC</replaceable>\n      and <replaceable>UTSNAME</replaceable>.\n    </para>\n    <para>\n      Attaching to user namespaces is supported by kernel 3.8 or higher\n      with enabling user namespace.\n    </para>\n  </refsect1>\n\n  <refsect1>\n    <title>Notes</title>\n    <para>\n      The Linux <replaceable>/proc</replaceable> and\n      <replaceable>/sys</replaceable> filesystems contain information\n      about some quantities that are affected by namespaces, such as\n      the directories named after process ids in\n      <replaceable>/proc</replaceable> or the network interface information\n      in <replaceable>/sys/class/net</replaceable>. The namespace of the\n      process mounting the pseudo-filesystems determines what information\n      is shown, <emphasis>not</emphasis> the namespace of the process\n      accessing <replaceable>/proc</replaceable> or\n      <replaceable>/sys</replaceable>.\n    </para>\n    <para>\n      If one uses the <option>-s</option> option to only attach to\n      the pid namespace of a container, but not its mount namespace\n      (which will contain the <replaceable>/proc</replaceable> of the\n      container and not the host), the contents of <option>/proc</option>\n      will reflect that of the host and not the container. Analogously,\n      the same issue occurs when reading the contents of\n      <replaceable>/sys/class/net</replaceable> and attaching to just\n      the network namespace.\n    </para>\n    <para>\n      To work around this problem, the <option>-R</option> flag provides\n      the option to remount <replaceable>/proc</replaceable> and\n      <replaceable>/sys</replaceable> in order for them to reflect the\n      network/pid namespace context of the attached process. In order\n      not to interfere with the host's actual filesystem, the mount\n      namespace will be unshared (like <command>lxc-unshare</command>\n      does) before this is done, esentially giving the process a new\n      mount namespace, which is identical to the hosts's mount namespace\n      except for the <replaceable>/proc</replaceable> and\n      <replaceable>/sys</replaceable> filesystems.\n    </para>\n    <para>\n      Previous versions of <command>lxc-attach</command> suffered a bug whereby\n      a user could attach to a containers namespace without being placed in a\n      writeable cgroup for some critical subsystems. Newer versions of\n      <command>lxc-attach</command> will check whether a user is in a writeable\n      cgroup for those critical subsystems. <command>lxc-attach</command> might\n      thus fail unexpectedly for some users (E.g. on systems where an\n      unprivileged user is not placed in a writeable cgroup in critical\n      subsystems on login.). However, this behavior is correct and more secure.\n    </para>\n  </refsect1>\n\n  <refsect1>\n    <title>Security</title>\n    <para>\n      The <option>-e</option> and <option>-s</option> options should\n      be used with care, as it may break the isolation of the containers\n      if used improperly.\n    </para>\n  </refsect1>\n\n  &seealso;\n\n  <refsect1>\n    <title>Author</title>\n    <para>Daniel Lezcano <email>daniel.lezcano@free.fr</email></para>\n  </refsect1>\n\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\nsgml-shorttag:t\nsgml-minimize-attributes:nil\nsgml-always-quote-attributes:t\nsgml-indent-step:2\nsgml-indent-data:t\nsgml-parent-document:nil\nsgml-default-dtd-file:nil\nsgml-exposed-tags:nil\nsgml-local-catalogs:nil\nsgml-local-ecat-files:nil\nEnd:\n-->\n"], "filenames": ["doc/lxc-attach.sgml.in"], "buggy_code_start_loc": [79], "buggy_code_end_loc": [313], "fixing_code_start_loc": [80], "fixing_code_end_loc": [341], "type": "CWE-284", "message": "An issue was discovered in Linux Containers (LXC) before 2016-02-22. When executing a program via lxc-attach, the nonpriv session can escape to the parent session by using the TIOCSTI ioctl to push characters into the terminal's input buffer, allowing an attacker to escape the container.", "other": {"cve": {"id": "CVE-2016-10124", "sourceIdentifier": "cve@mitre.org", "published": "2017-01-09T08:59:00.153", "lastModified": "2017-11-13T02:29:00.227", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "An issue was discovered in Linux Containers (LXC) before 2016-02-22. When executing a program via lxc-attach, the nonpriv session can escape to the parent session by using the TIOCSTI ioctl to push characters into the terminal's input buffer, allowing an attacker to escape the container."}, {"lang": "es", "value": "Se ha descubierto un problema en Linux Containers (LXC) en versiones anteriores a 22-02-2016. Cuando se ejecuta un programa a trav\u00e9s de lxc-attach, la sesi\u00f3n no privada puede escapar a la sesi\u00f3n parental utilizando el ioctl TIOCSTI para presionar caracteres en el b\u00fafer de entrada del terminal, permitiendo a un atacante escapar del contenedor."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-284"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:linuxcontainers:lxc:*:rc1:*:*:*:*:*:*", "versionEndIncluding": "2.0.0", "matchCriteriaId": "174CEA20-CA6F-44BE-AC6F-301CE073C7EE"}]}]}], "references": [{"url": "http://www.openwall.com/lists/oss-security/2014/12/15/5", "source": "cve@mitre.org"}, {"url": "http://www.openwall.com/lists/oss-security/2015/09/03/5", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/bid/95404", "source": "cve@mitre.org"}, {"url": "https://github.com/lxc/lxc/commit/e986ea3dfa4a2957f71ae9bfaed406dd6e1ffff6", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/201711-09", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/lxc/lxc/commit/e986ea3dfa4a2957f71ae9bfaed406dd6e1ffff6"}}