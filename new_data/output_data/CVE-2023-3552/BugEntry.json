{"buggy_code": ["/*\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @version   \n * @file      functions.js\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n/**\n*   Countdown before session expiration\n**/\nfunction countdown()\n{\n    // if a process is in progress then do not decrease the time counter.\n    if (typeof ProcessInProgress !== 'undefined' && ProcessInProgress === true) {\n        $('.countdown-icon')\n            .addClass('fas fa-history')\n            .removeClass('far fa-clock');\n        \n        $(this).delay(1000).queue(function()\n        {\n            countdown();\n            $(this).dequeue();\n        });\n\n        return false;\n    }\n\n    // Continue\n    let DayTill;\n    let hoursInDay = 24;\n    let limitTen = 10;\n    let oneSecondsMs = 1000;\n    let theDay =  $('#temps_restant').val();\n    let today = new Date();\n    let second = Math.floor(theDay - today.getTime() / oneSecondsMs);\n    let minute = Math.floor(second / hourInMinutes);\n    let hour = Math.floor(minute / hourInMinutes);\n    let CHour= hour % hoursInDay;\n    if (CHour < limitTen) {\n        CHour = '0' + CHour;\n    }\n    let CMinute= minute % hourInMinutes;\n    if (CMinute < limitTen) {\n        CMinute = '0' + CMinute;\n    }\n    let CSecond= second % hourInMinutes;\n    if (CSecond < limitTen) {\n        CSecond = '0' + CSecond;\n    }\n    DayTill = CHour + ':' + CMinute + ':' + CSecond;\n\n    // Session will soon be closed\n    if (DayTill === '00:00:50') {\n        showExtendSession();\n        $('#countdown').css('color', 'red');\n    }\n\n    // Manage end of session\n    if ($('#temps_restant').val() !== '' && DayTill <= '00:00:00' && parseInt($('#please_login').val()) !== 1) {\n        $('#please_login').val('1');\n        $(location).attr('href','index.php?session=expired');\n    }\n\n    //Rewrite the string to the correct information.\n    if ($('#countdown')) {\n        $('#countdown').html('<i class=\"far fa-clock countdown-icon mr-1\"></i>' + DayTill);\n    }\n\n    //Create the timer 'counter' that will automatic restart function countdown() again every second.\n    $(this).delay(1000).queue(function()\n    {\n        countdown();\n        $(this).dequeue();\n    });\n}\n\n\n/**\n*\n**/\nfunction unsanitizeString(string) {\n    if(string !== \"\" && string !== null) {\n        string = string.replace(/\\\\/g,\"\").replace(/&#92;/g, \"\\\\\").replace(/&quot;/g, '\"');\n    }\n    return string;\n}\n\n/**\n*   Clean up a string and delete any scripting tags\n**/\nfunction sanitizeString(string) {\n    if(string !== \"\" && string !== null && string !== undefined) {\n        string = string.replace(/\\\\/g,\"&#92;\").replace(/\"/g,\"&quot;\");\n        string = string.replace(new RegExp(\"\\\\s*<script[^>]*>[\\\\s\\\\S]*?</script>\\\\s*\",\"ig\"), \"\");\n    }\n    return string;\n}\n\n/**\n*   Checks if URL has expected format\n**/\nfunction validateURL(url) {\n    let urlregex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    return urlregex.test(url);\n}\n\n\nfunction split( val ) {\n    return val.split( / \\s*/ );\n}\n\nfunction extractLast( term ) {\n    return split( term ).pop();\n}\n\n/**\n * Shows error message\n * @param  {string} message  Message to display\n * @return {boolean}         False\n */\nfunction jsonErrorHdl(message)\n{\n    //show as confirm\n    // Prepare modal\n    showModalDialogBox(\n        '#warningModal',\n        '<i class=\"fas fa-warning fa-lg warning mr-2\"></i>Caution',\n        message,\n        '',\n        'Close',\n        true,\n        true\n    );\n\n    // Actions on modal buttons\n    $(document).on('click', '#warningModalButtonClose', function() {\n        \n    });\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // SHow user\n    });\n    return false;\n}\n\n/**\n * [prepareExchangedData description]\n * @param  {[type]} data [description]\n * @param  {[type]} type [description]\n * @param  {[type]} key  [description]\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n * @return {[type]}      [description]\n */\nfunction prepareExchangedData(data, type, key, fileName = '', functionName = '')\n{\n    if (type === 'decode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            try {\n                return $.parseJSON(data);\n            }\n            catch (e) {\n                return jsonErrorHdl(data);\n            }\n        } else {\n            try {\n                let encryption = new Encryption();\n                return JSON.parse(encryption.decrypt(data, key));\n            }\n            catch (e) {\n                return jsonErrorHdl('<b>Next error occurred</b><div>' + e + '</div>'\n                    + (fileName !== '' ? '<br><b>Informations:</b><div>  - File: ' + fileName + '<br>  - Function: ' + functionName + '</div>': '')\n                    + '<div><br><b>Raw answer from server:</b><br>'+data+'</div>');\n            }\n        }\n    } else if (type === 'encode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            return stripHtml(data);\n        } else {\n            let encryption = new Encryption();\n            return encryption.encrypt(data, key);\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * Returns the text from a HTML string\n * \n * @param {string} String The html string\n */\nfunction stripHtml(html) {\n    // Create a new div element\n    let temporalDivElement = document.createElement('div');\n    // Set the HTML content with the providen\n    temporalDivElement.innerHTML = html;\n    // Retrieve the text property of the element (cross-browser support)\n    return temporalDivElement.textContent || temporalDivElement.innerText || '';\n}\n\n\n/**\n * \n * @param {string} data Crypted string\n * @param {string} key  Session key\n */\nfunction unCryptData(data, key)\n{\n    if (data !== undefined && data.substr(0, 7) === 'crypted') {\n        let uncryptedData = prepareExchangedData(\n            data.substr(7),\n            'decode',\n            key\n        )\n        \n        if (uncryptedData.password.length > 0)\n            return uncryptedData.password;\n        else\n            return false;\n    }\n    return false;\n}\n\n/**\n * \n * @param {string}data Crypted string\n * @param {string}key  Session key\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n */\nfunction decodeQueryReturn(data, key, fileName = '', functionName = '')\n{\n    try {\n        return prepareExchangedData(data , \"decode\", key, fileName, functionName);\n    } catch (e) {\n        // error\n        toastr.remove();\n        toastr.error(\n            'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        return false;\n    }\n}\n\n/**\n * \n * @param {string} action Action\n * @param {string} name   Name\n * @param {array} data    Data\n */\nfunction browserSession(action, name, data)\n{\n    // Initialize the session\n    if (action === 'init') {\n        if (store.get(name) === 'undefined'\n            || store.get(name) === undefined\n        ) {\n            store.set(\n                name,\n                data\n            );\n        } else {\n            // Ensure all entries exist\n            $(data).each(function(value, key) {\n                store.update(\n                    name,\n                    function(bSession)\n                    {\n                        bSession.key = value;\n                    }\n                )\n            });\n        }\n    }\n}\n\n/**\n * \n * @param {string} modalId      Modal id\n * @param {string} title        Title\n * @param {string} body         Body\n * @param {string} actionButton Action Button\n * @param {string} closeButton  Close Button\n * @param {string} xlSize       Size\n * @param {string} warningModal Warning Modal\n * @param {string} closeCross   Close on cross\n */\nfunction showModalDialogBox(\n    modalId,\n    title,\n    body,\n    actionButton,\n    closeButton,\n    xlSize = false,\n    warningModal = false,\n    closeCross = true\n) {\n    $(modalId + 'Title').html(title);\n    $(modalId + 'Body').html(body);\n    if (actionButton === '') {\n        $(modalId + 'ButtonAction').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonAction').removeClass('hidden');\n        $(modalId + 'ButtonAction').html(actionButton);\n    }\n    if (closeButton === '') {\n        $(modalId + 'ButtonClose').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonClose').removeClass('hidden');\n        $(modalId + 'ButtonClose').html(closeButton);\n    }\n    if (xlSize === true) {\n        $(modalId + ' div:first').addClass('modal-xl');\n    } else {\n        $(modalId + ' div:first').removeClass('modal-xl');\n    }\n    if (warningModal === true) {\n        $(modalId + ':eq(1)').addClass('bg-warning');\n    } else {\n        $(modalId + ':eq(1)').removeClass('bg-warning');\n    }\n    if (closeCross === false) {\n        $(modalId + 'CrossClose').addClass('hidden');\n    } else {\n        $(modalId + 'CrossClose').removeClass('hidden');\n    }\n    $(modalId).modal({\n        backdrop : 'static',\n        keyboard : false,\n        show: true,\n        focus: true\n    });\n    $(modalId).modal('handleUpdate');\n}\n\n/**\n * Sanitize a string\n * \n * @param {string} str  The string\n */\nfunction htmlEncode(str){\n    return String(str).replace(/[^\\w. ]/gi, function(c){\n        return '&#'+c.charCodeAt(0)+';';\n    });\n}\n\n/* Extend String object with method to encode multi-byte string to utf8\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\n * - utf8Encode('x') = 'x', but utf8Encode('\u00e7a') = '\u00c3\u00a7a', and utf8Encode('\u00c3\u00a7a') = '\u00c3\u0083\u00c2\u00a7a'*/\nif (typeof String.prototype.utf8Encode == 'undefined') {\n    String.prototype.utf8Encode = function() {\n        return unescape( encodeURIComponent( this ) );\n    };\n}\n\n/* Extend String object with method to decode utf8 string to multi-byte */\nif (typeof String.prototype.utf8Decode == 'undefined') {\n    String.prototype.utf8Decode = function() {\n        try {\n            return decodeURIComponent( escape( this ) );\n        } catch (e) {\n            return this; // invalid UTF-8? return as-is\n        }\n    };\n}\n\nfunction simplePurifier(\n    text,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false\n) \n{\n    return DOMPurify.sanitize(\n        sanitizeDom(text)\n            .replaceAll('&lt;', '<')\n            .replaceAll('&#x3C;', '<')\n            .replaceAll('&#60;', '<')\n            .replaceAll('&gt;', '>')\n            .replaceAll('&#x3E;', '>')\n            .replaceAll('&#62;', '>')\n            .replaceAll('&amp;', '&')\n            .replaceAll('&#38;', '&')\n            .replaceAll('&#x26;', '&')\n            .replaceAll('&quot;', '\"')\n            .replaceAll('&#34;;', '\"')\n            .replaceAll('&#x22;', '\"')\n            .replaceAll('&#39;', \"'\"),\n        {USE_PROFILES: {html:bHtml, svg:bSvg, svgFilters: bSvgFilters}}\n    );\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @param {*} text \n * @returns bool||string\n */\nfunction fieldDomPurifier(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    text = ''\n)\n{\n    if (field === undefined ||field === '') {\n        return false;\n    }\n    let string = '';\n    text = (text === '') ? $(field).val() : text;\n\n    // Purify string\n    string = simplePurifier(text, bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '' && text !== '') {\n        $(field).val('');\n        return false;\n    }\n\n    return string;\n}\n\n/**\n * Permits to get all fields of a class and purify them\n * @param {*} elementClass \n * @returns array\n */\nfunction fieldDomPurifierLoop(elementClass)\n{\n    let purifyStop = false,\n        arrFields = [];\n    $.each($(elementClass), function(index, element) {\n        purifiedField = fieldDomPurifier(\n            '#' + $(element).attr('id'), \n            $(element).hasClass('purifyHtml') === true ? true : false,\n            $(element).hasClass('purifySvg') === true ? true : false,\n            $(element).hasClass('purifySvgFilter') === true ? true : false,\n            typeof $(element).data('purify-text') !== 'undefined' ? $(element).data('purify-text') : ''\n        );\n\n        if (purifiedField === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Please remove all special characters from your input.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            $('#' + $(element).attr('id')).focus();\n            purifyStop = true;\n            return {\n                'purifyStop' : purifyStop,\n                'arrFields' : arrFields\n            };\n        } else {\n            $(element).val(purifiedField);\n            if (typeof $(element).data('field') !== 'undefined') {\n                arrFields[$(element).data('field')] = purifiedField;\n            } else if (typeof $(element).data('field-name') !== 'undefined') {\n                arrFields[$(element).data('field-name')] = purifiedField;\n            }\n        }\n    });\n    \n    // return\n    return {\n        'purifyStop' : purifyStop,\n        'arrFields' : arrFields\n    };\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @returns bool||string\n */\nfunction fieldDomPurifierWithWarning(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    bSetting = false,\n)\n{\n    if (field === undefined || field === '') {\n        return false;\n    }\n    if ($(field).val() === '') {\n        return '';\n    }\n    let string = '',\n        currentString = $(field).val();\n\n    // if bSetting is true, we use the setting value\n    // remove any closing ', string that could corrupt the setting\n    if (bSetting === true) {\n        currentString = currentString.replace(/',/g, '');\n    }\n\n    // Purify string\n    string = simplePurifier(\n        sanitizeDom(currentString),\n        bHtml,\n        bSvg,\n        bSvgFilters\n    );\n    \n    // Clear field if string is empty and warn user\n    if (string === '') {\n        toastr.remove();\n        toastr.warning(\n            'XSS attempt detected. Please remove all special characters from your input.',\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        $(field).focus();\n        return false;\n    }\n\n    return string;\n}\n\nconst sanitizeDom = (str) => {\n    const div = document.createElement('div');\n    div.textContent = str;\n    newString = div.innerHTML;\n    div.remove();\n    return newString;\n}", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      folders.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    // Clear\n    $('#folders-search').val('');\n\n    buildTable();\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].form-check-input').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n\n    $('input[type=\"checkbox\"].form-check-red-input').iCheck({\n        checkboxClass: 'icheckbox_flat-red',\n    });\n\n    // Prepare buttons\n    var deletionList = [];\n    $('.tp-action').click(function() {\n        if ($(this).data('action') === 'new') {\n            //--- NEW FOLDER FORM\n            // Prepare form\n            $('.form-check-input').iCheck('uncheck');\n            $('.clear-me').val('');\n            $('#new-parent').val('na').change();\n            $('#new-minimal-complexity').val(0).change();\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-new').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n            $('#new-title').focus();\n\n        } else if ($(this).data('action') === 'new-submit') {\n            //--- SAVE NEW FOLDER\n\n            // Sanitize text fields\n            purifyRes = fieldDomPurifierLoop('#folder-new .purify');\n            if (purifyRes.purifyStop === true) {\n                // if purify failed, stop\n                return false;\n            }\n\n            // Prepare data\n            var data = {\n                'title': purifyRes.arrFields['title'],\n                'parentId': parseInt($('#new-parent').val()),\n                'complexity': parseInt($('#new-complexity').val()),\n                'accessRight': $('#new-access-right').val(),\n                'renewalPeriod': $('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val()),\n                'addRestriction': $('#new-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#new-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': purifyRes.arrFields['icon'],\n                'iconSelected': purifyRes.arrFields['iconSelected'],\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'add_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n\n                        // Add new folder to the list 'new-parent'\n                        // Launch action\n                        $.post(\n                            'sources/folders.queries.php', {\n                                type: 'refresh_folders_list',\n                                key: '<?php echo $_SESSION['key']; ?>'\n                            },\n                            function(data) { //decrypt data\n                                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                                console.log(data);\n\n                                // prepare options list\n                                var prev_level = 0,\n                                    droplist = '';\n\n                                $(data.subfolders).each(function(i, folder) {\n                                    droplist += '<option value=\"' + folder['id'] + '\">' +\n                                        folder['label'] +\n                                        folder['path'] +\n                                        '</option>';\n                                });\n\n                                $('#new-parent')\n                                    .empty()\n                                    .append(droplist);\n                            }\n                        );\n\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'cancel') {\n            //--- NEW FORM CANCEL\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n        } else if ($(this).data('action') === 'delete') {\n            //--- DELETE FORM SHOW\n            if ($('#table-folders input[type=checkbox]:checked').length === 0) {\n                toastr.remove();\n                toastr.warning(\n                    '<?php echo langHdl('you_need_to_select_at_least_one_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Prepare\n            $('#delete-confirm').iCheck('uncheck');\n\n            // Build list\n            var selectedFolders = '<ul>';\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders += '<li>' + $('#folder-' + $(this).data('id')).text() + '</li>';\n            });\n            $('#delete-list').html(selectedFolders + '</ul>');\n\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-delete').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n\n        } else if ($(this).data('action') === 'delete-submit') {\n            console.log('delete-submit')\n            //--- DELETE FOLDERS\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Get list of selected folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Prepare data\n            var data = {\n                'selectedFolders': selectedFolders,\n            }\n\n            console.log(data)\n\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'delete_folders',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // refresh\n                        buildTable();\n\n                        // Show list\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n\n                        // OK\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'refresh') {\n            //--- REFRESH FOLDERS LIST\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n            // Build matrix\n            buildTable();\n        }\n    });\n\n    /**\n     * Handle delete button status\n     */\n    $(document).on('ifChecked', '#delete-confirm', function() {\n        $('#delete-submit').removeClass('disabled');\n    });\n    $(document).on('ifUnchecked', '#delete-confirm', function() {\n        $('#delete-submit').addClass('disabled');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function buildTable() {\n        // Clear\n        $('#table-folders > tbody').html('');\n\n        // Show spinner\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Build matrix\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'build_matrix',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Build html\n                    var newHtml = '',\n                        ident = '',\n                        path = '',\n                        columns = '',\n                        rowCounter = 0,\n                        path = '',\n                        parentsClass = '',\n                        max_folder_depth = 0,\n                        foldersSelect = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n\n                    $(data.matrix).each(function(i, value) {\n                        // List of parents\n                        parentsClass = '';\n                        $(value.parents).each(function(i, id) {\n                            parentsClass += 'p' + id + ' ';\n                        });\n\n                        // Row\n                        columns += '<tr data-id=\"' + value.id + '\" data-level=\"' + value.level + '\" class=\"' + parentsClass + '\"><td>';\n\n                        // Column 1\n                        if ((value.parentId === 0 &&\n                                (data.userIsAdmin === 1 || data.userCanCreateRootFolder === 1)) ||\n                            value.parentId !== 0\n                        ) {\n                            columns += '<input type=\"checkbox\" class=\"checkbox-folder\" id=\"cb-' + value.id + '\" data-id=\"' + value.id + '\">';\n\n                            if (value.numOfChildren > 0) {\n                                columns += '<i class=\"fas fa-folder-minus infotip ml-2 pointer icon-collapse\" data-id=\"' + value.id + '\" title=\"<?php echo langHdl('collapse'); ?>\"></i>';\n                            }\n                        }\n                        columns += '</td>';\n\n                        // Column 2\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\">' +\n                            '<span id=\"folder-' + value.id + '\" data-id=\"' + value.id + '\" class=\"infotip folder-name\" data-html=\"true\" title=\"<?php echo langHdl('id'); ?>: ' + value.id + '<br><?php echo langHdl('level'); ?>: ' + value.level + '<br><?php echo langHdl('nb_items'); ?>: ' + value.nbItems + '\">' + value.title + '</span></td>';\n\n\n                        // Column 3\n                        path = '';\n                        $(value.path).each(function(i, folder) {\n                            if (path === '') {\n                                path = folder;\n                            } else {\n                                path += '<i class=\"fas fa-angle-right fa-sm ml-1 mr-1\"></i>' + folder;\n                            }\n                        });\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\" data-value=\"' + value.parentId + '\">' +\n                            '<small class=\"text-muted\">' + path + '</small></td>';\n\n\n                        // Column 4\n                        columns += '<td class=\"modify pointer text-center\">';\n                        if (value.folderComplexity.value !== undefined) {\n                            columns += '<i class=\"' + value.folderComplexity.class + ' infotip\" data-value=\"' + value.folderComplexity.value + '\" title=\"' + value.folderComplexity.text + '\"></i>';\n                        } else {\n                            columns += '<i class=\"fas fa-exclamation-triangle text-danger infotip\" data-value=\"\" title=\"<?php echo langHdl('no_value_defined_please_fix'); ?>\"></i>';\n                        }\n                        columns += '</td>';\n\n\n                        // Column 5\n                        columns += '<td class=\"modify pointer text-center\">' + value.renewalPeriod + '</td>';\n\n\n                        // Column 6\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.add_is_blocked + '\">';\n                        if (value.add_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column 7\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.edit_is_blocked + '\">';\n                        if (value.edit_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column \n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.icon + '\"><i class=\"' + value.icon + '\"></td>';\n\n                        // Column 9\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.iconSelected + '\">';\n                        if (value.iconSelected !== \"\") {\n                            columns += '<i class=\"' + value.iconSelected + '\">';\n                        }\n                        columns += '</td></tr>';\n\n\n                        // Folder Select\n                        foldersSelect += '<option value=\"' + value.id + '\">' + value.title + '</option>';\n\n                        // Max depth\n                        if (parseInt(value.level) > max_folder_depth) {\n                            max_folder_depth = parseInt(value.level);\n                        }\n\n                        rowCounter++;\n                    });\n\n                    // Show result\n                    $('#table-folders > tbody').html(columns);\n\n                    //iCheck for checkbox and radio inputs\n                    $('#table-folders input[type=\"checkbox\"]').iCheck({\n                        checkboxClass: 'icheckbox_flat-blue'\n                    });\n\n                    $('.infotip').tooltip();\n\n                    // store list of folders\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.foldersSelect = foldersSelect;\n                        }\n                    );\n\n                    // store list of Complexity\n                    complexity = '';\n                    $(data.fullComplexity).each(function(i, option) {\n                        complexity += '<option value=\"' + option.value + '\">' + option.text + '</option>';\n                    });\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.complexityOptions = complexity;\n                        }\n                    );\n\n                    // Adapt select\n                    $('#folders-depth').empty();\n                    $('#folders-depth').append('<option value=\"all\"><?php echo langHdl('all'); ?></option>');\n                    for (x = 1; x < max_folder_depth; x++) {\n                        $('#folders-depth').append('<option value=\"' + x + '\">' + x + '</option>');\n                    }\n                    $('#folders-depth').val('all').change();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Build list of folders\n     */\n    function refreshFoldersList() {\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'select_sub_folders',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) { //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n            }\n        );\n    }\n\n\n    /**\n     * Handle option when role is displayed\n     */\n    $(document).on('change', '#folders-depth', function() {\n        if ($('#folders-depth').val() === 'all') {\n            $('tr').removeClass('hidden');\n        } else {\n            $('tr').filter(function() {\n                if ($(this).data('level') <= $('#folders-depth').val()) {\n                    $(this).removeClass('hidden');\n                } else {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n    });\n\n    /**\n     * Handle search criteria\n     */\n    $('#folders-search').on('keyup', function() {\n        var criteria = $(this).val();\n        $('.folder-name').filter(function() {\n            if ($(this).text().toLowerCase().indexOf(criteria) !== -1) {\n                $(this).closest('tr').removeClass('hidden');\n            } else {\n                $(this).closest('tr').addClass('hidden');\n            }\n        });\n    });\n\n    /**\n     * Check / Uncheck children folders\n     */\n    var operationOngoin = false;\n    $(document).on('ifChecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('check');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    $(document).on('ifUnchecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('uncheck');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n\n    /**\n     * Handle the form for folder edit\n     */\n    var currentFolderEdited = '';\n    $('#table-folders').on('click', '.modify', function() {\n        // Manage edition of rights card\n        if ((currentFolderEdited !== '' && currentFolderEdited !== $(this).data('id')) ||\n            $('.temp-row').length > 0\n        ) {\n            $('.temp-row').remove();\n        } else if (currentFolderEdited === $(this).data('id')) {\n            return false;\n        }\n\n        // Init\n        var currentRow = $(this).closest('tr'),\n            folderTitle = $(currentRow).find(\"td:eq(1)\").text(),\n            folderParent = $(currentRow).find(\"td:eq(2)\").data('value'),\n            folderComplexity = $(currentRow).find(\"td:eq(3) > i\").data('value'),\n            folderRenewal = $(currentRow).find(\"td:eq(4)\").text(),\n            folderAddRestriction = $(currentRow).find(\"td:eq(5)\").data('value'),\n            folderEditRestriction = $(currentRow).find(\"td:eq(6)\").data('value'),\n            folderIcon = $(currentRow).find(\"td:eq(7)\").data('value'),\n            folderIconSelection = $(currentRow).find(\"td:eq(8)\").data('value');\n        currentFolderEdited = currentRow.data('id');\n\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline form\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-title\"><?php echo langHdl('label'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me purify\" id=\"folder-edit-title\" data-field=\"title\" value=\"' + folderTitle + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-parent\"><?php echo langHdl('parent'); ?></label><br>' +\n            '<select id=\"folder-edit-parent\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').foldersSelect + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-complexity\"><?php echo langHdl('password_minimal_complexity_target'); ?></label><br>' +\n            '<select id=\"folder-edit-complexity\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').complexityOptions + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-renewal\"><?php echo langHdl('renewal_delay'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me\" id=\"folder-edit-renewal\" value=\"' + folderRenewal + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control purify\" id=\"folder-edit-icon\" data-field=\"icon\" value=\"'+folderIcon+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon_on_selection'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control purify\" id=\"folder-edit-icon-selected\" data-field=\"iconSelected\" value=\"'+folderIconSelection+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\" id=\"folder-rights-tuned\">' +\n            '<label><?php echo langHdl('special'); ?></label>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-add-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-add-restriction\"><?php echo langHdl('create_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-edit-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-edit-restriction\"><?php echo langHdl('edit_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action-edit\" data-action=\"submit\" data-id=\"' + currentFolderEdited + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action-edit\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n\n        // Prepare iCheck format for checkboxes\n        $('input[type=\"checkbox\"].form-check-input, input[type=\"radio\"].form-radio-input').iCheck({\n            radioClass: 'iradio_flat-orange',\n            checkboxClass: 'icheckbox_flat-orange',\n        });\n\n        $('.select2').select2({\n            language: '<?php echo $_SESSION['user_language_code']; ?>'\n        });\n\n        // Manage status of the checkboxes\n        if (folderAddRestriction === 0) {\n            $('#folder-edit-add-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-add-restriction').iCheck('check');\n        }\n        if (folderEditRestriction === 0) {\n            $('#folder-edit-edit-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-edit-restriction').iCheck('check');\n        }\n\n        // Prepare select2\n        $('#folder-edit-parent').val(folderParent).change();\n        $('#folder-edit-complexity').val(folderComplexity).change();\n\n        currentFolderEdited = '';\n    });\n\n\n    $(document).on('click', '.tp-action-edit', function() {\n        if ($(this).data('action') === 'cancel') {\n            $('.temp-row').remove();\n        } else if ($(this).data('action') === 'submit') {\n            // STORE CHANGES\n            var currentFolderId = $(this).data('id');\n\n            // loop on all checked folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Sanitize text fields\n            purifyRes = fieldDomPurifierLoop('#table-folders .purify');\n            if (purifyRes.purifyStop === true) {\n                // if purify failed, stop\n                return false;\n            }\n\n            // Prepare data\n            var data = {\n                'id': currentFolderId,\n                'title': purifyRes.arrFields['title'],    //$('#folder-edit-title').val(),\n                'parentId': $('#folder-edit-parent').val(),\n                'complexity': $('#folder-edit-complexity').val(),\n                'renewalPeriod': $('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val()),\n                'addRestriction': $('#folder-edit-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#folder-edit-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': purifyRes.arrFields['icon'],    //$('#folder-edit-icon').val(),\n                'iconSelected': purifyRes.arrFields['iconSelected'],    //$('#folder-edit-icon-selected').val(),\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'update_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n                        /* TODO\n                        if (data.info_parent_changed === 0) {\n                            // Update\n                            var row = $('tr[data-id=\"' + currentFolderId + '\"]');\n                            console.log(row)\n\n                            $(row).find()\n\n                        } else {\n                            buildTable();\n                        }*/\n                    }\n                }\n            );\n        }\n    });\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            if ($('.temp-row').length > 0) {\n                $('.temp-row').remove();\n            }\n        }\n    });\n\n\n    // Manage collapse/expend\n    $(document).on('click', '.icon-collapse', function() {\n        if ($(this).hasClass('fa-folder-minus') === true) {\n            $(this)\n                .removeClass('fa-folder-minus')\n                .addClass('fa-folder-plus text-primary');\n\n            $('.p' + $(this).data('id')).addClass('hidden');\n        } else {\n            $(this)\n                .removeClass('fa-folder-plus  text-primary')\n                .addClass('fa-folder-minus');\n            $('.p' + $(this).data('id')).removeClass('hidden');\n        }\n    });\n\n\n    //]]>\n</script>\n"], "fixing_code": ["/*\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n * @project   Teampass\n * @version   \n * @file      functions.js\n * ---\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n * @copyright 2009-2023 Teampass.net\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n * @see       https://www.teampass.net\n */\n\n/**\n*   Countdown before session expiration\n**/\nfunction countdown()\n{\n    // if a process is in progress then do not decrease the time counter.\n    if (typeof ProcessInProgress !== 'undefined' && ProcessInProgress === true) {\n        $('.countdown-icon')\n            .addClass('fas fa-history')\n            .removeClass('far fa-clock');\n        \n        $(this).delay(1000).queue(function()\n        {\n            countdown();\n            $(this).dequeue();\n        });\n\n        return false;\n    }\n\n    // Continue\n    let DayTill;\n    let hoursInDay = 24;\n    let limitTen = 10;\n    let oneSecondsMs = 1000;\n    let theDay =  $('#temps_restant').val();\n    let today = new Date();\n    let second = Math.floor(theDay - today.getTime() / oneSecondsMs);\n    let minute = Math.floor(second / hourInMinutes);\n    let hour = Math.floor(minute / hourInMinutes);\n    let CHour= hour % hoursInDay;\n    if (CHour < limitTen) {\n        CHour = '0' + CHour;\n    }\n    let CMinute= minute % hourInMinutes;\n    if (CMinute < limitTen) {\n        CMinute = '0' + CMinute;\n    }\n    let CSecond= second % hourInMinutes;\n    if (CSecond < limitTen) {\n        CSecond = '0' + CSecond;\n    }\n    DayTill = CHour + ':' + CMinute + ':' + CSecond;\n\n    // Session will soon be closed\n    if (DayTill === '00:00:50') {\n        showExtendSession();\n        $('#countdown').css('color', 'red');\n    }\n\n    // Manage end of session\n    if ($('#temps_restant').val() !== '' && DayTill <= '00:00:00' && parseInt($('#please_login').val()) !== 1) {\n        $('#please_login').val('1');\n        $(location).attr('href','index.php?session=expired');\n    }\n\n    //Rewrite the string to the correct information.\n    if ($('#countdown')) {\n        $('#countdown').html('<i class=\"far fa-clock countdown-icon mr-1\"></i>' + DayTill);\n    }\n\n    //Create the timer 'counter' that will automatic restart function countdown() again every second.\n    $(this).delay(1000).queue(function()\n    {\n        countdown();\n        $(this).dequeue();\n    });\n}\n\n\n/**\n*\n**/\nfunction unsanitizeString(string) {\n    if(string !== \"\" && string !== null) {\n        string = string.replace(/\\\\/g,\"\").replace(/&#92;/g, \"\\\\\").replace(/&quot;/g, '\"');\n    }\n    return string;\n}\n\n/**\n*   Clean up a string and delete any scripting tags\n**/\nfunction sanitizeString(string) {\n    if(string !== \"\" && string !== null && string !== undefined) {\n        string = string.replace(/\\\\/g,\"&#92;\").replace(/\"/g,\"&quot;\");\n        string = string.replace(new RegExp(\"\\\\s*<script[^>]*>[\\\\s\\\\S]*?</script>\\\\s*\",\"ig\"), \"\");\n    }\n    return string;\n}\n\n/**\n*   Checks if URL has expected format\n**/\nfunction validateURL(url) {\n    let urlregex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    return urlregex.test(url);\n}\n\n\nfunction split( val ) {\n    return val.split( / \\s*/ );\n}\n\nfunction extractLast( term ) {\n    return split( term ).pop();\n}\n\n/**\n * Shows error message\n * @param  {string} message  Message to display\n * @return {boolean}         False\n */\nfunction jsonErrorHdl(message)\n{\n    //show as confirm\n    // Prepare modal\n    showModalDialogBox(\n        '#warningModal',\n        '<i class=\"fas fa-warning fa-lg warning mr-2\"></i>Caution',\n        message,\n        '',\n        'Close',\n        true,\n        true\n    );\n\n    // Actions on modal buttons\n    $(document).on('click', '#warningModalButtonClose', function() {\n        \n    });\n    $(document).on('click', '#warningModalButtonAction', function() {\n        // SHow user\n    });\n    return false;\n}\n\n/**\n * [prepareExchangedData description]\n * @param  {[type]} data [description]\n * @param  {[type]} type [description]\n * @param  {[type]} key  [description]\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n * @return {[type]}      [description]\n */\nfunction prepareExchangedData(data, type, key, fileName = '', functionName = '')\n{\n    if (type === 'decode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            try {\n                return $.parseJSON(data);\n            }\n            catch (e) {\n                return jsonErrorHdl(data);\n            }\n        } else {\n            try {\n                let encryption = new Encryption();\n                return JSON.parse(encryption.decrypt(data, key));\n            }\n            catch (e) {\n                return jsonErrorHdl('<b>Next error occurred</b><div>' + e + '</div>'\n                    + (fileName !== '' ? '<br><b>Informations:</b><div>  - File: ' + fileName + '<br>  - Function: ' + functionName + '</div>': '')\n                    + '<div><br><b>Raw answer from server:</b><br>'+data+'</div>');\n            }\n        }\n    } else if (type === 'encode') {\n        if (parseInt($('#encryptClientServer').val()) === 0) {\n            return stripHtml(data);\n        } else {\n            let encryption = new Encryption();\n            return encryption.encrypt(data, key);\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\n\n/**\n * Returns the text from a HTML string\n * \n * @param {string} String The html string\n */\nfunction stripHtml(html) {\n    // Create a new div element\n    let temporalDivElement = document.createElement('div');\n    // Set the HTML content with the providen\n    temporalDivElement.innerHTML = html;\n    // Retrieve the text property of the element (cross-browser support)\n    return temporalDivElement.textContent || temporalDivElement.innerText || '';\n}\n\n\n/**\n * \n * @param {string} data Crypted string\n * @param {string} key  Session key\n */\nfunction unCryptData(data, key)\n{\n    if (data !== undefined && data.substr(0, 7) === 'crypted') {\n        let uncryptedData = prepareExchangedData(\n            data.substr(7),\n            'decode',\n            key\n        )\n        \n        if (uncryptedData.password.length > 0)\n            return uncryptedData.password;\n        else\n            return false;\n    }\n    return false;\n}\n\n/**\n * \n * @param {string}data Crypted string\n * @param {string}key  Session key\n * @param  {[type]} fileName  [description]\n * @param  {[type]} functionName  [description]\n */\nfunction decodeQueryReturn(data, key, fileName = '', functionName = '')\n{\n    try {\n        return prepareExchangedData(data , \"decode\", key, fileName, functionName);\n    } catch (e) {\n        // error\n        toastr.remove();\n        toastr.error(\n            'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        return false;\n    }\n}\n\n/**\n * \n * @param {string} action Action\n * @param {string} name   Name\n * @param {array} data    Data\n */\nfunction browserSession(action, name, data)\n{\n    // Initialize the session\n    if (action === 'init') {\n        if (store.get(name) === 'undefined'\n            || store.get(name) === undefined\n        ) {\n            store.set(\n                name,\n                data\n            );\n        } else {\n            // Ensure all entries exist\n            $(data).each(function(value, key) {\n                store.update(\n                    name,\n                    function(bSession)\n                    {\n                        bSession.key = value;\n                    }\n                )\n            });\n        }\n    }\n}\n\n/**\n * \n * @param {string} modalId      Modal id\n * @param {string} title        Title\n * @param {string} body         Body\n * @param {string} actionButton Action Button\n * @param {string} closeButton  Close Button\n * @param {string} xlSize       Size\n * @param {string} warningModal Warning Modal\n * @param {string} closeCross   Close on cross\n */\nfunction showModalDialogBox(\n    modalId,\n    title,\n    body,\n    actionButton,\n    closeButton,\n    xlSize = false,\n    warningModal = false,\n    closeCross = true\n) {\n    $(modalId + 'Title').html(title);\n    $(modalId + 'Body').html(body);\n    if (actionButton === '') {\n        $(modalId + 'ButtonAction').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonAction').removeClass('hidden');\n        $(modalId + 'ButtonAction').html(actionButton);\n    }\n    if (closeButton === '') {\n        $(modalId + 'ButtonClose').addClass('hidden');\n    } else {\n        $(modalId + 'ButtonClose').removeClass('hidden');\n        $(modalId + 'ButtonClose').html(closeButton);\n    }\n    if (xlSize === true) {\n        $(modalId + ' div:first').addClass('modal-xl');\n    } else {\n        $(modalId + ' div:first').removeClass('modal-xl');\n    }\n    if (warningModal === true) {\n        $(modalId + ':eq(1)').addClass('bg-warning');\n    } else {\n        $(modalId + ':eq(1)').removeClass('bg-warning');\n    }\n    if (closeCross === false) {\n        $(modalId + 'CrossClose').addClass('hidden');\n    } else {\n        $(modalId + 'CrossClose').removeClass('hidden');\n    }\n    $(modalId).modal({\n        backdrop : 'static',\n        keyboard : false,\n        show: true,\n        focus: true\n    });\n    $(modalId).modal('handleUpdate');\n}\n\n/**\n * Sanitize a string\n * \n * @param {string} str  The string\n */\nfunction htmlEncode(str){\n    return String(str).replace(/[^\\w. ]/gi, function(c){\n        return '&#'+c.charCodeAt(0)+';';\n    });\n}\n\n/* Extend String object with method to encode multi-byte string to utf8\n * - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n * - note utf8Encode is an identity function with 7-bit ascii strings, but not with 8-bit strings;\n * - utf8Encode('x') = 'x', but utf8Encode('\u00e7a') = '\u00c3\u00a7a', and utf8Encode('\u00c3\u00a7a') = '\u00c3\u0083\u00c2\u00a7a'*/\nif (typeof String.prototype.utf8Encode == 'undefined') {\n    String.prototype.utf8Encode = function() {\n        return unescape( encodeURIComponent( this ) );\n    };\n}\n\n/* Extend String object with method to decode utf8 string to multi-byte */\nif (typeof String.prototype.utf8Decode == 'undefined') {\n    String.prototype.utf8Decode = function() {\n        try {\n            return decodeURIComponent( escape( this ) );\n        } catch (e) {\n            return this; // invalid UTF-8? return as-is\n        }\n    };\n}\n\nfunction simplePurifier(\n    text,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false\n) \n{\n    return sanitizeDom(\n        DOMPurify.sanitize(\n            text\n                .replaceAll('&lt;', '<')\n                .replaceAll('&#x3C;', '<')\n                .replaceAll('&#x3c;', '<')\n                .replaceAll('&#60;', '<')\n                .replaceAll('&gt;', '>')\n                .replaceAll('&#x3E;', '>')\n                .replaceAll('&#x3e;', '>')\n                .replaceAll('&#62;', '>')\n                .replaceAll('&amp;', '&')\n                .replaceAll('&#38;', '&')\n                .replaceAll('&#x26;', '&')\n                .replaceAll('&quot;', '\"')\n                .replaceAll('&#34;;', '\"')\n                .replaceAll('&#x22;', '\"')\n                .replaceAll('&#39;', \"'\"),\n            {USE_PROFILES: {html:bHtml, svg:bSvg, svgFilters: bSvgFilters}}\n        )\n    );\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @param {*} text \n * @returns bool||string\n */\nfunction fieldDomPurifier(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    text = ''\n)\n{\n    if (field === undefined ||field === '') {\n        return false;\n    }\n    let string = '';\n    text = (text === '') ? $(field).val() : text;\n\n    // Purify string\n    string = simplePurifier(text, bHtml, bSvg, bSvgFilters);\n    \n    // Clear field if string is empty and warn user\n    if (string === '' && text !== '') {\n        $(field).val('');\n        return false;\n    }\n\n    return string;\n}\n\n/**\n * Permits to get all fields of a class and purify them\n * @param {*} elementClass \n * @returns array\n */\nfunction fieldDomPurifierLoop(elementClass)\n{\n    let purifyStop = false,\n        arrFields = [];\n    $.each($(elementClass), function(index, element) {\n        purifiedField = fieldDomPurifier(\n            '#' + $(element).attr('id'), \n            $(element).hasClass('purifyHtml') === true ? true : false,\n            $(element).hasClass('purifySvg') === true ? true : false,\n            $(element).hasClass('purifySvgFilter') === true ? true : false,\n            typeof $(element).data('purify-text') !== 'undefined' ? $(element).data('purify-text') : ''\n        );\n\n        if (purifiedField === false) {\n            // Label is empty\n            toastr.remove();\n            toastr.warning(\n                'XSS attempt detected. Please remove all special characters from your input.',\n                'Error', {\n                    timeOut: 5000,\n                    progressBar: true\n                }\n            );\n            $('#' + $(element).attr('id')).focus();\n            purifyStop = true;\n            return {\n                'purifyStop' : purifyStop,\n                'arrFields' : arrFields\n            };\n        } else {\n            $(element).val(purifiedField);\n            if (typeof $(element).data('field') !== 'undefined') {\n                arrFields[$(element).data('field')] = purifiedField;\n            } else if (typeof $(element).data('field-name') !== 'undefined') {\n                arrFields[$(element).data('field-name')] = purifiedField;\n            }\n        }\n    });\n    \n    // return\n    return {\n        'purifyStop' : purifyStop,\n        'arrFields' : arrFields\n    };\n}\n\n/**\n * Permits to purify the content of a string using domPurify\n * @param {*} field \n * @param {*} bHtml \n * @param {*} bSvg \n * @param {*} bSvgFilters \n * @returns bool||string\n */\nfunction fieldDomPurifierWithWarning(\n    field,\n    bHtml = false,\n    bSvg = false,\n    bSvgFilters = false,\n    bSetting = false,\n)\n{\n    if (field === undefined || field === '') {\n        return false;\n    }\n    if ($(field).val() === '') {\n        return '';\n    }\n    let string = '',\n        currentString = $(field).val();\n\n    // if bSetting is true, we use the setting value\n    // remove any closing ', string that could corrupt the setting\n    if (bSetting === true) {\n        currentString = currentString.replace(/',/g, '');\n    }\n\n    // Purify string\n    string = simplePurifier(\n        sanitizeDom(currentString),\n        bHtml,\n        bSvg,\n        bSvgFilters\n    );\n    \n    // Clear field if string is empty and warn user\n    if (string === '') {\n        toastr.remove();\n        toastr.warning(\n            'XSS attempt detected. Please remove all special characters from your input.',\n            'Error', {\n                timeOut: 5000,\n                progressBar: true\n            }\n        );\n        $(field).focus();\n        return false;\n    }\n\n    return string;\n}\n\nconst sanitizeDom = (str) => {\n    const div = document.createElement('div');\n    div.textContent = str;\n    newString = div.innerHTML;\n    div.remove();\n    return newString;\n}", "<?php\n\ndeclare(strict_types=1);\n\n/**\n * Teampass - a collaborative passwords manager.\n * ---\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * ---\n *\n * @project   Teampass\n * @file      folders.js.php\n * ---\n *\n * @author    Nils Laumaill\u00e9 (nils@teampass.net)\n *\n * @copyright 2009-2023 Teampass.net\n *\n * @license   https://spdx.org/licenses/GPL-3.0-only.html#licenseText GPL-3.0\n * ---\n *\n * @see       https://www.teampass.net\n */\n\nif (\n    isset($_SESSION['CPM']) === false || $_SESSION['CPM'] !== 1\n    || isset($_SESSION['user_id']) === false || empty($_SESSION['user_id']) === true\n    || isset($_SESSION['key']) === false || empty($_SESSION['key']) === true\n) {\n    die('Hacking attempt...');\n}\n\n// Load config\nif (file_exists('../includes/config/tp.config.php') === true) {\n    include_once '../includes/config/tp.config.php';\n} elseif (file_exists('./includes/config/tp.config.php') === true) {\n    include_once './includes/config/tp.config.php';\n} else {\n    throw new Exception('Error file \"/includes/config/tp.config.php\" not exists', 1);\n}\n\n/* do checks */\nrequire_once $SETTINGS['cpassman_dir'] . '/sources/checks.php';\nif (checkUser($_SESSION['user_id'], $_SESSION['key'], 'folders', $SETTINGS) === false) {\n    $_SESSION['error']['code'] = ERR_NOT_ALLOWED;\n    //not allowed page\n    include $SETTINGS['cpassman_dir'] . '/error.php';\n    exit;\n}\n?>\n\n\n<script type='text/javascript'>\n    //<![CDATA[\n\n    // Clear\n    $('#folders-search').val('');\n\n    buildTable();\n\n    browserSession(\n        'init',\n        'teampassApplication', {\n            foldersSelect: '',\n            complexityOptions: '',\n        }\n    );\n\n    // Prepare iCheck format for checkboxes\n    $('input[type=\"checkbox\"].form-check-input').iCheck({\n        checkboxClass: 'icheckbox_flat-blue',\n    });\n\n    $('input[type=\"checkbox\"].form-check-red-input').iCheck({\n        checkboxClass: 'icheckbox_flat-red',\n    });\n\n    // Prepare buttons\n    var deletionList = [];\n    $('.tp-action').click(function() {\n        if ($(this).data('action') === 'new') {\n            //--- NEW FOLDER FORM\n            // Prepare form\n            $('.form-check-input').iCheck('uncheck');\n            $('.clear-me').val('');\n            $('#new-parent').val('na').change();\n            $('#new-minimal-complexity').val(0).change();\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-new').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n            $('#new-title').focus();\n\n        } else if ($(this).data('action') === 'new-submit') {\n            //--- SAVE NEW FOLDER\n\n            // Sanitize text fields\n            purifyRes = fieldDomPurifierLoop('#folder-new .purify');\n            if (purifyRes.purifyStop === true) {\n                // if purify failed, stop\n                return false;\n            }\n\n            // Prepare data\n            var data = {\n                'title': purifyRes.arrFields['title'],\n                'parentId': parseInt($('#new-parent').val()),\n                'complexity': parseInt($('#new-complexity').val()),\n                'accessRight': $('#new-access-right').val(),\n                'renewalPeriod': $('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val()),\n                'addRestriction': $('#new-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#new-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': purifyRes.arrFields['icon'],\n                'iconSelected': purifyRes.arrFields['iconSelected'],\n            }\n            console.log(data)\n            return false;\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'add_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n\n                        // Add new folder to the list 'new-parent'\n                        // Launch action\n                        $.post(\n                            'sources/folders.queries.php', {\n                                type: 'refresh_folders_list',\n                                key: '<?php echo $_SESSION['key']; ?>'\n                            },\n                            function(data) { //decrypt data\n                                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n                                console.log(data);\n\n                                // prepare options list\n                                var prev_level = 0,\n                                    droplist = '';\n\n                                $(data.subfolders).each(function(i, folder) {\n                                    droplist += '<option value=\"' + folder['id'] + '\">' +\n                                        folder['label'] +\n                                        folder['path'] +\n                                        '</option>';\n                                });\n\n                                $('#new-parent')\n                                    .empty()\n                                    .append(droplist);\n                            }\n                        );\n\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'cancel') {\n            //--- NEW FORM CANCEL\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n        } else if ($(this).data('action') === 'delete') {\n            //--- DELETE FORM SHOW\n            if ($('#table-folders input[type=checkbox]:checked').length === 0) {\n                toastr.remove();\n                toastr.warning(\n                    '<?php echo langHdl('you_need_to_select_at_least_one_folder'); ?>',\n                    '', {\n                        timeOut: 5000,\n                        progressBar: true\n                    }\n                );\n                return false;\n            }\n\n            // Prepare\n            $('#delete-confirm').iCheck('uncheck');\n\n            // Build list\n            var selectedFolders = '<ul>';\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders += '<li>' + $('#folder-' + $(this).data('id')).text() + '</li>';\n            });\n            $('#delete-list').html(selectedFolders + '</ul>');\n\n\n            // Show\n            $('.form').addClass('hidden');\n            $('#folder-delete').removeClass('hidden');\n            $('#folders-list').addClass('hidden');\n\n        } else if ($(this).data('action') === 'delete-submit') {\n            console.log('delete-submit')\n            //--- DELETE FOLDERS\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Get list of selected folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Prepare data\n            var data = {\n                'selectedFolders': selectedFolders,\n            }\n\n            console.log(data)\n\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'delete_folders',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) { //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        // refresh\n                        buildTable();\n\n                        // Show list\n                        $('.form').addClass('hidden');\n                        $('#folders-list').removeClass('hidden');\n\n                        // OK\n                        toastr.remove();\n                        toastr.success(\n                            '<?php echo langHdl('done'); ?>',\n                            '', {\n                                timeOut: 1000\n                            }\n                        );\n                    }\n                }\n            );\n\n        } else if ($(this).data('action') === 'refresh') {\n            //--- REFRESH FOLDERS LIST\n            $('.form').addClass('hidden');\n            $('#folders-list').removeClass('hidden');\n\n            // Build matrix\n            buildTable();\n        }\n    });\n\n    /**\n     * Handle delete button status\n     */\n    $(document).on('ifChecked', '#delete-confirm', function() {\n        $('#delete-submit').removeClass('disabled');\n    });\n    $(document).on('ifUnchecked', '#delete-confirm', function() {\n        $('#delete-submit').addClass('disabled');\n    });\n\n\n    /**\n     * Undocumented function\n     *\n     * @return void\n     */\n    function buildTable() {\n        // Clear\n        $('#table-folders > tbody').html('');\n\n        // Show spinner\n        toastr.remove();\n        toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n        // Build matrix\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'build_matrix',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) {\n                data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                console.log(data);\n                if (data.error !== false) {\n                    // Show error\n                    toastr.remove();\n                    toastr.error(\n                        data.message,\n                        '<?php echo langHdl('error'); ?>', {\n                            timeOut: 5000,\n                            progressBar: true\n                        }\n                    );\n                } else {\n                    // Build html\n                    var newHtml = '',\n                        ident = '',\n                        path = '',\n                        columns = '',\n                        rowCounter = 0,\n                        path = '',\n                        parentsClass = '',\n                        max_folder_depth = 0,\n                        foldersSelect = '<option value=\"0\"><?php echo langHdl('root'); ?></option>';\n\n                    $(data.matrix).each(function(i, value) {\n                        // List of parents\n                        parentsClass = '';\n                        $(value.parents).each(function(i, id) {\n                            parentsClass += 'p' + id + ' ';\n                        });\n\n                        // Row\n                        columns += '<tr data-id=\"' + value.id + '\" data-level=\"' + value.level + '\" class=\"' + parentsClass + '\"><td>';\n\n                        // Column 1\n                        if ((value.parentId === 0 &&\n                                (data.userIsAdmin === 1 || data.userCanCreateRootFolder === 1)) ||\n                            value.parentId !== 0\n                        ) {\n                            columns += '<input type=\"checkbox\" class=\"checkbox-folder\" id=\"cb-' + value.id + '\" data-id=\"' + value.id + '\">';\n\n                            if (value.numOfChildren > 0) {\n                                columns += '<i class=\"fas fa-folder-minus infotip ml-2 pointer icon-collapse\" data-id=\"' + value.id + '\" title=\"<?php echo langHdl('collapse'); ?>\"></i>';\n                            }\n                        }\n                        columns += '</td>';\n\n                        // Column 2\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\">' +\n                            '<span id=\"folder-' + value.id + '\" data-id=\"' + value.id + '\" class=\"infotip folder-name\" data-html=\"true\" title=\"<?php echo langHdl('id'); ?>: ' + value.id + '<br><?php echo langHdl('level'); ?>: ' + value.level + '<br><?php echo langHdl('nb_items'); ?>: ' + value.nbItems + '\">' + value.title + '</span></td>';\n\n\n                        // Column 3\n                        path = '';\n                        $(value.path).each(function(i, folder) {\n                            if (path === '') {\n                                path = folder;\n                            } else {\n                                path += '<i class=\"fas fa-angle-right fa-sm ml-1 mr-1\"></i>' + folder;\n                            }\n                        });\n                        columns += '<td class=\"modify pointer\" min-width=\"200px\" data-value=\"' + value.parentId + '\">' +\n                            '<small class=\"text-muted\">' + path + '</small></td>';\n\n\n                        // Column 4\n                        columns += '<td class=\"modify pointer text-center\">';\n                        if (value.folderComplexity.value !== undefined) {\n                            columns += '<i class=\"' + value.folderComplexity.class + ' infotip\" data-value=\"' + value.folderComplexity.value + '\" title=\"' + value.folderComplexity.text + '\"></i>';\n                        } else {\n                            columns += '<i class=\"fas fa-exclamation-triangle text-danger infotip\" data-value=\"\" title=\"<?php echo langHdl('no_value_defined_please_fix'); ?>\"></i>';\n                        }\n                        columns += '</td>';\n\n\n                        // Column 5\n                        columns += '<td class=\"modify pointer text-center\">' + value.renewalPeriod + '</td>';\n\n\n                        // Column 6\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.add_is_blocked + '\">';\n                        if (value.add_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column 7\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.edit_is_blocked + '\">';\n                        if (value.edit_is_blocked === 1) {\n                            columns += '<i class=\"fa fa-toggle-on text-info\"></i>';\n                        } else {\n                            columns += '<i class=\"fa fa-toggle-off\"></i>';\n                        }\n                        columns += '</td>';\n\n                        // Column \n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.icon + '\"><i class=\"' + value.icon + '\"></td>';\n\n                        // Column 9\n                        columns += '<td class=\"modify pointer text-center\" data-value=\"' + value.iconSelected + '\">';\n                        if (value.iconSelected !== \"\") {\n                            columns += '<i class=\"' + value.iconSelected + '\">';\n                        }\n                        columns += '</td></tr>';\n\n\n                        // Folder Select\n                        foldersSelect += '<option value=\"' + value.id + '\">' + value.title + '</option>';\n\n                        // Max depth\n                        if (parseInt(value.level) > max_folder_depth) {\n                            max_folder_depth = parseInt(value.level);\n                        }\n\n                        rowCounter++;\n                    });\n\n                    // Show result\n                    $('#table-folders > tbody').html(columns);\n\n                    //iCheck for checkbox and radio inputs\n                    $('#table-folders input[type=\"checkbox\"]').iCheck({\n                        checkboxClass: 'icheckbox_flat-blue'\n                    });\n\n                    $('.infotip').tooltip();\n\n                    // store list of folders\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.foldersSelect = foldersSelect;\n                        }\n                    );\n\n                    // store list of Complexity\n                    complexity = '';\n                    $(data.fullComplexity).each(function(i, option) {\n                        complexity += '<option value=\"' + option.value + '\">' + option.text + '</option>';\n                    });\n\n                    store.update(\n                        'teampassApplication',\n                        function(teampassApplication) {\n                            teampassApplication.complexityOptions = complexity;\n                        }\n                    );\n\n                    // Adapt select\n                    $('#folders-depth').empty();\n                    $('#folders-depth').append('<option value=\"all\"><?php echo langHdl('all'); ?></option>');\n                    for (x = 1; x < max_folder_depth; x++) {\n                        $('#folders-depth').append('<option value=\"' + x + '\">' + x + '</option>');\n                    }\n                    $('#folders-depth').val('all').change();\n\n                    // Inform user\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            }\n        );\n    }\n\n\n    /**\n     * Build list of folders\n     */\n    function refreshFoldersList() {\n        // Launch action\n        $.post(\n            'sources/folders.queries.php', {\n                type: 'select_sub_folders',\n                key: '<?php echo $_SESSION['key']; ?>'\n            },\n            function(data) { //decrypt data\n                data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n            }\n        );\n    }\n\n\n    /**\n     * Handle option when role is displayed\n     */\n    $(document).on('change', '#folders-depth', function() {\n        if ($('#folders-depth').val() === 'all') {\n            $('tr').removeClass('hidden');\n        } else {\n            $('tr').filter(function() {\n                if ($(this).data('level') <= $('#folders-depth').val()) {\n                    $(this).removeClass('hidden');\n                } else {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n    });\n\n    /**\n     * Handle search criteria\n     */\n    $('#folders-search').on('keyup', function() {\n        var criteria = $(this).val();\n        $('.folder-name').filter(function() {\n            if ($(this).text().toLowerCase().indexOf(criteria) !== -1) {\n                $(this).closest('tr').removeClass('hidden');\n            } else {\n                $(this).closest('tr').addClass('hidden');\n            }\n        });\n    });\n\n    /**\n     * Check / Uncheck children folders\n     */\n    var operationOngoin = false;\n    $(document).on('ifChecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('in_progress'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    console.log(data)\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('check');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n    $(document).on('ifUnchecked', '.checkbox-folder', function() {\n        if (operationOngoin === false) {\n            operationOngoin = true;\n\n            // Show spinner\n            toastr.remove();\n            toastr.info('<?php echo langHdl('loading_data'); ?> ... <i class=\"fas fa-circle-notch fa-spin fa-2x\"></i>');\n\n            // Show selection of folders\n            var selected_cb = $(this),\n                id = $(this).data('id');\n\n            // Now get subfolders\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'select_sub_folders',\n                    id: id,\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    data = prepareExchangedData(data, 'decode', '<?php echo $_SESSION['key']; ?>');\n                    // check/uncheck checkbox\n                    if (data.subfolders !== '') {\n                        $.each(JSON.parse(data.subfolders), function(i, value) {\n                            $('#cb-' + value).iCheck('uncheck');\n                        });\n                    }\n                    operationOngoin = false;\n\n                    toastr.remove();\n                    toastr.success(\n                        '<?php echo langHdl('done'); ?>',\n                        '', {\n                            timeOut: 1000\n                        }\n                    );\n                }\n            );\n        }\n    });\n\n\n    /**\n     * Handle the form for folder edit\n     */\n    var currentFolderEdited = '';\n    $('#table-folders').on('click', '.modify', function() {\n        // Manage edition of rights card\n        if ((currentFolderEdited !== '' && currentFolderEdited !== $(this).data('id')) ||\n            $('.temp-row').length > 0\n        ) {\n            $('.temp-row').remove();\n        } else if (currentFolderEdited === $(this).data('id')) {\n            return false;\n        }\n\n        // Init\n        var currentRow = $(this).closest('tr'),\n            folderTitle = $(currentRow).find(\"td:eq(1)\").text(),\n            folderParent = $(currentRow).find(\"td:eq(2)\").data('value'),\n            folderComplexity = $(currentRow).find(\"td:eq(3) > i\").data('value'),\n            folderRenewal = $(currentRow).find(\"td:eq(4)\").text(),\n            folderAddRestriction = $(currentRow).find(\"td:eq(5)\").data('value'),\n            folderEditRestriction = $(currentRow).find(\"td:eq(6)\").data('value'),\n            folderIcon = $(currentRow).find(\"td:eq(7)\").data('value'),\n            folderIconSelection = $(currentRow).find(\"td:eq(8)\").data('value');\n        currentFolderEdited = currentRow.data('id');\n\n\n        // Now show\n        $(currentRow).after(\n            '<tr class=\"temp-row\"><td colspan=\"' + $(currentRow).children('td').length + '\">' +\n            '<div class=\"card card-warning card-outline form\">' +\n            '<div class=\"card-body\">' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-title\"><?php echo langHdl('label'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me purify\" id=\"folder-edit-title\" data-field=\"title\" value=\"' + folderTitle + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-parent\"><?php echo langHdl('parent'); ?></label><br>' +\n            '<select id=\"folder-edit-parent\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').foldersSelect + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-complexity\"><?php echo langHdl('password_minimal_complexity_target'); ?></label><br>' +\n            '<select id=\"folder-edit-complexity\" class=\"form-control form-item-control select2 clear-me\">' + store.get('teampassApplication').complexityOptions + '</select>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label for=\"folder-edit-renewal\"><?php echo langHdl('renewal_delay'); ?></label>' +\n            '<input type=\"text\" class=\"form-control clear-me\" id=\"folder-edit-renewal\" value=\"' + folderRenewal + '\">' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control purify\" id=\"folder-edit-icon\" data-field=\"icon\" value=\"'+folderIcon+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\">' +\n            '<label><?php echo langHdl('icon_on_selection'); ?></label>' +\n            '<input type=\"text\" class=\"form-control form-folder-control purify\" id=\"folder-edit-icon-selected\" data-field=\"iconSelected\" value=\"'+folderIconSelection+'\">' +\n            '<small class=\"form-text text-muted\">' +\n            '<?php echo langHdl('fontawesome_icon_tip'); ?><a href=\"<?php echo FONTAWESOME_URL;?>\" target=\"_blank\"><i class=\"fas fa-external-link-alt ml-1\"></i></a>' +\n            '</small>' +\n            '</div>' +\n            '<div class=\"form-group ml-2\" id=\"folder-rights-tuned\">' +\n            '<label><?php echo langHdl('special'); ?></label>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-add-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-add-restriction\"><?php echo langHdl('create_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '<div class=\"form-check\">' +\n            '<input type=\"checkbox\" class=\"form-check-input form-control\" id=\"folder-edit-edit-restriction\">' +\n            '<label class=\"form-check-label pointer ml-2\" for=\"folder-edit-edit-restriction\"><?php echo langHdl('edit_without_password_minimal_complexity_target'); ?></label>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '<div class=\"card-footer\">' +\n            '<button type=\"button\" class=\"btn btn-warning tp-action-edit\" data-action=\"submit\" data-id=\"' + currentFolderEdited + '\"><?php echo langHdl('submit'); ?></button>' +\n            '<button type=\"button\" class=\"btn btn-default float-right tp-action-edit\" data-action=\"cancel\"><?php echo langHdl('cancel'); ?></button>' +\n            '</div>' +\n            '</div>' +\n            '</td></tr>'\n        );\n\n        // Prepare iCheck format for checkboxes\n        $('input[type=\"checkbox\"].form-check-input, input[type=\"radio\"].form-radio-input').iCheck({\n            radioClass: 'iradio_flat-orange',\n            checkboxClass: 'icheckbox_flat-orange',\n        });\n\n        $('.select2').select2({\n            language: '<?php echo $_SESSION['user_language_code']; ?>'\n        });\n\n        // Manage status of the checkboxes\n        if (folderAddRestriction === 0) {\n            $('#folder-edit-add-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-add-restriction').iCheck('check');\n        }\n        if (folderEditRestriction === 0) {\n            $('#folder-edit-edit-restriction').iCheck('uncheck');\n        } else {\n            $('#folder-edit-edit-restriction').iCheck('check');\n        }\n\n        // Prepare select2\n        $('#folder-edit-parent').val(folderParent).change();\n        $('#folder-edit-complexity').val(folderComplexity).change();\n\n        currentFolderEdited = '';\n    });\n\n\n    $(document).on('click', '.tp-action-edit', function() {\n        if ($(this).data('action') === 'cancel') {\n            $('.temp-row').remove();\n        } else if ($(this).data('action') === 'submit') {\n            // STORE CHANGES\n            var currentFolderId = $(this).data('id');\n\n            // loop on all checked folders\n            var selectedFolders = [];\n            $(\"input:checkbox[class=checkbox-folder]:checked\").each(function() {\n                selectedFolders.push($(this).data('id'));\n            });\n\n            // Sanitize text fields\n            purifyRes = fieldDomPurifierLoop('#table-folders .purify');\n            if (purifyRes.purifyStop === true) {\n                // if purify failed, stop\n                return false;\n            }\n\n            // Prepare data\n            var data = {\n                'id': currentFolderId,\n                'title': purifyRes.arrFields['title'],    //$('#folder-edit-title').val(),\n                'parentId': $('#folder-edit-parent').val(),\n                'complexity': $('#folder-edit-complexity').val(),\n                'renewalPeriod': $('#new-renewal').val() === '' ? 0 : parseInt($('#new-renewal').val()),\n                'addRestriction': $('#folder-edit-add-restriction').prop(\"checked\") === true ? 1 : 0,\n                'editRestriction': $('#folder-edit-edit-restriction').prop(\"checked\") === true ? 1 : 0,\n                'icon': purifyRes.arrFields['icon'],    //$('#folder-edit-icon').val(),\n                'iconSelected': purifyRes.arrFields['iconSelected'],    //$('#folder-edit-icon-selected').val(),\n            }\n            console.log(data)\n            // Launch action\n            $.post(\n                'sources/folders.queries.php', {\n                    type: 'update_folder',\n                    data: prepareExchangedData(JSON.stringify(data), \"encode\", \"<?php echo $_SESSION['key']; ?>\"),\n                    key: '<?php echo $_SESSION['key']; ?>'\n                },\n                function(data) {\n                    //decrypt data\n                    data = decodeQueryReturn(data, '<?php echo $_SESSION['key']; ?>');\n\n                    if (data.error === true) {\n                        // ERROR\n                        toastr.remove();\n                        toastr.error(\n                            data.message,\n                            '<?php echo langHdl('error'); ?>', {\n                                timeOut: 5000,\n                                progressBar: true\n                            }\n                        );\n                    } else {\n                        buildTable();\n                        /* TODO\n                        if (data.info_parent_changed === 0) {\n                            // Update\n                            var row = $('tr[data-id=\"' + currentFolderId + '\"]');\n                            console.log(row)\n\n                            $(row).find()\n\n                        } else {\n                            buildTable();\n                        }*/\n                    }\n                }\n            );\n        }\n    });\n\n    // Close on escape key\n    $(document).keyup(function(e) {\n        if (e.keyCode === 27) {\n            if ($('.temp-row').length > 0) {\n                $('.temp-row').remove();\n            }\n        }\n    });\n\n\n    // Manage collapse/expend\n    $(document).on('click', '.icon-collapse', function() {\n        if ($(this).hasClass('fa-folder-minus') === true) {\n            $(this)\n                .removeClass('fa-folder-minus')\n                .addClass('fa-folder-plus text-primary');\n\n            $('.p' + $(this).data('id')).addClass('hidden');\n        } else {\n            $(this)\n                .removeClass('fa-folder-plus  text-primary')\n                .addClass('fa-folder-minus');\n            $('.p' + $(this).data('id')).removeClass('hidden');\n        }\n    });\n\n\n    //]]>\n</script>\n"], "filenames": ["includes/js/functions.js", "pages/folders.js.php"], "buggy_code_start_loc": [400, 119], "buggy_code_end_loc": [416, 119], "fixing_code_start_loc": [400, 120], "fixing_code_end_loc": [420, 121], "type": "CWE-116", "message": "Improper Encoding or Escaping of Output in GitHub repository nilsteampassnet/teampass prior to 3.0.10.", "other": {"cve": {"id": "CVE-2023-3552", "sourceIdentifier": "security@huntr.dev", "published": "2023-07-08T09:15:43.180", "lastModified": "2023-07-14T14:39:03.633", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Encoding or Escaping of Output in GitHub repository nilsteampassnet/teampass prior to 3.0.10."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 7.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.3, "impactScore": 4.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-116"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-116"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:teampass:teampass:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.0.10", "matchCriteriaId": "6C3D28BC-A4B7-45E4-8B54-0F13DFB41437"}]}]}], "references": [{"url": "https://github.com/nilsteampassnet/teampass/commit/8acb4dacc2d008a4186a4e13cc143e978f113955", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/aeb2f43f-0602-4ac6-9685-273e87ff4ded", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/nilsteampassnet/teampass/commit/8acb4dacc2d008a4186a4e13cc143e978f113955"}}