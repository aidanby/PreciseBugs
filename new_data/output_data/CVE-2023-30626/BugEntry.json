{"buggy_code": ["using System;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace MediaBrowser.Controller.ClientEvent\n{\n    /// <inheritdoc />\n    public class ClientEventLogger : IClientEventLogger\n    {\n        private readonly IServerApplicationPaths _applicationPaths;\n\n        /// <summary>\n        /// Initializes a new instance of the <see cref=\"ClientEventLogger\"/> class.\n        /// </summary>\n        /// <param name=\"applicationPaths\">Instance of the <see cref=\"IServerApplicationPaths\"/> interface.</param>\n        public ClientEventLogger(IServerApplicationPaths applicationPaths)\n        {\n            _applicationPaths = applicationPaths;\n        }\n\n        /// <inheritdoc />\n        public async Task<string> WriteDocumentAsync(string clientName, string clientVersion, Stream fileContents)\n        {\n            var fileName = $\"upload_{clientName}_{clientVersion}_{DateTime.UtcNow:yyyyMMddHHmmss}_{Guid.NewGuid():N}.log\";\n            var logFilePath = Path.Combine(_applicationPaths.LogDirectoryPath, fileName);\n            await using var fileStream = new FileStream(logFilePath, FileMode.CreateNew, FileAccess.Write, FileShare.None);\n            await fileContents.CopyToAsync(fileStream).ConfigureAwait(false);\n            return fileName;\n        }\n    }\n}\n"], "fixing_code": ["using System;\nusing System.IO;\nusing System.Threading.Tasks;\n\nnamespace MediaBrowser.Controller.ClientEvent\n{\n    /// <inheritdoc />\n    public class ClientEventLogger : IClientEventLogger\n    {\n        private readonly IServerApplicationPaths _applicationPaths;\n\n        /// <summary>\n        /// Initializes a new instance of the <see cref=\"ClientEventLogger\"/> class.\n        /// </summary>\n        /// <param name=\"applicationPaths\">Instance of the <see cref=\"IServerApplicationPaths\"/> interface.</param>\n        public ClientEventLogger(IServerApplicationPaths applicationPaths)\n        {\n            _applicationPaths = applicationPaths;\n        }\n\n        /// <inheritdoc />\n        public async Task<string> WriteDocumentAsync(string clientName, string clientVersion, Stream fileContents)\n        {\n            var fileName = $\"upload_{clientName}_{clientVersion}_{DateTime.UtcNow:yyyyMMddHHmmss}_{Guid.NewGuid():N}.log\";\n            var logFilePath = Path.Combine(_applicationPaths.LogDirectoryPath, fileName);\n            if (!Path.GetFullPath(logFilePath).StartsWith(_applicationPaths.LogDirectoryPath, StringComparison.Ordinal))\n            {\n                throw new ArgumentException(\"Path resolved to filename not in log directory\");\n            }\n\n            await using var fileStream = new FileStream(logFilePath, FileMode.CreateNew, FileAccess.Write, FileShare.None);\n            await fileContents.CopyToAsync(fileStream).ConfigureAwait(false);\n            return fileName;\n        }\n    }\n}\n"], "filenames": ["MediaBrowser.Controller/ClientEvent/ClientEventLogger.cs"], "buggy_code_start_loc": [25], "buggy_code_end_loc": [25], "fixing_code_start_loc": [26], "fixing_code_end_loc": [31], "type": "CWE-22", "message": "Jellyfin is a free-software media system. Versions starting with 10.8.0 and prior to 10.8.10 and prior have a directory traversal vulnerability inside the `ClientLogController`, specifically `/ClientLog/Document`. When combined with a cross-site scripting vulnerability (CVE-2023-30627), this can result in file write and arbitrary code execution. Version 10.8.10 has a patch for this issue. There are no known workarounds.", "other": {"cve": {"id": "CVE-2023-30626", "sourceIdentifier": "security-advisories@github.com", "published": "2023-04-24T21:15:09.687", "lastModified": "2023-05-04T14:09:25.893", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Jellyfin is a free-software media system. Versions starting with 10.8.0 and prior to 10.8.10 and prior have a directory traversal vulnerability inside the `ClientLogController`, specifically `/ClientLog/Document`. When combined with a cross-site scripting vulnerability (CVE-2023-30627), this can result in file write and arbitrary code execution. Version 10.8.10 has a patch for this issue. There are no known workarounds."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jellyfin:jellyfin:*:*:*:*:*:*:*:*", "versionStartIncluding": "10.8.0", "versionEndExcluding": "10.8.10", "matchCriteriaId": "F5C18A18-B001-405D-9787-509225E4E7D2"}]}]}], "references": [{"url": "https://github.com/jellyfin/jellyfin-web/security/advisories/GHSA-89hp-h43h-r5pq", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}, {"url": "https://github.com/jellyfin/jellyfin/blob/22d880662283980dec994cd7d35fe269613bfce3/Jellyfin.Api/Controllers/ClientLogController.cs#L44", "source": "security-advisories@github.com", "tags": ["Exploit", "Vendor Advisory"]}, {"url": "https://github.com/jellyfin/jellyfin/commit/82ad2633fdfb1c37a158057c7935f83e1129eda7", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/jellyfin/jellyfin/pull/5918", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/jellyfin/jellyfin/releases/tag/v10.8.10", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://github.com/jellyfin/jellyfin/security/advisories/GHSA-9p5f-5x8v-x65m", "source": "security-advisories@github.com", "tags": ["Exploit", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/jellyfin/jellyfin/commit/82ad2633fdfb1c37a158057c7935f83e1129eda7"}}