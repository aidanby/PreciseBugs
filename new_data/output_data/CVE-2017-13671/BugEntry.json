{"buggy_code": ["<?php\nApp::uses('AppHelper', 'View/Helper');\n\n//this helper simply replaces quotes between [QUOTE][/QUOTE] with div tags.\n// And now [thread][/thread], [event][/event], [link][/link], [code][/code]\n\n\n\tclass CommandHelper extends AppHelper {\n\t\tpublic function convertQuotes($string) {\n\t\t\t$string = str_ireplace('[QUOTE]', '<div class=\"quote\">', $string);\n\t\t\t$string = str_ireplace('[/QUOTE]', '</div>', $string);\n\t\t\t$string = preg_replace('%\\[event\\]\\s*(\\d*)\\s*\\[/event\\]%isU', '<a href=\"' . h(Configure::read('MISP.baseurl')). '/events/view/$1> Event $1</a>', $string);\n\t\t\t$string = preg_replace('%\\[thread\\]\\s*(\\d*)\\s*\\[/thread\\]%isU', '<a href=\"' . h(Configure::read('MISP.baseurl')). '/threads/view/$1> Thread $1</a>', $string);\n\t\t\t$string = preg_replace('%\\[link\\]\\s*(http|https|ftp|git|ftps)(.*)\\s*\\[/link\\]%isU', '<a href=\"$1$2\">$1$2</a>', $string);\n\t\t\t$string = preg_replace('%\\[code\\](.*)\\[/code\\]%isU', '<pre>$1</pre>', $string);\n\n\t\t\treturn $string;\n\t\t}\n\t}\n"], "fixing_code": ["<?php\nApp::uses('AppHelper', 'View/Helper');\n\n//this helper simply replaces quotes between [QUOTE][/QUOTE] with div tags.\n// And now [thread][/thread], [event][/event], [link][/link], [code][/code]\n\n\n\tclass CommandHelper extends AppHelper {\n\t\tvar $helpers = array('Html');\n\n\t\tprivate $__replacement;\n\n\t\tprivate function __buildReplacements() {\n\t\t\t$this->__replacement = array(\n\t\t\t\t'link' => array('type' => 'url', 'url' => '$1', 'text' => '$1'),\n\t\t\t\t'thread' => array('type' => 'url', 'url' => h(Configure::read('MISP.baseurl')). '/threads/view/$1', 'text' => ' Thread $1'),\n\t\t\t\t'event' => array('type' => 'url', 'url' => h(Configure::read('MISP.baseurl')). '/events/view/$1', 'text' => ' Event $1'),\n\t\t\t\t'code' => array('type' => 'replace', 'text' => '<pre>$1</pre>'),\n\t\t\t\t'quote' => array('type' => 'replace', 'text' => '<div class=\"quote\">$1</div>')\n\t\t\t);\n\t\t}\n\n\n\t\tpublic function convertQuotes($string) {\n\t\t\t$this->__buildReplacements();\n\t\t\tforeach ($this->__replacement as $trigger => $replacement) {\n\t\t\t\t$result = $this->__handleLinks($string, $trigger);\n\t\t\t\tif (!$result) return 'Malformed syntax.';\n\t\t\t}\n\t\t\treturn $string;\n\t\t}\n\n\t\tprivate function __handleLinks(&$string, $trigger) {\n\t\t\t$opening = preg_match('%\\[' . $trigger . '\\]%isU', $string, $opening_matches, PREG_OFFSET_CAPTURE);\n\t\t\t$closing = preg_match('%\\[/' . $trigger . '\\]%isU', $string, $closing_matches, PREG_OFFSET_CAPTURE);\n\t\t\t$opening_len = strlen($trigger) + 2;\n\t\t\t$closing_len = $opening_len + 1;\n\t\t\tif ((count($opening) !== count($closing))) return false;\n\t\t\t$pairs = array();\n\t\t\t$rearrangedTags = array();\n\t\t\tforeach ($opening_matches as $opening_tag) {\n\t\t\t\t$rearrangedTags[$opening_tag[1]] = 'open';\n\t\t\t}\n\t\t\tforeach ($closing_matches as $closing_tag) {\n\t\t\t\t$rearrangedTags[$closing_tag[1]] = 'close';\n\t\t\t}\n\t\t\tforeach ($opening_matches as $opening_tag) {\n\t\t\t\t$counter = 1;\n\t\t\t\tforeach ($rearrangedTags as $pos => $type) {\n\t\t\t\t\tif ($opening_tag[1] == $pos) continue;\n\t\t\t\t\tif ($type == 'close') $counter--;\n\t\t\t\t\telse $counter++;\n\t\t\t\t\tif ($counter == 0) {\n\t\t\t\t\t\t$pairs[] = array($opening_tag[1], $pos);\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tforeach ($pairs as $pair) {\n\t\t\t\t$temp = substr($string, 0, $pair[0]);\n\t\t\t\tif ($this->__replacement[$trigger]['type'] == 'url') {\n\t\t\t\t\t$data = substr($string, $pair[0] + $opening_len, $pair[1] - ($pair[0] + $opening_len));\n\t\t\t\t\tif (empty($data)) {\n\t\t\t\t\t\t$replacement = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!is_numeric($data) && ($trigger == 'event' || $trigger == 'thread')) {\n\t\t\t\t\t\t\t$replacement = '%MALFORMED URL%';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (filter_var(str_replace('$1', $data, $this->__replacement[$trigger]['url']), FILTER_VALIDATE_URL)) {\n\t\t\t\t\t\t\t\t$replacement = $this->Html->link(\n\t\t\t\t\t\t\t\t\tstr_replace('$1', $data, $this->__replacement[$trigger]['text']),\n\t\t\t\t\t\t\t\t\tstr_replace('$1', $data, $this->__replacement[$trigger]['url'])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$replacement = '%MALFORMED URL%';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$data = substr($string, $pair[0] + $opening_len, $pair[1] - ($pair[0] + $opening_len));\n\t\t\t\t\tif (empty($data)) {\n\t\t\t\t\t\t$replacement = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$replacement = str_replace('$1', $data, $this->__replacement[$trigger]['text']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$temp .= $replacement;\n\t\t\t\t$temp .= substr($string, $pair[1] + $closing_len, strlen($string));\n\t\t\t\t$string = $temp;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n"], "filenames": ["app/View/Helper/CommandHelper.php"], "buggy_code_start_loc": [8], "buggy_code_end_loc": [18], "fixing_code_start_loc": [9], "fixing_code_end_loc": [93], "type": "CWE-79", "message": "app/View/Helper/CommandHelper.php in MISP before 2.4.79 has persistent XSS via comments. It only impacts the users of the same instance because the comment field is not part of the MISP synchronisation.", "other": {"cve": {"id": "CVE-2017-13671", "sourceIdentifier": "cve@mitre.org", "published": "2017-08-24T19:29:00.250", "lastModified": "2017-09-05T18:56:33.737", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "app/View/Helper/CommandHelper.php in MISP before 2.4.79 has persistent XSS via comments. It only impacts the users of the same instance because the comment field is not part of the MISP synchronisation."}, {"lang": "es", "value": "app/View/Helper/CommandHelper.php en MISP en versiones anteriores a la 2.4.79 tiene XSS persistente mediante comentarios. S\u00f3lo afecta a los usuarios de la misma instancia, debido a que el campo comment no forma parte de la sincronizaci\u00f3n MISP."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:misp:misp:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.4.78", "matchCriteriaId": "9549DC6D-C254-47E7-8003-B022A67949DF"}]}]}], "references": [{"url": "http://www.securityfocus.com/bid/100533", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/MISP/MISP/commit/6eba658d4a648b41b357025d864c19a67412b8aa", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/MISP/MISP/commit/6eba658d4a648b41b357025d864c19a67412b8aa"}}