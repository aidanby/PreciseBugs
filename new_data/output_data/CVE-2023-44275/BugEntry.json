{"buggy_code": ["<?php\n\n/*\n * Copyright (C) 2014-2016 Deciso B.V.\n * Copyright (C) 2004-2012 Scott Ullrich <sullrich@gmail.com>\n * Copyright (C) 2003-2004 Manuel Kasper <mk@neon1.net>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nrequire_once('guiconfig.inc');\n\n// if no config entry found, initialize config entry\nconfig_read_array('widgets');\n\n$widgetCollection = array();\n\nif ($_SERVER['REQUEST_METHOD'] === 'GET') {\n    $pconfig = $config['widgets'];\n    // set default dashboard view\n    $pconfig['sequence'] = !empty($pconfig['sequence']) ? $pconfig['sequence'] : '';\n    $pconfig['column_count'] = !empty($pconfig['column_count']) ? $pconfig['column_count'] : 2;\n    // build list of widgets\n    $widgetSeqParts = explode(\",\", $pconfig['sequence']);\n    foreach (glob('/usr/local/www/widgets/widgets/*.widget.php') as $php_file) {\n        $widgetItem = array();\n        $widgetItem['name'] = basename($php_file, '.widget.php');\n        $widgetItem['display_name'] = ucwords(str_replace(\"_\", \" \", $widgetItem['name']));\n        $widgetItem['filename'] = $php_file;\n        $widgetItem['state'] = \"none\";\n        /// default sort order\n        $widgetItem['sortKey'] = $widgetItem['name'] == 'system_information' ? \"00000000\" : \"99999999\" . $widgetItem['name'];\n        foreach ($widgetSeqParts as $seqPart) {\n            $tmp = explode(':', $seqPart);\n            if (count($tmp) == 3 && explode('-', $tmp[0])[0] == $widgetItem['name']) {\n                $widgetItem['state'] = $tmp[2];\n                $widgetItem['sortKey'] = $tmp[1];\n            }\n        }\n        $widgetCollection[] = $widgetItem;\n    }\n    // sort widgets\n    usort($widgetCollection, function ($item1, $item2) {\n      return strcmp(strtolower($item1['sortKey']), strtolower($item2['sortKey']));\n    });\n} elseif ($_SERVER['REQUEST_METHOD'] === 'POST' && !empty($_POST['origin']) && $_POST['origin'] == 'dashboard') {\n    if (!empty($_POST['sequence'])) {\n        $config['widgets']['sequence'] = $_POST['sequence'];\n    } elseif (isset($config['widgets']['sequence'])) {\n        unset($config['widgets']['sequence']);\n    }\n    if (!empty($_POST['column_count'])) {\n        $config['widgets']['column_count'] = $_POST['column_count'];\n    } elseif(isset($config['widgets']['column_count'])) {\n        unset($config['widgets']['column_count']);\n    }\n    write_config('Widget configuration has been changed');\n    header(url_safe('Location: /index.php'));\n    exit;\n}\n\n// handle widget includes\nforeach (glob(\"/usr/local/www/widgets/include/*.inc\") as $filename) {\n    include($filename);\n}\n\n$product = product::getInstance();\n\ninclude(\"head.inc\");\n?>\n<body>\n<?php\ninclude(\"fbegin.inc\");?>\n\n<?php\n?>\n<?php\n  if (isset($config['trigger_initial_wizard']) || isset($_GET['wizard_done'])): ?>\n  <script>\n      $( document ).ready(function() {\n        $(\".page-content-head:first\").hide();\n      });\n  </script>\n  <header class=\"page-content-head\">\n    <div class=\"container-fluid\">\n<?php\n     if (isset($config['trigger_initial_wizard'])): ?>\n      <h1><?= gettext(\"Starting initial configuration!\") ?></h1>\n<?php\n     else: ?>\n      <h1><?= gettext(\"Finished initial configuration!\") ?></h1>\n<?php\n     endif ?>\n    </div>\n  </header>\n  <section class=\"page-content-main\">\n    <div class=\"container-fluid col-xs-12 col-sm-10 col-md-9\">\n      <div class=\"row\">\n        <section class=\"col-xs-12\">\n          <div class=\"content-box wizard\" style=\"padding: 20px;\">\n            <div class=\"table-responsive\">\n<?php if (file_exists(\"/usr/local/opnsense/www/themes/{$themename}/build/images/default-logo.svg\")): ?>\n              <img src=\" <?= cache_safe(\"/ui/themes/{$themename}/build/images/default-logo.svg\") ?>\" border=\"0\" alt=\"logo\" style=\"max-width:380px;\" />\n<?php else: ?>\n              <img src=\" <?= cache_safe(\"/ui/themes/{$themename}/build/images/default-logo.png\") ?>\" border=\"0\" alt=\"logo\" style=\"max-width:380px;\" />\n<?php endif ?>\n              <br />\n              <div class=\"content-box-main\" style=\"padding-bottom:0px;\">\n                <?php\n                    if (isset($config['trigger_initial_wizard'])) {\n                        echo '<p>' . sprintf(gettext('Welcome to %s!'), $product->name()) . \"</p>\\n\";\n                        echo '<p>' . gettext('One moment while we start the initial setup wizard.') . \"</p>\\n\";\n                        echo '<p class=\"__nomb\">' . gettext('To bypass the wizard, click on the logo in the upper left corner.') . \"</p>\\n\";\n                    } else {\n                        echo '<p>' . sprintf(gettext('Congratulations! %s is now configured.'), $product->name()) . \"</p>\\n\";\n                        echo '<p>' . sprintf(gettext(\n                            'Please consider donating to the project to help us with our overhead costs. ' .\n                            'See %sour website%s to donate or purchase available %s support services.'),\n                            '<a target=\"_new\" href=\"' . $product->website() . '\">', '</a>', $product->name()) . \"</p>\\n\";\n                        echo '<p class=\"__nomb\">' . sprintf(gettext('Click to %scontinue to the dashboard%s.'), '<a href=\"/\">', '</a>') . ' ';\n                        echo sprintf(gettext('Or click to %scheck for updates%s.'), '<a href=\"/ui/core/firmware#checkupdate\">', '</a>'). \"</p>\\n\";\n                    }\n                ?>\n              </div>\n            <div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </section>\n<?php\n     if (isset($config['trigger_initial_wizard'])): ?>\n  <meta http-equiv=\"refresh\" content=\"5;url=/wizard.php?xml=system\">\n<?php\n     endif ?>\n<?php\n  // normal dashboard\n  else:?>\n\n<script src=\"<?= cache_safe('/ui/js/jquery-sortable.js') ?>\"></script>\n<script>\n  function addWidget(selectedDiv) {\n      $('#'+selectedDiv).show();\n      $('#add_widget_'+selectedDiv).hide();\n      $('#'+selectedDiv+'-config').val('show');\n      showSave();\n  }\n\n  function configureWidget(selectedDiv) {\n      let selectIntLink = '#' + selectedDiv + \"-settings\";\n      if ($(selectIntLink).css('display') == \"none\") {\n          $(selectIntLink).show();\n      } else {\n          $(selectIntLink).hide();\n      }\n  }\n\n  function showWidget(selectedDiv,swapButtons) {\n      $('#'+selectedDiv+'-container').show();\n      $('#'+selectedDiv+'-min').show();\n      $('#'+selectedDiv+'-max').hide();\n      $('#'+selectedDiv+'-config').val('show');\n      showSave();\n  }\n\n  function minimizeWidget(selectedDiv, swapButtons) {\n      $('#'+selectedDiv+'-container').hide();\n      $('#'+selectedDiv+'-min').hide();\n      $('#'+selectedDiv+'-max').show();\n      $('#'+selectedDiv+'-config').val('hide');\n      showSave();\n  }\n\n  function closeWidget(selectedDiv) {\n      $('#'+selectedDiv).hide();\n      $('#'+selectedDiv+'-config').val('close');\n      showSave();\n  }\n\n  function showSave() {\n      $('#updatepref').show();\n  }\n\n  function updatePref() {\n      var widgetInfo = [];\n      var index = 0;\n      $('.widgetdiv').each(function(key) {\n          if ($(this).is(':visible')) {\n              // only capture visible widgets\n              var index_str = \"0000000\" + index;\n              index_str = index_str.substr(index_str.length-8);\n              let col_index = $(this).parent().attr(\"id\").split('_')[1];\n              widgetInfo.push($(this).attr('id')+'-container:'+index_str+'-'+col_index+':'+$('input[name='+$(this).attr('id')+'-config]').val());\n              index++;\n          }\n      });\n      $(\"#sequence\").val(widgetInfo.join(','));\n      $(\"#iform\").submit();\n      return false;\n  }\n\n  /**\n   * ajax update widget data, searches data-plugin attributes and use function in data-callback to update widget\n   */\n  function process_widget_data()\n  {\n      var plugins = [];\n      var callbacks = [];\n      // collect plugins and callbacks\n      $(\"[data-plugin]\").each(function(){\n          if (plugins.indexOf($(this).data('plugin')) < 0) {\n              plugins.push($(this).data('plugin'));\n          }\n          if ($(this).data('callback') != undefined) {\n              callbacks.push({'function' : $(this).data('callback'), 'plugin': $(this).data('plugin'), 'sender': $(this)});\n          }\n      });\n      // collect data for provided plugins\n      $.ajax(\"/widgets/api/get.php\",{type: 'get', cache: false, dataType: \"json\", data: {'load': plugins.join(',')}})\n        .done(function(response) {\n            callbacks.map( function(callback) {\n                try {\n                    if (response['data'][callback['plugin']] != undefined) {\n                        window[callback['function']](callback['sender'], response['data'][callback['plugin']]);\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n            });\n            // schedule next update\n            setTimeout('process_widget_data()', 5000);\n      });\n  }\n</script>\n\n<script>\n  $( document ).ready(function() {\n      // rearrange widgets to stored column\n      $(\".widgetdiv\").each(function(){\n          var widget = $(this);\n          widget.find('script').each(function(){\n              $(this).remove();\n          });\n          var container = $(this).parent();\n          var target_col = widget.data('sortkey').split('-')[1];\n          if (target_col != undefined) {\n              if (container.attr('id').split('_')[1] != target_col) {\n                  widget.remove().appendTo(\"#dashboard_\"+target_col);\n              }\n          } else {\n              // dashboard_colx (source) is not visible, move other items to col4\n              widget.remove().appendTo(\"#dashboard_col4\");\n          }\n      });\n\n      // show dashboard widgets after initial rendering\n      $(\"#dashboard_container\").show();\n\n      // trigger WidgetsReady event\n      $(\"#dashboard_container\").trigger(\"WidgetsReady\");\n\n      // sortable widgets\n      $(\".dashboard_grid_column\").sortable({\n        handle: '.widget-sort-handle',\n        group: 'dashboard_grid_column',\n        itemSelector: '.widgetdiv',\n        containerSelector: '.dashboard_grid_column',\n        placeholder: '<div class=\"placeholder\"><i class=\"fa fa-hand-o-right\" aria-hidden=\"true\"></i></div>',\n        afterMove: function (placeholder, container, closestItemOrContainer) {\n            showSave();\n        }\n      });\n\n      // select number of columns\n      $(\"#column_count\").change(function(){\n          if ($(\"#column_count_input\").val() != $(\"#column_count\").val()) {\n              showSave();\n          }\n          $(\"#column_count_input\").val($(\"#column_count\").val());\n          $(\".dashboard_grid_column\").each(function(){\n              var widget_col = $(this);\n              $.each(widget_col.attr(\"class\").split(' '), function(index, classname) {\n                  if (classname.indexOf('col-md') > -1) {\n                      widget_col.removeClass(classname);\n                  }\n              });\n              widget_col.addClass('col-md-'+(12 / $(\"#column_count_input\").val()));\n          });\n      });\n      $(\"#column_count\").change();\n      // trigger initial ajax data poller\n      process_widget_data();\n\n      // in \"Add Widget\" dialog, hide widgets already on screen\n      $(\"#add_widget_btn\").click(function(){\n          $(\".widgetdiv\").each(function(widget){\n              if ($(this).is(':visible')) {\n                  $(\"#add_widget_\" + $(this).attr('id')).hide();\n              } else {\n                  $(\"#add_widget_\" + $(this).attr('id')).show();\n              }\n          });\n      });\n      $('.selectpicker_widget').selectpicker('refresh');\n  });\n</script>\n\n<section class=\"page-content-main\">\n  <form method=\"post\" id=\"iform\">\n    <input type=\"hidden\" value=\"dashboard\" name=\"origin\" id=\"origin\" />\n    <input type=\"hidden\" value=\"\" name=\"sequence\" id=\"sequence\" />\n    <input type=\"hidden\" value=\"<?= $pconfig['column_count'];?>\" name=\"column_count\" id=\"column_count_input\" />\n  </form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 col-xs-12\">\n          <?php print_service_banner('bootup') ?>\n          <?php print_service_banner('livecd') ?>\n        </div>\n      </div>\n      <div id=\"dashboard_container\" class=\"row\" style=\"display:none\">\n        <div class=\"col-xs-12 col-md-2 dashboard_grid_column hidden\" id=\"dashboard_colx\">\n\n<?php\n      foreach ($widgetCollection as $widgetItem):\n          $widgettitle = $widgetItem['name'] . \"_title\";\n          $widgettitlelink = $widgetItem['name'] . \"_title_link\";\n          switch ($widgetItem['state']) {\n              case \"show\":\n                  $divdisplay = \"block\";\n                  $display = \"block\";\n                  $inputdisplay = \"show\";\n                  $mindiv = \"inline\";\n                  break;\n              case \"hide\":\n                  $divdisplay = \"block\";\n                  $display = \"none\";\n                  $inputdisplay = \"hide\";\n                  $mindiv = \"none\";\n                  break;\n              case \"close\":\n                  $divdisplay = \"none\";\n                  $display = \"block\";\n                  $inputdisplay = \"close\";\n                  $mindiv = \"inline\";\n                  break;\n              default:\n                  $divdisplay = \"none\";\n                  $display = \"block\";\n                  $inputdisplay = \"none\";\n                  $mindiv = \"inline\";\n                  break;\n          }?>\n          <section class=\"widgetdiv\" data-sortkey=\"<?=$widgetItem['sortKey'] ?>\" id=\"<?=$widgetItem['name'];?>\"  style=\"display:<?=$divdisplay;?>;\">\n            <div class=\"content-box\">\n              <header class=\"content-box-head container-fluid\">\n                <ul class=\"list-inline __nomb\">\n                  <li><h3>\n<?php\n                    // XXX: ${$} is intentional here, the widgets leave global vars [widget_name]_title_link and [widget_name]_title\n                    if (isset(${$widgettitlelink})):?>\n                        <u><span onclick=\"location.href='/<?= html_safe(${$widgettitlelink}) ?>'\" style=\"cursor:pointer\">\n<?php\n                    endif;\n                        echo empty(${$widgettitle}) ? $widgetItem['display_name'] : ${$widgettitle};\n                    if (isset(${$widgettitlelink})):?>\n                        </span></u>\n<?php\n                    endif;?>\n                  </h3></li>\n                  <li class=\"pull-right\">\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-default btn-xs disabled\" id=\"<?= $widgetItem['name'] ?>-configure\" onclick='return configureWidget(\"<?=  $widgetItem['name'] ?>\")' style=\"cursor:pointer\"><i class=\"fa fa-pencil fa-fw\"></i></button>\n                      <button type=\"button\" class=\"btn btn-default btn-xs\" title=\"minimize\" id=\"<?= $widgetItem['name'] ?>-min\" onclick='return minimizeWidget(\"<?= $widgetItem['name'] ?>\",true)' style=\"display:<?= $mindiv ?>;\"><i class=\"fa fa-minus fa-fw\"></i></button>\n                      <button type=\"button\" class=\"btn btn-default btn-xs\" title=\"maximize\" id=\"<?= $widgetItem['name'] ?>-max\" onclick='return showWidget(\"<?= $widgetItem['name'] ?>\",true)' style=\"display:<?= $mindiv == 'none' ? 'inline' : 'none' ?>;\"><i class=\"fa fa-plus fa-fw\"></i></button>\n                      <button type=\"button\" class=\"btn btn-default btn-xs\" title=\"remove widget\" onclick='return closeWidget(\"<?= $widgetItem['name'] ?>\",true)'><i class=\"fa fa-remove fa-fw\"></i></button>\n                    </div>\n                  </li>\n                </ul>\n                <div class=\"container-fluid widget-sort-handle\">\n                </div>\n              </header>\n              <div class=\"content-box-main collapse in\" id=\"<?= $widgetItem['name'] ?>-container\" style=\"display:<?= $mindiv ?>\">\n                <input type=\"hidden\" value=\"<?= $inputdisplay ?>\" id=\"<?= $widgetItem['name'] ?>-config\" name=\"<?= $widgetItem['name'] ?>-config\" />\n<?php\n                if ($divdisplay != \"block\"):?>\n                  <div id=\"<?= $widgetItem['name'] ?>-loader\" style=\"display:<?= $display ?>;\">\n                      &nbsp;&nbsp;<i class=\"fa fa-refresh\"></i> <?= gettext(\"Save to load widget\") ?>\n                  </div>\n<?php\n                else:\n                    include($widgetItem['filename']);\n                endif;\n?>\n              </div>\n            </div>\n          </section>\n<?php\n          endforeach;?>\n          </div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col1\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col2\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col3\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col4\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col5\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col6\"></div>\n      </div>\n    </div>\n</section>\n<?php endif;\n\ninclude(\"foot.inc\");\n"], "fixing_code": ["<?php\n\n/*\n * Copyright (C) 2014-2016 Deciso B.V.\n * Copyright (C) 2004-2012 Scott Ullrich <sullrich@gmail.com>\n * Copyright (C) 2003-2004 Manuel Kasper <mk@neon1.net>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nrequire_once('guiconfig.inc');\n\n// if no config entry found, initialize config entry\nconfig_read_array('widgets');\n\n$widgetCollection = array();\n\nif ($_SERVER['REQUEST_METHOD'] === 'GET') {\n    $pconfig = $config['widgets'];\n    legacy_html_escape_form_data($pconfig);\n    // set default dashboard view\n    $pconfig['sequence'] = !empty($pconfig['sequence']) ? $pconfig['sequence'] : '';\n    $pconfig['column_count'] = !empty($pconfig['column_count']) ? $pconfig['column_count'] : 2;\n    // build list of widgets\n    $widgetSeqParts = explode(\",\", $pconfig['sequence']);\n    foreach (glob('/usr/local/www/widgets/widgets/*.widget.php') as $php_file) {\n        $widgetItem = array();\n        $widgetItem['name'] = basename($php_file, '.widget.php');\n        $widgetItem['display_name'] = ucwords(str_replace(\"_\", \" \", $widgetItem['name']));\n        $widgetItem['filename'] = $php_file;\n        $widgetItem['state'] = \"none\";\n        /// default sort order\n        $widgetItem['sortKey'] = $widgetItem['name'] == 'system_information' ? \"00000000\" : \"99999999\" . $widgetItem['name'];\n        foreach ($widgetSeqParts as $seqPart) {\n            $tmp = explode(':', $seqPart);\n            if (count($tmp) == 3 && explode('-', $tmp[0])[0] == $widgetItem['name']) {\n                $widgetItem['state'] = $tmp[2];\n                $widgetItem['sortKey'] = $tmp[1];\n            }\n        }\n        $widgetCollection[] = $widgetItem;\n    }\n    // sort widgets\n    usort($widgetCollection, function ($item1, $item2) {\n      return strcmp(strtolower($item1['sortKey']), strtolower($item2['sortKey']));\n    });\n} elseif ($_SERVER['REQUEST_METHOD'] === 'POST' && !empty($_POST['origin']) && $_POST['origin'] == 'dashboard') {\n    if (!empty($_POST['sequence'])) {\n        $config['widgets']['sequence'] = $_POST['sequence'];\n    } elseif (isset($config['widgets']['sequence'])) {\n        unset($config['widgets']['sequence']);\n    }\n    if (!empty($_POST['column_count'])) {\n        $config['widgets']['column_count'] = filter_var($_POST['column_count'], FILTER_SANITIZE_NUMBER_INT);\n    } elseif(isset($config['widgets']['column_count'])) {\n        unset($config['widgets']['column_count']);\n    }\n    write_config('Widget configuration has been changed');\n    header(url_safe('Location: /index.php'));\n    exit;\n}\n\n// handle widget includes\nforeach (glob(\"/usr/local/www/widgets/include/*.inc\") as $filename) {\n    include($filename);\n}\n\n$product = product::getInstance();\n\ninclude(\"head.inc\");\n?>\n<body>\n<?php\ninclude(\"fbegin.inc\");?>\n\n<?php\n?>\n<?php\n  if (isset($config['trigger_initial_wizard']) || isset($_GET['wizard_done'])): ?>\n  <script>\n      $( document ).ready(function() {\n        $(\".page-content-head:first\").hide();\n      });\n  </script>\n  <header class=\"page-content-head\">\n    <div class=\"container-fluid\">\n<?php\n     if (isset($config['trigger_initial_wizard'])): ?>\n      <h1><?= gettext(\"Starting initial configuration!\") ?></h1>\n<?php\n     else: ?>\n      <h1><?= gettext(\"Finished initial configuration!\") ?></h1>\n<?php\n     endif ?>\n    </div>\n  </header>\n  <section class=\"page-content-main\">\n    <div class=\"container-fluid col-xs-12 col-sm-10 col-md-9\">\n      <div class=\"row\">\n        <section class=\"col-xs-12\">\n          <div class=\"content-box wizard\" style=\"padding: 20px;\">\n            <div class=\"table-responsive\">\n<?php if (file_exists(\"/usr/local/opnsense/www/themes/{$themename}/build/images/default-logo.svg\")): ?>\n              <img src=\" <?= cache_safe(\"/ui/themes/{$themename}/build/images/default-logo.svg\") ?>\" border=\"0\" alt=\"logo\" style=\"max-width:380px;\" />\n<?php else: ?>\n              <img src=\" <?= cache_safe(\"/ui/themes/{$themename}/build/images/default-logo.png\") ?>\" border=\"0\" alt=\"logo\" style=\"max-width:380px;\" />\n<?php endif ?>\n              <br />\n              <div class=\"content-box-main\" style=\"padding-bottom:0px;\">\n                <?php\n                    if (isset($config['trigger_initial_wizard'])) {\n                        echo '<p>' . sprintf(gettext('Welcome to %s!'), $product->name()) . \"</p>\\n\";\n                        echo '<p>' . gettext('One moment while we start the initial setup wizard.') . \"</p>\\n\";\n                        echo '<p class=\"__nomb\">' . gettext('To bypass the wizard, click on the logo in the upper left corner.') . \"</p>\\n\";\n                    } else {\n                        echo '<p>' . sprintf(gettext('Congratulations! %s is now configured.'), $product->name()) . \"</p>\\n\";\n                        echo '<p>' . sprintf(gettext(\n                            'Please consider donating to the project to help us with our overhead costs. ' .\n                            'See %sour website%s to donate or purchase available %s support services.'),\n                            '<a target=\"_new\" href=\"' . $product->website() . '\">', '</a>', $product->name()) . \"</p>\\n\";\n                        echo '<p class=\"__nomb\">' . sprintf(gettext('Click to %scontinue to the dashboard%s.'), '<a href=\"/\">', '</a>') . ' ';\n                        echo sprintf(gettext('Or click to %scheck for updates%s.'), '<a href=\"/ui/core/firmware#checkupdate\">', '</a>'). \"</p>\\n\";\n                    }\n                ?>\n              </div>\n            <div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </section>\n<?php\n     if (isset($config['trigger_initial_wizard'])): ?>\n  <meta http-equiv=\"refresh\" content=\"5;url=/wizard.php?xml=system\">\n<?php\n     endif ?>\n<?php\n  // normal dashboard\n  else:?>\n\n<script src=\"<?= cache_safe('/ui/js/jquery-sortable.js') ?>\"></script>\n<script>\n  function addWidget(selectedDiv) {\n      $('#'+selectedDiv).show();\n      $('#add_widget_'+selectedDiv).hide();\n      $('#'+selectedDiv+'-config').val('show');\n      showSave();\n  }\n\n  function configureWidget(selectedDiv) {\n      let selectIntLink = '#' + selectedDiv + \"-settings\";\n      if ($(selectIntLink).css('display') == \"none\") {\n          $(selectIntLink).show();\n      } else {\n          $(selectIntLink).hide();\n      }\n  }\n\n  function showWidget(selectedDiv,swapButtons) {\n      $('#'+selectedDiv+'-container').show();\n      $('#'+selectedDiv+'-min').show();\n      $('#'+selectedDiv+'-max').hide();\n      $('#'+selectedDiv+'-config').val('show');\n      showSave();\n  }\n\n  function minimizeWidget(selectedDiv, swapButtons) {\n      $('#'+selectedDiv+'-container').hide();\n      $('#'+selectedDiv+'-min').hide();\n      $('#'+selectedDiv+'-max').show();\n      $('#'+selectedDiv+'-config').val('hide');\n      showSave();\n  }\n\n  function closeWidget(selectedDiv) {\n      $('#'+selectedDiv).hide();\n      $('#'+selectedDiv+'-config').val('close');\n      showSave();\n  }\n\n  function showSave() {\n      $('#updatepref').show();\n  }\n\n  function updatePref() {\n      var widgetInfo = [];\n      var index = 0;\n      $('.widgetdiv').each(function(key) {\n          if ($(this).is(':visible')) {\n              // only capture visible widgets\n              var index_str = \"0000000\" + index;\n              index_str = index_str.substr(index_str.length-8);\n              let col_index = $(this).parent().attr(\"id\").split('_')[1];\n              widgetInfo.push($(this).attr('id')+'-container:'+index_str+'-'+col_index+':'+$('input[name='+$(this).attr('id')+'-config]').val());\n              index++;\n          }\n      });\n      $(\"#sequence\").val(widgetInfo.join(','));\n      $(\"#iform\").submit();\n      return false;\n  }\n\n  /**\n   * ajax update widget data, searches data-plugin attributes and use function in data-callback to update widget\n   */\n  function process_widget_data()\n  {\n      var plugins = [];\n      var callbacks = [];\n      // collect plugins and callbacks\n      $(\"[data-plugin]\").each(function(){\n          if (plugins.indexOf($(this).data('plugin')) < 0) {\n              plugins.push($(this).data('plugin'));\n          }\n          if ($(this).data('callback') != undefined) {\n              callbacks.push({'function' : $(this).data('callback'), 'plugin': $(this).data('plugin'), 'sender': $(this)});\n          }\n      });\n      // collect data for provided plugins\n      $.ajax(\"/widgets/api/get.php\",{type: 'get', cache: false, dataType: \"json\", data: {'load': plugins.join(',')}})\n        .done(function(response) {\n            callbacks.map( function(callback) {\n                try {\n                    if (response['data'][callback['plugin']] != undefined) {\n                        window[callback['function']](callback['sender'], response['data'][callback['plugin']]);\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n            });\n            // schedule next update\n            setTimeout('process_widget_data()', 5000);\n      });\n  }\n</script>\n\n<script>\n  $( document ).ready(function() {\n      // rearrange widgets to stored column\n      $(\".widgetdiv\").each(function(){\n          var widget = $(this);\n          widget.find('script').each(function(){\n              $(this).remove();\n          });\n          var container = $(this).parent();\n          var target_col = widget.data('sortkey').split('-')[1];\n          if (target_col != undefined) {\n              if (container.attr('id').split('_')[1] != target_col) {\n                  widget.remove().appendTo(\"#dashboard_\"+target_col);\n              }\n          } else {\n              // dashboard_colx (source) is not visible, move other items to col4\n              widget.remove().appendTo(\"#dashboard_col4\");\n          }\n      });\n\n      // show dashboard widgets after initial rendering\n      $(\"#dashboard_container\").show();\n\n      // trigger WidgetsReady event\n      $(\"#dashboard_container\").trigger(\"WidgetsReady\");\n\n      // sortable widgets\n      $(\".dashboard_grid_column\").sortable({\n        handle: '.widget-sort-handle',\n        group: 'dashboard_grid_column',\n        itemSelector: '.widgetdiv',\n        containerSelector: '.dashboard_grid_column',\n        placeholder: '<div class=\"placeholder\"><i class=\"fa fa-hand-o-right\" aria-hidden=\"true\"></i></div>',\n        afterMove: function (placeholder, container, closestItemOrContainer) {\n            showSave();\n        }\n      });\n\n      // select number of columns\n      $(\"#column_count\").change(function(){\n          if ($(\"#column_count_input\").val() != $(\"#column_count\").val()) {\n              showSave();\n          }\n          $(\"#column_count_input\").val($(\"#column_count\").val());\n          $(\".dashboard_grid_column\").each(function(){\n              var widget_col = $(this);\n              $.each(widget_col.attr(\"class\").split(' '), function(index, classname) {\n                  if (classname.indexOf('col-md') > -1) {\n                      widget_col.removeClass(classname);\n                  }\n              });\n              widget_col.addClass('col-md-'+(12 / $(\"#column_count_input\").val()));\n          });\n      });\n      $(\"#column_count\").change();\n      // trigger initial ajax data poller\n      process_widget_data();\n\n      // in \"Add Widget\" dialog, hide widgets already on screen\n      $(\"#add_widget_btn\").click(function(){\n          $(\".widgetdiv\").each(function(widget){\n              if ($(this).is(':visible')) {\n                  $(\"#add_widget_\" + $(this).attr('id')).hide();\n              } else {\n                  $(\"#add_widget_\" + $(this).attr('id')).show();\n              }\n          });\n      });\n      $('.selectpicker_widget').selectpicker('refresh');\n  });\n</script>\n\n<section class=\"page-content-main\">\n  <form method=\"post\" id=\"iform\">\n    <input type=\"hidden\" value=\"dashboard\" name=\"origin\" id=\"origin\" />\n    <input type=\"hidden\" value=\"\" name=\"sequence\" id=\"sequence\" />\n    <input type=\"hidden\" value=\"<?= $pconfig['column_count'];?>\" name=\"column_count\" id=\"column_count_input\" />\n  </form>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 col-xs-12\">\n          <?php print_service_banner('bootup') ?>\n          <?php print_service_banner('livecd') ?>\n        </div>\n      </div>\n      <div id=\"dashboard_container\" class=\"row\" style=\"display:none\">\n        <div class=\"col-xs-12 col-md-2 dashboard_grid_column hidden\" id=\"dashboard_colx\">\n\n<?php\n      foreach ($widgetCollection as $widgetItem):\n          $widgettitle = $widgetItem['name'] . \"_title\";\n          $widgettitlelink = $widgetItem['name'] . \"_title_link\";\n          switch ($widgetItem['state']) {\n              case \"show\":\n                  $divdisplay = \"block\";\n                  $display = \"block\";\n                  $inputdisplay = \"show\";\n                  $mindiv = \"inline\";\n                  break;\n              case \"hide\":\n                  $divdisplay = \"block\";\n                  $display = \"none\";\n                  $inputdisplay = \"hide\";\n                  $mindiv = \"none\";\n                  break;\n              case \"close\":\n                  $divdisplay = \"none\";\n                  $display = \"block\";\n                  $inputdisplay = \"close\";\n                  $mindiv = \"inline\";\n                  break;\n              default:\n                  $divdisplay = \"none\";\n                  $display = \"block\";\n                  $inputdisplay = \"none\";\n                  $mindiv = \"inline\";\n                  break;\n          }?>\n          <section class=\"widgetdiv\" data-sortkey=\"<?=$widgetItem['sortKey'] ?>\" id=\"<?=$widgetItem['name'];?>\"  style=\"display:<?=$divdisplay;?>;\">\n            <div class=\"content-box\">\n              <header class=\"content-box-head container-fluid\">\n                <ul class=\"list-inline __nomb\">\n                  <li><h3>\n<?php\n                    // XXX: ${$} is intentional here, the widgets leave global vars [widget_name]_title_link and [widget_name]_title\n                    if (isset(${$widgettitlelink})):?>\n                        <u><span onclick=\"location.href='/<?= html_safe(${$widgettitlelink}) ?>'\" style=\"cursor:pointer\">\n<?php\n                    endif;\n                        echo empty(${$widgettitle}) ? $widgetItem['display_name'] : ${$widgettitle};\n                    if (isset(${$widgettitlelink})):?>\n                        </span></u>\n<?php\n                    endif;?>\n                  </h3></li>\n                  <li class=\"pull-right\">\n                    <div class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-default btn-xs disabled\" id=\"<?= $widgetItem['name'] ?>-configure\" onclick='return configureWidget(\"<?=  $widgetItem['name'] ?>\")' style=\"cursor:pointer\"><i class=\"fa fa-pencil fa-fw\"></i></button>\n                      <button type=\"button\" class=\"btn btn-default btn-xs\" title=\"minimize\" id=\"<?= $widgetItem['name'] ?>-min\" onclick='return minimizeWidget(\"<?= $widgetItem['name'] ?>\",true)' style=\"display:<?= $mindiv ?>;\"><i class=\"fa fa-minus fa-fw\"></i></button>\n                      <button type=\"button\" class=\"btn btn-default btn-xs\" title=\"maximize\" id=\"<?= $widgetItem['name'] ?>-max\" onclick='return showWidget(\"<?= $widgetItem['name'] ?>\",true)' style=\"display:<?= $mindiv == 'none' ? 'inline' : 'none' ?>;\"><i class=\"fa fa-plus fa-fw\"></i></button>\n                      <button type=\"button\" class=\"btn btn-default btn-xs\" title=\"remove widget\" onclick='return closeWidget(\"<?= $widgetItem['name'] ?>\",true)'><i class=\"fa fa-remove fa-fw\"></i></button>\n                    </div>\n                  </li>\n                </ul>\n                <div class=\"container-fluid widget-sort-handle\">\n                </div>\n              </header>\n              <div class=\"content-box-main collapse in\" id=\"<?= $widgetItem['name'] ?>-container\" style=\"display:<?= $mindiv ?>\">\n                <input type=\"hidden\" value=\"<?= $inputdisplay ?>\" id=\"<?= $widgetItem['name'] ?>-config\" name=\"<?= $widgetItem['name'] ?>-config\" />\n<?php\n                if ($divdisplay != \"block\"):?>\n                  <div id=\"<?= $widgetItem['name'] ?>-loader\" style=\"display:<?= $display ?>;\">\n                      &nbsp;&nbsp;<i class=\"fa fa-refresh\"></i> <?= gettext(\"Save to load widget\") ?>\n                  </div>\n<?php\n                else:\n                    include($widgetItem['filename']);\n                endif;\n?>\n              </div>\n            </div>\n          </section>\n<?php\n          endforeach;?>\n          </div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col1\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col2\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col3\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col4\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col5\"></div>\n          <div class=\"col-md-2 dashboard_grid_column\" id=\"dashboard_col6\"></div>\n      </div>\n    </div>\n</section>\n<?php endif;\n\ninclude(\"foot.inc\");\n"], "filenames": ["src/www/index.php"], "buggy_code_start_loc": [39], "buggy_code_end_loc": [74], "fixing_code_start_loc": [40], "fixing_code_end_loc": [75], "type": "CWE-79", "message": "OPNsense before 23.7.5 allows XSS via the index.php column_count parameter to the Lobby Dashboard.", "other": {"cve": {"id": "CVE-2023-44275", "sourceIdentifier": "cve@mitre.org", "published": "2023-09-28T05:15:46.243", "lastModified": "2023-10-02T18:42:50.667", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "OPNsense before 23.7.5 allows XSS via the index.php column_count parameter to the Lobby Dashboard."}, {"lang": "es", "value": "OPNsense anterior a 23.7.5 permite XSS a trav\u00e9s del par\u00e1metro column_count index.php en el panel del lobby."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:opnsense:opnsense:*:*:*:*:*:*:*:*", "versionEndExcluding": "23.7.5", "matchCriteriaId": "BCEFD781-AA89-4FE8-A2CE-9263B55C2408"}]}]}], "references": [{"url": "https://github.com/opnsense/core/commit/484753b2abe3fd0fcdb73d8bf00c3fc3709eb8b7", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://github.com/opnsense/core/compare/23.7.4...23.7.5", "source": "cve@mitre.org", "tags": ["Release Notes"]}, {"url": "https://www.x41-dsec.de/lab/advisories/x41-2023-001-opnsense", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/opnsense/core/commit/484753b2abe3fd0fcdb73d8bf00c3fc3709eb8b7"}}