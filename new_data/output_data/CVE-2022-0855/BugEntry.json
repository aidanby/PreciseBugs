{"buggy_code": ["document.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    var tool = {\n        offset: function (node) {\n            var rect = node.getBoundingClientRect()\n            return {\n                top: rect.top,\n                left: rect.left\n            }\n        }\n    }\n    var mlt = 'Multiple embed instances not allowed';\n    if (window['mw-domain-search-iframe-embed-script']) {\n        console.warn(mlt);\n        return;\n    }\n    window['mw-domain-search-iframe-embed'] = true;\n\n    if (window.top.document.querySelectorAll('#domain-search-iframe-js').length > 1) {\n        // if (document.querySelectorAll('script[src*=\"/microweber_addon/\"]').length > 1) {\n        console.warn(mlt);\n        return;\n    }\n\n    var $ = function (a) {\n        return document.querySelector(a)\n    };\n\n    var script = $('#domain-search-iframe-js');\n    // var script = $('#domain-search-iframe-js');\n\n    if (!script) {\n        return;\n    }\n\n    var path = script.src.split('/');\n    path.pop()\n    path.pop()\n    path.pop()\n    path.pop()\n    path.pop()\n    path = path.join('/');\n    var $params = script.src.split('?')[1] || '';\n    _params = $params.split('&');\n    var params = {};\n    for (var i = 0; i < _params.length; i++) {\n        var item = _params[i].split('=');\n        params[decodeURIComponent(item[0]).trim()] = decodeURIComponent(item[1]).trim();\n    }\n\n\n    var iframe = document.createElement(\"iframe\");\n\n    iframe.id = 'domain-search-iframe';\n    iframe.style.width = \"100%\";\n    iframe.style.height = \"1000px\";\n    iframe.scrolling = 'no';\n    iframe.frameBorder = 0;\n    iframe.allowtransparency = 1;\n\n    var windowhash = window.location.hash;\n\n    // iframe.onload =       window.scrollTo(0,0);;\n    if (typeof windowhash === 'string' && windowhash.indexOf('frameurl=') > -1) {\n        var hash = windowhash.split('frameurl=')[1];\n        var hash = decodeURI(atob(hash))\n        //     iframe.src = hash;\n    } else {\n\n        //alert(path);\n        iframe.src = path + '/index.php?m=microweber_addon&function=order_iframe&' + $params;\n\n    }\n    script.parentNode.insertBefore(iframe, script.nextSibling);\n\n    addEventListener('message', function (e) {\n\n        if (typeof e.data === 'string' && e.data.indexOf('frameLocation:') > -1) {\n            var hash = e.data.split('frameLocation:')[1];\n            //  window.location.hash = 'frameurl=' + (btoa(encodeURI(hash)))\n        }\n\n        if (typeof e.data === 'string' && e.data.indexOf('documentHeight:') > -1) {\n            var height = e.data.split('documentHeight:')[1];\n            if (height > 0) {\n                document.getElementById(\"domain-search-iframe\").style.height = height + 'px';\n            }\n        }\n    }, false);\n\n});\n"], "fixing_code": ["document.addEventListener(\"DOMContentLoaded\", function(event) {\n\n    var tool = {\n        offset: function (node) {\n            var rect = node.getBoundingClientRect()\n            return {\n                top: rect.top,\n                left: rect.left\n            }\n        }\n    }\n    var mlt = 'Multiple embed instances not allowed';\n    if (window['mw-domain-search-iframe-embed-script']) {\n        console.warn(mlt);\n        return;\n    }\n    window['mw-domain-search-iframe-embed'] = true;\n\n    if (window.top.document.querySelectorAll('#domain-search-iframe-js').length > 1) {\n        // if (document.querySelectorAll('script[src*=\"/microweber_addon/\"]').length > 1) {\n        console.warn(mlt);\n        return;\n    }\n\n    var $ = function (a) {\n        return document.querySelector(a)\n    };\n\n    var script = $('#domain-search-iframe-js');\n    // var script = $('#domain-search-iframe-js');\n\n    if (!script) {\n        return;\n    }\n\n    var path = script.src.split('/');\n    path.pop()\n    path.pop()\n    path.pop()\n    path.pop()\n    path.pop()\n    path = path.join('/');\n    var $params = script.src.split('?')[1] || '';\n    _params = $params.split('&');\n    var params = {};\n    for (var i = 0; i < _params.length; i++) {\n        var item = _params[i].split('=');\n        params[decodeURIComponent(item[0]).trim()] = decodeURIComponent(item[1]).trim();\n    }\n\n\n    var iframe = document.createElement(\"iframe\");\n\n    iframe.id = 'domain-search-iframe';\n    iframe.style.width = \"100%\";\n    iframe.style.height = \"1000px\";\n    iframe.scrolling = 'no';\n    iframe.frameBorder = 0;\n    iframe.allowtransparency = 1;\n\n    var windowhash = window.location.hash;\n\n    // iframe.onload =       window.scrollTo(0,0);;\n    if (typeof windowhash === 'string' && windowhash.indexOf('frameurl=') > -1) {\n        var hash = windowhash.split('frameurl=')[1];\n        var hash = decodeURI(atob(hash))\n        var domain_check = (new URL(hash));\n        domain_check = domain_check.hostname;\n\n        if(window.location.hostname != domain_check){\n            alert('You are trying to load a domain search from a different domain. Please use the same domain.');\n            return;\n        }\n\n\n        //     iframe.src = hash;\n    } else {\n\n        //alert(path);\n        iframe.src = path + '/index.php?m=microweber_addon&function=order_iframe&' + $params;\n\n    }\n    script.parentNode.insertBefore(iframe, script.nextSibling);\n\n    addEventListener('message', function (e) {\n\n        if (typeof e.data === 'string' && e.data.indexOf('frameLocation:') > -1) {\n            var hash = e.data.split('frameLocation:')[1];\n            //  window.location.hash = 'frameurl=' + (btoa(encodeURI(hash)))\n        }\n\n        if (typeof e.data === 'string' && e.data.indexOf('documentHeight:') > -1) {\n            var height = e.data.split('documentHeight:')[1];\n            if (height > 0) {\n                document.getElementById(\"domain-search-iframe\").style.height = height + 'px';\n            }\n        }\n    }, false);\n\n});\n"], "filenames": ["modules/addons/microweber_addon/order/embed.js"], "buggy_code_start_loc": [66], "buggy_code_end_loc": [66], "fixing_code_start_loc": [67], "fixing_code_end_loc": [76], "type": "CWE-706", "message": "Improper Resolution of Path Equivalence in GitHub repository microweber-dev/whmcs_plugin prior to 0.0.4.", "other": {"cve": {"id": "CVE-2022-0855", "sourceIdentifier": "security@huntr.dev", "published": "2022-03-04T19:15:08.953", "lastModified": "2022-03-14T18:35:57.007", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Improper Resolution of Path Equivalence in GitHub repository microweber-dev/whmcs_plugin prior to 0.0.4."}, {"lang": "es", "value": "Una Resoluci\u00f3n Inapropiada de la Equivalencia de Ruta en el repositorio de GitHub microweber-dev/whmcs_plugin versiones anteriores a 0.0.4"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.2, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-706"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-41"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:whmcs:*:*:*:*:*:*:*:*", "versionEndExcluding": "0.0.4", "matchCriteriaId": "5B200000-A32D-4FE2-8D6E-912EB87397F7"}]}]}], "references": [{"url": "https://github.com/microweber-dev/whmcs_plugin/commit/2e7a11d332db79cc52ccda00455a15f4dc6147ff", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/511879b0-cdaa-4c03-af92-deb54d46284a", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/microweber-dev/whmcs_plugin/commit/2e7a11d332db79cc52ccda00455a15f4dc6147ff"}}