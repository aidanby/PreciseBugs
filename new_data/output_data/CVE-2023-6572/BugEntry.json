{"buggy_code": ["name: Generate changeset\non:\n  workflow_run:\n    workflows: [\"trigger changeset generation\"]\n    types:\n      - completed\n\nenv:\n  CI: true\n  NODE_OPTIONS: \"--max-old-space-size=4096\"\n\nconcurrency:\n  group: ${{ github.event.workflow_run.head_repository.full_name }}::${{ github.event.workflow_run.head_branch }}\n\njobs:\n  get-pr:\n    runs-on: ubuntu-latest\n    if: github.event.workflow_run.conclusion == 'success'\n    outputs:\n      found_pr: ${{ steps.pr_details.outputs.found_pr }}\n      pr_number: ${{ steps.pr_details.outputs.pr_number }}\n      source_repo: ${{ steps.pr_details.outputs.source_repo }}\n      source_branch: ${{ steps.pr_details.outputs.source_branch }}\n    steps:\n    - name: echo concurrency group\n      run: echo ${{ github.event.workflow_run.head_repository.full_name }}::${{ github.event.workflow_run.head_branch }}\n    - name: get pr details\n      id: pr_details\n      uses: gradio-app/github/actions/find-pr@main\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n  comment-changes-start:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: get-pr\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~pending~null\n  version:\n    permissions: write-all\n    name: static checks\n    needs: get-pr\n    runs-on: ubuntu-22.04\n    if: needs.get-pr.outputs.found_pr == 'true'\n    outputs:\n      skipped: ${{ steps.version.outputs.skipped }}\n      comment_url: ${{ steps.version.outputs.comment_url }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          repository: ${{ needs.get-pr.outputs.source_repo }}\n          ref: ${{ needs.get-pr.outputs.source_branch }}\n          fetch-depth: 0\n          token: ${{ secrets.COMMENT_TOKEN }}\n      - name: generate changeset\n        id: version\n        uses: \"gradio-app/github/actions/generate-changeset@main\"\n        with: \n          github_token: ${{ secrets.COMMENT_TOKEN }}\n          main_pkg: gradio\n          pr_number: ${{ needs.get-pr.outputs.pr_number }}\n          branch_name: ${{ needs.get-pr.outputs.source_branch }}\n  comment-changes-skipped:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: [get-pr, version]\n    if: needs.version.result == 'success' && needs.version.outputs.skipped == 'true'\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~warning~https://github.com/gradio-app/gradio/actions/runs/${{github.run_id}}/\n  comment-changes-success:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: [get-pr, version]\n    if: needs.version.result == 'success' && needs.version.outputs.skipped == 'false'\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~success~${{ needs.version.outputs.comment_url }}\n  comment-changes-failure:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: [get-pr, version]\n    if: always() && needs.version.result == 'failure'\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~failure~https://github.com/gradio-app/gradio/actions/runs/${{github.run_id}}/"], "fixing_code": ["name: Generate changeset\non:\n  workflow_run:\n    workflows: [\"trigger changeset generation\"]\n    types:\n      - completed\n\nenv:\n  CI: true\n  NODE_OPTIONS: \"--max-old-space-size=4096\"\n\nconcurrency:\n  group: ${{ github.event.workflow_run.head_repository.full_name }}::${{ github.event.workflow_run.head_branch }}\n\njobs:\n  get-pr:\n    runs-on: ubuntu-latest\n    if: github.event.workflow_run.conclusion == 'success'\n    outputs:\n      found_pr: ${{ steps.pr_details.outputs.found_pr }}\n      pr_number: ${{ steps.pr_details.outputs.pr_number }}\n      source_repo: ${{ steps.pr_details.outputs.source_repo }}\n      source_branch: ${{ steps.pr_details.outputs.source_branch }}\n    steps:\n    - name: get pr details\n      id: pr_details\n      uses: gradio-app/github/actions/find-pr@main\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n  comment-changes-start:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: get-pr\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~pending~null\n  version:\n    permissions: write-all\n    name: static checks\n    needs: get-pr\n    runs-on: ubuntu-22.04\n    if: needs.get-pr.outputs.found_pr == 'true'\n    outputs:\n      skipped: ${{ steps.version.outputs.skipped }}\n      comment_url: ${{ steps.version.outputs.comment_url }}\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          repository: ${{ needs.get-pr.outputs.source_repo }}\n          ref: ${{ needs.get-pr.outputs.source_branch }}\n          fetch-depth: 0\n          token: ${{ secrets.COMMENT_TOKEN }}\n      - name: generate changeset\n        id: version\n        uses: \"gradio-app/github/actions/generate-changeset@main\"\n        with: \n          github_token: ${{ secrets.COMMENT_TOKEN }}\n          main_pkg: gradio\n          pr_number: ${{ needs.get-pr.outputs.pr_number }}\n          branch_name: ${{ needs.get-pr.outputs.source_branch }}\n  comment-changes-skipped:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: [get-pr, version]\n    if: needs.version.result == 'success' && needs.version.outputs.skipped == 'true'\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~warning~https://github.com/gradio-app/gradio/actions/runs/${{github.run_id}}/\n  comment-changes-success:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: [get-pr, version]\n    if: needs.version.result == 'success' && needs.version.outputs.skipped == 'false'\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~success~${{ needs.version.outputs.comment_url }}\n  comment-changes-failure:\n    uses: \"./.github/workflows/comment-queue.yml\"\n    needs: [get-pr, version]\n    if: always() && needs.version.result == 'failure'\n    secrets:\n      gh_token: ${{ secrets.COMMENT_TOKEN }}\n    with:\n      pr_number: ${{ needs.get-pr.outputs.pr_number }}\n      message: changes~failure~https://github.com/gradio-app/gradio/actions/runs/${{github.run_id}}/"], "filenames": [".github/workflows/generate-changeset.yml"], "buggy_code_start_loc": [25], "buggy_code_end_loc": [27], "fixing_code_start_loc": [24], "fixing_code_end_loc": [24], "type": "CWE-77", "message": "Command Injection in GitHub repository gradio-app/gradio prior to main.", "other": {"cve": {"id": "CVE-2023-6572", "sourceIdentifier": "security@huntr.dev", "published": "2023-12-14T14:15:46.013", "lastModified": "2024-02-28T14:08:41.697", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Command Injection in GitHub repository gradio-app/gradio prior to main."}, {"lang": "es", "value": "Exposici\u00f3n de informaci\u00f3n confidencial a un actor no autorizado en el repositorio de GitHub gradio-app/gradio antes de main."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 9.6, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.1, "impactScore": 5.8}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-77"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gradio_project:gradio:*:*:*:*:*:python:*:*", "versionEndExcluding": "4.14.0", "matchCriteriaId": "71C808DD-0073-490C-9485-A8B16BBAC352"}]}]}], "references": [{"url": "https://github.com/gradio-app/gradio/commit/5b5af1899dd98d63e1f9b48a93601c2db1f56520", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.com/bounties/21d2ff0c-d43a-4afd-bb4d-049ee8da5b5c", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/gradio-app/gradio/commit/5b5af1899dd98d63e1f9b48a93601c2db1f56520"}}