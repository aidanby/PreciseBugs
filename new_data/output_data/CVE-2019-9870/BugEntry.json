{"buggy_code": ["\ufeff/**\n* oEmbed Plugin plugin\n* Licensed under the MIT license\n* jQuery Embed Plugin: http://code.google.com/p/jquery-oembed/ (MIT License)\n* Plugin for: http://ckeditor.com/license (GPL/LGPL/MPL: http://ckeditor.com/license)\n*/\n\n(function() {\n        CKEDITOR.plugins.add('oembed',\n            {\n                icons: 'oembed',\n                hidpi: true,\n                requires: 'widget,dialog',\n                lang: 'ar,ca,cs,de,en,es,fr,nl,pl,pt-br,ru,tr', // %REMOVE_LINE_CORE%\n                version: '1.18.1',\n                onLoad: function() {\n                    CKEDITOR.document.appendStyleSheet(this.path + 'css/oembed.css');\n                },\n                init: function(editor) {\n                    // Load jquery?\n                    loadjQueryLibaries();\n\n                    CKEDITOR.tools.extend(CKEDITOR.editor.prototype,\n                        {\n                            oEmbed: function(url, maxWidth, maxHeight, responsiveResize) {\n\n                                if (url.length < 1 || url.indexOf('http') < 0) {\n                                    alert(editor.lang.oembed.invalidUrl);\n                                    return false;\n                                }\n\n                                function embed() {\n                                    if (maxWidth == null || maxWidth == 'undefined') {\n                                        maxWidth = null;\n                                    }\n\n                                    if (maxHeight == null || maxHeight == 'undefined') {\n                                        maxHeight = null;\n                                    }\n\n                                    if (responsiveResize == null || responsiveResize == 'undefined') {\n                                        responsiveResize = false;\n                                    }\n\n                                    embedCode(url, editor, false, maxWidth, maxHeight, responsiveResize);\n                                }\n\n                                if (typeof(jQuery.fn.oembed) === 'undefined') {\n                                    CKEDITOR.scriptLoader.load(\n                                        CKEDITOR.getUrl(\n                                            CKEDITOR.plugins.getPath('oembed') + 'libs/jquery.oembed.min.js'),\n                                        function() {\n                                            embed();\n                                        });\n                                } else {\n                                    embed();\n                                }\n\n                                return true;\n                            }\n                        });\n\n                    editor.widgets.add('oembed',\n                        {\n                            draggable: false,\n                            mask: true,\n                            dialog: 'oembed',\n                            allowedContent: {\n                                div: {\n                                    styles: 'text-align,float',\n                                    attributes: '*',\n                                    classes: editor.config.oembed_WrapperClass != null\n                                        ? editor.config.oembed_WrapperClass\n                                        : \"embeddedContent\"\n                                },\n                                'div(embeddedContent,oembed-provider-*) iframe': {\n                                    attributes: '*'\n                                },\n                                'div(embeddedContent,oembed-provider-*) blockquote': {\n                                    attributes: '*'\n                                },\n                                'div(embeddedContent,oembed-provider-*) script': {\n                                    attributes: '*'\n                                },\n                                'div(embeddedContent,oembed-provider-*) embed': {\n                                    attributes: '*'\n                                }\n                            },\n                            template:\n                                '<div class=\"' +\n                                    (editor.config.oembed_WrapperClass != null\n                                        ? editor.config.oembed_WrapperClass\n                                        : \"embeddedContent\") +\n                                    '\">' +\n                                    '</div>',\n                            upcast: function(element) {\n                                return element.name == 'div' &&\n                                    element.hasClass(editor.config.oembed_WrapperClass != null\n                                        ? editor.config.oembed_WrapperClass\n                                        : \"embeddedContent\");\n                            },\n                            init: function() {\n                                var data = {\n                                    title: this.element.data('title') || '',\n                                    oembed: this.element.data('oembed') || '',\n                                    resizeType: this.element.data('resizeType') || 'noresize',\n                                    maxWidth: this.element.data('maxWidth') || 560,\n                                    maxHeight: this.element.data('maxHeight') || 315,\n                                    align: this.element.data('align') || 'none',\n                                    oembed_provider: this.element.data('oembed_provider') || ''\n                                };\n\n                                this.setData(data);\n                                this.element.addClass('oembed-provider-' + data.oembed_provider);\n\n                                this.on('dialog',\n                                    function(evt) {\n                                        evt.data.widget = this;\n                                    },\n                                    this);\n                            }\n                        });\n\n                    editor.ui.addButton('oembed',\n                        {\n                            label: editor.lang.oembed.button,\n                            command: 'oembed',\n                            toolbar: 'insert,10'\n                        });\n\n                    var resizeTypeChanged = function() {\n                        var dialog = this.getDialog(),\n                            resizetype = this.getValue(),\n                            maxSizeBox = dialog.getContentElement('general', 'maxSizeBox').getElement(),\n                            sizeBox = dialog.getContentElement('general', 'sizeBox').getElement();\n\n                        if (resizetype == 'noresize') {\n                            maxSizeBox.hide();\n\n                            sizeBox.hide();\n                        } else if (resizetype == \"custom\") {\n                            maxSizeBox.hide();\n\n                            sizeBox.show();\n                        } else {\n                            maxSizeBox.show();\n\n                            sizeBox.hide();\n                        }\n\n                    };\n\n                    String.prototype.beginsWith = function(string) {\n                        return (this.indexOf(string) === 0);\n                    };\n\n                    function loadjQueryLibaries() {\n                        if (typeof(jQuery) === 'undefined') {\n                            CKEDITOR.scriptLoader.load('//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js',\n                                function() {\n                                    jQuery.noConflict();\n                                    if (typeof(jQuery.fn.oembed) === 'undefined') {\n                                        CKEDITOR.scriptLoader.load(\n                                            CKEDITOR.getUrl(CKEDITOR.plugins.getPath('oembed') +\n                                                'libs/jquery.oembed.min.js')\n                                        );\n                                    }\n                                });\n\n                        } else if (typeof(jQuery.fn.oembed) === 'undefined') {\n                            CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(CKEDITOR.plugins.getPath('oembed') +\n                                'libs/jquery.oembed.min.js'));\n                        }\n                    }\n\n                    function repairHtmlOutput(provider, oldOutput, width, height) {\n                        switch (provider.toLowerCase()) {\n                        case \"slideshare\":\n                            return oldOutput.replace(/width=\\\"\\d+\\\" height=\\\"\\d+\\\"/, \"width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\"\");\n                        case \"spotify\":\n                            return oldOutput.replace(/width=\\\"\\d+\\\" height=\\\"\\d+\\\"/, \"width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\"\");\n                        default:\n                            return oldOutput;\n                        }\n                    }\n\n                    function embedCode(url,\n                        instance,\n                        maxWidth,\n                        maxHeight,\n                        responsiveResize,\n                        resizeType,\n                        align,\n                        widget,\n                        title) {\n                        if (title === '') {\n                            alert(editor.lang.oembed.titleError);\n                            return false;\n                        }\n                        jQuery('body').oembed(url,\n                            {\n                                onEmbed: function (e) {\n                                    var elementAdded = false,\n                                        provider = jQuery.fn.oembed.getOEmbedProvider(url);\n\n                                    widget.element.data('resizeType', resizeType);\n                                    if (resizeType == \"responsive\" || resizeType == \"custom\") {\n                                        widget.element.data('maxWidth', maxWidth);\n                                        widget.element.data('maxHeight', maxHeight);\n                                    }\n\n                                    if (title !== '') {\n                                        widget.element.data('title', title);\n                                    }\n\n                                    widget.element.data('align', align);\n                                    // TODO handle align\n                                    if (align == 'center') {\n                                        if (!widget.inline)\n                                            widget.element.setStyle('text-align', 'center');\n\n                                        widget.element.removeStyle('float');\n                                    } else {\n                                        if (!widget.inline)\n                                            widget.element.removeStyle('text-align');\n\n                                        if (align == 'none')\n                                            widget.element.removeStyle('float');\n                                        else\n                                            widget.element.setStyle('float', align);\n                                    }\n\n                                    if (typeof e.code === 'string') {\n                                        while (widget.element.$.firstChild) {\n                                            widget.element.$.removeChild(widget.element.$.firstChild);\n                                        }\n\n                                        widget.element.appendHtml(repairHtmlOutput(provider.name, e.code, maxWidth, maxHeight));\n                                        widget.element.data('oembed', url);\n                                        widget.element.data('oembed_provider', provider.name);\n                                        widget.element.addClass('oembed-provider-' + provider.name);\n\n                                        elementAdded = true;\n                                    } else if (typeof e.code[0].outerHTML === 'string') {\n\n                                        while (widget.element.$.firstChild) {\n                                            widget.element.$.removeChild(widget.element.$.firstChild);\n                                        }\n\n                                        widget.element.appendHtml(repairHtmlOutput(provider.name, e.code[0].outerHTML, maxWidth, maxHeight));\n                                        widget.element.data('oembed', url);\n                                        widget.element.data('oembed_provider', provider.name);\n                                        widget.element.addClass('oembed-provider-' + provider.name);\n\n                                        elementAdded = true;\n                                    } else {\n                                        alert(editor.lang.oembed.noEmbedCode);\n                                    }\n                                },\n                                onError: function(externalUrl) {\n                                    if (externalUrl.indexOf(\"vimeo.com\") > 0) {\n                                        alert(editor.lang.oembed.noVimeo);\n                                    } else {\n                                        alert(editor.lang.oembed.Error);\n                                    }\n\n                                },\n                                afterEmbed: function() {\n                                    editor.fire('change');\n                                },\n                                maxHeight: maxHeight,\n                                maxWidth: maxWidth,\n                                useResponsiveResize: responsiveResize,\n                                embedMethod: 'editor',\n                                title: title,\n                                expandUrl: false\n                            });\n                    }\n\n                    CKEDITOR.dialog.add('oembed',\n                        function(editor) {\n                            return {\n                                title: editor.lang.oembed.title,\n                                minWidth: CKEDITOR.env.ie && CKEDITOR.env.quirks ? 568 : 550,\n                                minHeight: 155,\n                                onShow: function() {\n                                    var data = {\n                                        title: this.widget.element.data('title') || '',\n                                        oembed: this.widget.element.data('oembed') || '',\n                                        resizeType: this.widget.element.data('resizeType') || 'noresize',\n                                        maxWidth: this.widget.element.data('maxWidth'),\n                                        maxHeight: this.widget.element.data('maxHeight'),\n                                        align: this.widget.element.data('align') || 'none'\n                                    };\n\n                                    this.widget.setData(data);\n\n                                    this.getContentElement('general', 'resizeType').setValue(data.resizeType);\n\n                                    this.getContentElement('general', 'align').setValue(data.align);\n\n                                    var resizetype = this.getContentElement('general', 'resizeType').getValue(),\n                                        maxSizeBox = this.getContentElement('general', 'maxSizeBox').getElement(),\n                                        sizeBox = this.getContentElement('general', 'sizeBox').getElement();\n\n                                    if (resizetype == 'noresize') {\n                                        maxSizeBox.hide();\n                                        sizeBox.hide();\n                                    } else if (resizetype == \"custom\") {\n                                        maxSizeBox.hide();\n\n                                        sizeBox.show();\n                                    } else {\n                                        maxSizeBox.show();\n\n                                        sizeBox.hide();\n                                    }\n                                },\n\n                                onOk: function() {\n                                },\n                                contents: [\n                                    {\n                                        label: editor.lang.common.generalTab,\n                                        id: 'general',\n                                        elements: [\n                                            {\n                                                type: 'html',\n                                                id: 'oembedHeader',\n                                                html:\n                                                    '<div style=\"white-space:normal;width:500px;padding-bottom:10px\">' +\n                                                        editor.lang.oembed.pasteUrl +\n                                                        '</div>'\n                                            }, {\n                                                type: 'text',\n                                                id: 'embedTitle',\n                                                focus: function() {\n                                                    this.getElement().focus();\n                                                },\n                                                label: editor.lang.oembed.embedTitle,\n                                                setup: function(widget) {\n                                                    if (widget.data.title) {\n                                                        this.setValue(widget.data.title);\n                                                    }\n                                                },\n                                            }, {\n                                                type: 'text',\n                                                id: 'embedCode',\n                                                focus: function() {\n                                                    this.getElement().focus();\n                                                },\n                                                label: editor.lang.oembed.url,\n                                                title: editor.lang.oembed.pasteUrl,\n                                                setup: function(widget) {\n                                                    if (widget.data.oembed) {\n                                                        this.setValue(widget.data.oembed);\n                                                    }\n                                                },\n                                                commit: function(widget) {\n                                                    var dialog = CKEDITOR.dialog.getCurrent(),\n                                                        title = dialog.getValueOf('general', 'embedTitle'),\n                                                        inputCode = dialog.getValueOf('general', 'embedCode')\n                                                            .replace(/\\s/g, \"\"),\n                                                        resizeType = dialog.getContentElement('general', 'resizeType')\n                                                            .getValue(),\n                                                        align = dialog.getContentElement('general', 'align').getValue(),\n                                                        maxWidth = null,\n                                                        maxHeight = null,\n                                                        responsiveResize = false,\n                                                        editorInstance = dialog.getParentEditor();\n\n                                                    if (inputCode.length < 1 || inputCode.indexOf('http') < 0) {\n                                                        alert(editor.lang.oembed.invalidUrl);\n                                                        return false;\n                                                    }\n\n                                                    if (resizeType == \"noresize\") {\n                                                        responsiveResize = false;\n                                                        maxWidth = null;\n                                                        maxHeight = null;\n                                                    } else if (resizeType == \"responsive\") {\n                                                        maxWidth = dialog.getContentElement('general', 'maxWidth')\n                                                            .getInputElement().getValue();\n                                                        maxHeight = dialog.getContentElement('general', 'maxHeight')\n                                                            .getInputElement().getValue();\n\n                                                        responsiveResize = true;\n                                                    } else if (resizeType == \"custom\") {\n                                                        maxWidth = dialog.getContentElement('general', 'width')\n                                                            .getInputElement().getValue();\n                                                        maxHeight = dialog.getContentElement('general', 'height')\n                                                            .getInputElement().getValue();\n\n                                                        responsiveResize = false;\n                                                    }\n\n                                                    embedCode(inputCode,\n                                                        editorInstance,\n                                                        maxWidth,\n                                                        maxHeight,\n                                                        responsiveResize,\n                                                        resizeType,\n                                                        align,\n                                                        widget,\n                                                        title);\n\n                                                    widget.setData('title', title);\n                                                    widget.setData('oembed', inputCode);\n                                                    widget.setData('resizeType', resizeType);\n                                                    widget.setData('align', align);\n                                                    widget.setData('maxWidth', maxWidth);\n                                                    widget.setData('maxHeight', maxHeight);\n                                                }\n                                            },\n                                            {\n                                                type: 'hbox',\n                                                widths: ['50%', '50%'],\n                                                children: [\n                                                    {\n                                                        id: 'resizeType',\n                                                        type: 'select',\n                                                        label: editor.lang.oembed.resizeType,\n                                                        'default': 'noresize',\n                                                        setup: function(widget) {\n                                                            if (widget.data.resizeType) {\n                                                                this.setValue(widget.data.resizeType);\n                                                            }\n                                                        },\n                                                        items: [\n                                                            [editor.lang.oembed.noresize, 'noresize'],\n                                                            [editor.lang.oembed.responsive, 'responsive'],\n                                                            [editor.lang.oembed.custom, 'custom']\n                                                        ],\n                                                        onChange: resizeTypeChanged\n                                                    }, {\n                                                        type: 'hbox',\n                                                        id: 'maxSizeBox',\n                                                        widths: ['120px', '120px'],\n                                                        style: 'float:left;position:absolute;left:58%;width:200px',\n                                                        children: [\n                                                            {\n                                                                type: 'text',\n                                                                width: '100px',\n                                                                id: 'maxWidth',\n                                                                'default': editor.config.oembed_maxWidth != null\n                                                                    ? editor.config.oembed_maxWidth\n                                                                    : '560',\n                                                                label: editor.lang.oembed.maxWidth,\n                                                                title: editor.lang.oembed.maxWidthTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxWidth) {\n                                                                        this.setValue(widget.data.maxWidth);\n                                                                    }\n                                                                }\n                                                            }, {\n                                                                type: 'text',\n                                                                id: 'maxHeight',\n                                                                width: '120px',\n                                                                'default': editor.config.oembed_maxHeight != null\n                                                                    ? editor.config.oembed_maxHeight\n                                                                    : '315',\n                                                                label: editor.lang.oembed.maxHeight,\n                                                                title: editor.lang.oembed.maxHeightTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxHeight) {\n                                                                        this.setValue(widget.data.maxHeight);\n                                                                    }\n                                                                }\n                                                            }\n                                                        ]\n                                                    }, {\n                                                        type: 'hbox',\n                                                        id: 'sizeBox',\n                                                        widths: ['120px', '120px'],\n                                                        style: 'float:left;position:absolute;left:58%;width:200px',\n                                                        children: [\n                                                            {\n                                                                type: 'text',\n                                                                id: 'width',\n                                                                width: '100px',\n                                                                'default': editor.config.oembed_maxWidth != null\n                                                                    ? editor.config.oembed_maxWidth\n                                                                    : '560',\n                                                                label: editor.lang.oembed.width,\n                                                                title: editor.lang.oembed.widthTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxWidth) {\n                                                                        this.setValue(widget.data.maxWidth);\n                                                                    }\n                                                                }\n                                                            }, {\n                                                                type: 'text',\n                                                                id: 'height',\n                                                                width: '120px',\n                                                                'default': editor.config.oembed_maxHeight != null\n                                                                    ? editor.config.oembed_maxHeight\n                                                                    : '315',\n                                                                label: editor.lang.oembed.height,\n                                                                title: editor.lang.oembed.heightTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxHeight) {\n                                                                        this.setValue(widget.data.maxHeight);\n                                                                    }\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                ]\n                                            }, {\n                                                type: 'hbox',\n                                                id: 'alignment',\n                                                children: [\n                                                    {\n                                                        id: 'align',\n                                                        type: 'radio',\n                                                        items: [\n                                                            [editor.lang.oembed.none, 'none'],\n                                                            [editor.lang.common.alignLeft, 'left'],\n                                                            [editor.lang.common.alignCenter, 'center'],\n                                                            [editor.lang.common.alignRight, 'right']\n                                                        ],\n                                                        label: editor.lang.common.align,\n                                                        setup: function(widget) {\n                                                            this.setValue(widget.data.align);\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            };\n                        });\n                }\n            });\n    }\n)();\n"], "fixing_code": ["\ufeff/**\n* oEmbed Plugin plugin\n* Licensed under the MIT license\n* jQuery Embed Plugin: http://code.google.com/p/jquery-oembed/ (MIT License)\n* Plugin for: http://ckeditor.com/license (GPL/LGPL/MPL: http://ckeditor.com/license)\n*/\n\n(function() {\n        CKEDITOR.plugins.add('oembed',\n            {\n                icons: 'oembed',\n                hidpi: true,\n                requires: 'widget,dialog',\n                lang: 'ar,ca,cs,de,en,es,fr,nl,pl,pt-br,ru,tr', // %REMOVE_LINE_CORE%\n                version: '1.18.1',\n                onLoad: function() {\n                    CKEDITOR.document.appendStyleSheet(this.path + 'css/oembed.css');\n                },\n                init: function(editor) {\n                    // Load jquery?\n                    loadjQueryLibaries();\n\n                    CKEDITOR.tools.extend(CKEDITOR.editor.prototype,\n                        {\n                            oEmbed: function(url, maxWidth, maxHeight, responsiveResize) {\n\n                                if (url.length < 1 || url.indexOf('http') < 0) {\n                                    alert(editor.lang.oembed.invalidUrl);\n                                    return false;\n                                }\n\n                                function embed() {\n                                    if (maxWidth == null || maxWidth == 'undefined') {\n                                        maxWidth = null;\n                                    }\n\n                                    if (maxHeight == null || maxHeight == 'undefined') {\n                                        maxHeight = null;\n                                    }\n\n                                    if (responsiveResize == null || responsiveResize == 'undefined') {\n                                        responsiveResize = false;\n                                    }\n\n                                    embedCode(url, editor, false, maxWidth, maxHeight, responsiveResize);\n                                }\n\n                                if (typeof(jQuery.fn.oembed) === 'undefined') {\n                                    CKEDITOR.scriptLoader.load(\n                                        CKEDITOR.getUrl(\n                                            CKEDITOR.plugins.getPath('oembed') + 'libs/jquery.oembed.min.js'),\n                                        function() {\n                                            embed();\n                                        });\n                                } else {\n                                    embed();\n                                }\n\n                                return true;\n                            }\n                        });\n\n                    editor.widgets.add('oembed',\n                        {\n                            draggable: false,\n                            mask: true,\n                            dialog: 'oembed',\n                            allowedContent: {\n                                div: {\n                                    styles: 'text-align,float',\n                                    attributes: '*',\n                                    classes: editor.config.oembed_WrapperClass != null\n                                        ? editor.config.oembed_WrapperClass\n                                        : \"embeddedContent\"\n                                },\n                                'div(embeddedContent,oembed-provider-*) iframe': {\n                                    attributes: '*'\n                                },\n                                'div(embeddedContent,oembed-provider-*) blockquote': {\n                                    attributes: '*'\n                                },\n                                'div(embeddedContent,oembed-provider-*) embed': {\n                                    attributes: '*'\n                                }\n                            },\n                            template:\n                                '<div class=\"' +\n                                    (editor.config.oembed_WrapperClass != null\n                                        ? editor.config.oembed_WrapperClass\n                                        : \"embeddedContent\") +\n                                    '\">' +\n                                    '</div>',\n                            upcast: function(element) {\n                                return element.name == 'div' &&\n                                    element.hasClass(editor.config.oembed_WrapperClass != null\n                                        ? editor.config.oembed_WrapperClass\n                                        : \"embeddedContent\");\n                            },\n                            init: function() {\n                                var data = {\n                                    title: this.element.data('title') || '',\n                                    oembed: this.element.data('oembed') || '',\n                                    resizeType: this.element.data('resizeType') || 'noresize',\n                                    maxWidth: this.element.data('maxWidth') || 560,\n                                    maxHeight: this.element.data('maxHeight') || 315,\n                                    align: this.element.data('align') || 'none',\n                                    oembed_provider: this.element.data('oembed_provider') || ''\n                                };\n\n                                this.setData(data);\n                                this.element.addClass('oembed-provider-' + data.oembed_provider);\n\n                                this.on('dialog',\n                                    function(evt) {\n                                        evt.data.widget = this;\n                                    },\n                                    this);\n                            }\n                        });\n\n                    editor.ui.addButton('oembed',\n                        {\n                            label: editor.lang.oembed.button,\n                            command: 'oembed',\n                            toolbar: 'insert,10'\n                        });\n\n                    var resizeTypeChanged = function() {\n                        var dialog = this.getDialog(),\n                            resizetype = this.getValue(),\n                            maxSizeBox = dialog.getContentElement('general', 'maxSizeBox').getElement(),\n                            sizeBox = dialog.getContentElement('general', 'sizeBox').getElement();\n\n                        if (resizetype == 'noresize') {\n                            maxSizeBox.hide();\n\n                            sizeBox.hide();\n                        } else if (resizetype == \"custom\") {\n                            maxSizeBox.hide();\n\n                            sizeBox.show();\n                        } else {\n                            maxSizeBox.show();\n\n                            sizeBox.hide();\n                        }\n\n                    };\n\n                    String.prototype.beginsWith = function(string) {\n                        return (this.indexOf(string) === 0);\n                    };\n\n                    function loadjQueryLibaries() {\n                        if (typeof(jQuery) === 'undefined') {\n                            CKEDITOR.scriptLoader.load('//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js',\n                                function() {\n                                    jQuery.noConflict();\n                                    if (typeof(jQuery.fn.oembed) === 'undefined') {\n                                        CKEDITOR.scriptLoader.load(\n                                            CKEDITOR.getUrl(CKEDITOR.plugins.getPath('oembed') +\n                                                'libs/jquery.oembed.min.js')\n                                        );\n                                    }\n                                });\n\n                        } else if (typeof(jQuery.fn.oembed) === 'undefined') {\n                            CKEDITOR.scriptLoader.load(CKEDITOR.getUrl(CKEDITOR.plugins.getPath('oembed') +\n                                'libs/jquery.oembed.min.js'));\n                        }\n                    }\n\n                    function repairHtmlOutput(provider, oldOutput, width, height) {\n                        switch (provider.toLowerCase()) {\n                        case \"slideshare\":\n                            return oldOutput.replace(/width=\\\"\\d+\\\" height=\\\"\\d+\\\"/, \"width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\"\");\n                        case \"spotify\":\n                            return oldOutput.replace(/width=\\\"\\d+\\\" height=\\\"\\d+\\\"/, \"width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\"\");\n                        default:\n                            return oldOutput;\n                        }\n                    }\n\n                    function embedCode(url,\n                        instance,\n                        maxWidth,\n                        maxHeight,\n                        responsiveResize,\n                        resizeType,\n                        align,\n                        widget,\n                        title) {\n                        if (title === '') {\n                            alert(editor.lang.oembed.titleError);\n                            return false;\n                        }\n                        jQuery('body').oembed(url,\n                            {\n                                onEmbed: function (e) {\n                                    var elementAdded = false,\n                                        provider = jQuery.fn.oembed.getOEmbedProvider(url);\n\n                                    widget.element.data('resizeType', resizeType);\n                                    if (resizeType == \"responsive\" || resizeType == \"custom\") {\n                                        widget.element.data('maxWidth', maxWidth);\n                                        widget.element.data('maxHeight', maxHeight);\n                                    }\n\n                                    if (title !== '') {\n                                        widget.element.data('title', title);\n                                    }\n\n                                    widget.element.data('align', align);\n                                    // TODO handle align\n                                    if (align == 'center') {\n                                        if (!widget.inline)\n                                            widget.element.setStyle('text-align', 'center');\n\n                                        widget.element.removeStyle('float');\n                                    } else {\n                                        if (!widget.inline)\n                                            widget.element.removeStyle('text-align');\n\n                                        if (align == 'none')\n                                            widget.element.removeStyle('float');\n                                        else\n                                            widget.element.setStyle('float', align);\n                                    }\n\n                                    if (typeof e.code === 'string') {\n                                        while (widget.element.$.firstChild) {\n                                            widget.element.$.removeChild(widget.element.$.firstChild);\n                                        }\n\n                                        widget.element.appendHtml(repairHtmlOutput(provider.name, e.code, maxWidth, maxHeight));\n                                        widget.element.data('oembed', url);\n                                        widget.element.data('oembed_provider', provider.name);\n                                        widget.element.addClass('oembed-provider-' + provider.name);\n\n                                        elementAdded = true;\n                                    } else if (typeof e.code[0].outerHTML === 'string') {\n\n                                        while (widget.element.$.firstChild) {\n                                            widget.element.$.removeChild(widget.element.$.firstChild);\n                                        }\n\n                                        widget.element.appendHtml(repairHtmlOutput(provider.name, e.code[0].outerHTML, maxWidth, maxHeight));\n                                        widget.element.data('oembed', url);\n                                        widget.element.data('oembed_provider', provider.name);\n                                        widget.element.addClass('oembed-provider-' + provider.name);\n\n                                        elementAdded = true;\n                                    } else {\n                                        alert(editor.lang.oembed.noEmbedCode);\n                                    }\n                                },\n                                onError: function(externalUrl) {\n                                    if (externalUrl.indexOf(\"vimeo.com\") > 0) {\n                                        alert(editor.lang.oembed.noVimeo);\n                                    } else {\n                                        alert(editor.lang.oembed.Error);\n                                    }\n\n                                },\n                                afterEmbed: function() {\n                                    editor.fire('change');\n                                },\n                                maxHeight: maxHeight,\n                                maxWidth: maxWidth,\n                                useResponsiveResize: responsiveResize,\n                                embedMethod: 'editor',\n                                title: title,\n                                expandUrl: false\n                            });\n                    }\n\n                    CKEDITOR.dialog.add('oembed',\n                        function(editor) {\n                            return {\n                                title: editor.lang.oembed.title,\n                                minWidth: CKEDITOR.env.ie && CKEDITOR.env.quirks ? 568 : 550,\n                                minHeight: 155,\n                                onShow: function() {\n                                    var data = {\n                                        title: this.widget.element.data('title') || '',\n                                        oembed: this.widget.element.data('oembed') || '',\n                                        resizeType: this.widget.element.data('resizeType') || 'noresize',\n                                        maxWidth: this.widget.element.data('maxWidth'),\n                                        maxHeight: this.widget.element.data('maxHeight'),\n                                        align: this.widget.element.data('align') || 'none'\n                                    };\n\n                                    this.widget.setData(data);\n\n                                    this.getContentElement('general', 'resizeType').setValue(data.resizeType);\n\n                                    this.getContentElement('general', 'align').setValue(data.align);\n\n                                    var resizetype = this.getContentElement('general', 'resizeType').getValue(),\n                                        maxSizeBox = this.getContentElement('general', 'maxSizeBox').getElement(),\n                                        sizeBox = this.getContentElement('general', 'sizeBox').getElement();\n\n                                    if (resizetype == 'noresize') {\n                                        maxSizeBox.hide();\n                                        sizeBox.hide();\n                                    } else if (resizetype == \"custom\") {\n                                        maxSizeBox.hide();\n\n                                        sizeBox.show();\n                                    } else {\n                                        maxSizeBox.show();\n\n                                        sizeBox.hide();\n                                    }\n                                },\n\n                                onOk: function() {\n                                },\n                                contents: [\n                                    {\n                                        label: editor.lang.common.generalTab,\n                                        id: 'general',\n                                        elements: [\n                                            {\n                                                type: 'html',\n                                                id: 'oembedHeader',\n                                                html:\n                                                    '<div style=\"white-space:normal;width:500px;padding-bottom:10px\">' +\n                                                        editor.lang.oembed.pasteUrl +\n                                                        '</div>'\n                                            }, {\n                                                type: 'text',\n                                                id: 'embedTitle',\n                                                focus: function() {\n                                                    this.getElement().focus();\n                                                },\n                                                label: editor.lang.oembed.embedTitle,\n                                                setup: function(widget) {\n                                                    if (widget.data.title) {\n                                                        this.setValue(widget.data.title);\n                                                    }\n                                                },\n                                            }, {\n                                                type: 'text',\n                                                id: 'embedCode',\n                                                focus: function() {\n                                                    this.getElement().focus();\n                                                },\n                                                label: editor.lang.oembed.url,\n                                                title: editor.lang.oembed.pasteUrl,\n                                                setup: function(widget) {\n                                                    if (widget.data.oembed) {\n                                                        this.setValue(widget.data.oembed);\n                                                    }\n                                                },\n                                                commit: function(widget) {\n                                                    var dialog = CKEDITOR.dialog.getCurrent(),\n                                                        title = dialog.getValueOf('general', 'embedTitle'),\n                                                        inputCode = dialog.getValueOf('general', 'embedCode')\n                                                            .replace(/\\s/g, \"\"),\n                                                        resizeType = dialog.getContentElement('general', 'resizeType')\n                                                            .getValue(),\n                                                        align = dialog.getContentElement('general', 'align').getValue(),\n                                                        maxWidth = null,\n                                                        maxHeight = null,\n                                                        responsiveResize = false,\n                                                        editorInstance = dialog.getParentEditor();\n\n                                                    if (inputCode.length < 1 || inputCode.indexOf('http') < 0) {\n                                                        alert(editor.lang.oembed.invalidUrl);\n                                                        return false;\n                                                    }\n\n                                                    if (resizeType == \"noresize\") {\n                                                        responsiveResize = false;\n                                                        maxWidth = null;\n                                                        maxHeight = null;\n                                                    } else if (resizeType == \"responsive\") {\n                                                        maxWidth = dialog.getContentElement('general', 'maxWidth')\n                                                            .getInputElement().getValue();\n                                                        maxHeight = dialog.getContentElement('general', 'maxHeight')\n                                                            .getInputElement().getValue();\n\n                                                        responsiveResize = true;\n                                                    } else if (resizeType == \"custom\") {\n                                                        maxWidth = dialog.getContentElement('general', 'width')\n                                                            .getInputElement().getValue();\n                                                        maxHeight = dialog.getContentElement('general', 'height')\n                                                            .getInputElement().getValue();\n\n                                                        responsiveResize = false;\n                                                    }\n\n                                                    embedCode(inputCode,\n                                                        editorInstance,\n                                                        maxWidth,\n                                                        maxHeight,\n                                                        responsiveResize,\n                                                        resizeType,\n                                                        align,\n                                                        widget,\n                                                        title);\n\n                                                    widget.setData('title', title);\n                                                    widget.setData('oembed', inputCode);\n                                                    widget.setData('resizeType', resizeType);\n                                                    widget.setData('align', align);\n                                                    widget.setData('maxWidth', maxWidth);\n                                                    widget.setData('maxHeight', maxHeight);\n                                                }\n                                            },\n                                            {\n                                                type: 'hbox',\n                                                widths: ['50%', '50%'],\n                                                children: [\n                                                    {\n                                                        id: 'resizeType',\n                                                        type: 'select',\n                                                        label: editor.lang.oembed.resizeType,\n                                                        'default': 'noresize',\n                                                        setup: function(widget) {\n                                                            if (widget.data.resizeType) {\n                                                                this.setValue(widget.data.resizeType);\n                                                            }\n                                                        },\n                                                        items: [\n                                                            [editor.lang.oembed.noresize, 'noresize'],\n                                                            [editor.lang.oembed.responsive, 'responsive'],\n                                                            [editor.lang.oembed.custom, 'custom']\n                                                        ],\n                                                        onChange: resizeTypeChanged\n                                                    }, {\n                                                        type: 'hbox',\n                                                        id: 'maxSizeBox',\n                                                        widths: ['120px', '120px'],\n                                                        style: 'float:left;position:absolute;left:58%;width:200px',\n                                                        children: [\n                                                            {\n                                                                type: 'text',\n                                                                width: '100px',\n                                                                id: 'maxWidth',\n                                                                'default': editor.config.oembed_maxWidth != null\n                                                                    ? editor.config.oembed_maxWidth\n                                                                    : '560',\n                                                                label: editor.lang.oembed.maxWidth,\n                                                                title: editor.lang.oembed.maxWidthTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxWidth) {\n                                                                        this.setValue(widget.data.maxWidth);\n                                                                    }\n                                                                }\n                                                            }, {\n                                                                type: 'text',\n                                                                id: 'maxHeight',\n                                                                width: '120px',\n                                                                'default': editor.config.oembed_maxHeight != null\n                                                                    ? editor.config.oembed_maxHeight\n                                                                    : '315',\n                                                                label: editor.lang.oembed.maxHeight,\n                                                                title: editor.lang.oembed.maxHeightTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxHeight) {\n                                                                        this.setValue(widget.data.maxHeight);\n                                                                    }\n                                                                }\n                                                            }\n                                                        ]\n                                                    }, {\n                                                        type: 'hbox',\n                                                        id: 'sizeBox',\n                                                        widths: ['120px', '120px'],\n                                                        style: 'float:left;position:absolute;left:58%;width:200px',\n                                                        children: [\n                                                            {\n                                                                type: 'text',\n                                                                id: 'width',\n                                                                width: '100px',\n                                                                'default': editor.config.oembed_maxWidth != null\n                                                                    ? editor.config.oembed_maxWidth\n                                                                    : '560',\n                                                                label: editor.lang.oembed.width,\n                                                                title: editor.lang.oembed.widthTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxWidth) {\n                                                                        this.setValue(widget.data.maxWidth);\n                                                                    }\n                                                                }\n                                                            }, {\n                                                                type: 'text',\n                                                                id: 'height',\n                                                                width: '120px',\n                                                                'default': editor.config.oembed_maxHeight != null\n                                                                    ? editor.config.oembed_maxHeight\n                                                                    : '315',\n                                                                label: editor.lang.oembed.height,\n                                                                title: editor.lang.oembed.heightTitle,\n                                                                setup: function(widget) {\n                                                                    if (widget.data.maxHeight) {\n                                                                        this.setValue(widget.data.maxHeight);\n                                                                    }\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                ]\n                                            }, {\n                                                type: 'hbox',\n                                                id: 'alignment',\n                                                children: [\n                                                    {\n                                                        id: 'align',\n                                                        type: 'radio',\n                                                        items: [\n                                                            [editor.lang.oembed.none, 'none'],\n                                                            [editor.lang.common.alignLeft, 'left'],\n                                                            [editor.lang.common.alignCenter, 'center'],\n                                                            [editor.lang.common.alignRight, 'right']\n                                                        ],\n                                                        label: editor.lang.common.align,\n                                                        setup: function(widget) {\n                                                            this.setValue(widget.data.align);\n                                                        }\n                                                    }\n                                                ]\n                                            }\n                                        ]\n                                    }\n                                ]\n                            };\n                        });\n                }\n            });\n    }\n)();\n"], "filenames": ["oembed/plugin.js"], "buggy_code_start_loc": [80], "buggy_code_end_loc": [83], "fixing_code_start_loc": [79], "fixing_code_end_loc": [79], "type": "CWE-19", "message": "plugin.js in the w8tcha oEmbed plugin before 2019-03-14 for CKEditor mishandles SCRIPT elements.", "other": {"cve": {"id": "CVE-2019-9870", "sourceIdentifier": "cve@mitre.org", "published": "2019-03-21T16:01:17.483", "lastModified": "2019-03-26T15:09:36.967", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "plugin.js in the w8tcha oEmbed plugin before 2019-03-14 for CKEditor mishandles SCRIPT elements."}, {"lang": "es", "value": "plugin.js en el plugin w8tcha oEmbed en versiones anteriores al 14/03/2019 para CKEditor gestiona de manera incorrecta los elementos SCRIPT."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-19"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oembed_project:oembed:*:*:*:*:*:ckeditor:*:*", "versionEndExcluding": "2019-03-14", "matchCriteriaId": "654F4239-EEC5-44E4-AE3E-1B618334B1C2"}]}]}], "references": [{"url": "https://github.com/w8tcha/CKEditor-oEmbed-Plugin/commit/10f6169e39510bbf5af913886037044458b9dc9b", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/w8tcha/CKEditor-oEmbed-Plugin/issues/94", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/w8tcha/CKEditor-oEmbed-Plugin/commit/10f6169e39510bbf5af913886037044458b9dc9b"}}